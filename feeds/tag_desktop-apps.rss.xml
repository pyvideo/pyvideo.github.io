<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - desktop apps</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 01 Dec 2021 00:00:00 +0000</lastBuildDate><item><title>Hassle Free Desktop Apps with Flask</title><link>https://pyvideo.org/flaskcon-2021/hassle-free-desktop-apps-with-flask.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Flaskwebgui is a Python package which helps you quickly create electron like desktop applications. That way, you can convert a web app into a desktop app with just two extra lines of code.
Flaskwebgui just uses threading underneath to start a flask server and the browser in app mode (for chrome). It has some advantages over flask-desktop because it doesn't use PyQt5, so you won't have any issues regarding licensing and over Eel because you don't need to learn any logic other than Flask. Github link: &lt;a class="reference external" href="https://github.com/ClimenteA/flaskwebgui"&gt;https://github.com/ClimenteA/flaskwebgui&lt;/a&gt; Motivation: At first console apps were enough to solve what I needed, but in time more complex problems appeared that needed a user interface which does a lot of stuff. For something small (some inputs, buttons..) Tkinter does the job even though it looks uglyish. Other alternatives for more complex stuff are PyQT, PySide, wxPython, Kivy, which are good options and you can make nice GUIs with them, but.. I still found it pretty hard to get started. I like Flask - it was very easy to learn and I wanted to use it everywhere. Learning new libraries takes time and time is something we can't buy (yet). I looked for a solution to make the user interface in html/css/javascript with a backend in Flask. I found pywebview which was close of what I needed, but for whatever reason some javascript code didn’t got executed as it should have(js worked in a normal browser, but not in pywebview window). I also had issues when I tried to freeze it with Pyinstaller — all of them probably having a solution somewhere, but I just wanted to ship it and leave it. That's how flaskwebgui was &lt;cite&gt;born&lt;/cite&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alin Climente</dc:creator><pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-12-01:/flaskcon-2021/hassle-free-desktop-apps-with-flask.html</guid><category>FlaskCon 2021</category><category>flask</category><category>desktop apps</category><category>gui</category></item></channel></rss>