<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 06 Nov 2016 00:00:00 +0000</lastBuildDate><item><title>Rethinking package management</title><link>https://pyvideo.org/pycon-ireland-2016/rethinking-package-management.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Packaging is a hard problem. Still every language/distribution tries
to invent packaging on their own. This leaves us (developers /
sysadmins) with a big number of tools that we need to master in order
to do our job. We will look at how Nix[1] and NixOS[2] can be used in
today's software development processes and which are the benefits and
drawbacks you might face. In this talk we will look into how Nix can
be used to solve some problems we face when developing with python and
how it might just be the right tool for your next project.&lt;/p&gt;
&lt;p&gt;[1] Nix is a powerful package manager for Linux and other Unix systems
that makes package management reliable and reproducible. It provides
atomic upgrades and rollbacks, side-by-side installation of multiple
versions of a package, multi-user package management and easy setup of
build environments.&lt;/p&gt;
&lt;p&gt;[2] NixOS is a Linux distribution built on top of the Nix package
manager, it is completely declarative, makes upgrading systems
reliable, and has many other advantages.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rok Garbas</dc:creator><pubDate>Sun, 06 Nov 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-11-06:pycon-ireland-2016/rethinking-package-management.html</guid></item></channel></rss>