<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 05 Dec 2019 00:00:00 +0000</lastBuildDate><item><title>MAP all the things</title><link>https://pyvideo.org/pydata-la-2019/map-all-the-things.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Embedding techniques like word2vec and doc2vec are taking over the
world. An up and coming technique for embedding numeric data is UMAP.
How would you go about applying UMAP to real word data? How about text
data? What about malware? In this talk we’ll learn how to MAP all the
things!&lt;/p&gt;
&lt;p&gt;Embedding techniques are taking over the world. From word2vec to embed
words, all the way to Latent Dirichlet Allocation and doc2vec to embed
documents. All these techniques are really about turning non-numeric
data into vector space data suitable for either machine learning or
visualization. An up and coming technique for embedding numeric data is
&lt;a class="reference external" href="https://github.com/lmcinnes/umap"&gt;UMAP&lt;/a&gt;. How would you go about
applying UMAP to word data? How about text data? What about malware? In
this talk we’ll learn how to MAP all the things!&lt;/p&gt;
&lt;p&gt;We’ll introduce you to a new technique called WordMAP for generating
very low dimensional word embeddings by making use of UMAP. With this
technique in hand one can generalize to a document embedding algorithm
we're calling DocMAP. This approach ultimately only requires sequences
of tokens and thus can apply to much broader classes of problems. We’ll
demonstrate this by applying a variation of DocMAP to the problem of
mapping the space of malware based on it’s behaviour.&lt;/p&gt;
&lt;p&gt;While the math behind UMAP might be challenging to some this talk will
focus more on how to apply it in novel situations and take a more
practical approach to things. If you have problems that can fit in this
framework you should come and learn how to MAP all the things!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Healy</dc:creator><pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-12-05:pydata-la-2019/map-all-the-things.html</guid></item><item><title>HDBSCAN, Fast Density Based Clustering, the How and the Why</title><link>https://pyvideo.org/pydata-new-york-city-2018/hdbscan-fast-density-based-clustering-the-how-and-the-why.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Healy</dc:creator><pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-17:pydata-new-york-city-2018/hdbscan-fast-density-based-clustering-the-how-and-the-why.html</guid></item><item><title>How to Identify, Train and Grow Junior Developers</title><link>https://pyvideo.org/pygotham-2017/how-to-identify-train-and-grow-junior-developers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the biggest problems facing any growing software-based company is finding the right engineers to grow the team. Often, engineering leadership responds to this need by engaging a variety of outside resources, including recruiters or internal HR departments. Unfortunately, these resources tend to be ill-equipped to find the right talent, instead taking a one-size-fits-all approach that leads the growing company to compete over the same limited and expensive resources that big companies look for.
In this talk, you'll learn how to find the many great individuals passed over by this process, many of whom are likely better fits for your business than even the best on-paper candidate. You'll learn how to help these people become great contributors to your team, often more quickly than expected. Finally, you'll learn about some pitfalls to avoid as a company in order to get the best out of your employees.
If you're new to Python or software development, this talk is also for you! You'll learn how to get the most out of your education, whether its self study, college, or a bootcamp. You'll learn how to identify small and growing teams that are worth your time and energy. Most importantly, you'll learn that breaking in to the industry takes work, but its not as hard as you think it is!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Healy</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:pygotham-2017/how-to-identify-train-and-grow-junior-developers.html</guid></item><item><title>Clustering: A Guide for the Perplexed</title><link>https://pyvideo.org/pydata-dc-2016/clustering-a-guide-for-the-perplexed.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Finding clusters is a powerful tool for understanding and exploring data. While the task sounds easy, it can be surprisingly difficult to do it well. Most standard clustering algorithms can, and do, provide very poor clustering results in many cases. We discuss how to do clustering correctly.&lt;/p&gt;
&lt;p&gt;Finding clusters is a powerful tool for understanding and exploring data. While the task sounds easy, it can be surprisingly difficult to it well. Most standard clustering algorithms can, and do, provide very poor clustering results in many cases. Our intuitions for what a cluster is are not as clear as we would like, and can easily be lead astray. We will attempt to find a definition of clustering that makes sense for most cases, and introduce an algorithm for finding such clusters, along with a high performance python implementation of the algorithm, building up more intuition for what clustering really means as we go.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Leland McInnes</dc:creator><pubDate>Sat, 08 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-08:pydata-dc-2016/clustering-a-guide-for-the-perplexed.html</guid></item></channel></rss>