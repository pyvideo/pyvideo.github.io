<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_nir-soffer.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-06-13T00:00:00+00:00</updated><entry><title>Let me sleep on it improving concurrency in unexpected ways</title><link href="https://pyvideo.org/pycon-israel-2017/let-me-sleep-on-it-improving-concurrency-in-unexpected-ways.html" rel="alternate"></link><published>2017-06-13T00:00:00+00:00</published><updated>2017-06-13T00:00:00+00:00</updated><author><name>Nir Soffer</name></author><id>tag:pyvideo.org,2017-06-13:pycon-israel-2017/let-me-sleep-on-it-improving-concurrency-in-unexpected-ways.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Contrary to the common belief, Python has real threads and even with the famous GIL, they can be used in useful ways. Vdsm is a heavily multi-threaded Python program, constantly juggling tens of threads waiting for blocking system calls. In this talk we will explore a real world thread synchronization problem taken from Vdsm's LVM cache module. We will demonstrate the problem using simple tests and show the unexpected solution.&lt;/p&gt;
</summary></entry></feed>