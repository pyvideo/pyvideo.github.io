<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_configobj.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2009-02-17T00:00:00+00:00</updated><entry><title>PyCon 2009: A Configuration Comparison in Python (#70)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--a-configuration-comparison-in-python-.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--a-configuration-comparison-in-python-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A Configuration Comparison in Python&lt;/p&gt;
&lt;p&gt;Presented at PyCon 2009 by Terry Peppers&lt;/p&gt;
&lt;p&gt;When faced with the simple task of figuring out how to use configuration
to your advantage in Python there are a myriad of methods. The purpose
of this talk is to walk through the standard library modules and the
popular Python Package Index modules comparing and contrasting
configuration formats and the code that consumes them. Specifically, I
would like to walk through the use of the csv module, the ConfigParser
module, ConfigObj, lxml, PyYaml and SimpleJSON.&lt;/p&gt;
</summary><category term="configobj"></category><category term="configparser"></category><category term="csv"></category><category term="lxml"></category><category term="pycon"></category><category term="pycon2009"></category><category term="pyyaml"></category><category term="simplejson"></category></entry></feed>