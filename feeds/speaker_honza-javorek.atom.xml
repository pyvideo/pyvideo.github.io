<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_honza-javorek.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-03-12T00:00:00+00:00</updated><entry><title>Because Web API Testing Should Be Easy</title><link href="https://pyvideo.org/pycon-sk-2017/because-web-api-testing-should-be-easy.html" rel="alternate"></link><published>2017-03-12T00:00:00+00:00</published><updated>2017-03-12T00:00:00+00:00</updated><author><name>Honza Javorek</name></author><id>tag:pyvideo.org,2017-03-12:pycon-sk-2017/because-web-api-testing-should-be-easy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web APIs are often called REST APIs, which recently became a part of the everyday life of many Python developers. Sure, it can be a blast to build an API with frameworks like Django or Flask, but writing tests for it can be a tedious drag: asserting every single HTTP code, set of headers, JSON responses, error states… you know the drill. Despite all that you do, you still need to assure your API clients won’t be exposed to any unexpected surprises. At Apiary, we've developed an Open Source testing framework called Dredd, which has baked in first-class Python support. It does all the heavy lifting and boring stuff for you while allowing you to alter the test cases with arbitrary Python code. Let Judge Dredd do your API justice.&lt;/p&gt;
</summary></entry></feed>