<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_dani-serven-marin.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-07-08T00:00:00+00:00</updated><entry><title>pyGAM: balancing interpretability and predictive power using Generalized Additive Models in Python</title><link href="https://pyvideo.org/pydata-berlin-2018/pygam-balancing-interpretability-and-predictive-power-using-generalized-additive-models-in-python.html" rel="alternate"></link><published>2018-07-08T00:00:00+00:00</published><updated>2018-07-08T00:00:00+00:00</updated><author><name>Dani Servén Marín</name></author><id>tag:pyvideo.org,2018-07-08:pydata-berlin-2018/pygam-balancing-interpretability-and-predictive-power-using-generalized-additive-models-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With nonlinear models it is difficult to find a balance between
predictive power and interpretability. How does feature A affect the
output y? How will the model extrapolate? Generalized Additive Models
are flexible and interpretable, with great implementations in R, but few
options in the Python universe. pyGAM is a new open source library that
offers to fill this gap.&lt;/p&gt;
</summary></entry></feed>