<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_simon-kelly.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-10-07T00:00:00+00:00</updated><entry><title>Building for 100x scale</title><link href="https://pyvideo.org/pycon-za-2016/building-for-100x-scale.html" rel="alternate"></link><published>2016-10-07T00:00:00+00:00</published><updated>2016-10-07T00:00:00+00:00</updated><author><name>Simon Kelly</name></author><id>tag:pyvideo.org,2016-10-07:pycon-za-2016/building-for-100x-scale.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;CommCare is an open source platform built in python (Django) designed
for mobile data collection, longitudinal client tracking, decision
support, and behavior change communication. CommCare provides an online
application-building platform through which users build mobile
applications for use by frontline workers.&lt;/p&gt;
&lt;p&gt;The mobile application is used by client-facing frontline work workers
as a client management, data collection and educational tool. Data
entered in the mobile application is submitted to the CommCare servers.&lt;/p&gt;
&lt;p&gt;Currently CommCare supports 14K active mobile users submitting over 1
million forms a month. With new national projects launching soon, it
will need to be able to support 100K users and up to 10 million monthly
forms by the end of 2016 and 1.4M users within the next few years. The
current architecture would not scale to that level due to limitations of
the database and increasing cost of ownership so we have embarked on an
internal project to re-design critical pieces of the platform in order
to support this scale up.&lt;/p&gt;
&lt;p&gt;This talk will describe the old and new architecture and delve into some
of the details of the new architecture and decisions weâ€™ve made along
the way such as changing our primary database, database sharding and
stream processing.&lt;/p&gt;
</summary></entry></feed>