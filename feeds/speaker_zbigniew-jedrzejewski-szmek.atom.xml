<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_zbigniew-jedrzejewski-szmek.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-07-28T00:00:00+00:00</updated><entry><title>Keeping library compatible with Python 2.6-3.4 using python-systemd as example</title><link href="https://pyvideo.org/pyohio-2013/keeping-library-compatible-with-python-26-34-u.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Zbigniew JÄ™drzejewski-Szmek</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/keeping-library-compatible-with-python-26-34-u.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;How hard is it to port a library to python 3? How much work is it going
forward? Based on two examples (a pure Python, and a C-extension-based
library), I want to show how in my experience the work required is
modest, without significant impact on old code. At the same time,
keeping Python2 compatibility constrains development under Python 3
because only the common subset of features can be used.&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>