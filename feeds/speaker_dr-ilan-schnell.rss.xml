<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 27 Jul 2014 00:00:00 +0000</lastBuildDate><item><title>Conda: a cross-platform package manager for any binary distribution</title><link>https://pyvideo.org/pydata-berlin-2014/conda-a-cross-platform-package-manager-for-any-b-0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Conda is an open source package manager, which can be used to manage
binary packages and virtual environments on any platform. It is the
package manager of the Anaconda Python distribution, although it can be
used independently of Anaconda. We will look at how conda solves many of
the problems that have plagued Python packaging in the past, followed by
a demonstration of its features. We will look at the issues that have
plagued packaging in the Python ecosystem in the past, and discuss how
Conda solves these problems. We will show how to use conda to manage
multiple environments. Finally, we will look at how to build your own
conda packages.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Ilan Schnell</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pydata-berlin-2014/conda-a-cross-platform-package-manager-for-any-b-0.html</guid></item><item><title>Conda: A Cross Platform Package Manager for any Binary Distribution</title><link>https://pyvideo.org/scipy-2014/conda-a-cross-platform-package-manager-for-any-b.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Conda is an open source package manager, which can be used to manage
binary packages and virtual environments on any platform. It is the
package manager of the Anaconda Python distribution, although it can be
used independently of Anaconda. We will look at how conda solves many of
the problems that have plagued Python packaging in the past, followed by
a demonstration of its features.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will look at the issues that have plagued packaging in the Python
ecosystem in the past, and discuss how Conda solves these problems. We
will show how to use conda to manage multiple environments. Finally, we
will look at how to build your own conda packages.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What is the packaging problem? We will briefly look at the history of
the problem and the various solutions to it. There are two sides to
the packaging problem: the problem of installing existing packages
and the problem of building packages to be installed. We look at the
history of distutils, setuptools, distribute, and pip, the some of
the problems they solved, and issues that arose, particularly for the
scientific Python community.&lt;/li&gt;
&lt;li&gt;We will look at the conda package format, the design decisions that
guided the format, and the implications of those decisions. A conda
package is a bz2 compressed tarfile of all the files installed in a
prefix, along with a metadata directory for the package. A conda
package is typically installed by hard linking these files into the
install prefix. Conda packages should be relocatable, so that they
can be installed into any prefix. This allows conda packages to be
installed into many virtual environments at once. A conda package is
not Python specific.&lt;/li&gt;
&lt;li&gt;We will look at how basic commands for installation and environment
management. Conda uses a SAT solver to solve package dependency
constraints, which is a simple, rigorous, and modern way to ensure
that the set of packages that are installed are consistent with one
another.&lt;/li&gt;
&lt;li&gt;Conda has an extensive build framework which allows anybody to build
their own conda packages. We will show how to use these tools and how
to upload them to Binstar, a free packaging hosting service.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aaron Meurer</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-09:scipy-2014/conda-a-cross-platform-package-manager-for-any-b.html</guid><category>conda</category><category>packaging</category></item><item><title>Der Python Import Mechanismus und dessen Erweiterungsmöglichkeiten</title><link>https://pyvideo.org/pycon-de-2011/der-python-import-mechanismus-und-dessen-erweiter.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Das Ziel des Vortags ist es, einen Überblick über den Python Import
Mechanismus zu geben und insbesondere die Möglichkeiten zu diskutieren,
diesen zu erweitern.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Ilan Schnell</dc:creator><pubDate>Wed, 05 Oct 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-10-05:pycon-de-2011/der-python-import-mechanismus-und-dessen-erweiter.html</guid></item><item><title>How does Enthought distribute packages? (#108)</title><link>https://pyvideo.org/pycon-us-2010/pycon-2010--how-does-enthought-distribute-package.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How does Enthought distribute packages?&lt;/p&gt;
&lt;p&gt;Presented by Dr. Ilan Schnell&lt;/p&gt;
&lt;p&gt;This presentation gives an overview of how packages are build and
distributed for different operating systems in the Enthought Python
Distribution. Enstaller (&lt;a class="reference external" href="http://pypi.python.org/pypi/Enstaller/4.0.0"&gt;http://pypi.python.org/pypi/Enstaller/4.0.0&lt;/a&gt;) is
a tool I wrote for installing egg-based packages, which are not
necessarily Python packages, such as SWIG or HDF5. I will discuss the
architecture of Enstaller, and in particular the egg-based distribution
format.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Frezz frame in the start of the video]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Ilan Schnell</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--how-does-enthought-distribute-package.html</guid><category>enstaller</category><category>enthought</category><category>pycon</category><category>pycon2010</category></item></channel></rss>