<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 26 Aug 2018 00:00:00 +0000</lastBuildDate><item><title>Multiplayer 2D games with Python Arcade</title><link>https://pyvideo.org/pycon-au-2018/multiplayer-2d-games-with-python-arcade.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python Arcade library makes it very easy to create 2D games--especially for beginners--and there are many examples provided with the package.  This talk will show how to make a multiplayer computer game using Python Arcade, both over a local network, and also on the internet.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Hattingh</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/multiplayer-2d-games-with-python-arcade.html</guid></item><item><title>So you want to make a screencast?</title><link>https://pyvideo.org/pycon-au-2016/so-you-want-to-make-a-screencast.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Caleb Hattingh
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/77/view_talk"&gt;https://2016.pycon-au.org/schedule/77/view_talk&lt;/a&gt;
Well, do you?  If so, there are a bunch of tips and tricks that you can learn that will get you up to speed very quickly.&lt;/p&gt;
&lt;p&gt;Creating lesson content is always demanding and time-consuming.  Using screencasts as a medium of instruction is no different, but there are clearly very specific habits that can make you much more efficient.  Specific advice about working with Python and the Jupyter Notebook will also be covered.&lt;/p&gt;
&lt;p&gt;Secondly, this talk will also touch on aspects related to working with a publisher. These will include drafting the initial scope of work, negotiating timelines, and managing feedback and criticism.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Hattingh</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/so-you-want-to-make-a-screencast.html</guid></item><item><title>GPS Tracking with Python</title><link>https://pyvideo.org/pycon-au-2016/gps-tracking-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is very well-suited to implement GPS tracking services. Devices need to report position data to servers, and Python handles this role well, especially with the new support for asynchronous event loops in Python 3 which can handle tens of thousands of simultaneous connections. In addition, the struct module in the Python standard library makes short work of processing binary data supplied by devices. In addition to basic interaction with tracking devices, this talk will also present methods of integration (server) testing using py.test, as well as considerations regarding support for both UDP and TCP protocols in the same stack, since different GPS tracking devices may prefer one or the other.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Hattingh</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:pycon-au-2016/gps-tracking-with-python.html</guid><category>Internet-of-Things</category><category>GPS</category></item><item><title>Easy wins with Cython: fast and multi-core</title><link>https://pyvideo.org/pycon-au-2015/easy-wins-with-cython-fast-and-multi-core.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has often been criticised for slow runtime performance, and for
the GIL which prevents multi-core concurrency. Cython provides tools for
addressing both issues, and in a way that is simple enough for the
average programmer to use.&lt;/p&gt;
&lt;p&gt;This talk will show:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How to get started with Cython&lt;/li&gt;
&lt;li&gt;Tools to make day-to-day Cython work easier&lt;/li&gt;
&lt;li&gt;How to dramatically speed up a slow function&lt;/li&gt;
&lt;li&gt;How to distribute work over multiple CPU cores&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Hattingh</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-04:pycon-au-2015/easy-wins-with-cython-fast-and-multi-core.html</guid></item><item><title>Trials &amp; tribulations teaching Python at CoderDojo</title><link>https://pyvideo.org/pycon-au-2015/trials-tribulations-teaching-python-at-coderdoj.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will relate the experience of teaching coding, including
Python, to a (nominally) 6-18 age group at a local Brisbane CoderDojo
for 2015 Term 1 and 2.&lt;/p&gt;
&lt;p&gt;Scratch and Alice have become very popular for teaching beginner coding
at CoderDojo events. Languages such as Python, and even HTML/CSS, are
more difficult to introduce, partly because more skills are required
before something &amp;quot;useful&amp;quot; can be created, and partly because the
&amp;quot;building blocks&amp;quot; are usually not presented with the same visual
immediacy as Scratch, and similar environments. This talk presents some
of the difficulties found in transitioning from graphical environments
to Python, and observations in using existing tools for learning Python
with younger students.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Hattingh</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-04:pycon-au-2015/trials-tribulations-teaching-python-at-coderdoj.html</guid></item></channel></rss>