<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 22 Jun 2018 00:00:00 +0000</lastBuildDate><item><title>7 советов по редактированию кода в PyCharm</title><link>https://pyvideo.org/pycon-russia-2018/7-sovetov-po-redaktirovaniiu-koda-v-pycharm.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Андрей Власовских&lt;/strong&gt; , JetBrains&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/vlasovskih/"&gt;**7 советов по редактированию кода в
PyCharm**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Среды разработки больше всего известны своими интеграциями с
инструментами и возможностями по навигации в проектах. А как насчёт
редактирования кода?&lt;/p&gt;
&lt;p&gt;Я расскажу о 7 приёмах редактирования кода в среде PyCharm, которые
невозможно или сложно реализовать в текстовых редакторах. Эти приёмы
выполняют действия не над строками, а над синтаксическими и
семантическими структурами Python: переменными, выражениями, функциями.
Мы обсудим, позволяет ли это редактировать код быстрее и какие
недостатки есть у этого подхода.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Андрей Власовских</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/7-sovetov-po-redaktirovaniiu-koda-v-pycharm.html</guid></item><item><title>Aiohttp от автора</title><link>https://pyvideo.org/pycon-russia-2018/aiohttp-ot-avtora.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Андрей Светлов&lt;/strong&gt; , Python Core Developer&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/svetlov/"&gt;**Aiohttp от автора**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;В докладе расскажу про текущую ситуацию, опишу планы на будущее и дам
советы по правильному применению.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Андрей Светлов</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/aiohttp-ot-avtora.html</guid></item><item><title>Архитектура чат-бота</title><link>https://pyvideo.org/pycon-russia-2018/arkhitektura-chat-bota.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Марина Камалова&lt;/strong&gt; , Яндекс&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/kamalova/"&gt;**Архитектура чат-бота**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Я расскажу, из каких python-компонентов можно создать текстового
чат-бота. Что происходит от момента получения пользовательского
сообщения до момента получения ответа от бота (NLU, NLG,
ML-классификаторы). Как адаптировать бота под разные мессенджеры и не
только мессенджеры. А также, как повысить отказоустойчивость бота на
примере Telegram API.&lt;/p&gt;
&lt;p&gt;Доклад будет интересен всем, кто так или иначе интересуется созданием
чат- ботов, в том числе для Telegram. Возможно, тем, кто хочет применить
знания по NLP.&lt;/p&gt;
&lt;p&gt;После моего доклада вы поймёте, как и из каких «кирпичиков» сделать
чат-бота, а также как сделать его на берегу отказоустойчивым и
масштабируемым.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Марина Камалова</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/arkhitektura-chat-bota.html</guid></item><item><title>Асинхронность изнутри</title><link>https://pyvideo.org/pycon-russia-2018/asinkhronnost-iznutri.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Алексей Кузьмин&lt;/strong&gt; , ДомКлик&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/kuzmin/"&gt;**Асинхронность изнутри**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Асинхронность способна вдохнуть новую жизнь в ваши программы. При
правильном применении она способна драматически повысить
производительность вашего сервисов. Однако, чтобы эффективно и
качественно использовать этот инструмент, нужно хорошо понимать, как он
устроен. В докладе я расскажу про сильные и слабые стороны асинхронного
программирования, покажу, как устроен этот механизм внутри Python’а. Я
рассмотрю несколько полезных библиотек и инструментов. В завершении мы
поговорим про то, как правильно измерять и отлаживать асинхронный код.
Доклад будет полезен любому, кто пишет production- код.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Алексей Кузьмин</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/asinkhronnost-iznutri.html</guid></item><item><title>Asyncio сегодня и завтра</title><link>https://pyvideo.org/pycon-russia-2018/asyncio-segodnia-i-zavtra.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Юрий Селиванов&lt;/strong&gt; , EdgeDB, asyncio&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/selivanov/"&gt;**Asyncio сегодня и завтра**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Юрий Селиванов</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/asyncio-segodnia-i-zavtra.html</guid></item><item><title>High Performance Data Processing in Python</title><link>https://pyvideo.org/pycon-russia-2018/high-performance-data-processing-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Donald Whyte&lt;/strong&gt; , Engineers Gate&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/whyte/"&gt;**High Performance Data Processing in
Python**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Internet age generates vast amounts of data. Most of this data is
unstructured and needs to cleaned. Python has become the standard tool
for transforming this data into more useable forms.&lt;/p&gt;
&lt;p&gt;numpy and pandas are the most popular Python libraries for processing
large quantities of data. For small datasets, these libraries do the job
without much effort. However, when running complex transformations on
larger datasets, many developers fall into common pitfalls that kill the
performance of these libraries.&lt;/p&gt;
&lt;p&gt;This talk explains how numpy and pandas work under the hood and how they
use vectorisation to process large amounts of data extremely quickly. We
show an example dataset being processed using numpy/pandas. We
demonstrate how to use these libraries effectively, reducing the
processing time of this large dataset from several hours to seconds.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Donald Whyte</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/high-performance-data-processing-in-python.html</guid></item><item><title>Industrial Data Pipelines with Python and Airflow</title><link>https://pyvideo.org/pycon-russia-2018/industrial-data-pipelines-with-python-and-airflow.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Alejandro Saucedo&lt;/strong&gt; , Eigen Technologies&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/Alejandro/"&gt;**Industrial Data Pipelines with Python and
Airflow**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This talk will provide a practical deep dive on how to build
industry-ready machine learning / data pipelines using Airflow. This
will consist of a practical presentation that will build from the basics
of Airflow, and show how it is possible to build scalable and
distributed machine learning data pipelines using a distributed
architecture with a Celery backend. I will provide insights on some of
the key learnings I've obtained throughout my career building &amp;amp;
deploying machine learning systems in critical environments across
several sectors.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alejandro Saucedo</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/industrial-data-pipelines-with-python-and-airflow.html</guid></item><item><title>Юнит-тесты в проектах Поиска mail.ru</title><link>https://pyvideo.org/pycon-russia-2018/iunit-testy-v-proektakh-poiska-mailru.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Вадим Пуштаев&lt;/strong&gt; , Mail.Ru&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/pushtaev/"&gt;**Юнит-тесты в проектах Поиска
mail.ru**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Я расскажу, как мы в Поиске пишем юнит-тесты. От мелочей типа: как
именовать, какова структура каждого теста и т.д., до крупных вопросов:
как дела с TDD, как мокать, как быть с внешними системами, типа баз
данных, с файловой системой, как мы живем с fixtures, почему надо
тестировать приватные методы и подобное.&lt;/p&gt;
&lt;p&gt;Доклад будет полезен для любого уровня разработчиков и широкого спектра
проектов: от веб-приложений до крупных систем типа биллинга.&lt;/p&gt;
&lt;p&gt;Я постараюсь отдельно донести принципы, которыми мы руководствуемся, и
отдельно приемы, с помощью которых мы этим принципам следуем. После
доклада можно будет немедленно переосмыслить подходы к
юнит-тестированию, которые разработчики применяют в своих проектах.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Вадим Пуштаев</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/iunit-testy-v-proektakh-poiska-mailru.html</guid></item><item><title>Как перестать заботиться об окружении и начать жить</title><link>https://pyvideo.org/pycon-russia-2018/kak-perestat-zabotitsia-ob-okruzhenii-i-nachat-zhit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Антон Патрушев&lt;/strong&gt; , Spherical&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/patrushev/"&gt;**Как перестать заботиться об окружении и начать
жить**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Что разработчик хочет от хорошего, отлаженного окружения?
Предсказуемости, скорости развёртывания, минимальных телодвижений.
Чик-чик и работать. Каждый, кто занимается профессиональной разработкой
на чём угодно старается сделать свою ежедневную деятельность более
комфортной. Это хорошо видно по количеству инструментов, которые
доступны разработчикам: их арсенал ширится с каждым годом. При этом, как
и везде, серебряной пули нет: чтобы достичь желаемого приходится долго
копать их все, подбирать подходящую комбинацию инструментов под себя и
«дружить» их между собой.&lt;/p&gt;
&lt;p&gt;Я много общаюсь с коллегами по цеху и очень часто наблюдаю картину, что,
вне зависимости от размера и возраста компании или команды, оптимизации
окружения уделяется слишком мало внимания.&lt;/p&gt;
&lt;p&gt;Мы в Spherical нашли отличную комбинацию инструментов почти с самого
начала. Именно ею я и хотел бы поделиться, затронув ключевые аспекты и
нюансы различных механизмов нашего окружения.&lt;/p&gt;
&lt;p&gt;Итак:&lt;/p&gt;
&lt;p&gt;— devpi: почему вы обязательно должны иметь свой package index и о том,
почему у нас их много;&lt;/p&gt;
&lt;p&gt;— как нужно дружить с extras_require из setup.py чтобы было легко;&lt;/p&gt;
&lt;p&gt;— pew и почему он, на наш взгляд, лучше альтернатив;&lt;/p&gt;
&lt;p&gt;— зачем нужен Docker на машине каждого разработчика.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Антон Патрушев</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/kak-perestat-zabotitsia-ob-okruzhenii-i-nachat-zhit.html</guid></item><item><title>Как поддерживать согласованность API в микросервисной архитектуре</title><link>https://pyvideo.org/pycon-russia-2018/kak-podderzhivat-soglasovannost-api-v-mikroservisnoi-arkhitekture.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Максим Мазаев&lt;/strong&gt; , ЦИАН&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/mazaev/"&gt;**Как поддерживать согласованность API в микросервисной
архитектуре**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Я расскажу о принципах разработки микросервисов в ЦИАН и о том, как мы
боремся с типичными проблемами их поддержки — версионированием и
согласованностью API. Как менять API, ничего не поломав. Как
контролировать согласованность через CI-систему. Рассмотрим вопросы
кодогенерации и swagger-схем.&lt;/p&gt;
&lt;p&gt;Доклад будет полезен разработчикам, интересующимся микросервисной
архитектурой.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Максим Мазаев</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/kak-podderzhivat-soglasovannost-api-v-mikroservisnoi-arkhitekture.html</guid></item><item><title>Как сделать удобную для пользователей поисковую систему</title><link>https://pyvideo.org/pycon-russia-2018/kak-sdelat-udobnuiu-dlia-polzovatelei-poiskovuiu-sistemu.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Сергей Карпович, Вадим Березкин&lt;/strong&gt; , mos.ru&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/karpovich/"&gt;**Как сделать удобную для пользователей поисковую
систему**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Яндекс и Гугл демонстрируют высокий уровень удобства использования и
качества поиска, они дают ответ, учитывая намерение пользователя.
Существующие бесплатные поисковые системы не могут искать также, как
Яндекс и Гугл, не могут удовлетворить все потребности бизнеса и
пользователей, требуется настройка поискового движка и доработка
инфраструктуры поисковой системы.&lt;/p&gt;
&lt;p&gt;Мы расскажем о доступных инструментах и способах настройки удобства
использования, качества и релевантности внутреннего поиска на примере
Elasticsearch, Python.&lt;/p&gt;
&lt;p&gt;Доклад будет полезен разработчикам поисковых систем для сайтов и
порталов.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Сергей Карпович</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/kak-sdelat-udobnuiu-dlia-polzovatelei-poiskovuiu-sistemu.html</guid></item><item><title>Конференция PyCon Russia 2018</title><link>https://pyvideo.org/pycon-russia-2018/konferentsiia-pycon-russia-2018.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/konferentsiia-pycon-russia-2018.html</guid></item><item><title>Машинное обучение для извлечения данных из веба</title><link>https://pyvideo.org/pycon-russia-2018/mashinnoe-obuchenie-dlia-izvlecheniia-dannykh-iz-veba.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Михаил Коробов&lt;/strong&gt; , ScrapingHub&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/korobov/"&gt;**Машинное обучение для извлечения данных из
веба**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Все знают, как написать веб-паука на Python: берем Scrapy / Selenium /
requests и скачиваем странички с сайта, затем используем XPath / CSS /
BeautifulSoup селекторы (+ регулярные выражения), чтоб извлечь нужную
информацию. Но подходы сильно отличаются, когда информацию хочется
автоматически извлечь из сотен тысяч сайтов - правил и эвристик тут
недостаточно.&lt;/p&gt;
&lt;p&gt;В докладе я расскажу о том, каким образом машинное обучение может
применяться для написания «умных» веб-пауков:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;как классифицировать веб-страницы;&lt;/li&gt;
&lt;li&gt;как научить пауков «понимать» элементы страниц: веб-формы, паджинацию
и т.д.&lt;/li&gt;
&lt;li&gt;как выделять информацию из веб-страниц в структурном виде;&lt;/li&gt;
&lt;li&gt;как научить пауков не скачивать ненужные страницы - дубликаты,
страницы не по теме.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Будут примеры из практики, в том числе примеры использования Deep
Learning и Reinforcement Learning; расскажу также о доступных
Open-Source компонентах, из которых можно таких умных пауков собирать.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Михаил Коробов</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/mashinnoe-obuchenie-dlia-izvlecheniia-dannykh-iz-veba.html</guid></item><item><title>NLP to Discover Rich Insights from Massive Noisy Text</title><link>https://pyvideo.org/pycon-russia-2018/nlp-to-discover-rich-insights-from-massive-noisy-text.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Ling Zhang&lt;/strong&gt; , Aiden.ai&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/ling/"&gt;**NLP to Discover Rich Insights from Massive Noisy
Text**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this talk, I present a case study of how we extracted rich,
actionable insights from a large noisy corpus of unstructured survey
responses for a government entity. We reduce time to analysis from
months to minutes. We use scikit-learn and NLTK to explore techniques
such as clustering, natural language understanding, and summarization,
and go over both practical methods and the underlying theory.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ling Zhang</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/nlp-to-discover-rich-insights-from-massive-noisy-text.html</guid></item><item><title>Переход на SOA в существующем Python-проекте. Тяжеловато или ничего?</title><link>https://pyvideo.org/pycon-russia-2018/perekhod-na-soa-v-sushchestvuiushchem-python-proekte-tiazhelovato-ili-nichego.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Евгений Слезко&lt;/strong&gt; , Marilyn System&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/slezko/"&gt;**Переход на SOA в существующем Python-проекте. Тяжеловато или
ничего?**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;В докладе я поделюсь нашим опытом внедрения сервисно-ориентированной
архитектуры в системе, которая разрабатывается на языке Python уже более
5 лет. Зачем это нужно? Какие проблемы решает, а какие создает? О чем
стоит позаботиться в самом начале? Какой профит как с точки зрения
инженера, так и с точки зрения управления разработкой?&lt;/p&gt;
&lt;p&gt;Доклад рассчитан на опытных разработчиков, системных архитекторов и
руководителей разных уровней, которые столкнулись или столкнутся с
вопросом перехода на сервисно-ориентированную архитектуру в своих
проектах.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Евгений Слезко</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/perekhod-na-soa-v-sushchestvuiushchem-python-proekte-tiazhelovato-ili-nichego.html</guid></item><item><title>Reinforcement Learning</title><link>https://pyvideo.org/pycon-russia-2018/reinforcement-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Melanie Warrick&lt;/strong&gt; , Google&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/Warrick/"&gt;**Reinforcement Learning**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Reinforcement learning is a popular subfield in machine learning because
of its success in beating humans at complex games like Go and Atari. The
field’s value is in utilizing an award system to develop models and find
more optimal ways to solve complex, real-world problems. This approach
allows software to adapt to its environment without full knowledge of
what the results should look like. This talk will cover reinforcement
learning fundamentals and examples to help you understand how it works.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Melanie Warrick</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/reinforcement-learning.html</guid></item><item><title>Сделано на коленке: как из парсера получился полноценный проект</title><link>https://pyvideo.org/pycon-russia-2018/sdelano-na-kolenke-kak-iz-parsera-poluchilsia-polnotsennyi-proekt.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Елена Никитина&lt;/strong&gt; , Система&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/nikitina/"&gt;**Сделано на коленке: как из парсера получился полноценный
проект**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Что вы делаете, когда вас пытаются вытащить на конференцию со словами «у
тебя же такой крутой проект, почему бы тебе о нем не рассказать?»&lt;/p&gt;
&lt;p&gt;Часто приходится встречать ярких разработчиков, которые решают самые
неординарные задачи, но годами не выходят за пределы своей команды. Я и
сама, профессионально программируя на С++ более 10 лет, так и не
выпустила ни один публичный проект на этом языке. А хотелось.&lt;/p&gt;
&lt;p&gt;Поэтому давайте расслабимся и поговорим о том, как разработчик может
принести пользу сообществу, получить удовольствие, прославиться и все
это - одновременно.&lt;/p&gt;
&lt;p&gt;В докладе я расскажу о том, как:&lt;/p&gt;
&lt;p&gt;— начать свой первый open-source проект так, чтобы он стал заметным;&lt;/p&gt;
&lt;p&gt;— доработать идею на костылях до полноценного проекта, не принуждая
себя;&lt;/p&gt;
&lt;p&gt;— собираются устойчивые команды и что вам даст такая команда;&lt;/p&gt;
&lt;p&gt;— использовать такой проект для разностороннего развития.&lt;/p&gt;
&lt;p&gt;А также кое-что про реверс-инжиниринг сайтов, недооцененные возможности
хабра и о том, как Ярославль и Санкт-Петербург помогали Москве
отлаживать код.&lt;/p&gt;
&lt;p&gt;Доклад — для разработчиков любого уровня. Если вы хотите помогать
другим, мечтаете о своем гитхабе и статье на хабре, но не знаете, с чего
начать или просто стесняетесь, — добро пожаловать.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Елена Никитина</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/sdelano-na-kolenke-kak-iz-parsera-poluchilsia-polnotsennyi-proekt.html</guid></item><item><title>Serverless + Python на примере AWS Lambda</title><link>https://pyvideo.org/pycon-russia-2018/serverless-python-na-primere-aws-lambda.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Виталий Давыдов&lt;/strong&gt; , POTEHA DEVELOPERS&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/davydov/"&gt;**Serverless + Python на примере AWS
Lambda**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;В настоящее время для деплоя веб-сервисов компании используют кластеры
из контейнеров, которые нужно поддерживать. Несколько лет назад на рынке
появилась новая FAAS (function-as-a-service) технология для разработки и
деплоя под названием Serverless. Serverless практически полностью
исключает необходимость devops и позволяет разработчикам сфокусироваться
на написании бизнес-логики приложений. На Serverless можно запускать как
высоконагруженные сервисы, так и быстро разрабатывать MVP и прототипы.&lt;/p&gt;
&lt;p&gt;В докладе мы поговорим о том, как перейти на Serverless, какие решения
есть на рынке и сколько это стоит. После доклада мы рассмотрим небольшую
live демку по деплою API на Serverless с использованием Python.&lt;/p&gt;
&lt;p&gt;Доклад будет полезен стартапам, малым и средним компаниям, которые хотят
оптимизировать стоимость разработки, время на devops и
time-to-production.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Виталий Давыдов</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/serverless-python-na-primere-aws-lambda.html</guid></item><item><title>Спортивное программирование на Python</title><link>https://pyvideo.org/pycon-russia-2018/sportivnoe-programmirovanie-na-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Андрей Солдатенко&lt;/strong&gt; , Toptal&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/soldatenko/"&gt;**Спортивное программирование на
Python**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Спортивное программирование — прекрасная дисциплина, чтобы улучшить ваши
навыки в программировании и математике. Обычно все участники используют
C / C ++ / Java, но в последнее десятилетие мы видим, что растет число
участников, которые используют Python.&lt;/p&gt;
&lt;p&gt;Я расскажу, как начать соревноваться, используя Python, дам пару личных
советов и трюков, как подготовиться и начать участвовать в
соревнованиях. Я покажу вам, как мотивировать себя на практике, как
определить класс проблемы и как ее решить. Я продемонстрирую вам
некоторые ограничения Python и способы избежать правильных и быстрых
решений. Расскажу, как овладеть искусством тестирования и как взламывать
и генерировать скрытые тестовые примеры и границы. Также я объясню, как
быстро оценить сложность вашего решения без большого количества
доказательств и математики, чтобы получить желаемый AC (Accepted).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Андрей Солдатенко</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/sportivnoe-programmirovanie-na-python.html</guid></item><item><title>SQLAlchemy: Python vs Raw SQL</title><link>https://pyvideo.org/pycon-russia-2018/sqlalchemy-python-vs-raw-sql.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Денис Катаев&lt;/strong&gt; , Тинькофф&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/kataev/"&gt;**SQLAlchemy: Python vs Raw SQL**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Мы ежедневно работаем с реляционными базами данных: изменяем объекты,
накатываем миграции, создаем индексы. Но иногда нужно агрегировать
данные по нескольким полям или хочется попробовать свежие возможности
реляционных баз данных, например, оператор Union. Django или PeeWee
умеют выражать только простые вещи, поэтому приходится использовать
сырой SQL.&lt;/p&gt;
&lt;p&gt;А вот библиотека SQLAlchemy может выразить любой сложный запрос на
чистом Питоне. Это позволяет писать понятный код и с легкостью его
рефакторить.&lt;/p&gt;
&lt;p&gt;Разберемся на примерах, как SQLAlchemy устроена изнутри, как она
упрощает нашу работу и когда стоит ее применять (спойлер — всегда).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Денис Катаев</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/sqlalchemy-python-vs-raw-sql.html</guid></item><item><title>SSLError, now what?</title><link>https://pyvideo.org/pycon-russia-2018/sslerror-now-what.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Christian Heimes&lt;/strong&gt; , Red Hat&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/Heimes/"&gt;**SSLError, now what?**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;TLS/SSL is the most important and widely-used protocol for secure and
encrypted communication, e.g. HTTPS. It offers more than just
encryption. TLS also ensures data integrity and strong authentication
with X.509 certificates. But it provides merely a false sense of
security if you use it wrong.&lt;/p&gt;
&lt;p&gt;Have you ever encountered SSLError while connecting to a server, but you
didn’t understand what is going on? Are you running production code
without TLS/SSL protection or with certificate validation disabled,
because you couldn’t figure out how to make it work correctly?&lt;/p&gt;
&lt;p&gt;I’ll give you the rundown of the basic cryptographic building blocks,
protocol handshake, inner structure of certificates, and PKI. You’ll
learn about the best practices, debugging tools and tips how to diagnose
TLS/SSL and how to deal with certificates.&lt;/p&gt;
&lt;p&gt;This talk is suitable for both beginner and advanced Pythonistas.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Heimes</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/sslerror-now-what.html</guid></item><item><title>Technical Debt in Python</title><link>https://pyvideo.org/pycon-russia-2018/technical-debt-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Kate Heddleston&lt;/strong&gt; , Shift&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/kate/"&gt;**Technical Debt in Python**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Technical debt is something that every team has to deal with at some
point; often sooner than you'd think. This talk is about what is
technical debt, what specifically does it look in python, and how can
you think about reducing technical debt.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kate Heddleston</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/technical-debt-in-python.html</guid></item><item><title>Tornado vs Aiohttp</title><link>https://pyvideo.org/pycon-russia-2018/tornado-vs-aiohttp.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Дмитрий Ходаков&lt;/strong&gt; , Авито&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/hodakov/"&gt;**Tornado vs Aiohttp**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;На дворе 2018й год, кругом микросервисы в kubernetes и машинное
обучение. У нас в Авито полно и того, и другого. Когда у вас на руках
несколько десятков нагруженных микросервисов поневоле задумаешься о
производительности асинхронных приложений.&lt;/p&gt;
&lt;p&gt;В докладе я расскажу про:&lt;/p&gt;
&lt;p&gt;— типичные проблемы и подводные камни при построении нагруженного
микросервисного фреймворка;&lt;/p&gt;
&lt;p&gt;— профилирование асинхронных приложений;&lt;/p&gt;
&lt;p&gt;— фундаментальные отличия асинхронности tornado и aiohttp;&lt;/p&gt;
&lt;p&gt;— честное сравнение tornado vs aiohttp в условиях, приближенных к
боевым.&lt;/p&gt;
&lt;p&gt;Доклад будет полезен опытным разработчикам Python, которые имеют дело с
асинхронностью и микросервисами, которые сталкиваются с проблемами
масштабирования и отладки асинхронных приложений.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Дмитрий Ходаков</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/tornado-vs-aiohttp.html</guid></item><item><title>Type annotations with large(r) codebases</title><link>https://pyvideo.org/pycon-russia-2018/type-annotations-with-larger-codebases.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Stephan Jaensch&lt;/strong&gt; , Yelp&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/Jaensch/"&gt;**Type annotations with large(r)
codebases**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You've heard about type annotations, you know they help reduce bugs and
improve documentation especially for large codebases, and you've
attended an introductory talk or read a tutorial about using them. But
how do you get started using them with your big, existing codebase? How
do you make sure your colleagues will be annotating new code they write
- or existing code they're changing? And how do you get around some of
the issues you might run into when using the still-beta type checker
mypy on your codebase?&lt;/p&gt;
&lt;p&gt;This talk will start where the typical introductory Python type
annotation talks end and discuss the real-world challenges when starting
to annotate types with an existing codebase of tens or hundreds of
thousands of lines of code. I'll walk you through best practices learned
from doing just that at Yelp, telling you about some of the roadblocks
we hit (and how we got past them). We'll also take a look at:&lt;/p&gt;
&lt;p&gt;— how you can get the most out of type annotations even with
non-annotated third-party libraries&lt;/p&gt;
&lt;p&gt;— how to deal with decorators and other things that currently don't
always work well with annotations&lt;/p&gt;
&lt;p&gt;— when the only way to get proper type checking is through refactoring
your code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephan Jaensch</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/type-annotations-with-larger-codebases.html</guid></item></channel></rss>