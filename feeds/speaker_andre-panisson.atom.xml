<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_andre-panisson.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-04-09T00:00:00+00:00</updated><entry><title>Tensor decomposition with Python: Learning structures from multidimensional data</title><link href="https://pyvideo.org/pycon-italia-2017/tensor-decomposition-with-python-learning-structures-from-multidimensional-data.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Andr√© Panisson</name></author><id>tag:pyvideo.org,2017-04-09:pycon-italia-2017/tensor-decomposition-with-python-learning-structures-from-multidimensional-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many problems in signal processing and machine learning generate massive
amounts of multidimensional data. Data sources from sensor networks and
Internet-of-Things applications promise a wealth of interaction data
that can be naturally represented as tensors. Tensor decompositions have
gained a steadily increasing popularity in data mining and machine
learning, with applications in psychometrics, chemometrics, signal
processing, computer vision, neuroscience, graph analysis, and more. For
example, time-varying social networks collected from wearable proximity
sensors can be represented as 3-way tensors, and tensor decomposition
can be used to extract community structures with their structural and
temporal signatures.&lt;/p&gt;
&lt;p&gt;The current standard framework for working with tensors, however, is
Matlab. We will show how tensor decompositions can be carried out using
Python, how to obtain latent components and how they can be interpreted,
and what are some applications of this technique in the academy and
industry. We will see a use case where a Python implementation of tensor
decomposition is applied to a dataset that describes face-to-face social
interactions of people, collected using the
&lt;a class="reference external" href="http://www.sociopatterns.org/"&gt;SocioPatterns&lt;/a&gt; platform. This
platform was deployed in different settings such as conferences, schools
and hospitals, in order to support mathematical modelling and simulation
of airborne infectious diseases. Tensor decomposition has been used in
these scenarios to solve different types of problems: it is used for
data cleaning, where time-varying graph anomalies can be identified and
removed from data; it have been also used to assess the impact of
face-to-face interactions in the spreading of diseases. These examples
show the potential of this technique in data mining and machine learning
applications.&lt;/p&gt;
</summary><category term="mathematical-modelling"></category><category term="datamining"></category><category term="machine-learning"></category></entry><entry><title>Fusing Online and Face-to-Face Social Networks with Python and RFIDs</title><link href="https://pyvideo.org/pycon-us-2013/fusing-online-and-face-to-face-social-networks-wi.html" rel="alternate"></link><published>2013-03-17T00:00:00+00:00</published><updated>2013-03-17T00:00:00+00:00</updated><author><name>Andre Panisson</name></author><id>tag:pyvideo.org,2013-03-17:pycon-us-2013/fusing-online-and-face-to-face-social-networks-wi.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;We describe the architecture of an application designed to enhance
social interactions at conference gatherings by integrating data from
online social networks and from wearable proximity sensors. The pipeline
that processes the stream of sensor data and provides proximity-based
services is implemented in Python and Twisted, and has been demonstrated
to scale to thousands of simultaneous users.&lt;/p&gt;
</summary><category term="poster"></category></entry></feed>