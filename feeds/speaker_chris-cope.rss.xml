<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 10 Jul 2014 00:00:00 +0000</lastBuildDate><item><title>Building petabyte-scale comparative genomics pipelines</title><link>https://pyvideo.org/scipy-2014/building-petabyte-scale-comparative-genomics-pipe.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will educate the audience about Python tools and best
practices for creating reproducible petabyte-scale pipelines. This is
done within the context of demonstrating a new grammar-based approach to
comparative genomics. The genome grammars are produced using public data
from the National Institutes of Health, streamed over a high-throughput
Internet2 connection to Amazon Web Services.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We introduce a high-performance, open-source application written in
Python that models genomic data with a context-free grammar (CFG), a
construct from formal language theory. This approach is intended to
advance fundamental science by delivering a more extensive model of the
genetic interaction of diseases. Current comparative models treat
genomic sequences as strings, and recent advances are little more than
optimizations of the &amp;quot;grep approach&amp;quot;. However a genome is a grammar: it
is parsed, follows rules, and has an inherent hierarchical structure.
Understanding the structure and rules of this implied grammar are
essential for mapping loci to diseases when those loci are distributed
across genomic regions.&lt;/p&gt;
&lt;p&gt;To produce the CFGs, we have implemented the Sequitur algorithm to run
on the AWS Elastic MapReduce platform. This application is written in
Python and uses the following packages: MRjob, boto, and pandas. This is
a petascale computing pipeline that is successful because it uses
inherently scalable services and is able to take advantage of the 100G
Internet2 connection between Amazon Web Services and the National
Institutes of Health (NIH). This architecture delivers unprecedented
transfer speeds and relatively low latency.&lt;/p&gt;
&lt;p&gt;We discuss the advantages of this architecture, especially for groups
without comparable local resources. In reviewing the results of our
computation, we not only look at methods to measure the utility of our
CFG models, but also the computational advantages of this approach. Just
like the fastest alignment algorithms, this complex approach still
operates within linear-space. In addition, future pairwise comparisons
are faster because our CFGs act as a compressed representation of the
raw sequence data. Our hope is that this CFG approach is further tested
as a replacement for raw sequence analysis. In addition, we hope that
our bioinformatics pipeline serves as an example for the SciPy community
on how to perform large computations across the many petabytes made
available by NIH.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Cope</dc:creator><pubDate>Thu, 10 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-10:scipy-2014/building-petabyte-scale-comparative-genomics-pipe.html</guid></item></channel></rss>