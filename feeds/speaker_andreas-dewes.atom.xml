<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_andreas-dewes.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-25T00:00:00+00:00</updated><entry><title>Data Science meets Data Protection: Keeping your data secure while learning from it.</title><link href="https://pyvideo.org/pycon-de-2018/data-science-meets-data-protection-keeping-your-data-secure-while-learning-from-it.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Andreas Dewes</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/data-science-meets-data-protection-keeping-your-data-secure-while-learning-from-it.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will discuss anonymization and pseudonymization techniques that you
can apply to your data to keep it secure and comply with the law(s)
while still being able to gain useful insights from it.&lt;/p&gt;
&lt;p&gt;We will show concrete Python implementations of various techniques and
use example data sets to show how applying pseudonymization and
anonymization will affect our ability to do machine learning / data
science.&lt;/p&gt;
</summary><category term="Artificial Intelligence"></category><category term="Business &amp; Start-Ups"></category><category term="Big Data"></category><category term="Data Science"></category></entry><entry><title>Ethics in Machine Learning Panel</title><link href="https://pyvideo.org/pydata-berlin-2017/ethics-in-machine-learning-panel.html" rel="alternate"></link><published>2017-06-30T00:00:00+00:00</published><updated>2017-06-30T00:00:00+00:00</updated><author><name>Roelof Pieters</name></author><id>tag:pyvideo.org,2017-06-30:pydata-berlin-2017/ethics-in-machine-learning-panel.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Advances in AI are happening at a tremendous pace, and especially Machine Learning systems are hastily deployed in settings that span as wide as social media, search engines, advertising, military use, and legal systems. At first sight results are often promising, but more and more &amp;quot;outliers&amp;quot; are becoming visible as well. Systemic bias in culture, language, or business practices often become intensified: From the Tay-chatbot turning racist, to both Google and Flickr classifying images of African-Americans as &amp;quot;monkeys&amp;quot;, to discrimination and sexism encoded in language models used for everything from translation, to court sentencing decision. Luckily, initiatives that address some of these concerns is happening through more interpretable models, new privacy regulations, novel privacy-preserving learning algorithms, and researchers and engineers standing up for more just and transparent machine learning models and methods.&lt;/p&gt;
&lt;p&gt;The panel aims to debate these themes with speakers, and the audience, and go beyond the usual &amp;quot;AI hype&amp;quot; and discuss both the amazing progress, as well as the setbacks, in making societies better, more humane, and ready for the future!&lt;/p&gt;
&lt;p&gt;Speaking at the panel will be:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Roelof Pieters, Panel Host, Co-founder at creative.ai&lt;/li&gt;
&lt;li&gt;Marek Rosa, CEO/CTO at GoodAI&lt;/li&gt;
&lt;li&gt;Fran√ßoise Provencher, Data Team Lead at Shopify&lt;/li&gt;
&lt;li&gt;Hendrik Heuer, Researcher at Institute for Information Management (ifib) at the University of Bremen&lt;/li&gt;
&lt;li&gt;Andreas Dewes, Founder at 7scientists&lt;/li&gt;
&lt;li&gt;Katharine Jarmul, Founder at kjamistan&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Link to Q&amp;amp;A: &lt;a class="reference external" href="https://youtu.be/uOKhB1_vyAw"&gt;https://youtu.be/uOKhB1_vyAw&lt;/a&gt; (Second pyvideo tab)&lt;/p&gt;
</summary><category term="panel"></category><category term="ethics"></category><category term="machine learning"></category></entry><entry><title>Fairness and transparency in machine learning: Tools and techniques</title><link href="https://pyvideo.org/pydata-berlin-2017/fairness-and-transparency-in-machine-learning-tools-and-techniques.html" rel="alternate"></link><published>2017-06-30T00:00:00+00:00</published><updated>2017-06-30T00:00:00+00:00</updated><author><name>Andreas Dewes</name></author><id>tag:pyvideo.org,2017-06-30:pydata-berlin-2017/fairness-and-transparency-in-machine-learning-tools-and-techniques.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will try to answer a simple question: When building machine learning systems, how can we make sure that they treat people fairly and can be held accountable? While seemingly trivial, this question is not easy to answer, especially when using complex methods like deep learning. I will discuss tools and techniques that we can use to make sure our algorithms behave as they should.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When working with personal data, we need to make sure that our algorithms treat people fairly, are transparent and can be held accountable for their decisions. When using complex techniques like deep learning on very large datasets, it is not easy to prove that our algorithms behave they way we intend them to and e.g. do not discriminate against certain groups of people.&lt;/p&gt;
&lt;p&gt;In my talk, I will discuss why ensuring transparency and fairness in machine learning is not easy, and how we can use Python tools to investigate our machine learning systems and make sure they behave they way they should.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction: Why you should care about this (EU Data Protection Directive)&lt;/li&gt;
&lt;li&gt;What kind of problems can occur in machine learning systems (bias in the input data, leakage of sensitive information into the training data, hidden usage of protected attributes by the algorithm)?&lt;/li&gt;
&lt;li&gt;How can we measure and correct for bias in our systems (certifying and removing disparate impact)?&lt;/li&gt;
&lt;li&gt;How can we understand the decisions that our algorithms make (perturbation analysis, simplified modeling, blackbox testing)?&lt;/li&gt;
&lt;li&gt;How can we design our machine learning systems to make sure they're compliant and accountable (anonymization of data, monitoring of outcomes, auditing of algorithms)?&lt;/li&gt;
&lt;li&gt;Outlook: The future of transparency and accountability in machine learning&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Type Annotations in Python 3: Whats, whys &amp; wows!</title><link href="https://pyvideo.org/europython-2017/type-annotations-in-python-3-whats-whys-wows.html" rel="alternate"></link><published>2017-07-13T00:00:00+00:00</published><updated>2017-07-13T00:00:00+00:00</updated><author><name>Andreas Dewes</name></author><id>tag:pyvideo.org,2017-07-13:europython-2017/type-annotations-in-python-3-whats-whys-wows.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.5 introduced support for &amp;quot;type hints&amp;quot; (or annotations),
which allows us to annotate our code with useful bits of information
without affecting its runtime behavior. Type hints don't enforce a
particular use case and can therefore be used for many purposes.&lt;/p&gt;
&lt;p&gt;In my talk, I will explain some of the use cases of type hints, and
show how we can use them to e.g. make our code more secure or teach
it new tricks. We will have a look at popular libraries that help us
to use the power of type hints (e.g. mypy), but we will also see how
we can build our own extensions on top of the type hint system.&lt;/p&gt;
&lt;p&gt;After the talk you should walk away with a solid (basic) understanding
of type hints in Python and an idea of how they might be useful to
you now or in the future.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Typing and type hints in programming languages&lt;/li&gt;
&lt;li&gt;Short history and motivation of type hints in Python&lt;/li&gt;
&lt;li&gt;Basics of type hint syntax and semantics&lt;/li&gt;
&lt;li&gt;Use cases for type hints&lt;/li&gt;
&lt;li&gt;Type hints for code analysis: mypy and similar libraries&lt;/li&gt;
&lt;li&gt;Building new stuff with type hints in Python&lt;/li&gt;
&lt;li&gt;Summary, Outlook &amp;amp; Further Reading&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Code is not text! How graph technologies can help us to understand our code better.</title><link href="https://pyvideo.org/europython-2015/code-is-not-text-how-graph-technologies-can-help-us-to-understand-our-code-better.html" rel="alternate"></link><published>2015-08-07T00:00:00+00:00</published><updated>2015-08-07T00:00:00+00:00</updated><author><name>Andreas Dewes</name></author><id>tag:pyvideo.org,2015-08-07:europython-2015/code-is-not-text-how-graph-technologies-can-help-us-to-understand-our-code-better.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Andreas Dewes - Code is not text! How graph technologies can help us to understand our code better.
[EuroPython 2015]
[21 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;Today, we almost exclusively think of code in software projects as a
collection of text files. The tools that we use (version control
systems, IDEs, code analyzers) also use text as the primary storage
format for code. In fact, the belief that &amp;quot;code is text&amp;quot; is so deeply
ingrained in our heads that we never question its validity or even
become aware of the fact that there are other ways to look at code.&lt;/p&gt;
&lt;p&gt;In my talk I will explain why treating code as text is a very bad idea
which actively holds back our understanding and creates a range of
problems in large software projects. I will then show how we can
overcome (some of) these problems by treating and storing code as
data, and more specifically as a graph. I will show specific examples
of how we can use this approach to improve our understanding of large
code bases, increase code quality and automate certain aspects of
software development.&lt;/p&gt;
&lt;p&gt;Finally, I will outline my personal vision of the future of
programming, which is a future where we no longer primarily interact
with code bases using simple text editors. I will also give some ideas
on how we might get to that future.&lt;/p&gt;
&lt;p&gt;More information about me:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Github: &lt;a class="reference external" href="https://github.com/adewes"&gt;https://github.com/adewes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a class="reference external" href="https://twitter.com/japh44"&gt;https://twitter.com/japh44&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Website: &lt;a class="reference external" href="http://www.andreas-dewes.de/en"&gt;http://www.andreas-dewes.de/en&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Analyzing Data with Python &amp; Docker</title><link href="https://pyvideo.org/europython-2016/analyzing-data-with-python-docker.html" rel="alternate"></link><published>2016-08-04T00:00:00+00:00</published><updated>2016-08-04T00:00:00+00:00</updated><author><name>Andreas Dewes</name></author><id>tag:pyvideo.org,2016-08-04:europython-2016/analyzing-data-with-python-docker.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Andreas Dewes - Analyzing Data with Python &amp;amp; Docker
[EuroPython 2016]
[21 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/analyzing-data-with-python-docker"&gt;https://ep2016.europython.eu//conference/talks/analyzing-data-with-python-docker&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Docker is a powerful tool for packaging software and services in
containers and running them on a virtual infrastructure. Python is a
very powerful language for data analysis. What happens if we combine
the two? We get a very versatile and robust system for analyzing data
at small and large scale!&lt;/p&gt;
&lt;p&gt;I will show how we can make use of Python and Docker to build
repeatable, robust data analysis workflows which can be used in many
different contexts (possibly with a live demo).&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Docker is a powerful tool for packaging software and services in
containers and running them on a virtual infrastructure. Python is a
very powerful language for data analysis. What happens if we combine
the two? We get a very versatile and robust system for analyzing data
at small and large scale!&lt;/p&gt;
&lt;p&gt;I will show how we can make use of Python and Docker to build
repeatable, robust data analysis workflows that can be used in many
different contexts. I will explain the core ideas behind Docker and
show how they can be useful in data analysis. I will then discuss an
open-source Python library (Rouster) which uses the Python Docker-API
to analyze data in containers and show several interesting use cases
(possibly even a live-demo).&lt;/p&gt;
&lt;p&gt;Outline:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Why data analysis can be frustrating: Managing software, dependencies, data versions, workflows&lt;/li&gt;
&lt;li&gt;How Docker can help us to make data analysis easier &amp;amp; more reproducible&lt;/li&gt;
&lt;li&gt;Introducing Rouster: Building data analysis workflows with Python and Docker&lt;/li&gt;
&lt;li&gt;Examples of data analysis workflows: Business Intelligence, Scientific Data Analysis, Interactive Exploration of Data&lt;/li&gt;
&lt;li&gt;Future Directions &amp;amp; Outlook&lt;/li&gt;
&lt;/ol&gt;
</summary></entry><entry><title>Learning from other's mistakes: Data-driven analysis of Python code</title><link href="https://pyvideo.org/pycon-us-2015/learning-from-others-mistakes-data-driven-analy.html" rel="alternate"></link><published>2015-04-11T00:00:00+00:00</published><updated>2015-04-11T00:00:00+00:00</updated><author><name>Andreas Dewes</name></author><id>tag:pyvideo.org,2015-04-11:pycon-us-2015/learning-from-others-mistakes-data-driven-analy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Static code analysis is an useful tool that can help to detect bugs
early in the software development life cycle. I will explain the basics
of static analysis and show the challenges we face when analyzing Python
code. I will introduce a data-driven approach to code analysis that
makes use of public code and example-based learning and show how it can
be applied to analyzing Python code.&lt;/p&gt;
</summary></entry></feed>