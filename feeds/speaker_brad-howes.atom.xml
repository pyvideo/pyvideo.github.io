<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_brad-howes.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-06-08T00:00:00+00:00</updated><entry><title>REST service load testing with Python 3 asyncio</title><link href="https://pyvideo.org/pycon-cz-2017/rest-service-load-testing-with-python-3-asyncio.html" rel="alternate"></link><published>2017-06-08T00:00:00+00:00</published><updated>2017-06-08T00:00:00+00:00</updated><author><name>Brad Howes</name></author><id>tag:pyvideo.org,2017-06-08:pycon-cz-2017/rest-service-load-testing-with-python-3-asyncio.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For a REST service we are deploying for a customer, we wished to know
how well it would perform under various load scenarios. Since we
already had a Python driver that understood the REST service, it was
only natural to attempt the load testing in Python as well. I will
discuss the harness we used to generate load, and how and why we
modeled load as a Poisson process.&lt;/p&gt;
</summary></entry></feed>