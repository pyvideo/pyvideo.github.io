<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 17 Oct 2018 00:00:00 +0000</lastBuildDate><item><title>Django REST Framework: Moving Past the Tutorial to Production</title><link>https://pyvideo.org/djangocon-us-2018/django-rest-framework-moving-past-the-tutorial-to-production.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So you’ve made your first attempt at creating a DRF API, but now you
need to figure out how to put the hair on the proverbial pony. You want
to make things easier on your client developers so they can get exactly
what they need. I’ll walk through things that made our lives better
developing a Django REST Framework API serving a React frontend.&lt;/p&gt;
&lt;p&gt;I’ll include optimizations such as embedding related fields into
serializers, using different serializers for different users and use
cases (HTTP methods), and using DRF’s &lt;tt class="docutils literal"&gt;actions&lt;/tt&gt; decorator to provide
easy access to related tasks. I’ll also touch on some third-party
libraries that made life way easier, such as &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;rest-framework-filters&lt;/span&gt;&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-rest-swagger&lt;/span&gt;&lt;/tt&gt;, and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-simple-&lt;/span&gt; history&lt;/tt&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Drew Winstel</dc:creator><pubDate>Wed, 17 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-17:djangocon-us-2018/django-rest-framework-moving-past-the-tutorial-to-production.html</guid></item></channel></rss>