<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Looping</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Tue, 13 Oct 2020 00:00:00 +0000</lastBuildDate><item><title>Looping over multiple iterables at once</title><link>https://pyvideo.org/python-morsels/looping-over-multiple-iterables.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Need to loop over two (or more) iterables at the same time? Don't use range. Don't use enumerate. Use the built-in zip function. As you loop over zip you'll get the n-th item from each iterable.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trey Hunner</dc:creator><pubDate>Tue, 13 Oct 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-10-13:/python-morsels/looping-over-multiple-iterables.html</guid><category>Python Morsels</category><category>Looping</category></item><item><title>Looping with indexes</title><link>https://pyvideo.org/python-morsels/looping-with-indexes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python's built-in enumerate function is the preferred way to loop while counting upward at the same time. You'll almost always see tuple unpacking used whenever enumerate is used.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trey Hunner</dc:creator><pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-10-08:/python-morsels/looping-with-indexes.html</guid><category>Python Morsels</category><category>Looping</category></item><item><title>What is an iterable?</title><link>https://pyvideo.org/python-morsels/iterable.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An iterable is anything you're able to iterate over (iter-&lt;em&gt;able&lt;/em&gt;). Iterables can be looped over and anything you can loop over is an iterable. Not every iterable is indexable or has a length.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trey Hunner</dc:creator><pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-10-06:/python-morsels/iterable.html</guid><category>Python Morsels</category><category>Looping</category></item><item><title>Writing a for loop</title><link>https://pyvideo.org/python-morsels/writing-a-for-loop.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Unlike traditional C-style for loops, Python's for loops don't have indexes. It's considered a best practice to avoid reaching for indexes unless you really need them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trey Hunner</dc:creator><pubDate>Tue, 29 Sep 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-09-29:/python-morsels/writing-a-for-loop.html</guid><category>Python Morsels</category><category>Looping</category></item></channel></rss>