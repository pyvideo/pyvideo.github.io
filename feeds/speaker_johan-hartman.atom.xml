<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_johan-hartman.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-12T00:00:00+00:00</updated><entry><title>Python as a tool to boost productivity in (electronic) product and system development.</title><link href="https://pyvideo.org/pycon-za-2018/python-as-a-tool-to-boost-productivity-in-electronic-product-and-system-development.html" rel="alternate"></link><published>2018-10-12T00:00:00+00:00</published><updated>2018-10-12T00:00:00+00:00</updated><author><name>Johan Hartman</name></author><id>tag:pyvideo.org,2018-10-12:pycon-za-2018/python-as-a-tool-to-boost-productivity-in-electronic-product-and-system-development.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The general take away from this talk will be to motivate the use of
Python not only as the implementation language to develop your
application, but also to use Python to develop your own automation tools
that fit your development process. By doing this, you will be able to
implement faster, more accurate, have a better tested result and along
the way derive many benefits that you won’t foresee when you start.&lt;/p&gt;
&lt;p&gt;Although my talk will speak from an embedded engineering point of view
and not an IT or web development point of view, I belief the principles
applies generally. Over many years and through the life cycle of many
products I have evolved a development methodology that uses Python as
the language of choice to develop my own tools for code generation (for
‘C’ and Python), software and firmware test automation, systems
compliance testing and hardware manufacturing test automation.&lt;/p&gt;
&lt;p&gt;My process is that I start a project by defining XML object definitions
for all instances of configuration, data or communication objects. From
the XML, on the embedded firmware side, I generate ‘C’ structures,
enum’s and prototype function bodies to use in my coding. On the PC or
server side, I generate Python data object definitions from the XML.
These are imported into Python programs that are written to operate on
the object definitions, giving me free reuse of all the interfacing,
testing, visualization etc. code that I have developed in the past.&lt;/p&gt;
</summary></entry></feed>