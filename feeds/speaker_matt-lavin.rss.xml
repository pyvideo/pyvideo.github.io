<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Matt Lavin</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 27 Jul 2025 00:00:00 +0000</lastBuildDate><item><title>Teaching and Doing Digital Humanities with Jupyter Notebooks</title><link>https://pyvideo.org/pygotham-2016/teaching-and-doing-digital-humanities-with-jupyter-notebooks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk discusses our experiences using Jupyter Notebooks for digital humanities tutorials, workshops, and scholarship.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Lavin</dc:creator><pubDate>Sat, 16 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-16:/pygotham-2016/teaching-and-doing-digital-humanities-with-jupyter-notebooks.html</guid><category>PyGotham 2016</category></item><item><title>Organizing and Maintaining Your Code-Scape with Python</title><link>https://pyvideo.org/pyohio-2025/organizing-and-maintaining-your-code-scape-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you're a software engineer, a data scientist, or almost any other
type of developer, you're probably familiar with the idea of writing
well-organized, reusable code. Principles like DRY (&amp;quot;Don't Repeat
Yourself&amp;quot;) and ETC (&amp;quot;Easy to Change&amp;quot;) are powerful heuristics at the
line-by-line level of code. Design concepts like modularity, decoupling,
MVC (&amp;quot;Model-View-Controller&amp;quot;) and &amp;quot;Fat Model, Skinny Controller&amp;quot; can
help you make software-level organizing decisions. Resources for
project-level organization (code, data, documentation, etc.) are
abundant and growing fast. Putting all this together in a useful way can
be challenging, but there's no shortage of advice, resources, or
templates in any of these areas. By comparison, material related to
effective organization at the level of the coder's file system or source
tree is sparse, harder to find, or designed for a more general audience.
This talk uses &amp;quot;code-scape&amp;quot; as an umbrella term to consolidate ideas
about organizing files and folders, maintaining your codebase, building
a second brain, digital filing systems, etc. and shares examples of how
you can use lightweight Python scripts to help keep your code-scape
organized, searchable, and safeguarded.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Lavin</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/organizing-and-maintaining-your-code-scape-with-python.html</guid><category>PyOhio 2025</category></item></channel></rss>