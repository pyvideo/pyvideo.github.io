<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_filipe-de-alencar-ximenes.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-08-04T00:00:00+00:00</updated><entry><title>Multitenant applications: how and why</title><link href="https://pyvideo.org/pycon-au-2017/multitenant-applications-how-and-why.html" rel="alternate"></link><published>2017-08-04T00:00:00+00:00</published><updated>2017-08-04T00:00:00+00:00</updated><author><name>Filipe de Alencar Ximenes</name></author><id>tag:pyvideo.org,2017-08-04:pycon-au-2017/multitenant-applications-how-and-why.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Multitenancy is system architecture model where a single instance of software serves multiple clients [tenants]. Each has its own context and data set isolated from the others. There are 3 main approaches to build this kind of application. Each uses different strategies to spread data in a database [or multiple databases]. In this talk, you will understand the architecture of each of these approaches, how to query data, its advantages, and downsides.&lt;/p&gt;
</summary></entry></feed>