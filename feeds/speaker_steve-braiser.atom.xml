<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_steve-braiser.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-10-22T00:00:00+00:00</updated><entry><title>A Python based Post processing Toolset for Seismic Analyses</title><link href="https://pyvideo.org/euroscipy-2014/a-python-based-post-processing-toolset-for-seismi.html" rel="alternate"></link><published>2014-10-22T00:00:00+00:00</published><updated>2014-10-22T00:00:00+00:00</updated><author><name>Steve Braiser</name></author><id>tag:pyvideo.org,2014-10-22:euroscipy-2014/a-python-based-post-processing-toolset-for-seismi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will discuss the design and implementation of a Python-based
tool-set to aid in assessing the response of the UK's Advanced Gas
Reactor nuclear power stations to earthquakes. The seismic analyses
themselves are carried out with a commercial Finite Element solver, but
understanding the raw data this produces requires customised
post-processing and visualisation tools. Extending the existing tools
had become increasingly difficult and a decision was made to develop a
new, Python-based tool-set. This comprises of a post-processing
framework (&amp;quot;aftershock&amp;quot;) which includes an an embedded Python
interpreter, and a plotting package (&amp;quot;afterplot&amp;quot;) based on numpy and
matplotlib.&lt;/p&gt;
&lt;p&gt;The new tool-set had to be significantly more flexible and easier to
maintain than the existing code-base, while allowing the majority of
development to be carried out by engineers with little training in
software development. The resulting architecture will be described with
a focus on exploring how the design drivers were met and the successes
and challenges arising from the choices made.&lt;/p&gt;
</summary></entry></feed>