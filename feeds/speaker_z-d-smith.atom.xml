<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_z-d-smith.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-06T00:00:00+00:00</updated><entry><title>Nim: A New Option for Optimizing Inner Loops</title><link href="https://pyvideo.org/pygotham-2017/nim-a-new-option-for-optimizing-inner-loops.html" rel="alternate"></link><published>2017-10-06T00:00:00+00:00</published><updated>2017-10-06T00:00:00+00:00</updated><author><name>Z. D. Smith</name></author><id>tag:pyvideo.org,2017-10-06:pygotham-2017/nim-a-new-option-for-optimizing-inner-loops.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://nim-lang.org/"&gt;Nim&lt;/a&gt; is a relatively young and unknown programming language that provides an enticing mix of features to the Python programmer looking to deploy highly optimized, efficient code. It has a syntax that should be familiar to Pythonistas, including significant whitespace. It is oriented towards expressiveness and ease of composition, including a powerful macro and templating system. However, it is also fast: it's strongly typed, imperative, and compiles to C.&lt;/p&gt;
&lt;p&gt;Python has extremely robust support for importing shared libraries written in C as a means to optimize certain areas of an application for performance. However, C is... C. It's tricky to write, requires manual memory management and manual pointer manipulation, has no type inference... It's everything that most Python programmers write Python in order to avoid.&lt;/p&gt;
&lt;p&gt;However, the fact that Nim compiles to C means we can write highly performant code in a modern language and then employ Python's robust and pervasive C support to call it.&lt;/p&gt;
&lt;p&gt;In this talk we'll review a little bit of the Nim language itself, and dive into how to smoothly use it in a Python application.&lt;/p&gt;
</summary></entry></feed>