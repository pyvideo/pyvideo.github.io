<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_servers.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-04-07T00:00:00+00:00</updated><entry><title>Designing Large-Scale Applications in Python</title><link href="https://pyvideo.org/europython-2013/designing-large-scale-applications-in-python.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Marc-André Lemburg</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/designing-large-scale-applications-in-python.html</id><summary type="html"></summary><category term="business"></category><category term="database"></category><category term="integration"></category><category term="scalability"></category><category term="servers"></category><category term="refactoring"></category><category term="application-design"></category><category term="design"></category><category term="software-engineering"></category><category term="framework"></category><category term="sql"></category><category term="best-practices"></category><category term="architecture"></category></entry><entry><title>batou - a multi-(component|environment|platform|.*) deployment tool</title><link href="https://pyvideo.org/europython-2013/batou-a-multi-componentenvironmentplatform-deployment-tool.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Christian Theune</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/batou-a-multi-componentenvironmentplatform-deployment-tool.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;batou is a service deployment utility inspired by tools like Puppet,
Fabric, and other modern tools. It made a short appearance in a
lightning talk and at the sprints during EP 2012.&lt;/p&gt;
&lt;p&gt;The talk gives an overview and demonstrates with practical examples how
we deploy web applications with many complex components:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;modelling service components with Python&lt;/li&gt;
&lt;li&gt;multiple environments&lt;/li&gt;
&lt;li&gt;multiple platforms&lt;/li&gt;
&lt;li&gt;development environments&lt;/li&gt;
&lt;li&gt;convergent behaviour&lt;/li&gt;
&lt;li&gt;remote deployments&lt;/li&gt;
&lt;li&gt;secrets management (database passwords, SSL certificates, …)&lt;/li&gt;
&lt;li&gt;no additional run-time dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will show how the real-life requirements in our projects led us to
develop a general model that integrates existing practices without
building a huge stack of technologies.&lt;/p&gt;
</summary><category term="fabric"></category><category term="hosting"></category><category term="deploy"></category><category term="devops"></category><category term="integration"></category><category term="service-orchestration"></category><category term="deployment"></category><category term="best-practices"></category><category term="webapp"></category><category term="servers"></category></entry><entry><title>Circus, process and socket manager</title><link href="https://pyvideo.org/europython-2013/circus-process-and-socket-manager.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Tarek Ziadé</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/circus-process-and-socket-manager.html</id><summary type="html"></summary><category term="sysadmin"></category><category term="web"></category><category term="service-orchestration"></category><category term="servers"></category></entry><entry><title>Passwords - the server side</title><link href="https://pyvideo.org/europython-2013/passwords-the-server-side.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Thomas Waldmann</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/passwords-the-server-side.html</id><summary type="html"></summary><category term="sysadmin"></category><category term="best-practices"></category><category term="security"></category><category term="servers"></category></entry><entry><title>Presenting pysftpserver: OpenSSH SFTP service with Python</title><link href="https://pyvideo.org/pycon-italia-2017/presenting-pysftpserver-openssh-sftp-service-with-python.html" rel="alternate"></link><published>2017-04-07T00:00:00+00:00</published><updated>2017-04-07T00:00:00+00:00</updated><author><name>Filippo Morelli</name></author><id>tag:pyvideo.org,2017-04-07:pycon-italia-2017/presenting-pysftpserver-openssh-sftp-service-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever needed to connect to an OpenSSH SFTP server and keep track
of the user activities? Or maybe limit user permissions? Or define
specific callbacks to react to user actions?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;pysftpserver&lt;/em&gt; is an OpenSSH SFTP wrapper, written purely in Python. It
is yet another cool example of what you might already know: how powerful
Python can be while staying extremely simple.&lt;/p&gt;
&lt;p&gt;This talk aims at presenting the tool and a few use cases in which it
was harnessed, including one with Django and Django REST Framework. It
requires a good knowledge of Python and Django and understanding the
basics of a SFTP service.&lt;/p&gt;
</summary><category term="SFTP"></category><category term="command-line"></category><category term="django-rest-framework"></category><category term="storage"></category><category term="django"></category><category term="ssh"></category><category term="servers"></category></entry></feed>