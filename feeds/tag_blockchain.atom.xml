<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_blockchain.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-04T00:00:00+00:00</updated><entry><title>ICO Myth Scam Business</title><link href="https://pyvideo.org/pycon-estonia-2018/ico-myth-scam-business.html" rel="alternate"></link><published>2018-10-04T00:00:00+00:00</published><updated>2018-10-04T00:00:00+00:00</updated><author><name>Alex Norta</name></author><id>tag:pyvideo.org,2018-10-04:pycon-estonia-2018/ico-myth-scam-business.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Distributed application examples employing blockchain tecnology&lt;/p&gt;
</summary><category term="blockchain"></category></entry><entry><title>A primer on the Ethereum Blockchain and Smart Contracts using Python and Serpent</title><link href="https://pyvideo.org/pycon-italia-2018/a-primer-on-the-ethereum-blockchain-and-smart-contracts-using-python-and-serpent.html" rel="alternate"></link><published>2018-04-22T00:00:00+00:00</published><updated>2018-04-22T00:00:00+00:00</updated><author><name>Stefano Fioravanzo</name></author><id>tag:pyvideo.org,2018-04-22:pycon-italia-2018/a-primer-on-the-ethereum-blockchain-and-smart-contracts-using-python-and-serpent.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A primer on the Ethereum Blockchain and Smart Contracts using Python and
Serpent&lt;/p&gt;
&lt;p&gt;The Blockchain technology is an ingenious invention that has gained a
lot of momentum and public attention in the recent years. In this talk
we are going to quickly review the basic concepts behind this
technology, starting from its very first implementation: The Bitcoin
Blockchain. We will look into the core technology components the base of
Bitcoin, which are its strengths and limitations. We will then discuss
how the Ethereum project tries to overcome these limitations introducing
the Turing complete Ethereum Virtual Machine and advanced Smart
Contracts, giving developers the power to build any kind of applications
on top of the Ethereum blockchain.&lt;/p&gt;
&lt;p&gt;After this small theoretical introduction, we will explore what are the
Python tools that you need to use to interact with the Ethereum
blockchain and develop Smart Contracts. Many of the tools to interact
and develop with the Ethereum blockchain are built with Python. We will
learn which are the basic tools used to run a blockchain locally on our
laptops going through the installation and preparation process to get a
full Ethereum node up and running on our local machine. Serpent is one
of the languages of choice when building Smart Contracts in Ethereum and
it is heavily inspired by Python. We will learn how to write a simple
Smart Contract, test it and deploy it to our local running blockchain.&lt;/p&gt;
&lt;p&gt;For this talk it is required just basic Python knowledge. Some basic
theoretic blockchain foundations are preferred to get a clear
understanding of the second part of the talk, but not strictly
necessary.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 14:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="blockchain"></category></entry><entry><title>Getting Started with Blockchains and Cryptocurrencies in Python</title><link href="https://pyvideo.org/pycon-us-2018/getting-started-with-blockchains-and-cryptocurrencies-in-python.html" rel="alternate"></link><published>2018-05-09T00:00:00+00:00</published><updated>2018-05-09T00:00:00+00:00</updated><author><name>Amirali Sanatinia</name></author><id>tag:pyvideo.org,2018-05-09:pycon-us-2018/getting-started-with-blockchains-and-cryptocurrencies-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Blockchains and cryptocurrencies are getting more popular everyday. The rise and wide adoption of cryptocurrencies such as Bitcoin has attracted a lot of attention, ranging from developers to bankers. However, many people are still not very comfortable with the ideas and concepts behind the blockchain, and workings of cryptocurrencies such as Bitcoin. Therefore, it stops them from entering and exploring the blockchain and cryptocurrency world.&lt;/p&gt;
&lt;p&gt;In this tutorial, we first explore the cryptographic ideas behind the cryptocurrencies, including hashing, public/private cryptography. This will be followed by the basics of a simplified blockchain. We cover mining, incentives, payment records, ownership, etc. Then we delve into working and playing with a private Bitcoin network, by implementing simple programs in Python to create public/private keys, accounts, and transactions. We further look into services that provide exchange rate data on cryptocurrencies and analyze the data.&lt;/p&gt;
</summary><category term="blockchain"></category><category term="cryptocurrency"></category></entry><entry><title>Blockchain and smart contracts explained (and simplified)</title><link href="https://pyvideo.org/pydata-barcelona-2017/blockchain-and-smart-contracts-explained-and-simplified.html" rel="alternate"></link><published>2017-05-21T15:00:00+02:00</published><updated>2017-05-21T15:00:00+02:00</updated><author><name>Guillem Borrell Nogueras</name></author><id>tag:pyvideo.org,2017-05-21:pydata-barcelona-2017/blockchain-and-smart-contracts-explained-and-simplified.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Blockchain is the next big thing that will revolutionize everything, but no one knows how. The same can be said about smart contracts. Bitcoin and Ethereum are great technologies, but too complex for most cases. This talk will explain why smart contracts are hard, and why they don't need to be. Finally, a simple ledger for smart contracts in python (pyledger) will be presented.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Smart contracts are an old and simple concept. They are just computer programs that facilitate the negotiation and settlement of contracts by several parties. Their goal is to lower the transaction latency and cost associated with human middlemen. The blockchain technology brought the possibility to sanction contracts when peers do not trust each other, which is necessary for applications like virtual currencies. However, due to the CAP theorem and the cost of the Byzantine consensus, their performance tends to be quite bad.&lt;/p&gt;
&lt;p&gt;Current smart contract platforms such as Ethereum are general (one can issue any kind of contract), distributed (an updated copy is present at all the nodes within the same network), shared (an arbitrary amount of contracts are served within the same infrastructure) and secure (there is no way to tamper with the stored data). All those properties are undeniably good, but the consequence of keeping all those promises is that the infrastructure is exceedingly complex. Such an extense architecture does not add any functionality to a smart contract, it makes it trustworthy.&lt;/p&gt;
&lt;p&gt;If one understands the raw concepts behind the Blockchain consensus, and we are willing to sacrifice some of the properties mentioned earlier, one can design and implement a simple ledger for smart contracts like pyledger (pyledger.readthedocs.io). Pyledger was designed as a platform for fast prototyping of smart contracts, and for experimentation, but in some particular cases can be good enough to be used in real-world cases.&lt;/p&gt;
&lt;p&gt;Finally... Fun time! All the concepts will be exemplified with a Q&amp;amp;A contest implemented as a smart contract where all attendants can play.&lt;/p&gt;
</summary><category term="blockchain"></category><category term="pyledger"></category></entry><entry><title>Python Blockchain and Byte-Size Change</title><link href="https://pyvideo.org/pydx-2016/python-blockchain-and-byte-size-change.html" rel="alternate"></link><published>2016-12-30T00:00:00+00:00</published><updated>2016-12-30T00:00:00+00:00</updated><author><name>Portia Burton</name></author><id>tag:pyvideo.org,2016-12-30:pydx-2016/python-blockchain-and-byte-size-change.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyDX 2016 keynote by Portia Burton&lt;/p&gt;
&lt;p&gt;In this talk, I will answer the question of what is bitcoin and the blockchain and will end with a quick tutorial on how to create a blockchain application in Flask. We will not only make a bitcoin application, but we will also reflect upon the implications of this cutting edge technology to the greater society.&lt;/p&gt;
&lt;p&gt;Bitcoin and blockchain technology has been in the news as of late, such as the hard fork of Ethereum to the hack of Bitifnex. This talk will cover the basics of blockchain technology and we will learn how to build an application that accepts bitcoin. Armed with a little knowledge of Flask and REST we will be able to use Python to bridge the gap between current events and technology. As Python developers we will be able to add to the narrative of bitcoin/blockchain technology in a unique and meaningful way.&lt;/p&gt;
</summary><category term="bitcoin"></category><category term="blockchain"></category></entry></feed>