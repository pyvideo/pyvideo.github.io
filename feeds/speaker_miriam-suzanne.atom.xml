<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_miriam-suzanne.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-08-14T00:00:00+00:00</updated><entry><title>Don't Use My Grid System (or any others)</title><link href="https://pyvideo.org/djangocon-us-2017/dont-use-my-grid-system-or-any-others.html" rel="alternate"></link><published>2017-08-14T00:00:00+00:00</published><updated>2017-08-14T00:00:00+00:00</updated><author><name>Miriam Suzanne</name></author><id>tag:pyvideo.org,2017-08-14:djangocon-us-2017/dont-use-my-grid-system-or-any-others.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2017 - Don't Use My Grid System (or any others) by Miriam Suzanne&lt;/p&gt;
&lt;p&gt;I built Susy, a Sass grid system that can generate any grid technique you like — but I haven’t used it in years. I’ll show you how various grid systems work, and how to avoid using them. For those few cases where a grid really is required, we’ll talk about the best ways to roll your own, so you’re not relying on a bloated library to make decisions for you. We’ll also look at the new layout toys, from flexbox to CSS Grid, and how to get started with only a few lines of code.&lt;/p&gt;
&lt;p&gt;When to use floats, CSS Grid, flexbox, custom properties, and other techniques.&lt;/p&gt;
&lt;p&gt;How to make grid-math simple, and lose the grid-system.&lt;/p&gt;
&lt;p&gt;How to make existing grid-systems work for you, when you’re stuck with them.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2017.djangocon.us/talks/don-t-use-my-grid-system-or-any-others/"&gt;https://2017.djangocon.us/talks/don-t-use-my-grid-system-or-any-others/&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>