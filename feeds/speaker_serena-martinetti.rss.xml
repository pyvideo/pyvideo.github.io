<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 22 Apr 2018 00:00:00 +0000</lastBuildDate><item><title>Integration tests ready to use with pytest-play</title><link>https://pyvideo.org/pycon-italia-2018/integration-tests-ready-to-use-with-pytest-play.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In my talk I will introduce a new pytest plugin with which it is very
easy (even for non-technical) go to create and run new integration
testing at any level of IOT complex systems.&lt;/p&gt;
&lt;p&gt;pytest-play is a pytest plugin that allows you to play a JSON file that
describes some actions and assertions. We can use actions like: -
Selenium, driving the browser for the UI test - MQTT messages,
simulating a device - API calls - queries to Cassandra or PostgresSQL
(in the future) - custom commands, thanks to the pluggable architecture
Other advantages: - UI tests more reliable with implicit waits before
interacting with the elements - BDD support to make the scenario more
legible - reusability of steps&lt;/p&gt;
&lt;p&gt;I will show you how easy it is to create a json and execute it on the
fly on a Continuous Integration system. So letâ€™s start having fun in
testing with pytest-play.&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Serena Martinetti</dc:creator><pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-22:pycon-italia-2018/integration-tests-ready-to-use-with-pytest-play.html</guid><category>continuous-integration</category><category>open source</category><category>Python</category><category>testing</category><category>selenium</category><category>integration</category><category>api</category><category>pytest</category><category>Functional Testing</category></item></channel></rss>