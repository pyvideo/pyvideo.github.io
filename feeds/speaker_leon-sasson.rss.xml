<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 23 Sep 2016 00:00:00 +0000</lastBuildDate><item><title>Embracing the Monolith in Small Teams</title><link>https://pyvideo.org/pydata-chicago-2016/embracing-the-monolith-in-small-teams.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://www.slideshare.net/LeonSasson/embracing-the-monolith"&gt;http://www.slideshare.net/LeonSasson/embracing-the-monolith&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Its unlikely for small orgs to have resources to support the fanciest and shiny data tooling out there. Choosing the right tools and tightly coupling them, can can give small, cross-disciplinary teams the power of moving fast, without breaking things. This goes against a lot of common advice, but becomes powerful when applied with disciplines. I'll show you how with Django, IPython, and Postgres.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Leon Sasson</dc:creator><pubDate>Fri, 23 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-23:pydata-chicago-2016/embracing-the-monolith-in-small-teams.html</guid></item></channel></rss>