<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_tim-mcnamara.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-09-11T00:00:00+00:00</updated><entry><title>Making sense of setup.py</title><link href="https://pyvideo.org/kiwi-pycon-2016/making-sense-of-setuppy.html" rel="alternate"></link><published>2016-09-11T00:00:00+00:00</published><updated>2016-09-11T00:00:00+00:00</updated><author><name>Tim McNamara</name></author><id>tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/making-sense-of-setuppy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tim McNamara
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/122/"&gt;https://kiwi.pycon.org/schedule/presentation/122/&lt;/a&gt;
This talk will guide you through the process of wrapping your scraps and scripts into dapper Python packages. Now when you want to re-use some of the code that you've written before, you'll be able to without resorting to an ugly kludge. No more copy &amp;amp; paste, no path hacks - just beautiful, easy to install code.&lt;/p&gt;
</summary></entry><entry><title>Tim McNamara - OLPC XO: Python bringing education to the world's poorest children</title><link href="https://pyvideo.org/kiwi-pycon-2009/tim-mcnamara---olpc-xo--python-bringing-education.html" rel="alternate"></link><published>2009-11-07T00:00:00+00:00</published><updated>2009-11-07T00:00:00+00:00</updated><author><name>Tim McNamara</name></author><id>tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/tim-mcnamara---olpc-xo--python-bringing-education.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OLPC XO: Python bringing education to the world's poorest children&lt;/p&gt;
&lt;p&gt;Presented by Tim McNamara&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;This topic will be divided into five different area of 10 minutes each,
with time for questions and discussion. We'll talk about the OLPC
programme, the hardware, the software, the educational theory and how to
get involved NZ.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;In defence of the OLPC XO This section will be a brief overview of
the whole project hopefully with an eye to dispel some rumour and
controversy surrounding the project. There has been several mixed
messages, and I would like to&lt;/li&gt;
&lt;li&gt;Overview of the hardware In this section, the talk to move into a
discussion about the overview of the hardware itself. There will be
several machines for the audience to have a look at, and we'll try
and test some of the mesh networking, collaboration and sharing
capabilities that are built into the machine.&lt;/li&gt;
&lt;li&gt;Overview of the software The OLPC XO is run using a Python
environment called Sugar
(&lt;a class="reference external" href="http://sugarlabs.org.nz/"&gt;http://sugarlabs.org.nz&lt;/a&gt;), which
itself is a Fedora Remix. We will talk a little about how an Activity
is built and how to start contributing to the Sugar system.&lt;/li&gt;
&lt;li&gt;How to deploy into schools This segment will go over some of the
theoretical underpinnings of the user interface and Sugar's approach
to things like the directory structure. We'll also explore some of
the tools that teachers and parents can use to progressively
encourage their children to learn about computing and develop
creative and critical thinking.&lt;/li&gt;
&lt;li&gt;How to get involved There are small pockets of XOs around the
country. Learn where they are and how to start improving them!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</summary><category term="kiwipycon"></category><category term="kiwipycon2009"></category><category term="olpc"></category></entry><entry><title>A look at NuPIC - A self-learning AI engine</title><link href="https://pyvideo.org/kiwi-pycon-2013/a-look-at-nupic-a-self-learning-ai-engine.html" rel="alternate"></link><published>2013-09-14T00:00:00+00:00</published><updated>2013-09-14T00:00:00+00:00</updated><author><name>Tim McNamara</name></author><id>tag:pyvideo.org,2013-09-14:kiwi-pycon-2013/a-look-at-nupic-a-self-learning-ai-engine.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;NuPIC is an open source platform for building prediction models from
data streams, such as sensor data. Two models will be discussed, an
earthquake damage predictor built from from GeoNet data and a flood
level warning system.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This talk will discuss the speaker's experience with NuPIC -
&lt;a class="reference external" href="http://numenta.org/nupic.html"&gt;http://numenta.org/nupic.html&lt;/a&gt; - for building useful artificial
intelligence applications. In particular, the author will discuss
developing damage and flood prediction models based on public sensor
data.&lt;/p&gt;
&lt;p&gt;About the tool&lt;/p&gt;
&lt;p&gt;NuPIC is an open source implementation of algorithms which are inspired
heavily by our understanding of how the neocortex organises information.
NuPIC uses online (or continuous) learning, providing a prediction after
every input is received. This is intended to mirror how human brains
operate, by acting quickly on new information based on prior knowledge,
while being able to adapt to it for the next bit of information. The
other main features are the inclusion of a temporal dimension to
learning, partitioning models into hierarchies of sub-models and
representing knowledge within a sparse, distributed matrix modelled
after the brain.&lt;/p&gt;
&lt;p&gt;About the talk&lt;/p&gt;
&lt;p&gt;The claims made in the documentation of NuPIC are very bold. The
developers claim that models are able to be developed without needing to
create training and testing sets. The models that are developed in this
manner are supposedly self-learning. Surely, this must be exaggeration!
This talk is a presentation of an evaluation of building models for two
sets of input data, one relating to earthquakes and the other relating
to flood levels.&lt;/p&gt;
&lt;p&gt;The anticipated case studies&lt;/p&gt;
&lt;p&gt;GeoNet provides an extensive archive of seismic data, along with
associated damage reports from people affected by particular shakes. In
principle, we could feed this historical data to NuPIC and then ask it
to tell us how likely and how intense damage will be for any particular
quake. Perhaps we could even use NuPIC to model predict the likelihood
of multiple quakes within a cluster.&lt;/p&gt;
&lt;p&gt;With information about rain levels available in near-real time from
NIWA's climate database (Cliflo) and information about river catchments
and historical from district councils, it is (in principle) possible to
create a flood risk prediction model for one's own use.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/tim-mcnamara-a-look-at-nupic-a-self-learning-ai-engine"&gt;https://speakerdeck.com/nzpug/tim-mcnamara-a-look-at-nupic-a-self-learning-ai-engine&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Lesser known data structures by Tim McNamara</title><link href="https://pyvideo.org/pycon-au-2014/lesser-known-data-structures-by-tim-mcnamara.html" rel="alternate"></link><published>2014-08-09T00:00:00+00:00</published><updated>2014-08-09T00:00:00+00:00</updated><author><name>Tim McNamara</name></author><id>tag:pyvideo.org,2014-08-09:pycon-au-2014/lesser-known-data-structures-by-tim-mcnamara.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is graced with flexible, easy to use data structures that are at
your fingertips every time you start a command prompt. Lists,
dictionaries and tuples are our friends. However, sometimes you want
more than what they can give.&lt;/p&gt;
&lt;p&gt;While subclassing is a great approach, often what you want has already
been written. Most often, it’ll be waiting for you within the standard
library. This talk will be a tour of some of what awaits you. Don’t be
the next person to recreate an ordered dictionary.&lt;/p&gt;
&lt;p&gt;Within the collections module, as well as other places within the
standard library, you’ll find lots of functionality. Using these data
structures can lead to simpler, more robust code.&lt;/p&gt;
&lt;p&gt;As well as explaining how to use some of the data structures that we
encounter, we’ll also be checking through open source code to see how
they are used in the real world. This will give us insight into how
other programmers are using them. Hopefully&lt;/p&gt;
</summary></entry></feed>