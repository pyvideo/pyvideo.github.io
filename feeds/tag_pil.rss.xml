<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 17 Jul 2016 00:00:00 +0000</lastBuildDate><item><title>The Colors, Duke! Steganography using the Python Imaging Library (PIL)</title><link>https://pyvideo.org/pygotham-2016/the-colors-duke-steganography-using-the-python-imaging-library-pil.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Steganography is the practice, though some might say artform, of concealing messages within other types of media. The aim of my talk is to show how to write plaintext messages into images and then retrieve them. To do this I'll be using the Python Imaging Library, or PIL.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Prakash Venkat</dc:creator><pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-17:pygotham-2016/the-colors-duke-steganography-using-the-python-imaging-library-pil.html</guid><category>Steganography</category><category>PIL</category></item><item><title>Douglas Bagnall - Te Tuhi Video Game System</title><link>https://pyvideo.org/kiwi-pycon-2009/douglas-bagnall---te-tuhi-video-game-system.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Te Tuhi Video Game System&lt;/p&gt;
&lt;p&gt;Presented by Douglas Bagnall&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Tetuhi is a python program that turns drawings on paper into 2D top-down
early 80s style video games. This talk describes how.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Te Tuhi Video Game System is not a game in itself; rather it creates
games based on arbitrary images that it is given. To use it, you draw a
picture of the game you want to play, and it will give you the game that
you really drew. The software was originally written for an art exhibit
using slightly specialised hardware, but it has been released under the
GPL and runs on ordinary computers. It uses Pygame, PIL, and custom C
extensions that allow it to evolve a playable game from a wide variety
of pictures. This talk will discuss the techniques used (both refined
algorithms and hacky heuristics) and cover topics such as image
analysis, machine learning, and interface design. There will be a
demonstration.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Douglas Bagnall</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/douglas-bagnall---te-tuhi-video-game-system.html</guid><category>c</category><category>gpl</category><category>kiwipycon</category><category>kiwipycon2009</category><category>pil</category><category>pygame</category></item><item><title>Tiffany - Multipage-Tiff Lesen und Schreiben mit PIL ohne PIL</title><link>https://pyvideo.org/pycon-de-2012/tiffany-multipage-tiff-lesen-und-schreiben-mit.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Tiffany steht für beliebiges Tiff. Das kleine Modul löst eine grosse
Menge&lt;/p&gt;
&lt;p&gt;von Problemen, hat keine Abhängigkeiten, keine Binaries und läuft&lt;/p&gt;
&lt;p&gt;überall wo Python läuft.&lt;/p&gt;
&lt;p&gt;Bei der Entwicklung von Pydica (Distributed Document Capture) wurden wir&lt;/p&gt;
&lt;p&gt;mit dem Problem konfrontiert, mehrseitige Tiff-Dateien anzuzeigen. Das&lt;/p&gt;
&lt;p&gt;GUI-Toolkit PySide (Qt) unterstützt zwar Tiff, zeigt jedoch nur die
erste Seite.&lt;/p&gt;
&lt;p&gt;Zudem behandeln wir Fax-komprimierte Dateien, was Qt aber unterstützt.&lt;/p&gt;
&lt;p&gt;PIL verfügt über eine Bereinigung der Tiff-Tags, kommt aber nicht mit
der&lt;/p&gt;
&lt;p&gt;Fax-Kompression zurecht. Es gibt seit langem einen Patch dafür, jedoch
ist&lt;/p&gt;
&lt;p&gt;der Build-Prozess erschwert und zieht mit libtiff eine Kette von
Abhängigkeiten&lt;/p&gt;
&lt;p&gt;nach sich.&lt;/p&gt;
&lt;p&gt;Daher benutzt Tiffany einige wenige Dateien aus PIL ohne diese zu
verändern und täuscht&lt;/p&gt;
&lt;p&gt;vor, die Tiff-Dateien zu entpacken, tut es aber nicht. Es werden
lediglich die&lt;/p&gt;
&lt;p&gt;Tiff-Tags ordentlich aufbereitet. Die komprimierten Daten werden so
übernommen&lt;/p&gt;
&lt;p&gt;wie sie sind. Beim Schreiben von Dateien werden daher lediglich die
vorhandenen&lt;/p&gt;
&lt;p&gt;Daten in anderer Reihenfolge wieder zusammengesetzt.&lt;/p&gt;
&lt;p&gt;Im Vortrag werde ich die Implementierung vorstellen sowie weitere
Alternativen,&lt;/p&gt;
&lt;p&gt;die Zukunft von PIL sowie auf weitere Tips und Kniffe in unserem Projekt
eingehen.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Tismer</dc:creator><pubDate>Thu, 01 Nov 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-11-01:pycon-de-2012/tiffany-multipage-tiff-lesen-und-schreiben-mit.html</guid><category>distributed document capture</category><category>monkey-patching</category><category>multipage-tiff</category><category>pil</category></item></channel></rss>