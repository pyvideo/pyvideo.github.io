<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_mike-jones.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-05T00:00:00+00:00</updated><entry><title>Idea to launch in days. Executed Python-style.</title><link href="https://pyvideo.org/pycon-za-2013/idea-to-launch-in-days-executed-python-style.html" rel="alternate"></link><published>2013-10-03T00:00:00+00:00</published><updated>2013-10-03T00:00:00+00:00</updated><author><name>Mike Jones</name></author><id>tag:pyvideo.org,2013-10-03:pycon-za-2013/idea-to-launch-in-days-executed-python-style.html</id><summary type="html"></summary><category term="pyconza"></category><category term="pyconza2013"></category></entry><entry><title>Lightning Talks</title><link href="https://pyvideo.org/pycon-za-2014/lightning-talks-17.html" rel="alternate"></link><published>2014-10-02T00:00:00+00:00</published><updated>2014-10-02T00:00:00+00:00</updated><author><name>Mike Jones</name></author><id>tag:pyvideo.org,2014-10-02:pycon-za-2014/lightning-talks-17.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Lightning Talks are fun, short, five-minute (or less) talks. Ideally
each talk should make a single point, often in a fun, quirky or
over-the-top way.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;ol class="arabic simple"&gt;
&lt;li&gt;Launch to Borderline Zombie in a Year by Mike Jones&lt;/li&gt;
&lt;li&gt;Why you're dumb if you are doing a Python GUI in anything other than
Kivy by Richard Larkin&lt;/li&gt;
&lt;li&gt;PyPy by Adam Jorgensen (slides)&lt;/li&gt;
&lt;li&gt;Sonic Pi by Simon de Haan&lt;/li&gt;
&lt;li&gt;The challenge of mathematical formula markup for African feature
phones by Jonathan Endersby&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="lightning talks"></category><category term="kivy"></category><category term="pyconza"></category><category term="pyconza2014"></category></entry><entry><title>Better APIs using GraphQL with Python and React</title><link href="https://pyvideo.org/pycon-za-2017/better-apis-using-graphql-with-python-and-react.html" rel="alternate"></link><published>2017-10-05T00:00:00+00:00</published><updated>2017-10-05T00:00:00+00:00</updated><author><name>Mike Jones</name></author><id>tag:pyvideo.org,2017-10-05:pycon-za-2017/better-apis-using-graphql-with-python-and-react.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever found yourself stuck in a battle between creating more and
more granular REST endpoints to return different payloads suitable for
the individual use cases of different consumers and just Exposing All
The Data, All The Time?&lt;/p&gt;
&lt;p&gt;Enter GraphQL, born at Facebook but now in wide use in many organisation
and with a burgeoning ecosystem of tools across many languages.&lt;/p&gt;
&lt;p&gt;We'll be examining what GraphQL is, comparison to REST APIs, its
potential use-cases and how to get productive quickly with Graphene
(Python GraphQL service) on your backend and Apollo (Javascript client)
on your frontend.&lt;/p&gt;
&lt;p&gt;We'll use real-world examples from Picsa, where we've adopted
Graphene-Django as the core element in our platform for building
financial services for low-income farmworkers in South Africa.&lt;/p&gt;
&lt;p&gt;This will be an introduction to these frameworks that should be
applicable for those who have no prior experience.&lt;/p&gt;
</summary></entry></feed>