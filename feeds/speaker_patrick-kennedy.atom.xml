<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Patrick Kennedy</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_patrick-kennedy.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-12-16T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Demystifying Flask's Application and Request Contexts with pytest</title><link href="https://pyvideo.org/flaskcon-2020/demystifying-flasks-application-and-request-contexts-with-pytest.html" rel="alternate"></link><published>2020-07-04T00:00:00+00:00</published><updated>2020-07-04T00:00:00+00:00</updated><author><name>Patrick Kennedy</name></author><id>tag:pyvideo.org,2020-07-04:/flaskcon-2020/demystifying-flasks-application-and-request-contexts-with-pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The application and request contexts are key parts of any Flask application, as they control which variables are and are not globally accessible. Understanding how each context works is important when developing Flask applications, and yet they are often misunderstood. This talk dives into how the application and request …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The application and request contexts are key parts of any Flask application, as they control which variables are and are not globally accessible. Understanding how each context works is important when developing Flask applications, and yet they are often misunderstood. This talk dives into how the application and request contexts work when handling a request. The concept of proxies is discussed for providing thread-local access to the application and request contexts. To really illustrate how the application context works, pytest will be utilized to show how the application context works outside of a request. This example shows a common error ('Working outside of application context') during testing and how it should be solved by pushing to the application context stack.&lt;/p&gt;
</content><category term="FlaskCon 2020"></category><category term="flask context"></category><category term="Flask"></category><category term="FlaskCon"></category></entry><entry><title>Testing Flask Applications with pytest</title><link href="https://pyvideo.org/flaskcon-2021/testing-flask-applications-with-pytest.html" rel="alternate"></link><published>2021-12-04T00:00:00+00:00</published><updated>2021-12-04T00:00:00+00:00</updated><author><name>Patrick Kennedy</name></author><id>tag:pyvideo.org,2021-12-04:/flaskcon-2021/testing-flask-applications-with-pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing a Flask application helps ensure that your app will work as expected for your end users. This talk provides an introduction to using pytest for testing Flask applications. Before diving into how to use pytest, this talk explains what should be tested in a Flask application. Next, detailed …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing a Flask application helps ensure that your app will work as expected for your end users. This talk provides an introduction to using pytest for testing Flask applications. Before diving into how to use pytest, this talk explains what should be tested in a Flask application. Next, detailed examples are covered on how to write unit and functional test functions with pytest that are specific to Flask applications. Documentation of the tests is also highlighted using the GIVEN-WHEN-THEN approach. After writing tests, running the tests using pytest (with different options) is presented to demonstrate how easy and powerful pytest is. Examples include verbose mode, running only the last failed tests, and running specific test cases. Next, the concept of fixtures in pytest is presented and detailed examples of how to initialize the state of a Flask application are covered. This section includes properly initializing a Flask application to avoid not having the application context created. Finally, the idea of code coverage is introduced and an example of running coverage.py on a Flask application is demonstrated.&lt;/p&gt;
</content><category term="FlaskCon 2021"></category><category term="flask"></category><category term="testing"></category><category term="pytest"></category></entry><entry><title>How is a Request Processed in Flask?</title><link href="https://pyvideo.org/flaskcon-2023/how-is-a-request-processed-in-flask.html" rel="alternate"></link><published>2023-12-16T00:00:00+00:00</published><updated>2023-12-16T00:00:00+00:00</updated><author><name>Patrick Kennedy</name></author><id>tag:pyvideo.org,2023-12-16:/flaskcon-2023/how-is-a-request-processed-in-flask.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, Patrick will show you how a request is processed in Flask.&lt;/p&gt;
</content><category term="FlaskCon 2023"></category><category term="flask"></category><category term="under the hood"></category></entry></feed>