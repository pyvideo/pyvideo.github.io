<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_surasak-watthanayontkit.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-06-16T00:00:00+00:00</updated><entry><title>Deep learning in the household</title><link href="https://pyvideo.org/pycon-thailand-2018/deep-learning-in-the-household.html" rel="alternate"></link><published>2018-06-16T00:00:00+00:00</published><updated>2018-06-16T00:00:00+00:00</updated><author><name>Surasak Watthanayontkit</name></author><id>tag:pyvideo.org,2018-06-16:pycon-thailand-2018/deep-learning-in-the-household.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A couple years ago, Machine Learning was thought of as the subject requiring intensive computing power and comprehensive understanding of mathematics. Thus, public assumed that it was the job exclusively for giant tech companies with super-genius researchers.&lt;/p&gt;
&lt;p&gt;Today, the community has achieved substantial advancements and they are open enough to share their achievements and computing resources to the public at no expenses. Frameworks like TenserFlow, Keras make building a Deep Learning model require only a Python code snippet. Furthermore, Transfer Learning helps developing models even easier by taking portions of pre-trained more generic models, many of which are open-sourced. This has potentials to accelerate the machine learning apps on mobile devices, one of the emerging trend in the field, where compactness and performance are preferred over accuracy.&lt;/p&gt;
&lt;p&gt;With rich on-line resources around, including online courses (many of which are free), blog posts, and computing resources available at no expenses, the talk covers the steps to apply those knowledge to build a small, yet useful app based on Deep Learning model - without Deep Pockets, a Ph.D., and mega infrastructure.&lt;/p&gt;
&lt;p&gt;The talk is intended for beginners with background in traditional software developments. Mathematical knowledge in differential calculus (derivatives - not in the context of Stock Futures) is useful but not required as it may be touched briefly. Audiences are not expected to walk away as subject matter experts after finishing the talk but the speaker hope to spark inspiration to learn more on the subject and eventually end up developing something for their own use.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Earned a B.Eng. nearly 20 years ago, when the vocabularies like &amp;quot;Deep Learning&amp;quot; and &amp;quot;Data Science&amp;quot; had not even been materialized. His full time job is traditional software development (Python is not used) and it has no direct relevance to Machine Learning.
He discovered MOOCs in late 2013 and completed his first MOOC on Coursera in 2014. Since then, he has completed over 60 courses (he tries to increase the number even though has already lost the exact count) including a number of Python programming and Machine Learning courses.
In his spare time, apart from doing MOOCs/writing Python programs and practicing Keras/TensorFlow framework, he also writes Swfit programs (and published one on iOS AppStore, although, again, Swift is not used in his full time job) He also does endurance sports like long distance running (a.k.a. marathons), triathlons, and high-altitude trekking&lt;/p&gt;
</summary></entry></feed>