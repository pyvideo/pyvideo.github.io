<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 25 Oct 2017 00:00:00 +0000</lastBuildDate><item><title>An introduction to PyMC3</title><link>https://pyvideo.org/pycon-de-2017/an-introduction-to-pymc3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Adrian Seyboldt&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I studied Mathematics and Bioinformatics in Bonn and Tübingen and I am a core developer of pymc3 since Feb 2017. Currently, I work for Quantopian on the development of Bayesian Methods for portfolio allocation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PyMC3 allows you to build statistical models for a wide range of datasets, use those models to estimate underlying parameters, and compute the uncertainty about those parameters. In this talk I will try to give a gentle introduction to PyMC3, and help avoid common pitfalls for new users.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some of the problems that are discussed in the context of the reproducibility crisis in science and statistics can be solved or alleviated by tools like PyMC3 or Stan. They allow users to build much more realistic models and get a full distribution of the possible values for parameters as output – instead of p-values that are often hard to interpret correctly. Thanks to Hamiltonian and Variational methods, they are more flexible and can be applied to larger problems than predecessors like JAGS and BUGS. However, these new methods also come with challenges. Writing good models isn't easy, and when inference algorithms cry out in pain, they need someone who listens to them. This talk uses some real-world applications to give an introduction to PyMC3, without requiring a lot of background in math, statistics or programming.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrian Seyboldt</dc:creator><pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-25:pycon-de-2017/an-introduction-to-pymc3.html</guid><category>python</category><category>data-science</category><category>machine learning</category><category>analysis</category></item><item><title>Data Science &amp; Data Visualization in Python. How to harness power of Python for social good?</title><link>https://pyvideo.org/pydata-berlin-2017/data-science-data-visualization-in-python-how-to-harness-power-of-python-for-social-good.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python as an Open Data Science tool offers many libraries for data visualization and I will show you how to use and combine the best. I strongly believe that power of data is not only in the information &amp;amp; insight that data can provide us, Data is and can be really beautiful and can not only transform our perception but also the world that we all live in.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In my talk I will primarily focus on answering/offer the answer to these questions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why we need data science and why more and more people should be really interested in analyzing data and data visualization? (motivation)&lt;/li&gt;
&lt;li&gt;What is data science and how to start doing it in Python? (introduction of procedures, tools, most popular IDE-s for Python, etc.)&lt;/li&gt;
&lt;li&gt;What tools for data analysis and data visualization Python offers? (in each stage of analysis the best libraries will be shown for the specific purpose; as for data visualization we will focus particularly on Bokeh, Seaborn, Plotly and use of Jupyter Notebook and Plotly)&lt;/li&gt;
&lt;li&gt;How to 'unlock' the insight hidden in data through Python and how to use it to transform not only public administration or business, but ultimately the transformation of the whole society and economy towards the insight &amp;amp; knowledge based? (potential of data science)&lt;/li&gt;
&lt;li&gt;Open Data, Open Government Partnership, Open Public Administration &amp;amp; all the advantages of Open Data Science &amp;amp; Python. Data-Driven Approach. Everywhere. Now. (the end of talk +vision)&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Radovan Kavicky</dc:creator><pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-30:pydata-berlin-2017/data-science-data-visualization-in-python-how-to-harness-power-of-python-for-social-good.html</guid><category>python</category><category>data-science</category><category>data-visualization</category><category>analytics</category><category>PyData</category><category>PyDataBLN</category><category>PyDataBerlin</category><category>PyDataBA</category><category>PyDataBratislava</category><category>talk</category><category>Data</category><category>Bokeh</category><category>Social Good</category><category>datascience</category><category>jupyter</category><category>open science</category><category>open data science</category><category>DataVisualization</category><category>data-analysis</category><category>analysis</category><category>matplotlib</category><category>numpy</category><category>data wrangling</category><category>jupyter notebook</category><category>pandas</category><category>machine learning</category><category>deep learning</category><category>Open Data</category><category>Citizen Data Science</category></item><item><title>Data Transformation: A Framework for Exploratory Data Analysis</title><link>https://pyvideo.org/pydata-dc-2016/data-transformation-a-framework-for-exploratory-data-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Exploratory data analysis plays a critical role in the job of every data scientist, but very few have a structured process or framework for exploring data quickly and efficiently. This talk will introduce the exploratory framework I use in my day-to-day work and will walk attendees through a practical example of how to use the framework to unlock hidden insights with the help of Python libraries.&lt;/p&gt;
&lt;p&gt;At the heart of data analysis, there lies a need to understand the real world entities being represented in the data. Every data set we encounter is an attempt to capture a slice of our complex world and communicate some information about it in a way that has potential to be informative to humans, machines, or both. Moving from basic analyses to advanced analytics requires the ability to imagine multiple ways of conceptualizing the composition of entities and the relationships present in our data. It also requires the realization that different levels of aggregation, disaggregation, and transformation can open up new pathways to understanding our data and identifying the valuable insights it contains.&lt;/p&gt;
&lt;p&gt;In this talk, we’ll discuss several ways to think about the composition and representation of our data. We’ll also demonstrate a series of methods that leverage tools like networks, hierarchical aggregations, and unsupervised clustering to visually explore our data, transform it to discover new insights, help frame analytical problems and questions, and even improve machine learning model performance. In exploring these approaches, and with the help of Python libraries such as Pandas, Scikit-Learn, Seaborn, and NetworkX, we will provide a practical framework for thinking creatively and visually about your data and unlocking latent value and insights hidden deep beneath its surface.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tony Ojeda</dc:creator><pubDate>Sun, 09 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-09:pydata-dc-2016/data-transformation-a-framework-for-exploratory-data-analysis.html</guid><category>analysis</category><category>Data</category><category>Data Analysis</category><category>framework</category></item><item><title>Dynamics in Graph Analysis Adding Time as a Structure for Visual and Statistical</title><link>https://pyvideo.org/pydata-dc-2016/dynamics-in-graph-analysis-adding-time-as-a-structure-for-visual-and-statistical.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Network analyses are powerful methods for both visual analytics and machine learning but can suffer as their complexity increases. By embedding time as a structural element rather than a property, we will explore how time series and interactive analysis can be improved on Graph structures. Primarily we will look at decomposition in NLP-extracted concept graphs using NetworkX and Graph Tool.&lt;/p&gt;
&lt;p&gt;Modeling data as networks of relationships between entities can be a powerful method for both visual analytics and machine learning; people are very good at distinguishing patterns from interconnected structures, and machine learning methods get a performance improvement when applied to graph data structures. However, as these structures become more complex or embed more information over time, both visual and algorithmic methods get messy; visual analyses suffer from the &amp;quot;hairball&amp;quot; effect, and graph algorithms require either more traversal or increased computation at each vertex. A growing area to reduce this complexity and optimize analytics is the use of interactive and subgraph techniques that model how graph structures change over time.&lt;/p&gt;
&lt;p&gt;In this talk, I demonstrate two practical techniques for embedding time into graphs, not as computational properties, but rather as structural elements. The first technique is to add time as a node to the graph, which allows the graph to remain static and complete, but minimizes traversals and allows filtering. The second is to represent a single graph as multiple subgraphs where each is a snapshot at a particular time. This allows us to use time series analytics on our graphs, but perhaps more importantly, to use animation or interactive methodologies to visually explore those changes and provide meaningful dynamics.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin Bengfort</dc:creator><pubDate>Sun, 09 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-09:pydata-dc-2016/dynamics-in-graph-analysis-adding-time-as-a-structure-for-visual-and-statistical.html</guid><category>analysis</category></item><item><title>Using Exploratory Data Analysis to Discover Patterns in Image and Document Collections</title><link>https://pyvideo.org/pydata-chicago-2016/using-exploratory-data-analysis-to-discover-patterns-in-image-and-document-collections.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://docs.google.com/presentation/d/1StRN0-_0x4BPkFFQ79GusgQAqXgwvJ1Fc8Tlu68YO4E/edit"&gt;https://docs.google.com/presentation/d/1StRN0-_0x4BPkFFQ79GusgQAqXgwvJ1Fc8Tlu68YO4E/edit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Exploratory Data Analysis (EDA) is one of the key sets of procedures for summarizing a dataset. In this talk we will develop an EDA procedure for large collections of documents and images (such as photo albums, emails, articles, etc). We will show features used from NLP and Deep Neural Nets and also introduce novel visualization techniques for large image collections using PyImagePlot.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mehrdad Yazdani</dc:creator><pubDate>Sun, 28 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-28:pydata-chicago-2016/using-exploratory-data-analysis-to-discover-patterns-in-image-and-document-collections.html</guid><category>analysis</category><category>Data</category><category>data analysis</category><category>patterns</category></item><item><title>Visualization and Analysis of Large Scale Datasets with Python</title><link>https://pyvideo.org/europython-2011/visualization-and-analysis-of-large-scale-dataset.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Christine Moran - 23 June 2011 in &amp;quot;Training Pizza
Margherita &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I will introduce ParaView, an open source application
developed by researchers around the world for parallel visualization and
analysis of large scale datasets, which in can be used to visualize and
analyze terabytes of data in real time. ParaView’s core algorithms are
implemented in C/C++ but all its major functionality can be scripted
from python with ease. I’ll give a short introduction to AstroViz, a
parallel visualization tool for astrophysical simulations implemented as
an opensource plugin to ParaView, which I have been lead developer on
since 2009. The focus of the talk will be on driving ParaView from
within python however, both general out of the box use and customized
extensions.&lt;/p&gt;
&lt;p&gt;I also have access to several parallel supercomputers so if there’s a
huge dataset we as a crowd would like to tackle visualizing during the
course of the week that would be fun project. The end of the talk will
be a short brainstorm of cool applications of analysis and visualization
of large scale datasets.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.paraview.org/"&gt;http://www.paraview.org/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christine Moran</dc:creator><pubDate>Thu, 21 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-21:europython-2011/visualization-and-analysis-of-large-scale-dataset.html</guid><category>analysis</category><category>datasets</category><category>opensource</category><category>parallel</category><category>simulations</category><category>visualization</category></item><item><title>Social Network Analysis con Python</title><link>https://pyvideo.org/europython-2011/social-network-analysis-con-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Enrico Franchi - 24 June 2011 in &amp;quot;Track Italiana Big
Mac &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La popolarità dell'analisi dei network è cresciuta molto con la recente
diffusione dei social network. Si tratta di un argomento
multidisciplinare, con importanti contributi dai ricercatori di svariate
aree come fisica, sociologia, matematica ed informatica&lt;/p&gt;
&lt;p&gt;Tuttavia, l'analisi dei network è anche uno strumento utile per i
programmatori. Le tecniche base che saranno introdotte in questo talk
possono infatti essere usate ad esempio per i) testare la robustezza e
la resistenza ai fallimenti di un network, e ii) comprendere a fondo la
struttura di un social network, cosa che può portare ad intuizioni su
mode e trend a partire dai moderni servizi di networking.&lt;/p&gt;
&lt;p&gt;Insieme a questi concetti, sarà mostrato del codice Python che sfrutterà
sia dei tool esistenti per l'analisi dei network che dei package di
calcolo numerico. L'attenzione sarà principalmente sul codice, mostrato
e discusso insieme alla teoria su cui è basato.&lt;/p&gt;
&lt;p&gt;Gli unici prerequisiti consigliati per seguire questo talk sono delle
abilità matematiche di base e la conoscenza a livello introduttivo del
linguaggio di programmazione Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Enrico Franchi</dc:creator><pubDate>Mon, 18 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-18:europython-2011/social-network-analysis-con-python.html</guid><category>analysis</category><category>network</category></item><item><title>Python(x,y): diving into scientific Python</title><link>https://pyvideo.org/europython-2011/pythonxy-diving-into-scientific-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Vincent Noel - 22 June 2011 in &amp;quot;Training Pizza
Margherita &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This training session will introduce the Python scientific stack to
beginner or intermediate-level Python programmers. The basics of
scientific programming with Python will be presented:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;creation of arrays and structured arrays using numpy&lt;/li&gt;
&lt;li&gt;fast, loopless manipulation of numpy arrays through fancy indexing
and vectorized functions&lt;/li&gt;
&lt;li&gt;convenient saving/loading of array variables using numpy&lt;/li&gt;
&lt;li&gt;improved interactive use through ipython&lt;/li&gt;
&lt;li&gt;data analysis using various scipy modules (signal analysis, image
classification, etc)&lt;/li&gt;
&lt;li&gt;plotting large time series, histograms, scatterplots, images etc.
using matplotlib&lt;/li&gt;
&lt;li&gt;saving/loading large datasets in structured scientific formats such
as netCDF, HDF (depending on interest)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These concepts will be used in coding exercises, in the programming
environnement provided by the Python(x,y) distribution, which is freely
downloadable and includes recent versions of Python, numpy and
matplotlib. The Python(x,y) distribution runs on Windows, which will be
the OS of choice for this session. You should still be able to follow
the examples in other Python distributions, e.g. EPD.&lt;/p&gt;
&lt;p&gt;The entire talk (PDF), code samples and data files can be downloaded
from the following
&lt;a class="reference external" href="http://www.lmd.polytechnique.fr/~noel/EP2011/DivingIntoSci%20entificPython.zip"&gt;archive&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vincent Noel</dc:creator><pubDate>Wed, 13 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-13:europython-2011/pythonxy-diving-into-scientific-python.html</guid><category>analysis</category><category>datasets</category><category>image</category><category>numpy</category><category>python,</category><category>scientific</category><category>scipy</category></item><item><title>Social Network Analysis in Python</title><link>https://pyvideo.org/europython-2011/social-network-analysis-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Enrico Franchi - 23 June 2011 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Network Analysis has gained a huge recognition since the widespread
adoption of on-line social networking systems. It is a
cross-disciplinary subject with important contributions from researchers
of different areas such as physics, sociology, maths and computer
science.&lt;/p&gt;
&lt;p&gt;However, Network Analysis is also a useful tool for the working
programmer. The basic techniques which will be introduced in this talk
can be used, for example, both to i) test the robustness and resilience
to damage of a technological network and ii) understand the structure of
a social network, which can in turn lead to insight on trends and
preferences gathering information from modern on-line social networking
systems.&lt;/p&gt;
&lt;p&gt;Along with the concepts, working Python code is presented, both using
existing network analysis Python tools and numeric packages. The focus
is mainly placed on code, which will be shown and discussed together
with the formal theory.&lt;/p&gt;
&lt;p&gt;Basic maths skills and basic knowledge of the Python programming
language are the only suggested prerequisites.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Enrico Franchi</dc:creator><pubDate>Wed, 13 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-13:europython-2011/social-network-analysis-in-python.html</guid><category>analysis</category><category>network</category><category>networking</category></item><item><title>Pycon 2010: Analysis: The other kind of testing (#185)</title><link>https://pyvideo.org/pycon-us-2010/pycon-2010--analysis--the-other-kind-of-testing--.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Analysis: The other kind of testing&lt;/p&gt;
&lt;p&gt;Presented by Bob Ippolito&lt;/p&gt;
&lt;p&gt;Software testing helps verify that your code meets a specification, but
not how to improve the specification. How can you stay competitive when
most of the big names today are using analysis to guide product
evolution? Level the playing field and make better products by learning
how to design experiments, collect data, make measurements, and optimize
your specifications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob Ippolito</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--analysis--the-other-kind-of-testing--.html</guid><category>analysis</category><category>pycon</category><category>pycon2010</category><category>testing</category></item><item><title>Python-Aware Python</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--python-aware-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python-Aware Python&lt;/p&gt;
&lt;p&gt;Presented by Ned Batchelder&lt;/p&gt;
&lt;p&gt;Python provides many features for introspecting, analyzing, parsing,
compiling, and otherwise grokking Python code. This talk will cover a
number of the techniques for writing Python-Aware Python, and will
hopefully inspire you to build the next great Python tool.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Python provides many features for introspecting, analyzing, parsing,
compiling, and otherwise grokking Python code. These modules and
techniques provide the foundation for developer's tools such as
autocompletion IDE's, code analysis tools, test runners, profilers, and
so on.&lt;/p&gt;
&lt;p&gt;I'll delve into a number of the common techniques used to write
Python-Aware Python. Each has its area of applicability and its
strengths and weaknesses. I'll demonstrate small samples that show how
those techniques underlie the tools we all know and love.&lt;/p&gt;
&lt;p&gt;The world of Python tools is ready for new exploration. This talk will
give you the foundation you need to write the next great Python-aware
application.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ned Batchelder</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--python-aware-python.html</guid><category>analysis</category><category>compiling</category><category>introspection</category><category>parsing</category><category>pycon</category><category>pycon2011</category></item></channel></rss>