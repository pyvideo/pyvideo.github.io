<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Dayton Hoffmann</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_dayton-hoffmann.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-07-12T00:00:00+00:00</updated><subtitle></subtitle><entry><title>A Review of Linear Programming for Python</title><link href="https://pyvideo.org/scipy-2021/a-review-of-linear-programming-for-python.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Nicholas McKibben</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/a-review-of-linear-programming-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This presentation provides a user's perspective review of open source linear programming libraries and packages available for Python including recent enhancements to SciPy's linear programming capabilities from the HiGHS high performance library. Examples of classic problem formulation and encoding are explored to illustrate differences in library approaches. General comparisons â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This presentation provides a user's perspective review of open source linear programming libraries and packages available for Python including recent enhancements to SciPy's linear programming capabilities from the HiGHS high performance library. Examples of classic problem formulation and encoding are explored to illustrate differences in library approaches. General comparisons of solvers in terms of features, performance, and portability are presented as well as a gap analysis of the Python linear programming ecosystem.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry></feed>