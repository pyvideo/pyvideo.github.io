<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pydata-meetups.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-07T00:00:00+00:00</updated><entry><title>tqdm - A Fast, Extensible Progress Bar for Python and CLI</title><link href="https://pyvideo.org/pydata-meetups/tqdm-a-fast-extensible-progress-bar-for-python-and-cli.html" rel="alternate"></link><published>2019-05-07T00:00:00+00:00</published><updated>2019-05-07T00:00:00+00:00</updated><author><name>Casper da Costa-Luis</name></author><id>tag:pyvideo.org,2019-05-07:pydata-meetups/tqdm-a-fast-extensible-progress-bar-for-python-and-cli.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A demonstration of the world's most-used progress bar by its primary developer&lt;/p&gt;
</summary><category term="lightning-talks"></category><category term="tutorial"></category><category term="performance"></category><category term="jupyter"></category><category term="notebook"></category><category term="tqdm"></category><category term="progressbar"></category><category term="progressmeter"></category><category term="progress-bar"></category><category term="meter"></category><category term="rate"></category><category term="eta"></category><category term="console"></category><category term="terminal"></category><category term="time"></category><category term="progress"></category><category term="bar"></category><category term="gui"></category><category term="python"></category><category term="parallel"></category><category term="cli"></category><category term="utilities"></category></entry><entry><title>Azure Machine Learning: Predict Who Survives the Titanic</title><link href="https://pyvideo.org/pydata-meetups/azure-machine-learning-predict-who-survives-the-titanic.html" rel="alternate"></link><published>2017-06-08T00:00:00+00:00</published><updated>2017-06-08T00:00:00+00:00</updated><author><name>Jennifer Marsman</name></author><id>tag:pyvideo.org,2017-06-08:pydata-meetups/azure-machine-learning-predict-who-survives-the-titanic.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Azure Machine Learning: Predict Who Survives the Titanic&lt;/p&gt;
&lt;p&gt;Interested in doing machine learning in the cloud? In this demo, Jennifer Marsman will set the stage with some information on the different types of machine learning (clustering, classification, regression, and anomaly detection) supported by Azure Machine Learning and when to use each. Then, for the majority of the session, she’ll demonstrate using Azure Machine Learning to build a model which predicts survival of individuals on the Titanic (one of the challenges on the Kaggle website). She'll talk through how she analyzes the given data and why she chooses to drop or modify certain data, so you will see the entire process from data import to data cleaning to building, training, testing, and deploying a model. You’ll leave with practical knowledge on how to get started and build your own predictive models using Azure Machine Learning.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Jennifer Marsman is a Principal Software Development Engineer in Microsoft’s Developer Experience group, where she educates developers on Microsoft’s new technologies with a focus on data science, machine learning, and artificial intelligence. Jennifer blogs at &lt;a class="reference external" href="http://blogs.msdn.microsoft.com/jennifer"&gt;http://blogs.msdn.microsoft.com/jennifer&lt;/a&gt; and tweets at &amp;#64;jennifermarsman.&lt;/p&gt;
</summary></entry><entry><title>Scalable, Distributed, and Reproducible Machine Learning</title><link href="https://pyvideo.org/pydata-meetups/scalable-distributed-and-reproducible-machine-learning.html" rel="alternate"></link><published>2017-05-25T00:00:00+00:00</published><updated>2017-05-25T00:00:00+00:00</updated><author><name>Daniel Whitenack</name></author><id>tag:pyvideo.org,2017-05-25:pydata-meetups/scalable-distributed-and-reproducible-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The recent advances in machine learning and artificial intelligence are amazing!  Yet, in order to have real value within a company, data scientists must be able to get their models off of their laptops and deployed within a company’s data pipelines and infrastructure.  Those models must also scale to production size data. In this talk, we will implement a model locally in Python. We will then take that model and deploy both it's training and inference in a scalable manner to a production cluster with Pachyderm, an open source framework for distributed pipelining and data versioning. We will also learn how to update the production model online, track changes in our model and data, and explore our results.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Daniel Whitenack (&amp;#64;dwhitena) is a Ph.D. trained data scientist working with Pachyderm (&amp;#64;pachydermIO). Daniel develops innovative, distributed data pipelines which include predictive models, data visualizations, statistical analyses, and more. He has spoken at conferences around the world (ODSC, Spark Summit, Datapalooza, DevFest Siberia, GopherCon, and more), teaches data science/engineering with Ardan Labs (&amp;#64;ardanlabs), maintains the Go kernel for Jupyter, and is actively helping to organize contributions to various open source data science projects.&lt;/p&gt;
</summary><category term="machine learning"></category><category term="pachyderm"></category></entry><entry><title>Attention Models For Deep Models</title><link href="https://pyvideo.org/pydata-meetups/attention-models-for-deep-models.html" rel="alternate"></link><published>2017-05-07T00:00:00+00:00</published><updated>2017-05-07T00:00:00+00:00</updated><author><name>Amir Balaish</name></author><id>tag:pyvideo.org,2017-05-07:pydata-meetups/attention-models-for-deep-models.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we will discuss the implementation of selective attention in deep networks. We will also talk about the pros and cons of different attention methods and provide insights and best practices. Practical implementations examples for both image processing and NLP will be presented. Finally, novel ideas for further research in the subject will be suggested.&lt;/p&gt;
</summary></entry><entry><title>Generative models &amp; Variational AutoEncoder explained</title><link href="https://pyvideo.org/pydata-meetups/generative-models-variational-autoencoder-explained.html" rel="alternate"></link><published>2017-05-07T00:00:00+00:00</published><updated>2017-05-07T00:00:00+00:00</updated><author><name>Shai Harel</name></author><id>tag:pyvideo.org,2017-05-07:pydata-meetups/generative-models-variational-autoencoder-explained.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The ever-increasing size of modern datasets combined with the difficulty of obtaining labeled information has made semi-supervised learning one of the problems of significant practical importance in modern data analysis. VAE offers a novel way to enforce structure on the representation surface, by doing so, it opens the possibility of employing traditional semi supervised learning techniques on the structured embedding space. In this talk I will cover how VAE impose latent space structure constraint, and how we can use it in a semi-supervised settings.&lt;/p&gt;
</summary><category term="semi supervised learning"></category></entry><entry><title>Machine Learning Applied To Mice Diet &amp; Weight Gain</title><link href="https://pyvideo.org/pydata-meetups/machine-learning-applied-to-mice-diet-weight-gain.html" rel="alternate"></link><published>2017-05-07T00:00:00+00:00</published><updated>2017-05-07T00:00:00+00:00</updated><author><name>Daphna Rothchild</name></author><id>tag:pyvideo.org,2017-05-07:pydata-meetups/machine-learning-applied-to-mice-diet-weight-gain.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Persistent microbiome alterations modulate the rate of post-dieting weight regain&lt;/p&gt;
&lt;p&gt;In tackling the obesity pandemic, significant efforts are devoted to the development of effective weight reduction strategies, yet many dieting individuals fail to maintain a long-term weight reduction, and instead undergo excessive weight regain cycles. The mechanisms driving recurrent post-dieting obesity remain largely elusive. Here we identify an intestinal microbiome signature that persists after successful dieting of obese mice, which contributes to faster weight regain and metabolic aberrations upon re-exposure to obesity-promoting conditions and transmits the accelerated weight regain phenotype upon inter-animal transfer. We develop a machine-learning algorithm that enables personalized microbiome-based prediction of the extent of post-dieting weight regain. Additionally, we find that the microbiome contributes to diminished post-dieting flavonoid levels and reduced energy expenditure, and demonstrate that flavonoid-based ‘post-biotic’ intervention ameliorates excessive secondary weight gain. Together, our data highlight a possible microbiome contribution to accelerated post-dieting weight regain, and suggest that microbiome-targeting approaches may help to diagnose and treat this common disorder.&lt;/p&gt;
</summary><category term="obesity"></category><category term="microbiome"></category><category term="machine learning"></category></entry><entry><title>Easy Spark: Exploiting large datasets for multi-class classification</title><link href="https://pyvideo.org/pydata-meetups/easy-spark-exploiting-large-datasets-for-multi-class-classification.html" rel="alternate"></link><published>2017-04-14T00:00:00+00:00</published><updated>2017-04-14T00:00:00+00:00</updated><author><name>Victor Makarenkov</name></author><id>tag:pyvideo.org,2017-04-14:pydata-meetups/easy-spark-exploiting-large-datasets-for-multi-class-classification.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Apache Spark provides an interface for programming entire clusters with implicit data parallelism and fault tolerance. At first glance, it seems that getting started with programming the Hadoop eco-system is quite cumbersome, and not so user-friendly for a data scientist or a machine learning specialist. In this talk I will briefly introduce Apache Spark, and its programming paradigm. I will show how to easily execute a distributed training of the common multi-class classifiers (naïve Bayes, random forest, logistic regression), without installing a single virtual machine, virtual box or a docker. I will share my experience of managing long-term software projects which are based on the Hadoop technology for data storage, extraction and transformation.&lt;/p&gt;
</summary></entry><entry><title>Generative Adversarial Networks</title><link href="https://pyvideo.org/pydata-meetups/generative-adversarial-networks.html" rel="alternate"></link><published>2017-04-13T00:00:00+00:00</published><updated>2017-04-13T00:00:00+00:00</updated><author><name>Victoria Mazo</name></author><id>tag:pyvideo.org,2017-04-13:pydata-meetups/generative-adversarial-networks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Generative Adversarial Networks (GANs) are a promising framework for unsupervised learning. GANs consist of a generator and a discriminator, which learn together by pursuing competing goals. From a conceptual perspective, adversarial training is fascinating because it bypasses the need of loss functions in learning, and opens the door to new ways of regularizing (as well as fooling or attacking) learning machines. In this talk GANs basics are explained and a lot of examples of their usage are provided.&lt;/p&gt;
</summary><category term="generative adversarial networks"></category></entry><entry><title>Interactive Data Visualization in Jupyter Notebook Using bqplot</title><link href="https://pyvideo.org/pydata-meetups/interactive-data-visualization-in-jupyter-notebook-using-bqplot.html" rel="alternate"></link><published>2017-04-13T00:00:00+00:00</published><updated>2017-04-13T00:00:00+00:00</updated><author><name>Dhruv Madeka</name></author><id>tag:pyvideo.org,2017-04-13:pydata-meetups/interactive-data-visualization-in-jupyter-notebook-using-bqplot.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bqplot is a Python plotting library based on d3.js that offers its functionality directly in the Jupyter Notebook, including selections, interactions, and arbitrary css customization. In bqplot, every element of a chart is an interactive widget that can be bound to a python function, which serves as the callback when an interaction takes place. This allows the user to generate full fledged interactive applications directly in the Notebook with just a few lines of Python code. In the second part of the talk, drawing examples from fields like Data Science and Finance, we show examples of building interactive charts and dashboards using bqplot and the ipywidgets framework.&lt;/p&gt;
&lt;p&gt;The talk will also cover bqplot's interaction with the new JupyterLab IDE and what we plan for the future.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Dhruv Madeka is a Quantitative Researcher at Bloomberg LP. His current research interests focus on Machine Learning, Quantitative Finance, Data Visualization and Applied Mathematics. Having graduated from the University of Michigan with a BS in Operations Research and from Boston University with an MS in Mathematical Finance, Dhruv is part of one of the leading research teams in Finance, developing models, software and tools for users to make their data analysis experience richer.&lt;/p&gt;
</summary><category term="bqplot"></category><category term="jupyter lab"></category></entry><entry><title>Introduction to Algorithmic Trading</title><link href="https://pyvideo.org/pydata-meetups/introduction-to-algorithmic-trading.html" rel="alternate"></link><published>2017-04-13T00:00:00+00:00</published><updated>2017-04-13T00:00:00+00:00</updated><author><name>Andrew Kreimer</name></author><id>tag:pyvideo.org,2017-04-13:pydata-meetups/introduction-to-algorithmic-trading.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;He provides guidelines and tools to save time and money, explains how to get the data, create trading models, evaluate and trade them in Python. In addition he shows a simple submission for Numer.ai, a hedge fund of Data Scientists and a simple trading algorithm using Machine Learning for Quantopian, a platform to research and back-test various trading strategies.&lt;/p&gt;
&lt;p&gt;Slides and code: &lt;a class="reference external" href="https://github.com/algonell/PyData"&gt;https://github.com/algonell/PyData&lt;/a&gt;&lt;/p&gt;
</summary><category term="trading"></category></entry><entry><title>Working with TensorFlow - tips learned from Spark PyData</title><link href="https://pyvideo.org/pydata-meetups/working-with-tensorflow-tips-learned-from-spark-pydata.html" rel="alternate"></link><published>2017-04-05T00:00:00+00:00</published><updated>2017-04-05T00:00:00+00:00</updated><author><name>Tal Franji</name></author><id>tag:pyvideo.org,2017-04-05:pydata-meetups/working-with-tensorflow-tips-learned-from-spark-pydata.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What tips can we use with TensorFlow taken from Spark/big-data experience? Working with cloud machines, experimenting, iterating, interactive work, monitoring and visualisation. Some script goodies on github provided for working with EC2 and Jupyter.&lt;/p&gt;
</summary><category term="tensorflow"></category></entry><entry><title>Taming Big Data with Jupyter and Friends</title><link href="https://pyvideo.org/pydata-meetups/taming-big-data-with-jupyter-and-friends.html" rel="alternate"></link><published>2017-03-02T00:00:00+00:00</published><updated>2017-03-02T00:00:00+00:00</updated><author><name>Carol Willing</name></author><id>tag:pyvideo.org,2017-03-02:pydata-meetups/taming-big-data-with-jupyter-and-friends.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This month, we are excited to host Carol Willing who will be discussing the Jupyter eco-sytem.  Carol develops software, electronics, educational tutorials, and is passionate about outreach.  She is a core developer on the Jupyter Project and is a former director at the Python Software foundation.  She continues to contribute her time to OpenHatch, Systers, PyLadies San Diego, and San Diego Python.&lt;/p&gt;
</summary><category term="jupyter"></category></entry><entry><title>Lightning Talks - Part 1</title><link href="https://pyvideo.org/pydata-meetups/lightning-talks-part-1.html" rel="alternate"></link><published>2017-02-16T00:00:00+00:00</published><updated>2017-02-16T00:00:00+00:00</updated><author><name>Uri Goren</name></author><id>tag:pyvideo.org,2017-02-16:pydata-meetups/lightning-talks-part-1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="7%" /&gt;
&lt;col width="27%" /&gt;
&lt;col width="66%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;00:00&lt;/td&gt;
&lt;td&gt;Uri Goren&lt;/td&gt;
&lt;td&gt;Basic Bayesian statistics for churn analysis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;08:49&lt;/td&gt;
&lt;td&gt;Ohad Zadok&lt;/td&gt;
&lt;td&gt;Visualization of Neural networks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;14:56&lt;/td&gt;
&lt;td&gt;Tal perry&lt;/td&gt;
&lt;td&gt;Recurrent neural networks in 10 minutes or less&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;26:00&lt;/td&gt;
&lt;td&gt;Nathaniel Shimoni&lt;/td&gt;
&lt;td&gt;Model validation methods (Kaggle)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;35:20&lt;/td&gt;
&lt;td&gt;Raphael Cohen&lt;/td&gt;
&lt;td&gt;Wow, that's awesome! Detecting emotion in call&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Lightning Talks - Part 2</title><link href="https://pyvideo.org/pydata-meetups/lightning-talks-part-2.html" rel="alternate"></link><published>2017-02-16T00:00:00+00:00</published><updated>2017-02-16T00:00:00+00:00</updated><author><name>Omer Sagi</name></author><id>tag:pyvideo.org,2017-02-16:pydata-meetups/lightning-talks-part-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="5%" /&gt;
&lt;col width="18%" /&gt;
&lt;col width="77%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;00:00&lt;/td&gt;
&lt;td&gt;Omer Sagi&lt;/td&gt;
&lt;td&gt;Sugar cane yield Prediction&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;10:40&lt;/td&gt;
&lt;td&gt;Amit Aronovitch&lt;/td&gt;
&lt;td&gt;Quick visualization tool for Analysis of Shadows cast by (actual physical) Clouds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;22:02&lt;/td&gt;
&lt;td&gt;Daniel Levy&lt;/td&gt;
&lt;td&gt;The Feather format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;28:00&lt;/td&gt;
&lt;td&gt;Gidi Shperber&lt;/td&gt;
&lt;td&gt;Modern recommendation engine in python with LightFM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;37:29&lt;/td&gt;
&lt;td&gt;Alon Nir&lt;/td&gt;
&lt;td&gt;Pandas tips and tricks (Slides: &lt;a class="reference external" href="https://github.com/alonnir/PyData-TLV-Talk"&gt;https://github.com/alonnir/PyData-TLV-Talk&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Fraud detection challenges and data skepticism using LIME</title><link href="https://pyvideo.org/pydata-meetups/fraud-detection-challenges-and-data-skepticism-using-lime.html" rel="alternate"></link><published>2017-01-05T00:00:00+00:00</published><updated>2017-01-05T00:00:00+00:00</updated><author><name>Shir Meir Lador</name></author><id>tag:pyvideo.org,2017-01-05:pydata-meetups/fraud-detection-challenges-and-data-skepticism-using-lime.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Shir presents the story of developing a machine learning model which automatically approves factoring deals, the challenges in the model training, evaluation and interpretation including a mysterious problem in the model creation and the details of its final solution. In addition she discusses data leakage, overfitting and a cutting-edge framework for model explanations (LIME).&lt;/p&gt;
</summary></entry></feed>