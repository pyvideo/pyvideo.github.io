<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Alexandra Wörner</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_alexandra-worner.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-05-12T00:00:00+00:00</updated><subtitle></subtitle><entry><title>A data scientist's guide to code reviews</title><link href="https://pyvideo.org/pycon-de-2022/a-data-scientists-guide-to-code-reviews.html" rel="alternate"></link><published>2022-05-12T00:00:00+00:00</published><updated>2022-05-12T00:00:00+00:00</updated><author><name>Alexandra Wörner</name></author><id>tag:pyvideo.org,2022-05-12:/pycon-de-2022/a-data-scientists-guide-to-code-reviews.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker:: Alexandra Wörner&lt;/p&gt;
&lt;p&gt;Track: General: Python &amp;amp; PyData Friends
A crucial aspect of software engineering teams' working agreements are code reviews. By applying the four-eyes principle on code, teams can reduce the number of bugs and errors, uncover misunderstandings early and ensure a certain level of quality across their common …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker:: Alexandra Wörner&lt;/p&gt;
&lt;p&gt;Track: General: Python &amp;amp; PyData Friends
A crucial aspect of software engineering teams' working agreements are code reviews. By applying the four-eyes principle on code, teams can reduce the number of bugs and errors, uncover misunderstandings early and ensure a certain level of quality across their common code base.
In essence, the relevance of code reviews does not change for data teams, including data scientists. However, due to the often experimental nature of data science tasks, standard code reviews do not always work well and therefore need some tweaks.&lt;/p&gt;
&lt;p&gt;This talk will give a data scientist's view on code reviews, focussing on which aspects data scientists can pull from the general process and what needs to be adjusted in order to have effective and satisfying code reviews. Building on that, you will get recommendations for the following questions:
* When and what should I review?
* What feedback should I give?
* What tools support me in executing this task?&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2022 conference, April 11-13 2022.
&lt;a class="reference external" href="https://2022.pycon.de"&gt;https://2022.pycon.de&lt;/a&gt;
More details at the conference page: &lt;a class="reference external" href="https://2022.pycon.de/program/YT7WM7"&gt;https://2022.pycon.de/program/YT7WM7&lt;/a&gt;
Twitter: &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter: &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon DE 2022"></category><category term="PyCon"></category><category term="PyConDE"></category><category term="pyconde2022"></category><category term="pydata"></category><category term="PyDataBerlin"></category><category term="pydataberlin2022"></category></entry></feed>