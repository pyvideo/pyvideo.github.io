<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - open source</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 03 Jun 2022 00:00:00 +0000</lastBuildDate><item><title>An optimizing static Python compiler</title><link>https://pyvideo.org/europython-2013/an-optimizing-static-python-compiler.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kay Hayen</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:/europython-2013/an-optimizing-static-python-compiler.html</guid><category>EuroPython 2013</category><category>performance</category><category>scientific-computing</category><category>optimization</category><category>open-source</category><category>python3</category></item><item><title>Costruisci la tua piattaforma open-source di video-sharing in Python</title><link>https://pyvideo.org/europython-2013/costruisci-la-tua-piattaforma-open-source-di-video-sharing-in-python.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simone Orsi</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:/europython-2013/costruisci-la-tua-piattaforma-open-source-di-video-sharing-in-python.html</guid><category>EuroPython 2013</category><category>video</category><category>sharing</category><category>youtube</category><category>open-source</category><category>community</category></item><item><title>SimpleManagement: come semplificare la gestione progetti con Python</title><link>https://pyvideo.org/europython-2013/simplemanagement-come-semplificare-la-gestione-progetti-con-python.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Maurizio Delmonte</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:/europython-2013/simplemanagement-come-semplificare-la-gestione-progetti-con-python.html</guid><category>EuroPython 2013</category><category>project-management</category><category>open-source</category><category>teamwork</category><category>zope</category><category>plone</category><category>case-study</category></item><item><title>Take Back Control Over Your Work. Agile Tips For Python Developers.</title><link>https://pyvideo.org/europython-2013/take-back-control-over-your-work-agile-tips-for-python-developers.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Mleczko</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:/europython-2013/take-back-control-over-your-work-agile-tips-for-python-developers.html</guid><category>EuroPython 2013</category><category>web</category><category>pyramid</category><category>postgresql</category><category>open-source</category><category>trac</category><category>framework</category><category>teamwork</category></item><item><title>Lost in OAuth? Learn Velruse And Get Your Life Back!</title><link>https://pyvideo.org/europython-2013/lost-in-oauth-learn-velruse-and-get-your-life-back.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Mleczko</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:/europython-2013/lost-in-oauth-learn-velruse-and-get-your-life-back.html</guid><category>EuroPython 2013</category><category>web</category><category>pyramid</category><category>HTTP</category><category>open-source</category><category>case-study</category></item><item><title>Celery and Social Networks. 5 Things I Have Learned During Earthquake Hackathon.</title><link>https://pyvideo.org/europython-2013/celery-and-social-networks-5-things-i-have-learned-during-earthquake-hackathon.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Mleczko</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:/europython-2013/celery-and-social-networks-5-things-i-have-learned-during-earthquake-hackathon.html</guid><category>EuroPython 2013</category><category>celery</category><category>security</category><category>open-source</category><category>case-study</category><category>social</category></item><item><title>Evolving a helper script into a 180,000-lines-of-Python-code project</title><link>https://pyvideo.org/europython-2019/evolving-a-helper-script-into-a-180000-lines-of-python-code-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GRR Rapid Response (&lt;a class="reference external" href="https://github.com/google/grr"&gt;https://github.com/google/grr&lt;/a&gt;) is an incident
response framework focused on remote live forensics.&lt;/p&gt;
&lt;p&gt;It consists of a Python client (agent) that is installed on target
systems, and Python server infrastructure that can manage and talk to
clients. The goal of GRR is to support forensics and investigations in a
fast, scalable manner to allow analysts to quickly triage attacks and
perform analysis remotely.&lt;/p&gt;
&lt;p&gt;GRR was started at Google in 2009 as a simple Python helper script used
by Incident Response engineers. Eventually a little Python script got a
little server component, was adapted to run on multiple systems (Mac,
Linux, Windows), then a little UI was added and a few nice features were
introduced (large-scale hunts, collection of predefined artifacts,
memory analysis). A helper script has eventually evolved into a
sophisticated framework with 180,000 lines of Python code.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;In the presentation we’ll talk about the process of evolving a small
prototype-like Python project into a production-ready system, using
GRR as an example. The topics that we’ll cover are:&lt;/div&gt;
&lt;div class="line"&gt;* Taking shortcuts - both in terms of design and implementation.
Reasons for taking them and their eventual costs.&lt;/div&gt;
&lt;div class="line"&gt;* Relying on Python’s power features (i.e. meta-classes, mixins)?
Long-term consequences on maintainability and readability.&lt;/div&gt;
&lt;div class="line"&gt;* Organising the project into separate PyPI packages - benefits of
doing that.&lt;/div&gt;
&lt;div class="line"&gt;* Continuous integration, testing and automated builds for various
platforms - implementation costs and maintainability effects.&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mikhail Bushkov</dc:creator><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-12:/europython-2019/evolving-a-helper-script-into-a-180000-lines-of-python-code-project.html</guid><category>EuroPython 2019</category><category>Databases</category><category>Deployment/Continuous Integration and Delivery</category><category>Development</category><category>Open-Source</category><category>Security</category></item><item><title>Zen of Python Dependency Management</title><link>https://pyvideo.org/europython-2019/zen-of-python-dependency-management.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ensuring reliably repeatable dependency installation has long been an
unsolved problem for many Python projects. Pinning dependencies via
setup.py and requirements.txt has historically been met with extra work
and unexpected results, particularly when managing the dependencies of
dependencies.&lt;/p&gt;
&lt;p&gt;Thanks to PEP 518, Python projects can now more easily manage
dependencies via the new pyproject.toml file specification. In its wake,
a number of useful tools have arisen that use this file to provide
enhanced dependency resolution, including Poetry, Hatch, and Pipenv.&lt;/p&gt;
&lt;p&gt;Attendees of this talk will take home the following knowledge and
skills:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;how to replace three files (setup.py, requirements.txt, and
MANIFEST.ini) with just one: pyproject.toml&lt;/li&gt;
&lt;li&gt;why dependency resolution is hard and why it matters&lt;/li&gt;
&lt;li&gt;how Poetry, Hatch, and Pipenv differ and when to use each&lt;/li&gt;
&lt;li&gt;why one might use a less magical alternative: pip-tools&lt;/li&gt;
&lt;li&gt;how to use pipx to isolate system-wide Python tools&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Justin Mayer</dc:creator><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-12:/europython-2019/zen-of-python-dependency-management.html</guid><category>EuroPython 2019</category><category>Deployment/Continuous Integration and Delivery</category><category>Open-Source</category><category>Packaging</category><category>PyPi</category></item><item><title>Maintaining a Python Project When It’s Not Your Job</title><link>https://pyvideo.org/europython-2019/maintaining-a-python-project-when-its-not-your-job.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyPI is a gold mine of great packages but those packages have to be
written first. More often than not, projects that millions of people
depend on are written and maintained by only one person. If you’re
unlucky, that person is you!&lt;/p&gt;
&lt;p&gt;So how do you square delivering a high quality Python package you can be
proud of and having only limited time at your disposal? The answer is
not “try harder,” the answer is to do less.&lt;/p&gt;
&lt;p&gt;This talk will help you get there by talking about how you can make your
life easier, remove causes of friction with your contributors, and
empower said contributors to take over tasks that you can’t make time
for anymore.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hynek Schlawack</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:/europython-2019/maintaining-a-python-project-when-its-not-your-job.html</guid><category>EuroPython 2019</category><category>Best Practice</category><category>Open-Source</category></item><item><title>PlotVR - walk through your data</title><link>https://pyvideo.org/europython-2019/plotvr-walk-through-your-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you bored by 3D-plots that only give you a simple rotatable
2d-projection? plotVR is an open source package that provides a simple
way for data scientists to plot data, pick up a phone, get a real 3d
impression - either by VR or by AR - and use the computer's keyboard to
walk through the scatter plot:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.github.com/thomann/plotVR"&gt;https://www.github.com/thomann/plotVR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After installing and plotting your dataframe open your phone's browser
and use your GoogleVR Cardboard. Furthermore performant Android- and
iOS-apps are available - both support VR-Cardboard and the iOS-Version
also AR.&lt;/p&gt;
&lt;p&gt;Once you are immersed in your Cardboard how do you navigate through the
scatter? plotVR lets you use the computer's keyboard to walk as you
would in any first person game.&lt;/p&gt;
&lt;p&gt;You want to share your impression? Just save the HTML and publish it.&lt;/p&gt;
&lt;p&gt;The technologies beneath this project are: a web server that handles the
communication between the DataScience-session and the phone, WebSockets
to quickly proxy the keyboard events, QR-codes facilitate the simple
pairing of both, and an HTML-Page on the computer to grab the keyboard
events. And the translation of these keyboard events into 3D terms is a
nice exercise in three.js, OpenGL, and SceneKit for HTML, Android, and
iOS resp.&lt;/p&gt;
&lt;p&gt;Ready to see your data as you have never seen before? Join the talk!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philipp Thomann</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:/europython-2019/plotvr-walk-through-your-data.html</guid><category>EuroPython 2019</category><category>3D</category><category>Augmented Reality</category><category>Data Science</category><category>Open-Source</category><category>Visualization</category></item><item><title>Opt Out of Online Sexism – Open Source Activism</title><link>https://pyvideo.org/europython-2019/opt-out-of-online-sexism-open-source-activism.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Although people of all genders can experience violence and abuse
online, the abuse experienced by women is often sexist or misogynistic
in nature, and online threats of violence against women are often
sexualized and include specific references to women’s bodies. &amp;quot; -
Amnesty International. This abuse pushes women offline, affecting their
social well-being, representation and economic potential.&lt;/p&gt;
&lt;p&gt;In this talk I will discuss how we plan to help resolve this with our
browser extension, Opt Out. I will discuss the online global tragedy
that is online sexual harassment, our idea and where we’re at with
current implementation. I will also talk about what it’s like to build
an open source activism project, one which aims to be lead by the
community it’s trying to protect.&lt;/p&gt;
&lt;p&gt;We will cover current research and results from our own engagement with
the community, where the idea came from and challenges we have faced and
plan to face in the future. I will also dive into the intricate world of
natural language processing (NLP) for online harassment and talk about
balancing state-of-the-art data science with web development in an open
source community, one being managed by someone relatively new to tech.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Teresa Ingram</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:/europython-2019/opt-out-of-online-sexism-open-source-activism.html</guid><category>EuroPython 2019</category><category>Communication</category><category>Data Science</category><category>Open-Source</category><category>TDD</category><category>Web</category></item><item><title>Supercharge your Deep Learning algorithms with optimized software</title><link>https://pyvideo.org/europython-2019/supercharge-your-deep-learning-algorithms-with-optimized-software.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, you will learn various optimization techniques to improve
the runtime performance of your deep learning algorithms on Intel
architecture. The presentation will cover how to accelerate the training
of your deep neural networks with Tensorflow thanks to the highly
optimized Intel® Math Kernel Library (Intel® MKL) and how we boost
inferencing with Intel® nGraph and with the Intel® Distribution of
OpenVINO™.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shailen Sobhee</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:/europython-2019/supercharge-your-deep-learning-algorithms-with-optimized-software.html</guid><category>EuroPython 2019</category><category>Data Science</category><category>Deep Learning</category><category>Open-Source</category></item><item><title>A Brief History of Jupyter Notebooks</title><link>https://pyvideo.org/europython-2020/a-brief-history-of-jupyter-notebooks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Jupyter Notebook: many Python users love it, many other Python users love to hate it. But where did it come from? How did we come to have a tool that combines code execution, visualization, Markdown, and more? In this talk, we will dive into the development of the Jupyter Notebook and the older ideas that it built upon.&lt;/p&gt;
&lt;p&gt;To start, we will look at tools that popularized the “computational notebook” interface. In 1988, Mathematica introduced this interface to the scientific community. In the 90s, tools like Maple competed with Mathematica to provide the best scientific programming environment. The early 2000s saw the rise in popularity of open-source scientific tools in Python, including IPython, leading to IPython Notebook and then Jupyter.&lt;/p&gt;
&lt;p&gt;Turning to the present, we look at the expanding ecosystem beyond the Notebook. JupyterLab provides a richer programming environment. Voilà and Binder give users better options for sharing their notebooks. And increased language support has led to Jupyter being a tool not only for Julia, Python, and R, but for dozens of other languages.&lt;/p&gt;
&lt;p&gt;Finally: what is still to come? JupyerLab 2.0 promises even greater IDE-like capabilities, while IDEs increase their own Notebook support. Projects like Deepnote and CoCalc promise real-time collaboration on top of the Notebook interface. And the frustrations of working with Git are the source of a growing number of possible solutions. These efforts point us toward what the Jupyter Notebook could become.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">William Horton</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/a-brief-history-of-jupyter-notebooks.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Data Science</category><category>Ipython</category><category>Jupyter</category><category>Open-Source</category><category>Scientific Libraries (Numpy/Pandas/SciKit/...)</category></item><item><title>Deploy your Machine Learning Bots like a boss with CI/CD</title><link>https://pyvideo.org/europython-2020/deploy-your-machine-learning-bots-like-a-boss-with-cicd.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Gitlab Open Source tools to automate NLP models deployment&lt;/p&gt;
&lt;p&gt;Context: Today is relatively easy to create and train a conversational agent using Machine Learning Techniques, fire it up and showcase it in your computer&lt;/p&gt;
&lt;p&gt;Problem: Sharing your chatbot with the outside world is not as easy as training your models. Load Balancer, Unit Test, Integration Tests, Differential Tests ... Text Analytics and retrain the models to better serve your audience goes way beyond the simple agent that runs in the developer environment&lt;/p&gt;
&lt;p&gt;Solution: I want to show how from my experience of deploying bots to production, leveraging DevOps + DataScience skills along with an entry level knowledge of Databases, CI/CD and distributed systems you can take your prototypes to a next level, deploy, iterate  and re-train your models faster.&lt;/p&gt;
&lt;p&gt;Pre-reqs: Entry level understanding of CI/CD Pipelines, NLP, jupyterhub, Version Control, Rasa&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">William Arias</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/deploy-your-machine-learning-bots-like-a-boss-with-cicd.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Deep Learning</category><category>Deployment/Continuous Integration and Delivery</category><category>Ipython</category><category>Machine-Learning</category><category>Open-Source</category></item><item><title>Diffprivlib: Privacy-preserving machine learning with Scikit-learn</title><link>https://pyvideo.org/europython-2020/diffprivlib-privacy-preserving-machine-learning-with-scikit-learn.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Train machine learning models with differential privacy guarantees&lt;/p&gt;
&lt;p&gt;Data privacy is having an ever-increasing impact on the way data is stored, processed, accessed and utilised, as the legal and ethical effects of data protection regulations take effect around the globe. Differential privacy, considered by many to be the strongest privacy guarantee currently available, gives robust, provable guarantees on protecting privacy, and allows tasks to be completed on data with guarantees on the privacy of individuals in that data. This naturally extends to machine learning, where training datasets can contain sensitive personal information, that are vulnerable to privacy attacks on trained models.
By using differential privacy in the training process, a machine learning model can be trained to accurately represent the dataset at large, but without inadvertently revealing sensitive information about an individual. Diffprivlib is the first library of its kind to leverage the power of differential privacy with scikit-learn and numpy to give data scientists and researchers access to the tools to train accurate, portable models with robust, provable privacy guarantees built-in.
In this talk, we will introduce attendees to the idea of differential privacy, why it is necessary in today's world, and how diffprivlib can be seamlessly integrated within existing scripts to protect your trained models from privacy vulnerabilities. Attendees will be expected to have a basic understanding of sklearn (i.e., how to initialise, fit and predict a model). No knowledge of data privacy or differential privacy will be assumed or required.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Naoise Holohan</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/diffprivlib-privacy-preserving-machine-learning-with-scikit-learn.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Data Privacy</category><category>Data Protection</category><category>Machine-Learning</category><category>Open-Source</category><category>Scientific Libraries (Numpy/Pandas/SciKit/...)</category></item><item><title>How to be Pythonic? Design a Query Language in Python</title><link>https://pyvideo.org/europython-2020/how-to-be-pythonic-design-a-query-language-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Query language is an important part of a database system, it is how people manage their data and how they can make the data useful to them. Starting from the 70s, the world is full of relational databases and SQL was the way to make queries. However, SQL is valuable to an injection attack. Lots of efforts are being used to stop those attacks and it made workflow become less efficient.&lt;/p&gt;
&lt;p&gt;We don’t want to make the same mistake. That’s why using a Python query language is good. Having the Python community in our mind, we created WOQLpy, an open-source query language that lets users build queries in Python, instead of JSON-LD which is the native query language for our TerminusDB database. Now users can store data with a knowledge graph and make graph data visualization with Python.&lt;/p&gt;
&lt;p&gt;In the first part of the talk, we will talk about what challenges we have when creating a query language in Python, the method we use, the idea and theory behind, and how WOQLpy work. This part will include a quick live demo of using WOQLpy so audiences can have an impression on how to make a query and get the task done, that is, getting a meaningful graph visualization form the source CSVs. The process of how to create a database and schema, loading the data form many CSVs, making a query and visualization, will be demonstrated using just one python script.&lt;/p&gt;
&lt;p&gt;In the second part of the talk, we want to stimulate a discussion of what is a good design in Python and what is not. This part will be more interactive with the audiences, as we want to hear from you all, what would be the best for Pythonistas. By first suggesting some possible design, we will use a live voting system to gather opinions. This part of the talk will extend to the Q &amp;amp; A sessions to allow further discussions.&lt;/p&gt;
&lt;p&gt;This talk is for Pythonista at all levels who are interested in starting to design a package in Python, no matter if the audience has published a python library or not. By attending this talk, audiences will learn about how to design a Python package that will be useful to Pythonistas and hopefully encourage more people to publish open-source packages online.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cheuk Ho</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/how-to-be-pythonic-design-a-query-language-in-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>APIs</category><category>Databases</category><category>Graph Databases</category><category>Open-Source</category><category>Programming</category></item><item><title>Interactive Mapmaking with Python</title><link>https://pyvideo.org/europython-2020/interactive-mapmaking-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducing Geopatra for quickly creating amazing interactive maps with dataframes&lt;/p&gt;
&lt;p&gt;GeoDataframes are awesome for working with GIS data in Python as it provides the goodness of pandas for geographic data but So let's use them to create some cool interactive maps&lt;/p&gt;
&lt;p&gt;This talk introduces Geopatra, an open-source mapping library that can be used to quickly map geodataframes with libraries like folium, kepler.gl, plotly, etc. Currently interactive mapping with geodataframes is not very straighforward for beginners and requires you to understand the interfaces exposed by different mapping libraries.
geopatra attempts to abstract all the complexities and tries to provide a unified framework for mapping geodataframes&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Introduction (2 mins)&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Who am I?&lt;/li&gt;
&lt;li&gt;Setting the expectations&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Working with Geodataframes (5 mins)&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Reading Spatial data as a GeoDataframe&lt;/li&gt;
&lt;li&gt;The awesomeness of GeoDataframes (An overview of some of the amazing things you can do with a single line of code eg: Spatial joins, Manipulations, and transformations)&lt;/li&gt;
&lt;li&gt;Now that we have established our love for geopandas lets map geodataframes&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Let the Mapmaking begin (10 mins)&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Basic Non Interactive maps with Geopandas and Matplotlib&lt;/li&gt;
&lt;li&gt;Creating basic interactive maps with Folium, Plotly &amp;amp; Kepler (GeoJSONPlots, Clustermaps, Heatmaps, H3gridmaps)&lt;/li&gt;
&lt;li&gt;The number of steps vs the number of necessary steps&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Enter Geopatra (10 mins)&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The need for Geopatra (Could it be any Easier and Faster)&lt;/li&gt;
&lt;li&gt;Wrapping up popular mapmaking libraries for GeoDataframes&lt;/li&gt;
&lt;li&gt;Create interactive maps with just a single line&lt;/li&gt;
&lt;li&gt;Future work and Discussion :)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sangarshanan Veeraraghavan</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/interactive-mapmaking-with-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>GEO and GIS</category><category>Open-Source</category><category>Visualization</category></item><item><title>Mastering a data pipeline with Python: 6 years of learned lessons from mistakes</title><link>https://pyvideo.org/europython-2020/mastering-a-data-pipeline-with-python-6-years-of-learned-lessons-from-mistakes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building data pipelines are a consolidated task, there are a vast number of tools that automate and help developers to create data pipelines with few clicks on the cloud. It might solve non-complex or well-defined standard problems. This presentation is a demystification of years of experience and painful mistakes using Python as a core to create reliable data pipelines and manage insanely amount of valuable data. Let's cover how each piece fits into this puzzle: data acquisition, ingestion, transformation, storage, workflow management and serving. Also, we'll walk through best practices and possible issues. We'll cover PySpark vs Dask and Pandas, Airflow, and Apache Arrow as a new approach.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robson Junior</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/mastering-a-data-pipeline-with-python-6-years-of-learned-lessons-from-mistakes.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>Big Data</category><category>Case Study</category><category>Data Science</category><category>Open-Source</category></item><item><title>Roadmap to an Open Source Artificial Pancreas &amp; Diabetes monitoring with Flask</title><link>https://pyvideo.org/europython-2020/roadmap-to-an-open-source-artificial-pancreas-diabetes-monitoring-with-flask.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nightscout + Python + Voice + SMS - Using tech for good!&lt;/p&gt;
&lt;p&gt;Open Source has crossed frontiers and is widely used to solve problems in the health &amp;amp; science fields. In this talk we’ll learn about the many moving parts of continuous glucose monitoring for type 1 Diabetes as part of the open-source artificial pancreas project and building a notifier for the most used OSS continuous glucose monitoring dashboard: Nightscout.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Diana Rodriguez Manrique</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/roadmap-to-an-open-source-artificial-pancreas-diabetes-monitoring-with-flask.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>Communication</category><category>DIY</category><category>Development</category><category>Open-Source</category></item><item><title>ScanAPI</title><link>https://pyvideo.org/europython-2020/scanapi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Automated Integration Testing and Live Documentation for your API&lt;/p&gt;
&lt;p&gt;In the current IT scenario, the use of APIs is, without question, widely vast, popular, and significant. It seems at least prudent to ensure they are working properly, as expected. To guarantee the quality of the data that is being consumed or used. To ensure that communication between services is occurring as expected. To ensure the system does, in fact, what it should do.&lt;/p&gt;
&lt;p&gt;ScanAPI is an open-source library that was created to solve all these points. ScanAPI provides an easy way to create integration tests for REST APIs via configuration files.&lt;/p&gt;
&lt;p&gt;The three main reasons that led me to the creation of this library were:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;To be a firefighter in a scenario where most of the reported bugs were directly related to some API contract being broken or some endpoint having a behavior different from that expected by the consumer.&lt;/li&gt;
&lt;li&gt;To need to deal with APIs with outdated or mistaken documentation.&lt;/li&gt;
&lt;li&gt;To need to debug an endpoint in the middle of a &amp;quot;chain&amp;quot; of other endpoints. Where I needed to recreate a state that depends on the action of other endpoints.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Given a fictitious example: debug an endpoint to reserve seats on an airplane, which depends directly on the previous call of an endpoint for user registration.&lt;/p&gt;
&lt;p&gt;The ScanAPI is open-source and written in Python. However, it can be used in APIs created in any other programming language, since the tests provided by it are integration tests.&lt;/p&gt;
&lt;p&gt;With ScanAPI you can:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use environment variables&lt;/li&gt;
&lt;li&gt;Create variables&lt;/li&gt;
&lt;li&gt;Chaining requests - making a request from a result of previous responses&lt;/li&gt;
&lt;li&gt;Hide sensitive information of the requests and responses in the generated report&lt;/li&gt;
&lt;li&gt;Write Python code - if you want, it's not necessary :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Topics I intend to address in this talk:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Motivation to create the library&lt;/li&gt;
&lt;li&gt;What problems the library solves&lt;/li&gt;
&lt;li&gt;How to test an API using a ScanAPI&lt;/li&gt;
&lt;li&gt;Show the documentation generated by ScanAPI&lt;/li&gt;
&lt;li&gt;An overview of how it is implemented&lt;/li&gt;
&lt;li&gt;Where it is currently being used&lt;/li&gt;
&lt;li&gt;Next steps&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Project Link: &lt;a class="reference external" href="https://github.com/scanapi/scanapi"&gt;https://github.com/scanapi/scanapi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Prerequisites:
- Python
- REST APIs
- Integration tests&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Camila Maia</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/scanapi.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>APIs</category><category>Open-Source</category><category>RESTful</category><category>Test Libraries (pytest/nose/...)</category><category>Testing</category></item><item><title>Sharing Reproducible Python Environments with Binder</title><link>https://pyvideo.org/europython-2020/sharing-reproducible-python-environments-with-binder.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As reproducibility gains traction in the data science and research communities, the need to package code, data and the computational environment is growing.&lt;/p&gt;
&lt;p&gt;There are many tools that address different aspects of this type of packaging, such as Jupyter Notebooks for literate programming, Docker for containerising and porting computational environments, and so on. But they represent barriers to reproducibility as each one requires time and effort to learn.&lt;/p&gt;
&lt;p&gt;Project Binder integrates Notebooks and Docker for generating reproducible computational analyses and combines them with a web-based interface and cloud orchestration engines. This means that analysts do not have to worry about all the moving parts so long as they have followed basic software best practices: their code is version controlled and they've captured the dependencies the analysis needs to run. Binder then hosts the compute in the cloud and makes it easily shareable by providing a unique URL to the code repository, without imposing additional overheads on the analyst.&lt;/p&gt;
&lt;p&gt;During this talk, Sarah will introduce Binder (the service), BinderHub (the technological infrastructure) and mybinder.org (a public instance of a Binder service, free for anyone to use) and demonstrate how it can be used to share Python environments and analyses.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sarah Gibson</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/sharing-reproducible-python-environments-with-binder.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Best Practice</category><category>Data Science</category><category>Jupyter</category><category>Open-Source</category><category>Public Cloud (AWS/Google/...)</category></item><item><title>So, You Want to Build an Anti-Virus Engine?</title><link>https://pyvideo.org/europython-2020/so-you-want-to-build-an-anti-virus-engine.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/quark-engine/quark-engine"&gt;https://github.com/quark-engine/quark-engine&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Android malware analysis engine is not a new story. Every antivirus company has their own secrets to build it. With python and curiosity, we develop a malware scoring system from the perspective of Taiwan Criminal Law in an easy but solid way.&lt;/p&gt;
&lt;p&gt;We have an order theory of criminal which explains stages of committing a crime. For example, crime of murder consists of five stages, they are determined, conspiracy, preparation, start and practice. The latter the stage the more we’re sure that the crime is practiced.&lt;/p&gt;
&lt;p&gt;According to the above principle, we developed our order theory of android malware. We develop five stages to see if the malicious activity is being practiced. They are&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Permission requested.&lt;/li&gt;
&lt;li&gt;Native API call.&lt;/li&gt;
&lt;li&gt;Certain combination of native API.&lt;/li&gt;
&lt;li&gt;Calling sequence of native API.&lt;/li&gt;
&lt;li&gt;APIs that handle the same register.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We not only define malicious activities and their stages but also develop weights and thresholds for calculating the threat level of a malware.&lt;/p&gt;
&lt;p&gt;Malware evolved with new techniques to gain difficulties for reverse engineering. Obfuscation is one of the most commonly used techniques. In this talk, we present a Dalvik bytecode loader with the order theory of android malware to neglect certain cases of obfuscation.&lt;/p&gt;
&lt;p&gt;Inspired by the design principles of the CPython interpreter, our Dalvik bytecode loader consists of functionalities such as 1. Finding cross-reference and calling sequence of the native API. 2. Tracing the bytecode register. The combination of these functionalities (yes, the order theory) not only can neglect obfuscation but also match perfectly to the design of our malware scoring system.&lt;/p&gt;
&lt;p&gt;Further, we will also show a case study of Android malware and demonstrate how the obfuscation technique is useless to our engine. Last but not least, we will be open-sourcing everything (Malware Scoring System, Dalvik Bytecode Loader) during our presentation.&lt;/p&gt;
&lt;p&gt;Audience
1. Who is this talk for?
- Anyone who's interested in cyber security or anyone that wants to know how to build an anti-virus engine with Python.&lt;/p&gt;
&lt;p&gt;2. What background knowledge or experience do you expect the audience to have?
- A little of Android application development and malware analysis.&lt;/p&gt;
&lt;p&gt;3. What do you expect the audience to learn or do after watching the talk?
- The Dalvik bytecode loader is written as a python module, the audiences can use this module to boost up their malware analysis.
- The malware scoring system can be applied not only to Android malware but also can be applied for PE files or ELF files in other OS. The audience can copy our ideas to extend their work.
- Everything’s open-sourced.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;1. Introduction of Malware Scoring System.
First, we will detail how we decode Criminal Law to simple principles. For example, principles to define crime, penalty and the order theory of criminal, etc. And then we will detail how do we develop the order theory of android malware and other developed theories that construct the malware scoring.&lt;/p&gt;
&lt;p&gt;2. Design Logic of the Dalvik Bytecode Loader.
Once the malware scoring system were built, this will discuss the design logic of our Dalvik bytecode loader which includes our obfuscation-neglect module and bytecode register tracing module. We will also detail why the order theory of android malware succeeds at neglecting the obfuscation.&lt;/p&gt;
&lt;p&gt;3. Quark Engine Practice - Case Study of Android Malware
Next, we will practice our engine and case study through an android malware. Moreover, we will also demonstrate our obfuscation-neglect technique against obfuscation malware.&lt;/p&gt;
&lt;p&gt;4. Future works
Here, we will discuss the limitations of our engine. For example, the challenge of our Dalvik bytecode loader. Also, we will share our plans of implementing more detection techniques conquering the escape detection of malware.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">JunWei Song</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/so-you-want-to-build-an-anti-virus-engine.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Mobile</category><category>Open-Source</category><category>Security</category><category>Static Analysis</category></item><item><title>The Phantom of Radon</title><link>https://pyvideo.org/europython-2020/the-phantom-of-radon.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A story of analytical sinograms&lt;/p&gt;
&lt;p&gt;This project contains an open source Python library for image reconstruction in Axial Computed Tomography (TAC), based on the analytical Radon transforms of some classes of phantoms.
The package is available on GitHub at the following address: &lt;a class="reference external" href="https://github.com/francescat93/Exact_sinogram"&gt;https://github.com/francescat93/Exact_sinogram&lt;/a&gt;.
The mathematical phantoms are fictitious images, composed of very simple geometric figures (ellipses, squares and rectangles) that, sampled with the Radon transform allows to build a fictitious signal, called (exact) sinogram.  Using a phantom gives the advantage to test the reconstruction algorithm on a zero-noise data so the error we get is only due to numerical inaccuracies in the algorithm itself. We want to calculate two reconstructed images from the approximated and exact sinograms, obtained applying the iradon function of the Python library scikit-image on both of them. We expect a smaller error on the exact reconstructed image. This turns to be true on continuous regions, but near the discontinuities of the phantom the Gibbs phenomenon prevents us to obtain the same enhancement.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Francesca Tedeschi</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/the-phantom-of-radon.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Education</category><category>Image Processing</category><category>Open-Source</category><category>Science</category><category>Teaching</category></item><item><title>Tools for maintaining an open source Python project</title><link>https://pyvideo.org/europython-2020/tools-for-maintaining-an-open-source-python-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A walkthrough of some great tools I use for developing, testing, maintaining and managing projects&lt;/p&gt;
&lt;p&gt;There is a wealth of amazing tools freely available to open source software developers to use to maintain their projects. Practically every problem we face or are likely to face in software development has been lived through and solved many times over. Patterns emerge for dealing with development practises and we build our software using the tools made by the previous generation of developers.&lt;/p&gt;
&lt;p&gt;We're very fortunate to operate in an amazing open source ecosystem where we've learned we're stronger when we build on each other's foundations. We're constantly laying new foundations for ourselves and we share our ways of working with the world. We now have a very sophisticated set of tools for developing, managing, testing and documenting our new projects without reinventing the wheel.&lt;/p&gt;
&lt;p&gt;But we don't discover all the tools at once - we pick them up as we go along, as we find uses for them and we hear about them. I'm going to share a range of great tools I use to maintain some popular open source Python projects, and explain how the difference they've made.&lt;/p&gt;
&lt;p&gt;The talk covers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Software packaging and distribution&lt;/li&gt;
&lt;li&gt;Licensing&lt;/li&gt;
&lt;li&gt;Virtual environments&lt;/li&gt;
&lt;li&gt;Software testing&lt;/li&gt;
&lt;li&gt;Continuous integration&lt;/li&gt;
&lt;li&gt;Git &amp;amp; GitHub&lt;/li&gt;
&lt;li&gt;Contributor community&lt;/li&gt;
&lt;li&gt;Project management tools&lt;/li&gt;
&lt;li&gt;Documentation tools&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The talk demonstrates examples for development of Python projects on Linux, but the tools can be used cross-language and cross-platform.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Nuttall</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/tools-for-maintaining-an-open-source-python-project.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Community</category><category>Documentation</category><category>Git</category><category>Open-Source</category><category>Test Libraries (pytest/nose/...)</category></item><item><title>Writing and Scaling Collaborative Data Pipelines with Kedro</title><link>https://pyvideo.org/europython-2020/writing-and-scaling-collaborative-data-pipelines-with-kedro.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to get your Data Scientists and Data Engineers to play nice, both now and in the future.&lt;/p&gt;
&lt;p&gt;The goal of this talk is to introduce data pipeline developers to QuantumBlack's approach for keeping data pipelines healthy and sustainable and facilitating collaboration between data scientists and data engineers by using our open source framework, Kedro. Attendees need between novice and intermediate knowledge of Python (enough to understand syntactic sugar and funargs) in order to appreciate this talk.&lt;/p&gt;
&lt;p&gt;As data continues to inform more and more business strategy, high quality, fully featured data pipelines have never been more critical. Small data scripts and single-coder science projects are not enough to keep up with the pace of day-to-day business and their ever-growing list of requirements. Now, more than ever, we need data engineers and data scientists to collaborate effectively. Yet, these two parties come with inherently competing needs.&lt;/p&gt;
&lt;p&gt;Data scientists need high data volatility and parameterization, for experimentation, and data engineers, on the other hand, need stability and performance, to deliver data. Furthermore, as pipelines grow, the cost of knowledge transfer and training new team members also increases. How can we get scientists and engineers to work well together, and sustain pipeline growth as the team also grows?&lt;/p&gt;
&lt;p&gt;For this, QuantumBlack created Kedro, a framework for writing data pipelines that addresses both the needs for flexibility and stability in its features and patterns of use. By using Kedro’s tools and operating model, we have enabled our teams to scale our single-developer, micro-pipes to industrial sized data processors with dozens of developers; all without sacrificing readability, quality, or stability. This talk will show you how.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tam-Sanh Nguyen</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/writing-and-scaling-collaborative-data-pipelines-with-kedro.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Best Practice</category><category>Data</category><category>Development</category><category>Open-Source</category><category>python</category></item><item><title>Open Sourcing at Work</title><link>https://pyvideo.org/pycon-ca-2018/open-sourcing-at-work.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We just open sourced 2 projects (datacompy, and locopy) with roots in Data Science and Engineering which we will showcase. While is it exciting and rewarding to share your ideas with the world it isn't always easy. Thinking about licenses, copyrights, and protecting confidential information is a must!&lt;/p&gt;
&lt;p&gt;Working in a large organization which is embracing the mantra 'open source first' is really exciting. Part of this journey is to make sure we give back to the open source community when we can. Two of our projects had gained traction internally: datacompy, and locopy. As part of our commitment we wanted to make sure we could open source these projects for others to use and contribute back to. DataComPy is a package to compare two Pandas DataFrames. Originally started to be something of a replacement for SAS's PROC COMPARE for Pandas DataFrames with some more functionality than just Pandas.DataFrame.equals(Pandas.DataFrame) (in that it prints out some stats, and lets you tweak how accurate matches have to be). Then extended to carry that functionality over to Spark Dataframes. Locopy helps load flat files to S3 and then to Amazon Redshift, and assist with ETL processing. It is DB Driver (Adapter) agnostic, provides basic functionality to move data to S3 buckets, execute COPY commands to load data to S3, and into Redshift, and UNLOAD commands to unload data from Redshift into S3. While building these products was exciting and fun, some of the legal considerations were as interesting, complex, and required collaboration between many teams, from security, licensing, brand, and IP/copyright. We'll explore the projects, and some of these other considerations which can make or break if you decide to release a project into the wild, along with the road blocks we faced with in these areas.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Faisal Dosani</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:/pycon-ca-2018/open-sourcing-at-work.html</guid><category>PyCon CA 2018</category><category>open source</category><category>licensing</category><category>copyright</category><category>data</category><category>security</category><category>testing</category><category>best practices</category><category>data science</category></item><item><title>eGenix PyRun - Python Laufzeitumgebung in einer Datei</title><link>https://pyvideo.org/pycon-de-2012/egenix-pyrun-python-laufzeitumgebung-in-einer.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;eGenix PyRun kondensiert eine komplette Python Laufzeitumgebung mit
Interpreter und Standardbibliothek in eine einzige sehr kompakte
ausführbare pyrun Programmdatei.&lt;/p&gt;
&lt;p&gt;Da PyRun keine Installation benötigt und unabhängig von einer Python
System Installation arbeitet, bietet es sich damit als portable Lösung
für Skripte, Applikationen und in der Entwicklung als virtualenv Ersatz
an.&lt;/p&gt;
&lt;p&gt;PyRun ist nur 12-13MB groß, enthält aber den größten Teil einer
üblicherweise ca. 100MB großen Python Installation. Die Größe kann per
gzexe oder upx auf unter 4MB reduziert werden.&lt;/p&gt;
&lt;p&gt;Es bietet damit eine ganze Reihe von Vorteilen gegenüber einer regulären
Python Installation. Hier die wichtigsten Aspekte:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Sehr kompakt&lt;/li&gt;
&lt;li&gt;Keine Installation oder Root Rechte notwendig&lt;/li&gt;
&lt;li&gt;Kann unabhängig von einer System Python Installation verwendet werden&lt;/li&gt;
&lt;li&gt;Bessere Startzeit als reguläres Python&lt;/li&gt;
&lt;li&gt;Kompatibel mit distutils/setuptools/pip/etc.&lt;/li&gt;
&lt;li&gt;virtualenv Ersatz&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Derzeit unterstützte Systeme sind Linux, Mac OS X und FreeBSD. Es sollte
aber auch auf anderen Unix Systemen verwendbar sein. PyRun wird von
eGenix unter einer Open Source Lizenz verfügbar gemacht.&lt;/p&gt;
&lt;p&gt;Der Vortrag wird das Projekt vorstellen, eine Anwendungsdemo zeigen und
je nach verfügbarer Zeit auch die Übersetzung demonstrieren.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc-André Lemburg</dc:creator><pubDate>Wed, 31 Oct 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-10-31:/pycon-de-2012/egenix-pyrun-python-laufzeitumgebung-in-einer.html</guid><category>PyCon DE 2012</category><category>interpreter</category><category>kompakt</category><category>laufzeitumgebung</category><category>open-source</category><category>python</category><category>virtualenv</category></item><item><title>Practical DevOps</title><link>https://pyvideo.org/pycon-de-2012/practical-devops.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;DevOps ist eine aktuelle Bewegung in der IT, die sich zur Aufgabe macht,
ein Umdenken in den klassischen Lagern Entwicklung und Betrieb
einzuleiten. Der Vortrag wirft einen Blick auf die noch junge Bewegung
und zeigt mit Geschichten aus dem wahren Leben, wie sich die agile
Denkweise fortschreiben lässt, die mit SCRUM ins allgemeine Bewusstsein
getreten ist.&lt;/p&gt;
&lt;p&gt;Schlomo gibt einen Überblick über das Thema und berichtet über die
DevOps Erfolge bei der
&lt;a class="reference external" href="http://www.immobilienscout24.de"&gt;ImmobilienScout24&lt;/a&gt;. Nach 2 Jahren
agilem Umdenken in der Entwicklung zeigte sich, dass die klassische
Gewaltenteilung Plan - Build - Run einfach nicht mehr gut funktioniert
weil sich die Anforderungen und Erwartungen sowohl in der Entwicklung
als auch im Betrieb ändern und daher auch eine neue Form der
Zusammenarbeit nahe legen.&lt;/p&gt;
&lt;p&gt;Die Ideen aus der DevOps Bewegung lassen sich fast überall einsetzen, wo
bisher ein &amp;quot;über den Zaun werfen&amp;quot; gespielt wird und haben das primäre
Ziel, alle Beteiligten gemeinsam an einem Strang ziehen zu lassen. Mit
den Ideen und Erfahrungen aus dem Vortrag lassen sich sicher die ersten
Schritte in die richtige Richtung einleiten.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Schlomo Schapiro</dc:creator><pubDate>Wed, 31 Oct 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-10-31:/pycon-de-2012/practical-devops.html</guid><category>PyCon DE 2012</category><category>agile</category><category>devops</category><category>kanban</category><category>open source</category><category>python</category><category>scrum</category><category>web</category></item><item><title>Grundlagen des Open-Source-Lizenzrechts</title><link>https://pyvideo.org/pycon-de-2012/grundlagen-des-open-source-lizenzrechts.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Ein kompakter Überblick über die rechtlichen Aspekte von
Open-Source-Software. Neben den rechtlichen Grundlagen werden die
wesentlichen Eigenschaften von Open-Source-Lizenzen vorgestellt.
Außerdem werden einige verbreitete Lizenzen detaillierter erläutert.&lt;/p&gt;
&lt;p&gt;Inhalt:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Rechtliche Grundlagen: Urheberrecht und Lizenzrecht&lt;/li&gt;
&lt;li&gt;Open-Source-Software: Lizenzarten von Software, Definition
Open-Source-Software, Open-Source-Lizenzmodelle, Copyleft vs.
Non-Copyleft&lt;/li&gt;
&lt;li&gt;Ausgewählte Open-Source-Lizenzen: Apache License, GPL, AGPL, LGPL,
BSD License, Eclipse Public License, ...&lt;/li&gt;
&lt;li&gt;Praktische Nutzung von Open-Source-Software: Lizenzkompatibilität,
Nutzung von Open-Source-Software in eigenen Programmen, Auswahl einer
Open-Source-Lizenz für eigene Programme&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andreas Schreiber</dc:creator><pubDate>Tue, 30 Oct 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-10-30:/pycon-de-2012/grundlagen-des-open-source-lizenzrechts.html</guid><category>PyCon DE 2012</category><category>open-source</category><category>recht</category></item><item><title>Introduction to django CMS</title><link>https://pyvideo.org/pycon-de-2013/introduction-to-django-cms.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Wir werden das Open Source Content Management System «django CMS»
vorstellen. Einerseits zeigen wir das Backend, aber auch das Frontend,
geben Erfahrungen von Developern weiter und von CMS-Verwendern. Patrick
Lauber, als Senior Web Developer geht in die Tiefe, Stefanie Weilenmann
wir das CMS anhand einer kurzen Schulung zeigen.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin Wohlwend</dc:creator><pubDate>Wed, 16 Oct 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-10-16:/pycon-de-2013/introduction-to-django-cms.html</guid><category>PyCon DE 2013</category><category>django</category><category>django cms</category><category>open source</category><category>python</category><category>website</category></item><item><title>Sponsoring von Open-Source - und damit den Chef überzeugen</title><link>https://pyvideo.org/pycon-de-2013/sponsoring-von-open-source-und-damit-den-chef-u.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Nutzen Sie Open-Source-Software?&lt;/p&gt;
&lt;p&gt;Haben Sie schon einmal eine Kleinigkeit ändern wollen?&lt;/p&gt;
&lt;p&gt;Konnten Sie für “Einwurf kleiner Münzen” diese Änderung machen lassen?&lt;/p&gt;
&lt;p&gt;Open-Source-Software zeichnet sich unter anderem durch die leichte
Anpassbarkeit an die eigenen Bedürfnisse aus. Doch nicht jeder kann oder
möchte die Software selbst ändern. Lieber würde man die Autoren oder
andere Spezialisten damit beauftragen.&lt;/p&gt;
&lt;p&gt;Der Vortrag gibt Einblick in die praktische Arbeit mit dem Sponsoring
von Open-Source-Projekten und beantwortet die Frage, wie man mit Hilfe
von Sponsoring seine eigenen Probleme schneller und günstiger lösen
kann: Nach der Vorstellung typischer Entwicklungsmodelle von
Open-Source-Projekten erfahren Besucher, wie sie Kontakte zu Open-Source
Projekten knüpfen können und damit jemanden finden, der ihnen weiter
hilft.&lt;/p&gt;
&lt;p&gt;Weitere Themen sind&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;rechtliche Aspekte wie ein Werksvertrag, Gewährleistung und einfache
Abwicklung&lt;/li&gt;
&lt;li&gt;Anforderungen so formulieren, dass der Kundennutzen und die
Nachhaltigkeit im Vordergrund steht&lt;/li&gt;
&lt;li&gt;Abnahmekriterien für den Auftrag&lt;/li&gt;
&lt;li&gt;Wirtschaftlichkeitsberechnung und Kosten-Nutzen-Abwägung&lt;/li&gt;
&lt;li&gt;Nachhaltige Lösungen statt ewigen Workarounds&lt;/li&gt;
&lt;li&gt;Mehrwert für sich und die Open-Source-Gemeinschaft schaffen&lt;/li&gt;
&lt;li&gt;Imagepflege über Open-Source-Sponsoring&lt;/li&gt;
&lt;li&gt;Eigene Open-Source Projekte durch Externe weiterentwickeln lassen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Als konkrete Beispiele dienen diverse in Python entwickelte Open-Source
Projekte der ImmobilienScout24.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Schlomo Schapiro</dc:creator><pubDate>Tue, 15 Oct 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-10-15:/pycon-de-2013/sponsoring-von-open-source-und-damit-den-chef-u.html</guid><category>PyCon DE 2013</category><category>geld</category><category>kultur</category><category>open-source</category><category>politik</category><category>wirtschaft</category></item><item><title>Rasa: open source conversational AI to build next generation chatbots</title><link>https://pyvideo.org/pycon-de-2017/rasa-open-source-conversational-ai-to-build-next-generation-chatbots.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Joey Faulkner&lt;/strong&gt; (&amp;#64;JoeyMFaulkner)&lt;/p&gt;
&lt;p&gt;I am a PhD student in machine learning/astronomy, and an AI researcher at Rasa. We make open source libraries for conversational AI.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Soon you will primarily communicate with your computer through conversation. At Rasa, we believe that this revolution in user experience should be available to everyone. In this spirit we have developed open source tools that use machine learning to make chatbots in a developer-friendly interface.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The revolution-in-waiting for user experience is conversational AI, and this revolution should be available to everyone. The ability to communicate with your computer via a fulfilling and useful conversation will change the way we approach user interaction. Recent advances in machine learning have made this goal not only possible to reach, but possible to bring to the developer community at large. At Rasa we have developed a set of open-source Python libraries which can comprehend natural language and handle complex, interesting conversations. We utilise deep learning to bypass existing rigid conversational norms (state machines, if/else statements, etc.) and allow developers to make awesome bots simply by talking to them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joey Faulkner</dc:creator><pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-25:/pycon-de-2017/rasa-open-source-conversational-ai-to-build-next-generation-chatbots.html</guid><category>PyCon DE 2017</category><category>python</category><category>machine learning</category><category>deep learning</category><category>open source</category><category>chatbot</category><category>natural language</category><category>ai</category><category>business</category></item><item><title>When Dependencies between Test Cases are Inevitable</title><link>https://pyvideo.org/pycon-israel-2016/when-dependencies-between-test-cases-are-inevitable.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You need to test your images on various instance types in the cloud, but which tools do you use? How to run dozens of thousands of test cases on hundreds of machines in the cloud in parallel? Is it OK to have dependencies between test cases to make this task less expensive?&lt;/p&gt;
&lt;p&gt;Dva is an open source validation tool which is applicable to various images and instance types. Using your image, it will launch instances of different types in defined regions and will execute test cases in parallel. How?&lt;/p&gt;
&lt;p&gt;All test cases are represented as a Directed Acyclic Graph structure – parents and children. Then these test cases are assigned to workers by a modified BFS algorithm that allows processing of sibling test cases in parallel. It includes test result processing tools such as a Bugzilla module to report bugs for you. 3rd-party test case modules are supported too.&lt;/p&gt;
&lt;p&gt;This tool is used by Red Hat QE for RHEL image release sanity testing in EC2, however Fedora images and OpenStack cloud are supported too. To test a RHEL release, Dva launches hundreds of machines of various types in all EC2 regions and executes a set of nearly 70 test cases with dependencies on every machine in parallel.&lt;/p&gt;
&lt;p&gt;Source Code/Home page: &lt;a class="reference external" href="https://github.com/RedHatQE/dva/"&gt;https://github.com/RedHatQE/dva/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Topics: Open Source, Cloud, QA/QE, Automation, Python&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="http://il.pycon.org/2016/static/sessions/irina-igulina.pdf"&gt;http://il.pycon.org/2016/static/sessions/irina-igulina.pdf&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Irina Gulina</dc:creator><pubDate>Wed, 21 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-21:/pycon-israel-2016/when-dependencies-between-test-cases-are-inevitable.html</guid><category>PyCon Israel 2016</category><category>Open Source</category><category>Cloud</category><category>QA/QE</category><category>Automation</category></item><item><title>Keeping up with the pace of a fast growing community without dying</title><link>https://pyvideo.org/pycon-italia-2017/keeping-up-with-the-pace-of-a-fast-growing-community-without-dying.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;New open source communities are born everyday. Some of them are meant to
last long and some others aren’t. There’s a moment in every community
where it needs to outgrow itself, expand its limits and aim way higher
than ever. This is no necesarily related to its goals but the ecosystem
it needs to stay alive.&lt;/p&gt;
&lt;p&gt;Once a community has gone beyond its limits, the community members,
consumers and leaders will have to keep up with its pace. How do we help
it to remain sane? How do we keep our goals on track while allowing for
further growth? How do we allow it to keep expanding without further
damaging the community?&lt;/p&gt;
&lt;p&gt;These are all questions we ask ourselves everyday in the OpenStack
community and that we’ve managed to work on without killing ourselves on
the way.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Flavio Percoco</dc:creator><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-09:/pycon-italia-2017/keeping-up-with-the-pace-of-a-fast-growing-community-without-dying.html</guid><category>PyCon Italia 2017</category><category>Python</category><category>open-source</category><category>community</category></item><item><title>ENVIFATE: plugin per QGIS per la valutazione del rischio di inquinamento ambientale</title><link>https://pyvideo.org/pycon-italia-2017/envifate-plugin-per-qgis-per-la-valutazione-del-rischio-di-inquinamento-ambientale.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Negli ultimi anni è cresciuto in maniera considerevole l’interesse per i
fenomeni di inquinamento ambientale causati da sostanze tossiche e altre
fonti di disturbo. La pericolosità di ciascuna di tali sostanze si
manifesta laddove sia superata una certa soglia di concentrazione che la
rende tossica. Per proteggere la salute pubblica e gli ecosistemi
occorre mantenere le concentrazioni di tali inquinanti al di sotto di
una soglia di sicurezza e risulta di particolare importanza essere in
grado di prevedere in maniera sufficientemente attendibile le
concentrazioni che si vengono a stabilire nei diversi comparti
ambientali. In questo contesto, sia per le PA che per gli operatori
privati, sta diventando sempre più importante poter disporre di
strumenti semplici ma efficaci che consentano di effettuare analisi di
screening tali da individuare le possibili criticità in quest’ambito. Il
software ENVIFATE viene sviluppato nell’ambito di un progetto di ricerca
ancora in corso finanziato al DICAM (Università di Trento) dalla Regione
Veneto proprio per operare analisi di screening per valutare la
possibilità di rischi di inquinamento ambientale nelle aree protette a
seguito di pianificazione di potenziali sorgenti inquinanti. Il progetto
ha previsto lo sviluppo di un’applicazione con i seguenti requisiti: i)
open-source ii) multipiattaforma iii) user friendly iv) GIS oriented. Si
è scelto di sviluppare una famiglia di plugin di QGIS, utilizzando un
linguaggio python multipiattaforma e realizzando un modulo per ciascuna
matrice ambientale considerata: fiumi, laghi, dispersione atmosferica,
dispersione in falda, rumore. I plugin sono stati sviluppati a partire
da una libreria di moduli lanciabili da linea di comando o da
applicazioni di terze parti con un elevato livello di modularità e
scalabilità. E’ così anche possibile concatenare i diversi moduli in
flussi di dati personalizzati. Tutti i plugin forniscono risultati di
tipo numerico e cartografico. In particolare i tool da linea di comando
forniscono un risultato “statico”, ovvero collegato ad un particolare
stato spaziale e temporale, mentre all’interno dei plugin il modulo
viene reiterato nello spazio e nel tempo allo scopo di fornire mappe
georiferite e risultati relazionati temporalmente, propedeutici alle
diverse valutazioni ambientali. I futuri sviluppi del plugin ne
estenderanno le funzionalità affinché verifichi quando gli effetti
calcolati causino scostamenti significativi e misurabili dello status
delle matrici ambientali in relazione a ciò che è tutelato. Questo in
prima istanza rispetto agli habitat e alle specie della rete Natura 2000
all’interno di valutazioni di incidenza, ma anche con la prospettiva di
estendere tali analisi a VIA e VAS o ad una integrazione con i Life
Cycle Inventories (LCI).&lt;/p&gt;
&lt;p&gt;Autori: Francesco Geri, Oscar Cainelli, Paolo Zatelli, Gianluca Salogni,
Marco Ciolli&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Francesco Geri</dc:creator><pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-07:/pycon-italia-2017/envifate-plugin-per-qgis-per-la-valutazione-del-rischio-di-inquinamento-ambientale.html</guid><category>PyCon Italia 2017</category><category>risk-management</category><category>open-source</category><category>Python</category><category>matplotlib</category><category>environment</category><category>Qgis</category><category>gis</category><category>impact-assessment</category><category>gdal</category><category>pollution</category></item><item><title>Integration tests ready to use with pytest-play</title><link>https://pyvideo.org/pycon-italia-2018/integration-tests-ready-to-use-with-pytest-play.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In my talk I will introduce a new pytest plugin with which it is very
easy (even for non-technical) go to create and run new integration
testing at any level of IOT complex systems.&lt;/p&gt;
&lt;p&gt;pytest-play is a pytest plugin that allows you to play a JSON file that
describes some actions and assertions. We can use actions like: -
Selenium, driving the browser for the UI test - MQTT messages,
simulating a device - API calls - queries to Cassandra or PostgresSQL
(in the future) - custom commands, thanks to the pluggable architecture
Other advantages: - UI tests more reliable with implicit waits before
interacting with the elements - BDD support to make the scenario more
legible - reusability of steps&lt;/p&gt;
&lt;p&gt;I will show you how easy it is to create a json and execute it on the
fly on a Continuous Integration system. So let’s start having fun in
testing with pytest-play.&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Serena Martinetti</dc:creator><pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-22:/pycon-italia-2018/integration-tests-ready-to-use-with-pytest-play.html</guid><category>PyCon Italia 2018</category><category>continuous-integration</category><category>open source</category><category>Python</category><category>testing</category><category>selenium</category><category>integration</category><category>api</category><category>pytest</category><category>Functional Testing</category></item><item><title>My story with Python and Open Source</title><link>https://pyvideo.org/pycon-italia-2018/my-story-with-python-and-open-source.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is the story of how I went from lonely, introvert, C# developer to
open- source Python author and maintainer, speaker, trainer, consultant
and all- around community junkie. With some luck, in the process you
will also hear a few hints on how to become a good open source
contributor and have a chance to ponder on the pros and cons (yes, there
are cons too) of going full monty with open source.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 17:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicola Iarocci</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:/pycon-italia-2018/my-story-with-python-and-open-source.html</guid><category>PyCon Italia 2018</category><category>open-source</category></item><item><title>Working for FOSS can make you a better programmer: Insights into my Outreachy internship with Fedora</title><link>https://pyvideo.org/pycon-italia-2018/working-for-foss-can-make-you-a-better-programmer-insights-into-my-outreachy-internship-with-fedora.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Outreachy program offers three-month internships for people from groups
underrepresented in tech. Interns are paid a stipend of $5,500 and have
a $500 travel stipend available to them. Interns work remotely with
mentors from Free and Open Source Software (FOSS) communities on
projects not limited to just programming but also user experience,
documentation, illustration and graphical design.&lt;/p&gt;
&lt;p&gt;I am currently interning with Fedora under the Outreachy program, where
my task is to is to develop administrative tools for the 389 Directory
Server, an enterprise class LDAP (Lightweight Directory Access Protocol)
server, used in businesses globally to authenticate and identify people.
LDAP is a standard application protocol for accessing and maintaining
distributed directory information services over an Internet Protocol
(IP) network. I am helping Fedora improve the Directory Servers Python
command line tools. In addition to this, the team at Fedora is also
investigating into integrating existing C code with Rust (watch here:
Integrating Rust with existing C) to improve performance and
maintainability. Hence, I am also working on establishing proof of
concept for using Rust instead of C and also using Rust with existing C.&lt;/p&gt;
&lt;p&gt;I started with fixing bugs in the Directory Server and it enabled me to
get more understanding about LDAP concepts, since LDAP has a steep
learning curve. My first task was to add the command line support for
automember plugin to the Directory Server. Automembership allows a
static group to act like a dynamic group, for adding new members to the
group. Different automembership definitions create searches that are
automatically run on all new directory entries. The automembership rules
search for and identify matching entries and then explicitly add those
entries as members to the group. I started by added the classes (Auto
Membership Plugin, Auto Member Definition, Auto Member Definitions),
methods and the tests for these classes and methods (Pull Request). Then
I added the support for automember by command line which included
creating, removing, editing and showing the automember definitions. This
included writing the tests as well. By the end of this task, I learnt
about Python decorators, lazy evaluation in Python, using pytest testing
tool and writing command line parser and arguments using the argparse
library. (This will be shown with live coding and screenshots).&lt;/p&gt;
&lt;p&gt;I am currently working on another task which involves building an LRU
cache in Rust which stores C allocated strings and can retrieve them.
This project will be built using the meson build system. I will also
provide tests and asan builds. This task will act as a proof of concept
for investigating if meson can replace autotools as the Directory Server
build system. During this task, I hope to learn about build systems, LRU
caching concept and Rust types and safety.&lt;/p&gt;
&lt;p&gt;As you can deduce from my tasks and the key learnings, doing this
Outreachy internship with Fedora is helping me to stand at the forefront
of technology, learning about LDAP, Python and Rust (polyglot!), which
will definitely enable me to become a better programmer and a
collaborative community member for Fedora. And I hope to inspire other
underrepresented people in tech with my talk about the Outreachy
internship and my progress.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 14:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alisha Aneja</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:/pycon-italia-2018/working-for-foss-can-make-you-a-better-programmer-insights-into-my-outreachy-internship-with-fedora.html</guid><category>PyCon Italia 2018</category><category>open source</category><category>#remote</category><category>#community</category><category>user-groups</category></item><item><title>Real world Graphene - lessons learned from building a GraphQL API on top of a large Django project</title><link>https://pyvideo.org/pycon-italia-2019/real-world-graphene-lessons-learned-from-building-a-graphql-api-on-top-of-a-large-django-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Graphene is currently the most popular framework for building a GraphQL
in Python and it’s also an obvious choice for adding a GraphQL layer to
Django applications. Over the course of a year, we successfully built an
API with about 50 queries and over 100 mutations on top of existing
Django project (Saleor), but we also learned some hard lessons and had
to overcome several shortcomings of the framework along the way.&lt;/p&gt;
&lt;p&gt;In this talk, I’d like to share some practical tips to overcome the most
common problems that a Django developer might face when building an
optimized and maintainable API with Graphene, such as: - using useful
abstractions to build queries and mutations faster - optimizing database
queries in a graph - structuring a large Graphene project - unified
error handling&lt;/p&gt;
&lt;p&gt;I’d also like to bring up a few limitations of the framework that we
discovered as we were working on the project and then end the talk with
the most important benefits that adoption of GraphQL brings to modern
web applications development - both for the backend and frontend.&lt;/p&gt;
&lt;p&gt;Prerequisites: - Intermediate knowledge of Django - Familiarity with API
design and concepts in terms of web development - Basic knowledge of
GraphQL or interest in it&lt;/p&gt;
&lt;p&gt;I think the talk would be of great value to anyone working with a
Graphene framework and those who want to know more about building
GraphQL in Python.&lt;/p&gt;
&lt;p&gt;All code examples in the presentation would be based on Saleor
(&lt;a class="reference external" href="https://github.com/mirumee/saleor"&gt;https://github.com/mirumee/saleor&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1644"&gt;https://python.it/feedback-1644&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 11:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marcin Gębala</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:/pycon-italia-2019/real-world-graphene-lessons-learned-from-building-a-graphql-api-on-top-of-a-large-django-project.html</guid><category>PyCon Italia 2019</category><category>API Design</category><category>e-commerce</category><category>graphql</category><category>open-source</category><category>django</category></item><item><title>Building data pipelines with Apache Airflow</title><link>https://pyvideo.org/pycon-italia-2022/building-data-pipelines-with-apache-airflow.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building data pipelines with Apache Airflow - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Apache Airflow is a popular orchestration tool that uses Python to
author workflows, but what is it, what are the architectural components,
why do I need this, and how do you get started? If you care about
reliably getting your data from source to your big data platforms, this
is the talk for you. Moving, refining and enriching data in order to get
actionable insights is hard. Apache Airflow, an open source project that
makes it easy for data engineers to create repeatable and reliable
workflows in Python. This session will be a hands on getting started
looking at creating your first workflows and understanding how you can
use the features of Apache Airflow to orchestrate your own data
pipelines.&lt;/p&gt;
&lt;p&gt;Slides:&lt;/p&gt;
&lt;p&gt;Speaker: Ricardo Sueiras&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ricardo Sueiras</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/building-data-pipelines-with-apache-airflow.html</guid><category>PyCon Italia 2022</category><category>aws</category><category>big data</category><category>open source</category></item><item><title>Creare API REST su Odoo con OCA REST Framework</title><link>https://pyvideo.org/pycon-italia-2022/creare-api-rest-su-odoo-con-oca-rest-framework.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Creare API REST su Odoo con OCA REST Framework - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;La disponibilità di API è spesso un requisito fondamentale per
l’integrazione di Odoo con terze parti. Tuttavia la mancanza di una
piattaforma REST nativa su Odoo è un ostacolo, a cui è tuttavia semplice
porre rimedio in maniera sistematica e organizzata con il framework
messo a disposizione da OCA Odoo fornisce di default un’interfaccia RPC
per le integrazioni di terze parti, ma non un set di API REST. Per
ovviare a questa mancanza, OCA, la comunità open-source di Odoo, ha
sviluppato un insieme di moduli che aggiungono un framework molto solido
e robusto per la realizzazione di API REST, con una integrazione nativa
di Swagger, un sistema di validazione dei dati in ingresso e in uscita,
e meccanismi di versionamento delle API stesse. In questo talk vedremo
come utilizzare questo framework per realizzare API REST su Odoo.&lt;/p&gt;
&lt;p&gt;Speaker: Andrea Colangelo&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Colangelo</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/creare-api-rest-su-odoo-con-oca-rest-framework.html</guid><category>PyCon Italia 2022</category><category>apis</category><category>architecture</category><category>cpython</category><category>development</category><category>odoo</category><category>open source</category><category>rest</category></item><item><title>Emmett: the web framework for inventors</title><link>https://pyvideo.org/pycon-italia-2022/emmett-the-web-framework-for-inventors.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Emmett: the web framework for inventors - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Great Scott! Is this 2022? But wait, did I wrongly set the temporal
circuits of the DeLorean and went to 2012, or Python web developers are
still stuck with Django and Flask? Martin! We ended up in a timeline
without AsyncIO! Let’s get back and fix it! And remember the plutonium!
An overview of Emmett’s capabilities and features, and a few
demonstrations on how the web framwork for inventors can help developers
writing awesome applications in the AsyncIO era.&lt;/p&gt;
&lt;p&gt;Speaker: Giovanni Barillari&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giovanni Barillari</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/emmett-the-web-framework-for-inventors.html</guid><category>PyCon Italia 2022</category><category>asyncio</category><category>open source</category><category>rest</category></item><item><title>Event Driven Applications with Flask and Kafka</title><link>https://pyvideo.org/pycon-italia-2022/event-driven-applications-with-flask-and-kafka.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Event Driven Applications with Flask and Kafka - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Let’s build an event driven application together! Using Flask as
framework we’ll add the powerful Apache Kafka, a streaming platform, as
backend… all live on stage! Join to understand how to integrate your
application with Apache Kafka! Solid event driven applications are based
on a widely adopted coding framework and a resilient data streaming
technology. While Flask is a common choice for the framework, a wise
selection of the backend data systems can bring benefits in terms of
ease of integration and performances.&lt;/p&gt;
&lt;p&gt;In this session we will explore Apache Kafka, a data streaming platform,
that enables reliable real-time data integration for your event driven
application. We will look at the types of problems that Kafka is best at
solving, and show how to use it in your own applications. We’ll then
take a look at Kafka in action, by creating a Flask web application.&lt;/p&gt;
&lt;p&gt;After understanding how to produce and consume events from Apache Kafka,
we’ll then introduce Kafka Connect, a selection of pre-built connectors
making Apache Kafka your only backend interface, no matter where your
data originally sits.&lt;/p&gt;
&lt;p&gt;If you’re using Flask, and want to understand how to make your
application event driven by integrating it with the most used streaming
technology, this session is for you!&lt;/p&gt;
&lt;p&gt;Speaker: Francesco Tisiot&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Francesco Tisiot</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/event-driven-applications-with-flask-and-kafka.html</guid><category>PyCon Italia 2022</category><category>big data</category><category>development</category><category>flask</category><category>open source</category></item><item><title>From XML to JSON and beyond</title><link>https://pyvideo.org/pycon-italia-2022/from-xml-to-json-and-beyond.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From XML to JSON and beyond - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;I want to share my experience on converting XML data to JSON, talking
about the existing conventions, some that expect a loss of information
and others that are lossless, with a focus on conversion methods defined
by XPath 3.1. JSON has been often described as an XML alternative or
even a replacement. This can be true in several applications, but many
often XML persists due to its more richer characteristics and pretty
different architectural scopes. So crucial is the build of conversion
tools and mapping conventions, to let the data communication effective
between the different formats. Despite many defined conventions also
XPath 3.1 put a step in this direction. So don’t trash old XML data, but
use them for what is better suited and convert them to send chunks of
JSON data to other systems or to submit to other applications.&lt;/p&gt;
&lt;p&gt;Speaker: Davide Brunato&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Davide Brunato</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/from-xml-to-json-and-beyond.html</guid><category>PyCon Italia 2022</category><category>compiler and interpreters</category><category>data structures</category><category>open source</category></item><item><title>Fuzzing Python code with Atheris</title><link>https://pyvideo.org/pycon-italia-2022/fuzzing-python-code-with-atheris.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fuzzing Python code with Atheris - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Fuzz testing is a well-known technique for uncovering programming
errors. Atheris is an open-source fuzzing engine for finding bugs in
Python code and native extensions, released by the Google Information
Security team. With this talk we’ll learn how Atheris works and how it
can be used in practice. Fuzz testing is a well-known technique for
uncovering programming errors. Many of these detectable errors have
serious security implications. Atheris ( is an open-source fuzzing
engine for automatically finding bugs in Python code and native
extensions. Atheris is a “coverage-guided” fuzzer, which means that
Atheris will repeatedly try various inputs to your program while
watching how it executes, and try to find interesting execution paths.
In the past, Atheris was used to find bugs in Pillow’s native code
(CVE-2020-35653) or to find differences in JSON parsing between Python’s
standard library and Ultrajson, or between Python’s idna package and the
native libidn2 library.&lt;/p&gt;
&lt;p&gt;In this talk you can learn the basics of fuzzing, how Atheris works
internally, and how it can be used for bug hunting.&lt;/p&gt;
&lt;p&gt;Speaker: Federico Scrinzi&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Federico Scrinzi</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/fuzzing-python-code-with-atheris.html</guid><category>PyCon Italia 2022</category><category>code analysis</category><category>open source</category><category>security</category><category>testing</category></item><item><title>Managing large-scale ML pipelines with MLflow and serverless computing.</title><link>https://pyvideo.org/pycon-italia-2022/managing-large-scale-ml-pipelines-with-mlflow-and-serverless-computing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Managing large-scale Machine Learning pipelines with MLflow and
serverless computing. - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;MLOps aims to manage the machine learning (ML) lifecycle including
experimentation, reproducibility, deployment, and model registry. Come
to discover how in Vedrai - one of the top AI startups in Europe - we
enhance and maintain ML pipelines models in production reliably and
efficiently using MLOps. Problem:&lt;/p&gt;
&lt;p&gt;One difficulty of employing Machine Learning (ML) within organizations
is managing the model’s lifecycle. Moving from experimenting to
deployment in production environments is operated by different steps:
Preparing and Analysing Data, Training, Deployment, Monitoring, and
Governance of ML models. So, it is crucial to possess a platform to
manage and organize the ML lifecycle.&lt;/p&gt;
&lt;p&gt;Solution:&lt;/p&gt;
&lt;p&gt;In Vedrai, we combined the strength of the MLflow framework and the
resilience of AWS serverless services to manage, deploy, and scale our
ML models in production. MLflow is an open-source framework for tracking
the entire ML lifecycle from training to deployment. Among the
functions, it offers model tracking, packaging, and serving. Whereas,
deploying ML applications is an infrastructure affair that needs to be
scalable with minimum server management, which makes AWS serverless
services a great choice.&lt;/p&gt;
&lt;p&gt;Value:&lt;/p&gt;
&lt;p&gt;MLflow enforces the model’s reproducibility and robustness at the same
time allowing more centralized experimentation. AWS serverless services
allow training and inferencing pipelines to run without provisioning or
managing servers while only paying for the time it takes to run.&lt;/p&gt;
&lt;p&gt;Summary:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;State of the art of MLOps.&lt;/li&gt;
&lt;li&gt;Record and query experiments with MLflow Tracking.&lt;/li&gt;
&lt;li&gt;Package data science code with MLflow Projects.&lt;/li&gt;
&lt;li&gt;Store ML models with MLflow Models Registry.&lt;/li&gt;
&lt;li&gt;Deploy ML models in the AWS environment.&lt;/li&gt;
&lt;li&gt;Future MLOps challenges.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Speaker: ilyas chaoua&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">ilyas chaoua</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/managing-large-scale-ml-pipelines-with-mlflow-and-serverless-computing.html</guid><category>PyCon Italia 2022</category><category>architecture</category><category>aws</category><category>best practice</category><category>deep learning</category><category>devops</category><category>docker</category><category>infrastructure</category><category>machine learning</category><category>open source</category><category>operations</category><category>packaging</category><category>performance</category><category>scaling</category></item><item><title>/metrics, a must have</title><link>https://pyvideo.org/pycon-italia-2022/metrics-a-must-have.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;/metrics, a must have - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;With modern applications being distributed, only testing is enough to
ensure your apps are healthy? The web is wild and users are
unpredictable. Having a good strategy of observability in place is
essential. In this talk, I’ll demo how to setup extensible metrics in
your app using open-source tools With the advent of microservices and
all that jazz, the complexity of monitoring applications increased quite
a lot. How many instances of my app do I have running? Are they all
healthy? How is it performing under heavy load? Questions like that can
not be answered by guesses only, but you need data to be more assertive.&lt;/p&gt;
&lt;p&gt;In this talk, we will create a sample web application and instrument it
using Prometheus (and potentially other tools such as Grafana, Jaeger,
Alert Manager, etc) and see in practice how we can monitor web
applications in real-time.&lt;/p&gt;
&lt;p&gt;Speaker: Luiz Marques&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luiz Marques</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/metrics-a-must-have.html</guid><category>PyCon Italia 2022</category><category>apis</category><category>asyncio</category><category>debugging</category><category>docker</category><category>open source</category><category>performance</category><category>tooling</category></item><item><title>Processing and analysing streaming data with Python and Apache Flink</title><link>https://pyvideo.org/pycon-italia-2022/processing-and-analysing-streaming-data-with-python-and-apache-flink.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Processing and analysing streaming data with Python and Apache Flink -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Data used to be a batch thing, but more and more we get unbounded
streams of data, fast or slow, that we need to process and analyse in
near real time.&lt;/p&gt;
&lt;p&gt;In this talk I’ll show you how you can use Apache Flink and QuestDB to
build reliable streaming data pipelines that can grow as much as you
need. Data used to be a batch thing, but more and more we get unbounded
streams of data, fast or slow, that we need to process and analyse in
near real time.&lt;/p&gt;
&lt;p&gt;In this talk I’ll show you how you can use Apache Flink and QuestDB to
build reliable streaming data pipelines that can grow as much as your
Python application needs.&lt;/p&gt;
&lt;p&gt;Speaker: Javier Ramirez&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Javier Ramirez</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/processing-and-analysing-streaming-data-with-python-and-apache-flink.html</guid><category>PyCon Italia 2022</category><category>analytics</category><category>big data</category><category>databases</category><category>distributed systems</category><category>open source</category></item><item><title>Protecting hardcoded credentials in public source code</title><link>https://pyvideo.org/pycon-italia-2022/protecting-hardcoded-credentials-in-public-source-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Protecting hardcoded credentials in public source code - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Hardcoding credentials in source code is a known bad practice, but it is
still happening every day, even on public platforms like GitHub.
Credential Digger is an open source scanning tool that can help
developers find and remediate to their exposed credentials with a low
false positive rate. Github is now widely adopted in the software
development industry as internal and external code hosting, sharing and
versioning platform. Even if this platform offers advanced code control
features it remains exposed to security weaknesses. In this talk we will
discuss about Github security concepts and introduce an SAP Open Source
tool called Credential Digger used to scan Git platforms (GitHub,
GitLab, BitBucket, etc.) in order to identify hardcoded credentials
(Passwords, API Keys, Secret Keys, Tokens, personal information,
internal domains, etc.). Compared to other secret scanners in the
market, Credential Digger is able to identify passwords with a low false
positive rate. Thanks to a NLP model we trained for this purpose, we can
identify when passwords are fake and when they are real. Together with
Credential Digger, we also work on a real time Github Organization
monitor that analyzes permanently the new commits on the projects of a
team, and alerts the owner when a potential secret is shared.&lt;/p&gt;
&lt;p&gt;Slides:&lt;/p&gt;
&lt;p&gt;Speaker: Marco Rosa&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Rosa</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/protecting-hardcoded-credentials-in-public-source-code.html</guid><category>PyCon Italia 2022</category><category>open source</category><category>security</category></item><item><title>Python, you can drive my car. Yes, I'm gonna be a star.</title><link>https://pyvideo.org/pycon-italia-2022/python-you-can-drive-my-car-yes-im-gonna-be-a-star.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python, you can drive my car. Yes, I’m gonna be a star. - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;We know that our beloved Python can do everything, and today we are
learning how to use it to build a micro-simulation model of mobility!
Thanks to SUMO, a microscopic traffic simulation package written in C++
and Python, we discover how to analyze vehicle, pedestrian and train
flows very easily! In this talk I present SUMO, an open source, highly
portable, microscopic and continuous traffic simulation package designed
to handle large networks. Within SUMO, you can build multi-modal
transportation networks, including demand (flows of vehicles,
pedestrians, buses, trains) and network characteristics (traffic lights,
junctions, bike lanes etc.), running simulations over large urban
networks.&lt;/p&gt;
&lt;p&gt;Written in C++, it comprises several functions and tools written in
Python, as well a complete package called sumolib, a set of Python
modules for working with SUMO networks.&lt;/p&gt;
&lt;p&gt;We will learn how to import a network from OpenStreetMap in one click
thanks to a Python script, set some traffic flows and run a simulation
within the SUMO-GUI, a perfect interface to see your cars, bicycles,
buses flowing on the network. Typical outputs that we can get and
visualize with Python include vehicle information data, trajectories,
speed, delays and emissions.&lt;/p&gt;
&lt;p&gt;If you are a mobility passioner or a professional engineer dealing with
traffic problems, tired of spending tons of money on commercial
software, you should definitely give SUMO a try.&lt;/p&gt;
&lt;p&gt;Please download the slides of the talk here:&lt;/p&gt;
&lt;p&gt;Speaker: Fabio Lamanna&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fabio Lamanna</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/python-you-can-drive-my-car-yes-im-gonna-be-a-star.html</guid><category>PyCon Italia 2022</category><category>open source</category><category>tooling</category><category>visualization</category></item><item><title>Python's Life of the Brain</title><link>https://pyvideo.org/pycon-italia-2022/pythons-life-of-the-brain.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python’s Life of the Brain - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In this talk, you will learn how to analyse the data coming from the
human brain, how to visualise and process individual neurons, how to
design customised cognitive experiments and finally how to create your
own brain from scratch in jupyter notebook! There is no need to praise
Python for its ubiquitousness in various areas of industry or science.
We all know about Python applications to engineering, web development,
data analysis, or machine learning. But an emerging number of packages
appear that allow scientists and brain research enthusiasts to analyse
the data coming from the brain, visualise and process individual neurons
from various brain areas, design customised cognitive experiments and
finally simulate the whole brain in silico! In this talk, you’ll learn
how to do that, without leaving your jupyter notebook.&lt;/p&gt;
&lt;p&gt;Speaker: Dominik Krzeminski&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dominik Krzeminski</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/pythons-life-of-the-brain.html</guid><category>PyCon Italia 2022</category><category>case study</category><category>education</category><category>open source</category><category>tooling</category><category>visualization</category></item><item><title>RegEx Strikes Back: Regular Expressions for Text Mining</title><link>https://pyvideo.org/pycon-italia-2022/regex-strikes-back-regular-expressions-for-text-mining.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;RegEx Strikes Back: Regular Expressions for Text Mining - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;A short time ago in a galaxy not so far away a regular expression was
taking 5 days to run. In this talk you will learn why regular
expressions can be slow, how to make them fast using a trie regex data
structure and the many uses a good old regular expression can have.
Regular Expressions have a bad reputation, and they are slow (or so they
say) for text mining tasks. In this talk you’ll learn why regex can be
slow and how to use a Trie Regex to craft blazingly fast regular
expressions with no effort. How regular expressions integrate smoothly
with many libraries (pandas, spacy, etc) and how to use the regex module
for common text cleaning tasks such as: prefix finding, fuzzy matching
and many more.&lt;/p&gt;
&lt;p&gt;Slides:&lt;/p&gt;
&lt;p&gt;Speaker: Daniel Mesejo&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Mesejo</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/regex-strikes-back-regular-expressions-for-text-mining.html</guid><category>PyCon Italia 2022</category><category>data structures</category><category>nlp</category><category>open source</category><category>text mining</category></item><item><title>Seek Answers on Oncology with Machine Learning</title><link>https://pyvideo.org/pycon-italia-2022/seek-answers-on-oncology-with-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Seek Answers on Oncology with Machine Learning - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Imagine having to do a very important online search and receive billions
of irrelevant results. Our oncology search engine only offers answers
from professionals, this reduces spam and limit the phenomenon of
cybercondria. Simple queries in natural language. Come and try it! We
will talk about how semantic search engines can be fundamental in the
health field. In particular, Healthware has developed a service
concerning oncology that uses various Machine Learning algorithms and
its medical consultation database to reduce information spam and limit
the phenomenon of cybercondria. Slides:&lt;/p&gt;
&lt;p&gt;Speaker: Nicola Procopio&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicola Procopio</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/seek-answers-on-oncology-with-machine-learning.html</guid><category>PyCon Italia 2022</category><category>machine learning</category><category>nlp</category><category>open source</category><category>science</category></item><item><title>Supercharge Your Shell — Command-Line Power-Ups and Dotfile Automation</title><link>https://pyvideo.org/pycon-italia-2022/supercharge-your-shell-command-line-power-ups-and-dotfile-automation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Supercharge Your Shell — Command-Line Power-Ups and Dotfile Automation -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;We spend hours each day in a terminal console, so let’s make the most of
that time by enhancing our command-line productivity. We will automate
dotfile configuration, facilitate Python interpreter and virtual
environment management, and supercharge our terminals with powerful
command-line tools. We spend hours each day in a terminal console, so
let’s make the most of that time by enhancing our command-line
productivity. Together we will automate dotfile configuration,
facilitate Python interpreter and virtual environment management, and
supercharge our terminals with powerful command-line tools.&lt;/p&gt;
&lt;p&gt;Managing our shell configuration, commonly referred to collectively as
“dotfiles”, can be an onerous task. Thankfully there are tools like
Ansible and Chezmoi that we will use to more effectively automate
dotfile management in versioned repositories, which we can then easily
deploy to both personal workstations and remote servers.&lt;/p&gt;
&lt;p&gt;Given the pitfalls inherent in distro-packaged Python interpreters,
building and managing our own Python interpreters efficiently
has never been more important. Thankfully, we will use tools like ASDF
to make this incredibly easy, as well as examine its similar benefits
for Node.js/NPM and &lt;em&gt;hundreds&lt;/em&gt; of other languages and tools, all via
extensible plugins. For Fish shell users, we will see how VirtualFish
makes it easy to create, upgrade, and activate virtual environments in
ways that have never been available before.&lt;/p&gt;
&lt;p&gt;Finally, we will explore how powerful command-line tools like Zoxide,
Bat, RipGrep-All + fzf, and others can be used to dramatically increase
our terminal console productivity.&lt;/p&gt;
&lt;p&gt;Attendees of this talk will take home the following knowledge and
skills:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;how to automate dotfile configuration management and deployment&lt;/li&gt;
&lt;li&gt;how to build and manage multiple Python interpreter versions&lt;/li&gt;
&lt;li&gt;how to more efficiently manage Python virtual environments&lt;/li&gt;
&lt;li&gt;how to use powerful command-line tools to increase terminal console
productivity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Speaker: Justin Mayer&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Justin Mayer</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/supercharge-your-shell-command-line-power-ups-and-dotfile-automation.html</guid><category>PyCon Italia 2022</category><category>best practice</category><category>development</category><category>open source</category></item><item><title>Trojan Source - Can we trust open-source anymore?</title><link>https://pyvideo.org/pycon-italia-2022/trojan-source-can-we-trust-open-source-anymore.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Trojan Source - Can we trust open-source anymore? - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Recently, a paper is published to demonstrate how a visibly valid
contribution can contain malicious code by exporting the Unicode control
characters. Some of these attacks has been tested on Python and it
works. Shall the Python and open-source communities be concerned?
Background:&lt;/p&gt;
&lt;p&gt;After researchers at the University of Cambridge published a paper(
about a malicious attack named Trojan Source, which exploited the fact
that some program interpreters, like CPython, can handle Unicode. This
has caused concerns in the open-source community about the malicious
contribution that looks totally legitimate in human eyes but contain
invisible attacks. As a member of the Python community, we should all be
aware of that and understand how we can prevent this attack to happen.&lt;/p&gt;
&lt;p&gt;About this talk:&lt;/p&gt;
&lt;p&gt;In this talk, Cheuk will decode the finding in this paper to a level
that can be understood by everyone. She will start with a joke example
who you can mess up someone by using Unicode. She will then explain what
is Unicode and why it causes trouble. Afterwards, she will explain the
Python examples( in the paper and why it can be dangerous. Lastly, she
will open up a discussion on how we should defend ourselves from those
attacks and what we can do as a community.&lt;/p&gt;
&lt;p&gt;Outline (30 mins talk):&lt;/p&gt;
&lt;p&gt;**5 minutes - Introduction, the opening of the talk&lt;/p&gt;
&lt;p&gt;In this session, Cheuk will ask audiences to debug a code snippet that
looks absolutely fine but will not work as code. She will explain that
this is the same concept used in Trojan Source.&lt;/p&gt;
&lt;p&gt;**10 mins - What is Unicode&lt;/p&gt;
&lt;p&gt;In this session, Cheuk will give an introduction about what is Unicode,
what it is to a computer and why we need Unicode in computers. She will
also explain how the benefit of having Unicode can also be a downfall to
make us vulnerable to the Trojan Source attack.&lt;/p&gt;
&lt;p&gt;**10 mins - How Trojan Source works in Python&lt;/p&gt;
&lt;p&gt;In this session, Cheuk will show a few examples using the Trojan Source
in legitimate Python code. She will point out how the attack is hiding
in the source code and in what cases it can be dangerous.&lt;/p&gt;
&lt;p&gt;**5 mins - How to protect ourselves&lt;/p&gt;
&lt;p&gt;In this session, Cheuk will open the discussion and make a few
suggestions of how we can protect ourselves as a community. This will
lead to the Q&amp;amp;A session where the audience can weigh in on their own
thought.&lt;/p&gt;
&lt;p&gt;Target audiences&lt;/p&gt;
&lt;p&gt;From those who are curious to maintainers of open-source libraries. This
is the knowledge we should all know and be aware of. Cheuk will explain
in a way that expects no prior knowledge is needed.&lt;/p&gt;
&lt;p&gt;What will audiences learn&lt;/p&gt;
&lt;p&gt;About Trojan Source attacks and how it works. They may also learn about
how interpreters, especially Python interpreters, works with Unicode.
Plus, they may have increased awareness about security in the
open-source world.&lt;/p&gt;
&lt;p&gt;Speaker: Cheuk Ho&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cheuk Ho</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/trojan-source-can-we-trust-open-source-anymore.html</guid><category>PyCon Italia 2022</category><category>best practice</category><category>community</category><category>open source</category><category>security</category></item><item><title>Using GitHub Actions and Python to keep your blogs updated</title><link>https://pyvideo.org/pycon-italia-2022/using-github-actions-and-python-to-keep-your-blogs-updated.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using GitHub Actions and Python to keep your blogs updated - PyCon
Italia 2022&lt;/p&gt;
&lt;p&gt;Se hai un blog su GitHub Pages ma vuoi avere maggiore visibilità, non
devi più copiare manualmente gli stessi contenuti sulle altre
piattaforme. Grazie a Github Actions puoi sviluppare il tuo operatore
Python che monitora la tua repository ed aggiorna tutte le tue
piattaforme di blog in automatico. GitHub Actions è il potente strumento
introdotto da GitHub per automatizzare le operazioni che riguardano una
repository GitHub. Ogni volta che un evento viene generato dalla nostra
repository (una commit, un issue, …), GitHub Actions fa partire in
automatico una sequenza di operazioni definite dall’utente. Queste
operazioni (dette “Actions”) possono essere condivise dalla community o
sviluppate personalmente, anche in Python! In questo talk voglio
mostrare come costruire la propria GitHub Action in Python per
condividere automaticamente i post di un blog su GitHub Pages su altre
piattaforme, come Medium.&lt;/p&gt;
&lt;p&gt;Speaker: Andrea Grillo&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grillo</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/using-github-actions-and-python-to-keep-your-blogs-updated.html</guid><category>PyCon Italia 2022</category><category>deployment/continuous integration</category><category>devops</category><category>open source</category></item><item><title>Who killed Laura Palmer? How to implement a question answering system</title><link>https://pyvideo.org/pycon-italia-2022/who-killed-laura-palmer-how-to-implement-a-question-answering-system.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Who killed Laura Palmer? How to implement a question answering system,
based on a TV series wiki - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Have you always dreamed of providing knowledge to a computer so that it
can answer your questions? It is finally possible and easy to do this,
using python and the Haystack library. I’ll explain how to quickly
implement a Question Answering system, starting from docs about your
favorite TV series. Web app:&lt;/p&gt;
&lt;p&gt;Repository:&lt;/p&gt;
&lt;p&gt;Slides:&lt;/p&gt;
&lt;p&gt;Have you always dreamed of providing knowledge to a computer so that it
can answer your questions? In this talk, I’m going to present the open
source Haystack library: an end-to-end python framework that enables you
to build powerful and production-ready pipelines for different search
use cases, shuch as Question Answering and semantic document search.
Haystack is modular, so that you can combine the best technology from
Transformers, Elasticsearch, or Milvus. I present a simple and funny use
case, where I quickly and easyly build a Question Answering system,
starting from a collection of documents about Twin Peaks TV series. I
also provide some theoretical details to make everyone understand how
this technology works and I briefly talk about the trade-offs between
response quality, response speed and computational effort.&lt;/p&gt;
&lt;p&gt;Speaker: Stefano Fiorucci&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stefano Fiorucci</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/who-killed-laura-palmer-how-to-implement-a-question-answering-system.html</guid><category>PyCon Italia 2022</category><category>machine learning</category><category>nlp</category><category>open source</category></item><item><title>Design Your Open Source Project</title><link>https://pyvideo.org/pycon-philippines-2012/design-your-open-source-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Closing Keynote - a practical walkthrough of what to consider when creating an open source project, and several resources to get you started (especially with documentation)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bryan Veloso</dc:creator><pubDate>Sat, 30 Jun 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-06-30:/pycon-philippines-2012/design-your-open-source-project.html</guid><category>PyCon Philippines 2012</category><category>open source</category><category>keynote</category><category>tooling</category><category>documentation</category></item><item><title>A Year of Pyxley: My First Open Source Adventure</title><link>https://pyvideo.org/pydata-chicago-2016/a-year-of-pyxley-my-first-open-source-adventure.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Last year, I created my first Flask-powered web application utilizing React.js and D3. I refactored it into reusable components and released it as Pyxley. In this talk, I’ll introduce the basics of Pyxley and discuss what has and hasn’t worked. More importantly, I’ll talk about what it’s like to maintain an open-source project for the first time.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicholas Kridler</dc:creator><pubDate>Sun, 28 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-28:/pydata-chicago-2016/a-year-of-pyxley-my-first-open-source-adventure.html</guid><category>PyData Chicago 2016</category><category>adventure</category><category>Open Source</category></item></channel></rss>