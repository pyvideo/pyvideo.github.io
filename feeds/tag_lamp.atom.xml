<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_lamp.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2011-07-18T00:00:00+00:00</updated><entry><title>Best Practices for Python in the Cloud</title><link href="https://pyvideo.org/europython-2011/best-practices-for-python-in-the-cloud.html" rel="alternate"></link><published>2011-07-18T00:00:00+00:00</published><updated>2011-07-18T00:00:00+00:00</updated><author><name>Gisle Aas</name></author><id>tag:pyvideo.org,2011-07-18:europython-2011/best-practices-for-python-in-the-cloud.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Gisle Aas - 21 June 2011 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Abstract: Whether you’re an independent developer or development manager
in a large company, “the cloud” is on everyone’s mind. But just because
it’s in the cloud, doesn’t mean development and deployment is
effortless. The cloud presents infrastructure and development challenges
in a new way.&lt;/p&gt;
&lt;p&gt;In this presentation, ActiveState's Gisle Aas will share best practices
in building and deploying a Python-centric LAMP stack(s) on the cloud
for a range of web-based applications from simple Django site to HPC GPU
Clusters.&lt;/p&gt;
&lt;p&gt;Based on ActiveState’s experiences, Gisle will discuss the challenges
faced and lessons learned in building an infrastructure to deploy web
applications to the cloud with Python.&lt;/p&gt;
&lt;p&gt;You will learn about:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Which packages are critical for a secure, Python-centric LAMP stack
(and what it takes to build them)!&lt;/li&gt;
&lt;li&gt;Tips for developing, deploying, and scaling Python applicaitons in
the cloud&lt;/li&gt;
&lt;li&gt;How to use Python to connect and build infrastructure to support and
manage your deployment&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="cloud"></category><category term="deploy"></category><category term="deployment"></category><category term="django"></category><category term="gpu"></category><category term="hpc"></category><category term="infrastructure"></category><category term="lamp"></category><category term="packages"></category><category term="scaling"></category><category term="web"></category></entry><entry><title>Swarming the Web: Evolving the Perfect Config File</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--swarming-the-web--evolving-the-perfec.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Kurt Grandis</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--swarming-the-web--evolving-the-perfec.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Swarming the Web: Evolving the Perfect Config File&lt;/p&gt;
&lt;p&gt;Presented by Kurt Grandis&lt;/p&gt;
&lt;p&gt;Deployed web applications are typically run on top of stacks of highly
configurable middleware. The number of tunable parameters and their
impact are rarely fully explored. Using SciPy and a set of common
Python-based web tools this session will present a new method of
automatically tuning a typical LAMP stack for optimal performance.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Deployed web applications typically run on top of stacks of configurable
technology (e.g. web servers, interface modules, software load
balancers, databases). Each of these components often has dozens of
tuneable parameters. How many times are those values typically tweaked
before a final set of tuned parameters are settled on? What criteria are
typically used to determine the optimal set?&lt;/p&gt;
&lt;p&gt;This session presents a new method of automatically tuning a common LAMP
stack for optimal performance. We explore a solution using some common
Python-based automated deployment and load testing tools and dive into
scientific computing with SciPy.&lt;/p&gt;
</summary><category term="lamp"></category><category term="pycon"></category><category term="pycon2011"></category><category term="scipy"></category><category term="tuning"></category><category term="webapps"></category></entry></feed>