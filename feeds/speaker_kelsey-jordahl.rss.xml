<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 06 Jul 2017 00:00:00 +0000</lastBuildDate><item><title>Mosaicking the Earth every day</title><link>https://pyvideo.org/pydata-seattle-2017/mosaicking-the-earth-every-day.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Planet's mission is to image the surface of the Earth every day. With over 140 Earth observation satellites currently in orbit imaging over 100 million square kilometers of land area per day, we are approaching that goal and expect to achieve it later this year. With a data pipeline built with open source tools, we process terabytes of data every data and manage an archive of petabytes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Global mosaics are created from Planet satellite images at regular intervals (quarterly, monthly, and weekly) by selecting the best quality scenes (e.g. cloud- and haze-free), color balancing, and seamlessly compositing millions of scenes to create continuous maps of the Earth for each time slice. As our data rate increases, we are scaling up the cadence of our mosaics, and plan to build a continuously updated &amp;quot;dynamic&amp;quot; mosaic of the most recent cloud-free images of the Earth. Daily data at 5 meter spatial resolution will open up new analysis techniques previously limited by the temporal or spatial resolution of existing instruments.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kelsey Jordahl</dc:creator><pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-06:pydata-seattle-2017/mosaicking-the-earth-every-day.html</guid></item><item><title>Geospatial Data with Open Source Tools in Python</title><link>https://pyvideo.org/scipy-2015/geospatial-data-with-open-source-tools-in-python.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kelsey Jordahl</dc:creator><pubDate>Wed, 08 Jul 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-07-08:scipy-2015/geospatial-data-with-open-source-tools-in-python.html</guid><category>Tutorial</category></item><item><title>GeoPandas: Geospatial Data + Pandas</title><link>https://pyvideo.org/scipy-2014/geopandas-geospatial-data-pandas.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;GeoPandas extends the pandas data analysis library to work with
geographic objects.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/kjordahl/geopandas"&gt;GeoPandas&lt;/a&gt; is a library built
on top of pandas to extend its capabilities to allow spatial
calculations. The two main datatypes are &lt;tt class="docutils literal"&gt;GeoSeries&lt;/tt&gt; and
&lt;tt class="docutils literal"&gt;GeoDataFrame&lt;/tt&gt;, extending pandas &lt;tt class="docutils literal"&gt;Series&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;DataFrame&lt;/tt&gt;,
respectively. A &lt;tt class="docutils literal"&gt;GeoSeries&lt;/tt&gt; contains a collection of geometric objects
(such as &lt;tt class="docutils literal"&gt;Point&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;LineString&lt;/tt&gt;, or &lt;tt class="docutils literal"&gt;Polygon&lt;/tt&gt;) and implements
nearly all &lt;tt class="docutils literal"&gt;Shapely&lt;/tt&gt; operations. These include unary operations (e.g.
&lt;tt class="docutils literal"&gt;centroid&lt;/tt&gt;), binary operations (e.g. &lt;tt class="docutils literal"&gt;distance&lt;/tt&gt;, either elementwise
to another &lt;tt class="docutils literal"&gt;GeoSeries&lt;/tt&gt; or to a single geometry), and cumulative
operations (e.g. &lt;tt class="docutils literal"&gt;unary_union&lt;/tt&gt; to combine all items to a single
geometry).&lt;/p&gt;
&lt;p&gt;A &lt;tt class="docutils literal"&gt;GeoDataFrame&lt;/tt&gt; object contains a column of geometries (itself a
&lt;tt class="docutils literal"&gt;GeoSeries&lt;/tt&gt;) that has special meaning. GeoDataFrames can be easily
created from spatial data in other formats, such as shapefiles. Rows in
the &lt;tt class="docutils literal"&gt;GeoDataFrame&lt;/tt&gt; represent features, and columns represent
attributes. Pandas' grouping and aggregation methods are also supported.&lt;/p&gt;
&lt;p&gt;GeoPandas objects can optionally be aware of coordinate reference
systems (by adding a &lt;tt class="docutils literal"&gt;crs&lt;/tt&gt; attribute) and transformed between map
projections. Basic support for plotting is included with GeoPandas.
Other features include geocoding, export to GeoJSON, and retrieving data
from a PostGIS spatial database.&lt;/p&gt;
&lt;p&gt;This talk will describe the main features of GeoPandas and show examples
of its use.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kelsey Jordahl</dc:creator><pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-13:scipy-2014/geopandas-geospatial-data-pandas.html</guid><category>gis</category></item></channel></rss>