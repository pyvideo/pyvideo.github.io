<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Carl James</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_carl-james.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-07-26T00:00:00+00:00</updated><subtitle></subtitle><entry><title>How a Solo Hobbyist Learned to Love Testing</title><link href="https://pyvideo.org/pyohio-2025/how-a-solo-hobbyist-learned-to-love-testing.html" rel="alternate"></link><published>2025-07-26T00:00:00+00:00</published><updated>2025-07-26T00:00:00+00:00</updated><author><name>Carl James</name></author><id>tag:pyvideo.org,2025-07-26:/pyohio-2025/how-a-solo-hobbyist-learned-to-love-testing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I don’t get paid to write code. I have no boss to answer to. I have no
partner to work with. Most of the apps I produce are for me to use. When
I was learning Python with online videos, I was introduced to testing. I
found it …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I don’t get paid to write code. I have no boss to answer to. I have no
partner to work with. Most of the apps I produce are for me to use. When
I was learning Python with online videos, I was introduced to testing. I
found it interesting, but it felt time consuming.&lt;/p&gt;
&lt;p&gt;Then I went back to an old app I had written and wanted to re-work. I
was lost. I couldn’t even figure out where to begin to make it work
again. I slowly decided to integrate testing into my personal workflow
on projects. Then I came upon an unexpected benefit: by testing my code
in a Django app, I was able to better learn what the library was doing
to convert a request into a response. I knew the steps, but through
writing a test with an expected output and seeing the error messages on
failures, I now intuitively understand how this process works. This talk
will demonstrate that.&lt;/p&gt;
</content><category term="PyOhio 2025"></category></entry></feed>