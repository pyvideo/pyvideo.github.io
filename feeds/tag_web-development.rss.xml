<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 05 May 2019 00:00:00 +0000</lastBuildDate><item><title>Django Tutorial Adventure Part 2</title><link>https://pyvideo.org/python-frederick/django-tutorial-adventure-part-2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the December 2018 Python Frederick event, Patrick walked through the second half of the Django 2.1 tutorial. Since Patrick is a DevOps engineer instead of a web developer, the group got to share in the experience in a novice.&lt;/p&gt;
&lt;p&gt;The Django tutorial is very large so we picked up from where we left off from the previous presentation. If you want to watch that experience, check out &lt;a class="reference external" href="https://www.youtube.com/watch?v=ZSs2eZ-yFps"&gt;https://www.youtube.com/watch?v=ZSs2eZ-yFps&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Pierson</dc:creator><pubDate>Thu, 13 Dec 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-12-13:python-frederick/django-tutorial-adventure-part-2.html</guid><category>django</category><category>web development</category></item><item><title>Django Tutorial Adventure</title><link>https://pyvideo.org/python-frederick/django-tutorial-adventure.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the August 2018 Python Frederick event, Patrick walked through the Django 2.1 tutorial. Since Patrick is a DevOps engineer instead of a web developer, the group got to share in the experience in a novice.&lt;/p&gt;
&lt;p&gt;The Django tutorial is very large so we only managed to complete parts 1 and 2 of the tutorial.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Pierson</dc:creator><pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-09:python-frederick/django-tutorial-adventure.html</guid><category>django</category><category>web development</category></item><item><title>Python Website is Slow? Think Again!</title><link>https://pyvideo.org/pycon-italia-2019/python-website-is-slow-think-again.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a Python avid user, we read a lot of articles that describe Python as
a slow, interpreted language. At a certain point, some people start to
blame the language itself for performance problems and consider to
migrate their codebase to other languages. However, the success story of
Instagram in handling four hundred million users has shown us that
Python is not the bottleneck, but our codebase is.&lt;/p&gt;
&lt;p&gt;In this talk, the speaker will share a tale of improving Python website
performances in medium-sized enterprise (serving million users) that I’m
currently working at. In a year, we finally achieved speed improvement
from the average response time of 400 ms to 150 ms per request and we
could save around $100k per year in AWS EC2 instance provisioning, which
is around 60% of total cost.&lt;/p&gt;
&lt;p&gt;Several key points that we have learned from our development process
includes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Tracking database queries with Python decorator will reduce number of
unnecessary queries&lt;/li&gt;
&lt;li&gt;Using an async framework does not guarantee your codebase is
implementing it correctly&lt;/li&gt;
&lt;li&gt;Default configured third-party library is not always suitable for all
use cases&lt;/li&gt;
&lt;li&gt;Utilizing memory profiler and pdb properly will help you in
pinpointing application bottleneck&lt;/li&gt;
&lt;li&gt;Python for-loops vs generators&lt;/li&gt;
&lt;li&gt;And several other common pitfalls&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Expected level of audience: This talk is mainly targeted for beginner to
intermediate web developer who are interested in improving the cost-
performance of their web applications. After listening to this talk, the
audiences are expected to understand that good coding practices (e.g.:
implement asyncio correctly, track number of DB queries with decorators,
etc) will make their web application a lot faster and cut down
operational costs by a large margin.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1592"&gt;https://python.it/feedback-1592&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 12:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Iskandar Setiadi</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-italia-2019/python-website-is-slow-think-again.html</guid><category>tornado</category><category>best-practices</category><category>aws</category><category>web-development</category><category>web</category></item><item><title>TemPy! Una alternativa al templating tradizionale usando solo Python.</title><link>https://pyvideo.org/pycon-italia-2019/tempy-una-alternativa-al-templating-tradizionale-usando-solo-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TemPy è un modo di fare pagine HTML senza usare HTML. E’ un modo per
avere, nel templating di pagine web, tutta la libertà offerta da Python,
senza dover sottostare a un linguaggio simil-python con limitazioni.&lt;/p&gt;
&lt;p&gt;Il talk sarà una introduzione a un modo alternativo di produrre l’output
web attraverso TemPy, sia per un veloce prototyping che per un complesso
sistema di template da semplificare… o potenziare. Coprirà esempi di
utilizzo del modulo, la filosofia alla sua base ed alcuni esempi di ciò
che può fare.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1516"&gt;https://python.it/feedback-1516&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 09:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Federico Cerchiari</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-italia-2019/tempy-una-alternativa-al-templating-tradizionale-usando-solo-python.html</guid><category>templates</category><category>html5</category><category>oop</category><category>python3</category><category>web development</category></item><item><title>Heroku: come deployare un'app Django in 10 minuti!</title><link>https://pyvideo.org/pycon-italia-2018/heroku-come-deployare-unapp-django-in-10-minuti.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Se sei stanco di occuparti di &lt;em&gt;load balancing&lt;/em&gt; , &lt;em&gt;routing&lt;/em&gt; e &lt;em&gt;cloud
monitoring&lt;/em&gt; e vorresti dedicarti solo a &lt;em&gt;lambda function&lt;/em&gt; , &lt;em&gt;list
comprehension&lt;/em&gt; o &lt;em&gt;class-based view&lt;/em&gt; allora questo è il talk che fa per
te.&lt;/p&gt;
&lt;p&gt;Heroku è la piattaforma PaaS ( &lt;em&gt;Platform as a Service&lt;/em&gt; ) che consente
agli sviluppatori di creare, eseguire e gestire applicazioni interamente
nel cloud. Ad essere fornito come servizio non c’è solo l’hardware, ma
anche la piattaforma che astrae l’hardware stesso e permette di
usufruire di funzionalità che consentono di ottenere bilanciamenti
automatici, gestione del deployment e altro ancora.&lt;/p&gt;
&lt;p&gt;Il vantaggio per l’utente è quello di concentrarsi solo ed
esclusivamente sullo sviluppo dell’applicazione senza perdersi
nell’analisi di problematiche legate all’ambiente in cui essa deve
essere distribuita ottenendo così la scalabilità e l’affidabilità
necessaria.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 15:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sabatino Severino</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:pycon-italia-2018/heroku-come-deployare-unapp-django-in-10-minuti.html</guid><category>paas</category><category>continuous-integration</category><category>github</category><category>continuous-delivery</category><category>Python</category><category>pipeline</category><category>django</category><category>heroku</category><category>git</category><category>deployment</category><category>web development</category></item><item><title>How to use Web-Sockets in Python</title><link>https://pyvideo.org/pycon-italia-2018/how-to-use-web-sockets-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern web-apps require bi-directional communication, reacting not only
to user actions but also to server events. This can be achieved
elegantly using Web Sockets, a protocol standardized by W3C to be a
default tool for full- duplex connections on the Web.&lt;/p&gt;
&lt;p&gt;Although most of web-frameworks do not support Web Socket integration
out of the box, Python has multiple options available making it a piece
of cake. This talk showcases running Web Sockets with Python web-apps,
starting from situations that can make a good use of it, and followed by
an implementation with most practical frameworks: Tornado and Django
Channels. We will explore a similar style but different underlying
technologies of both, and finish with a live demo.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Caceres</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:pycon-italia-2018/how-to-use-web-sockets-in-python.html</guid><category>tornado</category><category>javascript</category><category>websockets</category><category>web-applications</category><category>web development</category><category>asyncio</category></item><item><title>Snakes on the web</title><link>https://pyvideo.org/pycon-india-2012/snakes-on-the-web.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyCon India 2012 Final Day Opening Keynote&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Kaplan-Moss</dc:creator><pubDate>Sun, 30 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-30:pycon-india-2012/snakes-on-the-web.html</guid><category>keynote</category><category>web development</category></item><item><title>Why I still develop synchronous web in the asyncIO era</title><link>https://pyvideo.org/pycon-italia-2017/why-i-still-develop-synchronous-web-in-the-asyncio-era.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since python 3.4 the introduction of the asyncIO module produced a new
way of building web applications and tons of new frameworks. With
asyncIO we take advantage of large throughput over the network, but is
it really everything about web development?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giovanni Barillari</dc:creator><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-09:pycon-italia-2017/why-i-still-develop-synchronous-web-in-the-asyncio-era.html</guid><category>web</category><category>asyncio</category><category>web-development</category><category>backend</category></item><item><title>Digital Analytics Data Aggregation: un case study dal mondo reale utilizzando SQL, NoSQL e Pandas</title><link>https://pyvideo.org/pycon-italia-2017/digital-analytics-data-aggregation-un-case-study-dal-mondo-reale-utilizzando-sql-nosql-e-pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I clienti enterprise si trovano sempre più spesso ad avere difficoltà
nel recuperare informazioni essenziali per capire nel complesso dove il
brand sta funzionando e dove invece serve un intervento tempestivo,
perchè sono inondati di dati di dettaglio che spesso non sono facilmente
aggregabili e visualizzabili insieme con frequenza giornaliera.&lt;/p&gt;
&lt;p&gt;Per rispondere a questa esigenza, in azienda, nel nostro reparto R&amp;amp;D,
abbiamo sviluppato una dashboard che permette a clienti con diversi
brand e properties (siti) di aggregare i principali KPI da monitorare
(sia KPI standard che KPI personalizzati). I KPI sono i key performance
indicators, ovvero metriche che aiutano a valutare le performance).&lt;/p&gt;
&lt;p&gt;Ma i dati da visualizzare e aggregare, provenienti da diverse fonti
(Google Analytics, Adobe Analytics, tools SEO), hanno strutture diverse
e non è possibile a priori prevedere quali sono le strutture
disponibili.&lt;/p&gt;
&lt;p&gt;Perciò, in questo talk vedremo insieme come abbiamo gestito questo caso
reale attraverso un mix di tecnologie SQL (MySQL attraverso Django) e
NoSQL (MongoDb), utilizzando i dataframe di Pandas come layer intermedio
attraverso il quale lavorare il dato velocemente.&lt;/p&gt;
&lt;p&gt;La soluzione realizzata ci ha permesso di integrare rapidamente nuove
fonti e nuovi KPI, e di gestire volumi elevati di dati (attualmente 200+
siti contemporaneamente) con ottime performance.&lt;/p&gt;
&lt;p&gt;Vedremo poi (se rimane tempo) come questi dati vengono forniti
attraverso API Rest (grazie a Django Rest Framework) e consumati
attraverso AngularJS sul client.&lt;/p&gt;
&lt;p&gt;Vorremmo infine coinvolgervi chiedendovi come avreste gestito questa
difficoltà - non è assolutamente detto che la nostra soluzione sia per
forza quella ottimale!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alessandro Pelliciari</dc:creator><pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-08:pycon-italia-2017/digital-analytics-data-aggregation-un-case-study-dal-mondo-reale-utilizzando-sql-nosql-e-pandas.html</guid><category>django-rest-framework</category><category>mongodb</category><category>django</category><category>API Design</category><category>web-development</category><category>angularjs</category><category>mysql</category><category>google-analytics</category><category>pandas</category></item><item><title>Analisi dati e grafici con Genropy e Pandas</title><link>https://pyvideo.org/pycon-italia-2017/analisi-dati-e-grafici-con-genropy-e-pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genropy è un framework per la creazione di Single Page Applications che
offre ad utenti e sviluppatori un ambiente di lavoro molto comodo per il
caricamento e la gestione dei dati. In questo talk parleremo degli
strumenti messi a disposizione per l’analisi dei dati e la
rappresentazione grafica, tabellare e in dashboard. Parleremo in
particolare dell’integrazione con Pandas e di come sia facile anche per
un utente non particolarmente esperto generare pivot table, e creare
colonne calcolate e mostrare i risultati come grafici.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Francesco Porcari</dc:creator><pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-07:pycon-italia-2017/analisi-dati-e-grafici-con-genropy-e-pandas.html</guid><category>genropy</category><category>webapp</category><category>pandas</category><category>web-development</category><category>graph</category></item><item><title>Genropy: 10 anni di sviluppo di un framework italiano</title><link>https://pyvideo.org/pycon-italia-2017/genropy-10-anni-di-sviluppo-di-un-framework-italiano.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genropy è un framework per la creazione di Single Page Applications che
consente allo sviluppatore di scrivere applicazioni complesse in tempi
brevissimi. Lo scopo del framework è di mettere a disposizione un
potente costruttore di GUI web, un ORM molto facile, veloce ed intivo ed
una serie di component che rendono possibile costruire la propria
applicazione in poche righe di codice. A questo si aggiungono tools di
amministrazione per la gestione di permessi, grafici, gestione del
workflow, gestore di stampe e molti altri che fanno di Genropy
un’ambiente usabile immediatamente in produzione anche in situazioni
complesse e critiche.&lt;/p&gt;
&lt;p&gt;Abbiamo cominciato a scrivere Genropy nel 2005 e durante il primo Pycon
qui a Firenze nel 2007, abbiamo ne abbiamo mostrato la primissima
versione. Da allora, ogni edizione di Pycon è stata l’occasione per
presentare le nuove features e cercare di diffondere la copnoscenza di
questo framework . A distanza di 10 anni possiamo dire che esiste una
minuscola ma molto attiva community che utilizza Genropy come strumento
quotidiano per scrivere le proprie applicazioni web.&lt;/p&gt;
&lt;p&gt;In questo talk vorremmo raccontarvi questa avventura, e darvi modo di
conoscere meglio Genropy e di capire se può essere anche per voi il
vostro nuovo modo di scriverre applicazioni web.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giovanni Porcari</dc:creator><pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-07:pycon-italia-2017/genropy-10-anni-di-sviluppo-di-un-framework-italiano.html</guid><category>community</category><category>genropy</category><category>gui</category><category>web-development</category><category>business</category></item><item><title>weppy: the web framework for humans</title><link>https://pyvideo.org/pycon-italia-2017/weppy-the-web-framework-for-humans.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why another python web framework? Do we really need to innovate the
Django and Flask scene? Could we? This talk will address all these
questions, introducing weppy: the full stack python web framework
designed with simplicity in mind.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giovanni Barillari</dc:creator><pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-07:pycon-italia-2017/weppy-the-web-framework-for-humans.html</guid><category>web</category><category>orm</category><category>webservices</category><category>sql</category><category>webapp</category><category>web-development</category></item></channel></rss>