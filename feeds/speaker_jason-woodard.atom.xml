<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jason-woodard.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-05-17T00:00:00+00:00</updated><entry><title>Complexity Science</title><link href="https://pyvideo.org/pycon-us-2017/complexity-science.html" rel="alternate"></link><published>2017-05-17T00:00:00+00:00</published><updated>2017-05-17T00:00:00+00:00</updated><author><name>Allen Downey</name></author><id>tag:pyvideo.org,2017-05-17:pycon-us-2017/complexity-science.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Complexity Science is an approach to modeling systems using tools from
discrete mathematics and computer science, including networks, cellular
automata, and agent-based models. &amp;nbsp;It has applications in many areas of
natural and social science.&lt;/p&gt;
&lt;p&gt;Python is a particularly good language for exploring and implementing
models of complex systems. &amp;nbsp;In this tutorial, we present material from
the draft second edition of &lt;em&gt;Think Complexity&lt;/em&gt;, and from a class we
teach at Olin College. &amp;nbsp;We will work with random networks using
NetworkX, with cellular automata using NumPy, and we will implement
simple agent-based models.&lt;/p&gt;
</summary></entry></feed>