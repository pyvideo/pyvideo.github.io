<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 27 Jul 2018 00:00:00 +0000</lastBuildDate><item><title>Exploring the Python AST Ecosystem</title><link>https://pyvideo.org/europython-2018/exploring-the-python-ast-ecosystem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Materials are available at
&lt;a class="reference external" href="https://github.com/hchasestevens/europython-2018"&gt;https://github.com/hchasestevens/europython-2018&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This session will introduce attendees to Python’s rich ecosystem of
abstract syntax tree tooling and libraries, with an emphasis on
practical applications in static analysis and metaprogramming. Attendees
should be fully comfortable with Python syntax and semantics, but
familiarity with the ast module itself will not be necessary.&lt;/p&gt;
&lt;p&gt;The talk will begin with a conceptual overview of ASTs, including a
brief look at Python’s built-in introspection capabilities. It will
introduce tools for AST visualization (astor, showast,
python-ast-explorer), creation (asttools, meta), and transformation to
source code (codegen).&lt;/p&gt;
&lt;p&gt;How the AST can be used for static analysis will be covered; this will
include discussion of Python’s built-in facilities (NodeVisitor) as well
as of the 3rd party tools astsearch, astpath, and bellybutton. The talk
will demonstrate the advantages and limits of these tools in comparison
to other static analysis tooling (pylint, mypy); particular attention
will be paid to how these tools can be incorporated into attendees’
workflows and existing codebases and projects.&lt;/p&gt;
&lt;p&gt;Tooling for Python AST manipulation and metaprogramming will be the
final topic covered, focusing on the use of the NodeTransformer
built-in. The talk will cover practical applications and examples of
metaprogramming, such as metaprogramming for DSLS (pony, xpyth), runtime
code manipulation (patterns, yield-from), and others (e.g. assertion
rewriting in pytest).&lt;/p&gt;
&lt;p&gt;While the talk will touch only briefly on each of the applications
discussed, by the end of the session attendees should have a firm grasp
of the kinds of problems the AST can be used to solve, what existing AST
tooling can accomplish, and what resources are available for the
development of their own AST tools.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chase Stevens</dc:creator><pubDate>Fri, 27 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-27:europython-2018/exploring-the-python-ast-ecosystem.html</guid></item></channel></rss>