<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_twitter.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-08-24T00:00:00+00:00</updated><entry><title>Using Python, Django, and ruthlessness to protect people from social media harassment.</title><link href="https://pyvideo.org/kiwi-pycon-2019/using-python-django-and-ruthlessness-to-protect-people-from-social-media-harassment.html" rel="alternate"></link><published>2019-08-24T00:00:00+00:00</published><updated>2019-08-24T00:00:00+00:00</updated><author><name>Tom Eastman</name></author><id>tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/using-python-django-and-ruthlessness-to-protect-people-from-social-media-harassment.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I present 'secateur', a tool for Twitter users to protect themselves from some forms of online harassment. I discuss using Python and Django to create tools that integrate with Twitter, use its APIs, and block lots of people (LOTS of people).&lt;/p&gt;
</summary><category term="twitter"></category><category term="APIs"></category><category term="secateur"></category><category term="django"></category></entry><entry><title>Using Twitter's Breakout Detection Package</title><link href="https://pyvideo.org/pydata-chicago-2016/using-twitters-breakout-detection-package.html" rel="alternate"></link><published>2016-08-28T00:00:00+00:00</published><updated>2016-08-28T00:00:00+00:00</updated><author><name>Eric Bunch</name></author><id>tag:pyvideo.org,2016-08-28:pydata-chicago-2016/using-twitters-breakout-detection-package.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
</summary><category term="twitter"></category></entry><entry><title>Linguistics of Twitter</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--linguistics-of-twitter.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Michael D. Healy</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--linguistics-of-twitter.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Dialectical changes in America are influencing expression online. This
talk will discuss a current project which is using the Natural Language
Toolkit to develop up to date reference materials to measure and monitor
online natural language.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Contrary to expectations, the prevalence of television did not cause
every American to speak in a common standard dialect. Rather, smaller
sub-regional dialects are merging into stronger regional dialects with
the largest change in spoken English since the 1750's taking place in
the Northern Cities Vowel Shift.&lt;/p&gt;
&lt;p&gt;Social Media is widely considered a conversational media, users often
leaning on their dialect which to express themselves.&lt;/p&gt;
&lt;p&gt;Taking a recent tweet for example:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'_andBeautyKills: – after tonight, don’t leave your boy roun’ me, umma #true playa fareal.'
&lt;/pre&gt;
&lt;p&gt;This tweet presents a problem for traditional natural language
processing paradigm:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Do they build out an extensive reg ex to solve this?&lt;/li&gt;
&lt;li&gt;Even Worse, do they reject it because of non-Standard English?&lt;/li&gt;
&lt;li&gt;How do they respond such that communication is effective?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Currently under development with Python using the Natural Language
Toolkit are the tools and methodologies to process, understand and
respond to communication that falls outside Standard American English.
This talk will focus on the status of existing tools, where development
stands, challenges for traditional tools and potential opportunities for
exploration.&lt;/p&gt;
&lt;p&gt;While limited to American English, any participant who is studying
natural language processing of any language is welcome and sure to
learn. The techniques could be applied to languages around the world for
which the motivated programmer is knowledgeable about.&lt;/p&gt;
</summary><category term="nltk"></category><category term="pycon"></category><category term="pycon2011"></category><category term="twitter"></category></entry></feed>