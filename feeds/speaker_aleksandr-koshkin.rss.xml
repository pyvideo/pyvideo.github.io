<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 02 Jun 2018 00:00:00 +0000</lastBuildDate><item><title>Inside a PyPy JIT: is that even legal?</title><link>https://pyvideo.org/pycon-apac-2018/inside-a-pypy-jit-is-that-even-legal.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This time we are going to dig down to the RPython tool chain core - JIT
compiler generator. We will examine the very essence of the approach
taken by the PyPy team - that is how to quit writing JITted VMs by hand,
stop worrying and have fun again.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aleksandr Koshkin</dc:creator><pubDate>Sat, 02 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-02:pycon-apac-2018/inside-a-pypy-jit-is-that-even-legal.html</guid></item><item><title>Python on the edge of a razor: PyPy project</title><link>https://pyvideo.org/pycon-russia-2017/python-on-the-edge-of-a-razor-pypy-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This time we are going to discuss performance and some technical details of cutting edge implementation of Python VM called PyPy. Write an interpreted language in another interpreted language? Whaaaaaaaa? How this is a good idea?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aleksandr Koshkin</dc:creator><pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-17:pycon-russia-2017/python-on-the-edge-of-a-razor-pypy-project.html</guid></item><item><title>Знай и люби свой CPython во имя луны и великой справедливости</title><link>https://pyvideo.org/pycon-russia-2016/znai-i-liubi-svoi-cpython-vo-imia-luny-i-velikoi-spravedlivosti.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Один из основополагающих способов узнавать новое — выводить старое за границы применимости. Достигая противоречия или получая абсурдные результаты, можно получить представление о более общих концепциях, что позволяет детализировать уже понятое и прикоснуться к неизвестному. В этот раз нечто подобное я постараюсь сделать с основной реализацией ЯП Python — CPython. Мы рассмотрим блоки, из которых сделан интерпретатор, поймем, как они взаимодействуют, вмешаемся в их работу на низком уровне и поймем, какой профит и проблемы из этого можно получить.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aleksandr Koshkin</dc:creator><pubDate>Mon, 04 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-04:pycon-russia-2016/znai-i-liubi-svoi-cpython-vo-imia-luny-i-velikoi-spravedlivosti.html</guid></item></channel></rss>