<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 12 Jun 2017 00:00:00 +0000</lastBuildDate><item><title>Text Parsing the Case for Monads</title><link>https://pyvideo.org/pycon-israel-2017/text-parsing-the-case-for-monads.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pyparsing is a mature, small and useful text parsing library that let's you define a grammar easily and succinctly. Amazingly, pyparsing is using a unique design pattern called &amp;quot;Combinators&amp;quot; which is leveraged even further by monadic syntax from functional programming, while feeling Pythonic and clean. We will study this unique approach and uncover its secrets.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yoav Luft</dc:creator><pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-12:pycon-israel-2017/text-parsing-the-case-for-monads.html</guid><category>pyparsing</category></item><item><title>PLY and PyParsing (#93)</title><link>https://pyvideo.org/pycon-us-2010/pycon-2010--ply-and-pyparsing---93.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PLY and PyParsing&lt;/p&gt;
&lt;p&gt;Presented by Andrew Dalke&lt;/p&gt;
&lt;p&gt;Got a text parsing problem? In most cases using string manipulation and
regular expressions will solve it for you. But when the input is
complex, try reaching for a parsing system to help out.&lt;/p&gt;
&lt;p&gt;The two most popular in Python are PLY and PyParsing. PLY follows the
lex/yacc tradition with a domain specific language to describe the
tokens and grammar. It was built with both error diagnostics and
performance in mind. PyParsing is a recursive descent parser which
expresses the format as a Python data structure. It make no distinction
between lexer and grammar and has a uniform callback system which makes
certain types of data extraction very easy.&lt;/p&gt;
&lt;p&gt;In my talk I'll show the basics of how to use both systems for several
different format parsing tasks, of different complexity. This will let
you see how to use the parsers and understand more of the tradeoffs
between complexity, readability, error handling, and performance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Dalke</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--ply-and-pyparsing---93.html</guid><category>ply</category><category>pycon</category><category>pycon2010</category><category>pyparsing</category></item><item><title>Friday Afternoon Lightning Talks</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--friday-afternoon-lightning-talks.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Friday afternoon lightning talks&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Friday afternoon lightning talks&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 Paul Smith - Raising money for Japan&lt;/li&gt;
&lt;li&gt;02:24 Jeff Daily - The Global Arrays Parallel Programming Toolkit&lt;/li&gt;
&lt;li&gt;08:30 Matt Harrison - My insecurity problem&lt;/li&gt;
&lt;li&gt;13:10 Pete Fein - Hacking for Freedom&lt;/li&gt;
&lt;li&gt;18:40 Robert Brewer - logging.statistics&lt;/li&gt;
&lt;li&gt;27:30 Nathan Nichols - Lessons Learned Writing DSLs for Automated
Content Generation&lt;/li&gt;
&lt;li&gt;33:15 Giles Thomas - Why Resolver switched from IronPython to CPython
japan, qtile, pyparsing, logging.statistics, resolver, cpython,
ironpython&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Smith</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--friday-afternoon-lightning-talks.html</guid><category>lightning talks</category><category>cpython</category><category>ironpython</category><category>japan</category><category>logging.statistics</category><category>pycon</category><category>pycon2011</category><category>pyparsing</category><category>qtile</category></item></channel></rss>