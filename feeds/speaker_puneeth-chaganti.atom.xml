<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_puneeth-chaganti.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-09-29T00:00:00+00:00</updated><entry><title>Enaml: Pythonic, toolkit independent, declarative UIs - Part 2</title><link href="https://pyvideo.org/pycon-india-2012/enaml-pythonic-toolkit-independent-declarative-uis-part-2.html" rel="alternate"></link><published>2012-09-29T00:00:00+00:00</published><updated>2012-09-29T00:00:00+00:00</updated><author><name>Puneeth Chaganti</name></author><id>tag:pyvideo.org,2012-09-29:pycon-india-2012/enaml-pythonic-toolkit-independent-declarative-uis-part-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Enaml is a DSL for writing platform independent, declarative UIs. In a model-view-controller world, Enaml makes it very easy to develop the view and controller. Typically, the model is built with Traits, but it's model is framework agnostic and provides hooks for using custom model frameworks.
The DSL is a strict superset of Python and provides a simple Pythonic syntax for declaring a UI that binds and reacts to changes in the models. Enaml is dynamically executed and it lets you bind to arbitrary Python expressions. It uses a constraint based layout system which makes it possible to have layouts that are not typically possible with traditional UI toolkits. Enaml also supports asynchronous UIs which allow one to have multiple UIs connecting to the same model running in the same process or out of process. This, in theory, opens up the possibility for a web-based UI to be used to control a model.&lt;/p&gt;
</summary><category term="enaml"></category><category term="dsl"></category></entry><entry><title>Enaml: Pythonic, toolkit independent, declarative UIs - Part 3</title><link href="https://pyvideo.org/pycon-india-2012/enaml-pythonic-toolkit-independent-declarative-uis-part-3.html" rel="alternate"></link><published>2012-09-29T00:00:00+00:00</published><updated>2012-09-29T00:00:00+00:00</updated><author><name>Puneeth Chaganti</name></author><id>tag:pyvideo.org,2012-09-29:pycon-india-2012/enaml-pythonic-toolkit-independent-declarative-uis-part-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Enaml is a DSL for writing platform independent, declarative UIs. In a model-view-controller world, Enaml makes it very easy to develop the view and controller. Typically, the model is built with Traits, but it's model is framework agnostic and provides hooks for using custom model frameworks.
The DSL is a strict superset of Python and provides a simple Pythonic syntax for declaring a UI that binds and reacts to changes in the models. Enaml is dynamically executed and it lets you bind to arbitrary Python expressions. It uses a constraint based layout system which makes it possible to have layouts that are not typically possible with traditional UI toolkits. Enaml also supports asynchronous UIs which allow one to have multiple UIs connecting to the same model running in the same process or out of process. This, in theory, opens up the possibility for a web-based UI to be used to control a model.&lt;/p&gt;
</summary><category term="enaml"></category><category term="dsl"></category></entry></feed>