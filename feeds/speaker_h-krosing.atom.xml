<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_h-krosing.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-07-04T00:00:00+00:00</updated><entry><title>PostSQL - using PostgreSQL as a better NoSQL</title><link href="https://pyvideo.org/europython-2012/postsql-using-postgresql-as-a-better-nosql.html" rel="alternate"></link><published>2012-07-04T00:00:00+00:00</published><updated>2012-07-04T00:00:00+00:00</updated><author><name>H Krosing</name></author><id>tag:pyvideo.org,2012-07-04:europython-2012/postsql-using-postgresql-as-a-better-nosql.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2012] H Krosing - 3 JULY 2012 in &amp;quot;Track Ravioli&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A short overview how PostgreSQL can be used for tasks that are currently
often delegated to heterogeneous bunch of data storage solutions
referred to by common name NoSQL. Covered topics from traditional NoSQL
area are: developer friendlyness, even for sloppy developers scalability
easy extensibility and maintainability And from SQL part partial ACID
(Atomicity, Consistency, Isolation, Durability) , general BASE
(basically available, soft state, eventually consistent) business rule
checking in database, hard to overlook even in case of multiple
applications using the same data&lt;/p&gt;
</summary></entry></feed>