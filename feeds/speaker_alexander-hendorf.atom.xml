<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_alexander-hendorf.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-10T00:00:00+00:00</updated><entry><title>Speech Synthesis with Tacotron2 and PyTorch</title><link href="https://pyvideo.org/pydata-amsterdam-2019/speech-synthesis-with-tacotron2-and-pytorch.html" rel="alternate"></link><published>2019-05-10T00:00:00+00:00</published><updated>2019-05-10T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2019-05-10:pydata-amsterdam-2019/speech-synthesis-with-tacotron2-and-pytorch.html</id><summary type="html"></summary><category term="pydata"></category></entry><entry><title>Deep Learning with PyTorch for Fun and Profit (Part III / Italian Edition: Divina Commedia)</title><link href="https://pyvideo.org/pycon-italia-2019/deep-learning-with-pytorch-for-fun-and-profit-part-iii-italian-edition-divina-commedia.html" rel="alternate"></link><published>2019-05-03T00:00:00+00:00</published><updated>2019-05-03T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2019-05-03:pycon-italia-2019/deep-learning-with-pytorch-for-fun-and-profit-part-iii-italian-edition-divina-commedia.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are all these great articles and blog posts about Deep Learning
describing all that awesome stuff. - Is it all that easy? Let’s check!&lt;/p&gt;
&lt;p&gt;We’ll look into: style transfer (making a picture look like painting),
speech generation (like Siri or Alexa) and text generation (writing a
story). In this talk I’ll describe the whole journey: A fun ride from
the idea to the very end including all the struggles, failures and
successes.&lt;/p&gt;
&lt;p&gt;This is an ongoing talk on how far we can get creating a full &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Radio_drama"&gt;radio
drama (Hörspiel)&lt;/a&gt; with
deep learning and the resources required.&lt;/p&gt;
&lt;p&gt;Steps, we’ll cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The data challenge: get the data ready&lt;/li&gt;
&lt;li&gt;Creating a character-level language models with an Recurrent Neural
Network&lt;/li&gt;
&lt;li&gt;Creating a text generator&lt;/li&gt;
&lt;li&gt;Creating artwork&lt;/li&gt;
&lt;li&gt;Synthesising speech&lt;/li&gt;
&lt;li&gt;Making it sound like a real person&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this special PyCon X edition we will also try to recreate text in the
style of Dante’ Divina Commedia.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1687"&gt;https://python.it/feedback-1687&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="deep learning"></category><category term="Pytorch"></category><category term="art"></category><category term="Artificial Intelligence"></category><category term="nlp"></category></entry><entry><title>Deep Learning with PyTorch for more Fun and Profit (Part 2.5)</title><link href="https://pyvideo.org/pyparis-2018/deep-learning-with-pytorch-for-more-fun-and-profit-part-25.html" rel="alternate"></link><published>2018-11-14T00:00:00+00:00</published><updated>2018-11-14T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2018-11-14:pyparis-2018/deep-learning-with-pytorch-for-more-fun-and-profit-part-25.html</id><summary type="html"></summary></entry><entry><title>Databases for Data Science</title><link href="https://pyvideo.org/pycon-italia-2018/databases-for-data-science.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/databases-for-data-science.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I’ll present the usefulness of databases for data science
projects.&lt;/p&gt;
&lt;p&gt;Databases have been around for decades and were highly optimised for
data aggregations during that time. Not only &lt;em&gt;Big data&lt;/em&gt; has changed the
landscape of databases massively in the past years - we nowadays can
find many &lt;em&gt;Open Source&lt;/em&gt; projects among the most popular dbs.&lt;/p&gt;
&lt;p&gt;After this talk you will be enabled to decide if a database can make
your work more efficient and which direction to look to.&lt;/p&gt;
&lt;p&gt;Outline:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;A quick recap on database history, &lt;em&gt;it all starts in Florence - where
else…&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;What is a database? What’s a data store? data lake?…&lt;/li&gt;
&lt;li&gt;Relational SQL systems and their benefits for DS&lt;/li&gt;
&lt;li&gt;NoSQL systems and their benefits for DS&lt;/li&gt;
&lt;li&gt;How to chose the db fitting your needs.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 17:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="data-structures"></category><category term="Deep-Learning"></category><category term="data-science"></category><category term="database"></category></entry><entry><title>Deep Learning with PyTorch for Fun and Profit</title><link href="https://pyvideo.org/europython-2018/deep-learning-with-pytorch-for-fun-and-profit.html" rel="alternate"></link><published>2018-07-26T00:00:00+00:00</published><updated>2018-07-26T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2018-07-26:europython-2018/deep-learning-with-pytorch-for-fun-and-profit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are all these great blog posts about Deep Learning describing all
that awesome stuff. - Is it all that easy? Let’s check!&lt;/p&gt;
&lt;p&gt;We’ll look into: style transfer (making a picture look like painting),
speech generation (like Siri or Alexa) and text generation (writing a
story). In this talk I’ll describe the whole journey: A fun ride from
the idea to the very end including all the struggles, failures and
successes.&lt;/p&gt;
&lt;p&gt;Steps, we’ll cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The data challenge: get the data ready&lt;/li&gt;
&lt;li&gt;Have it run on your Mac with PyTorch and an eGPU&lt;/li&gt;
&lt;li&gt;Creating a character-level language models with an Recurrent Neural
Network&lt;/li&gt;
&lt;li&gt;Creating a text generator&lt;/li&gt;
&lt;li&gt;Creating artwork&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>How I Made My Computer Write it's First Short Story</title><link href="https://pyvideo.org/pydata-berlin-2018/how-i-made-my-computer-write-its-first-short-story.html" rel="alternate"></link><published>2018-07-07T00:00:00+00:00</published><updated>2018-07-07T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2018-07-07:pydata-berlin-2018/how-i-made-my-computer-write-its-first-short-story.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Imagine that we have a large body of text, a series of sequels that has
been going on for decades. Using NLP and Deep Learning - can we train
our computer to write a short story by itself? Can we hint the plot but
let the machine fabricate the rest? In this talk I'll describe the whole
journey: A fun ride from the idea to the very end including all the
struggles, failures and successes.&lt;/p&gt;
</summary></entry><entry><title>Effective Data Analysis with Pandas Indexes</title><link href="https://pyvideo.org/pycon-de-2017/effective-data-analysis-with-pandas-indexes.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/effective-data-analysis-with-pandas-indexes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is the Swiss-Multipurpose Knife for Data Analysis in Python. In this talk we will look deeper into how to gain productivity utilizing Pandas powerful indexing and make advanced analytics a piece of cake. Pandas features multiple index types. This talk will give you a deep insight into the Pandas indexes and showcase the handiness of special Indexes as the TimeSeriesIndex.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="machine learning"></category><category term="analytics"></category><category term="data-science"></category><category term="business analytics"></category></entry><entry><title>Efficient Data Mangling with Pandas Indexes</title><link href="https://pyvideo.org/pycon-uk-2017/efficient-data-mangling-with-pandas-indexes.html" rel="alternate"></link><published>2017-10-28T12:00:00+01:00</published><updated>2017-10-28T12:00:00+01:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2017-10-28:pycon-uk-2017/efficient-data-mangling-with-pandas-indexes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is the Swiss-Multipurpose Knife for Data Analysis in Python. In this talk we will look deeper into how to gain productivity utilising Pandas powerful indexing and make advanced analytics a piece of cake.&lt;/p&gt;
&lt;p&gt;We will cover:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Pandas indexing recap&lt;/li&gt;
&lt;li&gt;Index Types&lt;/li&gt;
&lt;li&gt;Time-Series Index and resampling&lt;/li&gt;
&lt;li&gt;Pandas Multi-Indexing&lt;/li&gt;
&lt;li&gt;Categorical&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</summary></entry><entry><title>Introduction to Data-Analysis with Pandas / Time Series Analysis with Pandas</title><link href="https://pyvideo.org/pycon-italia-2017/introduction-to-data-analysis-with-pandas-time-series-analysis-with-pandas.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/introduction-to-data-analysis-with-pandas-time-series-analysis-with-pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is the &lt;em&gt;Swiss-Multipurpose Knife&lt;/em&gt; for Data Analysis in Python.
With Pandas dealing with data-analysis is easy and simple but there are
some things you need to get your head around first as Data-Frames and
Data-Series.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;first part&lt;/strong&gt; of talk with provide an &lt;strong&gt;introduction to Pandas&lt;/strong&gt;
for beginners, while the &lt;strong&gt;second part&lt;/strong&gt; will focus on &lt;strong&gt;Time Series
Analysis&lt;/strong&gt; with Pandas.&lt;/p&gt;
&lt;p&gt;part &lt;strong&gt;one&lt;/strong&gt; (~40&amp;quot;) &lt;em&gt;Introduction to Pandas&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;reading and writing data across multiple formats (CSV, Excel, JSON,
SQL, HTML,…)&lt;/li&gt;
&lt;li&gt;statistical data analysis and aggregation.&lt;/li&gt;
&lt;li&gt;work with built-in data visualisation&lt;/li&gt;
&lt;li&gt;inner-mechanics of Pandas: Data-Frames, Data-Series &amp;amp; Numpy.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;part &lt;strong&gt;two&lt;/strong&gt; (~20&amp;quot;) &lt;em&gt;Time Series Analysis&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;how to analyse periodical data with pandas&lt;/li&gt;
&lt;li&gt;how to mangle, reshape and pivot&lt;/li&gt;
&lt;li&gt;caveats when working with timed data&lt;/li&gt;
&lt;li&gt;visualize your data on the fly&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;bonus (if we have time left)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;gain insights with statsmodels (e.g. seasonality)&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="data-visualization"></category><category term="computer-science"></category><category term="statistics"></category><category term="data-analysis"></category></entry><entry><title>Lightning talks Friday</title><link href="https://pyvideo.org/pycon-cz-2017/lightning-talks-friday.html" rel="alternate"></link><published>2017-06-09T00:00:00+00:00</published><updated>2017-06-09T00:00:00+00:00</updated><author><name>Míla Votradovec</name></author><id>tag:pyvideo.org,2017-06-09:pycon-cz-2017/lightning-talks-friday.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks Friday&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Introduction to data analytics with Pandas</title><link href="https://pyvideo.org/pycon-cz-2017/introduction-to-data-analytics-with-pandas.html" rel="alternate"></link><published>2017-06-08T00:00:00+00:00</published><updated>2017-06-08T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2017-06-08:pycon-cz-2017/introduction-to-data-analytics-with-pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is the Swiss-Multipurpose Knife for Data Analysis in Python.
With Pandas dealing with data-analysis is easy and simple but there
are some things you need to get your head around first as Data-Frames
and Data-Series.&lt;/p&gt;
&lt;p&gt;The talk with provide an introduction to Pandas for beginners and
cover reading and writing data across multiple formats (CSV, Excel,
JSON, SQL, HTML,…) statistical data analysis and aggregation. work
with built-in data visualisation inner-mechanics of Pandas:
Data-Frames, Data-Series &amp;amp; Numpy. how to work effectively with Pandas&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Alexander's professional carrer was always about digitalisation:
starting from vinyl records in the nineties to to advanced data
analytics nowadays.&lt;/p&gt;
&lt;p&gt;He's program chair of Europe's main Python conference EuroPython, one
of the 25 mongoDB masters and a regular contributor to the tech
community. He has spoken at many international conferences in Silicon
Valley, New York, London, Florence or Kiew.&lt;/p&gt;
&lt;p&gt;He's working at Königsweg a consultancy for start-ups and the
industry. Königsweg enhances your entrepreneurial impact through the
development and implementation of high-performing transformation
strategies across all business divisions.&lt;/p&gt;
</summary></entry><entry><title>Neat Analytics with Pandas Indexes</title><link href="https://pyvideo.org/pyparis-2017/neat-analytics-with-pandas-indexes.html" rel="alternate"></link><published>2017-06-12T00:00:00+00:00</published><updated>2017-06-12T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2017-06-12:pyparis-2017/neat-analytics-with-pandas-indexes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is the Swiss-Multipurpose Knife for Data Analysis in Python. In
this talk we will look deeper into how to gain productivity utilising
Pandas powerful indexing and make advanced analytics a piece of cake.&lt;/p&gt;
</summary></entry><entry><title>Introduction to Data-Analysis with Pandas</title><link href="https://pyvideo.org/pydata-berlin-2017/introduction-to-data-analysis-with-pandas.html" rel="alternate"></link><published>2017-06-30T00:00:00+00:00</published><updated>2017-06-30T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2017-06-30:pydata-berlin-2017/introduction-to-data-analysis-with-pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is the Swiss-Multipurpose Knife for Data Analysis in Python. With Pandas dealing with data-analysis is easy and simple but there are some things you need to get your head around first as Data-Frames and Data-Series. The tutorial provides a compact introduction to Pandas for beginners for I/O, data visualisation, statistical data analysis and aggregation within Jupiter notebooks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pandas is the Swiss-Multipurpose Knife for Data Analysis in Python. With Pandas dealing with data-analysis is easy and simple but there are some things you need to get your head around first as Data-Frames and Data-Series.&lt;/p&gt;
&lt;p&gt;The tutorial provides a compact introduction to Pandas for beginners:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;reading and writing data across multiple formats (CSV, Excel, JSON, SQL, HTML,…)&lt;/li&gt;
&lt;li&gt;data visualisation&lt;/li&gt;
&lt;li&gt;statistical data analysis and aggregation.&lt;/li&gt;
&lt;li&gt;work with built-in data visualisation&lt;/li&gt;
&lt;li&gt;inner-mechanics of Pandas: Data-Frames, Data-Series &amp;amp; Numpy.&lt;/li&gt;
&lt;li&gt;working and making the most of indexes.&lt;/li&gt;
&lt;li&gt;how to mangle, reshape and pivot&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The tutorial will be provided as Jupiter notebooks.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Neat Analytics with Pandas Indexes</title><link href="https://pyvideo.org/europython-2017/neat-analytics-with-pandas-indexes.html" rel="alternate"></link><published>2017-07-12T00:00:00+00:00</published><updated>2017-07-12T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2017-07-12:europython-2017/neat-analytics-with-pandas-indexes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is the Swiss-Multipurpose Knife for Data Analysis in Python.
In this talk we will look deeper into how to gain productivity
utilising Pandas powerful indexing and make advanced analytics
a piece of cake.&lt;/p&gt;
&lt;p&gt;We will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Pandas indexing recap&lt;/li&gt;
&lt;li&gt;Index Types&lt;/li&gt;
&lt;li&gt;Time-Series Index and resampling&lt;/li&gt;
&lt;li&gt;Pandas Multi-Indexing&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Introduction to Time Series Analysis with Pandas</title><link href="https://pyvideo.org/pycon-de-2016/introduction-to-time-series-analysis-with-pandas.html" rel="alternate"></link><published>2016-10-29T00:00:00+00:00</published><updated>2016-10-29T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2016-10-29:pycon-de-2016/introduction-to-time-series-analysis-with-pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most data is allocated to a period or to some point in time. We can gain a lot of insight by analysing what happened when. The better the quality and accuracy of our data, the better our predictions can become.
Unfortunately the data we have to deal with is often aggregated for example on a monthly basis, but not all months are the same, they may have 28 days, 31 days, have four or five weekends,… It’s made fit to our calendar that was made fit to deal with the earth surrounding the sun, not to please Data Scientists.
Dealing with periodical data can be a challenge.
Pandas is a powerful framework for working with time series data and can make your life a lot easier.
This talks will feature:
how to analyse periodical data with pandasread and write data in various formatshow to mangle, reshape and pivotgain insights with statsmodels (e.g. seasonality)caveats when working with timed datavisualize your data on the fly&lt;/p&gt;
</summary></entry><entry><title>Data Mangling with mongoDB the right way</title><link href="https://pyvideo.org/pycon-italia-2016/data-mangling-with-mongodb-the-right-way.html" rel="alternate"></link><published>2016-06-20T00:00:00+00:00</published><updated>2016-06-20T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2016-06-20:pycon-italia-2016/data-mangling-with-mongodb-the-right-way.html</id><summary type="html"></summary></entry><entry><title>Time Travel and Time Series</title><link href="https://pyvideo.org/pycon-italia-2016/time-travel-and-time-series.html" rel="alternate"></link><published>2016-06-20T00:00:00+00:00</published><updated>2016-06-20T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2016-06-20:pycon-italia-2016/time-travel-and-time-series.html</id><summary type="html"></summary></entry><entry><title>Data Analysis and Map-Reduce with mongoDB and pymongo</title><link href="https://pyvideo.org/europython-2015/data-analysis-and-map-reduce-with-mongodb-and-pymongo.html" rel="alternate"></link><published>2015-08-04T00:00:00+00:00</published><updated>2015-08-04T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2015-08-04:europython-2015/data-analysis-and-map-reduce-with-mongodb-and-pymongo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Alexander Hendorf - Data Analysis and Map-Reduce with mongoDB and pymongo
[EuroPython 2015]
[22 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;The MongoDB aggregation framework provides a means to calculate
aggregated values without having to use map-reduce. While map-reduce
is powerful, it is often more difficult than necessary for many simple
aggregation tasks, such as totaling or averaging field values.&lt;/p&gt;
&lt;p&gt;See how to use the build-in data-aggregation-pipelines for averages,
summation, grouping, reshaping. See how to work with documents, sub-
documents, grouping by year, month, day, etc.&lt;/p&gt;
&lt;p&gt;This talk will give many (live) examples how to make the most of your
data with pymongo with a few lines of code.&lt;/p&gt;
&lt;p&gt;added 28/07/15:
iPython notebook &amp;amp; sample data can be found in [this git][1]&lt;/p&gt;
&lt;p&gt;[1]: &lt;a class="reference external" href="https://bitbucket.org/alanderex/ep2015-dataanalysis-with-mongodb"&gt;https://bitbucket.org/alanderex/ep2015-dataanalysis-with-mongodb&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Game Theory to the Rescue When Hard Decisions Are to Be Made</title><link href="https://pyvideo.org/europython-2016/game-theory-to-the-rescue-when-hard-decisions-are-to-be-made.html" rel="alternate"></link><published>2016-08-01T00:00:00+00:00</published><updated>2016-08-01T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2016-08-01:europython-2016/game-theory-to-the-rescue-when-hard-decisions-are-to-be-made.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Alexander Hendorf - Game Theory to the Rescue When Hard Decisions Are to Be Made
[EuroPython 2016]
[20 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/game-theory-to-the-rescue-when-hard-decisions-are-to-be-made"&gt;https://ep2016.europython.eu//conference/talks/game-theory-to-the-rescue-when-hard-decisions-are-to-be-made&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Sometimes it's hard to decide when a something is really done or
cannot be improved further.
&lt;strong&gt;Game theory&lt;/strong&gt; can help you to make complicated decisions whenever
you encounter flow problems.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Game theory is &amp;quot;the study of mathematical models of conflict and
cooperation between intelligent rational decision-makers.&amp;quot;&lt;/p&gt;
&lt;p&gt;In our use case we had to match data  for accounting.  The data was
not always clean but we had some extra tools at hand and a complex
system to make good guesses. Nevertheless it was hard to decide when
to give up, some records were just not processable.
Finally we used Game theory to make the decision.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Game_theory"&gt;https://en.wikipedia.org/wiki/Game_theory&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>