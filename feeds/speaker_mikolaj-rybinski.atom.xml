<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_mikolaj-rybinski.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-09-04T00:00:00+00:00</updated><entry><title>High Voltage Lab Common Code Basis library: a uniform user-friendly object-oriented API for a high voltage engineering research.</title><link href="https://pyvideo.org/euroscipy-2019/high-voltage-lab-common-code-basis-library-a-uniform-user-friendly-object-oriented-api-for-a-high-voltage-engineering-research.html" rel="alternate"></link><published>2019-09-04T00:00:00+00:00</published><updated>2019-09-04T00:00:00+00:00</updated><author><name>Mikołaj Rybiński</name></author><id>tag:pyvideo.org,2019-09-04:euroscipy-2019/high-voltage-lab-common-code-basis-library-a-uniform-user-friendly-object-oriented-api-for-a-high-voltage-engineering-research.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;At the heart of ETH High Voltage Lab's (HVL) research are industrial
devices put&lt;/div&gt;
&lt;div class="line"&gt;together into code-automated experiments. It's a zoo of industrial
communication&lt;/div&gt;
&lt;div class="line"&gt;protocols one needs to handle when controlling these devices. HVL
decided to switch from&lt;/div&gt;
&lt;div class="line"&gt;MATLAB to Python as a programming and analysis tool. Python community
provides solutions&lt;/div&gt;
&lt;div class="line"&gt;to majority of technicalities involved in handling multitude of
industrial communication&lt;/div&gt;
&lt;div class="line"&gt;protocols used to control high voltage research experiment devices.
Moreover&lt;/div&gt;
&lt;div class="line"&gt;Python seems to be a more future-proof choice, meeting industry demand
for a more&lt;/div&gt;
&lt;div class="line"&gt;cost-effective and collaborative solution.&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The HVL Common Code Basis library (&lt;tt class="docutils literal"&gt;hvl_ccb&lt;/tt&gt;) provides a uniform
user-friendly&lt;/div&gt;
&lt;div class="line"&gt;object-oriented API as well as implementation for multiple of high
voltage engineering&lt;/div&gt;
&lt;div class="line"&gt;devices and their respective communication protocols. The library
leverages Python's&lt;/div&gt;
&lt;div class="line"&gt;open source community - implementations of specific communication
protocols, but also&lt;/div&gt;
&lt;div class="line"&gt;relies heavily on some of the languages newer features such as typing
hints, dataclasses&lt;/div&gt;
&lt;div class="line"&gt;or enums.&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Python typing hints are used not only for their static type checking
and autocompletion&lt;/div&gt;
&lt;div class="line"&gt;support from IDEs, but also for dynamic type checking of the
communication protocol's&lt;/div&gt;
&lt;div class="line"&gt;and devices' configurations. The configurations themselves are a
customized&lt;/div&gt;
&lt;div class="line"&gt;implementation of Python's 3.7 dataclasses. Configurations properties
rely heavily on&lt;/div&gt;
&lt;div class="line"&gt;Python (advanced) enumerations.&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Currently, the library supports serial port, VISA over TCP, Modbus
TCP, LabJack LJM and&lt;/div&gt;
&lt;div class="line"&gt;OPC UA communication protocols. These protocols are used within code
abstraction of&lt;/div&gt;
&lt;div class="line"&gt;devices such MBW973 SF6 Analyzer / dew point mirror, LabJack (T7-PRO)
device, Schneider&lt;/div&gt;
&lt;div class="line"&gt;Electric ILS2T stepper motor drive, Elektro-Automatik PSI9000 DC power
supply, Rhode &amp;amp;&lt;/div&gt;
&lt;div class="line"&gt;Schwarz RTO 1024 oscilloscope, or the Lab's state-of-the-art Supercube
platform, which&lt;/div&gt;
&lt;div class="line"&gt;encapsulates safety components, the voltage source, as well as other
auxiliary devices.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The library leverages Python richness to provide a uniform user-friendly
API for a zoo of industrial communication protocols used to control high
voltage engineering devices, together with abstraction and
implementations for such devices.&lt;/p&gt;
</summary></entry></feed>