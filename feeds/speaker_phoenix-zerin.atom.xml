<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_phoenix-zerin.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-08-24T00:00:00+00:00</updated><entry><title>Automate Your Integration Tests Using pytest-docker-compose</title><link href="https://pyvideo.org/kiwi-pycon-2019/automate-your-integration-tests-using-pytest-docker-compose.html" rel="alternate"></link><published>2019-08-24T00:00:00+00:00</published><updated>2019-08-24T00:00:00+00:00</updated><author><name>Phoenix Zerin</name></author><id>tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/automate-your-integration-tests-using-pytest-docker-compose.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sometimes unit tests aren't enough, and you need to actually deploy your solution to see how it behaves as a whole. Utilities like docker-compose make it easy to stand up an entire environment, but the actual testing part still has to be done manually... or does it? Learn how to automate your integration tests using pytest-docker-compose today!&lt;/p&gt;
</summary><category term="docker"></category><category term="docker-compose"></category><category term="pytest"></category><category term="testing"></category></entry><entry><title>Demystefying Setuptools Entry Points</title><link href="https://pyvideo.org/kiwi-pycon-2017/demystefying-setuptools-entry-points.html" rel="alternate"></link><published>2017-12-02T14:20:00+13:00</published><updated>2017-12-02T14:20:00+13:00</updated><author><name>Phoenix Zerin</name></author><id>tag:pyvideo.org,2017-12-02:kiwi-pycon-2017/demystefying-setuptools-entry-points.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Entry points are one of the most powerful, yet mysterious, ways to customise the behaviour of Python projects. With just a few lines of code in your &lt;cite&gt;setup.py&lt;/cite&gt; file, you can install command-line applications, inject features into other libraries, create plugins, and more! During this session, we will explore what entry points are, how they work, and how to use them in your Python projects.&lt;/p&gt;
</summary></entry></feed>