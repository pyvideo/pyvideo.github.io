<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_veronica-hanus.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-11-04T00:00:00+00:00</updated><entry><title>To comment or not</title><link href="https://pyvideo.org/pydata-new-york-city-2019/to-comment-or-not.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Veronica Hanus</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/to-comment-or-not.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every programmer has asked themselves ‚Äúhow many comments are too many?‚Äù To the newest programmers, comments may seem magical‚Äìa way of documenting without giving instructions to the computer. But commenting engages the same vulnerability as more advanced challenges (i.e. pair programming &amp;amp; code review) and is likely to pique the insecurity of many programmers (especially the copy-and-paste or tutorial-level programmer)!&lt;/p&gt;
</summary></entry><entry><title>To comment or not?...</title><link href="https://pyvideo.org/djangocon-us-2019/to-comment-or-not.html" rel="alternate"></link><published>2019-09-23T00:00:00+00:00</published><updated>2019-09-23T00:00:00+00:00</updated><author><name>Veronica Hanus</name></author><id>tag:pyvideo.org,2019-09-23:djangocon-us-2019/to-comment-or-not.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon 2019 - To comment or not? A data-driven look at attitudes toward code comments by Veronica Hanus&lt;/p&gt;
&lt;p&gt;How can someone who is just learning find the commenting style that is best for them as they learn, grow, &amp;amp; contribute? I did a survey of programmers &amp;amp; will be sharing what we can do to address comment use in a way that encourages a growth mindset and empowers everyone.&lt;/p&gt;
&lt;p&gt;This talk was presented at: &lt;a class="reference external" href="https://2019.djangocon.us/talks/to-comment-or-not-a-data-driven-look-at/"&gt;https://2019.djangocon.us/talks/to-comment-or-not-a-data-driven-look-at/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LINKS:
Follow Veronica Hanus üëá
On Twitter: &lt;a class="reference external" href="https://twitter.com/veronica_hanus"&gt;https://twitter.com/veronica_hanus&lt;/a&gt;
Official homepage: &lt;a class="reference external" href="https://vzhz.github.io/blog.html"&gt;https://vzhz.github.io/blog.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow DjangCon US üëá
&lt;a class="reference external" href="https://twitter.com/djangocon"&gt;https://twitter.com/djangocon&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow DEFNA üëá
&lt;a class="reference external" href="https://twitter.com/defnado"&gt;https://twitter.com/defnado&lt;/a&gt;
&lt;a class="reference external" href="https://www.defna.org/"&gt;https://www.defna.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Intro music: &amp;quot;This Is How We Quirk It&amp;quot; by Avocado Junkie.
Video production by Confreaks TV.
Captions by White Coat Captioning.&lt;/p&gt;
</summary></entry><entry><title>To comment or not? A data-driven look at attitudes toward code comments</title><link href="https://pyvideo.org/pygotham-2019/to-comment-or-not-a-data-driven-look-at-attitudes-toward-code-comments.html" rel="alternate"></link><published>2019-10-04T00:00:00+00:00</published><updated>2019-10-04T00:00:00+00:00</updated><author><name>Veronica Hanus</name></author><id>tag:pyvideo.org,2019-10-04:pygotham-2019/to-comment-or-not-a-data-driven-look-at-attitudes-toward-code-comments.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While most of us agree that commenting is part of writing maintainable code,
it‚Äôs very difficult for someone who has not yet worked in a community-
reviewed codebase to know what is good practice and not. The answers that
come back often conflict each other: Code should be DRY, but well-placed
comments save future devs. How can someone find the commenting style that is
best for them as they learn, grow, &amp;amp; contribute? My survey of 170 long-time
developers, Computer Science majors, bootcamp grads, &amp;amp; hobby programmers
confirms some expectations and brings others into question. Join me for a
data-based chat about the biggest pain points caused by our attitudes toward
commenting and the steps we can take to encourage a growth mindset and
empower programmers of all levels.&lt;/p&gt;
</summary></entry><entry><title>To comment or not? A data-driven look at developer attitudes toward code comments</title><link href="https://pyvideo.org/pytexas-2019/to-comment-or-not-a-data-driven-look-at-developer-attitudes-toward-code-comments.html" rel="alternate"></link><published>2019-04-13T00:00:00+00:00</published><updated>2019-04-13T00:00:00+00:00</updated><author><name>Veronica Hanus</name></author><id>tag:pyvideo.org,2019-04-13:pytexas-2019/to-comment-or-not-a-data-driven-look-at-developer-attitudes-toward-code-comments.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every programmer has asked themselves 'how many comments are too many?' To the newest programmers, comments may seem magical--a way of documenting without giving instructions to the computer. But commenting engages the same vulnerability as more advanced challenges (i.e. pair programming &amp;amp; code review) and is likely to pique the insecurity of many programmers (especially the copy-and-paste or tutorial-level programmer)!  While most of us agree that commenting is part of writing maintainable code, it‚Äôs very difficult for someone who has not yet worked in a community-reviewed codebase to know what is good practice and not. The answers that come back often conflict each other: Code should be DRY, but well-placed comments save future devs. How can someone find the commenting style that is best for them as they learn, grow, &amp;amp; contribute? My survey of 170 long-time developers, Computer Science majors, bootcamp grads, &amp;amp; hobby programmers confirms some expectations and brings others into question. Join me for a data-based chat about the biggest pain points caused by our attitudes toward commenting and the steps we can take to encourage a growth mindset and empower programmers of all levels.&lt;/p&gt;
</summary><category term="best-practices"></category></entry><entry><title>Git hook[ed]‚Äù on images &amp; up your documentation game</title><link href="https://pyvideo.org/pycon-au-2019/git-hooked-on-images-up-your-documentation-game.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Veronica Hanus</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/git-hooked-on-images-up-your-documentation-game.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Can you remember the difference between two hex color values? Me neither!&lt;/em&gt; Entering visual representations of recent-changes into version control makes review of past changes easier &amp;amp; speeds acclimation to a new web project. Join me for a review of current methods &amp;amp; how to choose the best for you!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/git-hooked-on-images-up-your-documentation-game"&gt;https://2019.pycon-au.org/talks/git-hooked-on-images-up-your-documentation-game&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 14:10:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Git ‚ÄúHooked‚Äù On Images In Your Version Control &amp; Up Your Documentation Game</title><link href="https://pyvideo.org/scipy-2019/git-hooked-on-images-in-your-version-control-up-your-documentation-game.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Veronica Hanus</name></author><id>tag:pyvideo.org,2019-07-11:scipy-2019/git-hooked-on-images-in-your-version-control-up-your-documentation-game.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Can you remember the difference between two hex color values? Me neither! Tracking screenshots of changes to visual projects in version control (Git) makes review of past changes easier, speeds acclimation to a new web project, and increases our understanding of tools used for automated testing. Join me for a review of integrated screenshot methods currently in use (ie. Python‚Äôs Pyppeteer) and explore how you can customize a system to integrate screenshots into your version control, lower your cognitive load, and support new contributors.&lt;/p&gt;
</summary></entry><entry><title>Lights Camera Action! Scrape, Explore, and Model to Predict Oscar Winners</title><link href="https://pyvideo.org/scipy-2019/lights-camera-action-scrape-explore-and-model-to-predict-oscar-winners.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Deborah Hanus</name></author><id>tag:pyvideo.org,2019-07-11:scipy-2019/lights-camera-action-scrape-explore-and-model-to-predict-oscar-winners.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Jupyter notebooks, HTTP requests, BeautifulSoup, NumPy, Pandas,
scikit learn, and matplotlib, you‚Äôll predict whether a movie is likely
to &lt;a class="reference external" href="http://oscarpredictor.github.io/"&gt;win an Oscar&lt;/a&gt; or be a box office hit. We‚Äôll step through the
creation of an effective dataset: asking a question your data can
answer, writing a web scraper, and answering those questions using
nothing but Python libraries and data from the Internet.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>To Comment or Not to Comment? A Data Driven Look at Conflicting Attitudes Towards Commenting</title><link href="https://pyvideo.org/scipy-2019/to-comment-or-not-to-comment-a-data-driven-look-at-conflicting-attitudes-towards-commenting.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Patricia Hanus</name></author><id>tag:pyvideo.org,2019-07-11:scipy-2019/to-comment-or-not-to-comment-a-data-driven-look-at-conflicting-attitudes-towards-commenting.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While many agree commenting is essential for maintainable code, it‚Äôs difficult for someone who hasn‚Äôt yet worked in a community-reviewed codebase to implement best practice. Commenting questions often bring conflicting answers: Code should be DRY, but well-placed comments save future devs. How can someone find the commenting style that is best for them as they learn, grow, &amp;amp; contribute? My survey of 130 developers, CS majors, bootcamp grads, &amp;amp; hobbyists confirms some expectations and brings others into question. Join me for a data-based chat about the experiences of growing developers and the steps we can take to encourage a growth mindset in developers at all levels.&lt;/p&gt;
</summary></entry><entry><title>Lights Camera Action! Scrape, explore, and model to predict Oscar winners &amp; box office hits</title><link href="https://pyvideo.org/pycon-us-2018/lights-camera-action-scrape-explore-and-model-to-predict-oscar-winners-box-office-hits.html" rel="alternate"></link><published>2018-05-09T00:00:00+00:00</published><updated>2018-05-09T00:00:00+00:00</updated><author><name>Deborah Hanus</name></author><id>tag:pyvideo.org,2018-05-09:pycon-us-2018/lights-camera-action-scrape-explore-and-model-to-predict-oscar-winners-box-office-hits.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Jupyter notebooks, HTTP requests, BeautifulSoup, NumPy, Pandas,
scikit learn, and matplotlib, you‚Äôll predict whether a movie is likely
to &lt;a class="reference external" href="http://oscarpredictor.github.io/"&gt;win an Oscar&lt;/a&gt; or be a box office hit. We‚Äôll step through the
creation of an effective dataset: asking a question your data can
answer, writing a web scraper, and answering those questions using
nothing but Python libraries and data from the Internet.&lt;/p&gt;
</summary></entry></feed>