<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_alex-gronholm.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-07-27T00:00:00+00:00</updated><entry><title>Automating testing and deployment with Github and Travis</title><link href="https://pyvideo.org/europython-2018/automating-testing-and-deployment-with-github-and-travis.html" rel="alternate"></link><published>2018-07-27T00:00:00+00:00</published><updated>2018-07-27T00:00:00+00:00</updated><author><name>Alex Grönholm</name></author><id>tag:pyvideo.org,2018-07-27:europython-2018/automating-testing-and-deployment-with-github-and-travis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Maintaining an open source project can be a drag. Especially when you
have dozens of them. Besides being tedious , making a new release can be
a very error prone process. Maybe you forgot to run the full test suite,
forgot to update the release version or tag the release on VCS or maybe
you bungled up the upload to PyPI. Fortunately there are things you can
do to eliminate entire categories of human errors in the release process
– by automating them.&lt;/p&gt;
&lt;p&gt;This talk uses a trivial project as an example to present a release
pipeline, from packaging and testing to deployment, that only requires
you to push a git tag to your Github repository. Automation then takes
care of the rest and you end up with a new release on PyPI (yay!).&lt;/p&gt;
&lt;p&gt;This talk is mostly useful for open source developers using Github to
house their projects, as it heavily leans on Travis, its continuous
integration provider . You also need to be at least somewhat familiar
with Python packaging and testing in order to follow along. Familiarity
with common tools like pytest and tox helps but is not strictly
required.&lt;/p&gt;
</summary></entry><entry><title>Introducing the Asphalt framework</title><link href="https://pyvideo.org/pycon-finland-2015/introducing-the-asphalt-framework.html" rel="alternate"></link><published>2015-10-19T00:00:00+00:00</published><updated>2015-10-19T00:00:00+00:00</updated><author><name>Alex Grönholm</name></author><id>tag:pyvideo.org,2015-10-19:pycon-finland-2015/introducing-the-asphalt-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyCon Finland 2015
Alex Grönholm - Introducing the Asphalt framework&lt;/p&gt;
&lt;p&gt;Most existing server frameworks only cater to a specific network protocol, forcing developers to learn everything anew when building an app for a different protocol. Or worse, there's no framework available so they have to reinvent everything by themselves.&lt;/p&gt;
&lt;p&gt;Now, meet Asphalt -- a new general purpose server microframework that not only solves these problems, but also provides strong compatibility guarantees through the use of semantic versioning and PEP 484 type hints.&lt;/p&gt;
&lt;p&gt;In this talk, you will hear how Asphalt compares (or doesn't) to Twisted, how to mix asynchronous code with synchronous code and how to develop multi-protocol applications that work seamlessly together.&lt;/p&gt;
&lt;p&gt;About the author:  I'm a private contractor from Espoo, 35 years old. I'm a Jython core developer and the author of APScheduler, sqlacodegen, jython-swingutils, the concurrent.futures backport and of course the Asphalt framework. I build and maintain Enterprise Resource Planning systems for a living.&lt;/p&gt;
</summary><category term="asphalt"></category></entry><entry><title>Modern day serialization in Python</title><link href="https://pyvideo.org/pycon-finland-2016/modern-day-serialization-in-python.html" rel="alternate"></link><published>2016-10-31T00:00:00+00:00</published><updated>2016-10-31T00:00:00+00:00</updated><author><name>Alex Grönholm</name></author><id>tag:pyvideo.org,2016-10-31:pycon-finland-2016/modern-day-serialization-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern day serialization in Python by Alex Grönholm&lt;/p&gt;
&lt;p&gt;There is much more to serialization than just JSON and Pickle!&lt;/p&gt;
&lt;p&gt;During the course of this talk, beginners will learn what serialization is about and how to use it. More advanced users will learn new serialization techniques including how to work with complex object graphs.&lt;/p&gt;
&lt;p&gt;I will go over several serializers including JSON, msgpack, CBOR and Pickle and tell about their strengths and weaknesses.&lt;/p&gt;
&lt;p&gt;About the author: Alex Grönholm 36 is a software engineer who works as an independent contractor. He started using Python in 2008 and is the author of the Asphalt framework, APScheduler, sqlacodegen and many other public projects&lt;/p&gt;
</summary></entry></feed>