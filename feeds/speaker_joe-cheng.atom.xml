<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Joe Cheng</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_joe-cheng.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-10-08T18:30:00+00:00</updated><subtitle></subtitle><entry><title>Shiny: Data-centric web applications in Python</title><link href="https://pyvideo.org/pybay-2023/Shiny_Datacentric_web_applications_in_Python.html" rel="alternate"></link><published>2023-10-08T18:30:00+00:00</published><updated>2023-10-08T18:30:00+00:00</updated><author><name>Joe Cheng</name></author><id>tag:pyvideo.org,2023-10-08:/pybay-2023/Shiny_Datacentric_web_applications_in_Python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Shiny is a web framework that is designed to let you create data dashboards, interactive visualizations, and workflow apps in pure Python or R. Shiny doesn't require knowledge of HTML, CSS, and JavaScript, and lets you create data-centric applications in a fraction of the time and effort of traditional â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Shiny is a web framework that is designed to let you create data dashboards, interactive visualizations, and workflow apps in pure Python or R. Shiny doesn't require knowledge of HTML, CSS, and JavaScript, and lets you create data-centric applications in a fraction of the time and effort of traditional web stacks.&lt;/p&gt;
&lt;p&gt;Of course, Python already has several popular and high-quality options for creating data-centric web applications. So it's fair to ask what Shiny can offer the Python community.&lt;/p&gt;
&lt;p&gt;In this talk, I will introduce Shiny for Python and answer that question. I'll start with some basic demos that show how Shiny apps are constructed. Next, I'll explain Transparent Reactive Programming (TRP), which is the animating concept behind Shiny, and the reason it occupies such an interesting place on the ease-vs-power tradeoff frontier. Finally, I'll wrap up with additional demos that feature interesting functionality that is made trivial with TRP.&lt;/p&gt;
&lt;p&gt;This talk should be interesting to anyone who uses Python to analyze or visualize data, and does not require experience with Shiny or any other web frameworks.&lt;/p&gt;
</content><category term="PyBay 2023"></category></entry></feed>