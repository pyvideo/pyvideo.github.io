<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 26 Jul 2014 00:00:00 +0000</lastBuildDate><item><title>Functional programming in Python with PyToolz</title><link>https://pyvideo.org/pyohio-2014/functional-programming-in-python-with-pytoolz.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn the principles of functional programming from the comfort of
Python. I'll motivate the principles of standardization, composability,
laziness, and purity within a standard workflow. We'll go far beyond the
standard libraries &lt;tt class="docutils literal"&gt;itertools&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;functools&lt;/tt&gt; by using a functional
standard library &lt;tt class="docutils literal"&gt;toolz&lt;/tt&gt; and its high-performance counterpart
&lt;tt class="docutils literal"&gt;cytoolz&lt;/tt&gt; written in Cython.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Welch</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/functional-programming-in-python-with-pytoolz.html</guid><category>talk</category></item></channel></rss>