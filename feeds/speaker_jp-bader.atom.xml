<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jp-bader.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-03T16:15:00+00:00</updated><entry><title>Plug-n-Stream Player Piano: Signal Processing With Python</title><link href="https://pyvideo.org/pycon-us-2019/plug-n-stream-player-piano-signal-processing-with-python.html" rel="alternate"></link><published>2019-05-03T16:15:00+00:00</published><updated>2019-05-03T16:15:00+00:00</updated><author><name>JP Bader</name></author><id>tag:pyvideo.org,2019-05-03:pycon-us-2019/plug-n-stream-player-piano-signal-processing-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Digital Signal Processing and Player Piano don't normally come together
in the same sentance. Player Pianos that are 100+ years old are awesome
artisan artifacts, but they don't play digital formats very well. This
talk will show how we take a 100+ year old technology and marry it to
the digital age via Python libraries and precision lasers!&lt;/p&gt;
&lt;p&gt;In this discussion we will cover how we are creating our own
&amp;quot;Plug-n-Stream Player Piano&amp;quot;. We will take a look at the different
digital signal processing Python libraries, their functionality, and
requirements for converting audio streams to piano playable audio files.
After a brief walk through of our prototyped hardware, we will dissect
the digital signal processing, converting streaming music to data for
the Player Piano. With a real Player Piano in the room we will demo
streaming music from our devices onto the piano.&lt;/p&gt;
&lt;p&gt;LIVE(ish) Piano Playing!&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>