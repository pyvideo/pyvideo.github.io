<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Seo Min-kyo and Kang Jin-oh</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 01 Oct 2022 00:00:00 +0000</lastBuildDate><item><title>Designing a ReBAC architecture for security in Django</title><link>https://pyvideo.org/pycon-korea-2022/designing-a-rebac-architecture-for-security-in-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As the structural complexity of web services increases, RBAC / ReBAC structure is often adopted for easy role and permission management. Our service is no exception. Since the need for many roles and permission management was anticipated, we decided to use ReBAC from an SSDLC-ish perspective from the initial planning stage and defined requirements such as Table-less role assignment, Role explosion, Hierarchical object graph, and Row-level access control. After checking the status of libraries in the existing Django ecosystem, we introduce the direction and implementation we approached each problem to satisfy the requirements defined above, and introduce the journey to create django-entity-rbac, an open-source library that solves them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Seo Min-kyo and Kang Jin-oh</dc:creator><pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-10-01:/pycon-korea-2022/designing-a-rebac-architecture-for-security-in-django.html</guid><category>PyCon Korea 2022</category><category>Web Service</category></item></channel></rss>