<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_yonatan-romero.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-11-24T00:00:00+00:00</updated><entry><title>Gauchito GIL</title><link href="https://pyvideo.org/pycon-ar-2018/gauchito-gil.html" rel="alternate"></link><published>2018-11-24T00:00:00+00:00</published><updated>2018-11-24T00:00:00+00:00</updated><author><name>Yonatan Romero</name></author><id>tag:pyvideo.org,2018-11-24:pycon-ar-2018/gauchito-gil.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Concurrencia en Python. Entendiendo el GIL (Global Interpreter Lock).&lt;/p&gt;
&lt;p&gt;Programar aplicaciones concurrentes en Python tiene particularidades que en otros lenguajes no existen. Se intentará explicar las limitaciones de Python para tareas concurrentes, qué rol cumple el GIL y cuales son las formas de sortear estas limitaciones usando multihilo, multiproceso y asincronismo ¿Cuando conviene cada una? Como caso práctico se presentarán versiones multiproceso, multihilo y asincrónica de una mini aplicación que consume una API REST.&lt;/p&gt;
</summary></entry></feed>