<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 22 Jun 2018 00:00:00 +0000</lastBuildDate><item><title>Машинное обучение для извлечения данных из веба</title><link>https://pyvideo.org/pycon-russia-2018/mashinnoe-obuchenie-dlia-izvlecheniia-dannykh-iz-veba.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Михаил Коробов&lt;/strong&gt; , ScrapingHub&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/korobov/"&gt;**Машинное обучение для извлечения данных из
веба**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Все знают, как написать веб-паука на Python: берем Scrapy / Selenium /
requests и скачиваем странички с сайта, затем используем XPath / CSS /
BeautifulSoup селекторы (+ регулярные выражения), чтоб извлечь нужную
информацию. Но подходы сильно отличаются, когда информацию хочется
автоматически извлечь из сотен тысяч сайтов - правил и эвристик тут
недостаточно.&lt;/p&gt;
&lt;p&gt;В докладе я расскажу о том, каким образом машинное обучение может
применяться для написания «умных» веб-пауков:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;как классифицировать веб-страницы;&lt;/li&gt;
&lt;li&gt;как научить пауков «понимать» элементы страниц: веб-формы, паджинацию
и т.д.&lt;/li&gt;
&lt;li&gt;как выделять информацию из веб-страниц в структурном виде;&lt;/li&gt;
&lt;li&gt;как научить пауков не скачивать ненужные страницы - дубликаты,
страницы не по теме.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Будут примеры из практики, в том числе примеры использования Deep
Learning и Reinforcement Learning; расскажу также о доступных
Open-Source компонентах, из которых можно таких умных пауков собирать.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Михаил Коробов</dc:creator><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-22:pycon-russia-2018/mashinnoe-obuchenie-dlia-izvlecheniia-dannykh-iz-veba.html</guid></item><item><title>Explaining behavior of Machine Learning models with eli5 library</title><link>https://pyvideo.org/europython-2017/explaining-behavior-of-machine-learning-models-with-eli5-library.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ML estimators don't have to be black boxes. Interpretability has many
benefits: it is easier to debug interpretable models, humans trust
decisions of such models more.&lt;/p&gt;
&lt;p&gt;In this talk I’ll give an overview of ML models interpretation and debugging techniques. I’ll cover&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;linear models,&lt;/li&gt;
&lt;li&gt;decision trees,&lt;/li&gt;
&lt;li&gt;tree ensembles,&lt;/li&gt;
&lt;li&gt;arbitrary classifiers using LIME algorithm.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The talk focus is on explanation algorithms, because it is important
to be aware of pitfalls and limitations of the explanation method to
be able to interpret an explanation correctly. I’ll also show how to
use these techniques in practice, to debug and explain behavior of
estimators from Python ML libraries like scikit-learn and xgboost
using open-source eli5 library:
&lt;a class="reference external" href="https://github.com/TeamHG-Memex/eli5"&gt;https://github.com/TeamHG-Memex/eli5&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Attendees will get both practical and theoretical understanding of
these explanation methods. Target audience is ML practitioners who
want to&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;get a better quality from their ML pipelines - understanding of
why a wrong decision happens is often a first step to improve the
quality of an ML solution;&lt;/li&gt;
&lt;li&gt;explain ML model behavior to clients or stakeholders - inspectable
ML pipelines are easier to “sell” to a client; humans trust such
models more because they can check if an explanation is consistent
with their domain knowledge or gut feeling, understand better
shortcomings of the solution and make a more informed decision as a
result.&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mikhail Korobov</dc:creator><pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-13:europython-2017/explaining-behavior-of-machine-learning-models-with-eli5-library.html</guid></item><item><title>Как писать быстрый и эффективный код на Python</title><link>https://pyvideo.org/pycon-ukraine-2012/kak-pisat-bystryi-i-effektivnyi-kod-na-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Введение: что такое морфологический анализ языка, зачем он нужен;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;как уместить 300-400Мб информации о словах в 10-15Мб и при этом обеспечить быстрый доступ к ним (на уровне C/C++ реализаций), в.т.ч без использования C/C++ расширений: структуры данных и приемы, cython vs pypy.&lt;/li&gt;
&lt;li&gt;пример: автокомплит для сайта за O(1) от количества элементов в базе с минимальным потреблением памяти.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mikhail Korobov</dc:creator><pubDate>Sun, 21 Oct 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/kak-pisat-bystryi-i-effektivnyi-kod-na-python.html</guid></item><item><title>Как всем перейти на Python 3.x</title><link>https://pyvideo.org/pycon-ukraine-2012/kak-vsem-pereiti-na-python-3x.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Зачем переходить на 3.х? Как перевести свой код на 3.х? Как начинать проект под 3.х при том, что большинство библиотек под 3.х не работают? Как портировать библиотеки и чем это отличается от портирования &amp;quot;своего&amp;quot; кода? Расскажу об одной из возможных стратегий перехода (достаточно, на мой взгляд, практичной и безболезненной).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mikhail Korobov</dc:creator><pubDate>Sat, 20 Oct 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/kak-vsem-pereiti-na-python-3x.html</guid></item><item><title>Обработка текстов на русском/английском/украинском с помощью Python</title><link>https://pyvideo.org/pycon-belarus-2015/obrabotka-tekstov-na-russkomangliiskomukrainskom-s-pomoshchiu-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Обзор инструментов для обработки текста и рассказать, что с текстом
можно сделать, а что сложно&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Михаил Коробов</dc:creator><pubDate>Sat, 31 Jan 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-01-31:pycon-belarus-2015/obrabotka-tekstov-na-russkomangliiskomukrainskom-s-pomoshchiu-python.html</guid></item><item><title>Извлечение информации из веб-страниц</title><link>https://pyvideo.org/pycon-russia-2014/izvlechenie-informatsii-iz-veb-stranits.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Рассказ о том, как извлеченть данные из веб-страниц с использованием Python:
- как извлечь информацию из одного-единственного сайта;
- как сделать это без написания xpath, css селекторов и т.д.;
- как извлекать информацию, если структура сайта неизвестна заранее;
- когда стоит применять методы машинного обучения и как это делать;
- какие инструменты доступны на Python.
Доклад рассчитан на тех людей, кому хочется извлекать какую-то структурированную информацию из веб-страниц или из текста. Это могут быть задачи информационного поиска, анализа данных, составления каталогов, получения информации для каких-то исследований и т.д.
Какую пользу слушатели получат?
&amp;quot;Ручной&amp;quot; разбор веб-страниц через XPath / CSS селекторы - не единственный инструмент. Возможно, некоторые задачи, которые раньше казались очень сложными, покажутся вполне решаемыми.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Михаил Коробов</dc:creator><pubDate>Mon, 02 Jun 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-06-02:pycon-russia-2014/izvlechenie-informatsii-iz-veb-stranits.html</guid></item><item><title>Дискуссионная панель: Как и зачем писать свои библиотеки на python</title><link>https://pyvideo.org/pycon-russia-2016/diskussionnaia-panel-kak-i-zachem-pisat-svoi-biblioteki-na-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Round table&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Grigory Petrov</dc:creator><pubDate>Mon, 04 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-04:pycon-russia-2016/diskussionnaia-panel-kak-i-zachem-pisat-svoi-biblioteki-na-python.html</guid></item></channel></rss>