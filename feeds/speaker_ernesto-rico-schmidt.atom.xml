<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Ernesto Rico Schmidt</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ernesto-rico-schmidt.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-10-16T00:00:00+00:00</updated><subtitle></subtitle><entry><title>The evolution of a Django Website into a radio automation back-end</title><link href="https://pyvideo.org/djangocon-us-2023/the-evolution-of-a-django-website-into-a-radio-automation-back-end.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Ernesto Rico Schmidt</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/the-evolution-of-a-django-website-into-a-radio-automation-back-end.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are both commercial and open-source solutions for radio automation, but the requirements of free radios are very different from commercial radios, specially regarding the scheduling options and the end-user interface.&lt;/p&gt;
&lt;p&gt;With AURA, we are developing a free and open-source software automation suite for free radios.&lt;/p&gt;
&lt;p&gt;At the core …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are both commercial and open-source solutions for radio automation, but the requirements of free radios are very different from commercial radios, specially regarding the scheduling options and the end-user interface.&lt;/p&gt;
&lt;p&gt;With AURA, we are developing a free and open-source software automation suite for free radios.&lt;/p&gt;
&lt;p&gt;At the core of AURA is &lt;cite&gt;steering&lt;/cite&gt;, a Django application that serves as the &amp;quot;source of truth&amp;quot; for the schedule and acts as an OpenID Connect provider for the components of the suite.&lt;/p&gt;
&lt;p&gt;First, I'll describe the situation free radios in Austria face: The commercial radio automation software available, and the only supposedly free solution, currently in use at some radio stations in Austria, has showed that a (Java) monolith and a single developer are not the best approach for the rather complex and varied schedule and play-out requirements of free radios.&lt;/p&gt;
&lt;p&gt;This moved a group of free radios in Austria to start the development of a free and open-source software suite of radio management, program scheduling and play-out automation software: AURA.&lt;/p&gt;
&lt;p&gt;Second, I'll give a short overview of the distributed architecture and the components of AURA, and focus on how it distinguishes from the monoliths that are currently in use at some of the free radios in Austria.&lt;/p&gt;
&lt;p&gt;Then, I'll explain the data models behind the Django application, with a special focus on the recurrence rules and the schedule conflict resolution, the most complex parts of &lt;cite&gt;steering&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;I will focus on the architecture decisions we took during the planing and development, and how the open-source development is a better and more sustainable approach to a common problem for free radio stations.&lt;/p&gt;
&lt;p&gt;I will show small snippets of code of the most interesting parts of the Django application, and explain the rationale behind them, specially the recurrence rules, and the schedule conflict resolution.&lt;/p&gt;
&lt;p&gt;In this case Django is not providing a Web application or a Web site but it is providing a REST API and acts as the back-end of a software suite, and serves as the &amp;quot;source of truth&amp;quot; for the scheduling and the play-out automation of the radio station.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Kivy - Spass mit Natural User Interfaces und Python</title><link href="https://pyvideo.org/pycon-de-2011/kivy-spass-mit-natural-user-interfaces-und-pyth.html" rel="alternate"></link><published>2011-10-07T00:00:00+00:00</published><updated>2011-10-07T00:00:00+00:00</updated><author><name>Ernesto Rico-Schmidt</name></author><id>tag:pyvideo.org,2011-10-07:/pycon-de-2011/kivy-spass-mit-natural-user-interfaces-und-pyth.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Kivy ist ein Framework zur schnellen Entwicklung von Natural User
Interfaces, das vor kurzen auf EuroPython in Florenz präsentiert wurde.
Kivy verfolgt einen neuen Ansatz was Eingabe-Events und Widgets
betrifft. Es unterstützt Multi-Touch Eingabegeräte und ist dank Python
plattform-unabhängig. Eine Kivy-Applikation läuft auf Linux, MacOS,
Windows und Android, ohne …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Kivy ist ein Framework zur schnellen Entwicklung von Natural User
Interfaces, das vor kurzen auf EuroPython in Florenz präsentiert wurde.
Kivy verfolgt einen neuen Ansatz was Eingabe-Events und Widgets
betrifft. Es unterstützt Multi-Touch Eingabegeräte und ist dank Python
plattform-unabhängig. Eine Kivy-Applikation läuft auf Linux, MacOS,
Windows und Android, ohne etwas ändern zu müssen.&lt;/p&gt;
</content><category term="PyCon DE 2011"></category><category term="kivy"></category></entry></feed>