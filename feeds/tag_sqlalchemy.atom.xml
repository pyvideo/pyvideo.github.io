<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_sqlalchemy.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-09-30T00:00:00+00:00</updated><entry><title>Web Applications on Python3 and Python2 with TurboGears - Part 1</title><link href="https://pyvideo.org/europython-2013/web-applications-on-python3-and-python2-with-turbogears-part-1.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/web-applications-on-python3-and-python2-with-turbogears-part-1.html</id><summary type="html"></summary><category term="web"></category><category term="WSGI"></category><category term="sqlalchemy"></category><category term="HTTP"></category><category term="turbogears"></category><category term="mongodb"></category><category term="html"></category><category term="python3"></category></entry><entry><title>Web Applications on Python3 and Python2 with TurboGears - Part 2</title><link href="https://pyvideo.org/europython-2013/web-applications-on-python3-and-python2-with-turbogears-part-2.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/web-applications-on-python3-and-python2-with-turbogears-part-2.html</id><summary type="html"></summary><category term="web"></category><category term="WSGI"></category><category term="sqlalchemy"></category><category term="HTTP"></category><category term="turbogears"></category><category term="mongodb"></category><category term="html"></category><category term="python3"></category></entry><entry><title>Data model patterns with SQLAlchemy</title><link href="https://pyvideo.org/europython-2013/data-model-patterns-with-sqlalchemy.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Erik Janssens</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/data-model-patterns-with-sqlalchemy.html</id><summary type="html"></summary><category term="sql"></category><category term="sqlalchemy"></category><category term="metaprogramming"></category><category term="orm"></category><category term="database"></category></entry><entry><title>SQLAlchemy: practic magic</title><link href="https://pyvideo.org/odessapy-2018/sqlalchemy-practic-magic.html" rel="alternate"></link><published>2018-09-30T00:00:00+00:00</published><updated>2018-09-30T00:00:00+00:00</updated><author><name>Vitaliy Androsenko</name></author><id>tag:pyvideo.org,2018-09-30:odessapy-2018/sqlalchemy-practic-magic.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;В докладе будут описаны интересные фишки алхимии, про которые все забывают сразу после прочтения документации, а так же подняты вопросы обхода наиболее опасных ям для начинающих магов&lt;/p&gt;
</summary><category term="sqlalchemy"></category></entry><entry><title>SQLAlchemyと僕</title><link href="https://pyvideo.org/pycon-japan-2012/sqlalchemytopu.html" rel="alternate"></link><published>2012-09-15T00:00:00+00:00</published><updated>2012-09-15T00:00:00+00:00</updated><author><name>木田 光彦</name></author><id>tag:pyvideo.org,2012-09-15:pycon-japan-2012/sqlalchemytopu.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SQLAlchemyを利用したWebアプリケーション開発で押させておきたいポイントと、Tipsをまとめて、初心者向けとして紹介します。&lt;/p&gt;
</summary><category term="sqlalchemy"></category><category term="orm"></category></entry><entry><title>The magic of SQLAlchemy</title><link href="https://pyvideo.org/pycon-israel-2017/the-magic-of-sqlalchemy.html" rel="alternate"></link><published>2017-06-13T00:00:00+00:00</published><updated>2017-06-13T00:00:00+00:00</updated><author><name>Moran Cohen</name></author><id>tag:pyvideo.org,2017-06-13:pycon-israel-2017/the-magic-of-sqlalchemy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many languages have a way to abstract the database nicely in code - ORMs are everywhere. But SQLAlchemy is special, it's not only an ORM ( like the one Django has ), It's also &amp;quot;The Python SQL Toolkit&amp;quot; where you can replace complicated SQL queries with simple, clean and safe Python.&lt;/p&gt;
</summary><category term="sqlalchemy"></category></entry><entry><title>PyGotham 2011: SQLAlchemy, an Architectural Retrospective</title><link href="https://pyvideo.org/pygotham-2011/pygotham-2011--sqlalchemy--an-architectural-retro.html" rel="alternate"></link><published>2011-09-16T00:00:00+00:00</published><updated>2011-09-16T00:00:00+00:00</updated><author><name>Mike Bayer</name></author><id>tag:pyvideo.org,2011-09-16:pygotham-2011/pygotham-2011--sqlalchemy--an-architectural-retro.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this talk I'll walk through some highlights of SQLAlchemy internal
design and methodology, based on the upcoming chapter for the
&amp;quot;Architecture of Open Source Applications&amp;quot; book. We'll have a little bit
of SQLAlchemy philosophy, an overview of the Core, and then a 500-ft
view of how the ORM goes about things, with plenty of cool looking
diagrams.&lt;/p&gt;
</summary><category term="pygotham"></category><category term="pygotham2011"></category><category term="sqlalchemy"></category></entry><entry><title>PyOhio 2011: Evolving an internal web service</title><link href="https://pyvideo.org/pyohio-2011/pyohio-2011--evolving-an-internal-web-service.html" rel="alternate"></link><published>2011-07-30T00:00:00+00:00</published><updated>2011-07-30T00:00:00+00:00</updated><author><name>Taavi Burns</name></author><id>tag:pyvideo.org,2011-07-30:pyohio-2011/pyohio-2011--evolving-an-internal-web-service.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Evolving an internal web service&lt;/p&gt;
&lt;p&gt;Presented by Taavi Burns&lt;/p&gt;
&lt;p&gt;Over the past few years, FreshBooks' core business logic has been moving
into a Python web-service backend using Pylons and SQLAlchemy. Come hear
why we did it, and stories of its architecture, testing methods,
deployment, and monitoring.&lt;/p&gt;
</summary><category term="casestudy"></category><category term="freshbooks"></category><category term="pylons"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="sqlalchemy"></category></entry><entry><title>PyOhio 2011: SqlAlchemy tutorial</title><link href="https://pyvideo.org/pyohio-2011/pyohio-2011--sqlalchemy-tutorial.html" rel="alternate"></link><published>2011-07-30T00:00:00+00:00</published><updated>2011-07-30T00:00:00+00:00</updated><author><name>Rick Harding</name></author><id>tag:pyvideo.org,2011-07-30:pyohio-2011/pyohio-2011--sqlalchemy-tutorial.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SqlAlchemy tutorial&lt;/p&gt;
&lt;p&gt;Presented by Rick Harding&lt;/p&gt;
&lt;p&gt;SqlAlchemy is one of the top 5 &amp;quot;must have&amp;quot; modules for Python. We'll go
through why you might want to use an ORM, situations to use the
different layers of SqlAlchemy, and some tips and tricks on a real
sample application.&lt;/p&gt;
</summary><category term="pyohio"></category><category term="pyohio2011"></category><category term="sqlalchemy"></category><category term="tutorial"></category></entry><entry><title>New beauty in Camelot</title><link href="https://pyvideo.org/europython-2011/new-beauty-in-camelot.html" rel="alternate"></link><published>2011-07-21T00:00:00+00:00</published><updated>2011-07-21T00:00:00+00:00</updated><author><name>Erik Janssens</name></author><id>tag:pyvideo.org,2011-07-21:europython-2011/new-beauty-in-camelot.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Erik Janssens,Jeroen Dierckx - 22 June 2011 in &amp;quot;Track
Ravioli &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Camelot is a Python framework that leverages SQLAlchemy and QT to build
rich desktop applications. The model - view definition used was inspired
by the Django Admin interface. Some see it as a replacement for MS
Access, but it's underlying libraries allow much more advanced features.&lt;/p&gt;
&lt;p&gt;In this talk we will focus on the changes and new features that were
introduced in Camelot and more importantly, how they can be used in your
applications. Those features range from Matplotlib chart integration and
new types of actions to displaying custom SQLAlchemy queries in a table
view.&lt;/p&gt;
&lt;p&gt;We will share our experiences with large scale deployment of Python and
Camelot applications to the desktop of the user. In a number of case
studies we will point out the mistakes we made and how they were
corrected.&lt;/p&gt;
</summary><category term="deployment"></category><category term="django"></category><category term="framework"></category><category term="matplotlib"></category><category term="qt"></category><category term="sqlalchemy"></category></entry><entry><title>PyCon 2009: Advanced SQLAlchemy (Part 1 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--advanced-sqlalchemy--part-1-of-3.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--advanced-sqlalchemy--part-1-of-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the
full power of SQL while remaining easy to use for the basics, and is
flexible enough to work with existing database schemas as well as fresh
designs. SQLAlchemy is used in production by leading Python web
frameworks Pylons and TurboGears as well as many other web and non-web
developers. This tutorial discusses current data mapping techniques,
advanced Query techniques, Session/transaction usage, and maximizing
schema usage with SQLAlchemy's event model.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2009"></category><category term="sqlalchemy"></category></entry><entry><title>PyCon 2009: Advanced SQLAlchemy (Part 2 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--advanced-sqlalchemy--part-2-of-3.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--advanced-sqlalchemy--part-2-of-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;` &amp;lt;&lt;a class="reference external" href="http://blip.tv/file/2023897"&gt;http://blip.tv/file/2023897&lt;/a&gt;&amp;gt;`__&lt;/p&gt;
&lt;p&gt;SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the
full power of SQL while remaining easy to use for the basics, and is
flexible enough to work with existing database schemas as well as fresh
designs. SQLAlchemy is used in production by leading Python web
frameworks Pylons and TurboGears as well as many other web and non-web
developers. This tutorial discusses current data mapping techniques,
advanced Query techniques, Session/transaction usage, and maximizing
schema usage with SQLAlchemy's event model.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2009"></category><category term="sqlalchemy"></category></entry><entry><title>PyCon 2009: Advanced SQLAlchemy (Part 3 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--advanced-sqlalchemy--part-3-of-3.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--advanced-sqlalchemy--part-3-of-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the
full power of SQL while remaining easy to use for the basics, and is
flexible enough to work with existing database schemas as well as fresh
designs. SQLAlchemy is used in production by leading Python web
frameworks Pylons and TurboGears as well as many other web and non-web
developers. This tutorial discusses current data mapping techniques,
advanced Query techniques, Session/transaction usage, and maximizing
schema usage with SQLAlchemy's event model.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2009"></category><category term="sqlalchemy"></category></entry><entry><title>PyCon 2009: Introduction to SQLAlchemy (Part 1 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-1-of.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-1-of.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit
for Python. SQLAlchemy exposes the full power of SQL while remaining
easy to use for the basics, and is flexible enough to work with existing
database schemas as well as fresh designs. SQLAlchemy is used in
production by leading Python web frameworks Pylons and Turbogears as
well as many other web and non-web developers. This tutorial teaches
SQLAlchemy's object-relational mapping to automate painlessly loading
and persisting objects from and to your database, even when complex
relationships exist.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2009"></category><category term="sqlalchemy"></category><category term="tutorial"></category></entry><entry><title>PyCon 2009: Introduction to SQLAlchemy (Part 2 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-2-of.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-2-of.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit
for Python. SQLAlchemy exposes the full power of SQL while remaining
easy to use for the basics, and is flexible enough to work with existing
database schemas as well as fresh designs. SQLAlchemy is used in
production by leading Python web frameworks Pylons and Turbogears as
well as many other web and non-web developers. This tutorial teaches
SQLAlchemy's object-relational mapping to automate painlessly loading
and persisting objects from and to your database, even when complex
relationships exist.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2009"></category><category term="sqlalchemy"></category><category term="tutorial"></category></entry><entry><title>PyCon 2009: Introduction to SQLAlchemy (Part 3 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-3-of.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-3-of.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit
for Python. SQLAlchemy exposes the full power of SQL while remaining
easy to use for the basics, and is flexible enough to work with existing
database schemas as well as fresh designs. SQLAlchemy is used in
production by leading Python web frameworks Pylons and Turbogears as
well as many other web and non-web developers. This tutorial teaches
SQLAlchemy's object-relational mapping to automate painlessly loading
and persisting objects from and to your database, even when complex
relationships exist.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2009"></category><category term="sqlalchemy"></category><category term="tutorial"></category></entry><entry><title>Introduction to SQLAlchemy</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--introduction-to-sqlalchemy.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Johnathan Ellis</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--introduction-to-sqlalchemy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to SQLAlchemy&lt;/p&gt;
&lt;p&gt;Presented by Johnathan Ellis&lt;/p&gt;
&lt;p&gt;SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the
full power of SQL while remaining easy to use for the basics, and is
flexible enough to work with existing database schemas as well as fresh
designs. SQLAlchemy is used in production by leading Python web
frameworks Pylons and Turbogears as well as many other web and non-web
developers.&lt;/p&gt;
&lt;p&gt;This tutorial teaches SQLAlchemy's object-relational mapping to automate
painlessly loading and persisting objects from and to your database,
even when complex relationships exist.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Python experience: intermediate. You should already have some hands-on
experience with Python and be comfortable reading modern Python code.&lt;/p&gt;
&lt;p&gt;SQL experience: beginning. You should know how to SELECT, INSERT, and
DELETE, and how to read queries involving JOINs, but we will only be
reading the SQL generated by SA, not writing our own.&lt;/p&gt;
&lt;p&gt;ORM experience: prior experience with an object-relational mapper is not
necessary.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;p&gt;Introduction:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Philosophy&lt;/li&gt;
&lt;li&gt;SA features&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fundamentals:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to ORM&lt;/li&gt;
&lt;li&gt;Data Mapper pattern vs Active Record&lt;/li&gt;
&lt;li&gt;Tables&lt;/li&gt;
&lt;li&gt;Mapping basics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Queries:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Conditions, operators&lt;/li&gt;
&lt;li&gt;Joins&lt;/li&gt;
&lt;li&gt;lazy / eager loading&lt;/li&gt;
&lt;li&gt;Relation-based queries&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sessions &amp;amp; identity map:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;detatching, attaching objects&lt;/li&gt;
&lt;li&gt;Lifecycle relations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More Mapping:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;one to one, many to many&lt;/li&gt;
&lt;li&gt;backreferences&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Extensions, etc.:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;DDL&lt;/li&gt;
&lt;li&gt;Migrate&lt;/li&gt;
&lt;li&gt;FormAlchemy&lt;/li&gt;
&lt;li&gt;SqlSoup&lt;/li&gt;
&lt;li&gt;Elixir&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Laptop with Python 2.5 or 2.6 and SQLAlchemy 0.6 installed. Code samples
may also work with Python 2.4 but will not be tested on that platform.
SQLAlchemy also supports Jython and cPython 3.x, but this tutorial will
be using &amp;quot;classic&amp;quot; cPython.&lt;/p&gt;
</summary><category term="ddl"></category><category term="elixer"></category><category term="formalchemy"></category><category term="migrate"></category><category term="orm"></category><category term="pycon"></category><category term="pycon2010"></category><category term="sqlalchemy"></category><category term="sqlsoup"></category><category term="tutorial"></category></entry><entry><title>Plenary: Friday Evening Lightning Talks</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--plenary--friday-evening-lightning-tal.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Jacob Kaplan-Moss</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--plenary--friday-evening-lightning-tal.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plenary: Friday Evening Lightning Talks&lt;/p&gt;
&lt;p&gt;(00:00) Jacob Kaplan-Moss - lightning talk about lightning talks&lt;/p&gt;
&lt;p&gt;(03:50) Van Lindberg - What an Open Source Lawyer Actually Does&lt;/p&gt;
&lt;p&gt;(09:40) Greg Wilson - The Next Big Programming Book and How You Can Make
it Happen (&lt;a class="reference external" href="http://www.third-bit.com/"&gt;http://www.third-bit.com/&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;(14:25) Moshe Zadka - Don't Write Big Applications (more info
&lt;a class="reference external" href="http://moshez.wordpress.com/2010/02/17/dont-write-big-applications-a%20-lightning-talk/"&gt;here&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;(19:35) Ned Batchelder - What's new in coverage.py
(&lt;a class="reference external" href="http://nedbatchelder.com/"&gt;http://nedbatchelder.com/&lt;/a&gt;,
&lt;a class="reference external" href="http://nedbatchelder.com/code/coverage/"&gt;coverage.py&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;(25:10) Mike Maccana - Python Docx
(&lt;a class="reference external" href="http://github.com/mikemaccana/python-docx/"&gt;http://github.com/mikemaccana/python-
docx/&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;(29:25) Trent Mick - ActiveState Code v3/Python Cookbook v3
(&lt;a class="reference external" href="http://code.activestate.com/"&gt;http://code.activestate.com/&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;(34:40) Daniel Holth - Writing a SQLAlchemy Dialect&lt;/p&gt;
&lt;p&gt;(37:30) Dave Malcolm - Better Ways of Debugging the CPython Runtime&lt;/p&gt;
&lt;p&gt;(43:00) David Huggins-Daines - Recognizing Speech With Python
(&lt;a class="reference external" href="http://cmusphinx.sourceforge.net/"&gt;http://cmusphinx.sourceforge.net/&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;(48:00) Lucio Torre - Ubuntu One and Windows&lt;/p&gt;
</summary><category term="lightning talks"></category><category term="activestate"></category><category term="bigapps"></category><category term="cmusphinx"></category><category term="coverage.py"></category><category term="cpython"></category><category term="lawyers"></category><category term="programmingbook"></category><category term="pycon"></category><category term="pycon2010"></category><category term="python-cookbook"></category><category term="sqlalchemy"></category><category term="ubuntuone"></category></entry><entry><title>Sprox: data driven web development (#137)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--sprox--data-driven-web-development---.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Jorge L Vargas</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--sprox--data-driven-web-development---.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sprox: data driven web development&lt;/p&gt;
&lt;p&gt;Presented by Jorge L Vargas&lt;/p&gt;
&lt;p&gt;Sprox is a web frontend tool built to handle the creation and
manipulation of data.&lt;/p&gt;
&lt;p&gt;Sprox is smart about your data. You should never write repetitive code
again. Sane defaults and easy overwrites is what makes Sprox guess what
you need for your fields.&lt;/p&gt;
&lt;p&gt;This talk will give an overview of Sprox, what it does and how to use
it. Then we'll explore the available backends (SQLAlchemy, MongoDB) and
dive into the tgext.admin package, which is the &amp;quot;Admin Tool&amp;quot; for the
TurboGears2 framework.&lt;/p&gt;
</summary><category term="mongodb"></category><category term="pycon"></category><category term="pycon2010"></category><category term="sprox"></category><category term="sqlalchemy"></category></entry><entry><title>PyCon 2010:Advanced SQL Alchemy</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010-advanced-sql-alchemy.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Michael Bayer</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010-advanced-sql-alchemy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Advanced SQLAlchemy&lt;/p&gt;
&lt;p&gt;Presented by Michael Bayer&lt;/p&gt;
&lt;p&gt;SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the
full power of SQL while remaining easy to use for the basics, and is
flexible enough to work with existing database schemas as well as fresh
designs. SQLAlchemy is used in production by leading Python web
frameworks Pylons and TurboGears as well as many other web and non-web
developers.&lt;/p&gt;
&lt;p&gt;This tutorial discusses current data mapping techniques, advanced Query
techniques, Session/transaction usage, and maximizing schema usage with
SQLAlchemy's event model.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Python experience: intermediate. You should already have some hands-on
experience with Python and be comfortable reading modern Python code.&lt;/p&gt;
&lt;p&gt;SQL experience: intermediate. We will use subselects and outer joins as
part of the SQL layer.&lt;/p&gt;
&lt;p&gt;ORM experience: prior experience with SQLAlchemy is recommended.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;p&gt;Declarative Mapping&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Initial configuration&lt;/li&gt;
&lt;li&gt;Basic mapping&lt;/li&gt;
&lt;li&gt;Building a many-to-many relation&lt;/li&gt;
&lt;li&gt;Using late-evaluated configuration arguments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Advanced queries&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Selecting objects, selecting columns&lt;/li&gt;
&lt;li&gt;Thinking generatively&lt;/li&gt;
&lt;li&gt;Joining like a Pro&lt;/li&gt;
&lt;li&gt;Power Eager Loading&lt;/li&gt;
&lt;li&gt;Selecting from Anything&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Session Techniques&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Transaction lifecycle&lt;/li&gt;
&lt;li&gt;Scoping objects in and out of caches using merge()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inheritance Mapping&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Single Table Inheritance&lt;/li&gt;
&lt;li&gt;Joined Table Inheritance&lt;/li&gt;
&lt;li&gt;High Level/Low Level Joined Queries&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Extending SQL&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Creating new SQL constructs&lt;/li&gt;
&lt;li&gt;Creating new DDL constructs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Extending the ORM&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Using SessionExtension to populate denormalized views&lt;/li&gt;
&lt;li&gt;Subclassing Query to Suit Your Needs&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="advanced"></category><category term="pycon"></category><category term="pycon2010"></category><category term="sqlalchemy"></category><category term="tutorial"></category></entry></feed>