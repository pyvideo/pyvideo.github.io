<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_victor-couty.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-06T00:00:00+00:00</updated><entry><title>CRAPPY: un module pour le pilotage de systèmes multi-instrumentés</title><link href="https://pyvideo.org/pycon-fr-2018/crappy-un-module-pour-le-pilotage-de-systemes-multi-instrumentes.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Victor Couty</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/crappy-un-module-pour-le-pilotage-de-systemes-multi-instrumentes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;CRAPPY pour &amp;quot;Command and Real-time Acquisition in Parallelized PYthon&amp;quot;
est un module Python permettant de faire interagir des capteurs et des
actionneurs. Son développement est centré sur la polyvalence: il est
prévu pour permettre l'intégration d'un grand nombre d'éléments. Il est
déjà capable de gérer de nombreux dispositifs comme des caméras, moteurs
et cartes d'entrée/sorties mais il permet surtout l'ajout de nouveaux
objets dans le programme ou directement au sein du module de manière
simple. CRAPPY contient un certain nombre d'outils comme le correcteur
PID, le générateur de signaux ou l'attente de conditions, mais il permet
surtout l'utilisation de fonctions Python définies par l'utilisateur. Il
a été développé par le LaMcube (anciennement Laboratoire de Mécanique de
Lille) afin de permettre la mise en place d'essais mécaniques
multi-instrumentés. Au sein du laboratoire, nous développons et
utilisons CRAPPY aussi bien pour des applications simples comme le
pilotage d'un four par Raspberry Pi que sur des montages plus complexes,
par exemple un banc de simulation de freinage de train. Nous pensons que
par sa polyvalence, ce module a des applications bien au delà de la
recherche scientifique et cette présentation a pour objectif de faire
connaître ce module open-source et donner des exemples d'applications
réelles avec du matériel accessible. Le code est disponible à l'adresse
&lt;a class="reference external" href="https://github.com/LaboratoireMecaniqueLille/crappy"&gt;https://github.com/LaboratoireMecaniqueLille/crappy&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>