<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_justin-bozonier.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-07-24T00:00:00+00:00</updated><entry><title>Simplified statistics through simulation</title><link href="https://pyvideo.org/pydata-seattle-2015/simplified-statistics-through-simulation.html" rel="alternate"></link><published>2015-07-24T00:00:00+00:00</published><updated>2015-07-24T00:00:00+00:00</updated><author><name>Justin Bozonier</name></author><id>tag:pyvideo.org,2015-07-24:pydata-seattle-2015/simplified-statistics-through-simulation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will learn how to make valid statistical inferences using only Python/Numpy in a way that is easy to understand. You shouldn't need to put blind faith in your local statistical expert. This tutorial will show you how to use less theory and validate your methods concretely using simulation.&lt;/p&gt;
&lt;p&gt;When I started learning more about statistics I became very frustrated with the numerous specialized tests and statistical measures. They all have their place but they tend to make an already intimidating field even more intimidating. As a result, I began to figure out methods of validating what I was doing that were based more on repeatable simulation rather than theory. I was then able to show working code to fellow analysts that illustrated why I was doing the statistical analyses I was doing and they could replicate and tweak my simulations to explore the possibilities rather than debate. At it's heart, this is a tutorial about how to have more constructive conversations about statistical inference with your peers.&lt;/p&gt;
&lt;p&gt;I will walk attendees through the topic via an Python notebook and all charting will be done in front of them as well using either Seaborn or Matplotlib. The core of the topic revolves around using distributions of data in order to drive all of our inference. I will take a few minutes in the beginning to prove out (via simulation) that these simulations on the data distributions are perfectly equivalent to their probability distributions. In other words, a beta distribution can be modeled using a distribution of 0's and 1's, a normal distribution can be developed sampling means randomly from observed static data, etc.&lt;/p&gt;
&lt;p&gt;I will cover the following topics:
Simulations and Monte Carlo methods
Parametric vs. non-parametric statistical tests
Bootstrapping
Solve probability puzzles with simulation
Answer &amp;quot;How many samples does this experiment need?&amp;quot;
Find split test conversion lift using simulation
From here to bayesian statistics (quick shout out to PyMC)&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="https://github.com/jcbozonier/PyData2015"&gt;https://github.com/jcbozonier/PyData2015&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>