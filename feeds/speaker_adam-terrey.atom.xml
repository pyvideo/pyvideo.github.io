<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_adam-terrey.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-07-07T00:00:00+00:00</updated><entry><title>Easy site migration using Diazo and Funnelweb</title><link href="https://pyvideo.org/pycon-au-2011/easy-site-migration-using-diazo-and-funnelweb.html" rel="alternate"></link><published>2011-08-23T00:00:00+00:00</published><updated>2011-08-23T00:00:00+00:00</updated><author><name>Adam Terrey</name></author><id>tag:pyvideo.org,2011-08-23:pycon-au-2011/easy-site-migration-using-diazo-and-funnelweb.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Moving old sites into a new web platform is a pain. Often you need to
pull apart perfectly good HTML just to spend time painstakingly putting
back together again and converting hundreds of pages of content is a
chore. Recently PretaWeb used tools to drastically simplify this process
when converting genetics.edu.au to Plone 4.1. Diazo is a platform
independent theming engine that leaves HTML untouched. Funnelweb is a
static content migration tool for crawling and manipulating site
content.&lt;/p&gt;
</summary><category term="migration"></category><category term="plone"></category><category term="web"></category></entry><entry><title>The Framework Framework</title><link href="https://pyvideo.org/pycon-au-2013/the-framework-framework.html" rel="alternate"></link><published>2013-07-07T00:00:00+00:00</published><updated>2013-07-07T00:00:00+00:00</updated><author><name>Adam Terrey</name></author><id>tag:pyvideo.org,2013-07-07:pycon-au-2013/the-framework-framework.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;For when things should be pluggable... for when you want users to be
able to extend your app... what should you do? &amp;quot;I will write a
framework!&amp;quot;, I hear you say. No need to invent your own pluggable system
- use Component Architecture! The framework for frameworks (tested on
animals).&lt;/p&gt;
</summary></entry></feed>