<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-russia-2014.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-06-03T00:00:00+00:00</updated><entry><title>Behavior Driven Development in Python</title><link href="https://pyvideo.org/pycon-russia-2014/behavior-driven-development-in-python.html" rel="alternate"></link><published>2014-06-03T00:00:00+00:00</published><updated>2014-06-03T00:00:00+00:00</updated><author><name>Кирилл Борисов</name></author><id>tag:pyvideo.org,2014-06-03:pycon-russia-2014/behavior-driven-development-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;В докладе будет раскрыта суть behavior-driven подхода к разработке ПО: история возникновения, основы методологии, примеры сценариев, отличия от существующих подходов, имеющиеся инструменты для применения в Python-проектах. А так же опыт его внедрения, возникавшие проблемы и решения.&lt;/p&gt;
</summary></entry><entry><title>From __icontains to search</title><link href="https://pyvideo.org/pycon-russia-2014/from-__icontains-to-search.html" rel="alternate"></link><published>2014-06-03T00:00:00+00:00</published><updated>2014-06-03T00:00:00+00:00</updated><author><name>Honza Král</name></author><id>tag:pyvideo.org,2014-06-03:pycon-russia-2014/from-__icontains-to-search.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Good search experience is about more than just finding matching substring,
and in this talk I would like to present how it actually works. We will build
out a model of a search engine and analyze the result - what sort of functionality
and characteristics will the resulting engine have? What features can we implement
on top of it?&lt;/p&gt;
&lt;p&gt;Most of the talk will be generic but there will be some concrete examples from
Elasticsearch. At the end of the talk there will be time for questions regarding
anything search related.&lt;/p&gt;
</summary></entry><entry><title>Использование сервис-ориентированной архитектуры (SOA) для построения сложных веб проектов</title><link href="https://pyvideo.org/pycon-russia-2014/ispolzovanie-servis-orientirovannoi-arkhitektury-soa-dlia-postroeniia-slozhnykh-veb-proektov.html" rel="alternate"></link><published>2014-06-03T00:00:00+00:00</published><updated>2014-06-03T00:00:00+00:00</updated><author><name>Виталий Глибин</name></author><id>tag:pyvideo.org,2014-06-03:pycon-russia-2014/ispolzovanie-servis-orientirovannoi-arkhitektury-soa-dlia-postroeniia-slozhnykh-veb-proektov.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Расскажу о том, что такое SOA, какие проблемы решает, а какие добавляет.
Как мы готовим SOA в самом высоконагруженном job-портале рунета.
Frontik и tortik - настоящее и будущее наших frontend-фреймворков на базе Python Tornado.
Подробный рассказ о tortik - архитектура, возможности, тонкости.
Покажу примеры использования, удобство отладки и профилирования как в development окружении, так и в production.&lt;/p&gt;
</summary></entry><entry><title>Как не надо делать, чтобы ваш Open Source продукт стал пользоваться успехом</title><link href="https://pyvideo.org/pycon-russia-2014/kak-ne-nado-delat-chtoby-vash-open-source-produkt-stal-polzovatsia-uspekhom.html" rel="alternate"></link><published>2014-06-03T00:00:00+00:00</published><updated>2014-06-03T00:00:00+00:00</updated><author><name>Андрей Светлов</name></author><id>tag:pyvideo.org,2014-06-03:pycon-russia-2014/kak-ne-nado-delat-chtoby-vash-open-source-produkt-stal-polzovatsia-uspekhom.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Вы запилили нечто очень полезное и даже выложили на github.Только этим никто не пользуется.
Разбираем проблемы, ищем решение.
Чтобы на поделку обратили внимание нужны:
-- Социальность и публичность
-- Документация
-- Тесты
-- Система контроля версий (версии, релизы) и багтрекер
-- setup.py, pypi и readthedocs&lt;/p&gt;
&lt;p&gt;И, наконец, Программный Код.
-- Ясность интерфейсов и абстракций
-- Четкое разделение на Public API и детали реализации (напишешь пером - не вырубишь и топором)
-- Docstrings
-- Выбор хороших имен классов-методов
-- Естественная полнота Public API
-- Следование устоявшимся соглашениям
-- магические методы
-- collections.abc
-- предметная область или почему нельзя перегружать &amp;quot;+&amp;quot; для матрицы.&lt;/p&gt;
&lt;p&gt;Каждый пункт снабжен примерами и антипримерами.&lt;/p&gt;
</summary></entry><entry><title>Как писать для asyncio. Советы от разработчика библиотеки.</title><link href="https://pyvideo.org/pycon-russia-2014/kak-pisat-dlia-asyncio-sovety-ot-razrabotchika-biblioteki.html" rel="alternate"></link><published>2014-06-03T00:00:00+00:00</published><updated>2014-06-03T00:00:00+00:00</updated><author><name>Андрей Светлов</name></author><id>tag:pyvideo.org,2014-06-03:pycon-russia-2014/kak-pisat-dlia-asyncio-sovety-ot-razrabotchika-biblioteki.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;В Python 3.4 вошла стандартная библиотека asyncio для асинхронного сетевого программирования.
Она строилась с учетом опыта использования Twisted и Tornado, авторы этих библиотек принимали участие в обсуждениях и выработке концепций.
В результате получилось очень неплохо.
Тем не менее пока что мало информации по правильному использованию и написанию кода для asyncio -- по сути есть только документация и несколько постов в блогах.
Лекция включает
Обзор базовых примитивов и принципов построения пользовательского кода.
Какие части библиотеки предназначены для &amp;quot;простого программиста&amp;quot;
Что не нужно использовать, т.к. некоторые API слишком низкоуровневые и нужны только создания &amp;quot;человеческих&amp;quot; библиотек.&lt;/p&gt;
</summary></entry><entry><title>Python 3 and the Road Ahead</title><link href="https://pyvideo.org/pycon-russia-2014/python-3-and-the-road-ahead.html" rel="alternate"></link><published>2014-06-03T00:00:00+00:00</published><updated>2014-06-03T00:00:00+00:00</updated><author><name>Brian Curtin</name></author><id>tag:pyvideo.org,2014-06-03:pycon-russia-2014/python-3-and-the-road-ahead.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn where we're at with Python 3, where we're going, and how we'll get there.
The talk will include a recap of Python 3 discussions from the Python Language Summit as well as some of the ideas that came out of it.
There's a lot of talk around the community about what to do, and there are some plans to move forward. Find out what the future holds for Python 2.7 and the rest of the Python 3 series.
You'll also find out about some great resources to help your own projects along the way.&lt;/p&gt;
</summary></entry><entry><title>Python-разработка в части Яндекс-вселенной</title><link href="https://pyvideo.org/pycon-russia-2014/python-razrabotka-v-chasti-iandeks-vselennoi.html" rel="alternate"></link><published>2014-06-03T00:00:00+00:00</published><updated>2014-06-03T00:00:00+00:00</updated><author><name>Александр Кошелев</name></author><id>tag:pyvideo.org,2014-06-03:pycon-russia-2014/python-razrabotka-v-chasti-iandeks-vselennoi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Что выбрать – системные пакеты или выкатка через git pull? Использовать virtualenv или нет? Так ли удобны PyPI и pip? Что делать, когда много библиотечного in-house кода? Как справиться с большим количеством сервисов в активной разработке?
Я расскажу про то как в нашей части Яндекса мы разрабатываем сервисы на Python. Как мы пакетируем, тестируем и выкатываем проекты. Расскажу о проблемах и компромиссах. Поделюсь полезным опытом, который мы успели накопить за много лет.
Мой доклад будет интересен всем, кто так или иначе занимается выкаткой на один или много серверов, больших и не очень проектов, сложных сервисов и вообще любого python-кода.&lt;/p&gt;
</summary></entry><entry><title>Auto scaling on the Cloud the right way</title><link href="https://pyvideo.org/pycon-russia-2014/auto-scaling-on-the-cloud-the-right-way.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Simone Soldateschi</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/auto-scaling-on-the-cloud-the-right-way.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Horizontal scaling on the Cloud is the way to adapt resources to load of systems. The Cloud allows users to scale virtually indefinitely, or enough for their needs.
This way the number of servers follows trend of requests, and TCO (Total Cost of Owneship) of IT infrastructure can be minimised. Nonetheless companies can avoid dealing with capacity planning and pre-provisioning issues.
This talk will show how to use Python and Rackspace/OpenStack API and SDK to implement an event-based scaling solution (software released under the open-source Apache License).
The outline of this talk will be:
- Auto scale (Why, What, When, How);
- Leveraging Cloud Monitoring to trigger Auto Scale policies;
- Configuration management system (Ansible and playbooks) to deploy applications;
- &amp;quot;Go Live!&amp;quot;, &amp;quot;Update&amp;quot; and &amp;quot;Rollback&amp;quot; patterns.
Outcome: Knowledge of scaling techniques, Cloud patterns and issues.&lt;/p&gt;
</summary></entry><entry><title>Извлечение информации из веб-страниц</title><link href="https://pyvideo.org/pycon-russia-2014/izvlechenie-informatsii-iz-veb-stranits.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Михаил Коробов</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/izvlechenie-informatsii-iz-veb-stranits.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Рассказ о том, как извлеченть данные из веб-страниц с использованием Python:
- как извлечь информацию из одного-единственного сайта;
- как сделать это без написания xpath, css селекторов и т.д.;
- как извлекать информацию, если структура сайта неизвестна заранее;
- когда стоит применять методы машинного обучения и как это делать;
- какие инструменты доступны на Python.
Доклад рассчитан на тех людей, кому хочется извлекать какую-то структурированную информацию из веб-страниц или из текста. Это могут быть задачи информационного поиска, анализа данных, составления каталогов, получения информации для каких-то исследований и т.д.
Какую пользу слушатели получат?
&amp;quot;Ручной&amp;quot; разбор веб-страниц через XPath / CSS селекторы - не единственный инструмент. Возможно, некоторые задачи, которые раньше казались очень сложными, покажутся вполне решаемыми.&lt;/p&gt;
</summary></entry><entry><title>Lightning talks - 1</title><link href="https://pyvideo.org/pycon-russia-2014/lightning-talks-1.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/lightning-talks-1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyCon Russia 2014 first day lightning talks&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Lightning talks - 2</title><link href="https://pyvideo.org/pycon-russia-2014/lightning-talks-2.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/lightning-talks-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyCon Russia 2014 second day lightning talks&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Многозадачность в Python и других языках</title><link href="https://pyvideo.org/pycon-russia-2014/mnogozadachnost-v-python-i-drugikh-iazykakh.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Андрей Власовских</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/mnogozadachnost-v-python-i-drugikh-iazykakh.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;В Python существует долгая традиция заимствования механизмов многозадачности из других языков.
Вначале это были C и окружение POSIX, затем Java и C#.
В докладе будет рассказано о том, как устроены и чего позволяют достичь механизмымногозадачности в Python, включая новые механизмы Python 3 concurrent.futures и asyncio.
Мы рассмотрим какие механизмы подходят для задач, ограниченных по CPU и IO, в частности, какими преимуществами и недостатками обладают механизмы в Python.
Наконец мы поговорим о том, какие подходы к многозадачности есть в языках Erlang и Go и насколько они применимы к Python.&lt;/p&gt;
</summary></entry><entry><title>На что уходит память?</title><link href="https://pyvideo.org/pycon-russia-2014/na-chto-ukhodit-pamiat.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Константин Лопухин</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/na-chto-ukhodit-pamiat.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Я хочу поговорить о проблеме потребления памяти приложений на Python - как понять что происходит, и что делать, когда оно больше чем нам хотелось бы.
Сначала мы посмотрим, как вообще Python работает с памятью внутри, как он взаимодействует с ОС, может ли он отдавать память.
Затем рассмотрим инструменты для анализа потребления памяти, и научимся интерпретировать их результат.
Разберем типичные ошибки, которые приводят к излишнему потреблению памяти, рассмотрим некоторые приемы, которые могут позволить его уменьшить даже при отсутствии явных ляпов.
В отличие от темы анализа производительности, на тему анализа потребления памяти на удивление мало материала, в основном только ответы на stackoverflow, поэтому хочется попробовать систематизировать то, что удалось узнать.&lt;/p&gt;
</summary></entry><entry><title>Нагрузочное тестирование с помощью Яндекс.Танка</title><link href="https://pyvideo.org/pycon-russia-2014/nagruzochnoe-testirovanie-s-pomoshchiu-iandekstanka.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Алексей Лавренюк</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/nagruzochnoe-testirovanie-s-pomoshchiu-iandekstanka.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Мы поговорим о нагрузочном тестировании, open source инструменте Яндекс.Танк и о том, как заточить его для своих нужд и автоматизировать процесс тестирования с помощью Python.
Доклад рассчитан на разработчиков и системных администраторов, которые предвидят или уже столкнулись с проблемами производительности и хотят познакомиться с процессом нагрузочного тестирования и инструментами.
Люди узнают о процессе нагрузочного тестирования, о том, подходит ли Яндекс.Танк для выявления проблем производительности их сервисов и о том, как расширить Яндекс.Танк для автоматизации и решения своих специфических задач.&lt;/p&gt;
</summary></entry><entry><title>Почему Python нужен (был) свой underscore</title><link href="https://pyvideo.org/pycon-russia-2014/pochemu-python-nuzhen-byl-svoi-underscore.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Александр Щепановский</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/pochemu-python-nuzhen-byl-svoi-underscore.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Такие библиотеки как funcy и underscore часто связывают с функциональным программированием, но настоящий их фокус - это практичность.
Задача funcy - упростить манипулирование данными, коллекциями, функциями и даже потоком управления, а также абстрагировать часто встречащиеся полезные поведения.
В своём докладе я приведу жизненные примеры использования всего этого, а также расскажу об идеях заложенных в и продвигаемых funcy.
Доклад рассчитан на всех, кто пишет на питоне, а также интересуется другими языками и парадигмами. Задача минимум - познакомить с библиотекой.
Максимум - заставить по новому взглянуть на язык и на решаемые задачи.&lt;/p&gt;
</summary></entry><entry><title>Понятные и расширяемые отчеты для Python+PyTest из коробки</title><link href="https://pyvideo.org/pycon-russia-2014/poniatnye-i-rasshiriaemye-otchety-dlia-pythonpytest-iz-korobki.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Денис Чернилевский</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/poniatnye-i-rasshiriaemye-otchety-dlia-pythonpytest-iz-korobki.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;В любом проекте, в котором есть автоматизированное тестирование, люди сталкиваются с проблемой построения удобных, понятных, легко расширяемых и красивых отчетов для тестов.
При этом часто команды не используют стандартный xUnit формат и его представление по-умолчанию в системах CI, например в Jenkins, а пишут свой формат отчетов.
Проанализировав требования некоторого числа команд тестирования, мы внутри Яндекса разработали инструмент построения отчетов Allure Framework, который сейчас является open source проектом.
Он может применяться в разных системах тестирования и языках программирования, с помощью механизма адапторов.
В этом докладе я на примерах расскажу об основных фичах этого инструмента и о том, как из коробки внедрить Allure отчеты с помощью готового python адаптора, если вы пользуетесь Python + PyTest.&lt;/p&gt;
</summary></entry><entry><title>Pony ORM - маппер нового поколения</title><link href="https://pyvideo.org/pycon-russia-2014/pony-orm-mapper-novogo-pokoleniia.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Алексей Малашкевич</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/pony-orm-mapper-novogo-pokoleniia.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pony ORM - маппер, который позволяет работать с базой данных с помощью генераторных выражений языка Питон.
С помощью такого подхода Pony позволяет формулировать очень компактные и понятные запросы, которые автоматически транслируются в оптимизированный SQL.
Pony обладает графическим редактором ER диаграмм - удобным инструментом для создания и редактирования модели данных.
В докладе разработчики Pony ORM расскажут про процесс перевода объектно-ориентированного запроса в запрос на языке SQL, о том, какие оптимизации Pony применяет на каждом этапе обработки запроса, какие сложности стояли при разработке высокопроизводительного ORM и как Pony ORM облегчает и ускоряет разработку приложений.&lt;/p&gt;
&lt;p&gt;На второй день всех заинтересовавшихся докладом ждет практический мастер-класс, в котором Pony можно будет попробовать использовать самому.&lt;/p&gt;
</summary></entry><entry><title>Python для анализа данных.</title><link href="https://pyvideo.org/pycon-russia-2014/python-dlia-analiza-dannykh.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Роман Иманкулов</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/python-dlia-analiza-dannykh.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;В последнее время анализ данных стал горячей темой.
В  этом плане python разработчики по сравнению с остальными кастами программистов находятся в выгодном положении  —  в их распоряжении есть как несомненно прекрасный язык общего назначения, так и множество инструментов для научной обработки данных.
О последних многие слышали, но мало кто знает, как этим пользоваться, и какую пользу они могут принести простым смертным.
В докладе я познакомлю слушателей с основными инструментами для обработки данных: всемогущим ipython, библиотеками numpy, scipy, pandas и scikit-learn. В ходе ознакомления с ними на простом примере мы выясним, какую пользу для себя начинающий python аналитик может извлечь прямо сейчас.
Доклад расчитан как на начинающих, так и на опытных разработчиков на python, которые, тем не менее, не имели серьезного опыта анализа данных, хотят попробовать, но не знают с чего начать.&lt;/p&gt;
</summary></entry><entry><title>Разработка мобильных приложений на Python</title><link href="https://pyvideo.org/pycon-russia-2014/razrabotka-mobilnykh-prilozhenii-na-python.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Дмитрий Овчинников</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/razrabotka-mobilnykh-prilozhenii-na-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Мобильная разработка на Python
Python для мобильных девайсов
Обзор похожих продуктов
Kivy — птица или фрукт?
Один код на разных платформах (Не Java)
Знакомимся с фреймворком
Как это работает?
Разметка UI на &amp;quot;почти&amp;quot; python
Сборка приложения с помощью Buildozer'а&lt;/p&gt;
</summary></entry><entry><title>The Sorry State of SSL</title><link href="https://pyvideo.org/pycon-russia-2014/the-sorry-state-of-ssl.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Hynek Schlawack</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/the-sorry-state-of-ssl.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Those web pages with shiny lock icons boasting that your data is safe because of “256 bit encryption”? They are lying. In times of mass surveillance and commercialized Internet crime you should know why that’s the case. This talk will give you an overview that will help you to assess your personal security more realistically and to make your applications as secure as possible against all odds.
The rule of thumb for people without degrees in cryptography on securing data on the Internet is “GPG for data at rest. TLS for data in motion”. And it’s actually a very good rule everyone should follow.
The only kicker though is that configuring (and using!) TLS properly is not as simple as it sounds and if you’re not diligent as a user, developer, and ops engineer, you can easily compromise your data’s security despite best effort of everyone else.
This talk will be multifaceted; you will learn:
- how SSL and TLS roughly work and why their state is sorry,
- server- and client-side duties for best possible security,
- what alternatives you have for using TLS in Python,
- things to keep in mind when configuring servers,
- and what perils outside your control still can trip you up.
In other words, the leitmotif is to show you the most common traps you should know about when using and deploying applications relying on TLS for transport layer security and how to avoid them.&lt;/p&gt;
</summary></entry><entry><title>Выжимаем максимум из шаблонизатора</title><link href="https://pyvideo.org/pycon-russia-2014/vyzhimaem-maksimum-iz-shablonizatora.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Виктор Коцеруба</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/vyzhimaem-maksimum-iz-shablonizatora.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Основное, чему в выступлении уделяется внимание – возможность просчета многих вещей, порождаемых метапрограммированием, заранее.
Пример для наглядной демонстрации - [hamly](&lt;a class="reference external" href="https://github.com/barbuza/hamly"&gt;https://github.com/barbuza/hamly&lt;/a&gt;), шаблонизатор, в несколько раз обгоняющий jinja2 (который обычно считают самым быстрым из доступных на python).
Будут рассмотрены несколько типовых кейсов применения оптимизаций и общая логика поиска новых.&lt;/p&gt;
</summary></entry><entry><title>Writing Secure APIs</title><link href="https://pyvideo.org/pycon-russia-2014/writing-secure-apis.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Armin Ronacher</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/writing-secure-apis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An introduction into writing secure APIs with Python.  This covers both integral API design for internal APIs as well as remotely exposed APIs; both high level basics such as use of protocols (SSL and OAuth) as well as how to structure internal security contexts.  On top of that it shows how to take advantage of Python features to make writing secure code easier.&lt;/p&gt;
</summary></entry></feed>