<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Miroslav Šedivý</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_miroslav-sedivy.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-10-01T00:00:00+00:00</updated><subtitle></subtitle><entry><title>A Day Has Only 24±1 Hours</title><link href="https://pyvideo.org/europython-2019/a-day-has-only-24-1-hours.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2019-07-11:/europython-2019/a-day-has-only-24-1-hours.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;On the last Sunday of October you may get “one more hour of sleep” but
as well may spend much more time debugging code dealing with the time
zones, daylight saving time shifts and datetime stuff in general.&lt;/p&gt;
&lt;p&gt;We'll look at a few pitfalls you may encounter when working …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;On the last Sunday of October you may get “one more hour of sleep” but
as well may spend much more time debugging code dealing with the time
zones, daylight saving time shifts and datetime stuff in general.&lt;/p&gt;
&lt;p&gt;We'll look at a few pitfalls you may encounter when working with
datetimes in Python. We'll dissect the pytz library, explain why it
contains over 500 individual time zones while focusing on the 63 entries
in Europe. We'll also find the reason why pytz is not part of the
standard Python, why it gets updated so often and why even that won't
solve all your problems. Do you know what happens after 2021 when the EU
stops DST switching?&lt;/p&gt;
&lt;p&gt;Two centuries of short-sighted propaganda and long-term chaos in
forty-five minutes. Maybe that will make you want to avoid time zones in
your code altogether!&lt;/p&gt;
</content><category term="EuroPython 2019"></category><category term="Best Practice"></category><category term="Community"></category><category term="Python general"></category><category term="failures/mistakes"></category></entry><entry><title>Lightning talks on Wednesday, July 10</title><link href="https://pyvideo.org/europython-2019/lightning-talks-on-wednesday-july-10.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Radomir Dopieralski</name></author><id>tag:pyvideo.org,2019-07-10:/europython-2019/lightning-talks-on-wednesday-july-10.html</id><content type="html"></content><category term="EuroPython 2019"></category></entry><entry><title>Your Name Is Invalid!</title><link href="https://pyvideo.org/europython-2020/your-name-is-invalid.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/your-name-is-invalid.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Names of people cannot be invalid. Your app shouldn't.&lt;/p&gt;
&lt;p&gt;People have names. Most people do. People have first names and last names. Many people do. People have any sorts of names that often don't fit fixed fields in the forms. These names may contain letters, accented letters, and other …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Names of people cannot be invalid. Your app shouldn't.&lt;/p&gt;
&lt;p&gt;People have names. Most people do. People have first names and last names. Many people do. People have any sorts of names that often don't fit fixed fields in the forms. These names may contain letters, accented letters, and other characters, that may cause problems to your code depending on the encoding you use. They may look differently in uppercase and lowercase, or may not be case foldable at all. Searching and sorting these names may be tricky too. And if you design an application, web form, and/or database dealing with personal names, you'll have to take that into account.&lt;/p&gt;
&lt;p&gt;This talk is not about GDPR, but will help you to use the best tools to handle encoding and locales in Python and prevent your application from appearing in my talk and in uxfails memes.&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Diversity"></category><category term="Internationalization"></category><category term="Natural Language Processing"></category><category term="The Answer to Life the Universe and Everything Else"></category><category term="failures/mistakes"></category></entry><entry><title>"Your Name Is Invalid!" - Miroslav Šedivý (PyCascades 2021)</title><link href="https://pyvideo.org/pycascades-2021/your-name-is-invalid-miroslav-sedivy-pycascades-2021.html" rel="alternate"></link><published>2021-02-20T00:00:00+00:00</published><updated>2021-02-20T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2021-02-20:/pycascades-2021/your-name-is-invalid-miroslav-sedivy-pycascades-2021.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is not about GDPR, but will help you to use the best tools to handle encoding and locales in Python and prevent your application from appearing in my talk and in uxfails memes.&lt;/p&gt;
&lt;p&gt;After three amazing in-person conferences, this time we're moving PyCascades online.&lt;/p&gt;
&lt;p&gt;PyCascades is a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is not about GDPR, but will help you to use the best tools to handle encoding and locales in Python and prevent your application from appearing in my talk and in uxfails memes.&lt;/p&gt;
&lt;p&gt;After three amazing in-person conferences, this time we're moving PyCascades online.&lt;/p&gt;
&lt;p&gt;PyCascades is a regional PyCon in the Pacific Northwest, celebrating the west coast Python developer and user community. Our organizing team includes members of the Vancouver, Seattle, and Portland Python user groups.&lt;/p&gt;
&lt;p&gt;Videos are released as CC BY-NC-SA 4.0.&lt;/p&gt;
&lt;p&gt;Produced by Next Day Video Australia: &lt;a class="reference external" href="https://nextdayvideo.com.au"&gt;https://nextdayvideo.com.au&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#pycascades #pycon #python #conference&lt;/p&gt;
&lt;p&gt;Sat Feb 20 10:25:00 2021 at Prerecorded Talks&lt;/p&gt;
</content><category term="PyCascades 2021"></category><category term="#pycascades#pycon#python#conference"></category><category term="pycascades"></category><category term="pycascades2021"></category></entry><entry><title>PyTables: How to Store Large Datasets</title><link href="https://pyvideo.org/pycon-belarus-2018/pytables-how-to-store-large-datasets.html" rel="alternate"></link><published>2018-02-24T00:00:00+00:00</published><updated>2018-02-24T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2018-02-24:/pycon-belarus-2018/pytables-how-to-store-large-datasets.html</id><content type="html"></content><category term="PyCon Belarus 2018"></category></entry><entry><title>Vim your Python, Python your Vim</title><link href="https://pyvideo.org/pycon-de-2017/vim-your-python-python-your-vim.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2017-10-25:/pycon-de-2017/vim-your-python-python-your-vim.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Miroslav Šedivý&lt;/strong&gt; (&amp;#64;eumiro)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What do you use to write source code, docs, books or e-mails? Single brain, single pair of hands, single keyboard, but a different keyboard layout for each language and a different text editor for each purpose?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Do you use an IDE to work on …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Miroslav Šedivý&lt;/strong&gt; (&amp;#64;eumiro)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What do you use to write source code, docs, books or e-mails? Single brain, single pair of hands, single keyboard, but a different keyboard layout for each language and a different text editor for each purpose?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Do you use an IDE to work on Python code, then switch to an e-mail client to write a message, then open a different editor to work on the documentation and finally ssh to a remote server to edit a configuration file? Do you switch languages frequently or are your colleagues named Müller, François, Muñoz or even Šedivý?&lt;/p&gt;
&lt;p&gt;I'll show you how I am happily typing in several languages on a single standard US keyboard layout and why my CapsLock became so useful.&lt;/p&gt;
&lt;p&gt;I'll show you how I use a single editor on all my machines to produce all sorts of text, especially Python code with a few useful plugins.&lt;/p&gt;
&lt;p&gt;I'll show you my own plugin written in Python to hack my e-mails far beyond imagination.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</content><category term="PyCon DE 2017"></category><category term="ide"></category><category term="neovim"></category><category term="vim"></category><category term="editor"></category><category term="python"></category></entry><entry><title>A Day Has Only 24±1 Hours: import pytz</title><link href="https://pyvideo.org/pycon-de-2018/a-day-has-only-24-1-hours-import-pytz.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2018-10-24:/pycon-de-2018/a-day-has-only-24-1-hours-import-pytz.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;On the last Sunday of October “we get one more hour of sleep” but may
spend much more time debugging code dealing with the timezones, daylight
saving time shifts and datetime stuff in general.&lt;/p&gt;
&lt;p&gt;We'll look at a few pitfalls you may encounter when working with
datetimes in Python …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;On the last Sunday of October “we get one more hour of sleep” but may
spend much more time debugging code dealing with the timezones, daylight
saving time shifts and datetime stuff in general.&lt;/p&gt;
&lt;p&gt;We'll look at a few pitfalls you may encounter when working with
datetimes in Python. We'll discover the &lt;tt class="docutils literal"&gt;pytz&lt;/tt&gt; module and explain why
&lt;tt class="docutils literal"&gt;pytz.all_timezones&lt;/tt&gt; contains over 500 individual timezones. We'll
also find the reason why &lt;tt class="docutils literal"&gt;pytz&lt;/tt&gt; is not part of the standard Python,
why it gets updated so often and why even that won't solve all your
problems.&lt;/p&gt;
</content><category term="PyCon DE 2018"></category><category term="Data Science"></category><category term="Science"></category></entry><entry><title>Vim your Python, Python your Vim</title><link href="https://pyvideo.org/pycon-italia-2018/vim-your-python-python-your-vim.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2018-04-20:/pycon-italia-2018/vim-your-python-python-your-vim.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What do you use to write source code, docs, books or e-mails? Single
brain, single pair of hands, single keyboard, but a different keyboard
layout for each language and a different text editor for each purpose?&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Do you use an IDE to work on Python code, then switch to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What do you use to write source code, docs, books or e-mails? Single
brain, single pair of hands, single keyboard, but a different keyboard
layout for each language and a different text editor for each purpose?&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Do you use an IDE to work on Python code, then switch to an e-mail
client to write a message, then open a different editor to work on the
documentation and finally ssh to a remote server to edit a configuration
file? Do you switch languages frequently or are your colleagues named
Müller, François, Muñoz or even Šedivý?&lt;/p&gt;
&lt;p&gt;I’ll show you how I am happily typing in several languages on a single
standard US keyboard layout and why my CapsLock became so useful.&lt;/p&gt;
&lt;p&gt;I’ll show you how I use a single editor on all my machines to produce
all sorts of text, especially Python code with a few useful plugins.&lt;/p&gt;
&lt;p&gt;I’ll show you my own plugin written in Python to hack my e-mails far
beyond imagination.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 17:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon Italia 2018"></category><category term="neovim"></category><category term="vim"></category><category term="editor"></category><category term="keyboard"></category><category term="internationalization"></category><category term="python3"></category></entry><entry><title>A Day Has Only 24±1 Hours</title><link href="https://pyvideo.org/pycon-sk-2019/a-day-has-only-24-1-hours.html" rel="alternate"></link><published>2019-03-22T00:00:00+00:00</published><updated>2019-03-22T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2019-03-22:/pycon-sk-2019/a-day-has-only-24-1-hours.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Not only will the Sunday in the week after this PyCon.SK 2019 be one
hour shorter, but also it may steal you even more sleep because of all
your Python code that has to work smoothly during daylight saving time
changes or otherwise manipulate time zones. While correct …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Not only will the Sunday in the week after this PyCon.SK 2019 be one
hour shorter, but also it may steal you even more sleep because of all
your Python code that has to work smoothly during daylight saving time
changes or otherwise manipulate time zones. While correct working with
datetime objects and offsets can be mastered, you have no control of the
information on local time zones. Exclusive domain of geographers one
hundred years ago, the time zones adjustments became a toy in the hands
of governments all around the world.&lt;/p&gt;
&lt;p&gt;After a short overview of Pythons datetime and pytz libraries you'll
learn how the information on time zone changes gets into your system.
We'll fly quickly around the world's over five hundred time zones, but
will also focus on the case of Slovakia and surrounding countries. Two
centuries of propaganda and chaos in thirty minutes. Maybe that will
make you want to avoid time zones in your code altogether!&lt;/p&gt;
</content><category term="PyCon SK 2019"></category></entry><entry><title>Your Name is Invalid!</title><link href="https://pyvideo.org/pydata-berlin-2019/your-name-is-invalid.html" rel="alternate"></link><published>2019-10-11T00:00:00+00:00</published><updated>2019-10-11T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2019-10-11:/pydata-berlin-2019/your-name-is-invalid.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Miroslav Šedivý&lt;/p&gt;
&lt;p&gt;Track:PyData
About people with first names, middle names, last names, one-word names, multiple names, and changing names, about names with characters beyond ASCII, and about using Python to handle them correctly, because names of people cannot be invalid.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Miroslav Šedivý&lt;/p&gt;
&lt;p&gt;Track:PyData
About people with first names, middle names, last names, one-word names, multiple names, and changing names, about names with characters beyond ASCII, and about using Python to handle them correctly, because names of people cannot be invalid.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/ZNA8WN"&gt;https://de.pycon.org/program/ZNA8WN&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</content><category term="PyData Berlin 2019"></category></entry><entry><title>There Are Python 2 Relics in Your Code</title><link href="https://pyvideo.org/pygotham-2021/there-are-python-2-relics-in-your-code.html" rel="alternate"></link><published>2021-10-01T00:00:00+00:00</published><updated>2021-10-01T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2021-10-01:/pygotham-2021/there-are-python-2-relics-in-your-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Should we return to Python 2? No? Then why don't you get rid of those Python
2 relics from your code?&lt;/p&gt;
&lt;p&gt;Migration to Python 3 is over, but that's not the end of the journey.
Although your code runs with the currently supported Python 3.6 to 3.9 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Should we return to Python 2? No? Then why don't you get rid of those Python
2 relics from your code?&lt;/p&gt;
&lt;p&gt;Migration to Python 3 is over, but that's not the end of the journey.
Although your code runs with the currently supported Python 3.6 to 3.9 (and
upcoming 3.10), there may be some pieces of code that look obvious to you,
but may surprise younger developers who have never seen Python 2 code.&lt;/p&gt;
&lt;p&gt;Earlier this year, I helped dozens of Python projects on GitHub to get rid
of those Python 2 relics. I'll show you a few recipes beyond the automatic
tools, how to make your code modern and prepared for future updates.&lt;/p&gt;
&lt;p&gt;And no, we should not return to Python 2. We should get rid of it
completely.&lt;/p&gt;
</content><category term="PyGotham 2021"></category></entry><entry><title>A Day Has Only 24±1 Hours</title><link href="https://pyvideo.org/pyohio-2020/a-day-has-only-24-1-hours.html" rel="alternate"></link><published>2020-07-25T00:00:00+00:00</published><updated>2020-07-25T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2020-07-25:/pyohio-2020/a-day-has-only-24-1-hours.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;On the first Sunday of November you may get “one more hour of sleep” but
as well may spend much more time debugging code dealing with the time
zones, daylight saving time shifts and datetime stuff in general. We'll
look at a few pitfalls you may encounter when working …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;On the first Sunday of November you may get “one more hour of sleep” but
as well may spend much more time debugging code dealing with the time
zones, daylight saving time shifts and datetime stuff in general. We'll
look at a few pitfalls you may encounter when working with datetimes in
Python. We'll dissect the pytz library, explain why it contains over 400
individual time zones while focusing on the 29 entries in the USA. We'll
also find the reason why pytz is not part of the standard Python, why it
gets updated so often and why even that won't solve all your problems.
And no, PEP 615 will not save you either. Two centuries of short-sighted
propaganda and long-term chaos in ten minutes. Maybe that will make you
want to avoid time zones in your code altogether!&lt;/p&gt;
</content><category term="PyOhio 2020"></category></entry><entry><title>Vim Your Python, Python Your Vim</title><link href="https://pyvideo.org/pyparis-2018/vim-your-python-python-your-vim.html" rel="alternate"></link><published>2018-11-14T00:00:00+00:00</published><updated>2018-11-14T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2018-11-14:/pyparis-2018/vim-your-python-python-your-vim.html</id><content type="html"></content><category term="PyParis 2018"></category></entry></feed>