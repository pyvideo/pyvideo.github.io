<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_nic-crouch.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-08-29T00:00:00+00:00</updated><entry><title>Are they ready? A quick review of graph databases and Python</title><link href="https://pyvideo.org/pycon-au-2015/are-they-ready-a-quick-review-of-graph-databases.html" rel="alternate"></link><published>2015-08-29T00:00:00+00:00</published><updated>2015-08-29T00:00:00+00:00</updated><author><name>Nic Crouch</name></author><id>tag:pyvideo.org,2015-08-29:pycon-au-2015/are-they-ready-a-quick-review-of-graph-databases.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Graph databases store, retrieve and process data that takes the form of
a graph: a network of nodes and the relationships between them. As one
of the fastest growing database models over the past two years, they
promise a number of fantastic outcomes including increased performance,
faster development, and cleaner code. Vendors also boast of large
corporate deployments throughout the US and Europe.&lt;/p&gt;
&lt;p&gt;So, are graph databases as good as they sound? How can we use them with
Python?&lt;/p&gt;
&lt;p&gt;This talk will review a couple of the most popular graph databases
including Neo4J, Titan and OrientDB. The focus will be on interacting
with each database as Pythonically as possible – using Python APIs as
much as possible. Along the way it will give an idea of ease of use,
speed, documentation quality and stability, as well as any other
challenges or tricks that found along the way. It isn’t a tutorial –
there’s not enough time, and those exist elsewhere – but instead more of
an introduction to what is out there and what you can do with it.&lt;/p&gt;
&lt;p&gt;At the end of the talk, you will have an idea of what it takes to get
started with Graph Databases in Python, and also an idea of which
toolset you want to use. You’ll also have an idea of the sorts of
problems which map well to graph databases, and which ones may be better
suited to other storage and processing methods.&lt;/p&gt;
&lt;p&gt;You won’t need to have a background in graphs or even a lot of Python
experience to get through this talk. However, it’s always good to have a
potential application in mind.&lt;/p&gt;
</summary></entry><entry><title>Software Carpentry - Expansion and Partnerships in 2015</title><link href="https://pyvideo.org/pycon-au-2015/software-carpentry-expansion-and-partnerships-i.html" rel="alternate"></link><published>2015-08-04T00:00:00+00:00</published><updated>2015-08-04T00:00:00+00:00</updated><author><name>Nic Crouch</name></author><id>tag:pyvideo.org,2015-08-04:pycon-au-2015/software-carpentry-expansion-and-partnerships-i.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Software Carpentry Foundation is an international volunteer
organisation that teaches basic programming skills to researchers in
science, engineering, medicine and other disciplines. Further, the
foundation maintains a wealth of open-source, open-access teaching
materials for a several programming related topics, including Python,
the Unix shell, Git, SQL, R and Matlab.&lt;/p&gt;
&lt;p&gt;Lessons from Software Carpentry are usually delivered in the form of two
day workshops. Taught by trained instructors, these workshops cover
automation of repetitive tasks using the shell, building modular and
testable programs using Python or R and using version control to build
software in a collaborative and efficient manner. Furthermore, workshops
may be expanded, covering topics such as SQL and the use of databases to
reliably store and maintain data. Though of course it is impossible to
train expert programmers in two days, Software Carpentry has had great
success in teaching ‘just enough’ to researchers that they can then
return to the lab with a strong foundation of skills to build from.&lt;/p&gt;
&lt;p&gt;This presentation will focus on the major progress that has been made by
Software Carpentry in Australia and worldwide since PyCon-Au 2014. In
particular, the pool of Australian instructors has dramatically
increased through the live training session held as part of the Research
Bazaar conference held at Melbourne University in February. As such, the
presentation will be somewhat meta – answering the question ‘What are
the educational principles and techniques you should know before
attempting to teach novice programmers?’ The Software Carpentry lesson
content has also evolved in the last 12 months, with the lesson content
expanding to such topics as the use of Pandas and the more effective use
of the iPython Notebook to work with data and visualisation. These
changes allow Software Carpentry to cater to a broader audience of
researchers. There will also be some discussion of the Research Bazaar
conference, which partnered with Software Carpentry this year to not
only train instructors, but also run a series of other ‘basic skills’
workshops for researchers. Finally, there is an interesting sister
organisation of Software Carpentry, known as Data Carpentry, which
focuses on improving the way researchers work with and store their data.&lt;/p&gt;
</summary></entry></feed>