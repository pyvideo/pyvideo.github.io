<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 21 Apr 2018 00:00:00 +0000</lastBuildDate><item><title>Programming physics games with Python and OpenGL</title><link>https://pyvideo.org/europython-2013/programming-physics-games-with-python-and-opengl.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Pope</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/programming-physics-games-with-python-and-opengl.html</guid><category>graphics</category><category>physics</category><category>game-development</category><category>opengl</category></item><item><title>Using iPython Notebook in the Classroom</title><link>https://pyvideo.org/europython-2013/using-ipython-notebook-in-the-classroom.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anders Lehmann</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/using-ipython-notebook-in-the-classroom.html</guid><category>Pedagogical learning</category><category>iPython</category><category>education</category><category>physics</category><category>Learning environment</category><category>interactive</category></item><item><title>GPU-accelerated data analysis in Python: a study case in Material Sciences</title><link>https://pyvideo.org/pycon-italia-2018/gpu-accelerated-data-analysis-in-python-a-study-case-in-material-sciences.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Max Planck Computing and Data Facility is engaged in the development
and optimization of algorithms and applications for high performance
computing as well as for data-intensive projects. As programming
language in data science, Python is now used at MPCDF in the scientific
area of “atom probe crystallography” (APT): a Fourier analysis in 3D
space can be simulated in order to reveal composition and
crystallographic structure at the atomic scale of billions APT
experimental data sets.&lt;/p&gt;
&lt;p&gt;The Python data ecosystem has proved to be well suited to this, as it
has grown beyond the confines of single machines to embrace scalability.
The talk aims to describe our approach to scaling across multiple GPUs,
and the role of visualization methods too.&lt;/p&gt;
&lt;p&gt;Our data workflow analysis relies on the GPU-accelerated Python software
package PyNX, an open source library which provides fast parallel
computation scattering. The code takes advantage of the high throughput
of GPUs, using the pyCUDA library.&lt;/p&gt;
&lt;p&gt;Exploratory data analysis, high productivity and rapid prototyping with
high performance are enabled through Jupyter Notebooks and Python
packages e.g., pandas, matplotlib/plotly. In production stage,
interactive visualization is realized by using standard scientific tool,
e.g. Paraview, an open-source 3D visualization program which requires
Python modules to generate visualization components within VTK files.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 14:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giuseppe Di Bernardo</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:pycon-italia-2018/gpu-accelerated-data-analysis-in-python-a-study-case-in-material-sciences.html</guid><category>GPUComputing</category><category>visualization</category><category>mathematical-modelling</category><category>image-processing</category><category>bigdata</category><category>matplotlib</category><category>analytics</category><category>data-visualization</category><category>data-analysis</category><category>Data Mining</category><category>scientific-computing</category><category>physics</category><category>python3</category></item><item><title>Theoretical physics with sympy</title><link>https://pyvideo.org/pycon-de-2017/theoretical-physics-with-sympy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Florian Thöle&lt;/strong&gt; (&amp;#64;florian_thl)&lt;/p&gt;
&lt;p&gt;PhD student in Computational Materials Science. Enthusiastic about teaching. Instructor for Software Carpentry.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this talk, I will introduce the basics of sympy. Using a simple model system in magnetism, we'll play around with simplifications, then do a bit of numerical optimization and in the end make psychedelic-looking figures.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I will introduce the basic functionalities of the sympy package to do symbolic computing, with a special focus on vector and matrix operations. Then, I'll briefly explain a real-world model from the description of 2D layered magnetic materials and use sympy to deal with the resulting expressions. We'll evaluate those expressions to visualize the results of the model and obtain a numerical estimate of a transition point.&lt;/p&gt;
&lt;p&gt;The aim of this talk is to give a light-hearted introduction into the world of symbolic computing to someone who has more fun working with computers than pen and paper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Thole</dc:creator><pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-25:pycon-de-2017/theoretical-physics-with-sympy.html</guid><category>physics</category><category>science</category><category>sympy</category></item><item><title>Validazione e decodifica di file XML con Python</title><link>https://pyvideo.org/pycon-italia-2017/validazione-e-decodifica-di-file-xml-con-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Per la schematizzazione di documenti XML sono disponibili diversi
standard, tra questi XML Schema. La prima problematica è quella di poter
validare file XML secondo il loro rispettivo schema. Un’altra esigenza è
la conversione dell’XML in strutture dati in cui siano valorizzati i
tipi base definiti nello schema e la struttura nidificata in cui sono
inseriti, similmente a quello che è già reso disponibile per JSON.&lt;/p&gt;
&lt;p&gt;In ambito scientifico, nell’ambito delle attività del progetto europeo
MaX (Materials design at the Exascale), per semplificare l’interscambio
di dati dati XML tra diversi software di simulazione, si è deciso di
adottare un approccio unitario e sistematico alla validazione e alla
decodifica dei dati XML prodotti.&lt;/p&gt;
&lt;p&gt;Pertanto è in fase di sviluppo una nuova libreria (xmlschema), basata
sulla libreria standard ElementTree di Python, che permette di validare
e decodificare dati XML con schemi XSD. La decodifica di un documento
XML produce un dizionario nidificato con i valori terminali appartenenti
ai corrispondenti tipi elementari.&lt;/p&gt;
&lt;p&gt;Nella presentazione parlerei delle problematiche degli schemi XSD,
dell’ambito scientifico in cui è stata sviluppata la libreria e della
struttura della libreria stessa, illustrando e magari raccogliendo
qualche idea per migliorarla.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Davide Brunato</dc:creator><pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-08:pycon-italia-2017/validazione-e-decodifica-di-file-xml-con-python.html</guid><category>xml</category><category>mathematical-modelling</category><category>encoding</category><category>Python</category><category>simulation</category><category>validation</category><category>physics</category><category>metadata</category></item><item><title>Catching Neutrinos with Python and KM3NeT</title><link>https://pyvideo.org/pycon-italia-2017/catching-neutrinos-with-python-and-km3net.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;KM3NeT is the next generation underwater neutrino telescope located in
the deepest seas of the Mediterranean. Once completed, it will have an
instrumented volume of several cubic kilometres. One of the technical
challenges in such a huge project is providing software tools, which can
be rapidly developed and maintained while keeping a focus on
portability, compatibility and usability. The area of application ranges
from live monitoring over offline processing and analysis to data
visualisation and 3D event displays. Python with it’s wonderful standard
library combined with extraordinary open source frameworks proves to be
able to handle all these different tasks with ease. This talk covers
some of the projects used in our collaboration to make our lives easier,
featuring technologies such as Cython, Numpy, Scipy, Pandas, Matplotlib,
Jupyter, Tornado, PyOpenGL, urwid and more, and focusses on one of our
key ingredients: a framework called KM3Pipe, which provides a
pipeline-based workflow to allow us building complex analysis chains by
stitching together modules.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Moritz Lotze</dc:creator><pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-07:pycon-italia-2017/catching-neutrinos-with-python-and-km3net.html</guid><category>physics</category><category>pipeline</category><category>neutrinos</category><category>hephysiscs</category></item><item><title>Project based introduction to scientific computing for physics majors</title><link>https://pyvideo.org/scipy-2014/project-based-introduction-to-scientific-computin.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will present an overview of a project-based introductory
course in scientific computing using python for physics majors at Cal
Poly San Luis Obispo.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Computational tools and skills are as critical to the training of
physics majors as calculus and math, yet they receive much less emphasis
in the undergraduate curriculum. One-off courses that introduce
programming and basic numerical problem-solving techniques with
commercial software packages for topics that appear in the traditional
physics curriculum are insufficient to prepare students for the
computing demands of modern technical careers. Yet tight budgets and
rigid degree requirements constrain the ability to expand computational
course offerings for physics majors.&lt;/p&gt;
&lt;p&gt;This talk will present an overview of a recently revamped course at Cal
Poly San Luis Obispo that uses Python and associated scientific
computing libraries to introduce the fundamentals of open-source tools,
version control systems, programming, numerical problem solving and
algorithmic thinking to undergraduate physics majors. The spirit of the
course is similar to the bootcamps organized by &lt;a class="reference external" href="http://software-carpentry.org"&gt;Software
Carpentry&lt;/a&gt; for researchers in science
but is offered as a ten-week for-credit course. In addition to having a
traditional in-class component, students learn the basics of Python by
completing tutorials on &lt;a class="reference external" href="http://www.codecademy.com"&gt;Codecademy&lt;/a&gt;'s
Python track and practice their algorithmic thinking by tackling
&lt;a class="reference external" href="http://projecteuler.net"&gt;Project Euler&lt;/a&gt; problems. This approach of
incorporating online training may provide a different way of thinking
about the role of MOOCs in higher education. The early part of the
course focuses on skill-building, while the second half is devoted to
application of these skills to an independent research-level
computational physics project. Examples of recent projects and their
results will be presented.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jennifer Klay</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-09:scipy-2014/project-based-introduction-to-scientific-computin.html</guid><category>education</category><category>physics</category></item></channel></rss>