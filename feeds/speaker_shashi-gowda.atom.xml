<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_shashi-gowda.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-11-27T00:00:00+00:00</updated><entry><title>JuliaDB A data system for Julia</title><link href="https://pyvideo.org/pydata-new-york-city-2017/juliadb-a-data-system-for-julia.html" rel="alternate"></link><published>2017-11-27T00:00:00+00:00</published><updated>2017-11-27T00:00:00+00:00</updated><author><name>Jeff Bezanson</name></author><id>tag:pyvideo.org,2017-11-27:pydata-new-york-city-2017/juliadb-a-data-system-for-julia.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern data analysis pipelines routinely involve gluing together multiple systems and languages: SQL, Python, R, C++, unix tools, and more. This leads to unnecessary complexity and inefficiency. JuliaDB is a fast, productivity-focused, distributed database that, together with the Julia language, forms a single coherent system for everything from data preparation to machine learning with no glue.&lt;/p&gt;
</summary></entry></feed>