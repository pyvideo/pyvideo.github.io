<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Michael Howitz</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_michael-howitz.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-03-22T00:00:00+00:00</updated><subtitle></subtitle><entry><title>We have nearly one million lines of Python 2 code in production – and now?</title><link href="https://pyvideo.org/europython-2020/we-have-nearly-one-million-lines-of-python-2-code-in-production-and-now.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Michael Howitz</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/we-have-nearly-one-million-lines-of-python-2-code-in-production-and-now.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Porting a rather large code base to Python 3 – lessons learned usable for projects of any size&lt;/p&gt;
&lt;p&gt;In this talk I am going to present possible approaches for a Python 3 migration of existing Python code running on Python 2.7. I'll evaluate which of these approaches seems suitable …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Porting a rather large code base to Python 3 – lessons learned usable for projects of any size&lt;/p&gt;
&lt;p&gt;In this talk I am going to present possible approaches for a Python 3 migration of existing Python code running on Python 2.7. I'll evaluate which of these approaches seems suitable for a large code base and which principles should be paid attention to to increase the probability of a successful migration project.&lt;/p&gt;
&lt;p&gt;I'll use union.cms (a content management system used by German trade unions) to show the story of a successful migration project involving nearly one million lines of Python code. The story will include the obstacles we encountered and what we learned on the way.&lt;/p&gt;
&lt;p&gt;I believe that most of the discussed ideas and experience can also be used unchanged in smaller projects as the presented principles are very much the same.&lt;/p&gt;
&lt;p&gt;Goal of the presentation: You should be able to come up with a plan for migrating your Python 2 based projects to Python 3.&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Best Practice"></category><category term="Development"></category><category term="Python 2"></category><category term="Python 3"></category><category term="legacy-code"></category></entry><entry><title>RestrictedPython - or how to port to Python 3 without porting dependencies</title><link href="https://pyvideo.org/pyconweb-2017/restrictedpython-or-how-to-port-to-python-3-without-porting-dependencies.html" rel="alternate"></link><published>2017-05-27T00:00:00+00:00</published><updated>2017-05-27T00:00:00+00:00</updated><author><name>Michael Howitz</name></author><id>tag:pyvideo.org,2017-05-27:/pyconweb-2017/restrictedpython-or-how-to-port-to-python-3-without-porting-dependencies.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You want to port a python package or application to Python 3 but one of its dependencies will never run on Python 3? This was the case for RestrictedPython – see which approaches could be used to solve this problem and which one we chose.&lt;/p&gt;
</content><category term="PyConWeb 2017"></category><category term="restrictedpython"></category></entry><entry><title>We Have Nearly One Million Lines of Python 2 Code in Production – and Now?</title><link href="https://pyvideo.org/python-web-conf-2020/we-have-nearly-one-million-lines-of-python-2-code-in-production-and-now.html" rel="alternate"></link><published>2021-03-22T00:00:00+00:00</published><updated>2021-03-22T00:00:00+00:00</updated><author><name>Michael Howitz</name></author><id>tag:pyvideo.org,2021-03-22:/python-web-conf-2020/we-have-nearly-one-million-lines-of-python-2-code-in-production-and-now.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;We Have Nearly One Million Lines of Python 2 Code in Production – and Now?&amp;quot; by: Michael Howitz&lt;/p&gt;
&lt;p&gt;In this talk I am going to present possible approaches for a Python 3 migration of existing Python code running on Python 2.7. I’ll evaluate which of these approaches seems …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;We Have Nearly One Million Lines of Python 2 Code in Production – and Now?&amp;quot; by: Michael Howitz&lt;/p&gt;
&lt;p&gt;In this talk I am going to present possible approaches for a Python 3 migration of existing Python code running on Python 2.7. I’ll evaluate which of these approaches seems suitable for a large code base and which principles should be paid attention to to increase the probability of a successful migration project.&lt;/p&gt;
&lt;p&gt;I’ll use union.cms (a content management system used by German trade unions) to show the story of a successful migration project involving nearly one million lines of Python code. The story will include the obstacles we encountered and what we learned on the way.&lt;/p&gt;
&lt;p&gt;I believe that most of the discussed ideas and experience should also be used unchanged in smaller projects as the presented principles are very much the same.&lt;/p&gt;
&lt;p&gt;Goal of the presentation: You should be able to come up with a plan for migrating your Python 2 based projects to Python 3.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</content><category term="Python Web Conf 2020"></category><category term="PythonWebConf"></category><category term="PythonWebConf2020"></category></entry></feed>