<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 08 Aug 2015 00:00:00 +0000</lastBuildDate><item><title>What's the fuzz all about? Randomized data generation for robust unit testing</title><link>https://pyvideo.org/europython-2015/whats-the-fuzz-all-about-randomized-data-generation-for-robust-unit-testing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Moritz Gronbach - What's the fuzz all about? Randomized data generation for robust unit testing
[EuroPython 2015]
[23 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;In static unit testing, the output of a function is compared to a
precomputed result. Even though such unit tests may apparently cover
all the code in a function, they might cover only a small subset of
behaviours of the function. This potentially allows bugs such as
heartbleed to stay undetected. Dynamic unit tests using fuzzing, which
allows you to specify a data generation template, can make your test
suite more robust.&lt;/p&gt;
&lt;p&gt;In this talk, we demonstrate fuzzing using the hypothesis library.
Hypothesis is a Python library to automatically generate test data
based on a template.
Data is generated using a strategy. A strategy specifies how data is
generated, and how falsifying examples can be simplified. Hypothesis
provides strategies for Python's built-in data types, and is easily
customizable.Since test data is generated automatically, we can not
compare against pre-computed results. Instead, tests are usually done
on invariants of functions. We give an overview of such invariants.&lt;/p&gt;
&lt;p&gt;Finally, we demonstrate how we use fuzzing to test machine learning
algorithms at Blue Yonder.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Moritz Gronbach</dc:creator><pubDate>Sat, 08 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-08:europython-2015/whats-the-fuzz-all-about-randomized-data-generation-for-robust-unit-testing.html</guid></item></channel></rss>