<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 26 Jun 2010 00:00:00 +0000</lastBuildDate><item><title>PyConAU 2010: GLAMkit: a harder, better, faster, stronger way to write reusable Django code</title><link>https://pyvideo.org/pycon-au-2010/pyconau-2010--glamkit--a-harder--better--faster--.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GLAMkit: a harder, better, faster, stronger way to write reusable Django
code&lt;/p&gt;
&lt;p&gt;Presented by Dr. Greg Turner (the Interaction Consortium)&lt;/p&gt;
&lt;p&gt;As part of our web development work for Galleries, Libraries, Archives
and Museums (the so-called GLAM sector), we have open-sourced the common
tools and design patterns that we have developed as a web framework
called GLAMkit (&lt;a class="reference external" href="http://glamkit.org/"&gt;http://glamkit.org/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;GLAMkit is based on Django, and is inspired by its design philosophy of
several apps which implement specific features. However, by looking at
the successes and challenges faced by other CMSes and collections of
apps such as Pinax, we have taken the philosophy a stage futher.&lt;/p&gt;
&lt;p&gt;Rather than being a collection of Django apps, we have constructed
GLAMkit as a collection of optional and reusable Django 'toolkits' for
implementing common features. We leave the implementation details - the
things that Django already does brilliantly - to the application
developers themselves.&lt;/p&gt;
&lt;p&gt;In this talk, we will present the history of GLAMkit's development, with
particular focus on how our approach to reusability came about, and some
examples of that approach.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Greg Turner</dc:creator><pubDate>Sat, 26 Jun 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--glamkit--a-harder--better--faster--.html</guid><category>advocacy</category><category>architecture</category><category>community</category><category>pyconau</category><category>pyconau2010</category><category>web</category></item><item><title>PyConAU 2010: Introducing Python to a Java shop</title><link>https://pyvideo.org/pycon-au-2010/pyconau-2010--introducing-python-to-a-java-shop.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducing Python to a Java shop&lt;/p&gt;
&lt;p&gt;Presented by Juergen Brendel (MuleSoft)&lt;/p&gt;
&lt;p&gt;There is a time and place for everything: For some applications Python
is perfect, for others a language like Java and its entire ecosystem is
more ideal. In this talk we see how Python was introduced to a Java shop
as a vehicle for rapid and dynamic prototyping of a new project. The
talk then explains how Jython/Java integration was used to translate
this project step by step from Python to Java. Going beyond the advocacy
focus, the talk then shows the interfaces to call Java from Python and
vice versa and illustrates those with examples. Furthermore, unit
testing of Java classes via test cases written in Python is also touched
upon.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juergen Brendel</dc:creator><pubDate>Sat, 26 Jun 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--introducing-python-to-a-java-shop.html</guid><category>advocacy</category><category>jython</category><category>prototyping</category><category>pyconau</category><category>pyconau2010</category></item><item><title>PyConAU 2010: State Of Python</title><link>https://pyvideo.org/pycon-au-2010/pyconau-2010--state-of-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;State Of Python&lt;/p&gt;
&lt;p&gt;Presented by Richard Jones&lt;/p&gt;
&lt;p&gt;This talk will present a whirlwind update of the state of Python as of
June 2010. It will cover the evolution of the language itself, its
variants, versions and veracity. It will cover the state of packaging,
distributing and pypi.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Jones</dc:creator><pubDate>Sat, 26 Jun 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--state-of-python.html</guid><category>advocacy</category><category>core</category><category>language</category><category>pyconau</category><category>pyconau2010</category></item></channel></rss>