<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_openstack.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-08-24T00:00:00+00:00</updated><entry><title>The journey of building a production-ready managed Kubernetes service</title><link href="https://pyvideo.org/kiwi-pycon-2019/the-journey-of-building-a-production-ready-managed-kubernetes-service.html" rel="alternate"></link><published>2019-08-24T00:00:00+00:00</published><updated>2019-08-24T00:00:00+00:00</updated><author><name>Fei Long Wang</name></author><id>tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/the-journey-of-building-a-production-ready-managed-kubernetes-service.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation we will share Catalyst’s public cloud journey in building a production ready managed Kubernetes service on top of OpenStack.&lt;/p&gt;
</summary><category term="kubernetes"></category><category term="OpenStack"></category></entry><entry><title>Lessons from a massive, openly-developed project</title><link href="https://pyvideo.org/pycon-italia-2018/lessons-from-a-massive-openly-developed-project.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Thierry Carrez</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/lessons-from-a-massive-openly-developed-project.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenStack is a massive open source project, formed of multiple
components written in Python. Created in 2010, it attracted thousands of
developers which produced hundreds of thousands of commits. It is
completely openly-developed: there is no single organization owning it,
and anyone can participate on a level playing ground.&lt;/p&gt;
&lt;p&gt;During this wild ride, we discovered new classes of issues, crafted
novel solutions, made mistakes and learned lessons, most of them
applicable to other open source projects. Come learn about software
engineering best practices, open collaboration advice and other fun tips
and tricks based on our experience ! No prior experience with OpenStack
is needed to attend this talk.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 14:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="quality-assurance"></category><category term="project-management"></category><category term="continuous-integration"></category><category term="#lessonslearned"></category><category term="collaboration"></category><category term="principles"></category><category term="software-engineering"></category><category term="best-practices"></category><category term="OpenStack"></category><category term="release-engineering"></category></entry><entry><title>Testing Thousands of Python Projects Every Day</title><link href="https://pyvideo.org/pycon-italia-2018/testing-thousands-of-python-projects-every-day.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Monty Taylor</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/testing-thousands-of-python-projects-every-day.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The OpenStack Infra team runs one of the world’s largest Open Source
CI/CD systems in service of OpenStack’s early decision to mandate that
all merges only be performed by automation if and only if all tests
pass. Accomplishing this at scale involves a combination of software and
policy.&lt;/p&gt;
&lt;p&gt;Zuul is the software engine developed to handle this. It is, of course,
written in Python. (Python3 to be exact!)&lt;/p&gt;
&lt;p&gt;Zuul is not OpenStack specific. With the rise of microservices and
kubernetes, the number of multi-repo projects is increasing, as is the
need for CI systems that understand them. The most recent version of
Zuul has been reworked to make it easy for other people, communities or
organizations to harness its power regardless of any relationship with
OpenStack.&lt;/p&gt;
&lt;p&gt;We’ll talk about the things that make Zuul special - multi-repository
dependencies, optimistic branch prediction and deep Ansible integration.
And we’ll walk through how to get started with a private or a public
Zuul.&lt;/p&gt;
&lt;p&gt;There are also the parts of the equation that Zuul doesn’t cover.
Handling thousands of different python projects requires some specific
choices and tradeoffs, so we’ll discuss how we structure the projects,
dependency management and release engineering.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 09:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="OpenStack"></category><category term="ansible"></category><category term="zuul"></category><category term="python3"></category></entry><entry><title>Just one Shade of OpenStack</title><link href="https://pyvideo.org/pycon-italia-2017/just-one-shade-of-openstack.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Roberto Polli</name></author><id>tag:pyvideo.org,2017-04-09:pycon-italia-2017/just-one-shade-of-openstack.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Want to start using openstack? Come to this talk and meet shade! Shade
is a python library that wraps the many OpenStack clients.&lt;/p&gt;
&lt;p&gt;This introductory talk presents:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;an overview of openstack&lt;/li&gt;
&lt;li&gt;connecting to openstack with shade&lt;/li&gt;
&lt;li&gt;creating and listing machines, networks &amp;amp; co&lt;/li&gt;
&lt;li&gt;shade usage in ansible modules&lt;/li&gt;
&lt;li&gt;contributing to shade (tox, git review, …)&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="OpenStack"></category><category term="OpenSource"></category><category term="cloud"></category></entry><entry><title>Build a Private Developer’s Cloud Using TripleO</title><link href="https://pyvideo.org/pycon-se-2016/build-a-private-developers-cloud-using-tripleo.html" rel="alternate"></link><published>2016-05-10T00:00:00+00:00</published><updated>2016-05-10T00:00:00+00:00</updated><author><name>K Rain Leander</name></author><id>tag:pyvideo.org,2016-05-10:pycon-se-2016/build-a-private-developers-cloud-using-tripleo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TripleO is an OpenStack Deployment &amp;amp; Management tool built using python. The Cloud, Big Data, Internet of Things – so many technologies are the new hotness right now and TripleO quickstart is one of many ways to dive into one of the largest open source umbrella project, OpenStack.&lt;/p&gt;
</summary><category term="TripleO"></category><category term="OpenStack"></category></entry><entry><title>Managing requirements for a many-thousands contributors software</title><link href="https://pyvideo.org/pycaribbean-2016/managing-requirements-for-a-1k-contributors-software.html" rel="alternate"></link><published>2016-02-21T00:00:00+00:00</published><updated>2016-02-21T00:00:00+00:00</updated><author><name>Flavio Percoco Premoli</name></author><id>tag:pyvideo.org,2016-02-21:pycaribbean-2016/managing-requirements-for-a-1k-contributors-software.html</id><summary type="html"></summary><category term="openstack"></category><category term="management"></category></entry><entry><title>Snakes on a cloud: the OpenStack project</title><link href="https://pyvideo.org/europython-2011/snakes-on-a-cloud-the-openstack-project.html" rel="alternate"></link><published>2011-07-24T00:00:00+00:00</published><updated>2011-07-24T00:00:00+00:00</updated><author><name>Thierry Carrez</name></author><id>tag:pyvideo.org,2011-07-24:europython-2011/snakes-on-a-cloud-the-openstack-project.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Thierry Carrez - 23 June 2011 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenStack is an innovative open source project written in Python, backed
by Rackspace Hosting and NASA, building a massively-scalable and
reliable cloud computing platform.&lt;/p&gt;
&lt;p&gt;The first part of this talk will clarify the place of OpenStack in the
general &amp;quot;cloud&amp;quot; landscape and explain why a fully open cloud
infrastructure stack is necessary to avoid vendor lock-in. We'll then
focus on the OpenStack project goals, its developer community, its open
design and release processes, and the developer tools it chose.&lt;/p&gt;
&lt;p&gt;The second part of the talk will present into more technical details the
different components of OpenStack: Nova (compute) and Swift (storage),
including the Python libraries that are used (libvirt, SQLAlchemy,
eventlet…). A Q&amp;amp;A session at the end of the talk will give the audience
a chance to clear any remaining dark area.&lt;/p&gt;
</summary><category term="cloud"></category><category term="design"></category><category term="hosting"></category><category term="infrastructure"></category><category term="openstack"></category><category term="python,"></category></entry><entry><title>OpenStack Compute's automated testing</title><link href="https://pyvideo.org/europython-2011/openstack-computes-automated-testing.html" rel="alternate"></link><published>2011-07-13T00:00:00+00:00</published><updated>2011-07-13T00:00:00+00:00</updated><author><name>Soren Hansen</name></author><id>tag:pyvideo.org,2011-07-13:europython-2011/openstack-computes-automated-testing.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Soren Hansen - 24 June 2011 in &amp;quot;Track Tagliatelle &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When a patch is propoed against OpenStack compute (a.k.a. Nova) and it
makes it through our peer review process, our automated test system
takes over:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It finds the approved patch on Launchpad;&lt;/li&gt;
&lt;li&gt;An attempt to merge the patch is performed;&lt;/li&gt;
&lt;li&gt;The unit tests are run;&lt;/li&gt;
&lt;li&gt;A PEP-8 check is run;&lt;/li&gt;
&lt;li&gt;The merge is completed, applying the patch to our trunk;&lt;/li&gt;
&lt;li&gt;A tarball is built and published;&lt;/li&gt;
&lt;li&gt;An Ubuntu source package is built for several editions of Ubuntu;&lt;/li&gt;
&lt;li&gt;The source packages get uploaded to a PPA;&lt;/li&gt;
&lt;li&gt;Once built, the packages are installed on a test setup;&lt;/li&gt;
&lt;li&gt;A test battery is run against the installed &amp;quot;cloud&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'll explain the various steps, showing how it works and attempt to
demonstrate it (Murphy's law permitting), and then I'll speak about the
benefits we've gotten from PPA's and working closely with Ubuntu.&lt;/p&gt;
</summary><category term="openstack"></category><category term="packages"></category><category term="testing"></category></entry><entry><title>R0 DAY1-01 Openstack Swift Benchmark with Ansible - Charles Hsu (PyCon APAC 2015)</title><link href="https://pyvideo.org/pycon-apac-2015/r0-day1-01-openstack-swift-benchmark-with-ansible.html" rel="alternate"></link><published>2015-08-24T00:00:00+00:00</published><updated>2015-08-24T00:00:00+00:00</updated><author><name>Charles Hsu</name></author><id>tag:pyvideo.org,2015-08-24:pycon-apac-2015/r0-day1-01-openstack-swift-benchmark-with-ansible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Charles Hsu&lt;/p&gt;
&lt;blockquote&gt;
Using Ansible for OpenStack Swift benchmark&lt;/blockquote&gt;
&lt;p&gt;Outline is here, may be modified in a future.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduct Openstack Swift&lt;ul&gt;
&lt;li&gt;What's that?&lt;/li&gt;
&lt;li&gt;Single Node Swift (SAIO Swift) (&lt;a class="reference external" href="http://docs.openstack.org/developer/swift/development_saio.html"&gt;http://docs.openstack.org/developer/swift/development_saio.html&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Swift Cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Introduce Ansible&lt;ul&gt;
&lt;li&gt;Why&lt;/li&gt;
&lt;li&gt;Other tools (Fabric/Slatstack/Chef)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What's problems and pains&lt;ul&gt;
&lt;li&gt;Configure multiple swift nodes (swift proxy/object/container servers) without extra packages&lt;/li&gt;
&lt;li&gt;Deploy/manage multiple benchmark nodes&lt;/li&gt;
&lt;li&gt;Sweep all data in Swift nodes (Dev Cluster)&lt;/li&gt;
&lt;li&gt;Run a benchmark test&lt;/li&gt;
&lt;li&gt;Collecting benchmark result from benchmark nodes and errors from swift nodes&lt;/li&gt;
&lt;li&gt;Repeat it again, again and again&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use Ansible&lt;ul&gt;
&lt;li&gt;Define a cluster and nodes&lt;/li&gt;
&lt;li&gt;Deploy benchmark nodes&lt;/li&gt;
&lt;li&gt;Collecting and aggregate result form benchmark node&lt;/li&gt;
&lt;li&gt;Repeat&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What's next?&lt;ul&gt;
&lt;li&gt;Move it to Docker?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;About the speaker:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Twitter &amp;#64;thecharz&lt;/li&gt;
&lt;li&gt;組織/公司 SwiftStack&lt;/li&gt;
&lt;li&gt;頭銜 Techical Support Enginner&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tw.pycon.org/2015apac/zh/program/12"&gt;https://tw.pycon.org/2015apac/zh/program/12&lt;/a&gt;&lt;/p&gt;
</summary><category term="ansible"></category><category term="openStack"></category><category term="swift"></category></entry><entry><title>An Open success for the cloud: OpenStack</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--an-open-success-for-the-cloud--openst.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Andy Smith</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--an-open-success-for-the-cloud--openst.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An Open success for the cloud: OpenStack&lt;/p&gt;
&lt;p&gt;Presented by Andy Smith&lt;/p&gt;
&lt;p&gt;OpenStack is a collection of open source technologies written entirely
in Python, delivering a massively scalable cloud operating system.
OpenStack is currently developing two interrelated projects: OpenStack
Compute and OpenStack Object Storage. OpenStack Compute is software to
provision and manage large groups of virtual private servers, and
OpenStack Object Storage is software for creating redundant, scalable
object storage using clusters of commodity servers to store terabytes or
even petabytes of data.&lt;/p&gt;
&lt;p&gt;This talk will go into details about the success of OpenStack with
Python, limitations and how overall, Python was the right technology
choice.&lt;/p&gt;
</summary><category term="openstack"></category><category term="pycon"></category><category term="pycon2011"></category></entry><entry><title>Python - The Secret Sauce in the Open Cloud</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--python---the-secret-sauce-in-the-open.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Jason Huggins</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--python---the-secret-sauce-in-the-open.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python - The Secret Sauce in the Open Cloud&lt;/p&gt;
&lt;p&gt;Presented by Jason Huggins&lt;/p&gt;
&lt;p&gt;This talk will go into detail on current cloud computing technology,
specifically OpenStack and libvirt and how Python is the &amp;quot;secret sauce&amp;quot;
that powers the open cloud. We'll show how to bring up your own cloud
&amp;quot;from scratch&amp;quot;, and explain why you would do such a thing.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Covered topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How to use VirtualBox&lt;/li&gt;
&lt;li&gt;How to use kvm&lt;/li&gt;
&lt;li&gt;How to use libvirt with Python&lt;/li&gt;
&lt;li&gt;How to check out, build, and deploy OpenStack&lt;/li&gt;
&lt;li&gt;How to setup and maintain your own cloud&lt;/li&gt;
&lt;li&gt;Real world examples&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="kvm"></category><category term="libvirt"></category><category term="openstack"></category><category term="pycon"></category><category term="pycon2011"></category><category term="virtualbox"></category></entry></feed>