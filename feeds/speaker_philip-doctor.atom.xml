<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_philip-doctor.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-05-30T00:00:00+00:00</updated><entry><title>Storm (with python (and a side of clojure))</title><link href="https://pyvideo.org/chipy/storm-with-python-and-a-side-of-clojure.html" rel="alternate"></link><published>2013-12-12T00:00:00+00:00</published><updated>2013-12-12T00:00:00+00:00</updated><author><name>Philip Doctor</name></author><id>tag:pyvideo.org,2013-12-12:chipy/storm-with-python-and-a-side-of-clojure.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A walking tour of Storm, what it is, what you can do, and how you can
use it with python.&lt;/p&gt;
</summary></entry><entry><title>Monoids in Python</title><link href="https://pyvideo.org/chipy/monoids-in-python.html" rel="alternate"></link><published>2013-11-14T00:00:00+00:00</published><updated>2013-11-14T00:00:00+00:00</updated><author><name>Philip Doctor</name></author><id>tag:pyvideo.org,2013-11-14:chipy/monoids-in-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Monoids are largely badly explained, but actually quite beautiful. I
would like to take a brief tour of what a monoid is and how they can
help out with mundane every day tasks in python.&lt;/p&gt;
</summary></entry><entry><title>Ultimate Language Shootout IV: C# is slightly better than you might imagine</title><link href="https://pyvideo.org/chipy/ultimate-language-shootout-iv-c-is-slightly-bet.html" rel="alternate"></link><published>2013-06-13T00:00:00+00:00</published><updated>2013-06-13T00:00:00+00:00</updated><author><name>Philip Doctor</name></author><id>tag:pyvideo.org,2013-06-13:chipy/ultimate-language-shootout-iv-c-is-slightly-bet.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;If you find yourself accidentally writing c#, you can still have some
fun.&lt;/p&gt;
</summary></entry><entry><title>Getting Started with Cassandra and Python</title><link href="https://pyvideo.org/depy-2015/getting-started-with-cassandra-and-python.html" rel="alternate"></link><published>2015-05-30T00:00:00+00:00</published><updated>2015-05-30T00:00:00+00:00</updated><author><name>Amber Doctor</name></author><id>tag:pyvideo.org,2015-05-30:depy-2015/getting-started-with-cassandra-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will covers why to use Cassandra, basic Cassandra
architecture, setting up Cassandra, and basic crud operations with a
python web framework. The Apache Cassandra database is the right choice
when you need scalability and high availability without compromising
performance. Linear scalability and proven fault-tolerance on commodity
hardware or cloud infrastructure make it the perfect platform for
mission-critical data. Cassandra's support for replicating across
multiple datacenters is best-in-class, providing lower latency for your
users and the peace of mind of knowing that you can survive regional
outages. Cassandra's data model offers the convenience of column indexes
with the performance of log-structured updates, strong support for
denormalization and materialized views, and powerful built-in caching.&lt;/p&gt;
</summary></entry></feed>