<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_justin-akers.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-08-06T00:00:00+00:00</updated><entry><title>Prototyping Python Microservices in Production</title><link href="https://pyvideo.org/pycon-au-2017/prototyping-python-microservices-in-production.html" rel="alternate"></link><published>2017-08-06T00:00:00+00:00</published><updated>2017-08-06T00:00:00+00:00</updated><author><name>Justin Akers</name></author><id>tag:pyvideo.org,2017-08-06:pycon-au-2017/prototyping-python-microservices-in-production.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many of us have heard buzzwords like microservice but might not yet have had the time to dig deeper. This talk will:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;introduce general concepts around microservices&lt;/li&gt;
&lt;li&gt;describe and demonstrate thrift. One of the many RPC interfaces python has available&lt;/li&gt;
&lt;li&gt;step through building a sample thrift service&lt;/li&gt;
&lt;li&gt;discuss discoverability, reliability and capacity of the sample service and then introduce consul as a potential solution&lt;/li&gt;
&lt;li&gt;provide an intro to time series data stores such as berengei and prometheus&lt;/li&gt;
&lt;li&gt;quickly touch on measuring microservice latency&lt;/li&gt;
&lt;li&gt;demonstrate one popular method for visualizing and alerting on time series data&lt;/li&gt;
&lt;/ul&gt;
</summary></entry></feed>