<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_pietro-mascolo.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-03T00:00:00+00:00</updated><entry><title>Good features beat algorithms</title><link href="https://pyvideo.org/pycon-italia-2019/good-features-beat-algorithms.html" rel="alternate"></link><published>2019-05-03T00:00:00+00:00</published><updated>2019-05-03T00:00:00+00:00</updated><author><name>Pietro Mascolo</name></author><id>tag:pyvideo.org,2019-05-03:pycon-italia-2019/good-features-beat-algorithms.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In Machine Learning and Data Science in general, understanding the data
is paramount. This understanding can come from many different sources
and techniques: domain expertise, exploratory analysis, SMEs, some
specific Machine Learning techniques, and feature engineering. As a
matter of fact, most Machine Learning and Statistical analysis strongly
depends on how the data is prepared, thus making feature engineering
very important for any serious Machine Learning enterprise.&lt;/p&gt;
&lt;p&gt;“Feature engineering is the process of transforming raw data into
features that better represent the underlying problem to the predictive
models, resulting in improved model accuracy on unseen data.”&lt;/p&gt;
&lt;p&gt;In this talk we will discuss what feature engineering and feature
selection are; how to select important features in a real-world dataset
and how to develop a simple, but powerful ensemble to measure feature
importance and perform feature selection.&lt;/p&gt;
&lt;p&gt;Familiarity with intermediate concepts of the Python programming
language is required to follow the implementation steps. General
knowledge of the basic concepts of Machine Learning and data cleaning
will be useful, but not strictly necessary, to follow the discussion on
feature selection and feature engineering.&lt;/p&gt;
&lt;p&gt;Feedback form: &lt;a class="reference external" href="https://python.it/feedback-1529"&gt;https://python.it/feedback-1529&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 10:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="scikit-learn"></category><category term="machine-learning"></category><category term="pydata"></category></entry><entry><title>Predicting future states using High Order Markov Chains</title><link href="https://pyvideo.org/pycon-italia-2018/predicting-future-states-using-high-order-markov-chains.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Pietro Mascolo</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/predicting-future-states-using-high-order-markov-chains.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In modern automated systems (Interactive Voice Response, help chatbots,
routing systems, etc.) it is very often important to be able to predict
what is the most likely next step for the current user. One way of
addressing this issue is using sequence algorithms such as Markov
Chains.&lt;/p&gt;
&lt;p&gt;After a quick introduction to the concept of Markov chains and Markov
processes, we will explore the basics and the implementation of a simple
High Order Markov chain to predict what the most likely next state in a
sequence, based on previous states. We will be using anonymized
real-life data of an automated system and we will try to come up with a
model that can give us the most probable next state using Markov chains
of different orders.&lt;/p&gt;
&lt;p&gt;Things we will see in detail: - Mathematics and rationale behind Markov
Chains; - Basic implementation of First Order Markov Chains; -
Implementation of High Order Markov Chains; - Real life application of
the developed model.&lt;/p&gt;
&lt;p&gt;An undergraduate level of understanding of Linear Algebra and basic
Python skills will be useful to follow the talk.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 15:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="pydata"></category><category term="Pyston"></category><category term="algebra"></category><category term="Machine Learning"></category><category term="scipy"></category><category term="data-analysis"></category><category term="mathematics"></category><category term="data"></category><category term="python3"></category></entry><entry><title>Good features beat algorithms</title><link href="https://pyvideo.org/europython-2018/good-features-beat-algorithms.html" rel="alternate"></link><published>2018-07-27T00:00:00+00:00</published><updated>2018-07-27T00:00:00+00:00</updated><author><name>Pietro Mascolo</name></author><id>tag:pyvideo.org,2018-07-27:europython-2018/good-features-beat-algorithms.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In Machine Learning and Data Science in general, understanding the data
is paramount. This understanding can come from many different sources
and techniques: domain expertise, exploratory analysis, SMEs, some
specific Machine Learning techniques, and feature engineering. As a
matter of fact, most Machine Learning and Statistical analysis strongly
depends on how the data is prepared, thus making feature engineering
very important for any serious Machine Learning enterprise.&lt;/p&gt;
&lt;p&gt;“Feature engineering is the process of transforming raw data into
features that better represent the underlying problem to the predictive
models, resulting in improved model accuracy on unseen data.”&lt;/p&gt;
&lt;p&gt;In this talk we will discuss what feature engineering and feature
selection are; how to select important features in a real-world dataset
and how to develop a simple, but powerful ensemble to measure feature
importance and perform feature selection.&lt;/p&gt;
&lt;p&gt;Familiarity with intermediate concepts of the Python programming
language is required to follow the implementation steps. General
knowledge of the basic concepts of Machine Learning and data cleaning
will be useful, but not strictly necessary, to follow the discussion on
feature selection and feature engineering.&lt;/p&gt;
</summary></entry></feed>