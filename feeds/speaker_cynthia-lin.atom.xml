<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_cynthia-lin.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-08-13T00:00:00+00:00</updated><entry><title>Opening Up to Open Source</title><link href="https://pyvideo.org/pybay-2017/opening-up-to-open-source.html" rel="alternate"></link><published>2017-08-13T00:00:00+00:00</published><updated>2017-08-13T00:00:00+00:00</updated><author><name>Cynthia Lin</name></author><id>tag:pyvideo.org,2017-08-13:pybay-2017/opening-up-to-open-source.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Open source communities have led to the development of a majority of useful tools and technologies. Open source software is understated because becoming involved can be daunting when a project has hundreds of active developers. In reality, open source communities are warm, welcoming, and diverse. Learn more about open source, its significance, opportunities to contribute, and how to get started.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Everyday, thousands of developers gather in teams and collaborate in open source communities to collaborate together to celebrate the principles of community-oriented development, such as open exchange, collaborative participation, rapid prototyping, transparency, and meritocracy.&lt;/p&gt;
&lt;p&gt;By publicizing their source code on websites like GitHub, open source projects allow others to easily develop, modify, and distribute their source code, dispelling the stigma of software as a private, commercial product. Various examples of open source software include the Atom text editor, Rust programming language, Django Python-based web application framework, and Zulip group chat application.&lt;/p&gt;
&lt;p&gt;However, individuals often hesitate to join open source communities due to several concerns; some fear ridicule for their lack of experience or invaluable contributions, and others believe that they cannot gain valuable rewards from committing their time to a non-profit project.&lt;/p&gt;
&lt;p&gt;Instead, new contributors to open source projects discover opportunities to develop their technical, communication, and collaboration skills under the guidance of experienced mentors by collaborating with a network of like-minded individuals with various backgrounds, experience, and fields of expertise. By contributing to open source projects, individuals gain a chance to make a difference by developing software that revolutionizes the technology industry.&lt;/p&gt;
&lt;p&gt;Learn more about open source, its significance, opportunities to contribute, and how to get started.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bio&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cynthia Lin is a 15-year-old high school student from Torrance, California. A full-stack developer at heart, she has extensive experience developing software, web applications, automated bots, and games through various projects. As an avid supporter of open source software, Cynthia actively contributes to the Zulip open source group chat application as a core developer and the lead developer of zulipbot. She placed as a Finalist in Google Code-in 2016 for her accomplishments in open source software and has presented her experiences as a high school student in the open source community at several technology conferences.
Speaker home page&lt;/p&gt;
</summary></entry><entry><title>Lightning talks May 21th, 2017 Morning session</title><link href="https://pyvideo.org/pycon-us-2017/lightning-talks-may-21th-2017-morning-session.html" rel="alternate"></link><published>2017-05-21T00:00:00+00:00</published><updated>2017-05-21T00:00:00+00:00</updated><author><name>Joshua Pan</name></author><id>tag:pyvideo.org,2017-05-21:pycon-us-2017/lightning-talks-may-21th-2017-morning-session.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks 2017-05-21 Morning&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="12%" /&gt;
&lt;col width="23%" /&gt;
&lt;col width="65%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head" rowspan="2"&gt;Start&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Speakers&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Subject&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;0:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Pan and  C. Lin&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;ZulipBot - Improving GitHub Workflow&lt;/strong&gt;
- Add Issue Assignment, better Notifications, and
other improvements to GitHub.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;6:15&lt;/td&gt;
&lt;td rowspan="5"&gt;Lennart&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Your Keyboard:  Your Most Important Tool&lt;/strong&gt;
- Eliminating angle issues and space problems with
angled, tenkeyless keyboards, stretches, and more
keyboard geekery.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;11:30&lt;/td&gt;
&lt;td rowspan="4"&gt;Hugh Herter&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Live code reloading in Python&lt;/strong&gt;
- Using the module autoreload to watch and reload
during debugging.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;16:00&lt;/td&gt;
&lt;td rowspan="4"&gt;Don Goodman-Wilson&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Pascal's Wager and You&lt;/strong&gt;
- Pascal's Wager on the Existence of God is equivalent
to wagering about a debilitating hack.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;20:15&lt;/td&gt;
&lt;td rowspan="4"&gt;Paul Ganssle&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Time Zone Tools&lt;/strong&gt;
- Looking at datettime, tzinfo, dateutil and pytz,
common errors, and timezone geekery.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;25:30&lt;/td&gt;
&lt;td rowspan="3"&gt;Paul &amp;amp; Laura&lt;/td&gt;
&lt;td rowspan="3"&gt;&lt;strong&gt;State of PyVideo.org&lt;/strong&gt;
- Current website, traffic, and users.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Lightning talks May 20th, 2017 Evening session session</title><link href="https://pyvideo.org/pycon-us-2017/lightning-talks-may-20th-2017-evening-session-session.html" rel="alternate"></link><published>2017-05-20T00:00:00+00:00</published><updated>2017-05-20T00:00:00+00:00</updated><author><name>Merdydd Luff</name></author><id>tag:pyvideo.org,2017-05-20:pycon-us-2017/lightning-talks-may-20th-2017-evening-session-session.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks 2017-05-20 Evening&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="12%" /&gt;
&lt;col width="23%" /&gt;
&lt;col width="65%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head" rowspan="2"&gt;Start&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Speakers&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Subject&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;0:30&lt;/td&gt;
&lt;td rowspan="4"&gt;Meredydd Luff&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Compiling blocking Python to non-blocking JS&lt;/strong&gt;
- Wrote client side JS in Python before yield or await
statements, using Skulpt transpiler.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;5:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Efron Licht&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Elements of Style&lt;/strong&gt;
- Write understandable code; write a story. Shorter
functions.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;11:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Maria Mckinley&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Refactoring Lengthy Bits of Code&lt;/strong&gt;
- Towards understanding the steps to refactoring: a
test, prose, outline, make functions and tests.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;15:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Erik Rose&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Getting Things Unguilty&lt;/strong&gt;
- Using &amp;quot;getting things done&amp;quot; as a one slide
flowchart.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;21:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Meggie Mahnken&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Using _slots_ for More Opinionated Objects&lt;/strong&gt;
- __slots__ when you don't want to allow attributes;
sometimes efficient.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;26:00&lt;/td&gt;
&lt;td rowspan="3"&gt;Travis&lt;/td&gt;
&lt;td rowspan="3"&gt;&lt;strong&gt;Crowd Computing&lt;/strong&gt;
- fun controlling crowds with Python&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;29:15&lt;/td&gt;
&lt;td rowspan="5"&gt;Allen Downey&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Physical Modeling in Python&lt;/strong&gt;
- Making an interactive book to improve the undergrad
engineering student retention by putting in real world
early.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;33:00&lt;/td&gt;
&lt;td rowspan="4"&gt;Luceneo&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Time is Money&lt;/strong&gt;
- Communicating Professor Antonio Candido's
alternative view to this aphorism.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;35:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Cynthia Lynn&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;PyCon, a High Schooler's Perspective&lt;/strong&gt;
- A 15 year-old programmer.  Didn't come for a job;
felt accepted and welcome.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;41:45&lt;/td&gt;
&lt;td rowspan="4"&gt;David Bieber&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Python Fire, comand line interfaces&lt;/strong&gt;
- A single line or decorators added to functions or
classes to make CLIs; great workflow.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;47:15&lt;/td&gt;
&lt;td rowspan="4"&gt;&amp;nbsp;&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Pitches for different conferences&lt;/strong&gt;
- One minute each for Python conferences around the
world.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="lightning talks"></category></entry></feed>