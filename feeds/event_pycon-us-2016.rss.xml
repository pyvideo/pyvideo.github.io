<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 20 Jun 2016 00:00:00 +0000</lastBuildDate><item><title>Magic Wormhole- Simple Secure File Transfer</title><link>https://pyvideo.org/pycon-us-2016/brian-warner-magic-wormhole-simple-secure-file-transfer-pycon-2016mp4.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Brian Warner&lt;/p&gt;
&lt;p&gt;&amp;quot;&amp;quot;magic-wormhole&amp;quot;&amp;quot; is a simple tool to move files from one computer to another, like &amp;quot;&amp;quot;scp&amp;quot;&amp;quot; but without the setup. By telling the recipient just a few secret words, the file is safely encrypted and delivered directly to the correct machine. The talk will explain the security mechanics, the cryptography (NaCl and SPAKE2), and how to use the underlying open-source library in your own applications.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Warner</dc:creator><pubDate>Mon, 20 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-20:pycon-us-2016/brian-warner-magic-wormhole-simple-secure-file-transfer-pycon-2016mp4.html</guid></item><item><title>Revitalizing Python Game Development- Packaging, Performance, and Platforms</title><link>https://pyvideo.org/pycon-us-2016/jacob-kovac-revitalizing-python-game-development-packaging-performance-and-platformsmp4.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Jacob Kovac&lt;/p&gt;
&lt;p&gt;With the advent of mobile platforms, as well as the prevalence of the GPU, Python has fallen almost entirely out of favor with game developers. However, there are some exciting solutions to the major issues being built on top of the Kivy GUI Framework. This talk will cover the recent developments that make it possible to build high quality, cross-platform games in Python.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Kovac</dc:creator><pubDate>Mon, 20 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-20:pycon-us-2016/jacob-kovac-revitalizing-python-game-development-packaging-performance-and-platformsmp4.html</guid><category>kivy</category></item><item><title>Web Design for Non Designers</title><link>https://pyvideo.org/pycon-us-2016/tracy-osborn-web-design-for-non-designers-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Tracy Osborn&lt;/p&gt;
&lt;p&gt;When you are a programmer, web design can be super intimidating but still necessary for your websites and web apps. This talk will highlight the best ways to improve your design and UX skills so you can create an interfaces that are usable and at least semi-attractive without hiring a designer — guaranteed no designer-y jargon.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tracy Osborn</dc:creator><pubDate>Mon, 20 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-20:pycon-us-2016/tracy-osborn-web-design-for-non-designers-pycon-2016.html</guid></item><item><title>Structured Data from Unstructured Text</title><link>https://pyvideo.org/pycon-us-2016/van-lindberg-structured-data-from-unstructured-text-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Van Lindberg&lt;/p&gt;
&lt;p&gt;Ever wonder how if you google “When was Python created?” Google just has the answer in a box at the top for you?  In this talk we’ll investigate how information extraction systems work, implement one using scikit-learn and NLTK, and learn about natural language processing along the way.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Van Lindberg</dc:creator><pubDate>Mon, 20 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-20:pycon-us-2016/van-lindberg-structured-data-from-unstructured-text-pycon-2016.html</guid></item><item><title>Documentation-driven development - lessons from the Django Project</title><link>https://pyvideo.org/pycon-us-2016/daniele-procida-documentation-driven-development-lessons-from-the-django-project-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Daniele Procida&lt;/p&gt;
&lt;p&gt;One secret of Django's success is the quality of its documentation. As well as being key to the quality of the code itself, it has helped drive the development of Django as a community project, and even the professional development of programmers who adopt Django.&lt;/p&gt;
&lt;p&gt;I'll discuss how Django has achieved it, and how any project can easily win the same benefits.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniele Procida</dc:creator><pubDate>Fri, 17 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-17:pycon-us-2016/daniele-procida-documentation-driven-development-lessons-from-the-django-project-pycon-2016.html</guid></item><item><title>Kalman Filters for non-rocket science</title><link>https://pyvideo.org/pycon-us-2016/elizabeth-ramirez-kalman-filters-for-non-rocket-science-pycon-2016mp4.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Elizabeth Ramirez&lt;/p&gt;
&lt;p&gt;Kalman Filters have been widely used for scientific applications. No wonder people often think they involve complex math, however you can actually introduce the Kalman Filter in your daily data processing work, without the complex math you would imagine. This talk will show how to implement the discrete Kalman Filter in Python using NumPy and SciPy.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Elizabeth Ramirez</dc:creator><pubDate>Fri, 17 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-17:pycon-us-2016/elizabeth-ramirez-kalman-filters-for-non-rocket-science-pycon-2016mp4.html</guid></item><item><title>Small Batch Artisanal Bots- Let's Make Friends</title><link>https://pyvideo.org/pycon-us-2016/elizabeth-uselton-small-batch-artisanal-bots-lets-make-friends-pycon-2016mp4.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Elizabeth Uselton&lt;/p&gt;
&lt;p&gt;Bots are a fun, creative, community oriented project. They are perfect for a beginning programmer looking to build something cool, but open ended enough to hold the interest of an experienced developer. In this talk we'll go over the Python tools for building a great twitter bot, including where to find fun data sets, hosting your bot, delayed jobs, and examples of weird and wonderful bots.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Elizabeth Uselton</dc:creator><pubDate>Fri, 17 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-17:pycon-us-2016/elizabeth-uselton-small-batch-artisanal-bots-lets-make-friends-pycon-2016mp4.html</guid></item><item><title>What You Need to Know About Open Source Licenses</title><link>https://pyvideo.org/pycon-us-2016/felix-crux-what-you-need-to-know-about-open-source-licenses-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Felix Crux&lt;/p&gt;
&lt;p&gt;Anyone who uses Open Source has run into software licenses. Too often, our understanding of this mess of legalese is incomplete, confused, or based on bad assumptions. But we can’t ignore them: licenses govern everything about how we use others’ code — and how they use ours. Come learn the basics of copyright, what different licenses let you do, and why &amp;amp; how you should choose one for your code!&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felix Crux</dc:creator><pubDate>Fri, 17 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-17:pycon-us-2016/felix-crux-what-you-need-to-know-about-open-source-licenses-pycon-2016.html</guid></item><item><title>Laser Cutters, 3D Printers, and Python</title><link>https://pyvideo.org/pycon-us-2016/giles-hall-laser-cutters-3d-printers-and-python-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Giles Hall&lt;/p&gt;
&lt;p&gt;How to leverage python to generate physical, tangible things.  We will discuss the basics of laser cutters, 3D printers, and how you can use python to design physical objects.  After a brief introduction to these    technologies, we will explore a few different examples of how we can use python to generate designs suitable for 3D printing and laser cutting.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giles Hall</dc:creator><pubDate>Fri, 17 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-17:pycon-us-2016/giles-hall-laser-cutters-3d-printers-and-python-pycon-2016.html</guid></item><item><title>A Beginner's Guide to Deep Learning</title><link>https://pyvideo.org/pycon-us-2016/irene-chen-a-beginners-guide-to-deep-learning-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Irene Chen&lt;/p&gt;
&lt;p&gt;What is deep learning? It has recently exploded in popularity as a complex and incredibly powerful tool. This talk will present the basic concepts underlying deep learning in understandable pieces for complete beginners to machine learning. We will review the math, code up a simple neural network, and provide contextual background on how deep learning is used in production now.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Irene Chen</dc:creator><pubDate>Fri, 17 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-17:pycon-us-2016/irene-chen-a-beginners-guide-to-deep-learning-pycon-2016.html</guid></item><item><title>Statistics for Hackers</title><link>https://pyvideo.org/pycon-us-2016/jake-vanderplas-statistics-for-hackers-pycon-2016mp4.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Jake Vanderplas&lt;/p&gt;
&lt;p&gt;Statistics has the reputation of being difficult to understand, but using some simple Python skills it can be made much more intuitive. This talk will cover several sampling-based approaches to solving statistical problems, and show you that if you can write a for-loop, you can do statistics.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jake Vanderplas</dc:creator><pubDate>Fri, 17 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-17:pycon-us-2016/jake-vanderplas-statistics-for-hackers-pycon-2016mp4.html</guid></item><item><title>Publish your code so others can use it in 5 easy steps</title><link>https://pyvideo.org/pycon-us-2016/marko-samastur-publish-your-code-so-others-can-use-it-in-5-easy-steps-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Marko Samastur&lt;/p&gt;
&lt;p&gt;As developers we all love well-documented, well-tested packages. If we do the same for our code it is easier for others to re-use our hard work, and maybe even contribute. We will take a quick look on how to do this using popular tools and only a small investment of time. With Github and some simple tools, setting up a well-groomed package doesn't have to be difficult.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marko Samastur</dc:creator><pubDate>Fri, 17 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-17:pycon-us-2016/marko-samastur-publish-your-code-so-others-can-use-it-in-5-easy-steps-pycon-2016.html</guid></item><item><title>Advanced DNS Services for Securing Your Application and Enhancing User Privacy</title><link>https://pyvideo.org/pycon-us-2016/melinda-shore-advanced-dns-services-for-securing-your-application-and-enhancing-user-privacymp4.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Melinda Shore&lt;/p&gt;
&lt;p&gt;This talk introduces new features that have been added to the Domain Name System recently, and how to use those features to improve application security and user privacy. I also introduce the &amp;quot;getdns&amp;quot; Python library, which provides a simplified DNS API, and how to interface with popular crypto libraries.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Melinda Shore</dc:creator><pubDate>Fri, 17 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-17:pycon-us-2016/melinda-shore-advanced-dns-services-for-securing-your-application-and-enhancing-user-privacymp4.html</guid></item><item><title>Keeping cool, using a Raspberry PI to create a networked temperature sensor</title><link>https://pyvideo.org/pycon-us-2016/dwight-hubbard-keeping-cool-using-a-raspberry-pi-to-create-a-networked-temperature-sensor.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dwight Hubbard&lt;/p&gt;
&lt;p&gt;Want to keep things cool?  Come learn how to build a networked temperature sensor using a Raspberry PI, some simple hardware, and Python.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dwight Hubbard</dc:creator><pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-16:pycon-us-2016/dwight-hubbard-keeping-cool-using-a-raspberry-pi-to-create-a-networked-temperature-sensor.html</guid></item><item><title>Awaken your home: Python and the Internet of Things</title><link>https://pyvideo.org/pycon-us-2016/paulus-schoutsen-awaken-your-home-python-and-the-internet-of-things-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Paulus Schoutsen&lt;/p&gt;
&lt;p&gt;People are acquiring more and more connected devices for their homes. With no standard in place for communication, vendors are shipping their own platforms. This results in devices unable to work together. This talk shows people how to take control of their houses, their data and their privacy using Python – no cloud attached. Enter the world of Home Assistant.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paulus Schoutsen</dc:creator><pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-16:pycon-us-2016/paulus-schoutsen-awaken-your-home-python-and-the-internet-of-things-pycon-2016.html</guid></item><item><title>Visual Diagnostics for More Informed Machine Learning Within and Beyond Scikit-Learn</title><link>https://pyvideo.org/pycon-us-2016/visual-diagnostics-for-more-informed-machine-learning-within-and-beyond-scikit-learn-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Rebecca Bilbro&lt;/p&gt;
&lt;p&gt;Visualization has a critical role to play throughout the analytic process. Where static outputs and tabular data may render patterns opaque, human visual analysis can uncover volumes and lead to more robust programming and better data products. For Python programmers who dabble in machine learning, visual diagnostics are a must-have for effective feature analysis, model selection, and evaluation.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rebecca Bilbro</dc:creator><pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-16:pycon-us-2016/visual-diagnostics-for-more-informed-machine-learning-within-and-beyond-scikit-learn-pycon-2016.html</guid></item><item><title>Bayesian statistics made simple</title><link>https://pyvideo.org/pycon-us-2016/allen-downey-bayesian-statistics-made-simple-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Allen Downey&lt;/p&gt;
&lt;p&gt;An introduction to Bayesian statistics using Python. &amp;nbsp;Bayesian statistics are usually presented mathematically, but many of the ideas are easier to understand computationally. &amp;nbsp;People who know Python can get started quickly and use Bayesian analysis to solve real problems. &amp;nbsp;This tutorial is based on material and case studies from Think Bayes (O’Reilly Media).&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-09:pycon-us-2016/allen-downey-bayesian-statistics-made-simple-pycon-2016.html</guid></item><item><title>Refactoring Python: Why and how to restructure your code</title><link>https://pyvideo.org/pycon-us-2016/brett-slatkin-refactoring-python-why-and-how-to-restructure-your-code-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Brett Slatkin&lt;/p&gt;
&lt;p&gt;As programs gain complexity, it becomes harder to add features and fix bugs. Reorganizing code is an effective way to make programs more manageable. This talk will show you Pythonic ways to do the most imporant &amp;quot;&amp;quot;refactorings&amp;quot;&amp;quot;: Extract variables with __nonzero__; Change signatures with *args and **kwargs; Extract fields and classes with &amp;#64;property; Create stateful closures with __call__; and more!&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brett Slatkin</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-09:pycon-us-2016/brett-slatkin-refactoring-python-why-and-how-to-restructure-your-code-pycon-2016.html</guid></item><item><title>Get Started with Git</title><link>https://pyvideo.org/pycon-us-2016/david-baumgold-get-started-with-git-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: David &amp;quot;DB&amp;quot; Baumgold&lt;/p&gt;
&lt;p&gt;You want to learn Git, but you don't know where to start. Or maybe you're already using Git, but you know you're not using it to its full potential. With this tutorial, you'll level up from Git novice to Git wizard, learning how to master your version control system, travel through time, and change history.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David "DB" Baumgold</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-09:pycon-us-2016/david-baumgold-get-started-with-git-pycon-2016.html</guid></item><item><title>Outside-In TDD</title><link>https://pyvideo.org/pycon-us-2016/harry-percival-outside-in-tdd-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Harry Percival&lt;/p&gt;
&lt;p&gt;An intermediate-level Test-Driven-Development workshop, presented as a hands-on exploration of &amp;quot;&amp;quot;outside-in&amp;quot;&amp;quot; TDD, in the style of a code-dojo code kata.  Will include discussion of &amp;quot;&amp;quot;double-loop&amp;quot;&amp;quot; BDD/TDD, outside-in vs inside-out, a detailed discussion of the pros + cons of mocking, test isolation, letting the tests drive design, and what are tests for anyway?&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harry Percival</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-09:pycon-us-2016/harry-percival-outside-in-tdd-pycon-2016.html</guid><category>testing</category><category>tdd</category><category>Django</category><category>bdd</category></item><item><title>Machine Learning with Text in scikit-learn</title><link>https://pyvideo.org/pycon-us-2016/kevin-markham-machine-learning-with-text-in-scikit-learn-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Kevin Markham&lt;/p&gt;
&lt;p&gt;Although numeric data is easy to work with in Python, most knowledge created by humans is actually raw, unstructured text. By learning how to transform text into data that is usable by machine learning models, you drastically increase the amount of data that your models can learn from. In this tutorial, we'll build and evaluate predictive models from real-world text using scikit-learn.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Markham</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-09:pycon-us-2016/kevin-markham-machine-learning-with-text-in-scikit-learn-pycon-2016.html</guid></item><item><title>Making an Impact with Python Natural Language Processing Tools</title><link>https://pyvideo.org/pycon-us-2016/making-an-impact-with-python-natural-language-processing-tools-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speakers: Hobson Lane, Dan Fellin, Jeremy Robin&lt;/p&gt;
&lt;p&gt;Do your tweets get lost in the shuffle? Would you like to predict a tweet's impact before you hit send? Python now has all the tools to make this possible. Several Python packages for machine learning and natural language processing have reached &amp;quot;&amp;quot;critical mass&amp;quot;&amp;quot; and can now be combined to perform these and other powerful natural language processing tasks. This tutorial will teach you how.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hobson Lane</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-09:pycon-us-2016/making-an-impact-with-python-natural-language-processing-tools-pycon-2016.html</guid></item><item><title>Code Unto Others</title><link>https://pyvideo.org/pycon-us-2016/nathaniel-manista-augie-fackler-code-unto-others-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speakers: Nathaniel Manista, Augie Fackler&lt;/p&gt;
&lt;p&gt;Large codebases written by many authors over long periods of time too often become tragedies of the commons riddled with complexity and technical debt. We’ll cover the pathologies that specifically encumber collaborative software development (drawing on examples from the Mercurial codebase) and describe alternative practices, their efficacy, and the costs of adopting them.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathaniel Manista</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-09:pycon-us-2016/nathaniel-manista-augie-fackler-code-unto-others-pycon-2016.html</guid></item><item><title>Machete-mode debugging: Hacking your way out of a tight spot</title><link>https://pyvideo.org/pycon-us-2016/ned-batchelder-machete-mode-debugging-hacking-your-way-out-of-a-tight-spot-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Ned Batchelder&lt;/p&gt;
&lt;p&gt;When chasing mysterious bugs, it's helpful to use all the tools at your disposal.  We'll explore ways to use Python's dynamic tools to help track down the cause of head-scratching problems in large systems.  Tools include the inspect module, monkey-patching, trace functions, and the Python mechanisms at work behind them all.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ned Batchelder</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-09:pycon-us-2016/ned-batchelder-machete-mode-debugging-hacking-your-way-out-of-a-tight-spot-pycon-2016.html</guid></item><item><title>A Tour of Large-Scale Data Analysis Tools in Python</title><link>https://pyvideo.org/pycon-us-2016/sarah-guido-sean-oconnor-a-tour-of-large-scale-data-analysis-tools-in-python-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speakers: Sarah Guido, Sean O'Connor&lt;/p&gt;
&lt;p&gt;Large-scale data analysis is complicated. There’s a limit to how much data you can analyze on a single box, but it is relatively inexpensive to get access to a large number of commodity servers. In this tutorial, you’ll learn how to leverage the power of distributed computing tools to do large-scale data analysis quickly and affordably using pure Python, Hadoop MapReduce, and Apache Spark.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sarah Guido</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-09:pycon-us-2016/sarah-guido-sean-oconnor-a-tour-of-large-scale-data-analysis-tools-in-python-pycon-2016.html</guid></item><item><title>Python by Immersion</title><link>https://pyvideo.org/pycon-us-2016/stuart-williams-python-by-immersion-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Stuart Williams&lt;/p&gt;
&lt;p&gt;A very fast introduction to Python for software developers with experience in other languages.  Instead of a traditional top-down presentation of Python's features, syntax, and semantics, students are immersed in the language bottom-up with hundreds of small examples using the interactive interpreter to quickly gain familiarity with most of the core language features.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stuart Williams</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-09:pycon-us-2016/stuart-williams-python-by-immersion-pycon-2016.html</guid></item><item><title>Regular Expressions</title><link>https://pyvideo.org/pycon-us-2016/trey-hunner-regular-expressions-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Trey Hunner&lt;/p&gt;
&lt;p&gt;What are regular expressions, what are they useful for, and why are they so hard to read?  We'll learn what regular expressions are good for, how to make our own regular expressions, and how to make our regular expressions friendly and readable (yes it's possible, sort of).&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trey Hunner</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-09:pycon-us-2016/trey-hunner-regular-expressions-pycon-2016.html</guid></item><item><title>Write an Excellent Programming Blog</title><link>https://pyvideo.org/pycon-us-2016/a-jesse-jiryu-davis-write-an-excellent-programming-blog-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: A. Jesse Jiryu Davis&lt;/p&gt;
&lt;p&gt;Writing rewards you and benefits us all: when you write you refine your thinking, share your knowledge, and connect with your niche community. This talk describes the special challenges of writing a programming blog. It outlines solid article structures, and offers methods for generating ideas and writing more skillfully. Get the guidance and inspiration to craft articles of enduring value.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">A. Jesse Jiryu Davis</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/a-jesse-jiryu-davis-write-an-excellent-programming-blog-pycon-2016.html</guid></item><item><title>See Python, See Python Go, Go Python Go</title><link>https://pyvideo.org/pycon-us-2016/andrey-petrov-see-python-see-python-go-go-python-go-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Andrey Petrov&lt;/p&gt;
&lt;p&gt;Being able to run C code from Python is pretty great, but what about running Go code from Python? Or even Python from Go? This talk will walk through the process of executing calls between Python and Go using CFFI bindings to bridge the two runtimes.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrey Petrov</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/andrey-petrov-see-python-see-python-go-go-python-go-pycon-2016.html</guid></item><item><title>More Than Binary: Inclusive Gender Collection and You</title><link>https://pyvideo.org/pycon-us-2016/anne-decusatis-more-than-binary-inclusive-gender-collection-and-you-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Anne DeCusatis&lt;/p&gt;
&lt;p&gt;Many people identify their gender in many ways. So why do we build systems to capture accurate gender information with a dropdown that only lists “male” and “female”?
This talk covers why you might want to consider alternative ways of selecting gender for your users, a brief overview of the current best practices, issues addressed by my project Gender Amender, and why more work needs to be done.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anne DeCusatis</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/anne-decusatis-more-than-binary-inclusive-gender-collection-and-you-pycon-2016.html</guid></item><item><title>Accelerating healthcare transactions with Python and PyPy</title><link>https://pyvideo.org/pycon-us-2016/brian-corbin-accelerating-healthcare-transactions-with-python-and-pypy-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Brian Corbin&lt;/p&gt;
&lt;p&gt;Python is well suited for many file processing tasks. However, Python is an uncommon
language choice for many organizations that need to process large files of
healthcare transactions.  This talk will share lessons we've learned
processing healthcare transactions in Python running on PyPy.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Corbin</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/brian-corbin-accelerating-healthcare-transactions-with-python-and-pypy-pycon-2016.html</guid></item><item><title>Keynote</title><link>https://pyvideo.org/pycon-us-2016/cris-ewing-keynote-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Cris Ewing&lt;/p&gt;
&lt;p&gt;Keynote&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cris Ewing</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/cris-ewing-keynote-pycon-2016.html</guid></item><item><title>Final Remarks and Conference Close</title><link>https://pyvideo.org/pycon-us-2016/final-remarks-and-conference-close.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/final-remarks-and-conference-close.html</guid></item><item><title>Improving Learning Resources and Community for Deaf Sign Language Users through Deaf Awareness</title><link>https://pyvideo.org/pycon-us-2016/improving-learning-resources-and-community-for-deaf-sign-language-users-through-deaf-awareness.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Sarah Jessica Leivers&lt;/p&gt;
&lt;p&gt;Deaf people are underrepresented in programming roles and in the wider CS community. There are extra obstacles that Deaf people face when learning to code and integrating/networking within the industry. Python might be ideal for teaching Deaf people to program, and with the help of some Deaf Aware Pythonistas, the Python community might be the ideal place for Deaf programmers to feel included.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sarah Jessica Leivers</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/improving-learning-resources-and-community-for-deaf-sign-language-users-through-deaf-awareness.html</guid></item><item><title>User Research for Non-Researchers</title><link>https://pyvideo.org/pycon-us-2016/jane-davis-user-research-for-non-researchers-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Jane Davis&lt;/p&gt;
&lt;p&gt;User research is a great way to avoid wasting your time. It doesn't have to be time-consuming, elaborate, or performed by a UX professional.In this talk, I'll go over why and how to do lightweight research on any product or topic, no matter what your background and training are. I'll focus on the most effective tools for quick research, and some of the common pitfalls.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jane Davis</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/jane-davis-user-research-for-non-researchers-pycon-2016.html</guid></item><item><title>Keynote</title><link>https://pyvideo.org/pycon-us-2016/k-lars-lohn-keynote-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: K Lars Lohn&lt;/p&gt;
&lt;p&gt;Keynote&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">K Lars Lohn</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/k-lars-lohn-keynote-pycon-2016.html</guid></item><item><title>Removing Python's GIL: The Gilectomy</title><link>https://pyvideo.org/pycon-us-2016/larry-hastings-removing-pythons-gil-the-gilectomy-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Larry Hastings&lt;/p&gt;
&lt;p&gt;You've heard of Python's &amp;quot;&amp;quot;GIL&amp;quot;&amp;quot;... but what is it?  What problems does it solve?  How does it work?  What are the ramifications of its design?   Attendees should have a basic knowledge of multithreaded programming.  Understanding C is helpful but not required.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Larry Hastings</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/larry-hastings-removing-pythons-gil-the-gilectomy-pycon-2016.html</guid></item><item><title>What can software engineers learn from the medical field?</title><link>https://pyvideo.org/pycon-us-2016/laura-rupprecht-what-can-software-engineers-learn-from-the-medical-field-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Laura Rupprecht&lt;/p&gt;
&lt;p&gt;There is a long history of improvements to medical practices, many of which can be applied to software development. This talk will explore some of those practices, and how they can be translated to the world of software.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Laura Rupprecht</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/laura-rupprecht-what-can-software-engineers-learn-from-the-medical-field-pycon-2016.html</guid></item><item><title>Lightning Talks - 2016-05-31 AM</title><link>https://pyvideo.org/pycon-us-2016/lightning-talks-2016-05-31-am.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christine Spang</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/lightning-talks-2016-05-31-am.html</guid><category>lightning talks</category></item><item><title>Lightning Talks - 2016-05-31PM</title><link>https://pyvideo.org/pycon-us-2016/lightning-talks-2016-05-31pm.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica Garson</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/lightning-talks-2016-05-31pm.html</guid><category>lightning talks</category></item><item><title>Lightning Talks - 2016-06-01</title><link>https://pyvideo.org/pycon-us-2016/lightning-talks-2016-06-01.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hayley Denbraver</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/lightning-talks-2016-06-01.html</guid><category>lightning talks</category></item><item><title>Antipatterns for Diversity</title><link>https://pyvideo.org/pycon-us-2016/naomi-ceder-antipatterns-for-diversity-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Naomi Ceder&lt;/p&gt;
&lt;p&gt;Just as there is no single easy way to write good code there is no single easy way to increase diversity. There are, however, several things we (yes, even in the Python community) do which actually work against diversity. This talk will explore these anti-patterns for diversity,  as well as some ways that teams, companies, and organizations might work to combat them.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Naomi Ceder</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/naomi-ceder-antipatterns-for-diversity-pycon-2016.html</guid></item><item><title>Computational Physics with Python: Planetary Orbits from Newton to Feynman</title><link>https://pyvideo.org/pycon-us-2016/pramod-gupta-computational-physics-with-python-planetary-orbits-from-newton-to-feynman.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Pramod Gupta&lt;/p&gt;
&lt;p&gt;Newton's explanation of planetary orbits is one of the greatest achievements of science. We will follow Feynman's approach to show how the motion of the planets around the sun can be calculated using computers and without using Newton's advanced mathematics. This talk will convince you that doing physics with Python is way more fun than the way you did physics in high school or university.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pramod Gupta</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/pramod-gupta-computational-physics-with-python-planetary-orbits-from-newton-to-feynman.html</guid></item><item><title>Diff It To Dig It</title><link>https://pyvideo.org/pycon-us-2016/sep-dehpour-seperman-diff-it-to-dig-it-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Sep Dehpour (Seperman)&lt;/p&gt;
&lt;p&gt;Do you know about objects __dict__ and __slots__ and what they hold? Hashing unhashables? Objects with loops pointing to themselves? Objects that have changed and you want to know how? No? Then this is the talk for you. In this talk we will learn a lot by diffing Python data types and objects, the same way that you can learn a lot about code by git diff. May the diff habit be with you!&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sep Dehpour</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/sep-dehpour-seperman-diff-it-to-dig-it-pycon-2016.html</guid></item><item><title>Python for Public Health: Building Statistical Models of Ciliary Motion</title><link>https://pyvideo.org/pycon-us-2016/shannon-quinn-python-for-public-health-building-statistical-models-of-ciliary-motion-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Shannon Quinn&lt;/p&gt;
&lt;p&gt;Cilia, microscopic hairs lining nearly every cell surface in your body, play a major role in developmental and sinopulmonary health. As such, deriving quantitative properties of their motion is compelling for both clinical and research purposes. Here we demonstrate a computational pipeline built entirely in Python for analyzing ciliary motion using a variety of machine learning techniques.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shannon Quinn</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/shannon-quinn-python-for-public-health-building-statistical-models-of-ciliary-motion-pycon-2016.html</guid></item><item><title>Thank you</title><link>https://pyvideo.org/pycon-us-2016/thank-you.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/thank-you.html</guid></item><item><title>Python Software Foundation</title><link>https://pyvideo.org/pycon-us-2016/van-lindberg-python-software-foundation-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Van Lindberg&lt;/p&gt;
&lt;p&gt;Python Software Foundation&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Van Lindberg</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/van-lindberg-python-software-foundation-pycon-2016.html</guid></item><item><title>Bake the Cookies, Wear the Dress: Connecting with Confident Authenticity</title><link>https://pyvideo.org/pycon-us-2016/adrienne-lowe-bake-the-cookies-wear-the-dress-connecting-with-confident-authenticity.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Adrienne Lowe&lt;/p&gt;
&lt;p&gt;Are you interested in speaking at a tech conference, but you're unsure how you might share relevant technical information in an engaging way? Are you in a position of leadership or mentorship in open source and want to be more approachable, accessible, and collaborative? In a fun and light-hearted talk, learn actionable suggestions for inspiring others with your own confident authenticity.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrienne Lowe</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/adrienne-lowe-bake-the-cookies-wear-the-dress-connecting-with-confident-authenticity.html</guid></item><item><title>The cobbler's children have no shoes, or building better tools for ourselves</title><link>https://pyvideo.org/pycon-us-2016/alex-gaynor-the-cobblers-children-have-no-shoes-or-building-better-tools-for-ourselves.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Alex Gaynor&lt;/p&gt;
&lt;p&gt;As developers, we make programs which do things. But we don't build nearly enough programs to make our own jobs easier. Once, not all that long ago, we didn't even have continuous integration servers. This talk will go through what types of new specialized tools we, as developers, can and should be building to make our jobs better.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Gaynor</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/alex-gaynor-the-cobblers-children-have-no-shoes-or-building-better-tools-for-ourselves.html</guid></item><item><title>Exception and error handling in Python 2 and Python 3</title><link>https://pyvideo.org/pycon-us-2016/alex-martelli-exception-and-error-handling-in-python-2-and-python-3-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Alex Martelli&lt;/p&gt;
&lt;p&gt;Handling errors and exceptions optimally is crucial in solid Python programs. Some technical details have changed in Python 3, and the talk covers those, but the core of &amp;quot;&amp;quot;best practices&amp;quot;&amp;quot; is quite enduring, and the talk focuses on presenting and explaining them.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Martelli</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/alex-martelli-exception-and-error-handling-in-python-2-and-python-3-pycon-2016.html</guid></item><item><title>To mock, or not to mock, that is the question</title><link>https://pyvideo.org/pycon-us-2016/ana-balica-to-mock-or-not-to-mock-that-is-the-question-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Ana Balica&lt;/p&gt;
&lt;p&gt;Mocking is a very powerful testing concept that has some dangerous pitfalls. There are obvious use cases where mocks are an absolute requirement to be able to test a part of the app. Nevertheless sometimes apparently useful mocks can yield erroneous test results. This talk goes into deeper detail on the trade-off of using mocks in testing.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ana Balica</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/ana-balica-to-mock-or-not-to-mock-that-is-the-question-pycon-2016.html</guid></item><item><title>Reinventing Django for the Real-Time Web</title><link>https://pyvideo.org/pycon-us-2016/andrew-godwin-reinventing-django-for-the-real-time-web-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Andrew Godwin&lt;/p&gt;
&lt;p&gt;Django has long been tied to the request-response pattern, but the upcoming &amp;quot;&amp;quot;channels&amp;quot;&amp;quot; project changes this and allows Django to natively support WebSockets, running tasks after responses, easily handle long-polling and more. Come and learn about the design, how we're trying to keep things as Django-like as possible, and how you can use it in your projects.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Godwin</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/andrew-godwin-reinventing-django-for-the-real-time-web-pycon-2016.html</guid></item><item><title>Wrestling Python into LLVM Intermediate Representation</title><link>https://pyvideo.org/pycon-us-2016/anna-herlihy-wrestling-python-into-llvm-intermediate-representation-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Anna Herlihy&lt;/p&gt;
&lt;p&gt;The LLVM Project provides an intermediate representation (LLVM-IR) that can be compiled on many platforms. LLVM-IR is used by analytical frameworks to achieve language and platform independence. What if we could add Python to the long list of languages that can be translated to LLVM-IR? This talk will go through the steps of wrestling Python into LLVM-IR with a simple, static one-pass compiler.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anna Herlihy</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/anna-herlihy-wrestling-python-into-llvm-intermediate-representation-pycon-2016.html</guid></item><item><title>xonsh</title><link>https://pyvideo.org/pycon-us-2016/anthony-scopatz-xonsh-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Anthony Scopatz&lt;/p&gt;
&lt;p&gt;Xonsh is general purpose shell that combines Python and the best features of Bash, zsh, and fish. Relying only the standard library and PLY, the xonsh language is a strict superset of Python that compiles to a Python AST.  The shell provides exciting features such as a rich history, tab completion from bash and man pages, syntax highlighting, auto-suggestion, foreign-function aliases and more!&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anthony Scopatz</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/anthony-scopatz-xonsh-pycon-2016.html</guid></item><item><title>Dispelling the 'Genius Programmer' myth through code review</title><link>https://pyvideo.org/pycon-us-2016/ashwini-oruganti-dispelling-the-genius-programmer-myth-through-code-review-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Ashwini Oruganti&lt;/p&gt;
&lt;p&gt;We often hear people lament how hard it is to get a patch accepted to large Python open source libraries. Through a series of (often amusing) real-life anecdotes from Twisted, RPython, Cryptography, and examples from many other Python libraries, come learn about code reviews, getting your patches accepted, and tools/processes to encourage quality contributions.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ashwini Oruganti</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/ashwini-oruganti-dispelling-the-genius-programmer-myth-through-code-review-pycon-2016.html</guid></item><item><title>Oneliner-izer: An Exercise in Constrained Coding</title><link>https://pyvideo.org/pycon-us-2016/chelsea-voss-oneliner-izer-an-exercise-in-constrained-coding-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Chelsea Voss&lt;/p&gt;
&lt;p&gt;We'll describe the ideas and implementation behind Oneliner-izer, a &amp;quot;&amp;quot;compiler&amp;quot;&amp;quot; which can convert most Python 2 programs into one line of code. As we discuss how to construct each language feature within this unorthodox constraint, we'll explore the boundaries of what Python permits and encounter some gems of functional programming –&amp;nbsp;lambda calculus, continuations, and the Y combinator.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chelsea Voss</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/chelsea-voss-oneliner-izer-an-exercise-in-constrained-coding-pycon-2016.html</guid></item><item><title>Trainspotting: real-time detection of a train’s passing from video</title><link>https://pyvideo.org/pycon-us-2016/chloe-mawer-trainspotting-real-time-detection-of-a-trains-passing-from-video-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Chloe Mawer&lt;/p&gt;
&lt;p&gt;Almost anyone can set up their motion detection surveillance using just a few Python functions. This talk will walk through the development of a model used to detect whether a train is passing and in what direction it is going using a real-time video feed. You’ll learn some basic motion detection techniques in Python as well as the effects of video quality on implementation.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chloe Mawer</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/chloe-mawer-trainspotting-real-time-detection-of-a-trains-passing-from-video-pycon-2016.html</guid></item><item><title>Django 1.8/1.9 and PostgreSQL: An Ever-Closer Union</title><link>https://pyvideo.org/pycon-us-2016/christophe-pettus-django-1819-and-postgresql-an-ever-closer-union-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Christophe Pettus&lt;/p&gt;
&lt;p&gt;Django 1.8/1.9 adds a whole bunch of cool new features that are specifically designed for PostgreSQL. We'll take a quick tour through them, and show when and how you can use them in real-world applications. We'll also talk about how to get the best performance out of PostgreSQL when using the Django ORM.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christophe Pettus</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/christophe-pettus-django-1819-and-postgresql-an-ever-closer-union-pycon-2016.html</guid></item><item><title>Building Protocol Libraries The Right Way</title><link>https://pyvideo.org/pycon-us-2016/cory-benfield-building-protocol-libraries-the-right-way-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Cory Benfield&lt;/p&gt;
&lt;p&gt;One of the great strengths of the Python ecosystem is the enormous collection of powerful, flexible libraries. However, these libraries tend to suffer from one extremely common design flaw that mean that the work done is not easily re-usable or transferable. In this talk, we talk about how to build libraries that can be used as widely as possible, through the lens of the Python Hyper HTTP project.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Benfield</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/cory-benfield-building-protocol-libraries-the-right-way-pycon-2016.html</guid></item><item><title>Postgres present and future</title><link>https://pyvideo.org/pycon-us-2016/craig-kerstiens-postgres-present-and-future-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Craig Kerstiens&lt;/p&gt;
&lt;p&gt;Postgres 9.5 was just released a few months ago and has a number of of new improvements we'll walk through including new JSONB functions, some analytical tooling, and of course upsert. Then we'll dive into what's coming in Postgres 9.6, the next Postgres release. Finally, we'll round it out with some look at the ecosystem of extensions.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Craig Kerstiens</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/craig-kerstiens-postgres-present-and-future-pycon-2016.html</guid></item><item><title>The New Mobile Web: Service Worker, Push, and App Manifests</title><link>https://pyvideo.org/pycon-us-2016/dan-callahan-the-new-mobile-web-service-worker-push-and-app-manifests-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dan Callahan&lt;/p&gt;
&lt;p&gt;Compared to native apps, mobile websites are at a disadvantage: no installing, no push notifications, and they only work when you're online. This year, that changes.&lt;/p&gt;
&lt;p&gt;Browser vendors are working together to implement open standards that address each of these shortcomings. This session examines how the Service Worker, Push, and App Manifest specifications fill the gap between web and native.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Callahan</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/dan-callahan-the-new-mobile-web-service-worker-push-and-app-manifests-pycon-2016.html</guid></item><item><title>Remote Calls != Local Calls: Graceful Degradation when Services Fail</title><link>https://pyvideo.org/pycon-us-2016/daniel-riti-remote-calls-local-calls-graceful-degradation-when-services-fail-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Daniel Riti&lt;/p&gt;
&lt;p&gt;In a world where we are becoming more dependent on the network to be reliable due to trends to decouple systems into distributed services, we must do our best to expect failure to occur everywhere and anywhere. This talks aims to explore different techniques for gracefully degrading when the networks fail and the services we depend on are no longer available.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Riti</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/daniel-riti-remote-calls-local-calls-graceful-degradation-when-services-fail-pycon-2016.html</guid></item><item><title>SQLite: Gotchas and Gimmes</title><link>https://pyvideo.org/pycon-us-2016/dave-sawyer-sqlite-gotchas-and-gimmes-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dave Sawyer&lt;/p&gt;
&lt;p&gt;Python's sqlite module provides access to the most deployed database engine
in the world. We'll go beyond the docs to discover how to unlock the full
power of SQLite without additional libraries. We'll identify deadly
pitfalls and produce clean Pythonic code. Find out why the creators say to
think of SQLite not as a replacement for Oracle, but as a replacement for
open().&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Sawyer</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/dave-sawyer-sqlite-gotchas-and-gimmes-pycon-2016.html</guid></item><item><title>HTTP/2 and Asynchronous APIs</title><link>https://pyvideo.org/pycon-us-2016/davey-shafik-http2-and-asynchronous-apis-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Davey Shafik&lt;/p&gt;
&lt;p&gt;HTTP/2 (H2) is coming, and along with it a whole new way of communicating over the web. Connection re-use, prioritization, multiplexing, and server push are just some of the features in H2, and they will change how the web works.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Davey Shafik</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/davey-shafik-http2-and-asynchronous-apis-pycon-2016.html</guid></item><item><title>Prototyping New APIs with Flask</title><link>https://pyvideo.org/pycon-us-2016/david-baumgold-prototyping-new-apis-with-flask-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: David &amp;quot;DB&amp;quot; Baumgold&lt;/p&gt;
&lt;p&gt;You need to build a new API, but which tools do you use? Flask is a microframework that makes web development a snap, and an ecosystem of extensions and other tools has grown around it to make it perfect for prototyping APIs. In this talk, we'll see how to get started with Flask, and learn the best parts of its ecosystem for API development.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/singingwolfbo"&gt;https://speakerdeck.com/singingwolfbo&lt;/a&gt;... and there is a GitHub repository for the code here: &lt;a class="reference external" href="https://github.com/singingwolfboy/bui"&gt;https://github.com/singingwolfboy/bui&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://us.pycon.org/2016/schedule/pr"&gt;https://us.pycon.org/2016/schedule/pr&lt;/a&gt;...&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David "DB" Baumgold</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/david-baumgold-prototyping-new-apis-with-flask-pycon-2016.html</guid></item><item><title>Pythons in A Container - Lessons Learned Dockerizing Python Micro-Services</title><link>https://pyvideo.org/pycon-us-2016/dorian-pula-pythons-in-a-container-lessons-learned-dockerizing-python-micro-services.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dorian Pula&lt;/p&gt;
&lt;p&gt;Micro-services and Docker are all the rage for developing scalable systems.  But what challenges will you face when developing and deploying Python apps using Docker to production? This talk goes into the real-life lessons learned from creating, deploying and scaling Dockerized Python applications.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dorian Pula</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/dorian-pula-pythons-in-a-container-lessons-learned-dockerizing-python-micro-services.html</guid></item><item><title>What Is and What Can Be: An Exploration from `type` to Metaclasses</title><link>https://pyvideo.org/pycon-us-2016/dustin-ingram-what-is-and-what-can-be-an-exploration-from-type-to-metaclasses-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dustin Ingram&lt;/p&gt;
&lt;p&gt;Most of us use &lt;cite&gt;type&lt;/cite&gt; every day, but few can say they know it well. This talk explores &lt;cite&gt;type&lt;/cite&gt; and along the way, reveals how it relates to &lt;cite&gt;object&lt;/cite&gt;, &lt;cite&gt;class&lt;/cite&gt; and more, eventually arriving at deeper understanding of metaclasses in Python.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/dustin-ingram-what-is-and-what-can-be-an-exploration-from-type-to-metaclasses-pycon-2016.html</guid><category>metaclasses</category><category>metaprogramming</category><category>types</category></item><item><title>Teaching Python: The Hard Parts</title><link>https://pyvideo.org/pycon-us-2016/elana-hashman-teaching-python-the-hard-parts-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Elana Hashman&lt;/p&gt;
&lt;p&gt;So you want to share the love and start teaching Python? It's dangerous to go alone! In this talk, I will share some of my experience teaching Python to newcomers of all levels and issues I've encountered. I hope to raise your awareness of some of the pitfalls different beginner Python programmers encounter, giving you some tools to help you build curriculum and answer difficult student questions.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Elana Hashman</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/elana-hashman-teaching-python-the-hard-parts-pycon-2016.html</guid></item><item><title>Diving into the Wreck: a postmortem look at real-world performance</title><link>https://pyvideo.org/pycon-us-2016/geoff-gerrietts-diving-into-the-wreck-a-postmortem-look-at-real-world-performance-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Geoff Gerrietts&lt;/p&gt;
&lt;p&gt;As a young engineer interested in performance, much of the advice I saw on performance management focused on algorithms and rules of thumb. It’s good advice, but it doesn’t address the most common problems. This talk will cover a handful of the most common performance problems I’ve encountered in my career. We will talk about how to recognize them, what causes them, and how to resolve them.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geoff Gerrietts</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/geoff-gerrietts-diving-into-the-wreck-a-postmortem-look-at-real-world-performance-pycon-2016.html</guid></item><item><title>Shipping Software To Users With Python</title><link>https://pyvideo.org/pycon-us-2016/glyph-shipping-software-to-users-with-python-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Glyph&lt;/p&gt;
&lt;p&gt;Python is a versatile language, available on a wide variety of platforms. However, when it comes to shipping code to users on those platforms, Python violates Zen Rule 13: “There should be one—and preferably only one—obvious way to do it.”: there are a lot of ways to do it, and many of them are far from obvious.  In this talk I'll show you how to build Python code into something a user can use.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Glyph</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/glyph-shipping-software-to-users-with-python-pycon-2016.html</guid></item><item><title>Python Sorted Collections</title><link>https://pyvideo.org/pycon-us-2016/grant-jenks-python-sorted-collections-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Grant Jenks&lt;/p&gt;
&lt;p&gt;C++, Java, and .NET provide sorted collections types. Wish Python did too? Look around and you'll find Pandas DataFrame indexes, Sqlite in-memory databases, even redis-py sorted set commands. The SortedContainers module was designed to fill this gap with sorted list, dict and set implementations. It's written in pure-Python but generally faster than C-extension modules. Come see how it works.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Grant Jenks</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/grant-jenks-python-sorted-collections-pycon-2016.html</guid></item><item><title>Python Language</title><link>https://pyvideo.org/pycon-us-2016/guido-van-rossum-python-language-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Guido van Rossum&lt;/p&gt;
&lt;p&gt;Python Language&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guido van Rossum</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/guido-van-rossum-python-language-pycon-2016.html</guid></item><item><title>How I built a power debugger out of the standard library and things I found on the internet</title><link>https://pyvideo.org/pycon-us-2016/how-i-built-a-power-debugger-out-of-the-standard-library-and-things-i-found-on-the-internet.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Doug Hellmann&lt;/p&gt;
&lt;p&gt;Smiley spys on your application, recording everything it does, using Python's built-in tracing facility and a database to create a complete record of your program's runtime so you can study it. Most of the tools I used to create Smiley are in Python's standard library, and the history of Smiley's development serves as a framework to discuss those tools and how you can tap their power yourself.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Doug Hellmann</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/how-i-built-a-power-debugger-out-of-the-standard-library-and-things-i-found-on-the-internet.html</guid></item><item><title>Get Instrumented: How Prometheus Can Unify Your Metrics</title><link>https://pyvideo.org/pycon-us-2016/hynek-schlawack-get-instrumented-how-prometheus-can-unify-your-metrics-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Hynek Schlawack&lt;/p&gt;
&lt;p&gt;To get real time insight into your running applications you need to instrument them and collect metrics: count events, measure times, expose numbers. Sadly this important aspect of development was a patchwork of half-integrated solutions for years. Prometheus changed that and this talk will walk you through instrumenting your apps and servers, building dashboards, and monitoring using metrics.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hynek Schlawack</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/hynek-schlawack-get-instrumented-how-prometheus-can-unify-your-metrics-pycon-2016.html</guid></item><item><title>IPython Notebook in Data Intensive Communities: Accelerating the process of Discovery</title><link>https://pyvideo.org/pycon-us-2016/ipython-notebook-in-data-intensive-communities-accelerating-the-process-of-discovery-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speakers: Frances Haugen, Patrick Phelps&lt;/p&gt;
&lt;p&gt;How does IPython Notebook (also known as Jupyter Notebook) change how data intensive teams work? This talk focuses on how the Search and Ads teams at Yelp adopted IPython notebook and how it changed how analysis is undertaken and communicated. Tradeoffs between ease-of-use and reusable code production will also be discussed along with security implications of adoption in an enterprise context.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Frances Haugen</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/ipython-notebook-in-data-intensive-communities-accelerating-the-process-of-discovery-pycon-2016.html</guid></item><item><title>Better Integration Testing with Cucumber</title><link>https://pyvideo.org/pycon-us-2016/jay-goel-better-integration-testing-with-cucumber-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Jay Goel&lt;/p&gt;
&lt;p&gt;One of the hardest questions to answer is &amp;quot;&amp;quot;does my program help the user accomplish their goals?&amp;quot;&amp;quot; Whether that person is using our website or a programmer using our library, this talk will describe how to write automated tests which map to tasks our users are trying to accomplish. We will demonstrate specific Python testing libraries and evaluate the pros and cons of this approach to testing.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jay Goel</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/jay-goel-better-integration-testing-with-cucumber-pycon-2016.html</guid></item><item><title>Networking without an OS</title><link>https://pyvideo.org/pycon-us-2016/josh-triplett-networking-without-an-os-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Josh Triplett&lt;/p&gt;
&lt;p&gt;Many Python modules, such as socket and select, wrap low-level functionality written in C and provided by the OS. But what if you don't have an OS, and don't want any C code? We implemented client and server networking in Python itself, for a bare-metal environment running without an OS.&lt;/p&gt;
&lt;p&gt;Our socket and select implementations support Python HTTP server and client modules, which we'll demo live.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Triplett</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/josh-triplett-networking-without-an-os-pycon-2016.html</guid></item><item><title>Usable Ops: How to make web infrastructure management easier.</title><link>https://pyvideo.org/pycon-us-2016/kate-heddleston-joyce-jang-usable-ops-how-to-make-web-infrastructure-management-easier.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speakers: Kate Heddleston, Joyce Jang&lt;/p&gt;
&lt;p&gt;As developer tools increase in power, the systems we’re able to build do too. However, with great power comes great...complexity, and the systems we build today are more complex than ever before. This talk is about reducing the complexity of your web infrastructure, and making it easier for developers on your team to learn, use, and manage your infrastructure.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kate Heddleston</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/kate-heddleston-joyce-jang-usable-ops-how-to-make-web-infrastructure-management-easier.html</guid></item><item><title>The computer science of marking computer science assignments</title><link>https://pyvideo.org/pycon-us-2016/katie-bell-the-computer-science-of-marking-computer-science-assignments-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Katie Bell&lt;/p&gt;
&lt;p&gt;When writing systems to test if beginner programmers' code was correct, I didn't expect to need numpy, scipy a custom C module and a whole lot of cool geometry algorithms. Giving actionable feedback on tasks (in this case logo/turtle vector drawings), is necessary for the learning process and goes some fun places. Take this as a case study of writing efficient geometry number crunching in Python.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Bell</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/katie-bell-the-computer-science-of-marking-computer-science-assignments-pycon-2016.html</guid></item><item><title>Build a Better Hat Rack: All Contributions Welcome</title><link>https://pyvideo.org/pycon-us-2016/katie-mclaughlin-build-a-better-hat-rack-all-contributions-welcome-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Katie McLaughlin&lt;/p&gt;
&lt;p&gt;By default, we idolise a 'open source contributor' as a person that contributes code. But what about all the other things in the software development lifecycle - documentation, code review, marketing, support - so much work happens without proper acknowledgement. Learn just how every little bit helps, and how to find and acknowledge these contributions.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie McLaughlin</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/katie-mclaughlin-build-a-better-hat-rack-all-contributions-welcome-pycon-2016.html</guid></item><item><title>Why can't we be friends: do corporations and FOSS really mix?</title><link>https://pyvideo.org/pycon-us-2016/lynn-root-noa-resare-why-cant-we-be-friends-do-corporations-and-foss-really-mix-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speakers: Lynn Root, Noa Resare&lt;/p&gt;
&lt;p&gt;Many folks in the Python community appreciate and contribute to Free and Open Source Software. But sometimes, your employer may not be on your side. We will present the current problem space that both community members and companies have for using and supporting FOSS. We will then walk you through arguments and solutions to help increase your company's engagement with the community.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lynn Root</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/lynn-root-noa-resare-why-cant-we-be-friends-do-corporations-and-foss-really-mix-pycon-2016.html</guid></item><item><title>Putting 1 million new words into the dictionary</title><link>https://pyvideo.org/pycon-us-2016/manuel-ebert-putting-1-million-new-words-into-the-dictionary-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Manuel Ebert&lt;/p&gt;
&lt;p&gt;2015 was the year of spocking, amabots, dadbuds, and smol. Like half of all english words used every day, these words are not in the dictionary. Until we put them there. In this talk, I’ll describe how we found definitions for 1 Million words that were missing from dictionaries, what it takes to do Natural Language Processing at that scale, and how to be the least popular scrabble winner.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Manuel Ebert</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/manuel-ebert-putting-1-million-new-words-into-the-dictionary-pycon-2016.html</guid></item><item><title>Better Testing With Less Code: Property Based Testing With Python</title><link>https://pyvideo.org/pycon-us-2016/matt-bachmann-better-testing-with-less-code-property-based-testing-with-python-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Matt Bachmann&lt;/p&gt;
&lt;p&gt;Standard unit tests have developers test specific inputs and outputs. This works, but often what breaks code are the cases we did not think about. Property based testing has developers define properties of output and has the computer explore the possible inputs to verify these properties. This talk will introduce property based testing and provide real world examples and patterns.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Bachmann</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/matt-bachmann-better-testing-with-less-code-property-based-testing-with-python-pycon-2016.html</guid></item><item><title>Python Typology</title><link>https://pyvideo.org/pycon-us-2016/matthias-kramm-python-typology-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Matthias Kramm&lt;/p&gt;
&lt;p&gt;With PEP 484, Python now has a standard for adding type declarations to your programs. What checks these declarations, and how? I present one of the options, pytype, which Google has been working on for the last two years.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthias Kramm</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/matthias-kramm-python-typology-pycon-2016.html</guid></item><item><title>Build Serverless Realtime Data Pipelines with Python and AWS Lambda</title><link>https://pyvideo.org/pycon-us-2016/mercedes-coyle-build-serverless-realtime-data-pipelines-with-python-and-aws-lambda-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Mercedes Coyle&lt;/p&gt;
&lt;p&gt;At Scripps Networks Living, we operate a network of video players generating around 100 million events per day. In order to process, store, and analyze this data, we operate batch and realtime data pipelines based off of Lambda Architecture principles. After outgrowing our original events system, we rebuilt it from the ground up based on AWS Services and the learnings from our original system.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mercedes Coyle</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/mercedes-coyle-build-serverless-realtime-data-pipelines-with-python-and-aws-lambda-pycon-2016.html</guid></item><item><title>The Life Cycle of a Python Class</title><link>https://pyvideo.org/pycon-us-2016/mike-graham-the-life-cycle-of-a-python-class-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Mike Graham&lt;/p&gt;
&lt;p&gt;And end-to-end look at the life and death of a class and its instance.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Graham</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/mike-graham-the-life-cycle-of-a-python-class-pycon-2016.html</guid></item><item><title>Education Summit wrap-up: teaching Python — how hard can it be?</title><link>https://pyvideo.org/pycon-us-2016/nicholas-tollervey-education-summit-wrap-up-teaching-python-how-hard-can-it-be-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Nicholas Tollervey&lt;/p&gt;
&lt;p&gt;If you teach, if you Python — join us for a whirlwind tour of this year's Python Education Summit.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicholas Tollervey</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/nicholas-tollervey-education-summit-wrap-up-teaching-python-how-hard-can-it-be-pycon-2016.html</guid></item><item><title>Memory Management in Python - The Basics</title><link>https://pyvideo.org/pycon-us-2016/nina-zakharenko-memory-management-in-python-the-basics-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Nina Zakharenko&lt;/p&gt;
&lt;p&gt;As a new python developer, do you find memory management in Python confusing? Come to this talk to learn about the basics of how Memory Management works in Python. We'll cover the concepts of reference counting, garbage collection, weak references, __slots__, and the Global Interpreter Lock.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nina Zakharenko</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/nina-zakharenko-memory-management-in-python-the-basics-pycon-2016.html</guid></item><item><title>Keynote</title><link>https://pyvideo.org/pycon-us-2016/parisa-tabriz-keynote-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Parisa Tabriz&lt;/p&gt;
&lt;p&gt;Keynote&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parisa Tabriz</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/parisa-tabriz-keynote-pycon-2016.html</guid></item><item><title>Reliably Distributing Compiled Modules</title><link>https://pyvideo.org/pycon-us-2016/paul-kehrer-reliably-distributing-compiled-modules-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Paul Kehrer&lt;/p&gt;
&lt;p&gt;Shipping Python libraries is easy! ...until you want to use a C library. How do you easily and reliably deliver software to users when they may not have the libraries you depend on, or even a compiler? How do you handle the significant differences between linux, OS X, Windows, FreeBSD, and other platforms Python runs on?&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Kehrer</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/paul-kehrer-reliably-distributing-compiled-modules-pycon-2016.html</guid></item><item><title>Unit Tests, Cluster Tests: A Comparative Introduction</title><link>https://pyvideo.org/pycon-us-2016/renee-chu-unit-tests-cluster-tests-a-comparative-introduction-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Renee Chu&lt;/p&gt;
&lt;p&gt;You've worked on a shared code base and contributed software tests. Great job! But you don't yet know how to set up the holy grail: Having test coverage that's so complete, you can sleep easy knowing any mistake is caught and spoken for. This talk is a &amp;quot;&amp;quot;102&amp;quot;&amp;quot; level of test talks, describing the different layers of test protection (unit and cluster) and how to approach writing each.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Renee Chu</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/renee-chu-unit-tests-cluster-tests-a-comparative-introduction-pycon-2016.html</guid></item><item><title>Discovering the world of Python through music</title><link>https://pyvideo.org/pycon-us-2016/ria-baldevia-discovering-the-world-of-python-through-music-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Ria Baldevia&lt;/p&gt;
&lt;p&gt;This talk aims to explain how music is a great way to learn Python with Pedro Kroger's  music programming library, Pyknon. In music programming, data structures are really important in order to organize notes, chords, durations, and rests. Eventually, a music programmer will utilize patterns and sequences in order to compose several bars of music.
This talk will utilize an animated presentation.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ria Baldevia</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/ria-baldevia-discovering-the-world-of-python-through-music-pycon-2016.html</guid></item><item><title>A tale of two cellphones: Python on Android and iOS</title><link>https://pyvideo.org/pycon-us-2016/russell-keith-magee-a-tale-of-two-cellphones-python-on-android-and-ios-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Russell Keith-Magee&lt;/p&gt;
&lt;p&gt;Python is enjoying a surge in popularity due to it's features as a language. However, over the last 10 years, mobile platforms have increased in importance, and Python doesn't have a good story on these platforms.&lt;/p&gt;
&lt;p&gt;In this talk, Dr Russell Keith-Magee will give a technical dive into the work the BeeWare project has been doing to make Python as simple to use on Mobile as it is on other platforms.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Russell Keith-Magee</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/russell-keith-magee-a-tale-of-two-cellphones-python-on-android-and-ios-pycon-2016.html</guid></item><item><title>Playing with Python Bytecode</title><link>https://pyvideo.org/pycon-us-2016/scott-sanderson-joe-jevnik-playing-with-python-bytecode-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speakers: Scott Sanderson, Joe Jevnik&lt;/p&gt;
&lt;p&gt;Ever wondered what Python is actually doing when it executes your code?  Want to learn to hand-craft artisanal Python bytecode?  In this talk, we explain CPython's internal code representation, and we demonstrate techniques for modifying code objects for fun and profit.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Sanderson</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/scott-sanderson-joe-jevnik-playing-with-python-bytecode-pycon-2016.html</guid></item><item><title>From Developer to Manager</title><link>https://pyvideo.org/pycon-us-2016/sean-oconnor-from-developer-to-manager-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Sean O'Connor&lt;/p&gt;
&lt;p&gt;As developers move along in their career, they will often be given the chance to move into management. This can be great, but it can also end in tears. In this talk we'll follow one developer's journey into management. Through that process we'll explore what one should think about before embarking on their own journey as well as some lessons for those who do decide to go down the management path.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sean O'Connor</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/sean-oconnor-from-developer-to-manager-pycon-2016.html</guid></item><item><title>Click: A Pleasure To Write, A Pleasure To Use</title><link>https://pyvideo.org/pycon-us-2016/sebastian-vetter-click-a-pleasure-to-write-a-pleasure-to-use-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Sebastian Vetter&lt;/p&gt;
&lt;p&gt;We have a wide variety of packages and modules in Python that help build commandline tools in different ways. One of the more recent contenders is 'click'. It uses a very intuitive approach to create simple CLIs as well as complex ones. In this talk, I will introduce building CLIs with 'click' and illustrate some of its advantages.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Vetter</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/sebastian-vetter-click-a-pleasure-to-write-a-pleasure-to-use-pycon-2016.html</guid></item><item><title>HTTP Can Do That?!</title><link>https://pyvideo.org/pycon-us-2016/sumana-harihareswara-http-can-do-that-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Sumana Harihareswara&lt;/p&gt;
&lt;p&gt;Learn how to get more performance, testability, and flexibility out of your web apps, using features already built into HTTP. I'll walk you through case studies exploring good (and bad) ideas, using Python, your browser, netcat, and other common tools.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sumana Harihareswara</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/sumana-harihareswara-http-can-do-that-pycon-2016.html</guid></item><item><title>Let's read code: the requests library</title><link>https://pyvideo.org/pycon-us-2016/susan-tan-lets-read-code-the-requests-library-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Susan Tan&lt;/p&gt;
&lt;p&gt;Imagine you’re a new engineer at a workplace who has to learn a new unfamiliar codebase. After you acquire a copy of the repo, what is your next step? How do you dissect a new unfamiliar codebase to understand its inner workings? Come see a guided walkthrough of reading the widely used python-requests project, which gets over 18,000 downloads per day and powers many of the world’s REST-based APIs.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Susan Tan</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/susan-tan-lets-read-code-the-requests-library-pycon-2016.html</guid></item><item><title>The Report Of Twisted’s Death or: Why Twisted and Tornado Are Relevant In The Asyncio Age</title><link>https://pyvideo.org/pycon-us-2016/the-report-of-twisteds-death-or-why-twisted-and-tornado-are-relevant-in-the-asyncio-age.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Amber Brown&lt;/p&gt;
&lt;p&gt;With asyncio on the scene, the question has been asked: is there any point in having Twisted or Tornado around?&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amber Brown ("HawkOwl")</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/the-report-of-twisteds-death-or-why-twisted-and-tornado-are-relevant-in-the-asyncio-age.html</guid></item><item><title>Finding closure with closures</title><link>https://pyvideo.org/pycon-us-2016/thomas-ballinger-finding-closure-with-closures-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Thomas Ballinger&lt;/p&gt;
&lt;p&gt;What are closures all about anyway, and why is there a new keyword in Python
3?
We'll look at what a closure is, their history in the Python language, what
the Python 3 nonlocal keyword is about, and examine how closures are
idiomatically used (and avoided) in Python.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Ballinger</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/thomas-ballinger-finding-closure-with-closures-pycon-2016.html</guid></item></channel></rss>