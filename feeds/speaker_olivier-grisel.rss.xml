<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 05 Sep 2019 00:00:00 +0000</lastBuildDate><item><title>Histogram-based Gradient Boosting in scikit-learn 0.21</title><link>https://pyvideo.org/euroscipy-2019/histogram-based-gradient-boosting-in-scikit-learn-021.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;scikit-learn 0.21 was recently released and this presentation will give
an overview its main new features in general and present the new
implementation of Gradient Boosted Trees.&lt;/p&gt;
&lt;p&gt;Gradient Boosted Trees (also known as Gradient Boosting Machines) are
very competitive supervised machine learning models especially on
tabular data.&lt;/p&gt;
&lt;p&gt;Scikit-learn offered a traditional implementation of this family of
methods for many years. However its computational performance was no
longer competitive and was dramatically dominated by specialized state
of the art libraries such as XGBoost and LightGBM. The new
implementation in version 0.21 uses histograms of binned features to
evaluate the tree node spit candidates. This implementation can
efficiently leverage multi-core CPUs and is competitive with XGBoost and
LightGBM.&lt;/p&gt;
&lt;p&gt;We will also introduce pygbm, a numba-based implementation of gradient
boosted trees that was used as prototype for the scikit-learn
implementation and compare the numba vs cython developer experience.&lt;/p&gt;
&lt;p&gt;In this presentation we will present some recently introduced features
of the scikit-learn Machine Learning library with a particular emphasis
on the new implementation of Gradient Boosted Trees.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-09-05:euroscipy-2019/histogram-based-gradient-boosting-in-scikit-learn-021.html</guid></item><item><title>Scalable Machine Learning with Dask</title><link>https://pyvideo.org/scipy-2018/scalable-machine-learning-with-dask.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk demonstrates how to scale a Python-based machine learning
workflow to larger models and larger datasets. The talk will introduce a
common workflow using NumPy, pandas, and scikit-learn, and discuss some
challenges with scaling that workflow out to larger datasets. We'll then
see how dask and dask-ml work with and extend these libraries to enable
large-scale parallel and distributed machine learning.Presenter(s):
Speaker: Tom Augspurger, Anaconda, Inc. Speaker: Olivier Grisel, INRIA&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Augspurger</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/scalable-machine-learning-with-dask.html</guid></item><item><title>Machine Learning with scikit-learn Part 1</title><link>https://pyvideo.org/scipy-2018/machine-learning-with-scikit-learn-part-1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial aims to provide an introduction to machine learning and
scikit- learn &amp;quot;from the ground up&amp;quot;. We will start with core concepts of
machine learning, some example uses of machine learning, and how to
implement them using scikit-learn. Going in detail through the
characteristics of several methods, we will discuss how to pick an
algorithm for your application, how to set its hyper-parameters, and how
to evaluate performance. This is a two part tutorial. Please register
for part one and part two. Prerequisite skills: NumPy, matplotlib
Presenter(s): Speaker: Andreas Mueller, Columbia University Speaker:
Guillaume Lemaitre, INRIA Saclay - Parietal team&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/machine-learning-with-scikit-learn-part-1.html</guid><category>tutorial</category></item><item><title>Machine Learning with scikit-learn Part 2</title><link>https://pyvideo.org/scipy-2018/machine-learning-with-scikit-learn-part-2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial aims to provide an introduction to machine learning and
scikit- learn &amp;quot;from the ground up&amp;quot;. We will start with core concepts of
machine learning, some example uses of machine learning, and how to
implement them using scikit-learn. Going in detail through the
characteristics of several methods, we will discuss how to pick an
algorithm for your application, how to set its hyper-parameters, and how
to evaluate performance. This is a two part tutorial. Please register
for part one and part two. Prerequisite skills: NumPy,
matplotlibPresenter(s): Speaker: Andreas Mueller, Columbia University
Speaker: Guillaume Lemaitre, INRIA Saclay - Parietal team&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/machine-learning-with-scikit-learn-part-2.html</guid><category>tutorial</category></item><item><title>What's new in scikit-learn 0.16 and what's cooking...</title><link>https://pyvideo.org/montreal-python/whats-new-in-scikit-learn-016-and-whats-cooking.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Montreal, April 13, 2015 - Scikit-learn is a Machine Learning library from the Python data ecosystem. Olivier Grisel gives an overview and some demos of the recently released 0.16.0 version.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Olivier Grisel: &lt;a class="reference external" href="http://sflx.ca/ogrisel"&gt;http://sflx.ca/ogrisel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;scikit-learn: &lt;a class="reference external" href="http://scikit-learn.org"&gt;http://scikit-learn.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MP53: &lt;a class="reference external" href="http://sflx.ca/mp53e"&gt;http://sflx.ca/mp53e&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recorded and edited live by &amp;#64;ChristianAubry at Montr√©al-Python 53 (Sanctified Terabit) with a little help from Savoir-faire Linux (&lt;a class="reference external" href="http://sflx.ca/jobs"&gt;http://sflx.ca/jobs&lt;/a&gt;).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Mon, 13 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-13:montreal-python/whats-new-in-scikit-learn-016-and-whats-cooking.html</guid></item><item><title>Scikit-learn (1/2)</title><link>https://pyvideo.org/euroscipy-2017/scikit-learn-12.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Please install the following packages (either with pip or conda):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;scikit-learn 0.19.0 (along with numpy and scipy as dependencies)&lt;/li&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;li&gt;matplotlib&lt;/li&gt;
&lt;li&gt;jupyter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check the scikit-learn version with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -c &amp;quot;import sklearn; print(sklearn.__version__)&amp;quot;
&lt;/pre&gt;
&lt;p&gt;If you have an old version you can upgrade to scikit-learn 0.19.0 with
&lt;tt class="docutils literal"&gt;conda update &lt;span class="pre"&gt;scikit-learn&lt;/span&gt;&lt;/tt&gt; if you use conda or
&lt;tt class="docutils literal"&gt;pip install &lt;span class="pre"&gt;-U&lt;/span&gt; &lt;span class="pre"&gt;scikit-learn&lt;/span&gt;&lt;/tt&gt; otherwise.&lt;/p&gt;
&lt;p&gt;We recommend using Python 3.6 but the tutorial material should also work
with older Python versions (including Python 2.7, but please please
consider using Python 3.6 instead).&lt;/p&gt;
&lt;p&gt;In addition you can also install
&lt;a class="reference external" href="https://scikit-optimize.github.io/"&gt;scikit-optimize&lt;/a&gt; (if you use a
conda environment, you need to first &lt;tt class="docutils literal"&gt;conda install pip&lt;/tt&gt; and then
&lt;tt class="docutils literal"&gt;pip install &lt;span class="pre"&gt;scikit-optimize&lt;/span&gt;&lt;/tt&gt;) in that environment. scikit-optimize
has a dependency on scikit-garden which does not yet provide any binary
package and can fail to install automatically from source on systems
that lack a properly configured C/C++ compiler. If you have trouble
installing scikit-garden and scikit-optimize, don't worry you will be
able to follow those sections on the video projector while still being
able to run the exercises of the other sections that only require
scikit-learn.&lt;/p&gt;
&lt;p&gt;The notebooks will be published on
&lt;a class="reference external" href="https://github.com/ogrisel/euroscipy_2017_sklearn"&gt;https://github.com/ogrisel/euroscipy_2017_sklearn&lt;/a&gt; (please update on
Sunday evening or at the beginning of the tutorial assuming wifi is good
enough).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-30:euroscipy-2017/scikit-learn-12.html</guid><category>tutorial</category><category>scikit-learn</category></item><item><title>Scikit-learn (2/2)</title><link>https://pyvideo.org/euroscipy-2017/scikit-learn-22.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Please install the following packages (either with pip or conda):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;scikit-learn 0.19.0 (along with numpy and scipy as dependencies)&lt;/li&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;li&gt;matplotlib&lt;/li&gt;
&lt;li&gt;jupyter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check the scikit-learn version with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -c &amp;quot;import sklearn; print(sklearn.__version__)&amp;quot;
&lt;/pre&gt;
&lt;p&gt;If you have an old version you can upgrade to scikit-learn 0.19.0 with
&lt;tt class="docutils literal"&gt;conda update &lt;span class="pre"&gt;scikit-learn&lt;/span&gt;&lt;/tt&gt; if you use conda or
&lt;tt class="docutils literal"&gt;pip install &lt;span class="pre"&gt;-U&lt;/span&gt; &lt;span class="pre"&gt;scikit-learn&lt;/span&gt;&lt;/tt&gt; otherwise.&lt;/p&gt;
&lt;p&gt;We recommend using Python 3.6 but the tutorial material should also work
with older Python versions (including Python 2.7, but please please
consider using Python 3.6 instead).&lt;/p&gt;
&lt;p&gt;In addition you can also install
&lt;a class="reference external" href="https://scikit-optimize.github.io/"&gt;scikit-optimize&lt;/a&gt; (if you use a
conda environment, you need to first &lt;tt class="docutils literal"&gt;conda install pip&lt;/tt&gt; and then
&lt;tt class="docutils literal"&gt;pip install &lt;span class="pre"&gt;scikit-optimize&lt;/span&gt;&lt;/tt&gt;) in that environment. scikit-optimize
has a dependency on scikit-garden which does not yet provide any binary
package and can fail to install automatically from source on systems
that lack a properly configured C/C++ compiler. If you have trouble
installing scikit-garden and scikit-optimize, don't worry you will be
able to follow those sections on the video projector while still being
able to run the exercises of the other sections that only require
scikit-learn.&lt;/p&gt;
&lt;p&gt;The notebooks will be published on
&lt;a class="reference external" href="https://github.com/ogrisel/euroscipy_2017_sklearn"&gt;https://github.com/ogrisel/euroscipy_2017_sklearn&lt;/a&gt; (please update on
Sunday evening or at the beginning of the tutorial assuming wifi is good
enough).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-30:euroscipy-2017/scikit-learn-22.html</guid><category>tutorial</category><category>scikit-learn</category></item><item><title>Parallel Data Analysis</title><link>https://pyvideo.org/pycon-us-2017/parallel-data-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An overview of parallel computing techniques available from Python and
hands-on experience with a variety of frameworks.&lt;/p&gt;
&lt;p&gt;This course has two primary goals: 1. Teach students how to reason about
parallel computing 2. Provide hands-on experience with a variety of
different parallel computing frameworks&lt;/p&gt;
&lt;p&gt;Students will walk away with both a high-level understanding of parallel
problems and how to select and use an appropriate parallel computing
framework for their problem. They will get hands-on experience using
tools both on their personal laptop, and on a cluster environment that
will be provided for them at the tutorial.&lt;/p&gt;
&lt;p&gt;For the first half we cover programming patterns for parallelism found
across many tools, notably map, futures, and big-data collections. We
investigate these common APIs by diving into a sequence of examples that
require increasingly complex tools. We learn the benefits and costs of
each API and the sorts of problems where each is appropriate.&lt;/p&gt;
&lt;p&gt;For the second half, we focus on the performance aspects of frameworks
and give intuition on how to pick the right tool for the job. This
includes common challenges in parallel analysis, such as communication
costs, debugging parallel code, as well as deployment and setup
strategies.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Zaitlen</dc:creator><pubDate>Thu, 18 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-18:pycon-us-2017/parallel-data-analysis.html</guid></item><item><title>Construire et tester des wheels sous Linux, OSX et Windows</title><link>https://pyvideo.org/pycon-fr-2015/construire-et-tester-des-wheels-sous-linux-osx-et-windows.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Petit guide pratique pour construire et tester des paquets wheel pour
toutes les plateformes classique en utilisant des syst√®mes d'int√©gration
continue gratuits tels que Travis CI (Linux et OSX) et AppVeyor
(Windows).&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Les wheels sont un nouveau format &lt;a class="reference external" href="http://legacy.python.org/dev/peps/pep-0427/"&gt;standard (PEP
427)&lt;/a&gt; de distribution de
package Python pour remplacer les eggs. Ils sont support√©s par pip &amp;gt;=
1.4 et setuptools &amp;gt;= 0.8. Le format wheel est officiellement recommand√©
pour la distribution de projets Python sur PyPI.&lt;/p&gt;
&lt;p&gt;Le format wheel permet d‚Äôacc√©l√©rer l'installation de paquets Python sur
toutes les plateformes. Les projets utilisant des extensions compil√©es
sont packag√©s avec des wheel d√©di√©e √† une plateforme donn√©e (par exemple
Windows 32 bit) ce qui permet de les installer sans compilateur.&lt;/p&gt;
&lt;p&gt;En tant que release manager pour le projet scikit-learn j'ai mis en
place une infrastructure d'int√©gration continue qui g√©n√®re et teste des
paquets wheel pour les plateformes Windows, OSX et Linux. Cette
infrastructure permet de supporter les versions r√©centes de Python (2.6+
et 3.3+) sur des architecture 32 bit et 64 bit.&lt;/p&gt;
&lt;p&gt;Le but de cette pr√©sentation est de partager cette exp√©rience et les
outils que j'ai d√©velopper pour automatiser le fonctionnement de cette
infrastructure.&lt;/p&gt;
&lt;p&gt;Cette pr√©sentation sera un version actualis√©e de la pr√©sentation que
j'ai donn√©e √† PyCon 2015: &lt;a class="reference external" href="https://www.youtube.com/watch?v=d-p6lJJObLU"&gt;https://www.youtube.com/watch?v=d-p6lJJObLU&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Sun, 18 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-18:pycon-fr-2015/construire-et-tester-des-wheels-sous-linux-osx-et-windows.html</guid></item><item><title>Predictive modelling with Python</title><link>https://pyvideo.org/pydata-berlin-2016/predictive-modelling-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Berlin 2016&lt;/p&gt;
&lt;p&gt;www.pydata.org&lt;/p&gt;
&lt;p&gt;PyData is a gathering of users and developers of data analysis tools in Python. The goals are to provide Python enthusiasts a place to share ideas and learn from each other about how best to apply our language and tools to ever-evolving challenges in the vast realm of data management, processing, analytics, and visualization.&lt;/p&gt;
&lt;p&gt;We aim to be an accessible, community-driven conference, with tutorials for novices, advanced topical workshops for practitioners, and opportunities for package developers and users to meet in person.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://ogrisel.github.io/decks/2016_pydata_berlin/"&gt;http://ogrisel.github.io/decks/2016_pydata_berlin/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/ogrisel/docker-distributed"&gt;https://github.com/ogrisel/docker-distributed&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pydata-berlin-2016/predictive-modelling-with-python.html</guid><category>keynote</category></item><item><title>Predictive Modeling and Python: some trends</title><link>https://pyvideo.org/pydata-paris-2016/predictive-modeling-and-python-some-trends.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Predictive Modeling and Python: some trends, by Olivier Grisel&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-14:pydata-paris-2016/predictive-modeling-and-python-some-trends.html</guid></item><item><title>Comment faire pousser des forets aleatoires dans les nuages</title><link>https://pyvideo.org/pycon-fr-2013/comment-faire-pousser-des-forets-aleatoires-dans.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Pr√©sentation de l'impl√©mentation d'une m√©thode d'apprentissage
statistique √† la mode avec scikit-learn, IPython.parallel et des
machines dans le cloud.&lt;/p&gt;
&lt;p&gt;scikit-learn est une lib de Machine Learning √©crite en Python. Son
impl√©mentation de l'algorithme des forets al√©atoires a beaucoup de
succ√®s aupr√®s des &amp;quot;Data Scientists&amp;quot; [1] qui participent aux comp√©titions
de Machine Learning sur le site kaggle.com. Cette pr√©sentation sera
l'occasion de pr√©senter comment parall√©liser la culture de telles forets
gr√¢ce √† un cluster de calcul provisionn√© dans le cloud.&lt;/p&gt;
&lt;p&gt;Cette pr√©sentation sera l'occasion de rappeler les concepts de base du
Machine Learning et de pr√©senter rapidement les projets scikit-learn et
IPython.&lt;/p&gt;
&lt;p&gt;Nous nous int√©resseront ensuite plus particuli√®rement √† l'algorithme des
random forests (ou plut√¥t de sa variante belge appel√©e Forests of
Extremely Randomized Trees) et comment acc√©l√©rer l'apprentissage de
grandes forets gr√¢ce au module de calcul distribu√© du projet IPython et
√† un cluster de machines mont√© dans un cloud public tel que Amazon,
Rackspace, Microsoft Azure ou Digital Ocean.&lt;/p&gt;
&lt;p&gt;Si vous √™tes sage vous aurez peut √™tre droit √† une d√©mo live.&lt;/p&gt;
&lt;p&gt;[1] un statisticien qui utilise un macbook air.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Sat, 30 Nov 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-11-30:pycon-fr-2013/comment-faire-pousser-des-forets-aleatoires-dans.html</guid></item><item><title>Statistical machine learning for text classification with scikit-learn</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--statistical-machine-learning-for-text.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Statistical machine learning for text classification with scikit-learn&lt;/p&gt;
&lt;p&gt;Presented by Olivier Grisel&lt;/p&gt;
&lt;p&gt;The goal of this talk is to give a state-of-the-art overview of machine
learning algorithms applied to text classification tasks ranging from
language and topic detection in tweets and web pages to sentiment
analysis in consumer products reviews.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Unstructured or semi-structured text data is ubiquitous thanks to the
read- write nature of the web. However human authors are often lazy and
don't fill- in structured metadata forms in web applications. It is
however possible to automate some structured knowledge extraction with
simple and scalable statistical learning tools implemented in python.
For instance:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;guessing the language and topic of tweets and web pages&lt;/li&gt;
&lt;li&gt;analyze the sentiment (positive or negative) in consumer products
reviews in blogs or customer emails&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk will introduce the main operational steps of supervised
learning:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;extracting the relevant features from text documents&lt;/li&gt;
&lt;li&gt;selecting the right machine learning algorithm to train a model for
the task at hand&lt;/li&gt;
&lt;li&gt;using the trained model on previously unseen documents&lt;/li&gt;
&lt;li&gt;evaluating the predictive accuracy of the trained model&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will also demonstrate the results obtained for above tasks using the
&lt;a class="reference external" href="http://scikit-learn.sourceforge.net/"&gt;scikit-learn&lt;/a&gt; package and
compare it to other implementations such as &lt;a class="reference external" href="http://nltk.org/"&gt;nltk&lt;/a&gt;
and the &lt;a class="reference external" href="http://code.google.com/apis/predict/"&gt;Google Prediction
API&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--statistical-machine-learning-for-text.html</guid><category>googlepredictionapi</category><category>machine learning</category><category>nltk</category><category>pycon</category><category>pycon2011</category><category>scikit-learn</category></item><item><title>Introduction to Interactive Predictive Analytics in Python with scikit-learn</title><link>https://pyvideo.org/pycon-us-2012/introduction-to-interactive-predictive-analytics.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The goal of this tutorial is to give the attendee a first experience of
machine learning tools applied to practical software engineering tasks
such as language detection of tweets, topic classification of web pages,
sentiment analysis of customer products reviews and facial recognition
in pictures from the web or from your own webcam.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Thu, 08 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-08:pycon-us-2012/introduction-to-interactive-predictive-analytics.html</guid></item><item><title>Advanced Machine Learning with scikit-learn</title><link>https://pyvideo.org/pycon-us-2013/advanced-machine-learning-with-scikit-learn.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This tutorial will offer an in-depth experience of methods and tools for
the Machine Learning practitioner through a selection of advanced
features of scikit-learn and related projects. This tutorial targets
developers already familiar with machine learning concepts and
scikit-learn who wish to learn how to apply those tools on larger
datasets using multicore machines or distributed clusters.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-03-14:pycon-us-2013/advanced-machine-learning-with-scikit-learn.html</guid><category>tutorial</category></item><item><title>Diving deeper into Machine Learning with Scikit-learn</title><link>https://pyvideo.org/pycon-us-2014/diving-deeper-into-machine-learning-with-scikit-l.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This tutorial session is an hands-on workshop on applied Machine
Learning with the scikit-learn library. We will dive deeper into
scikit-learn model evaluation and automated parameter tuning. We will
also study how to scale text classification models for sentiment
analysis or spam detection and use IPython.parallel to leverage
multi-CPU or ad-hoc cloud clusters.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jake Vanderplas</dc:creator><pubDate>Fri, 11 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-11:pycon-us-2014/diving-deeper-into-machine-learning-with-scikit-l.html</guid></item><item><title>Exploring Machine Learning with Scikit-learn</title><link>https://pyvideo.org/pycon-us-2014/exploring-machine-learning-with-scikit-learn.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This tutorial will offer an introduction to the core concepts of machine
learning, and how they can be easily applied in Python using
Scikit-learn. We will use the scikit-learn API to introduce and explore
the basic categories of machine learning problems, related topics such
as feature selection and model validation, and the application of these
tools to real-world data sets.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jake Vanderplas</dc:creator><pubDate>Fri, 11 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-11:pycon-us-2014/exploring-machine-learning-with-scikit-learn.html</guid></item><item><title>Build and test wheel packages on Linux, OSX &amp; Windows</title><link>https://pyvideo.org/pycon-us-2015/build-and-test-wheel-packages-on-linux-osx-win.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Practical guide to build and test wheel packages for all platforms using
free Continuous Integration services such as Travis CI (Linux and OSX)
and AppVeyor (Windows).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-12:pycon-us-2015/build-and-test-wheel-packages-on-linux-osx-win.html</guid></item><item><title>Machine Learning with Scikit-Learn (II)</title><link>https://pyvideo.org/pycon-us-2015/machine-learning-with-scikit-learn-ii.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will offer an overview of common usage and methodological
patterns when using Scikit-Learn to build predictive models. In
particular we will highlight common strategies to deal with data with
heterogeneously typed attributes with pandas dataframes, model
evaluation and tuning. Finally if time permits we will explore the
specificities of working with textual data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-12:pycon-us-2015/machine-learning-with-scikit-learn-ii.html</guid></item></channel></rss>