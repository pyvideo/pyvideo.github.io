<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_carlotta-schatten.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-06-30T00:00:00+00:00</updated><entry><title>Towards Pythonic Innovation in Recommender Systems</title><link href="https://pyvideo.org/pydata-berlin-2017/towards-pythonic-innovation-in-recommender-systems.html" rel="alternate"></link><published>2017-06-30T00:00:00+00:00</published><updated>2017-06-30T00:00:00+00:00</updated><author><name>Carlotta Schatten</name></author><id>tag:pyvideo.org,2017-06-30:pydata-berlin-2017/towards-pythonic-innovation-in-recommender-systems.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Recommender Systems are nowadays ubiquitous in our lives. Although many implementations of basic algorithms are well known, recent advances in the field are often less documented. This talks aims at reviewing available Recommender Systems libraries in Python, including cutting edge Time- and Context-aware state of the art models.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Collaborative Filtering is the most commonly used Recommender System because of its ability to process sparse data. Many implementations of the basic Collaborative Filtering algorithms are available, however, recent advances in the field are often less documented and known. In order to provide a comparative analysis of available libraries and define minimal requirements for a performance comparison of Recommender System algorithms, the talk will be structured in two parts. In the first part, the speaker will introduce the last years of relevant literature in the field of Recommender System, giving an overview on advanced tensor approaches, such as those used for Context- and Time-aware Recommender Systems. In the second part of the talk, existing Python Collaborative Filtering libraries are reviewed. Among others, the following important criteria will be considered: availability of state of the art and benchmark algorithms, parallel computation, maintenance, and easiness of use.&lt;/p&gt;
</summary></entry></feed>