<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_yeela-kaplan.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-07-22T00:00:00+00:00</updated><entry><title>Marconi - OpenStack Queuing and Notification Service</title><link href="https://pyvideo.org/europython-2014/marconi-openstack-queuing-and-notification-serv.html" rel="alternate"></link><published>2014-07-22T00:00:00+00:00</published><updated>2014-07-22T00:00:00+00:00</updated><author><name>Yeela Kaplan</name></author><id>tag:pyvideo.org,2014-07-22:europython-2014/marconi-openstack-queuing-and-notification-serv.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Marconi is a multi-tenant cloud queuing system written in Python as part
of the OpenStack project. Marconi aims to ease the design of distributed
systems and allow for asynchronous work distribution without creating
yet another message broker. This talk is a broad look at Marconi's
design and the technologies used.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Similar to other message bus frameworks, Marconi's main goals are:
performance, availability, durability, fault-tolerance and scalability.
Besides providing support for queuing and notification services through
OpenStack, Marconi aims to ease the design of distributed systems and
allow for asynchronous work distribution without creating yet another
message broker. This talk aims to give the audience a broad look at
Marconiâ€™s architecture, design, technologies used, development process,
and discuss the issues it adresses.&lt;/p&gt;
</summary></entry></feed>