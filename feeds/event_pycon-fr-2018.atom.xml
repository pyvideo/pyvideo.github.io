<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-fr-2018.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-06T00:00:00+00:00</updated><entry><title>A multi-core Python HTTP server (much) faster than Go (spoiler: Cython)</title><link href="https://pyvideo.org/pycon-fr-2018/a-multi-core-python-http-server-much-faster-than-go-spoiler-cython.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Jean-Paul Smets</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/a-multi-core-python-http-server-much-faster-than-go-spoiler-cython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A multi-core Python HTTP server that is about 40% to 110% faster than Go
can be built by relying on Cython language and lwan C library. A proof
of concept validates the possibility of high performance system
programming in Cython language.&lt;/p&gt;
</summary></entry><entry><title>Bringing Shakespeare back to life!</title><link href="https://pyvideo.org/pycon-fr-2018/bringing-shakespeare-back-to-life.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Arnav Arora</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/bringing-shakespeare-back-to-life.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Language modelling is a hard task in Natural Language Processing. Each
language has so many nuances to it and we've barely scratched the
surface in trying to understand how we came about learning them. In the
talk, I'll be briefly discussing the importance of language in our
society, how it helps us become a sort of a hive mind to learn from each
other. I'll show the progress we've made in text generation and the
various techniques that have proven to be successful so far (bow,
embeddings, language models). Lastly, I'll be showing some recent
advances in unsupervised transfer learning in NLP (ULMFiT, ELMo) with a
practical implementation of a pretrained model learning to write like
Shakespeare using his texts. Will end the talk with possible areas to
explore in the field. The code will be in the form of a Jupyter
notebook.&lt;/p&gt;
</summary></entry><entry><title>Calculer la QOS de vos infrastructures avec Asyncio</title><link href="https://pyvideo.org/pycon-fr-2018/calculer-la-qos-de-vos-infrastructures-avec-asyncio.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Nicolas Crocfer</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/calculer-la-qos-de-vos-infrastructures-avec-asyncio.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Notre équipe, composée de 4 développeurs chez OVH, travaille depuis
plusieurs mois sur un projet nommé DEPC (Dependency Checker).&lt;/p&gt;
&lt;p&gt;Cet outil, composé d'une API et d'une WebUI, offre 2 fonctionnalités
principales :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;manager un graphe de dépendances entre les services d'OVH via la base
de données Neo4j,&lt;/li&gt;
&lt;li&gt;calculer la QOS de chaque noeud du graphe en fonction de metrics
hébergées sur des bases de données TimeSeries.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;L'outil a été initialement développé avec Flask et SQLAlchemy, mais
quelques problèmes de performance, lié à des soucis de scaling Celery,
nous ont poussés à le migrer vers une solution asynchrone. Nous sommes
donc parti sur Asyncio via le framework Sanic, en combinaison avec Gino
pour l'accès à la base de données.&lt;/p&gt;
&lt;p&gt;Le sujet de cette conférence portera sur ce retour d'expérience : nous
aborderons les gains de performances par rapport à l'ancienne stack,
mais également les problèmes que nous avons rencontrés durant la
migration.&lt;/p&gt;
</summary></entry><entry><title>Comment j'ai automatisé la compta de ma boite</title><link href="https://pyvideo.org/pycon-fr-2018/comment-jai-automatise-la-compta-de-ma-boite.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Anthony Martinet</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/comment-jai-automatise-la-compta-de-ma-boite.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La saisie de facture, que ce soit niveau fournisseur ou client est une
tâche simple, rigoureuse mais très fastidieuse. Hors forfait par ci,
consommation au Giga par là, tenir une comptabilité deviens une tâche
pouvant consommer pas mal de temps dans une petite entreprise.&lt;/p&gt;
&lt;p&gt;Découvrez comment nous nous servons de Python et des outils en Python
pour automatiser tout celà. Au menu :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Odoo et ses API&lt;/li&gt;
&lt;li&gt;Fournisseur avec API&lt;/li&gt;
&lt;li&gt;Weboob : Fournisseur sans API&lt;/li&gt;
&lt;li&gt;Simplifier son lettrage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pas de code ici, mais des pointeurs sur le process, les choses qui ont
marchés, celles qui n'ont pas marchés et des axes d'améliorations&lt;/p&gt;
</summary></entry><entry><title>Comment le machine-learning m'a permis de comprendre Closer</title><link href="https://pyvideo.org/pycon-fr-2018/comment-le-machine-learning-ma-permis-de-comprendre-closer.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Thibault Giordan</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/comment-le-machine-learning-ma-permis-de-comprendre-closer.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Retour d’expérience sur un projet personnel d'application web utilisant
du machine-learning pour reconnaître des stars :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Reconnaître une star sur une photo (via des réseaux de neurones)&lt;/li&gt;
&lt;li&gt;Reconnaître une star à partir de ses rôles/caractéristiques (via des
traitements de text-mining)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nous parlerons de différentes librairies python (spacy,
face_recognition, scrapy) ainsi que de concept orienté data-science
(reconnaissance facile, text-mining...)&lt;/p&gt;
</summary></entry><entry><title>Conférence plénière #1 Science and Open Source: what do we learn from each other?</title><link href="https://pyvideo.org/pycon-fr-2018/conference-pleniere-1-science-and-open-source-what-do-we-learn-from-each-other.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Viviane Pons</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/conference-pleniere-1-science-and-open-source-what-do-we-learn-from-each-other.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As both a scientist and a developer, I will discuss the values that
motivate my work in both worlds. I will also describe the common
challenges that we face and how we can get better.&lt;/p&gt;
</summary></entry><entry><title>Conférence plénière #2 The emergence of consensus in the Python community</title><link href="https://pyvideo.org/pycon-fr-2018/conference-pleniere-2-the-emergence-of-consensus-in-the-python-community.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Julien Palard</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/conference-pleniere-2-the-emergence-of-consensus-in-the-python-community.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is about searching, finding, and maybe understanding how
Python developers make their choices in face of alternatives. We're told
&amp;quot;There should be one-- and preferably only one --obvious way to do it.&amp;quot;
let's stop doing our &amp;quot;own way&amp;quot;. I'll try to answer simple questions like
&amp;quot;Is the consensus is to use pytest or unittest?&amp;quot; and tricker questions.&lt;/p&gt;
</summary></entry><entry><title>Conférence plénière #3 The CPython community: how to get more contributors?</title><link href="https://pyvideo.org/pycon-fr-2018/conference-pleniere-3-the-cpython-community-how-to-get-more-contributors.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Victor Stinner</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/conference-pleniere-3-the-cpython-community-how-to-get-more-contributors.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The CPython project is now 28 years old. It has active core developers,
but almost all of them are volunteers. It's difficult to ask someone to
be commit into a project for 5 years without being paid. Helping
newcomers and mentoring contributors takes time and few developers are
available for that. We are working on improving the diversity of CPython
core developers and get more active core developers, but it's a slow
process.&lt;/p&gt;
</summary></entry><entry><title>Consommer et produire des e-mails avec Python : lire, écrire, etc.</title><link href="https://pyvideo.org/pycon-fr-2018/consommer-et-produire-des-e-mails-avec-python-lire-ecrire-etc.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Stéphane Blondon</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/consommer-et-produire-des-e-mails-avec-python-lire-ecrire-etc.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cette conférence présentera quelques bibliothèques pratiques à un
développeur pour exécuter des traitement automatisés sur des e-mails
comme la lecture, la suppression ou bien évidemment l'envoi d'e-mails.&lt;/p&gt;
&lt;p&gt;Tous les niveaux sont attendus.&lt;/p&gt;
</summary></entry><entry><title>Containers for developers</title><link href="https://pyvideo.org/pycon-fr-2018/containers-for-developers.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Vincent Maillol</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/containers-for-developers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Today, there is a big traction for containers in the production world.
But containers are not made for developers, and it's only been recently
that some features, such as the multi-stage dockerfiles, were introduced
for them.&lt;/p&gt;
&lt;p&gt;Because we were a small team, we couldn't maintain both Dockerfiles for
development and production. That's why we developed our own scripts to
template them. Today, those are no longer scripts, but a plain
OpenSource Software that can help all developers stopping getting crazy
while maintaining a ton of dockerfiles... without boilerplate !&lt;/p&gt;
</summary></entry><entry><title>Convolution Network in vanilla Python</title><link href="https://pyvideo.org/pycon-fr-2018/convolution-network-in-vanilla-python.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Prakhar Srivastava</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/convolution-network-in-vanilla-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This workshop aims at providing the attendees an experience of
implementing convolution neural from scratch without any big frameworks
working in the backend supplementing the need for computation. This
would give the attendees an overall understanding of what are
Convolution Neural Networks and why do they work so exceedingly well in
image processing!&lt;/p&gt;
&lt;p&gt;This session would basically focus on python and it's ecosystem and how
well it goes up with the current research paradigm shift that is
happening due to the boom in Artificial intelligence. The session would
help developers to amass the importance of mathematics and the ease that
python provides in coding it, even from scratch. This would encourage
the developers only to try more and more python programming for deep
learning. For a nascent developer, this session packs in a high
educational reward as he will be exposed to the mathematics behind the
most successful algorithm of the past couple of decades.&lt;/p&gt;
&lt;p&gt;This workshop aims to provide a look through the abstraction offered by
big frameworks for developers to understand why mathematics behind data
science is necessary yet, give them the insight into why abstraction is
a key player in deep learning.&lt;/p&gt;
&lt;p&gt;Q. What can developers expect from this workshop! Understand what are
convolution neural networks Why they work so well on image data? All the
different implementation of Convolution network and how they improve the
vanilla network What are the best ways to implement convolution network
on a given data&lt;/p&gt;
&lt;p&gt;Q. What this workshop is not! Just another workshop telling you to use
frameworks Mathematics will not be looked over. (It's important) This
session would provide a much-needed exposure to python programming
language and how its ecosystem helps deep learning so well.&lt;/p&gt;
</summary></entry><entry><title>CRAPPY: un module pour le pilotage de systèmes multi-instrumentés</title><link href="https://pyvideo.org/pycon-fr-2018/crappy-un-module-pour-le-pilotage-de-systemes-multi-instrumentes.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Victor Couty</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/crappy-un-module-pour-le-pilotage-de-systemes-multi-instrumentes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;CRAPPY pour &amp;quot;Command and Real-time Acquisition in Parallelized PYthon&amp;quot;
est un module Python permettant de faire interagir des capteurs et des
actionneurs. Son développement est centré sur la polyvalence: il est
prévu pour permettre l'intégration d'un grand nombre d'éléments. Il est
déjà capable de gérer de nombreux dispositifs comme des caméras, moteurs
et cartes d'entrée/sorties mais il permet surtout l'ajout de nouveaux
objets dans le programme ou directement au sein du module de manière
simple. CRAPPY contient un certain nombre d'outils comme le correcteur
PID, le générateur de signaux ou l'attente de conditions, mais il permet
surtout l'utilisation de fonctions Python définies par l'utilisateur. Il
a été développé par le LaMcube (anciennement Laboratoire de Mécanique de
Lille) afin de permettre la mise en place d'essais mécaniques
multi-instrumentés. Au sein du laboratoire, nous développons et
utilisons CRAPPY aussi bien pour des applications simples comme le
pilotage d'un four par Raspberry Pi que sur des montages plus complexes,
par exemple un banc de simulation de freinage de train. Nous pensons que
par sa polyvalence, ce module a des applications bien au delà de la
recherche scientifique et cette présentation a pour objectif de faire
connaître ce module open-source et donner des exemples d'applications
réelles avec du matériel accessible. Le code est disponible à l'adresse
&lt;a class="reference external" href="https://github.com/LaboratoireMecaniqueLille/crappy"&gt;https://github.com/LaboratoireMecaniqueLille/crappy&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Débuter en programmation web avec asyncio et aiohttp</title><link href="https://pyvideo.org/pycon-fr-2018/debuter-en-programmation-web-avec-asyncio-et-aiohttp.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Amirouche Boubekki</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/debuter-en-programmation-web-avec-asyncio-et-aiohttp.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;asyncio est un nouveau module qui supporte en Python 3.5+ la syntaxe
async / await. Il facilite grandement la programmation asynchrone en
évitant la programmation par callback. Le principe de la programmation
asynchrone est de traiter plus de requêtes en même temps. Nous verrons
dans cette présentation que c'est facile de faire de la programmation
web asynchrone à l'aide du cadre logiciel aiohttp.&lt;/p&gt;
</summary></entry><entry><title>Deep Learning the Bayesian way : Moving towards safer AI !</title><link href="https://pyvideo.org/pycon-fr-2018/deep-learning-the-bayesian-way-moving-towards-safer-ai.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Ayush Singh</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/deep-learning-the-bayesian-way-moving-towards-safer-ai.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the advancements in the domain of Deep learning, it has found
application in various real-life problems such as self-driving cars and
healthcare diagnosis. But with great powers comes greater
responsibility, so the question arises, “Is our AI safe ?”&lt;/p&gt;
&lt;p&gt;The critical part of any machine learning system is understanding what
it does not know. Unfortunately, today’s deep learning algorithms are
usually unable to understand their uncertainty.&lt;/p&gt;
&lt;p&gt;This talk will provide an introduction to the resurging filed of
Bayesian Deep Learning. I would be discussing various theoretical
aspects and the current state-of-the-art in this domain. I would be
taking you through the code for constructing Bayesian deep nets and
visualizing their uncertainty in their results using libraries like
PyMC3, Pytorch.&lt;/p&gt;
&lt;p&gt;The prerequisites for this talk familiarity with basic probability,
Intermediary python, and passion to learn something new :)&lt;/p&gt;
</summary></entry><entry><title>Déployer des applications python dans un cluster openshift</title><link href="https://pyvideo.org/pycon-fr-2018/deployer-des-applications-python-dans-un-cluster-openshift.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Arthur Lutz</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/deployer-des-applications-python-dans-un-cluster-openshift.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quelles sont les particularités et les avantages pour pouvoir livrer des
applications web python dans un cluster OpenShift (qui a du Kubernetes
en dessous).&lt;/p&gt;
&lt;p&gt;Nous verrons les mécanismes suivants :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;s2image (source to image Docker) dans openshift : comment construire
l'application simplement avec un requirements.txt et du WSGI&lt;/li&gt;
&lt;li&gt;Comment livrer du django avec Postgresql&lt;/li&gt;
&lt;li&gt;Comment livrer une application CubicWeb&lt;/li&gt;
&lt;li&gt;Les mécanismes de sécurités associés&lt;/li&gt;
&lt;li&gt;Les URL automatiques pour tester des contributions ou des branches
nommées&lt;/li&gt;
&lt;li&gt;Parallèles avec repo2docker de l’écosystème jupyter
&lt;a class="reference external" href="https://github.com/jupyter/repo2docker"&gt;https://github.com/jupyter/repo2docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nous exposerons aussi les avantages et inconvénients de déployer des
applications web python sur un cluster type openshift ou kubernetes.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.openshift.org/"&gt;https://www.openshift.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://kubernetes.io/"&gt;https://kubernetes.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/openshift/source-to-image"&gt;https://github.com/openshift/source-to-image&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Design Patterns pour Python Micro-services</title><link href="https://pyvideo.org/pycon-fr-2018/design-patterns-pour-python-micro-services.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Michael Bright</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/design-patterns-pour-python-micro-services.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cette présentation introduira les notions de &amp;quot;micro-service design
pattern&amp;quot; et comment ils peuvent etre exploites pour déployer les
services a base de Python (ou autre) sur Kubernetes ou Docker.&lt;/p&gt;
&lt;p&gt;Nous regarderons comment exposer et scaler le service, puis le faire
évoluer en nouvelle version via les &amp;quot;rolling upgrades&amp;quot; prenant en compte
des détails pratiques tel que le besoin d'haute disponibilite, capacity,
ingress controllers, monitoring et load balancing.&lt;/p&gt;
&lt;p&gt;Nous verrons comment les &amp;quot;health checks&amp;quot; permettent de valider l'état de
santé d'une nouvelle version d'un service pour pouvoir faire un
&amp;quot;rollback&amp;quot; en cas de besoin.&lt;/p&gt;
&lt;p&gt;Tous ces concepts seront démontrés visuellement avec un deploiement de
bout en bout sur un cluster Kubernetes.&lt;/p&gt;
</summary></entry><entry><title>Développement d'applications avec le framework Anyblok et son écosystème d'outils et modules métier</title><link href="https://pyvideo.org/pycon-fr-2018/developpement-dapplications-avec-le-framework-anyblok-et-son-ecosysteme-doutils-et-modules-metier.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Franck Bret</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/developpement-dapplications-avec-le-framework-anyblok-et-son-ecosysteme-doutils-et-modules-metier.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Présentation de l'écosystème d'outils et modules métier pour le
framework Anyblok.&lt;/p&gt;
&lt;p&gt;Principes généraux : modularité, découplage, qualité Ecosystème :
Présentation rapide des outils et modules métiers existants Exemple :
Exemple d'implémentation&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypi.org/project/AnyBlok/"&gt;https://pypi.org/project/AnyBlok/&lt;/a&gt; &lt;a class="reference external" href="https://github.com/AnyBlok"&gt;https://github.com/AnyBlok&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>DIY guide to convert Speech-to-text with DeepSpeech AND Text-to-speech with WaveNet</title><link href="https://pyvideo.org/pycon-fr-2018/diy-guide-to-convert-speech-to-text-with-deepspeech-and-text-to-speech-with-wavenet.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Kajal Puri</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/diy-guide-to-convert-speech-to-text-with-deepspeech-and-text-to-speech-with-wavenet.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;After watching Google I/O 2018, one thing we've realized is that the
voice of the artificially intelligent system is going to be a
significant interface to interact with a human, apart from the text. The
research on speech-to-text has been going on since quite a few years
after we've taken a big leap on the Deep Learning approach. In this
talk, I'm going to talk mainly about the Mozilla's DeepSpeech open
source project to convert speech-to-text in Python.&lt;/p&gt;
&lt;p&gt;Now, the new problem at hand is how an artificially intelligent system
can give a human-like voice to the written text because when a human
speaks, there are a lot of intricacies in our speech that is so obvious
for the human brain. Expressions in our voice, where to give a pause,
and accent etc are few important factors that play a big role in how
humans talk to each other. So, here I'm going to introduce WaveNet.&lt;/p&gt;
&lt;p&gt;The talk will be divided in following four segments :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;0-5 minutes: The talk will begin with explaining the Speech-to-text
earlier existing libraries and which machine learning models they
used. Comparison of various libraries like Cloud speech-to-text by
Google, IBM Watson and DeepSpeech will be done&lt;/li&gt;
&lt;li&gt;5-25 minutes: DeepSpeech is based on Baidu's DeepSpeech research
paper. This model directly translates raw audio data into text -
without any domain specific code in between. I'll quickly brief about
the underlying deep learning architecture used in DeepSpeech. A short
live-demo will be given and the code, written in Python, will be
explained with the tips on hyper-parametric tuning to get the best
possible results.&lt;/li&gt;
&lt;li&gt;25-45 minutes: Now, the talk will switch to the latest research going
on in the field of Text-to-speech and how products like Alexa, Siri,
Google Assistant etc are leveraging this to behave like a human. The
deep learning architecture of WaveNet, open sourced by Google's
DeepMind, will be discussed followed by the live-demo and explaining
the code written in Python.&lt;/li&gt;
&lt;li&gt;45-50 minutes: For QA session.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Django &amp; GraphQL</title><link href="https://pyvideo.org/pycon-fr-2018/django-graphql.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Mehdi Raddadi</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/django-graphql.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La présentation s'adresse à des personnes débutantes ou confirmées. Elle
a pour but de présenter la RFC GraphQL et son rapport avec Django.&lt;/p&gt;
&lt;p&gt;Une première partie introductive permettra aux participants de
comprendre ce qu'apporte l'utilisation de cette RFC, ses avantages et
ses inconvénients. Cela s'articulera autour du concept de cette
technologie sans parler d'implémentation.&lt;/p&gt;
&lt;p&gt;Dans une seconde partie, on s'intéressera à une implémentation en python
avec Graphene, blibliothèque python qui s'interface avec Django. Cette
implémentation sera illustrée avec un exemple de mise en place d'une API
GraphQL sur un projet simple pour présenter cette implémentation avant
de discuter de l'état actuel de Graphene et de ses limitations.&lt;/p&gt;
</summary></entry><entry><title>Empaquetez facilement vos projets pour GNU/Linux et *BSD !</title><link href="https://pyvideo.org/pycon-fr-2018/empaquetez-facilement-vos-projets-pour-gnulinux-et-bsd.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Cyril Roelandt</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/empaquetez-facilement-vos-projets-pour-gnulinux-et-bsd.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;De nos jours, la plupart des langages fournissent leur propre
gestionnaire de paquets (pip, gem, etc.) ainsi que leur propre archive
de paquets (PyPI, RubyGems, etc.). Il existe également de nombreuses
distributions GNU/Linux (Debian, Fedora, etc.) et *BSD (FreeBSD,
OpenBSD, etc.).&lt;/p&gt;
&lt;p&gt;Les empaqueteurs doivent convertir les paquets &amp;quot;upstream&amp;quot; (disponibles
dans les archives de paquets des langages) en paquets &amp;quot;downstream&amp;quot; (les
paquets de nos distributions). Divers outils ont été écrits pour les
aider dans ce travail quelque peu fastidieux : on trouve ainsi pypi2rpm,
gem2rpm, pypi2deb, url2pkg, portgen, pytoport et bien d'autres. Tous ces
outils ont une interface et un comportement différents. Ils
réimplémentent tous du code similaire : lire des métadonnées depuis les
archives de paquets, et écrire des paquets Debian/RPM/etc.&lt;/p&gt;
&lt;p&gt;Durant cette présentation, je présenterai upt (Universal Packaging Tool,
disponible à &lt;a class="reference external" href="https://framagit.org/upt/upt"&gt;https://framagit.org/upt/upt&lt;/a&gt;), un outil modulaire combinant
des &amp;quot;lecteurs&amp;quot; (qui lisent les métadonnées) et des &amp;quot;écrivains&amp;quot; (qui
écrivent les paquets Debian/RPM/etc.) grâce à une représentation
intermédiaire unifiée des paquets. Je le comparerai à des projets
similaires et montrerai comment ajouter facilement le support pour votre
langage ou votre distribution préféré.&lt;/p&gt;
</summary></entry><entry><title>En pratique, qu'est-ce que ReST ?</title><link href="https://pyvideo.org/pycon-fr-2018/en-pratique-quest-ce-que-rest.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Xavier Ordoquy</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/en-pratique-quest-ce-que-rest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Les APIs occupent de plus en plus de place au sein de notre activité
informatique et dans les entreprises.&lt;/p&gt;
&lt;p&gt;Sans nous en rendre compte, nous introduisons énormément de
connaissances dans nos APIs, que ce soit coté serveur ou coté client.
Cette somme de connaissance créé un couplage implicite entre le serveur
et le client ce qui complique les évolutions.&lt;/p&gt;
&lt;p&gt;Partant d'un example d'API ReST nous verrons comment elle permet de
diminuer le couplage client/serveur et facilite les évolutions, en
montrant comment elles peuvent être prise en charge par des clients qui
n'étaient pas prévus pour. Un autre aspect est la limitation des règles
metier du coté client et comment rester DRY pour la partie
fonctionnelle.&lt;/p&gt;
&lt;p&gt;Pour conclure, nous aborderons ce qui les limites de cette architecture
et pourquoi il est si compliqué de créer de telles APIs.&lt;/p&gt;
</summary></entry><entry><title>Faire de la domotique libriste avec Python</title><link href="https://pyvideo.org/pycon-fr-2018/faire-de-la-domotique-libriste-avec-python.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Arthur Lutz</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/faire-de-la-domotique-libriste-avec-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Comment faire de la domotique avec des outils libres auto-hébergés et en
partie avec du python.&lt;/p&gt;
&lt;p&gt;Avec un retour d'experience sur les outils suivants :&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;home-assistant.io&lt;/li&gt;
&lt;li&gt;graphite-api&lt;/li&gt;
&lt;li&gt;micropython&lt;/li&gt;
&lt;li&gt;wipy&lt;/li&gt;
&lt;li&gt;et d'autres trucs pas python&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</summary></entry><entry><title>Forecasting and observing Airfare trends using Python and Neural Networks</title><link href="https://pyvideo.org/pycon-fr-2018/forecasting-and-observing-airfare-trends-using-python-and-neural-networks.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Anuj Menta</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/forecasting-and-observing-airfare-trends-using-python-and-neural-networks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We have always been taught that the earlier you book a flight, the
cheaper it is. What if I said it isn't? You see it's not a straight line
and it has a minimum at some point (someday before the flight). We are
going to see how historical Airfare data can help us derive the best day
to book a flight so that you 'actually' get the cheapest fares.&lt;/p&gt;
&lt;p&gt;The talk would talk about the entire process, from getting the data, to
training a basic Neural network on the data. With advancements in deep
learning in these few years, it is very easy to train a simple
statistical model to predict the prices.&lt;/p&gt;
</summary></entry><entry><title>Full-remote : guide de survie en environnement distant</title><link href="https://pyvideo.org/pycon-fr-2018/full-remote-guide-de-survie-en-environnement-distant.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Matthias Dugué</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/full-remote-guide-de-survie-en-environnement-distant.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Travailler en équipe n'est jamais un défi simple. Travailler à distance
est un enjeu encore plus complexe. Collaborer avec une équipe
entièrement distribuée relève de l'exploit. Pourtant de plus de plus de
projets (collaboratifs, associatifs, ou startups) choisissent ce mode de
fonctionnement, qui offre aussi de nombreux avantages.&lt;/p&gt;
&lt;p&gt;Avant même que les concepts de full-remote, de co-working, et de BYOD ne
deviennent populaires, les mouvements Open Source se sont attelés à la
tâche difficile de faire travailler ensemble des gens en les reliant
uniquement par le réseau.&lt;/p&gt;
&lt;p&gt;Après plusieurs années passées à collaborer avec des gens sur de
nombreux projets, Open Source ou non, petit retour d'expérience du
full-remote, ce qu'il engage, ce qu'il faut savoir, et les outils
indispensables à un travail asynchrone efficace, ensemble.&lt;/p&gt;
</summary></entry><entry><title>Gestion de stocks en Python avec Anyblok / WMS</title><link href="https://pyvideo.org/pycon-fr-2018/gestion-de-stocks-en-python-avec-anyblok-wms.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Georges Racinet</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/gestion-de-stocks-en-python-avec-anyblok-wms.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Anyblok / WMS est un tout nouvel ensemble de bibliothèques pour écrire
des applications de gestion de stocks et de logistique en Python3, avec
PostgreSQL, AnyBlok et SQLAlchemy.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pypi.org/project/anyblok-wms-base/"&gt;https://pypi.org/project/anyblok-wms-base/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blog.racinet.fr/tag/logistique.html"&gt;https://blog.racinet.fr/tag/logistique.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://anyblok-wms-base.readthedocs.io/"&gt;https://anyblok-wms-base.readthedocs.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/AnyBlok/anyblok_wms_base"&gt;https://github.com/AnyBlok/anyblok_wms_base&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;L'objectif est de fournir une fondation solide et agréable aux
développeurs d'applications concrètes et à leurs mainteneurs.&lt;/p&gt;
&lt;p&gt;Les cas d'utilisation potentiels concernent tout ce qui touche au suivi
d'objets physiques, donc la partie logistique de l'e-commerce, bien sûr,
mais aussi les petits magasins, les parcs de matériel technique, la
gestion de production (GPAO) et pourquoi pas l'humanitaire.&lt;/p&gt;
&lt;p&gt;Quelques mots d'ordre du développement en &amp;quot;té&amp;quot; : flexibilité,
généricité, traçabilité, adaptabilité (à la réalité), euh… qualité et
bien sûr liberté !&lt;/p&gt;
&lt;p&gt;Le développement de la couche de base a commencé cette année ; on espère
être en voie de sortir la version 1.0 au moment de la PyConFR, d'avoir
une première application finale en production, de lancer des
développements publics de plus haut niveau, d'accueillir des
contributions…&lt;/p&gt;
</summary></entry><entry><title>La cartographie c'est simple et "complexe"</title><link href="https://pyvideo.org/pycon-fr-2018/la-cartographie-cest-simple-et-complexe.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Julien Tayon</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/la-cartographie-cest-simple-et-complexe.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Contexte : J'ai commencé à faire des cartes avec les données INSEE
disponibles sur opendata il y a 2 semaines.&lt;/p&gt;
&lt;p&gt;J'ai trouvé quelques outils comme qGIS, mais ayant une machine
asthmatique, j'ai fini par construire les cartes depuis rien, juste en
regardant les fichiers sources, et les cartes SVG et c'est facile : tout
le monde peut y arriver.&lt;/p&gt;
&lt;p&gt;C'est si simple avec les bons outils (python + SVG + HTML + matplotlib
et une connaissance minimale en math), que ce serait bien de rendre ce
savoir disponible pour tous.&lt;/p&gt;
&lt;p&gt;La plupart des difficultés techniques comme : un point est il dans un
polygone ?&lt;/p&gt;
&lt;p&gt;Quel sont les points minimum et le maximum dans une carte ?&lt;/p&gt;
&lt;p&gt;Sont résolues simplement sans classe avec un outil mal aimé de python :
les nombres complexes.&lt;/p&gt;
&lt;p&gt;(Ceci au passage est un &amp;quot;rant&amp;quot; contre la classe point 2D qui est donnée
en exemple comme la classe pour apprendre, et une réaffirmation que les
maths sont une abstraction plus importante que l'objet.)&lt;/p&gt;
&lt;p&gt;Dans un premier temps on va prendre un fichier source, le regarder, et
tenter naïvement de construire une carte.&lt;/p&gt;
&lt;p&gt;On va rappeler &lt;em&gt;très&lt;/em&gt; rapidement ce qu'est un nombre complexe.&lt;/p&gt;
&lt;p&gt;On va prendre un fichier de destination et le regarder, et sans
connaissance du SVG tenter de le construire.&lt;/p&gt;
&lt;p&gt;Ensuite on va utiliser matplotlib pour automatiser la coloration par
gradient.&lt;/p&gt;
&lt;p&gt;On va y arriver.&lt;/p&gt;
&lt;p&gt;On va aussi découvrir une méthode de résolution des problèmes de
contraste par &amp;quot;non linéarisation&amp;quot; des niveaux de couleurs (tri ordonné)
qui marche à quasiment tous les coups (merci les OrderedDict et les
sets).&lt;/p&gt;
&lt;p&gt;On va utiliser un algo simple pour trouver le polygone qui contient un
point et le mettre en œuvre. Parler de distance et éviter en beauté le
problème des projections en cartographie car j'y connais rien.&lt;/p&gt;
&lt;p&gt;On va peut être comparer avec qgis en terme de vitesse pour la
génération de carte SVG, et aux tutos disponibles sur internet, et se
dire que ça vaut le coup de partager ce savoir.&lt;/p&gt;
&lt;p&gt;Enfin on va montrer que la complexité afférente à écrire un cadricel
étant supérieure à la 100 aine de ligne de codes pour faire le travail
sans se fatiguer, c'est peut être pas nécessaire de faire un cadriciel.&lt;/p&gt;
&lt;p&gt;Et évidemment, je vais conclure sur les quaternions, et leur utilisation
par les riggers dans l'industrie du jeu plutôt que les matrices pour la
3D et souligner qu'on a des modules pour les quaternions en python,
parce qu'on a une communauté de qualité avec des scientifiques qui
contribuent et que sans eux, ce serait bien plus dur de faire le kakou
en 100 lignes de codes. Remercions aussi les initiatives d'opendata sans
lesquelles on pourrait rien faire et rendons hommage à la qualité de
données si simple que leur mise en œuvre est aisée.&lt;/p&gt;
&lt;p&gt;Et voilà comment on construit une carte de représentation de données
sans rien y connaître en cartographie. Parce qu'il y a des gars biens
qui partagent les données sans les &amp;quot;obscurcir&amp;quot; et d'autres leur code et
qu'il y a une communauté au milieu pour mettre les savoirs en relation.&lt;/p&gt;
</summary></entry><entry><title>La Crypto pour les devs</title><link href="https://pyvideo.org/pycon-fr-2018/la-crypto-pour-les-devs.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Matthias Dugué</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/la-crypto-pour-les-devs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plus que jamais, nous avons besoin de sécuriser nos échanges et de
renforcer notre confiance dans nos outils pour garder nos données à
l'abri des yeux indiscrets. Peut-être que franchir le pas vous semble
insurmontable. Peut-être que vous vous dites que tout ça reste une
affaire de groupes d'hackitivistes éclairés. Plus probablement, il vous
manque sans doute juste une connaissance simple de l'univers du
chiffrement, et de la fantastique boîte à outils qui l'accompagne.&lt;/p&gt;
&lt;p&gt;Alors profitons-en, on embarque pour un tour d'horizon de la crypto :
chiffrement, techniques, outils… Nous regarderons quels outils existent,
pourquoi et comment les utiliser. Et parce que le web ne serait pas
parfait s'il n'était pas ouvert, nous nous intéresserons aussi bien aux
clients &amp;quot;lourds&amp;quot; qu'aux alternatives web (et il en y en a plein).&lt;/p&gt;
&lt;p&gt;Mieux : puisque nous ferons le tour des techniques, observons les outils
que met à notre portée de dev le W3C avec l'API WebCrypto : ajouter du
chiffrement et une gestion fine de la sécurisation se révèle désormais
beaucoup plus pratique.&lt;/p&gt;
&lt;p&gt;Ceinture et bretelles : attachez-vous bien, on chiffre !&lt;/p&gt;
</summary></entry><entry><title>La gestion de version en 2018: présent et future</title><link href="https://pyvideo.org/pycon-fr-2018/la-gestion-de-version-en-2018-present-et-future.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Pierre-Yves David</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/la-gestion-de-version-en-2018-present-et-future.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La gestion de version a profondément changé ces 10 dernières années,
avec l’arrivée des gestionnaires de versions décentralisés et des
plateformes comme Github. Pourtant, malgré son succès retentissant, git
n’est pas non plus la solution ultime couvrant tous les besoins. De
nombreuses personnes et entreprises font le choix de solutions plus
anciennes (comme SVN), propriétaires (comme Perforce™) ou de la même
génération (comme Mercurial).&lt;/p&gt;
&lt;p&gt;Dans cette présentation, nous étudierons les besoins classiques qui ont
façonnés et préservés les solutions actuelles, puis nous explorerons les
nouvelles habitudes de développement auquelles les gestionnaires de
versions doivent s’adapter. Cette présentation sera jalonnée d’exemples
concrets qui vous permettront entre autre de comprendre en quoi les
alternatives à Git sont utiles pour l’innovation et pourquoi, chez
Octobus, nous avons choisi de travailler sur Mercurial plutôt que Git.&lt;/p&gt;
</summary></entry><entry><title>La révolution dans le monde des tests</title><link href="https://pyvideo.org/pycon-fr-2018/la-revolution-dans-le-monde-des-tests.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Boris Feld</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/la-revolution-dans-le-monde-des-tests.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Depuis plusieurs années, les outils de qualité ont évolués, les outils
de CI sont de plus en plus scalables, les librairies d'écriture de tests
sont plus nombreuses et ont bien mûries et de nouveaux outils sont
apparus pour améliorer encore plus la qualité du code que l'on produit.&lt;/p&gt;
&lt;p&gt;Néanmoins, la plupart des outils de CI se contentent de lancer un script
et de vérifier le code de retour, la plupart des librairies de tests
nous imposent de choisir entre lancer l'ensemble de nos suites de tests
ou s'arrêter pour voir le détail du test en échec et enfin la plupart
des innovations des outils de CI, l'exécution en parallèle et
l'exécution à distance, n'ont pas encore trouvé le chemin jusqu'au
développeurs.&lt;/p&gt;
&lt;p&gt;Comment améliorer la situation ? Je vous présenterai l'un de mes
projets, LITF (&lt;a class="reference external" href="https://github.com/Lothiraldan/litf"&gt;https://github.com/Lothiraldan/litf&lt;/a&gt;) un nouveau format
d'entrée et de sortie pour les librairies de test et BALTO
(&lt;a class="reference external" href="https://github.com/lothiraldan/balto"&gt;https://github.com/lothiraldan/balto&lt;/a&gt;), un orchestrateur de tests
utilisant ce nouveau format. BALTO est écrit en Python 3.6 / Asyncio et
supporte bien entendu Pytest comme première librairie compatible.&lt;/p&gt;
&lt;p&gt;Grâce à ce nouveau format, BALTO peut exécuter plusieurs suites de tests
dans des langages différents, à distance sur un clusteur Kubernetes et
le tout en parallèle. En tout cas, c'est le but pour la version stable.&lt;/p&gt;
</summary></entry><entry><title>Le code ne suffit pas</title><link href="https://pyvideo.org/pycon-fr-2018/le-code-ne-suffit-pas.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Joachim Jablon</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/le-code-ne-suffit-pas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Entre un bout de code dans un coin qu'on décide de mettre en
open-source, et un projet github, prêt à accueillir des contributions,
il peut y avoir du travail.&lt;/p&gt;
&lt;p&gt;Standardisation et formatage du code, écriture de tests unitaires et
fonctionnels, documentation, et automatisation...&lt;/p&gt;
&lt;p&gt;Un tas de sujets, et d'outils associés, qui permettent de rendre le code
et le projet plus fiables, plus accessibles, plus &amp;quot;propre&amp;quot;.&lt;/p&gt;
&lt;p&gt;Continuant sur la lancée des &amp;quot;Aventuriers du Packaging Perdu&amp;quot; l'an
dernier, nous vous embarquons dans un tour d'horizon de nos pratiques et
logiciels préférés autour de la gestion d'un projet open source.&lt;/p&gt;
&lt;p&gt;Venez découvrir les bienfaits de black, du test de mutations, des hooks
de pre-commit et de l'intégration continue, et bien d'autres sujets.&lt;/p&gt;
&lt;p&gt;Nous espérons faire découvrir au moins un petit quelque chose à chacun·e
d'entre vous !&lt;/p&gt;
</summary></entry><entry><title>Learn BDD in Python with Behave</title><link href="https://pyvideo.org/pycon-fr-2018/learn-bdd-in-python-with-behave.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Lionel Lonkap</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/learn-bdd-in-python-with-behave.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;BDD is one of the not so well known testing techniques used in Software
development to ensure every actor involved (Business, Devs, Ops, SecOps,
...) build understanding on :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why we build something; for WHO?&lt;/li&gt;
&lt;li&gt;WHAT is built?&lt;/li&gt;
&lt;li&gt;WHEN the thing we built is considered done?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My Talk is about using BDD in Python with Behave Framework; to ensure
that your development brings the right value your the Business. We will
start as a beginner and try to achieve the Expert level.&lt;/p&gt;
</summary></entry><entry><title>L'écosystème Nix pour développer en Python, et au delà</title><link href="https://pyvideo.org/pycon-fr-2018/lecosysteme-nix-pour-developper-en-python-et-au-dela.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Julien Dehos</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/lecosysteme-nix-pour-developper-en-python-et-au-dela.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Un programme en Python est rarement script isolé effectuant quelques
interactions basiques avec le système exploitation. Il est fréquent
d'utiliser également des bibliothèques, des modules écrits dans d'autres
langages, des systèmes de base de données... Il en résulte de nombreuses
dépendances qui peuvent rendre un projet difficile à construire et à
déployer.&lt;/p&gt;
&lt;p&gt;L'écosystème Nix permet de gérer ce genre de dépendances efficacement.
Il complète ou remplace certains outils classiques de Python mais
également d'autres langages, fournissant ainsi un système commun pour
construire et déployer des packages et des services.&lt;/p&gt;
&lt;p&gt;Dans cette présentation, accessible à tous les niveaux, je rappellerai
quelques outils de packaging classiques en Python, puis je présenterai
l'écosystème Nix et montrerai comment l'utiliser pour développer,
packager et déployer une application web Python comportant un module C++
et une base de données.&lt;/p&gt;
</summary></entry><entry><title>Les nouveautés dans Python 3.7</title><link href="https://pyvideo.org/pycon-fr-2018/les-nouveautes-dans-python-37.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Vincent Maillol</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/les-nouveautes-dans-python-37.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python3.7 a apporté sa dizaine de changements, mais on verra en détails
les changements apportés à asyncio par les Context Variables.&lt;/p&gt;
</summary></entry><entry><title>Leveraging consistent hashing in your python applications</title><link href="https://pyvideo.org/pycon-fr-2018/leveraging-consistent-hashing-in-your-python-applications.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Alexys Jacob</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/leveraging-consistent-hashing-in-your-python-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While consistent hashing is largely known and adopted in the NoSQL
database clusters to solve data distribution and data access
reliability, it is less known and used by the typical developers.&lt;/p&gt;
&lt;p&gt;This talk will introduce you to consistent hashing and the problems it
solves while going through a practical use case in a python application.&lt;/p&gt;
&lt;p&gt;We will start from its standalone design and scale it out to an
optimized clustered version thanks to consistent hashing.&lt;/p&gt;
</summary></entry><entry><title>Machine Learning pour le BioMédical: 100% Python</title><link href="https://pyvideo.org/pycon-fr-2018/machine-learning-pour-le-biomedical-100-python.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Jeremy Laforet</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/machine-learning-pour-le-biomedical-100-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La présentation reviendra sur des éléments de réflexion obtenus sur le
démarrage du projet de recherche européen CHRONOS. Particulièrement sur
les contraintes liées à l'application biomédicale du machine learning
pour étudier le vieillissement musculaire. L’emphase sera mise sur notre
approche globale via Python.&lt;/p&gt;
</summary></entry><entry><title>Maintenir un code lisible</title><link href="https://pyvideo.org/pycon-fr-2018/maintenir-un-code-lisible.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Sébastien Corbin</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/maintenir-un-code-lisible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Isort, flake8, pylint et consorts nous permettent de rendre notre code
plus lisible, mais pas que. Nous passerons en revue leurs options
principales et leur bienfaits.&lt;/p&gt;
&lt;p&gt;Nous verrons comment les mettre en place dans un projet, qu'il soit
personnel ou en équipe.&lt;/p&gt;
&lt;p&gt;Nous aborderons aussi le petit dernier : Black, qui fait une entrée
fracassante dans la communauté.&lt;/p&gt;
</summary></entry><entry><title>Manager un parc avec SaltStack</title><link href="https://pyvideo.org/pycon-fr-2018/manager-un-parc-avec-saltstack.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Anthony Martinet</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/manager-un-parc-avec-saltstack.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nous sommes une entreprise de maintenance Informatique.&lt;/p&gt;
&lt;p&gt;Nous sommes également fainéants et enfin nous adorons l'automatisation.&lt;/p&gt;
&lt;p&gt;Découvrez nos outils de prédilections pour automatiser :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;La configuration de nos serveurs&lt;/li&gt;
&lt;li&gt;La configuration des clients Windows / Mac / Linux&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nous aborderons le design de SaltStack et en quoi cette solution se
différencie de Ansible / Puppet et les autres gestionnaires de
configuration.&lt;/p&gt;
&lt;p&gt;Des concepts seront abordés sur la puissance offerte par le bazard.&lt;/p&gt;
</summary></entry><entry><title>Mask R-CNN in Lane Detection</title><link href="https://pyvideo.org/pycon-fr-2018/mask-r-cnn-in-lane-detection.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Facundo Calcagno</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/mask-r-cnn-in-lane-detection.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The aim of this paper is to introduce to the newcomers the ideas of Deep
Neural Networks started by Yan LeCun and continued by Alex A., NYU,
Google and Facebook teams, make a small panorama of the more common
types of Neural Networks available and explain in detail a new and very
successful architecture called Mask R-CNN that has won recognition all
around the world.&lt;/p&gt;
&lt;p&gt;After this big introduction, we will dive into the resolution of the
problem of Lane Recognition with images taken from inside cars using
CuLanes dataset and its implementation in TensorFlow. We will see how
difficult and problematic this type of images can be due to the
different and possible geometric issues that diverse landscapes have.
Nevertheless, we will show that the technique is applicable to this
specific problem and could be improved to be automatized and implemented
in a self-driving car.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/fmcalcagno/MASK_Lane_Detection"&gt;https://github.com/fmcalcagno/MASK_Lane_Detection&lt;/a&gt; &amp;#64;fmcalcagno&lt;/p&gt;
</summary></entry><entry><title>Méthodologies de Debug/Monitoring</title><link href="https://pyvideo.org/pycon-fr-2018/methodologies-de-debugmonitoring.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Julien Thebault</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/methodologies-de-debugmonitoring.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you heard about SRE Book from Google ? or Maybe about USE Method,
RED or Golden Signals ?&lt;/p&gt;
&lt;p&gt;In this talk, we will talk briefly about these different methods and&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;how we can use them in your observability strategy...&lt;/li&gt;
&lt;li&gt;how we can apply them for performance analysis troubleshooting and
monitoring...&lt;/li&gt;
&lt;li&gt;how to approach these methods in a native cloud environment...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will use simple python API but most of the talk will apply to other
technologies as well.&lt;/p&gt;
</summary></entry><entry><title>Metric-learn: a scikit-learn compatible package for metric learning</title><link href="https://pyvideo.org/pycon-fr-2018/metric-learn-a-scikit-learn-compatible-package-for-metric-learning.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>William de Vazelhes</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/metric-learn-a-scikit-learn-compatible-package-for-metric-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Intermediary level&lt;/p&gt;
&lt;p&gt;Metric learning is an area of machine learning which aims to learn a
distance (or similarity) measure between samples for a given task. In
this presentation, I will start by briefly introducing the main ideas of
metric learning and some of its applications, and show a concrete
example of using metric-learn, the metric learning library in Python. I
will then highlight the importance of making a machine learning package
compatible with scikit-learn and discuss the challenges in the specific
case of metric-learn, in particular regarding API constraints. Finally,
we will dig into metric-learn's code to illustrate the main design
choices, and emphasize some general issues (such as test design) that
require special care when developing a machine learning toolbox.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/metric-learn/metric-learn"&gt;https://github.com/metric-learn/metric-learn&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Moviepy: l'édition ou le montage de vidéo par du code python</title><link href="https://pyvideo.org/pycon-fr-2018/moviepy-ledition-ou-le-montage-de-video-par-du-code-python.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Renaud Guezennec</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/moviepy-ledition-ou-le-montage-de-video-par-du-code-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pour promouvoir Rolisteam, nous enregistrons trois parties de jeu de
rôle virtuel par semaine.&lt;/p&gt;
&lt;p&gt;Chaque vidéo dure plus de 2h30. Très peu d'outils de montage apprécient
de travailler sur des données aussi conséquentes.&lt;/p&gt;
&lt;p&gt;Nous allons voir comment Moviepy a facilité l'édition de nos vidéos et
nous permet de mettre en ligne plus de 3 vidéos par semaine.&lt;/p&gt;
&lt;p&gt;À travers cette histoire, nous ferons un tour des fonctionnalités de ce
module.&lt;/p&gt;
&lt;p&gt;La présentatino sera pour «tous les niveaux».&lt;/p&gt;
</summary></entry><entry><title>My journey into joining billions of rows in seconds with ScyllaDB</title><link href="https://pyvideo.org/pycon-fr-2018/my-journey-into-joining-billions-of-rows-in-seconds-with-scylladb.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Alexys Jacob</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/my-journey-into-joining-billions-of-rows-in-seconds-with-scylladb.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A talk on a technological iteration journey: replacing MongoDB + Hive by
ScyllaDB in production to meet the requirements of business critical
work loads.&lt;/p&gt;
&lt;p&gt;I will share my recent experience in migrating our most intensive and
JOIN hungry production work load from MongoDB + Hive to ScyllaDB.&lt;/p&gt;
&lt;p&gt;This work and iteration allowed us to JOIN billions of rows in seconds
while drastically reducing operation and development complexity by using
one database (ScyllaDB) instead of two (MongoDB + Hive).&lt;/p&gt;
&lt;p&gt;ScyllaDB is a C++ drop-in replacement of Cassandra that proved that its
design was up to the challenge by squeezing every bit of performance
from hardware. We will cover the approach and key aspects of this NoSQL
database.&lt;/p&gt;
&lt;p&gt;I will finally present the results of the benchmarks between Dask and
Spark and highlight their differences and what we learned along the way.&lt;/p&gt;
&lt;p&gt;Draft of the agenda&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Business context and work load details&lt;/li&gt;
&lt;li&gt;Problems and limitations in handling this work load using MongoDB +
Hive&lt;/li&gt;
&lt;li&gt;How we conducted a thorough evaluation of ScyllaDB to replace MongoDB
+ Hive&lt;/li&gt;
&lt;li&gt;How we ended up challenging Spark with Dask&lt;/li&gt;
&lt;li&gt;Lessons learned and production feedback&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>OpenSVC: Orchestration de stacks applicatives, avec ou sans containers</title><link href="https://pyvideo.org/pycon-fr-2018/opensvc-orchestration-de-stacks-applicatives-avec-ou-sans-containers.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Christophe Varoqui</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/opensvc-orchestration-de-stacks-applicatives-avec-ou-sans-containers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenSVC est une solution mature, 100% python, open source, française et
bénéficiant d'une forte adoption dans le secteur bancaire. Elle permet
de provisionner et d'orchestrer très simplement des stacks applicatives
avec ou sans docker. Elle propose de remplacer de façon homogène une
large gamme de produits, de systemd à kubernetes en passant par Veritas
cluster.&lt;/p&gt;
&lt;p&gt;Cette présentation introduit aux concepts et fonctionnalités d'OpenSVC
et démontre par l'exemple sa simplicité d'utilisation.&lt;/p&gt;
&lt;p&gt;Niveau: Tout public&lt;/p&gt;
</summary></entry><entry><title>Optimiser une application principalement transactionnelle (retour d'expérience avec Tryton)</title><link href="https://pyvideo.org/pycon-fr-2018/optimiser-une-application-principalement-transactionnelle-retour-dexperience-avec-tryton.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Cédric Krier</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/optimiser-une-application-principalement-transactionnelle-retour-dexperience-avec-tryton.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tryton est une plateforme pour logiciels métiers écrit en Python. Elle
est amenée à traiter de grosse quantité de données dans des délais court
mais aussi à traiter rapidement des ordres volumineux.&lt;/p&gt;
&lt;p&gt;Nous verrons dans cette présentation les différentes techniques mise en
place afin d'optimiser au mieux les performances: traitement groupé,
parallélisation des processus, gestion de différents niveaux de caches
et techniques de contournements des goulots d'étranglement des
performances.&lt;/p&gt;
&lt;p&gt;En bref, nous ferons le tour des techniques déployées dans Tryton qui
ont permis la facturation d'un million de contrats d'assurance en moins
d'une heure.&lt;/p&gt;
</summary></entry><entry><title>PEP 557 versus the world</title><link href="https://pyvideo.org/pycon-fr-2018/pep-557-versus-the-world.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Guillaume Gelin</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/pep-557-versus-the-world.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.7 will ship with a new module called &amp;quot;dataclasses&amp;quot;, which has
been defined in PEP 557.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What is this module?&lt;/li&gt;
&lt;li&gt;What are the problems that PEP 557 authors try to solve?&lt;/li&gt;
&lt;li&gt;What was the chosen design, and why?&lt;/li&gt;
&lt;li&gt;How does it compare against the tools that already exist?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk will deeply cover &amp;quot;dataclasses&amp;quot;, but also &amp;quot;attrs&amp;quot;, &amp;quot;box&amp;quot;,
&amp;quot;thingy&amp;quot;, and others.&lt;/p&gt;
</summary></entry><entry><title>Posture au travail et prévention des troubles musculo-squelettiques chez le développeur</title><link href="https://pyvideo.org/pycon-fr-2018/posture-au-travail-et-prevention-des-troubles-musculo-squelettiques-chez-le-developpeur.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Gabrielle Vassard-Yu</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/posture-au-travail-et-prevention-des-troubles-musculo-squelettiques-chez-le-developpeur.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le travail c'est la santé, mais des conseils kiné permettent de la
préserver ! Il s'agit ici de présenter les risques d'une mauvaise
posture au travail, quelques solutions possibles en matière d'ergonomie,
le tout accompagné de conseils kiné. C'est une des rares conférences où
avoir un ordinateur n'est pas nécessaire.&lt;/p&gt;
</summary></entry><entry><title>Présentation, l’approche itérative</title><link href="https://pyvideo.org/pycon-fr-2018/presentation-lapproche-iterative.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Pierre-Yves David</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/presentation-lapproche-iterative.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tous les ans le monde Python se pose les même questions: “Est-ce que je
propose une présentation à Pyconfr ?”, “De quoi je vais parler ?”,
“Est-ce que j’aurais le temps de la préparer?”. Tous ses questionnements
nous privent chaque année de présentations qui auraient été
passionnantes. Pourtant, sans forcément s’en rendre compte, chacun de
nous a déjà les réponses à toutes ces questions clefs. En suivant une
suite de principes simples, il est possible de produire une présentation
sur un sujet pertinent et d’une qualité correspondante au temps qu’on a
trouvé à y consacrer.&lt;/p&gt;
</summary></entry><entry><title>Progressive Web Apps : où en sommes-nous aujourd'hui ?</title><link href="https://pyvideo.org/pycon-fr-2018/progressive-web-apps-ou-en-sommes-nous-aujourdhui.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Alexandra Janin</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/progressive-web-apps-ou-en-sommes-nous-aujourdhui.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Présentation générale sur ce que sont les PWA :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;À quels critères doit répondre une application pour être qualifiée de
&amp;quot;progressive web app&amp;quot; ?&lt;/li&gt;
&lt;li&gt;Rapide présentation des services workers, de la cache API et du
manifest.&lt;/li&gt;
&lt;li&gt;Les outils pour mettre en place une PWA (lighthouse, workbox,...)&lt;/li&gt;
&lt;li&gt;Fonctionnement des push notifications&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Niveau : Tous les niveaux&lt;/p&gt;
</summary></entry><entry><title>Pyref : Python et référentiel dans une université</title><link href="https://pyvideo.org/pycon-fr-2018/pyref-python-et-referentiel-dans-une-universite.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Nicolas Berne</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/pyref-python-et-referentiel-dans-une-universite.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Au sein d'une université, la gestion des identités et la qualité des
données sont deux domaines de l'ombre. Avec environ 50 000 comptes
informatiques actifs et des utilisateurs variés : étudiants,
enseignants-chercheurs, administratifs, ces sujets ont des impacts au
quotidien au sein d'un DSI.&lt;/p&gt;
&lt;p&gt;Lors des journées inscriptions les plus chargées, les défis sont
nombreux avec plusieurs milliers de créations de comptes.&lt;/p&gt;
&lt;p&gt;Après avoir présenté succinctement l'architecture de la solution et les
raisons de nos choix techniques, du langage Python et de la base de
données PostgreSQL avec PL/Python, nous nous intéresserons plus
spécialement à la bibliothèque ldap3.&lt;/p&gt;
&lt;p&gt;Nous expliquerons alors notre utilisation et nous afficherons les
performances obtenues. Les résultats seront décrits sur les
environnement LDAP (relatifs à la normal SupAnn) et Active Directory.&lt;/p&gt;
</summary></entry><entry><title>Python 2 to Python 3</title><link href="https://pyvideo.org/pycon-fr-2018/python-2-to-python-3.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Mathilde Ziboura</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/python-2-to-python-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We are living the last months of Python 2... Lots of companies are
always using the version 2 of Python and have to migrate to Python 3 in
the next months. A migration is a long journey, most of the time it's
boring with lots of production risks/issues. Purpose of my conference is
to give the keys to reach the objective in avoiding traps.&lt;/p&gt;
</summary></entry><entry><title>Python and PostgreSQL: let's work together!</title><link href="https://pyvideo.org/pycon-fr-2018/python-and-postgresql-lets-work-together.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Dimitri Fontaine</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/python-and-postgresql-lets-work-together.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is often used to maintain application backends. When the backend
should implement user oriented workflows, it may rely on a RDBMS
component to take care of the system's integrity.&lt;/p&gt;
&lt;p&gt;PostgreSQL is the world's most advanced open source relational database,
and is very good at taking care of your system's integrity. PostgreSQL
also comes with a ton of data processing power, and in many cases a
simple enough SQL statement may replace hundreds of lines of code
written in Python.&lt;/p&gt;
&lt;p&gt;In this talk, we learn advanced SQL techniques and how to reason about
which part of the backend code should be done in the database, and which
parf of the backend code is so easier to write as a SQL query.&lt;/p&gt;
&lt;p&gt;All levels.&lt;/p&gt;
</summary></entry><entry><title>Python, je t'aime!</title><link href="https://pyvideo.org/pycon-fr-2018/python-je-taime.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Stéphane Wirtel</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/python-je-taime.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Depuis 20 ans, j'utilise Python au quotidien en tant qu'amateur et
depuis 2008 en tant que pro. Cependant, depuis quelques années je suis
devenu un membre &amp;quot;actif&amp;quot; de la communauté Python et j'aimerais vous
montrer pourquoi j'aime Python. Comme Brett Cannon l'a déjà dit, nous
venons pour le language mais nous restons pour la communauté. Alors
cette talk est fait pour vous, je veux partager mon enthousiasme
concernant Python et si vous me connaissez, vous aimerez être présent à
ma talk, car certains se reconnaîtront comme mes amis ;-)&lt;/p&gt;
&lt;p&gt;Talk complètement improvisé, mais certainement fun comme à mon habitude.&lt;/p&gt;
</summary></entry><entry><title>Python-powered Data Science in E-commerce</title><link href="https://pyvideo.org/pycon-fr-2018/python-powered-data-science-in-e-commerce.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Pietro Fodra</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/python-powered-data-science-in-e-commerce.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cdiscount is the French leader on e-commerce, with millions of visitors
and millions of products sold. But that is not all: Cdiscount is also a
company where dozens of Data Scientists are daily challenged with a
massive amount of data coming from visitors, customers, its product
catalogue and internal search engine. Their goal: deliver performing and
innovating algorithms in a short delay. The Cdiscount’s Data Science
teams use Python for both prototyping and production, trying to shorten
the path between a research idea and its industrialization.&lt;/p&gt;
&lt;p&gt;In this talk, we are going to present some examples of Python
applications in Cdiscount and we are going to focus on one in
particular: the keyword clusterisation in Google Ads campaigns using the
Word-2-Vec algorithm of the gensim package. The solution of this NLP
problem allows to use the signal of high-traffic keywords to predict the
performance of lower-traffic ones and improve the bidding.&lt;/p&gt;
</summary></entry><entry><title>Releasing OpenStack: feedback from the field</title><link href="https://pyvideo.org/pycon-fr-2018/releasing-openstack-feedback-from-the-field.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Haïkel Guémar</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/releasing-openstack-feedback-from-the-field.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenStack is arguably the biggest Python project, it consist of a
collection of libraries, clients, services that all interact with each
others. In short, releasing such Behemoth ain't an easy task.&lt;/p&gt;
&lt;p&gt;During this talk, there'll be no magical powder, I have nothing to offer
but blood, toil, tears and sweat.&lt;/p&gt;
&lt;p&gt;You'll discover how RDO the most popular community distro of OpenStack
integrates with upstream OpenStack production chain to release a rock
solid OpenStack distro with cross-CI, innovative distro making approach.
We'll also present the challenges we have faced and we're currently
facing (Python 3 we're coming!).&lt;/p&gt;
</summary></entry><entry><title>Retour d'expérience sur le déploiement de ReadTheDocs en interne</title><link href="https://pyvideo.org/pycon-fr-2018/retour-dexperience-sur-le-deploiement-de-readthedocs-en-interne.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Benjamin Divet</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/retour-dexperience-sur-le-deploiement-de-readthedocs-en-interne.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Depuis quelques années maintenant, ReadTheDocs est devenu incontournable
dans l'univers Python. La plupart des projets disponibles en ligne
passent par ce service afin de mettre à disposition une version toujours
à jour de la documentation Sphinx, associée à leur projet.&lt;/p&gt;
&lt;p&gt;Le projet ReadTheDocs est un projet Open Source, et à ce titre, leur
code est entièrement ouvert. De fait, nombre d'entreprises peuvent être
intéressées par le déploiement de ce service, en interne. Et c'est à ce
moment précis que commencent les ennuis. Le modèle économique de la
société reposant sur la vente de services, aucune aide, ou presque,
n'est apportée à la communauté pour le déploiement en interne.&lt;/p&gt;
&lt;p&gt;À travers cette conférence, nous vous proposons un retour d'expérience
sur le déploiement interne d'un serveur ReadTheDocs, et le paramétrage
de certaines options.&lt;/p&gt;
</summary></entry><entry><title>REx: Implémentation d'un DSL</title><link href="https://pyvideo.org/pycon-fr-2018/rex-implementation-dun-dsl.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Alexis Benoist</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/rex-implementation-dun-dsl.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Un DSL (Domain Specific Langage) est un langage spécialisé capable de
décrire des problématiques business avec un langage commun à l'ensemble
des intervenants et donner de l'autonomie au métier.&lt;/p&gt;
&lt;p&gt;Lors de ce retour d'expérience, nous discuterons de l'implémentation
d'un DSL. Ce DSL a pour but de donner de l'autonomie aux experts métier
pour énoncer leurs règles.&lt;/p&gt;
&lt;p&gt;Nous utiliserons ce cas d'étude pour discuter des DSLs, de leur base
théorique à leur implémentation en python.&lt;/p&gt;
</summary></entry><entry><title>Salut à Toi: un écosystème de communication libre, standard et décentralisé</title><link href="https://pyvideo.org/pycon-fr-2018/salut-a-toi-un-ecosysteme-de-communication-libre-standard-et-decentralise.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Poisson Jérôme</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/salut-a-toi-un-ecosysteme-de-communication-libre-standard-et-decentralise.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Messagerie instantanée, (micro)blogage, « réseau social », forums,
partage de fichiers, albums photos, organisation d'événements, gestion
de tickets, gestion de patchs (« merge requests »), chiffrement de bout
en bout sont autant de choses qu'il est possible de faire avec Salut à
Toi, un écosystème de communication libre et décentralisé qui s'appuie
sur le protocole standard XMPP.&lt;/p&gt;
&lt;p&gt;Cet outil unique en son genre est développé en Python, et fonctionne à
la fois sur bureau, appareils mobiles (Android), web, interface console
(« TUI »), et ligne de commande (« CLI ») grâce notamment à une
architecture démon/frontaux et à la popularité de ce langage de
programmation qui le rend disponible là où on ne l'attend pas forcément
(une des interfaces dynamiques web, dans le navigateur donc, est
également développée en Python).&lt;/p&gt;
&lt;p&gt;La dernière version a vu l'apparition d'un cadriciel (« framework ») web
orignal, qui permet de développer des sites web en utilisant XMPP en
arrière plan, permettant de gérer facilement l'authentification et les
permissions, les composants courants (comme les commentaires), et les
rendant naturellement décentralisés.&lt;/p&gt;
&lt;p&gt;Cette conférence va présenter le projet, son architecture, et son
utilisation de Python, avant de faire une démonstration de certaines de
ses possibilités.&lt;/p&gt;
</summary></entry><entry><title>Scaling Python to 1K QPS per server, not doing Hello Worlds</title><link href="https://pyvideo.org/pycon-fr-2018/scaling-python-to-1k-qps-per-server-not-doing-hello-worlds.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Guillaume Gelin</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/scaling-python-to-1k-qps-per-server-not-doing-hello-worlds.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will present a sample web application inspired from the real world (so
not an application doing hello worlds) and showcase several ways of
scaling it up, layer after layer, doing benchmarks at every step, up to
1000 queries per second — or 86.4 millions per day — on one Amazon
server.&lt;/p&gt;
&lt;p&gt;We will talk about:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;stateful vs stateless&lt;/li&gt;
&lt;li&gt;web servers and process managers&lt;/li&gt;
&lt;li&gt;WSGI, AWSGI&lt;/li&gt;
&lt;li&gt;asynchronicity&lt;/li&gt;
&lt;li&gt;different sort of caches for different sort of things&lt;/li&gt;
&lt;li&gt;various system hacks on Linux&lt;/li&gt;
&lt;li&gt;monitoring&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Scripts et Services web avec Asyncio et Python 3.6</title><link href="https://pyvideo.org/pycon-fr-2018/scripts-et-services-web-avec-asyncio-et-python-36.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Rémy Hubscher</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/scripts-et-services-web-avec-asyncio-et-python-36.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le fait de pouvoir utiliser asyncio en python 3.6 est une révélation.&lt;/p&gt;
&lt;p&gt;Dans cette présentation je propose de revenir sur le concept de l'ioloop
et les cas d'usages où j'ai eu à utiliser asyncio ces derniers temps.
Que ce soit pour paralléliser des tâches IO-bound et CPU bound ou pour
faire des services web.&lt;/p&gt;
</summary></entry><entry><title>Sculptez une fonction</title><link href="https://pyvideo.org/pycon-fr-2018/sculptez-une-fonction.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Kevin Samuel</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/sculptez-une-fonction.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;def afficher(liste):&lt;/p&gt;
&lt;p&gt;for texte in liste:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
print(texte)
&lt;/pre&gt;
&lt;p&gt;Une fonction simple.&lt;/p&gt;
&lt;p&gt;Mais dans cette présentation en live coding mélangeant bonnes pratiques
et artisanat, elle va vite prendre du galon.&lt;/p&gt;
</summary></entry><entry><title>Serverless Python dans le cloud ou on-premise</title><link href="https://pyvideo.org/pycon-fr-2018/serverless-python-dans-le-cloud-ou-on-premise.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Michael Bright</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/serverless-python-dans-le-cloud-ou-on-premise.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Depuis 20 ans l'informatique a été revolutionnée par des nouvelles
technologies de virtualisation, cloud, conteneurs et maintenant
serverless. Ces technologies aident à optimiser l'utilisation des
servers, de faciliter le déploiement, ainsi que d'augmenter l'agilité et
de faciliter l’innovation.&lt;/p&gt;
&lt;p&gt;Serverless existe depuis une décennie mais a été propulsé sur le devant
de la scène avec le lancement d’AWS Lambda en Nov 2014 - plutôt beta a
l'époque. Aujourd'hui il existe un choix de plateformes et d'outils
impressionants de services en ligne, d'outils Open Source pour faciliter
leur usage et des plateformes entièrement Open Source.&lt;/p&gt;
&lt;p&gt;Nous allons commencer par regarder le déploiement d'un service Python
sur AWS Lambda - car même si propriétaire il reste le leader
aujourd'hui. Puis on regardera des outils open source tel que Chalice et
Zappa spécifiquement pour déployer des fonctions Python sur Lambda et
l'outil Serverless(.com) qui facilite le déploiement de différents
langages vers differentes plateformes Serverless.&lt;/p&gt;
&lt;p&gt;Mais il existe aussi des plateformes entièrement Open Source telles que
OpenFaaS, OpenWhisk, Nuclio, Kubeless, Fission, Fn… vous avez l'idée...
il y a du choix !&lt;/p&gt;
&lt;p&gt;Nous regarderons comment déployer des fonctions Python sur OpenFaaS et
OpenWhisk.&lt;/p&gt;
&lt;p&gt;Bien sûr avec plein de démos a l'appui !&lt;/p&gt;
</summary></entry><entry><title>Software Heritage: The Great Library of (Python) Source Code</title><link href="https://pyvideo.org/pycon-fr-2018/software-heritage-the-great-library-of-python-source-code.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Nicolas Dandrimont</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/software-heritage-the-great-library-of-python-source-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.softwareheritage.org"&gt;Software Heritage&lt;/a&gt; is a non-profit
initiative whose goal is to become the most comprehensive archive of
publicly accessible source code in the world, together with its full
development history. The project archive already contains more than 4.5
billion source code files, more than 1 billion commits, coming from
almost a hundred million software projects. It is a modern time Great
Library of Source Code, growing daily.&lt;/p&gt;
&lt;p&gt;The Software Heritage
&lt;a class="reference external" href="https://forge.softwareheritage.org/diffusion/"&gt;stack&lt;/a&gt; is entirely
written in Python and supports archiving git repositories, subversion
repositories, mercurial repositories, Debian source packages, as well as
arbitrary archives (zip files, tarballs…) released by upstream authors.
Everything gets stored in a common, fully deduplicated data model,
allowing unified access to all archived content, regardless of the
original means of distribution. &lt;a class="reference external" href="https://archive.softwareheritage.org/"&gt;The archive front-
end&lt;/a&gt;, built upon the Django
framework, allows people to browse the contents of the archive and
download snapshots of source code that may have disappeared upstream.&lt;/p&gt;
&lt;p&gt;While initially focused on archiving collaborative development forges
such as GitHub, BitBucket, and GitLab, Software Heritage also supports
archiving traditional software distributions, such as GNU/Linux
distributions, and language-specific ecosystems. As an acknowledgement
of the importance of the Python community for us, we are proud to
announce the archival of PyPI into Software Heritage. This presentation
will give a brief overview of the Software Heritage project and then
drill down through the technical details of the integration with PyPI.&lt;/p&gt;
</summary></entry><entry><title>Tester mieux, tester moins, avec Hypothesis</title><link href="https://pyvideo.org/pycon-fr-2018/tester-mieux-tester-moins-avec-hypothesis.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Thierry Chappuis</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/tester-mieux-tester-moins-avec-hypothesis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pas assez de temps, pas assez de connaissances, pas assez d'argent, pas
assez de... L'écriture des tests n'est souvent pas une tâche aisée. Le
débutant ne sait pas quoi tester, le professionnel n'a pas le temps, le
hobbyist n'a pas besoin. Les tests basés sur les propriétés ont pour
objectif de proposer une solution à ces problèmes. Popularisé par la
bibliothèque la Quickcheck (Haskell), ce concept est adapté en Python à
l'aide de la bibliothèque Hypothesis.&lt;/p&gt;
&lt;p&gt;Avec Hypothesis, au lieu de vous concentrer sur l'écriture de tests
individuels, vous décrivez des propriétés garanties par votre code et
Hypothesis générera les tests correspondants à ces spécifications, à
votre place. Par conséquent, l'utilisation de cette bibliothèque permet
dans une certaine mesure d'automatiser l'écriture de tests répétitifs et
élimine de nombreuses erreurs potentielles. Hypothesis génèrera plus de
tests que ceux que vous auriez générés manuellement et permettra de
démasquer plus d'erreurs. L'étudiant gagne ainsi en expérience, le
professionnel gagne du temps et le hobbyist se dit pourquoi pas.&lt;/p&gt;
&lt;p&gt;Cette présentation a pour objectif d'introduire au concept des tests
basés sur les propriétés ainsi qu'à l'utilisation de la bibliothèque
Hypothesis: pour les étudiants, pour les professionnels et pour les
hobbyists.&lt;/p&gt;
</summary></entry><entry><title>The rise of Python in the data communities</title><link href="https://pyvideo.org/pycon-fr-2018/the-rise-of-python-in-the-data-communities.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Alexys Jacob</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/the-rise-of-python-in-the-data-communities.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A retrospective and prospective of Python’s adoption in the data-driven
industries and how it has and should influence its ecosystem and
communities.&lt;/p&gt;
&lt;p&gt;Thanks to its versatility, Python’s usage and adoption has changed a lot
over the last decade to go beyond the very act of software programming.&lt;/p&gt;
&lt;p&gt;From Developers to SysOps, closely followed by Scientists and Data
analysts, Python has spread to become a common tongue for a wide range
of people.&lt;/p&gt;
&lt;p&gt;We will start by looking at how this increased adoption impacted Python
ecosystem and is still shaping it today. While this talk is not walk
through all the Python technologies around data, some of them will be
outlined so you will hear words like Numpy, Pandas or Jupyter.&lt;/p&gt;
&lt;p&gt;Then we will try to project ourselves in the future and by highlighting
the pitfalls Python has to overcome to keep up with its pace and mature
in its ability to scale!&lt;/p&gt;
</summary></entry><entry><title>TkInter : toujours de la partie ?</title><link href="https://pyvideo.org/pycon-fr-2018/tkinter-toujours-de-la-partie.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>François Girault</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/tkinter-toujours-de-la-partie.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TkInter est le toolkit graphique fourni en standard avec Python. Il
traîne une réputation de rusticité, de pauvreté et d'obsolescence qui
élude bien trop ses qualités et progrès. Après un état des lieux du
design d'interfaces, du skeuomorphisme au &amp;quot;flat design&amp;quot;, démystifions
TkInter par l'exemple et construisons des interfaces graphiques
utilisables et néanmoins modernes !&lt;/p&gt;
</summary></entry><entry><title>Trio: rendre l'asynchrone Pythonique</title><link href="https://pyvideo.org/pycon-fr-2018/trio-rendre-lasynchrone-pythonique.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Emmanuel Leblond</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/trio-rendre-lasynchrone-pythonique.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La programmation concurrente est un paradigme très utiles: site web
jonglant avec une multitude de websockets, bot de chat gérant plusieurs
conversations, web crawler travaillant sur plusieurs pages en parallèle
etc.&lt;/p&gt;
&lt;p&gt;Toutefois écrire un programme concurrent n'est jamais une balade de
santé, et ce même pour un développeur expérimenté.&lt;/p&gt;
&lt;p&gt;Python étant connu pour sa capacité à rendre simple les choses
complexes, il devrait y avoir une façon Pythonique d'écrire des
programmes asynchrones. Et c'est justement ce que Trio tente d’accomplir
!&lt;/p&gt;
&lt;p&gt;Trio est une bibliothèque de programmation asynchrone se basant sur les
dernières fonctionnalités fournit par Python3 (async/await, boucles et
context manager asynchrones etc.) tout en définissant un nouveau jeu de
primitives rendant l'écriture de programmes asynchrones plus simple,
plus testable, plus fun... bref plus Pythonique ;-)&lt;/p&gt;
</summary></entry><entry><title>Usages avancés de NumPy</title><link href="https://pyvideo.org/pycon-fr-2018/usages-avances-de-numpy.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Sarah Diot-Girard</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/usages-avances-de-numpy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python a la réputation d'être lent. C'est pourtant un langage largement
utilisé dans des contextes de calculs numériques intensifs. La clé de ce
paradoxe ? NumPy.&lt;/p&gt;
&lt;p&gt;NumPy, ou Numerical Python, permet un stockage efficace des matrices
numériques de dimension arbitraire. Cette présentation a pour objectif
de donner quelques trucs et astuces qui vous permettront un usage
optimal des NumPy arrays. Nous aborderons notamment la vectorisation, le
broadcasting, les ufuncs et les strides.&lt;/p&gt;
</summary></entry><entry><title>Vers une littérature pythonique: je lis, donc j'apprends!</title><link href="https://pyvideo.org/pycon-fr-2018/vers-une-litterature-pythonique-je-lis-donc-japprends.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Thierry Chappuis</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/vers-une-litterature-pythonique-je-lis-donc-japprends.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;L'apprenti écrivain développe son art en lisant les Maîtres, l'apprenti
architecte affûte sa lame en redessinant les merveilles de ce monde, et
le dev fait des MOOCs. Github, Bitbucket ou Gitlab regorgent d'exemples
pratiques, de code, de patterns architecturaux, de tests unitaires, de
structures de données, d'algos, de lignes de doc. L'objectif de cette
présentation est de réfléchir aux exercices, aux méthodologies, aux
techniques, aux outils nécessaires pour développer une habitude
littéraire pythonique chez l'apprenant, novice ou avancé. Pratiquer la
lecture de code sur des projets grandeur nature est intimidant, affolant
parfois, mais le retour sur investissement est potentiellement énorme.
Cette compétence s'apprend puis s'exerce.&lt;/p&gt;
</summary></entry><entry><title>Visualising the world of competitive programming with Python</title><link href="https://pyvideo.org/pycon-fr-2018/visualising-the-world-of-competitive-programming-with-python.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Anuj Menta</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/visualising-the-world-of-competitive-programming-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Competitive programming has grown exponentially in the last decade.
Millions of students, teachers, professionals solve problems including
complex optimisations every minute. With the influx of programming
languages, developers have a wide range of tools to choose from and use
them to solve competitive challenges. Some of the popular platforms
include Codeforces, Codechef, Hackerrank, Hackerearth, Topcoder etc.&lt;/p&gt;
&lt;p&gt;In this talk we are going to use the dataset of codes scraped from
Codeforces from a variety of challenges. These include programs written
by top rated coders across the world to the newbies. The platform allows
you to code in 26 different languages which obviously include popular
programming languages like C, C++, Java, Javascript, PHP, Python etc.
There are a very wide range of challenges in competitive programming
like Sorting, Binary Search, Trees, Graphs, Dynamic Programming to name
a few. The talk will cover the visualization of the dataset among broad
classifications of how each programming language performs in these
classifications. How efficient are programming languages across
classifications in terms of time and memory and several others? The talk
would also specifically cover the ease of using Python to solve
different classes of challenges in competitive programming and the usage
of Python over time.&lt;/p&gt;
&lt;p&gt;Major takeaways :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ABC of web scraping and best practices.&lt;/li&gt;
&lt;li&gt;Optimizing web scraping to scale.&lt;/li&gt;
&lt;li&gt;No-SQL databases for storing unstructured data&lt;/li&gt;
&lt;li&gt;How does Python as a language fare in competitive programming in
terms of&lt;/li&gt;
&lt;li&gt;efficiency and popularity?&lt;/li&gt;
&lt;li&gt;Can I pursue competitive programming using Python ONLY?&lt;/li&gt;
&lt;li&gt;An analysis of popular programming languages used for solving
challenges.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Watchghost : surveillance asynchrone de serveurs</title><link href="https://pyvideo.org/pycon-fr-2018/watchghost-surveillance-asynchrone-de-serveurs.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Arthur Vuillard</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/watchghost-surveillance-asynchrone-de-serveurs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Un constat s'est fait lors de rencontres Python à Lyon : il n'y a pas
d'outil de surveillance de serveurs simple et léger, et ça nous manque.
Nous avons donc décidé d'en créer un. Nous avons choisi des outils
asynchrones pour gagner en performance sur les appels réseaux. Nous
avons utilisé en particulier Tornado, AioFTP et AsyncSSH pour créer
Watchghost, un outil simple de surveillance de services réseaux. Nous
allons vous présenter ce que nous avons fait, comment nous l'avons fait,
ainsi que la suite du projet.&lt;/p&gt;
</summary></entry><entry><title>WeasyPrint : 8 ans de la première ligne à la version stable</title><link href="https://pyvideo.org/pycon-fr-2018/weasyprint-8-ans-de-la-premiere-ligne-a-la-version-stable.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Guillaume Ayoub</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/weasyprint-8-ans-de-la-premiere-ligne-a-la-version-stable.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Écrire une ligne de Python, c'est facile. Incroyable mais vrai : c'est
toujours la première étape lors de la création d'un nouveau logiciel.
Vous êtes capable d'écrire cette première ligne ? Alors vous êtes
capable de créer le futur logiciel de vos rêves. Vous ne me croyez pas ?
Venez donc vous laisser convaincre lors de cette conférence :).&lt;/p&gt;
&lt;p&gt;Nous prendrons l'exemple de WeasyPrint, un générateur de documents basé
sur les technologies du web, qui après 8 ans de développement atteint
(enfin) sa première version stable. Nous verrons comment il a évolué en
8 ans, quelles sont ses nouvelles fonctionnalités et comment il évoluera
dans le futur, vers l'infini et au-delà.&lt;/p&gt;
</summary></entry></feed>