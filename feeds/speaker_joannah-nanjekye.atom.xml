<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_joannah-nanjekye.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-11T00:00:00+00:00</updated><entry><title>Deploying and Managing Python with Kubernetes</title><link href="https://pyvideo.org/pycon-za-2018/deploying-and-managing-python-with-kubernetes.html" rel="alternate"></link><published>2018-10-11T00:00:00+00:00</published><updated>2018-10-11T00:00:00+00:00</updated><author><name>Joannah Nanjekye</name></author><id>tag:pyvideo.org,2018-10-11:pycon-za-2018/deploying-and-managing-python-with-kubernetes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Because of the benefits of containers, python applications have been
containerized recently. Containers have magically changed the way we
deploy and manage python applications allowing us to build, develop,
test, and even deploy python applications on a single system with no
upgrade downtimes.&lt;/p&gt;
&lt;p&gt;Kubernetes is the missing layer that gives us the ability to manage many
containers by providing features that enable containers to scale, talk
to each other and work in harmony.&lt;/p&gt;
&lt;p&gt;This talk will focus on how python developers can leverage Kubernetes to
manage any sort of python application on Kubernetes from simple to
complex applications.&lt;/p&gt;
&lt;p&gt;The talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The basics of Kubernetes.&lt;/li&gt;
&lt;li&gt;The basics of containerizing python applications.&lt;/li&gt;
&lt;li&gt;How to run and deploy simple, web and deep learning python pipelines
on Kubernetes.&lt;/li&gt;
&lt;li&gt;How to manage or work with Kubernetes using the Kubernetes python
client.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk will cover in summary the topics I talk about in my upcoming
book &amp;quot;Deploying and Managing Python with Kubernetes&amp;quot; published by Apress
sometime this year.&lt;/p&gt;
</summary></entry><entry><title>Contributing to python open source Infrastructure and projects</title><link href="https://pyvideo.org/pycon-za-2016/contributing-to-python-open-source-infrastructure-and-projects.html" rel="alternate"></link><published>2016-10-06T00:00:00+00:00</published><updated>2016-10-06T00:00:00+00:00</updated><author><name>Joannah Nanjekye</name></author><id>tag:pyvideo.org,2016-10-06:pycon-za-2016/contributing-to-python-open-source-infrastructure-and-projects.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The python community has gained and seen improvement in tools because of
the various contributions to its open source infrastructure and
projects. Research shows most python open source infrastructure and
projects are survived by an average of two contributors and yet
companies are building palaces using this python open source
infrastructure and projects since it's usually very easy to find the
upstream source for them.&lt;/p&gt;
&lt;p&gt;This talk shall focus on why python developers need to contribute to the
python open source infrastructure and projects now more than before, how
one can contribute to python open source Infrastructure and projects and
what prominent python open source Infrastructure and projects are
available to contribute to.&lt;/p&gt;
&lt;p&gt;During this talk, we will discuss what open source really is, the
difference between open source software and free software, licenses
involved in open source software, why python project owners need to make
their software open source, why python developers and students need to
contribute to python open source Infrastructure and projects now more
than ever , what python open source infrastructure Infrastructure and
projects contribution opportunities students have during summer. We will
also have a walk-through of submitting a pull request to a python open
source project using qutebrowser for an example for attendees who have
never contributed to open source before.&lt;/p&gt;
</summary></entry><entry><title>Python 2 and 3 compatibility: In a single codebase</title><link href="https://pyvideo.org/pycon-za-2017/python-2-and-3-compatibility-in-a-single-codebase.html" rel="alternate"></link><published>2017-10-06T00:00:00+00:00</published><updated>2017-10-06T00:00:00+00:00</updated><author><name>Joannah Nanjekye</name></author><id>tag:pyvideo.org,2017-10-06:pycon-za-2017/python-2-and-3-compatibility-in-a-single-codebase.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Although Python 3 is considered the future of Python, Python 2.x will
be maintained for several more years, alongside Python 3 which is not
backwards compatible with many open source projects and some packages
on PYPi still supporting python 2.x because the users of these
projects still use python 2.x.&lt;/p&gt;
&lt;p&gt;This talk explains clean ways to write code that will run on both Python
2.x and 3.x with examples of how to convert existing Python 2-compatible
code to code that will run reliably on both Python 2.x and 3.x.&lt;/p&gt;
&lt;p&gt;Developers working on either small, medium, or large projects will
appreciate the explanations, detailed examples, and clean techniques to
help them extend support for both versions to their existing Python
2-compatible projects.&lt;/p&gt;
&lt;p&gt;The talk will give insight into the content in the book &lt;a class="reference external" href="https://www.amazon.com/Python-Compatibility-Python-Future-Joannah-Nanjekye/dp/1484229541"&gt;Python 2 and 3
Compatibility&lt;/a&gt;
that will available in October but be released in paper backs in January
2018 by Apress.&lt;/p&gt;
</summary></entry></feed>