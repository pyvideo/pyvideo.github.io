<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 31 Oct 2019 00:00:00 +0000</lastBuildDate><item><title>Learning Python (or Anything) Effectively</title><link>https://pyvideo.org/pycon-se-2019/learning-python-or-anything-effectively.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When we're learning something new - even something as friendly as Python - it can be difficult to make details stick long-term. This talk will give you some tips to help you learn Python - or anything else - more effectively. Although Python beginners will benefit the most from applying these concepts to Python, this talk is for anyone who wants to hack into their potential to learn more efficiently.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica Shortz</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/learning-python-or-anything-effectively.html</guid><category>Learning</category><category>Beginners</category></item><item><title>Enhancing Angklung Music Rehearsals with Python</title><link>https://pyvideo.org/europython-2019/enhancing-angklung-music-rehearsals-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Angklung is a traditional musical instrument from Indonesia. This
instrument has a lot of variety in how it is performed; a common format
is the orchestral format in which 15-30 players gather to form a team.
Playing Angklung in this way is fun but also presents some challenges
that are hard to solve manually.&lt;/p&gt;
&lt;p&gt;First, I will introduce you to the instrument and how it works/how it is
played. Then, I will show you how Python-based algorithms can be used to
ease the pains of managing Angklung teams, by reading Angklung-specific
sheet music and calculating the most optimal distribution of Angklung
based on several important factors.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trapsilo Bumi</dc:creator><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-12:europython-2019/enhancing-angklung-music-rehearsals-with-python.html</guid><category>Algorithms</category><category>Analytics</category><category>Beginners</category><category>Case Study</category><category>Use Case</category></item><item><title>How to read (code)</title><link>https://pyvideo.org/europython-2019/how-to-read-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When you learn a new language, like French or German or even English,
you first learn how to read. Then you learn how to write. When you learn
a new &lt;em&gt;programming&lt;/em&gt; language, you first learn how to write. And that’s
it.&lt;/p&gt;
&lt;p&gt;Imagine that you were never formally taught how to read. And that you
were told that you should just figure it out … by writing … a whole
bunch. How would that even work? I don’t think it would.&lt;/p&gt;
&lt;p&gt;If you can’t read. You can’t write. It’s that simple.&lt;/p&gt;
&lt;p&gt;Do you think that Shakespeare would be Shakespeare if he never read a
single book in his entire life? No. Nothing is created in a vacuum. Good
writers are good writers because they’re good readers.&lt;/p&gt;
&lt;p&gt;Just as reading is an invaluable skill so to is reading code. It’s a
skill that’s never formally taught. But it’s a skill that is essential
nonetheless. In this talk I’ll show you how to effectively read code so
that might write better code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Humber</dc:creator><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-12:europython-2019/how-to-read-code.html</guid><category>Beginners</category><category>Clean Code</category><category>Documentation</category><category>Learning</category><category>Teaching</category></item><item><title>Using Python to Teach Computational Finance</title><link>https://pyvideo.org/europython-2019/using-python-to-teach-computational-finance.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this demo-driven session, we will introduce the Probo package for
teaching Python programming and concepts from computational finance to
beginning programmers in the domain of finance. We'll show how Python is
the perfect tool for teaching computational thinking to develop deeper
quantitative reasoning. Jupyter notebooks, together with Python packages
such as NumPy and Pandas, provide the ideal learning environment.&lt;/p&gt;
&lt;p&gt;We will start by introducing the Probo package for derivative pricing
and hedging. We will demo the pricing of European and American options
via the famous Black-Scholes option pricing model. Other examples
include Monte Carlo simulation and binomial trees. Using Probo, the
answers to derivative pricing problems are right at the students'
fingertips. Students can operationalize their understanding by going
directly from the mathematics of derivative pricing theories to their
implementation in clean and simple code.&lt;/p&gt;
&lt;p&gt;We will end with a demonstration using Probo to teach the concept of
dynamic hedging. Dynamic hedging is perhaps &lt;em&gt;the&lt;/em&gt; crucial concept in
modern financial derivatives theory. It is also one of the most
difficult concepts to grasp. We'll show how developing deeper intuition
is possible with computational thinking via Monte Carlo simulation of
delta-hedging. By leveraging the power and simplicity of Python and
Jupyter notebooks, the Probo package provides the ideal learning
platform for students of computational finance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tyler Brough</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:europython-2019/using-python-to-teach-computational-finance.html</guid><category>Beginners</category><category>Business</category><category>Business Cases</category><category>Education</category><category>Jupyter</category></item><item><title>Shu Conhecendo os fundamentos da linguagem</title><link>https://pyvideo.org/caipyra-2016/shu-conhecendo-os-fundamentos-da-linguagem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="http://caipyra.python.org.br"&gt;http://caipyra.python.org.br&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Armando Neto</dc:creator><pubDate>Sat, 25 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-25:caipyra-2016/shu-conhecendo-os-fundamentos-da-linguagem.html</guid><category>beginners</category></item></channel></rss>