<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_miquel-camprodon.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-10-09T00:00:00+00:00</updated><entry><title>py - reglas de asociación</title><link href="https://pyvideo.org/pycon-es-2016/py-reglas-de-asociacion.html" rel="alternate"></link><published>2016-10-09T00:00:00+00:00</published><updated>2016-10-09T00:00:00+00:00</updated><author><name>Claudia Guirao</name></author><id>tag:pyvideo.org,2016-10-09:pycon-es-2016/py-reglas-de-asociacion.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Con los grandes volúmenes de datos disponibles hoy en día, encontrar patrones en los datos es una tarea que tiene gran importancia. Con los nuevos dispositivos móviles disponibles poco a poco la recomendación se está imponiendo sobre la búsqueda. Y también hoy en día podemos encontrar un problema de predicción multiclase en cada esquina.&lt;/p&gt;
&lt;p&gt;Estos son sólo tres ejemplos para los cuales las reglas de asociación son muy válidas. Las reglas de asociación son un sistema de aprendizaje automático que tiene unas características que las hacen muy especiales: son muy intuitivas y sencillas de trabajar con ellas, y no son complicadas de programar. El resultado de esta técnica por lo general puede resumirse en “si pasa esto, entonces esto otro”, de ahí su fácil implementación. Además, en general ofrecen unos resultados que habitualmente son bastante buenos.&lt;/p&gt;
&lt;p&gt;En la charla revisaremos los conceptos básicos de las reglas de asociación: items, antecedentes, consecuentes, soporte, confianza y lift y cómo programar un sistema de reglas sencillo en Python.&lt;/p&gt;
&lt;p&gt;Finalmente se muestran ejemplos de aplicación de los sistemas basados en reglas: patrones, recomendación y predicción.&lt;/p&gt;
&lt;p&gt;Material de la charla disponible en &lt;a class="reference external" href="https://github.com/intiveda/pyreglasasociacion"&gt;https://github.com/intiveda/pyreglasasociacion&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://2016.es.pycon.org/"&gt;http://2016.es.pycon.org/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Know your models - Statsmodels!</title><link href="https://pyvideo.org/pycon-es-2015/know-your-models-statsmodels.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Israel Saeta Pérez</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/know-your-models-statsmodels.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scikit-learn has become the best known and most used package to perform it-just-works Machine Learning in Python. But what happens when you want to look into what is going on within your models to inspect and improve them? In this talk we will present the not-so-well-known packages statsmodels and patsy that can help us to achieve a better undestanding of your models and your data.&lt;/p&gt;
</summary><category term="Track Científico"></category><category term="scikit-learn"></category><category term="statsmodels"></category><category term="patsy"></category></entry></feed>