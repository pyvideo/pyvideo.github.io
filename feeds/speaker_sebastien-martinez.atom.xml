<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_sebastien-martinez.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-10-18T00:00:00+00:00</updated><entry><title>Mise à jour à chaud d'un animal à sang froid</title><link href="https://pyvideo.org/pycon-fr-2015/mise-a-jour-a-chaud-dun-animal-a-sang-froid.html" rel="alternate"></link><published>2015-10-18T00:00:00+00:00</published><updated>2015-10-18T00:00:00+00:00</updated><author><name>Sébastien Martinez</name></author><id>tag:pyvideo.org,2015-10-18:pycon-fr-2015/mise-a-jour-a-chaud-dun-animal-a-sang-froid.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;En temps normal, les programmes doivent être redémarrés pour être mis à
jour. Comme c'est plutôt embêtant, nous vous proposons de mettre à jour
des programmes sans les arrêter. Nous allons voir comment accomplir une
telle chose en vous présentant notre version hackée de l'interpréteur
CPython et sa très chère amie, la bibliothèque Pymoult.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mettre à jour des programmes nécessite d'habitue de les arrêter, les
patcher puis les redémarrer. Cela devient vite un problème pour des
programmes dont la disponibilité est critique (satellites en missions,
serveurs ...). Une solution est alors de mettre à jour ces programmes
pendant leur exécution, sans les redémarrer. Au cours de cette
présentation, nous allons montrer comment une telle chose peut être
faite en Python. Nous présenterons Cpython- Dsu, notre version de
Cpython étendue par des mécanismes de mise à jour dynamique que nous
utilisons en combinaison avec la bibliothèque Pymoult.&lt;/p&gt;
</summary></entry></feed>