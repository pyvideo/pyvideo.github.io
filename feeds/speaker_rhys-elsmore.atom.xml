<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_rhys-elsmore.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-08-04T00:00:00+00:00</updated><entry><title>How to Lose Friends and Influence Burnout</title><link href="https://pyvideo.org/kiwi-pycon-2013/how-to-lose-friends-and-influence-burnout.html" rel="alternate"></link><published>2013-09-15T00:00:00+00:00</published><updated>2013-09-15T00:00:00+00:00</updated><author><name>Rhys Elsmore</name></author><id>tag:pyvideo.org,2013-09-15:kiwi-pycon-2013/how-to-lose-friends-and-influence-burnout.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;It's 4AM, the coffee on your desk is cold, the office is dark, and
everyone else has gone home for the day. For the 5th time today you are
coming to a dead-end while deploying your web application, and the only
thing on your mind is 'Where did it all go wrong?''&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Novice&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It's 4AM, the coffee on your desk is cold, the office is dark, and
everyone else has gone home for the day. For the 5th time today you are
coming to a dead-end while deploying your web application, and the only
thing on your mind is 'Where did it all go wrong?''.&lt;/p&gt;
&lt;p&gt;This situation is all too common, especially when you are strapped for
time due to budgets and deadlines; it is no fun for anybody. Come learn
about the huge mistakes I made as a developer, the terrible
anti-patterns I worked my way into, but most importantly,what I learnt
from while on this path to destruction.&lt;/p&gt;
&lt;p&gt;Be it choosing the right framework, picking the best tool for the job,
learning to love the 12 factor, or the pitfalls of concurrency; see what
I learnt from a stint as a solo developer in a not so ideal situation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/rhys-elsmore-how-to-lose-friends-and-influence-burnout"&gt;https://speakerdeck.com/nzpug/rhys-elsmore-how-to-lose-friends-and-influence-burnout&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>(Benford's) Law and Order (Fraud) by Rhys Elsmore</title><link href="https://pyvideo.org/pycon-au-2014/benfords-law-and-order-fraud-by-rhys-elsmore.html" rel="alternate"></link><published>2014-08-11T00:00:00+00:00</published><updated>2014-08-11T00:00:00+00:00</updated><author><name>Rhys Elsmore</name></author><id>tag:pyvideo.org,2014-08-11:pycon-au-2014/benfords-law-and-order-fraud-by-rhys-elsmore.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;On the internet, fraudulent and abusive behavior is considered
especially heinous. At Heroku, the dedicated detectives who investigate
these vicious felonies are members of an elite squad armed with large
amounts of data and spare CPU cycles. These are their stories.&amp;quot;&lt;/p&gt;
&lt;p&gt;Bad behavior can wreak havoc on your web application. It might be
mass-signups, fraudulent orders, spammy posts, right up to automated
bots designed to work around restrictions you have set in place; this
can cost you time, resources, and lots of money. All is not lost though.
Despite the ongoing efforts of abusers, their activity still leaves
fingerprints and clues, which you can use to your advantage.&lt;/p&gt;
&lt;p&gt;This talk is a 101 introduction to some of the methods which you can use
to separate good from bad users using a combination of data mining,
statistics, and some some basic machine learning. Basically, I want to
get you thinking like an internet detective.&lt;/p&gt;
&lt;p&gt;Some of the topics I will be covering include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Collecting and preparing data sources.&lt;/li&gt;
&lt;li&gt;Effective methods for classifying existing users.&lt;/li&gt;
&lt;li&gt;Feature extracting; what works and what doesn't.&lt;/li&gt;
&lt;li&gt;Analyzing user-provided data to profile your users, and weed out the
bad operators.&lt;/li&gt;
&lt;li&gt;Determining a user's intentions by looking at their access patterns.&lt;/li&gt;
&lt;li&gt;Making use of 'outliers' to find suspicious users and transactions.&lt;/li&gt;
&lt;li&gt;Stopping bad users before they can wreak havoc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As this is a 101 topic I will provide some basic examples, as well as
links to more in-depth resources for further reading. I would recommend
this talk to developers of web applications, especially those with a
large number of users, the ability to process credit cards, or with a
'free' offering. Attendees should have a basic understanding of topics
such as SQL, Pandas, and some basic understanding of mathematics and
statistics, although this is not essential as I will be providing links
to further reading.&lt;/p&gt;
</summary></entry><entry><title>Just Use Postgres.</title><link href="https://pyvideo.org/pycon-au-2015/just-use-postgres.html" rel="alternate"></link><published>2015-08-04T00:00:00+00:00</published><updated>2015-08-04T00:00:00+00:00</updated><author><name>Rhys Elsmore</name></author><id>tag:pyvideo.org,2015-08-04:pycon-au-2015/just-use-postgres.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making use of the latest database for your data is considered trendy and
edgy, with vendors promising unrealistic expectations when it comes to
capabilities of these systems. Furthermore, communities such as Hacker
News enforce the idea that you must use the latest and coolest
technology in order to be a ‘rockstar’ engineer.&lt;/p&gt;
&lt;p&gt;Marketing buzzwords like ‘real-time’, ‘distributed’,
‘high-availability’, and ‘schemaless’ impact our design decisions, and
the expectation for applications to be ‘scalable’ often forces
developers to prematurely introduce complexity and anti-patterns into
their applications by making use of these untested and immature data
stores.&lt;/p&gt;
&lt;p&gt;Forget about adding the latest trendy data store into your stack; just
use Postgres.&lt;/p&gt;
&lt;p&gt;This talk will explore the capabilities of Postgres 9.4, and various
use-cases where you can involve it as your primary datastore. I will
cover some of the projects at Heroku where we have used Postgres, such
as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Quickly querying over 300M records to get a list of all users on a
particular server at a particular point in time.&lt;/li&gt;
&lt;li&gt;Providing almost real-time aggregations of all Heroku customer’s
usage.&lt;/li&gt;
&lt;li&gt;Joining 3 different tables on 3 different database servers without
any external code.&lt;/li&gt;
&lt;li&gt;Creating a ‘social graph’ of all of Heroku’s users based on commonly
used IP addresses.&lt;/li&gt;
&lt;li&gt;Ensuring that coupon codes are used only once, preventing attackers
from exploiting ‘race condition’ bugs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In particular, I will focus on topics such as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Storing, indexing, and querying schemaless data.&lt;/li&gt;
&lt;li&gt;Materialized Views.&lt;/li&gt;
&lt;li&gt;NOTIFY/LISTEN.&lt;/li&gt;
&lt;li&gt;Storing and querying time-series data.&lt;/li&gt;
&lt;li&gt;Updatable views.&lt;/li&gt;
&lt;li&gt;Foreign tables.&lt;/li&gt;
&lt;li&gt;Recursive views.&lt;/li&gt;
&lt;li&gt;Stored functions.&lt;/li&gt;
&lt;li&gt;Range Types&lt;/li&gt;
&lt;li&gt;Partitioning and Sharding data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each topic will include links to sample schemas and iPython notebooks so
you can take these examples home with you.&lt;/p&gt;
</summary></entry><entry><title>Lightning talks</title><link href="https://pyvideo.org/pycon-au-2015/lightning-talks-19.html" rel="alternate"></link><published>2015-08-04T00:00:00+00:00</published><updated>2015-08-04T00:00:00+00:00</updated><author><name>Marcus Holterman</name></author><id>tag:pyvideo.org,2015-08-04:pycon-au-2015/lightning-talks-19.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;00:00 Introduction 01:10 Marcus Holterman - Django Logging Canary 02:54
Tim Ansell - Tim (still) has too many projects 08:24 Russell
Keith-Magee - I am a doctor 12:51 Steven Joeseph - Async IO TLDR
edition 20:20 Chris Beevan - Bit ID Authentication 25:21 Xuanyi Chew -
More stuff you probably didn't know about 27:18 Aimee Marie Forsstrom -
Cyber Terrorism or Terrible Code 31:42 Rhys Elsmore - What Postgres can
teach us about JavaScript 34:38 Roman Juce - zc.buildout for repeatible
builds 38:10 Quentin Lovett - Building Robots 41:06 Amber 'Hawkie' Brown
- Just use PyPy&lt;/p&gt;
</summary><category term="lightning talks"></category></entry></feed>