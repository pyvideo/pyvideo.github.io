<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-au-2019.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-08-04T00:00:00+00:00</updated><entry><title>A Programmer's Guide to Public Speaking</title><link href="https://pyvideo.org/pycon-au-2019/a-programmers-guide-to-public-speaking.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Donna Zhou</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/a-programmers-guide-to-public-speaking.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every developer can be a great public speaker. Learn actionable public speaking tips distilled from more than a decade of stand-up, improv, and sketch comedy. After this talk, you'll feel more confident delivering daily standups, company meetings, and conference talks.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/a-programmers-guide-to-public-speaking"&gt;https://2019.pycon-au.org/talks/a-programmers-guide-to-public-speaking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 11:50:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Changing what’s normal: how to transfer concepts between groups</title><link href="https://pyvideo.org/pycon-au-2019/changing-whats-normal-how-to-transfer-concepts-between-groups.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Maia Sauren</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/changing-whats-normal-how-to-transfer-concepts-between-groups.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk focuses on how to change people’s minds, and successfully introduce new concepts to groups and individuals without damaging relationships.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/changing-whats-normal-how-to-transfer-concepts-between-groups"&gt;https://2019.pycon-au.org/talks/changing-whats-normal-how-to-transfer-concepts-between-groups&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 10:30:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Conference Close</title><link href="https://pyvideo.org/pycon-au-2019/conference-close.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/conference-close.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/990c-close/"&gt;https://2019.pycon-au.org/talks/990c-close/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 17:00:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Devpi for teams</title><link href="https://pyvideo.org/pycon-au-2019/devpi-for-teams.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Graham Williamson</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/devpi-for-teams.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building python packages in a team can be a complicated process. Devpi can assist in reducing this complexity by hosting your own content and making it seamlessly available with the rest of the packages on pypi. It also provides resiliency, robustness and auditability to your teams build process.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/devpi-for-teams"&gt;https://2019.pycon-au.org/talks/devpi-for-teams&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 11:10:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Environment Variables: how software impacts climate change</title><link href="https://pyvideo.org/pycon-au-2019/environment-variables-how-software-impacts-climate-change.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Merrin Macleod</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/environment-variables-how-software-impacts-climate-change.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How can we minimise our software’s contribution to climate change? How do we make software that can withstand climate change-related disasters? How do we deal with the knowledge that we’re careening towards catastrophe?&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/environment-variables"&gt;https://2019.pycon-au.org/talks/environment-variables&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 14:50:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Extending MicroPython: Using C for good!</title><link href="https://pyvideo.org/pycon-au-2019/extending-micropython-using-c-for-good.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Matt Trentini</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/extending-micropython-using-c-for-good.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MicroPython is a &lt;em&gt;fantastic&lt;/em&gt; environment for embedded development. But it &lt;em&gt;is&lt;/em&gt; an interpreted language; what happens when you hit performance
limitations? Or want to use a new feature of your microcontroller? We’ll look at how MicroPython can be &lt;em&gt;extended&lt;/em&gt; to add features and improve performance.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/extending-micropython-using-c-for-good"&gt;https://2019.pycon-au.org/talks/extending-micropython-using-c-for-good&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 13:30:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>Git hook[ed]” on images &amp; up your documentation game</title><link href="https://pyvideo.org/pycon-au-2019/git-hooked-on-images-up-your-documentation-game.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Veronica Hanus</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/git-hooked-on-images-up-your-documentation-game.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Can you remember the difference between two hex color values? Me neither!&lt;/em&gt; Entering visual representations of recent-changes into version control makes review of past changes easier &amp;amp; speeds acclimation to a new web project. Join me for a review of current methods &amp;amp; how to choose the best for you!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/git-hooked-on-images-up-your-documentation-game"&gt;https://2019.pycon-au.org/talks/git-hooked-on-images-up-your-documentation-game&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 14:10:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Insights into Social Media Data using Entropy Theory</title><link href="https://pyvideo.org/pycon-au-2019/insights-into-social-media-data-using-entropy-theory.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Mars Geldard</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/insights-into-social-media-data-using-entropy-theory.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Entropy theory is usually thought of as something that applies to matter and energy, but it turns out that we can apply the same techniques of analysis to social media sites. Join me as we study the thermodynamic behaviour of users on Twitter, and learn how to analyse it better.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/insights-into-social-media-data-using-entropy-theory"&gt;https://2019.pycon-au.org/talks/insights-into-social-media-data-using-entropy-theory&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 11:10:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Instant-feedback, instant-debugging Python coding</title><link href="https://pyvideo.org/pycon-au-2019/instant-feedback-instant-debugging-python-coding.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Robert Lechte</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/instant-feedback-instant-debugging-python-coding.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building on Bret Victor's famous 'Inventing on Principle' presentation, we look at writing Python where the code is instantly run and every line visualized after every single keystroke. There's a future beyond the text-editor → console-run loop and this is a taste of it.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/instant-feedback-instant-debugging-python-coding"&gt;https://2019.pycon-au.org/talks/instant-feedback-instant-debugging-python-coding&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 14:10:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>It's dark and my lights aren't working (an asyncio success story)</title><link href="https://pyvideo.org/pycon-au-2019/its-dark-and-my-lights-arent-working-an-asyncio-success-story.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Jim Mussared</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/its-dark-and-my-lights-arent-working-an-asyncio-success-story.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I have invested huge amounts of time in achieving a simple goal -- making the lighting in my home &amp;quot;smart&amp;quot;. It's not ground breaking, nor is it practical or cost effective, but it sure was educational, uses a bunch of Python, and the result makes me (and my family) happy.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/its-dark-and-my-lights-arent-working-an-asyncio-success-story"&gt;https://2019.pycon-au.org/talks/its-dark-and-my-lights-arent-working-an-asyncio-success-story&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 11:50:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Let's Build a Symbolic Analyser And Automatically Find Bugs</title><link href="https://pyvideo.org/pycon-au-2019/lets-build-a-symbolic-analyser-and-automatically-find-bugs.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Jon Manning</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/lets-build-a-symbolic-analyser-and-automatically-find-bugs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn the theory and practice of symbolic analysis, a method of fake-running your code that lets you discover bugs and verify functionality without actually executing code, using Z3 and Python!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/lets-build-a-symbolic-analyser-and-automatically-find-bugs"&gt;https://2019.pycon-au.org/talks/lets-build-a-symbolic-analyser-and-automatically-find-bugs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 11:50:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>Micropython Gotchas</title><link href="https://pyvideo.org/pycon-au-2019/micropython-gotchas.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Michał Gałka</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/micropython-gotchas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all somehow get the feeling that MicroPython is not quite the Python we know. During the talk, I’ll show what the “not quite” actually means. I'll present a set of different issues I stumbled upon when working with different MicroPython powered boards ranging from memory constraints to API calls.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/micropython-gotchas"&gt;https://2019.pycon-au.org/talks/micropython-gotchas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 14:50:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>No time to idle about: Profiling import time in Python</title><link href="https://pyvideo.org/pycon-au-2019/no-time-to-idle-about-profiling-import-time-in-python.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Daniel Porteous</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/no-time-to-idle-about-profiling-import-time-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.7 added the ability to print import times at startup. But what can we do with that data, and is it enough? In this talk we'll look at how to process import time data, structure it, visualise it, and make concrete choices to improve start up time. Python need not be slow to start!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/no-time-to-idle-about-profiling-import-time-in-python"&gt;https://2019.pycon-au.org/talks/no-time-to-idle-about-profiling-import-time-in-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 14:10:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Orchestrating complex (not complicated) tasks using AWS serverless and Python</title><link href="https://pyvideo.org/pycon-au-2019/orchestrating-complex-not-complicated-tasks-using-aws-serverless-and-python.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Michael Kelly</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/orchestrating-complex-not-complicated-tasks-using-aws-serverless-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python and serverless technologies are a great way to quickly scale a project, but what can you do when things get complicated? Here are some patterns to keep you sane.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/orchestrating-complex-not-complicated-tasks-using-aws-serverless-and-python"&gt;https://2019.pycon-au.org/talks/orchestrating-complex-not-complicated-tasks-using-aws-serverless-and-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 14:50:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>Python Oddities Explained</title><link href="https://pyvideo.org/pycon-au-2019/python-oddities-explained.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Trey Hunner</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/python-oddities-explained.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sometimes you’ll find what might seem like a bug in Python but occasionally these bugs reveal themselves to be misunderstood features. During this talk we’ll look at a number of Python’s unique features and quirks and attempt to re-shape our mental models of how Python works.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/python-oddities-explained"&gt;https://2019.pycon-au.org/talks/python-oddities-explained&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 13:30:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Shipping your first Python package and automating future publishing</title><link href="https://pyvideo.org/pycon-au-2019/shipping-your-first-python-package-and-automating-future-publishing.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Chris Wilcox</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/shipping-your-first-python-package-and-automating-future-publishing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the best things about Python is the vast ecosystem of packages available on the Python Package Index. Shipping your first Python package can be intimidating. This talk aims to remove the mystery of Python packaging and enable you to share your code with the Python community.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/shipping-your-first-python-package-and-automating-future-publishing"&gt;https://2019.pycon-au.org/talks/shipping-your-first-python-package-and-automating-future-publishing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 10:30:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Sunday Lightning Talks</title><link href="https://pyvideo.org/pycon-au-2019/sunday-lightning-talks.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/sunday-lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are 5 minute talks. You have 5 minutes. 5 shall be the number, and the number shall be 5. 6 is too much.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/sunday-lightning-talks"&gt;https://2019.pycon-au.org/talks/sunday-lightning-talks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 16:00:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Teaching Python with tiny, occult pandas</title><link href="https://pyvideo.org/pycon-au-2019/teaching-python-with-tiny-occult-pandas.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Bruce Fuda</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/teaching-python-with-tiny-occult-pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Microcontrollers, web development, data science and machine learning – with Python you really can do it all, and soon every teacher and student in the ACT will have the curriculum, resources and support they need to do amazing things with a great programming language!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/teaching-python-with-tiny-occult-pandas"&gt;https://2019.pycon-au.org/talks/teaching-python-with-tiny-occult-pandas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 13:30:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>The New COBOL</title><link href="https://pyvideo.org/pycon-au-2019/the-new-cobol.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Benno Rice</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/the-new-cobol.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;COBOL was one of the first business-oriented programming languages, showing up in the 1960s. It’s also regarded as one of the worst languages in which to work. But is that true? And if so, what could ever take its place as the most reviled thing in dev?&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/the-new-cobol"&gt;https://2019.pycon-au.org/talks/the-new-cobol&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 10:30:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>The real costs of Open Source Sustainability</title><link href="https://pyvideo.org/pycon-au-2019/the-real-costs-of-open-source-sustainability.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>VM Brasseur</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/the-real-costs-of-open-source-sustainability.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What if money isn't the only way to create sustainable free and open source software projects? What if it turns out that sustainability is actually a multi-faceted concept that can't truly be successful if people focus on only one of its many elements?&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/vicky"&gt;https://2019.pycon-au.org/talks/vicky&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 09:20:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>The universe as balls and springs: molecular dynamics in Python</title><link href="https://pyvideo.org/pycon-au-2019/the-universe-as-balls-and-springs-molecular-dynamics-in-python.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Lily Wang</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/the-universe-as-balls-and-springs-molecular-dynamics-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Surprisingly, we can approximate matter as a bunch of balls on springs and learn things about our bodies and the world. This talk will look at the different stages of molecular dynamics (MD) simulations and how Python is changing everything.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/the-universe-as-balls-and-springs-molecular-dynamics-in-python"&gt;https://2019.pycon-au.org/talks/the-universe-as-balls-and-springs-molecular-dynamics-in-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 13:30:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Volumetric Performance Capture and Playback: A Workflow with Python</title><link href="https://pyvideo.org/pycon-au-2019/volumetric-performance-capture-and-playback-a-workflow-with-python.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Luke Miller</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/volumetric-performance-capture-and-playback-a-workflow-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Volumetric capture is a technique used to film in three dimensions for viewing in a virtual space.This talk will explore the different elements of a full volumetric capture stack, from coordinating usb cameras to playback in a 3D game engine and how python can be used to glue it all together.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/volumetric-performance-capture-and-playback-a-workflow-with-python"&gt;https://2019.pycon-au.org/talks/volumetric-performance-capture-and-playback-a-workflow-with-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 14:50:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>What not to do, and how to do it</title><link href="https://pyvideo.org/pycon-au-2019/what-not-to-do-and-how-to-do-it.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Jakub Nabaglo</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/what-not-to-do-and-how-to-do-it.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has powerful tools that let our programs inspect and modify themselves. These can be used for good or evil. We study a few of these tools, and some examples of how not to use them.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/what-not-to-do-and-how-to-do-it"&gt;https://2019.pycon-au.org/talks/what-not-to-do-and-how-to-do-it&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 11:50:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>What PHP learned from Python</title><link href="https://pyvideo.org/pycon-au-2019/what-php-learned-from-python.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Adam Harvey</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/what-php-learned-from-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In 2015, the PHP project released version 7.0 of the PHP language. An advantage PHP had was that Python had gone through a similar process with Python 3 seven years earlier. I'll discuss the lessons taken from the Python 2-3 transition, and how they were applied.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/what-php-learned-from-python"&gt;https://2019.pycon-au.org/talks/what-php-learned-from-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 11:10:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Building an interactive training environment using JupyterHub</title><link href="https://pyvideo.org/pycon-au-2019/building-an-interactive-training-environment-using-jupyterhub.html" rel="alternate"></link><published>2019-08-03T11:50:00+10:00</published><updated>2019-08-03T11:50:00+10:00</updated><author><name>Graham Dumpleton</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/building-an-interactive-training-environment-using-jupyterhub.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;JupyterHub is used to run and manage Jupyter notebook instances for multiple users at the same time. Did you know though that you can use JupyterHub to spawn applications other than Jupyter notebooks? Come see how JupyterHub was used to create a multi user interactive training environment.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/building-an-interactive-training-environment-using-jupyterhub"&gt;https://2019.pycon-au.org/talks/building-an-interactive-training-environment-using-jupyterhub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 11:50:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>Anatomy of a Browser</title><link href="https://pyvideo.org/pycon-au-2019/anatomy-of-a-browser.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Erin Zimmer</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/anatomy-of-a-browser.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web browsers are a bit like digestive systems - we all have one, but we're not really sure how it works, and sometimes it makes funny smells. So let's have a look at what's going on under the hood when your browser turns a bunch of characters into a delightful picture of a cat.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/anatomy-of-a-browser"&gt;https://2019.pycon-au.org/talks/anatomy-of-a-browser&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 13:30:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Building a Sustainable Python Package Index</title><link href="https://pyvideo.org/pycon-au-2019/building-a-sustainable-python-package-index.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Dustin Ingram</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/building-a-sustainable-python-package-index.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most of us have installed a Python package, but do we know what it takes to make that work in a consistent, reliable way?&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/building-a-sustainable-python-package-index"&gt;https://2019.pycon-au.org/talks/building-a-sustainable-python-package-index&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 10:30:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Creating Lasting Change</title><link href="https://pyvideo.org/pycon-au-2019/creating-lasting-change.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Aurynn Shaw</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/creating-lasting-change.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Nature of Organisations, People, and how to Change Them&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/aurynn"&gt;https://2019.pycon-au.org/talks/aurynn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 09:20:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Fantastic Blocks And Where To Hide Them</title><link href="https://pyvideo.org/pycon-au-2019/fantastic-blocks-and-where-to-hide-them.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Christopher Neugebauer</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/fantastic-blocks-and-where-to-hide-them.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ruby has blocks. JavaScript has blocks. Swift has blocks. Python doesn’t have blocks.In this talk, we'll look at &lt;em&gt;why&lt;/em&gt; Python doesn't have blocks, and recent programming techniques that have developed in languages that &lt;em&gt;do&lt;/em&gt; have blocks. Then we'll look at what we – or Python – can do about it!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/fantastic-blocks-and-where-to-hide-them"&gt;https://2019.pycon-au.org/talks/fantastic-blocks-and-where-to-hide-them&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 14:10:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Goodbye Print Statements, Hello Debugger!</title><link href="https://pyvideo.org/pycon-au-2019/goodbye-print-statements-hello-debugger.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/goodbye-print-statements-hello-debugger.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Still debugging your code with print statements? Learn how to level up your ability to troubleshoot complex code situations by using the power of a fully-featured debugger in this talk aimed at all levels of programming ability.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/goodbye-print-statements-hello-debugger"&gt;https://2019.pycon-au.org/talks/goodbye-print-statements-hello-debugger&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 11:10:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>How I migrated a huge OSS project to use pytest</title><link href="https://pyvideo.org/pycon-au-2019/how-i-migrated-a-huge-oss-project-to-use-pytest.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Craig de Stigter</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/how-i-migrated-a-huge-oss-project-to-use-pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over a couple of months in 2018 I developed a script for refactoring GDAL's ancient and arcane test suite to use Pytest. The final pull request was over 118,000 lines. This talk covers how I did it and what I learned.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/how-i-migrated-a-huge-oss-project-to-use-pytest"&gt;https://2019.pycon-au.org/talks/how-i-migrated-a-huge-oss-project-to-use-pytest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 14:50:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>It's Pythons All The Way Down: Python Types &amp; Metaclasses Made Simple</title><link href="https://pyvideo.org/pycon-au-2019/its-pythons-all-the-way-down-python-types-metaclasses-made-simple.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Mark Smith</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/its-pythons-all-the-way-down-python-types-metaclasses-made-simple.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Don't be afraid of metaclasses! This talk will explain how, once you've grasped basic types, classes and inheritance, Python's advanced language features such as descriptors and metaclasses are just within your reach.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/its-pythons-all-the-way-down-python-types-metaclasses-made-simple"&gt;https://2019.pycon-au.org/talks/its-pythons-all-the-way-down-python-types-metaclasses-made-simple&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 10:30:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>Lessons learned building Python microservices</title><link href="https://pyvideo.org/pycon-au-2019/lessons-learned-building-python-microservices.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Richard Jones</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/lessons-learned-building-python-microservices.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will talk about challenges and wins that have come from introducing Python into a multilingual microservices kubernetes architecture with lots of legacy.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/lessons-learned-building-python-microservices"&gt;https://2019.pycon-au.org/talks/lessons-learned-building-python-microservices&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 10:30:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Logging Rethought 2: The Actions of Frank Taylor Jr.</title><link href="https://pyvideo.org/pycon-au-2019/logging-rethought-2-the-actions-of-frank-taylor-jr.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Markus Holtermann</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/logging-rethought-2-the-actions-of-frank-taylor-jr.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We build services, potentially used by thousands or even millions of people. And despite all the testing we do, some interactions with these services will not work out the way we hope. Wouldn’t it be great to reconstruct what let to a problem and analyze if the problem occurred at other times?&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/logging-rethought-2-the-actions-of-frank-taylor-jr"&gt;https://2019.pycon-au.org/talks/logging-rethought-2-the-actions-of-frank-taylor-jr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 13:30:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Making Acquaintances with Exotic Encodings</title><link href="https://pyvideo.org/pycon-au-2019/making-acquaintances-with-exotic-encodings.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Trapsilo Bumi</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/making-acquaintances-with-exotic-encodings.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Text encoding is a relatively straightforward feature of Python at first glance, but in the wild there are a lot of strange cases we can encounter. Together we will explore some occurences of out-of-ordinary encodings and how to handle them properly in Python.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/making-acquaintances-with-exotic-encodings"&gt;https://2019.pycon-au.org/talks/making-acquaintances-with-exotic-encodings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 11:10:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Post-mortems: Building better software together.</title><link href="https://pyvideo.org/pycon-au-2019/post-mortems-building-better-software-together.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Thomi Richards</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/post-mortems-building-better-software-together.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Improving the reliability of complex software requires more than just reacting to the latest issue. In this talk we’ll learn how you and your team can work together to build a post-mortem process that helps you identify and fix systematic flaws in your environment.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/post-mortems-building-better-software-together"&gt;https://2019.pycon-au.org/talks/post-mortems-building-better-software-together&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 11:50:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Pretty vector graphics - Playing with SVG in Python</title><link href="https://pyvideo.org/pycon-au-2019/pretty-vector-graphics-playing-with-svg-in-python.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Amanda J Hogan</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/pretty-vector-graphics-playing-with-svg-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's make some art! Scalable vector graphics are essentially just big strings of text... and Python is great for manipulating text. Learn how you can get started using text (and a bit of math) to generate art in this fundamentals talk exploring the basics of SVG formatting and manipulation.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/pretty-vector-graphics--playing-with-svg-in-python"&gt;https://2019.pycon-au.org/talks/pretty-vector-graphics--playing-with-svg-in-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 11:50:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Profiling Pathogens with (micro) Python</title><link href="https://pyvideo.org/pycon-au-2019/profiling-pathogens-with-micro-python.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Andrew Leech</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/profiling-pathogens-with-micro-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We're building professional medical diagnostics equipment with micropython. This has come with minimal challenges, many positives and a few surprises!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/profiling-athogens-with-micro-python"&gt;https://2019.pycon-au.org/talks/profiling-athogens-with-micro-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 14:50:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Python Applications in Infrastructure Planning and Civil Engineering</title><link href="https://pyvideo.org/pycon-au-2019/python-applications-in-infrastructure-planning-and-civil-engineering.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Ben Chu</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/python-applications-in-infrastructure-planning-and-civil-engineering.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Engineers tasked with planning new infrastructure constantly face the problem of having to look through too much information. This talk is about how we wanted to be lazy and wrote a bot to do it for us instead.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/python-applications-in-infrastructure-planning-and-civil-engineering"&gt;https://2019.pycon-au.org/talks/python-applications-in-infrastructure-planning-and-civil-engineering&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 13:30:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Saturday Lightning Talks</title><link href="https://pyvideo.org/pycon-au-2019/saturday-lightning-talks.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/saturday-lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are 5 minute talks. You have 5 minutes. 5 shall be the number, and the number shall be 5. 6 is too much.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/saturday-lightning-talks"&gt;https://2019.pycon-au.org/talks/saturday-lightning-talks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 16:40:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Sufficiently Advanced Testing</title><link href="https://pyvideo.org/pycon-au-2019/sufficiently-advanced-testing.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Zac Hatfield-Dodds</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/sufficiently-advanced-testing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing tests is great, and generating randomized tests even better... but we can push the techniques further still! What is a metamorphic relation good for?  How could (should?) you use a SAT solver for tests?  What about symbolic execution, guided fuzzing, delta debugging?  Come and find out!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/sufficiently-advanced-testing"&gt;https://2019.pycon-au.org/talks/sufficiently-advanced-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 13:30:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>The Antipodes</title><link href="https://pyvideo.org/pycon-au-2019/the-antipodes.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Brandon Rhodes</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/the-antipodes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Brandon will be speaking at PyCon AU about the antipodes&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/brandon"&gt;https://2019.pycon-au.org/talks/brandon&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 16:00:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Tracing, Profiling &amp; Debugging in Production (eBPF)</title><link href="https://pyvideo.org/pycon-au-2019/tracing-profiling-debugging-in-production-ebpf.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Trent Lloyd</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/tracing-profiling-debugging-in-production-ebpf.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Trace, Profile &amp;amp; Debug applications in production without restarting or loading a framework.We will look at a number of modern techniques including eBPF and ptrace to attach to running production applications with no preparation and minimal performance impact.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/tracing-profiling-debugging-in-production-ebpf"&gt;https://2019.pycon-au.org/talks/tracing-profiling-debugging-in-production-ebpf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 14:50:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>Tunnel Snakes Rule! Bringing the many worlds of Python together to monitor Melbourne's biggest infra</title><link href="https://pyvideo.org/pycon-au-2019/tunnel-snakes-rule-bringing-the-many-worlds-of-python-together-to-monitor-melbournes-biggest-infra.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Evan Brumley</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/tunnel-snakes-rule-bringing-the-many-worlds-of-python-together-to-monitor-melbournes-biggest-infra.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is being used to provide real-time environmental monitoring on the Melbourne Metro Tunnel project. Come along to see how open source Python tools from the web, IoT, cloud infrastructure and scientific domains are being used together to monitor environmental telemetry on a city-wide scale.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/tunnel-snakes-rule-bringing-the-many-worlds-of-python-together-to-monitor-melbournes-biggest-infrastructure-project"&gt;https://2019.pycon-au.org/talks/tunnel-snakes-rule-bringing-the-many-worlds-of-python-together-to-monitor-melbournes-biggest-infrastructure-project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 11:10:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Using comedy as an excuse to play with python-programmed microcontrollers</title><link href="https://pyvideo.org/pycon-au-2019/using-comedy-as-an-excuse-to-play-with-python-programmed-microcontrollers.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Anthony I. Joseph</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/using-comedy-as-an-excuse-to-play-with-python-programmed-microcontrollers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Early-career comedians often have difficulties adding electronic props to their acts, due to the high cost of materials and fabrication skills required. This talk will recreate several props used in comedic performances, showing the code and components used.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/using-comedy-as-an-excuse-to-play-with-python-programmed-microcontrollers"&gt;https://2019.pycon-au.org/talks/using-comedy-as-an-excuse-to-play-with-python-programmed-microcontrollers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 11:50:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>When software and law are the same thing</title><link href="https://pyvideo.org/pycon-au-2019/when-software-and-law-are-the-same-thing.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Brenda Wallace</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/when-software-and-law-are-the-same-thing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In Aotearoa New Zealand the government ran an experiment to encode law openly as python, publish versioned in git, licenced as open source, and available on a hosted as an API.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/when-software-and-law-are-the-same-thing"&gt;https://2019.pycon-au.org/talks/when-software-and-law-are-the-same-thing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 14:50:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>You might not need gender!</title><link href="https://pyvideo.org/pycon-au-2019/you-might-not-need-gender.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Opal Symes</name></author><id>tag:pyvideo.org,2019-08-03:pycon-au-2019/you-might-not-need-gender.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will dive into the world of gender and the abounding misconceptions. We have a duty to build systems that allow people to truly represent themselves, and to do this requires an understanding of how to properly store and handle that information.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/you-might-not-need-gender"&gt;https://2019.pycon-au.org/talks/you-might-not-need-gender&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 14:10:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>3D Rendering with Python</title><link href="https://pyvideo.org/pycon-au-2019/3d-rendering-with-python.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Andrew Williams</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/3d-rendering-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Create 3D rendered animations in a few lines of Python, for teaching concepts in Physics and Astronomy. Let your students write some simple code to, for example, model the movement of a bouncing ball due to gravity, and with only a couple of lines of extra code, actually render and animate the ball.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/3d-rendering-with-python"&gt;https://2019.pycon-au.org/talks/3d-rendering-with-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 14:50:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Automagically marking Python course work and assessments in seconds!</title><link href="https://pyvideo.org/pycon-au-2019/automagically-marking-python-course-work-and-assessments-in-seconds.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Dave Bracken</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/automagically-marking-python-course-work-and-assessments-in-seconds.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The author's Python course is being delivered by two academic providers in New Zealand and uses CodeRunner for marking all lab work and assessments.  Students receive feedback and marks on the code they write within seconds.  Installing CodeRunner, creating labs and code/live demos will be covered.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/automagically-marking-python-course-work-and-assessments-in-seconds"&gt;https://2019.pycon-au.org/talks/automagically-marking-python-course-work-and-assessments-in-seconds&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 11:10:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Best Practices for Cryptography In Python</title><link href="https://pyvideo.org/pycon-au-2019/best-practices-for-cryptography-in-python.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Paul Kehrer</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/best-practices-for-cryptography-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Part of what makes Python great also brings challenges for cryptographic operations that need rigorous control of memory and CPU instructions. In this talk we'll discuss situations where Python is a poor fit as well as ones where it shines and learn how to work around some of the issues.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/best-practices-for-cryptography-in-python"&gt;https://2019.pycon-au.org/talks/best-practices-for-cryptography-in-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 14:10:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>Building, designing, teaching and training simulation environments for Machine Learning</title><link href="https://pyvideo.org/pycon-au-2019/building-designing-teaching-and-training-simulation-environments-for-machine-learning.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Paris Buttfield-Addison</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/building-designing-teaching-and-training-simulation-environments-for-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Imagine you're building a fancy robot-driven warehouse. Your pick, place, and packing robots need to get around quickly, find the right item and put it to the right place without colliding with each other, shelves, or people. But you don't have any robots yet, and you need to start. Try simulations!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/building-designing-teaching-and-training-simulation-environments-for-machine-learning"&gt;https://2019.pycon-au.org/talks/building-designing-teaching-and-training-simulation-environments-for-machine-learning&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 11:50:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>Concept to Classroom: Creating fun differentiated programming projects</title><link href="https://pyvideo.org/pycon-au-2019/concept-to-classroom-creating-fun-differentiated-programming-projects.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Renee Noble</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/concept-to-classroom-creating-fun-differentiated-programming-projects.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Less is more when it comes to kids coding projects! We'll explore a tried and tested method for creating Minimum Viable Projects, used around Australia to teach kids to code. See how we create fun, challenging, differentiated projects for all abilities with this 5 step process &amp;amp; concept calculator.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/concept-to-classroom-creating-fun-differentiated-programming-projects"&gt;https://2019.pycon-au.org/talks/concept-to-classroom-creating-fun-differentiated-programming-projects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 13:30:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>cuDF: RAPIDS GPU-Accelerated Dataframe Library</title><link href="https://pyvideo.org/pycon-au-2019/cudf-rapids-gpu-accelerated-dataframe-library.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Mark Harris</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/cudf-rapids-gpu-accelerated-dataframe-library.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;RAPIDS open-source software enables end-to-end data science and analytics pipelines to run entirely on GPUs. Key to RAPIDS is cuDF, a pandas-like Python data frame library with a high-performance CUDA C++ implementation. cuDF and RAPIDS enable large speedups for end-to-end data science using GPUs.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/cudf-rapids-gpu-accelerated-dataframe-library"&gt;https://2019.pycon-au.org/talks/cudf-rapids-gpu-accelerated-dataframe-library&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 14:10:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Data Sharing in Modern Australia</title><link href="https://pyvideo.org/pycon-au-2019/data-sharing-in-modern-australia.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Justin Warren</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/data-sharing-in-modern-australia.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Australia is reshaping data privacy and security aggressively on multiple fronts.How can you manage data security and privacy in your projects while the sands shift around you?&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/data-sharing-in-modern-australia"&gt;https://2019.pycon-au.org/talks/data-sharing-in-modern-australia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 11:10:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Education Seminar Student Showcase</title><link href="https://pyvideo.org/pycon-au-2019/education-seminar-student-showcase.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Eliza Lee</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/education-seminar-student-showcase.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Eight short talks from high school students across Australia. They'll be talking about projects they've built with Python using machine learning, robotics, markov models and more!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/education-showcase"&gt;https://2019.pycon-au.org/education-showcase&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 16:00:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Extracting tabular data from PDFs with Camelot &amp; Excalibur</title><link href="https://pyvideo.org/pycon-au-2019/extracting-tabular-data-from-pdfs-with-camelot-excalibur.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Vinayak Mehta</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/extracting-tabular-data-from-pdfs-with-camelot-excalibur.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Extracting tables from PDFs is hard. The Portable Document Format was not designed for tabular data. Sadly, a lot of open data is shared as PDFs and getting tables out for analysis is a pain. Camelot and Excalibur can help you extract tabular data from PDFs very easily!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/extracting-tabular-data-from-pdfs-with-camelot-excalibur"&gt;https://2019.pycon-au.org/talks/extracting-tabular-data-from-pdfs-with-camelot-excalibur&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 10:30:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>Flying by the seat of our pants - our journey of teaching python using drones</title><link href="https://pyvideo.org/pycon-au-2019/flying-by-the-seat-of-our-pants-our-journey-of-teaching-python-using-drones.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Kylie Mathers</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/flying-by-the-seat-of-our-pants-our-journey-of-teaching-python-using-drones.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A few years ago we found ourselves teaching students everything from Python to Arduino.  It was our plan to replace all the other languages with Python as we streamlined our course.   Learn why we introduced drones, what we learned not to do and what we were surprised about.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/flying-by-the-seat-of-our-pants--our-journey-of-teaching-python-using-drones"&gt;https://2019.pycon-au.org/talks/flying-by-the-seat-of-our-pants--our-journey-of-teaching-python-using-drones&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 10:30:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Forecasting Australia's 2019 Election with PyMC3</title><link href="https://pyvideo.org/pycon-au-2019/forecasting-australias-2019-election-with-pymc3.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Martin Burgess</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/forecasting-australias-2019-election-with-pymc3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Can we predict the result of an Australian election before it occurs? How certain of the outcome can we be? My talk will use the 2019 Australian federal election as a case study to provide an entry-level introduction to the benefits of probabilistic forecasting and PyMC3.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/forecasting-australias-2019-election-with-pymc3"&gt;https://2019.pycon-au.org/talks/forecasting-australias-2019-election-with-pymc3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 13:30:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Forklifting Django: Migrating A Complex Django App To Kubernetes</title><link href="https://pyvideo.org/pycon-au-2019/forklifting-django-migrating-a-complex-django-app-to-kubernetes.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Noah Kantrowitz</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/forklifting-django-migrating-a-complex-django-app-to-kubernetes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everyone is talking about Kubernetes, but migrating existing applications is often easier said than done. This talk will cover the tale of migrating our main Django application to Kubernetes, and all the problems and solutions we ran into along the way.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/forklifting-django-migrating-a-complex-django-app-to-kubernetes"&gt;https://2019.pycon-au.org/talks/forklifting-django-migrating-a-complex-django-app-to-kubernetes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 11:50:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>How to get everyone to get on board with software security: practical tips and suggestions.</title><link href="https://pyvideo.org/pycon-au-2019/how-to-get-everyone-to-get-on-board-with-software-security-practical-tips-and-suggestions.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Tennessee Leeuwenburg</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/how-to-get-everyone-to-get-on-board-with-software-security-practical-tips-and-suggestions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Security is hard. Software development is hard. Adding security objectives to development projects can seem overwhelming and is an often-overlooked aspect of cybersecurity. This talk will give you the tools, techniques and knowledge needed to get traction and bring people on board.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/how-to-get-everyone-to-get-on-board-with-software-security-practical-tips-and-suggestions"&gt;https://2019.pycon-au.org/talks/how-to-get-everyone-to-get-on-board-with-software-security-practical-tips-and-suggestions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 16:40:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>How to lose a container in 10 minutes</title><link href="https://pyvideo.org/pycon-au-2019/how-to-lose-a-container-in-10-minutes.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Sarah Young</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/how-to-lose-a-container-in-10-minutes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Moving to the cloud and deploying containers? In this talk I discuss both the mindset shift and tech challenges, with some common mistakes made in real-life deployments with some real life. We'll also be looking at my ongoing research about how easy it is to get a container or k8s cluster pwned.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/how-to-lose-a-container-in-10-minutes"&gt;https://2019.pycon-au.org/talks/how-to-lose-a-container-in-10-minutes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 14:50:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>Just Add Await: Retrofitting Async Into Django</title><link href="https://pyvideo.org/pycon-au-2019/just-add-await-retrofitting-async-into-django.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Andrew Godwin</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/just-add-await-retrofitting-async-into-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing async code from scratch is hard; trying to add it into a large, existing framework is harder. Learn about the problems we face trying to make Django async while maintaining backwards compatibility, as well as the problems maintaining hybrid sync-and-async Python codebases in general.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/just-add-await-retrofitting-async-into-django"&gt;https://2019.pycon-au.org/talks/just-add-await-retrofitting-async-into-django&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 14:10:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Learn to control your brain: Brain Computer Interfacing with Python</title><link href="https://pyvideo.org/pycon-au-2019/learn-to-control-your-brain-brain-computer-interfacing-with-python.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Johan van der Meer</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/learn-to-control-your-brain-brain-computer-interfacing-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Neurofeedback is a brain-computer interface where a person’s own brain waves are audio/visually presented back in real-time after they’ve been recorded and filtered within a few milliseconds. We present methods to allow people to see their own brainwaves with python.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/learn-to-control-your-brain-brain-computer-interfacing-with-python"&gt;https://2019.pycon-au.org/talks/learn-to-control-your-brain-brain-computer-interfacing-with-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 16:40:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Machine Learning and Cyber Security - Detecting malicious URLs in the haystack</title><link href="https://pyvideo.org/pycon-au-2019/machine-learning-and-cyber-security-detecting-malicious-urls-in-the-haystack.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Alistair</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/machine-learning-and-cyber-security-detecting-malicious-urls-in-the-haystack.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Today, security teams are in an increasingly one-sided battle to defend against a myriad of cyber attacks. Web-based attacks are often devastating, with conventional blacklists and reputation-based defence tactics not able to identify previously unseen malicious URLs. Is AI the solution?&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/machine-learning-and-cyber-security--detecting-malicious-urls-in-the-haystack"&gt;https://2019.pycon-au.org/talks/machine-learning-and-cyber-security--detecting-malicious-urls-in-the-haystack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 17:20:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>New Phone, Who Dis?: Human Authentication in the Digital Age</title><link href="https://pyvideo.org/pycon-au-2019/new-phone-who-dis-human-authentication-in-the-digital-age.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Yaakov Smith</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/new-phone-who-dis-human-authentication-in-the-digital-age.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When proving somebody’s identity, it’s usually an important matter and critical to get right. With digital licences springing up around the globe, including here in New South Wales, how can we be sure that the computer is telling the truth? Does digitising the process actually improve it?&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/new-phone-who-dis-human-authentication-in-the-digital-age"&gt;https://2019.pycon-au.org/talks/new-phone-who-dis-human-authentication-in-the-digital-age&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 10:30:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Not a long time ago, in a galaxy not very far away, an astronomer and a computer scientist walk into a bar...</title><link href="https://pyvideo.org/pycon-au-2019/not-a-long-time-ago-in-a-galaxy-not-very-far-away-an-astronomer-and-a-computer-scientist-walk-into-a-bar.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Georgios Bekiaris</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/not-a-long-time-ago-in-a-galaxy-not-very-far-away-an-astronomer-and-a-computer-scientist-walk-into-a-bar.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is one of the most popular programming languages in astronomy. In this talk, I will tell a story about how Python helped me to develop a software tool for galaxy modelling, and tackle the scientific and technical challenges that arise in the Big Data era of astronomy.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/not-a-long-time-ago-in-a-galaxy-not-very-far-away-an-astronomer-and-a-computer-scientist-walk-into-a-bar"&gt;https://2019.pycon-au.org/talks/not-a-long-time-ago-in-a-galaxy-not-very-far-away-an-astronomer-and-a-computer-scientist-walk-into-a-bar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 16:00:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Opening Doors with JSON Web Tokens</title><link href="https://pyvideo.org/pycon-au-2019/opening-doors-with-json-web-tokens.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Ben Dechrai</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/opening-doors-with-json-web-tokens.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As the old saying goes, when one door closes, it can only be reopened when identify yourself with a valid JSON Web Token.This talk introduces JWT, secure authentication, and delegated authority, to demonstrate how to secure IoT devices without exposing them to the internet.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/opening-doors-with-json-web-tokens"&gt;https://2019.pycon-au.org/talks/opening-doors-with-json-web-tokens&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 09:30:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Pony, Cat, and Paw: Getting Started with the Open Source Menagerie</title><link href="https://pyvideo.org/pycon-au-2019/pony-cat-and-paw-getting-started-with-the-open-source-menagerie.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Tobias Kunze</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/pony-cat-and-paw-getting-started-with-the-open-source-menagerie.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The way to your first open source pull request leads through many implicit conventions and tools you're expected to learn. Let's look at what you'll need for your first Django contribution, where to find help, and what challenges you're likely to encounter.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/pony-cat-and-paw-getting-started-with-the-open-source-menagerie"&gt;https://2019.pycon-au.org/talks/pony-cat-and-paw-getting-started-with-the-open-source-menagerie&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 16:00:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Safely eval Python syntax using the AST module</title><link href="https://pyvideo.org/pycon-au-2019/safely-eval-python-syntax-using-the-ast-module.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Tim Savage</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/safely-eval-python-syntax-using-the-ast-module.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Allow your users to supply queries or define rules using Python syntax and safely eval them. Processing an AST into safely executable code.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/safely-eval-python-syntax-using-the-ast-module"&gt;https://2019.pycon-au.org/talks/safely-eval-python-syntax-using-the-ast-module&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 10:30:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Securing your AWS Identity Management pipeline with PyTest</title><link href="https://pyvideo.org/pycon-au-2019/securing-your-aws-identity-management-pipeline-with-pytest.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Sean Johnson</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/securing-your-aws-identity-management-pipeline-with-pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Amazon's Identity and Access Management is a risky needle to thread when it comes to deploying into the cloud, especially when it comes to empowering your developers to make their own changes. In this talk I will be showing how to leverage PyTest to test your policies before they hit production.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/securing-your-aws-identity-management-pipeline-with-pytest"&gt;https://2019.pycon-au.org/talks/securing-your-aws-identity-management-pipeline-with-pytest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 11:50:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Stealing Chrome cookies without a password</title><link href="https://pyvideo.org/pycon-au-2019/stealing-chrome-cookies-without-a-password.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>"Alex"</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/stealing-chrome-cookies-without-a-password.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A new technique to steal someone's Chrome cookies once you've compromised their machine. Cooler because it doesn't need root 😎. This talk is about how the technique was found, how it works, and what you can do with it.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/stealing-chrome-cookies-without-a-password"&gt;https://2019.pycon-au.org/talks/stealing-chrome-cookies-without-a-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 13:30:00 2019 at C3.&lt;/p&gt;
</summary></entry><entry><title>The Unspeakable Horror of Discovering You Didn't Write Tests</title><link href="https://pyvideo.org/pycon-au-2019/the-unspeakable-horror-of-discovering-you-didnt-write-tests.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Melanie Crutchfield</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/the-unspeakable-horror-of-discovering-you-didnt-write-tests.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I didn't write tests. I'm here to help you avoid making the same mistake.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/the-unspeakable-horror-of-discovering-you-didnt-write-tests"&gt;https://2019.pycon-au.org/talks/the-unspeakable-horror-of-discovering-you-didnt-write-tests&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 16:40:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Threat Modeling the Death Star</title><link href="https://pyvideo.org/pycon-au-2019/threat-modeling-the-death-star.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Mario Areias</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/threat-modeling-the-death-star.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Threat modeling is one of the most important security activities. Yet they are usually done by security experts and can be quite dry and boring.This talk will cover a different way to do Threat Models by using Attack Trees. Attack trees are an easy, fun, engaging and inclusive for everyone.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/threat-modeling-the-death-star"&gt;https://2019.pycon-au.org/talks/threat-modeling-the-death-star&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 16:00:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>Understanding GPUs</title><link href="https://pyvideo.org/pycon-au-2019/understanding-gpus.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Varun Nayyar</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/understanding-gpus.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With torch and tensorflow we have begun to rely on GPUs to speed up
computations. Deep Learning or not, GPUs can provide massive computation speed
ups but it's not a panacea as NVIDIA would have you believe. Understanding how
GPUs work can tell us where we should and shouldn't use them.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/understanding-gpus"&gt;https://2019.pycon-au.org/talks/understanding-gpus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 14:50:00 2019 at Cockle Bay&lt;/p&gt;
</summary></entry><entry><title>Using Dash by Plotly for Interactive Visualisation of Crime Data</title><link href="https://pyvideo.org/pycon-au-2019/using-dash-by-plotly-for-interactive-visualisation-of-crime-data.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Leo Broska</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/using-dash-by-plotly-for-interactive-visualisation-of-crime-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dash is a great Python framework for building data visualisation websites. In this talk I discuss the framework basics, explore a sample site and describe its use for an enterprise application to graph crime statistics. I finish with clear pros and cons of the Dash framework from our perspective.&lt;/p&gt;
&lt;p&gt;Slides for the talk AND more resources are at &lt;a class="reference external" href="http://www.halloleo.net/talks/dash_for_crime"&gt;http://www.halloleo.net/talks/dash_for_crime&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/using-dash-by-plotly-for-interactive-visualisation-of-crime-data"&gt;https://2019.pycon-au.org/talks/using-dash-by-plotly-for-interactive-visualisation-of-crime-data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 11:10:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>Using Python, Django, and ruthlessness to protect people from social media harassment.</title><link href="https://pyvideo.org/pycon-au-2019/using-python-django-and-ruthlessness-to-protect-people-from-social-media-harassment.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Tom Eastman</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/using-python-django-and-ruthlessness-to-protect-people-from-social-media-harassment.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I present 'secateur', a tool for Twitter users to protect themselves from some forms of online harassment. I discuss using Python and Django to create tools that integrate with Twitter, use its APIs, and block lots of people (LOTS of people).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/using-python-django-and-ruthlessness-to-protect-people-from-social-media-harassment"&gt;https://2019.pycon-au.org/talks/using-python-django-and-ruthlessness-to-protect-people-from-social-media-harassment&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 17:20:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Using Python, Flask and Docker To Teach Web Pentesting</title><link href="https://pyvideo.org/pycon-au-2019/using-python-flask-and-docker-to-teach-web-pentesting.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Zain Afzal</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/using-python-flask-and-docker-to-teach-web-pentesting.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Having to teach 70 or so students how to break into websites involves building infrastructure to host a lot of websites which are designed to be hacked, poked, prodded and brute forced. Hear us talk about how we were able to keep up thanks to python + friends!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/using-python-flask-and-docker-to-teach-web-pentesting"&gt;https://2019.pycon-au.org/talks/using-python-flask-and-docker-to-teach-web-pentesting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 14:10:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Using Python to make learning Python better</title><link href="https://pyvideo.org/pycon-au-2019/using-python-to-make-learning-python-better.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Ben Taylor</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/using-python-to-make-learning-python-better.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As programmers one of the biggest super-powers we have is to improve the world by making new tools, automating work and making the tedious easy. As educators we know that things like personalised learning, scaffolding, and feedback really help our students. But doing all that can be challenging! We don’t have the tools, and it’s really tedious. Hang on!? Isn’t that our super-power?&lt;/p&gt;
&lt;p&gt;In this talk I’ll explore how we can use our super-powers as programmers (and as educators) to improve our own practice. I’ll talk about how we can help develop deeper understanding in our students, and use tools (that we build) to do it! Programming isn’t just for “app developers” it’s something that everyone can use, so let’s demonstrate that by using it ourselves.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/using-python-to-make-learning-python-better"&gt;https://2019.pycon-au.org/talks/using-python-to-make-learning-python-better&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 09:15:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>WASM matter?</title><link href="https://pyvideo.org/pycon-au-2019/wasm-matter.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Russell Keith-Magee</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/wasm-matter.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the biggest developments in web technology in the last few years is the emergence of WASM - Web Assembly. But what is WASM? Can you use it in your web projects? Should you? And if so... how?&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/wasm-matter"&gt;https://2019.pycon-au.org/talks/wasm-matter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 13:30:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>Web Accessibility In Django</title><link href="https://pyvideo.org/pycon-au-2019/web-accessibility-in-django.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Parth Shandilya</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/web-accessibility-in-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many developers want to build accessible applications,but don't know where to start. This talk will cover common accessibility issues and how to address them. The audience will learn about how disabled users interact with web apps, how to build more accessible sites and W3C accessibility guidelines.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/web-accessibility-in-django"&gt;https://2019.pycon-au.org/talks/web-accessibility-in-django&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 11:10:00 2019 at C3.3&lt;/p&gt;
</summary></entry><entry><title>What makes Micro:bits different?</title><link href="https://pyvideo.org/pycon-au-2019/what-makes-microbits-different.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Jack Reichelt</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/what-makes-microbits-different.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's many different ways to learn to code, and how you start your students' journey changes what challenges they'll face.This talk will highlight some of the differences when using Micro:bits, and how to overcome the challenges.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/what-makes-microbits-different"&gt;https://2019.pycon-au.org/talks/what-makes-microbits-different&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 11:50:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>You don't always need NumPy</title><link href="https://pyvideo.org/pycon-au-2019/you-dont-always-need-numpy.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Sam Hames</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/you-dont-always-need-numpy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The numerical Python ecosystem and communities are mature and powerful, but sometimes we can be too quick to reach for the numerical hammer when simpler options exist. This talk will outline some areas where the numerical stack may not be the best starting point, and survey some alternatives.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/you-dont-always-need-numpy"&gt;https://2019.pycon-au.org/talks/you-dont-always-need-numpy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 09:30:00 2019 at C3.6&lt;/p&gt;
</summary></entry><entry><title>Rust's Recipes for Code and Community</title><link href="https://pyvideo.org/pycon-au-2019/rusts-recipes-for-code-and-community.html" rel="alternate"></link><published>2019-08-02T09:15:00+10:00</published><updated>2019-08-02T09:15:00+10:00</updated><author><name>E. Dunham</name></author><id>tag:pyvideo.org,2019-08-02:pycon-au-2019/rusts-recipes-for-code-and-community.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In some ways, a browser engine seems to have little in common with a web
framework. But both are ambitious software projects, approached by large
groups of diverse people trying and sometimes failing to cooperate,
collaborate, and code together. This talk shares firsthand observations,
collected over 3 years of working within the Rust and Servo teams at Mozilla
as well as volunteering on the Rust Community Team, about what all developers
can learn from Rust's approaches to the universal challenges of code and
community.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/rust-s-recipes-for-code-and-community"&gt;https://2019.pycon-au.org/talks/rust-s-recipes-for-code-and-community&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 09:15:00 2019 at C3.3&lt;/p&gt;
</summary></entry></feed>