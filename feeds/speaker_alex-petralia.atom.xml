<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_alex-petralia.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-05-11T00:00:00+00:00</updated><entry><title>Hard technical skills for modern-day research and business analysts</title><link href="https://pyvideo.org/pycon-ca-2017/hard-technical-skills-for-modern-day-research-and-business-analysts.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Alex Petralia</name></author><id>tag:pyvideo.org,2017-11-19:pycon-ca-2017/hard-technical-skills-for-modern-day-research-and-business-analysts.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With data more prevalent and accessible than ever, quantitative data analysis has become a core competency for the modern business and research analyst. Ironically, “analysis” is only part of the job of a bonafide data analyst: extracting, cleaning, exploring, wrangling, validating and visualizing are now equally as important.&lt;/p&gt;
&lt;p&gt;I come from a traditional analyst background where the primary technical skill required was Microsoft Excel. However I quickly found this limiting: data transformations I performed were not easily replicable; I couldn’t query information housed in databases; nor could I scrape data tables from the web. Either I had to rely on others - typically engineers - to do this for me, or we decided not to do the analysis at all (ie. it wasn’t “feasible”).&lt;/p&gt;
&lt;p&gt;After a long and arduous process, I learned how to do most of these things myself and I’m convinced most analysts would also benefit from embracing the “engineering” mindset. Analysts will always need domain expertise, but they must now increasingly embrace modern software development skills in their day-to-day job. They should be data experts first, and subject matter experts second.&lt;/p&gt;
&lt;p&gt;Thanks to some great open-source libraries, the Python community is burgeoning with data analysts and scientists. In this talk we’ll cover how to take your data from start to finish, including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Extraction&lt;/li&gt;
&lt;li&gt;Storage&lt;/li&gt;
&lt;li&gt;Analysis&lt;/li&gt;
&lt;li&gt;Visualization&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’ll also touch on some less hard skills, such as data skepticism, sanity checking and exploratory data analysis. By the end of this talk, audience members should have a good understanding of the “data pipeline”: all the steps required to get data from its raw, unrefined state to a structured and presentable story.&lt;/p&gt;
</summary></entry><entry><title>Analyzing Data: What pandas and SQL Taught Me About Taking an Average</title><link href="https://pyvideo.org/pycon-us-2018/analyzing-data-what-pandas-and-sql-taught-me-about-taking-an-average.html" rel="alternate"></link><published>2018-05-11T00:00:00+00:00</published><updated>2018-05-11T00:00:00+00:00</updated><author><name>Alex Petralia</name></author><id>tag:pyvideo.org,2018-05-11:pycon-us-2018/analyzing-data-what-pandas-and-sql-taught-me-about-taking-an-average.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;“So tell me,” my manager said, “what is an average?”&lt;/p&gt;
&lt;p&gt;There’s probably nothing worse than that sinking feeling when you finish an analysis, email it to your manager or client to review, and they point out a mistake so basic you can’t even fathom how you missed it.&lt;/p&gt;
&lt;p&gt;This talk is about mine: how to take an average.&lt;/p&gt;
&lt;p&gt;Averages are something we use everywhere - it’s a simple &lt;tt class="docutils literal"&gt;np.mean()&lt;/tt&gt; in pandas or &lt;tt class="docutils literal"&gt;AVG()&lt;/tt&gt; in SQL. But recently I’ve come to appreciate just how easy it is to calculate this statistic incorrectly. We learn once - in middle school no less - how to take an average, and never revisit it. Then, when we are faced with multidimensional datasets (ie. pretty much every dataset out there), we never reconsider whether we should be taking an average the same way.&lt;/p&gt;
&lt;p&gt;In this talk, we follow my arduous and humbling journey of learning how to properly take an average with multidimensional data. We will cover how improperly calculating it can produce grossly incorrect figures, which can slip into publications, research analyses and management reports.&lt;/p&gt;
</summary></entry></feed>