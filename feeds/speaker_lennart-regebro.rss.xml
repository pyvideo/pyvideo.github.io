<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 12 Jul 2019 00:00:00 +0000</lastBuildDate><item><title>Moving big projects to Python 3</title><link>https://pyvideo.org/europython-2019/moving-big-projects-to-python-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Next year Python 2 is no longer maintained. But you have a monster code
base with clever tricks and libraries that don't support Python 2, and
your data may be stored in a format that is hard to move Python 3. And
that's the easy bit.&lt;/p&gt;
&lt;p&gt;This talk focuses on the process of moving, not the code changes.
Because it's the process that is the hard part. How do you get your code
in a state where it's ready to move? How do you get the whole team on
the boat to Python 3?&lt;/p&gt;
&lt;p&gt;All Python 3 talks I have seen, including those I have given, and all
the texts on how to port, including the book I wrote, focus on the code
changes. With increasing backwards compatibility in Python 3 and
forward-compatibility in Python 2, this actually became a lesser problem
for big code bases.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The extra issues of large, old code bases&lt;/li&gt;
&lt;li&gt;Can you stop adding features? (1 min)&lt;/li&gt;
&lt;li&gt;Separate team vs getting everyone on it (2 min)&lt;/li&gt;
&lt;li&gt;Python 2 compatibility: You need it (1 min)&lt;/li&gt;
&lt;li&gt;The steps&lt;/li&gt;
&lt;li&gt;Fix your development process (2 min)&lt;/li&gt;
&lt;li&gt;Replace old libraries, or take over maintenance and port them (2 min)&lt;/li&gt;
&lt;li&gt;Make sure your tests are solid (1 min)&lt;/li&gt;
&lt;li&gt;Run 2to3 but only backwards compatible fixers (2 min)&lt;/li&gt;
&lt;li&gt;Run tests on Python 3 to stop backsliding (4 min)&lt;/li&gt;
&lt;li&gt;Run all tests: Expansive or slow&lt;/li&gt;
&lt;li&gt;Store passed tests&lt;/li&gt;
&lt;li&gt;Detect tests that change&lt;/li&gt;
&lt;li&gt;Turning it off adds a lot of extra work&lt;/li&gt;
&lt;li&gt;Port all your little utilities and tool scripts (1 min)&lt;/li&gt;
&lt;li&gt;Fix fix fix fix (1 min)&lt;/li&gt;
&lt;li&gt;Add tests with Python 2 data, to test migration (2 min)&lt;/li&gt;
&lt;li&gt;You might need migration scripts&lt;/li&gt;
&lt;li&gt;Extra careful staging tests (1 min)&lt;/li&gt;
&lt;li&gt;Production: Try, fail, repeat (1 min)&lt;/li&gt;
&lt;li&gt;Clean the code up (3 min)&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lennart Regebro</dc:creator><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-12:europython-2019/moving-big-projects-to-python-3.html</guid><category>Deployment/Continuous Integration and Delivery</category><category>Management</category><category>Python 3</category><category>Testing</category></item><item><title>Prehistoric Patterns in Python</title><link>https://pyvideo.org/pycon-us-2017/prehistoric-patterns-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why do some code use dictionaries that have None for all values? Is it
true that you shouldn't concatenate strings with +? Will Python optimize
constant calculations?&lt;/p&gt;
&lt;p&gt;This talk will go through some patterns that used to be common in
Python, but which now are regarded as outdated and see if they really
are outdated and why. The results surprised me, maybe they'll surprise
you.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lennart Regebro</dc:creator><pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-19:pycon-us-2017/prehistoric-patterns-in-python.html</guid></item><item><title>An introduction to reporting databases</title><link>https://pyvideo.org/pycon-pl-2016/an-introduction-to-reporting-databases.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk explains what a reporting database is, and why, when and how
you should use it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lennart Regebro</dc:creator><pubDate>Sat, 15 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-15:pycon-pl-2016/an-introduction-to-reporting-databases.html</guid></item><item><title>Your keyboard</title><link>https://pyvideo.org/pycon-pl-2015/your-keyboard.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a programmer, your fingers and the keyboard is the interface between your brain and the computer, and is one of your most important work tools. Yet is it often overlooked, and people tend to just use whatever keyboard that came with the computer. This talk will take an in-depth look at your computer keyboard.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lennart Regebro</dc:creator><pubDate>Fri, 16 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-16:pycon-pl-2015/your-keyboard.html</guid></item><item><title>Who's afraid of the Big Bad 3?</title><link>https://pyvideo.org/pycon-pl-2014/whos-afraid-of-the-big-bad-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tytuł/Topic: Who's afraid of the Big Bad 3?
Prelegent/Speaker: Lennart Regebro&lt;/p&gt;
&lt;p&gt;Python 3 is often described in scary words, with claims like it being another language and that is is tearing the community in two etc. If you believe what some people are saying, it's slow, it's a nightmare, porting is a pain and you are gonna get eaten alive! The truth is much less frightening, and this talk will take a high level perspective of Python 3, and look at my and others experience with supporting it and tell you how you can switch to Python 3.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pl.pycon.org/2014/pl/agenda"&gt;http://pl.pycon.org/2014/pl/agenda&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lennart Regebro</dc:creator><pubDate>Sat, 18 Oct 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-10-18:pycon-pl-2014/whos-afraid-of-the-big-bad-3.html</guid></item><item><title>Prehistoric Python Patterns</title><link>https://pyvideo.org/pycon-pl-2013/prehistoric-python-patterns.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tytuł/Topic: Prehistoric Python Patterns
Prelegent/Speaker: Lennart Regebro&lt;/p&gt;
&lt;p&gt;There are many idioms and patterns that used to be a best practice but isn't anymore, thanks to changes in Python. Despite that they often show up even in new code, and some of these patterns are even explained to be Good Ideas at stackoverflow and similar. This talk will bring out the most common of these patterns so you know what they are, and why you should avoid them.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pl.pycon.org/2013/pl/agenda"&gt;http://pl.pycon.org/2013/pl/agenda&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lennart Regebro</dc:creator><pubDate>Sat, 19 Oct 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-10-19:pycon-pl-2013/prehistoric-python-patterns.html</guid></item><item><title>DjangoCon EU 2013: Lennart Regebro - Prehistorical Python: Patterns past their prime</title><link>https://pyvideo.org/djangocon-europe-2013/djangocon-eu-2013-lennart-regebro-prehistorical-python-patterns-past-their-prime.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Videos from DjangoCon Europe 2013 are kindly provided by Heroku, a cloud application platform -- a new way of building and deploying web apps: &lt;a class="reference external" href="http://heroku.com/"&gt;http://heroku.com/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lennart Regebro</dc:creator><pubDate>Wed, 15 May 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-05-15:djangocon-europe-2013/djangocon-eu-2013-lennart-regebro-prehistorical-python-patterns-past-their-prime.html</guid></item><item><title>PyCon 2009: Plenary: Afternoon Lightning Talks</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--plenary--afternoon-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plenary: Afternoon Lightning Talks&lt;/p&gt;
&lt;p&gt;(00:05) Easy command line parsing with argparse - Steven Bethard&lt;/p&gt;
&lt;p&gt;(04:14) Moments - Charles Brandt&lt;/p&gt;
&lt;p&gt;(11:45) Crowdsourcing lightning -&lt;/p&gt;
&lt;p&gt;(13:40) Python 3.1 changes - Benjamin Peterson&lt;/p&gt;
&lt;p&gt;(19:35) The Poor Man's Continuous Integration - Zain Memon&lt;/p&gt;
&lt;p&gt;(25:55) cluemapper - Nate Aune&lt;/p&gt;
&lt;p&gt;(29:55) ReleaseBot - Brian Warner&lt;/p&gt;
&lt;p&gt;(34:50) worldPloneday - Jordan Baker and Roberto&lt;/p&gt;
&lt;p&gt;(40:15) blist - Daniel Stutzbach&lt;/p&gt;
&lt;p&gt;(45:10) Python Open Source Overview on Launchpad - Gary Poster&lt;/p&gt;
&lt;p&gt;(49:50) Pyjamas - Bernd Dorn&lt;/p&gt;
&lt;p&gt;(53:50) &amp;nbsp;is Evil and IP Addresses in Python - Gregory Smith&lt;/p&gt;
&lt;p&gt;(56:00) ctypes - Jason Coombs&lt;/p&gt;
&lt;p&gt;(61:10) Come to EuroPython - Jonathan Hartley&lt;/p&gt;
&lt;p&gt;(65:45) Zope - Lennart Regebro&lt;/p&gt;
&lt;p&gt;(71:05) Site Checker - Eric Holscher&lt;/p&gt;
&lt;p&gt;(76:20) PSF Community Awards&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steven Bethard</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--plenary--afternoon-lightning-talks.html</guid><category>lightning talks</category><category>argparse</category><category>blist</category><category>cluemapper</category><category>ctypes</category><category>launchpad</category><category>moments</category><category>plone</category><category>pycon</category><category>pycon2009</category><category>pyjamas</category><category>python31</category><category>sitechecker</category><category>testing</category><category>twill</category><category>zope</category></item><item><title>Blame it on Caesar: What you need to know about dates, times and time zones</title><link>https://pyvideo.org/pycon-us-2013/blame-it-on-caesar-what-you-need-to-know-about-d.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Time measurement is a complex area full of tricky problems and
unexpected edge-cases. This fast-paced talk tells you how to avoid the
pitfalls, and warn about the compromises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lennart Regebro</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-03-15:pycon-us-2013/blame-it-on-caesar-what-you-need-to-know-about-d.html</guid><category>talk</category></item></channel></rss>