<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 23 Jul 2014 00:00:00 +0000</lastBuildDate><item><title>Managing the Cloud with a Few Lines of Python</title><link>https://pyvideo.org/europython-2014/managing-the-cloud-with-a-few-lines-of-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;One of the advantages of cloud computing is that resources can be
enabled or disabled dynamically. E. g. is an distributed application
short on compute power one can easily add more. But who wants to do that
by hand? Python is a perfect fit to control the cloud. The talk
introduces the package &lt;a class="reference external" href="https://github.com/boto/boto"&gt;Boto&lt;/a&gt; which
offers an easy API to manage most of the Amazon Web Services (AWS) as
well as a number of command line tools.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the advantages of cloud computing is that resources can be
enabled or disabled dynamically. E. g. is an distributed application
short on compute power one can easily add more. But who wants to do that
by hand? Python is a perfect fit to control the cloud. The talk
introduces the package Boto which offers an easy API to manage most of
the Amazon Web Services (AWS) as well as a number of command line tools.
First some usage examples are shown to introduce the concepts behind
Boto. For that a few virtual instances with different configurations are
launched, and the use of the storage service S3 is briefly introduced.
Based on that a scalable continuous integration system controlled by
Boto is developed to show how easy all the required services can be used
from Python. Most of the examples will be demonstrated during the talk.
They should be easily adoptable for similar use cases or serve as an
starting point for more different ones.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Frank Becker</dc:creator><pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-23:europython-2014/managing-the-cloud-with-a-few-lines-of-python.html</guid></item><item><title>Django, App-gehoben</title><link>https://pyvideo.org/pycon-de-2012/django-app-gehoben.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Das Webframework Django kommt ganz wie Python mit &amp;quot;Batteries included&amp;quot;.
Ähnlich wie sich in Python mit seiner umfangreichen Standardlib viele
Alltagsaufgaben mit wenigen Zeilen Code erledigen lassen, so vereinfacht
Django die Entwicklung von Webanwendungen. Und genau wie es im PyPI
unzählige Packages für so gut wie jede Aufgabe gibt, so umkreist auch
Django eine Fülle von sogenannten Pluggable Apps, also Zusatzmodulen für
fast jeden Anwendungsfall.&lt;/p&gt;
&lt;p&gt;Der Vortrag stellt einige Highlights solcher Django-Packages vor, welche
ohne viel Aufwand gewöhnlichen Djangoanwendungen erweiterte
Funktionalität mitgeben.&lt;/p&gt;
&lt;p&gt;Es werden aus den Bereichen RESTful API, Formulare, Sicherheit,
CSS/SCSS/JS Handling, Softwaretesting, Taskqueue, Ajax, Suche,
Datenbankschemamigration und Authentifizierung jeweils ein populäres
Beispielpackage kurz vorgestellt. Der Fokus liegt bewußt nicht auf
Details. Gezeigt wird grob die Funktionsweise, Installation und ein paar
Erfahrungen aus dem praktischen Einsatz.&lt;/p&gt;
&lt;p&gt;Der geneigte Zuhörer soll angeregt werden ähnliche Django-Packages in
seinen eigenen Projekten zu verwenden. Der Benefit für den Einzelnen
ist, schnell meist gut getestete Funktionalität für das eigene Projekt
einzubauen. Die Gemeinschaft profitiert von gemeinschaftlich
entwickelter Freier Software.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Frank Becker</dc:creator><pubDate>Wed, 31 Oct 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-10-31:pycon-de-2012/django-app-gehoben.html</guid><category>app</category><category>django</category><category>module</category><category>package</category><category>pluggable</category><category>reuseable app</category><category>web</category></item></channel></rss>