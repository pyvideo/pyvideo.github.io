<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 26 Jul 2015 00:00:00 +0000</lastBuildDate><item><title>Low Friction NLP with Gensim</title><link>https://pyvideo.org/pydata-seattle-2015/low-friction-nlp-with-gensim.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gensim is fairly popular NLP library available in Python. In addition to having implementations of several popular algorithms, it has a utilities that make working with the corpus itself easier.&lt;/p&gt;
&lt;p&gt;In this talk I'd like to give an overview of Gensim, and then two examples. One will illustrate an LDA example, then I'll show a somewhat novel use of Word2Vec to understand user preferences.&lt;/p&gt;
&lt;p&gt;Overview:
The overview will follow the general arc of an NLP project.
Reading the corpus, here this is done with gensim's streaming API.
Transformations, often a transformation to BOW is done, and potentially something like TFIDF.
Training the model from the corpus.
Working with the result for analysis or otherwise.
Examples:
This will be a straight forward application: topic discovery on a corpus and then analyzing the resulting topics to look for patterns.
Next I'll cover how to use Gensim's Word2Vec implementation to better understand customer preferences.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="http://blog.trenthauck.com/portfolio/presentation.pdf"&gt;http://blog.trenthauck.com/portfolio/presentation.pdf&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trent Hauck</dc:creator><pubDate>Sun, 26 Jul 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-07-26:pydata-seattle-2015/low-friction-nlp-with-gensim.html</guid></item></channel></rss>