<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 25 May 2018 00:00:00 +0000</lastBuildDate><item><title>An Intro to Docker for Djangonauts</title><link>https://pyvideo.org/djangocon-europe-2018/an-intro-to-docker-for-djangonauts.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you've never used it before, Docker can be a little overwhelming. There is new vocabulary to learn, new commands to memorize, and new files to add to each project. Most resources fall into one of two camps: they teach you the bare bones of Docker but still leave you with too many questions to comfortably try it on your own, or they throw you into the deep end by assuming you're more familiar with Docker than you are.&lt;/p&gt;
&lt;p&gt;In this talk, you will find that middle ground: a talk that doesn't assume you're familiar with Docker and so keeps everything simple, but leaves you with enough information that you can get started as soon as you leave the room. Together, we will step through the parts of a Dockerfile and learn what they do.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lacey Williams Henschel</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/an-intro-to-docker-for-djangonauts.html</guid></item><item><title>An ODe to OAuth</title><link>https://pyvideo.org/djangocon-europe-2018/an-ode-to-oauth.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all know that remembering passwords is hard, so why not leave it to someone else? In this talk, I would like to introduce how we improved our social authentication system in our Django applications at Prezi with the aid of the Python Social Auth package.&lt;/p&gt;
&lt;p&gt;After a long time coming, we at Prezi introduced social authentication using Google mid last year. This seemingly trivial problem soon became a nightmare after we realized that our custom built session management systems completely misalign with the standards of the industry and open source. However, our team did not give up the dream of having a fully scalable and easy-to-maintain component that we can be proud of.&lt;/p&gt;
&lt;p&gt;In this talk, I would like to present you the war story of how we revamped the social authentication systems at Prezi (whilst becoming open source contributors) using the Python Social Auth package, enabling a significant amount of users to access our services on all platforms.&lt;/p&gt;
&lt;p&gt;Akos Hochrein&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Akos Hochrein</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/an-ode-to-oauth.html</guid></item><item><title>Auf Wiedersehen</title><link>https://pyvideo.org/djangocon-europe-2018/auf-wiedersehen.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://media.ccc.de/v/hd-144-auf-wiedersehen"&gt;https://media.ccc.de/v/hd-144-auf-wiedersehen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DjangoCon Europe Crew&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various Speakers</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/auf-wiedersehen.html</guid></item><item><title>Banking with Django - how to not lose your customer's money</title><link>https://pyvideo.org/djangocon-europe-2018/banking-with-django-how-to-not-lose-your-customers-money.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Topic: Banking with Django - how to not lose  your customer's money
Abstract: How Holvi decided to pick Django as part of their core infrastructure. I'll go through both the business reasons for using Django for banking (5-10 minutes), and technical details of how we do reliable distributed software which keeps our and customer's money safe (10-20 minutes).&lt;/p&gt;
&lt;p&gt;Anssi Kääriäinen&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anssi Kääriäinen</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/banking-with-django-how-to-not-lose-your-customers-money.html</guid></item><item><title>Day 2 Guten Morgen</title><link>https://pyvideo.org/djangocon-europe-2018/day-2-guten-morgen.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Raphael Michel Tobias Kunze DjangoCon Europe Crew&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tobias Kunze</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/day-2-guten-morgen.html</guid></item><item><title>Day 3 Guten Morgen</title><link>https://pyvideo.org/djangocon-europe-2018/day-3-guten-morgen.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://media.ccc.de/v/hd-137-guten-morgen"&gt;https://media.ccc.de/v/hd-137-guten-morgen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Raphael Michel Tobias Kunze DjangoCon Europe Crew&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raphael Michel</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/day-3-guten-morgen.html</guid></item><item><title>Day 3 Lightning Talks</title><link>https://pyvideo.org/djangocon-europe-2018/day-3-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon Europe Crew&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lacey Williams Henschel</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/day-3-lightning-talks.html</guid></item><item><title>Don't Look Back in Anger: Wildman Whitehouse and the Great Failure of 1858</title><link>https://pyvideo.org/djangocon-europe-2018/dont-look-back-in-anger-wildman-whitehouse-and-the-great-failure-of-1858.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the 1850s, Edward Orange Wildman Whitehouse was appointed the lead engineer of the first attempt to build a trans-Atlantic telegraph cable. This is a tale of a project gone horribly wrong in the age of magnificent facial hair. Step up to learn the secrets of recovering your project from failure!&lt;/p&gt;
&lt;p&gt;In the 1850s, Edward Orange Wildman Whitehouse was appointed the lead engineer of the first attempt to build a trans-Atlantic telegraph cable. With the entire population of two continents waiting for his go-live, their handlebar moustaches aquiver, he demonstrated in fine form just how spectacularly a big project can be a bigger disaster.&lt;/p&gt;
&lt;p&gt;This is a tale of long-winded rants, spectacular sideburns, and gentlemen scientists behaving badly. It is also a lesson about the importance of honest reflection in technical teamwork. Lilly outlines some of the mistakes made during one of the biggest tech delivery projects in history, and how a constructive view of failure helped to turn it all around. Through the public meltdowns of Wildman Whitehouse you will learn the importance of feedback, how to handle complex tasks gracefully, and the best way to recover from having your pipeline eaten by a whale.&lt;/p&gt;
&lt;p&gt;Lilly Ryan&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lilly Ryan</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/dont-look-back-in-anger-wildman-whitehouse-and-the-great-failure-of-1858.html</guid></item><item><title>GraphQL in Python and Django</title><link>https://pyvideo.org/djangocon-europe-2018/graphql-in-python-and-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I’ll talk about GraphQL, a data query language created by Facebook as an alternative to the widely used REST. I’ll list the key differences between the twos and pros and cons of GraphQL over a “traditional” REST API.&lt;/p&gt;
&lt;p&gt;I’ll tell why GraphQL has been created, what problems does it solve and how to create GraphQL APIs with Python with an additional follow up on how to use it with Django, one of the most popular web framework. If we have enough time I’ll touch on advanced topics like authentication, caching, security and real-time.&lt;/p&gt;
&lt;p&gt;Takeaway: the objective of the talk is to have an introduction on GraphQL, understand why and when to use it and, finally, how to use it Python.&lt;/p&gt;
&lt;p&gt;Audience: the talk is for web developers with some experience building web APIs.&lt;/p&gt;
&lt;p&gt;Patrick Arminio&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Arminio</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/graphql-in-python-and-django.html</guid></item><item><title>Intro to Sprints</title><link>https://pyvideo.org/djangocon-europe-2018/intro-to-sprints.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Intro to Sprints DjangoCon Europe Crew&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniele Procida</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/intro-to-sprints.html</guid></item><item><title>It's about time</title><link>https://pyvideo.org/djangocon-europe-2018/its-about-time.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why is dealing with dates and time so difficult? Well, it's because time has a very sordid history. Join us on a deep dive into that history, and how that history affects the data modelling and APIs we use every day.&lt;/p&gt;
&lt;p&gt;Here's a fun experiment: Mention timezones within earshot of any experienced programmer. Now wait until the profanity stops.&lt;/p&gt;
&lt;p&gt;Handling dates and time is an incredibly common requirement in computer applications. That's hardly surprising - we all use computers to record when we did old things, track how long things take, and to plan when we're going to do things. So why is dealing with time so difficult?&lt;/p&gt;
&lt;p&gt;Well, it's because time has a very sordid history. What we even think of as time has changed. In this talk, you'll travel through time, and see the impact that two thousand years of history have had on our modern life. You'll be shown how all this wibbly-wobbly, timey-wimey history stuff affects the data modelling and APIs we use on a daily basis.&lt;/p&gt;
&lt;p&gt;This is going to take... some time.&lt;/p&gt;
&lt;p&gt;Russell Keith-Magee&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Russell Keith-Magee</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/its-about-time.html</guid></item><item><title>Keynote: The naïve programmer</title><link>https://pyvideo.org/djangocon-europe-2018/keynote-the-naive-programmer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Keynote: The naïve programmer&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniele Procida</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/keynote-the-naive-programmer.html</guid></item><item><title>Out of Sight, Out of Mind: Survival tricks and tools for remote developers</title><link>https://pyvideo.org/djangocon-europe-2018/out-of-sight-out-of-mind-survival-tricks-and-tools-for-remote-developers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What to do and what not to do in order to collaborate remotely on Django projects without losing your mind&lt;/p&gt;
&lt;p&gt;Remote working and “smart working” is very much in fashion these days, but what does it entail for the daily routing of a distributed development team? We will talk about tools, the disputed use of email, Skype, Slack but more specifically about time management, what you can expect from yourself and from other members of the remote team. Is your company “remote-friendly” or rather “remote-first”? When it’s time to spend a few days in physical proximity with your colleagues? We will share some examples out of the experience of a distributed team actively working with Python and Django on a daily basis, and show how you can make it all work, if you work on it.&lt;/p&gt;
&lt;p&gt;Alessio Bragadini&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alessio Bragadini</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/out-of-sight-out-of-mind-survival-tricks-and-tools-for-remote-developers.html</guid></item><item><title>Physical Health offering</title><link>https://pyvideo.org/djangocon-europe-2018/physical-health-offering.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Physical Health offering djangocon crew&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various Speakers</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/physical-health-offering.html</guid></item><item><title>Want More Women in Tech? Start with Django Girls</title><link>https://pyvideo.org/djangocon-europe-2018/want-more-women-in-tech-start-with-django-girls.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If your hometown can benefit from a free, friendly environment where women can learn to program, it’s time to bring Django Girls to your city. You’ll learn what it takes to run a successful event while hearing tales from the trenches from a seasoned Django Girls organizer.&lt;/p&gt;
&lt;p&gt;Ever heard of Django Girls and thought, “Gee, if only that would come to my city, I’d love to be involved!” Django Girls is a fantastic, free weekend-long workshop that teaches women how to code through a comprehensive, Django-based tutorial. Encouraging more women to strive for programming careers benefits the tech community at large, and spearheading a Django Girls event in your city is a positive, actionable way for you to personally become involved.&lt;/p&gt;
&lt;p&gt;##But I’m a Developer - Not an Event Planner!
So you’re sold that Django Girls is a great idea, but maybe you’re not confident you can execute on it. You don’t need a degree in event planning to plan a great event - developers specialize in problem solving, and running a workshop involves just that. All it takes is a little passion. And sponsors. And a great venue with impeccable WiFi. And a team full of mentors, volunteers and organizers dedicated willing to follow you into the battlefield… Okay, okay. It’s a lot of hard work, but it’s incredibly rewarding to yourself and your community, and I’m ready to share my years of wisdom to help your event run smoothly.&lt;/p&gt;
&lt;p&gt;##Learn From My Mistakes
From avoiding volunteer burnout to preventing mutiny from your attendees because the caterer was a flop, I’ll share my insights on what’s worked and what hasn’t over the past three years - and how I intend to improve upon the past two years to make my next event my best yet. I’ll cover logistics, and how to make the event memorable and enjoyable for everyone involved, including recruiting attendees, mentors, sponsors, and other organizers; how to find a great location; what small details are illogically important; and how to communicate effectively within your role as you transform from developer into a community leader.&lt;/p&gt;
&lt;p&gt;Sara Heins&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sara Heins</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/want-more-women-in-tech-start-with-django-girls.html</guid></item><item><title>23 Years Without A Proper Job</title><link>https://pyvideo.org/djangocon-europe-2018/23-years-without-a-proper-job.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever wondered about being your own boss? Then this talk is for you. Good experience, bad experience: I’ve had some of both as a startup founder and freelancer in the 23 years after I left my last salaried job. Let me share them with you.&lt;/p&gt;
&lt;p&gt;Whether you love your job or hate it, at some time you’ve probably wondered what it would be like to work for your self.&lt;/p&gt;
&lt;p&gt;Maybe you’re working on a sideproject and wonder how you could make some money from it? Or maybe you have the idea for the next Facebook or Uber?&lt;/p&gt;
&lt;p&gt;To be a coder in today’s world of work is to have amazing opportunities to design the business life you want. You can work remotely; you can write books, or teach, or consult, with anyone anywhere.&lt;/p&gt;
&lt;p&gt;You can have a crazy idea on Friday and have it running by Monday. Design your architecture to use cloud computing, so your tiny team can scale up your huge ideas.&lt;/p&gt;
&lt;p&gt;Or keep it small, and just earn some extra money with a Wordpress plugin, or a training course.&lt;/p&gt;
&lt;p&gt;It has been 23 years since I last had a ‘real job’ and a regular income.&lt;/p&gt;
&lt;p&gt;I survived creating and running a company through the madness of the dotcom years. I made money from sideprojects, that I had started just for fun and for learning. I have freelanced without needing to use an agency to find the work.&lt;/p&gt;
&lt;p&gt;Listen to my stories and learn from my mistakes and successes.&lt;/p&gt;
&lt;p&gt;Rachel Willmer&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rachel Willmer</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:djangocon-europe-2018/23-years-without-a-proper-job.html</guid></item><item><title>Automated spell-checking in Django projects</title><link>https://pyvideo.org/djangocon-europe-2018/automated-spell-checking-in-django-projects.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I'm aiming to show how avoid spelling errors by showing ways to implement automated spell-checking.&lt;/p&gt;
&lt;p&gt;Nearly all Django applications have two main textual bodies that users come in touch with: First, any text in the application and its translation, second the documentation. Since both are usually written by humans, they will contain spelling errors.
This is considered harmful and can from time to time hinder the user trying to understand what to do.
Therefore, an automated spell-checking tool should be a part of any CI-cyle.&lt;/p&gt;
&lt;p&gt;For spell-checking documentation, I will give a short demonstration on how to use the &amp;quot;sphinxcontrib-spelling&amp;quot;-tool written by Doug Hellmann, the problems we had and how we overcame them.
For spell-checking text in the application and its translations that are usually found in .po-files, I have implemented a small tool called &amp;quot;potypo&amp;quot; (name and development in progress).
I will present this tool and show challenges and problems on the way to implementing automated spell checking for .po-files.&lt;/p&gt;
&lt;p&gt;Jakob Schnell&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jakob Schnell</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:djangocon-europe-2018/automated-spell-checking-in-django-projects.html</guid></item><item><title>Day 2 Lightning Talks</title><link>https://pyvideo.org/djangocon-europe-2018/day-2-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon Europe Crew&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Körner</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:djangocon-europe-2018/day-2-lightning-talks.html</guid></item><item><title>Growing old gracefully: on being a career programmer.</title><link>https://pyvideo.org/djangocon-europe-2018/growing-old-gracefully-on-being-a-career-programmer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Software development is often seen as a young person's game. But what if, as you get older, you want to keep at the keyboard? Thoughts from a (now) veteran developer on building your career in software development for the long-haul.&lt;/p&gt;
&lt;p&gt;This is a community talk. My favourite topics from DjangoConEU 2017 were the non-technical talks. The most interesting (on-topic) conversations I had were about the non-programming aspects of working in software. I wanted to give a talk on that line.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Prima facie&lt;/em&gt; I'm not the best place person to talk about diversity (white, male, etc), but, having been freelance since 2006, with four young children, and now slightly greying hair, I am in a position to talk about how to build a career in software development for the long-haul. Hiring in tech is massively ageist. I want to discuss strategies to handle that.&lt;/p&gt;
&lt;p&gt;My target audience is individual programmers (whether freelance or employed) as well as software managers, looking to build &lt;strong&gt;and retain&lt;/strong&gt; a team. (The message for managers is simply that they need to facilitate their employees' careers. This seems obvious but it &lt;strong&gt;is&lt;/strong&gt; worth bringing out.)&lt;/p&gt;
&lt;p&gt;The core point of my talk is around the idea that a career is very much a marathon rather than a sprint, and that it needs to be approached in that spirit. (Again, this may seem obvious but it &lt;strong&gt;is&lt;/strong&gt; worth bringing out.)&lt;/p&gt;
&lt;p&gt;There are two aspects of this. The one is &lt;strong&gt;pace&lt;/strong&gt;. That to work on software day-in, day-out for 10, 20, 30, 40 years (or more) we need to pace ourselves, to manage our reserves, and to have fun.&lt;/p&gt;
&lt;p&gt;The other is that there is noting to be scared of. That expertise which now may seem intimidating is, yes, available to us too. That with 5, 10, 15 years of continued effort we too (yes, us) can be as experienced as whomever, in the speciality we choose.&lt;/p&gt;
&lt;p&gt;I bring this out with three points. That we need to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Be disciplined&lt;/strong&gt;: The key point is to keep going. We each need to find patterns that work for us and develop them into habits that we build into a routine. The great thing is it doesn't have to be 100 hour weeks. As long as we keep doing it, whatever we do builds up over time. Despite the impression to the contrary, time is on our side. Which leads to...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Be prolific&lt;/strong&gt;: Do lots, and put it out there. This one seems scary. &amp;quot;I'll never do as much as ...&amp;quot; —&amp;nbsp;but it's an illusion. Do one thing. Put that out there. Do something else. Repeat. Again, the work builds up over time, and (seemingly) all of a sudden, you're in a position of being the expert. Finally...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Be social&lt;/strong&gt;: And I don't necessarily mean Facebook (unless Facebook is your thing). In whatever environment or medium suits you get out there meet people. (Stretch your comfort zones a bit here.) Share what you've done. Relish in what others have done. Be part of the community. Help build the community.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All three of these are essential. As you get older — all the more as you get older — they allow you to build a sustainable career writing software.&lt;/p&gt;
&lt;p&gt;This tale is brought out with stories on finding work, and on choosing clients, and employers, financial planning and job security, on family and free-time, and on the importance self-care. It's part inspiration, part battle-plan.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carlton Gibson</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:djangocon-europe-2018/growing-old-gracefully-on-being-a-career-programmer.html</guid></item><item><title>On The Look-Out For Your Data</title><link>https://pyvideo.org/djangocon-europe-2018/on-the-look-out-for-your-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you have data in the database of your Django project? Do you want to find that the needle in the haystack of your data? There are plenty options how you can achieve that. With various levels of complexity, confidence, and reliability. I'll give an insight into what the most common are nowadays.&lt;/p&gt;
&lt;p&gt;You're tasked with building a search for the project you're working on. But where do you start? What search implementation are you going to use? There's a sheer unlimited set of ways to implement &amp;quot;I'm looking for X in Y&amp;quot; out there. Elasticsearch, LIKE and ILIKE queries, MySQL's Fulltext Search, PostgreSQL's Fulltext Search, Solr, Whoosh, Xapian, to only name a few. I'll be looking at the most common ones and will be showing some basic implementation techniques.&lt;/p&gt;
&lt;p&gt;You should be familiar with Django in so much as that I'm not talking about how to create or update an object in a database. You should also have an idea of what database transactions are. The talk will feature some code snippets that I will provide in full, afterward.&lt;/p&gt;
&lt;p&gt;Markus Holtermann&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:djangocon-europe-2018/on-the-look-out-for-your-data.html</guid></item><item><title>Organizing Conferences For Learners: How we did it in Namibia</title><link>https://pyvideo.org/djangocon-europe-2018/organizing-conferences-for-learners-how-we-did-it-in-namibia.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk you will hear about the importance of organizing conferences for school learners, how you can go about organizing one, what you need to do and what you need to avoid as you prepare the conference, how to engage with school teachers as a software developer, what the results of such conferences could bring out in our children and many more.&lt;/p&gt;
&lt;p&gt;The poor quality of the software developers in our community is increasing. On top of other factors, most of our learners are introduced or exposed to computing only in university. This has caused the quality of our software developers to drop. We wanted to change that by introducing programming clubs in high schools and then we decided that why not run a conference for them. That's how this idea came up.&lt;/p&gt;
&lt;p&gt;Jessica Upani&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica Upani</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:djangocon-europe-2018/organizing-conferences-for-learners-how-we-did-it-in-namibia.html</guid></item><item><title>ORM: The Sequel</title><link>https://pyvideo.org/djangocon-europe-2018/orm-the-sequel.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This summer... a story of learning. She came from a different world, and must understand her new surrounds. Follow her on a journey of self discovery as she learns about... the Django ORM, via SQL.&lt;/p&gt;
&lt;p&gt;Django tutorials often use the perspective of a complete newcomer to Python and web development, and while they provide a good practical on-ramp for brand new developers, they are often not quite right for developers from other backgrounds.&lt;/p&gt;
&lt;p&gt;The common backbone of MVC development, no matter the base language, is the database and the language specifically for it's manipulation: Structured Query Language (SQL). But Django hides this behind it's amazing drawcard, the Object Relational Model (ORM).&lt;/p&gt;
&lt;p&gt;But how can a developer already familiar with SQL get a handle on the ORM?&lt;/p&gt;
&lt;p&gt;This talk endeavours to introduce the ORM using shared SQL and relational database concepts, showcasing the features the ORM uses to make database querying and manipulation a joy, rather than a burden, to the polyglot developer.&lt;/p&gt;
&lt;p&gt;Katie McLaughlin&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie McLaughlin</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:djangocon-europe-2018/orm-the-sequel.html</guid></item><item><title>Protecting Personal Data with Django (because it's the law)</title><link>https://pyvideo.org/djangocon-europe-2018/protecting-personal-data-with-django-because-its-the-law.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A new EU regulation comes into effect in the middle of this conference. Here is an overview of what is required and how you can use Django to comply.&lt;/p&gt;
&lt;p&gt;From 25 May 2018, anyone collecting personal data on European Union residents will have to follow a number of new rules, some of which are pretty far-reaching. The new rules are however simple enough to understand, and as professionals, getting on top of things like this is what we're being paid for.&lt;/p&gt;
&lt;p&gt;The regulation is called &amp;quot;Regulation (EU) 2016/679&amp;quot; and is commonly known as the &amp;quot;General Data Protection Regulation&amp;quot; or &amp;quot;GDPR&amp;quot;. It has been around for a couple of years and comes into effect now. The previous regime (95/46/EC) was only an EU Directive, so the exact rules were implemented in the native laws of each EU Member State. The new regulation applies everywhere automatically, so it is a single set of rules for all of Europe, which is a good thing. Not everyone will be responsible for managing compliance, but I think every professional software developer should get to know this regulation.&lt;/p&gt;
&lt;p&gt;In the first half, I'll provide an overview of the parts of the regulation that are relevant for developers. In the second half, I'll look at the ways of complying using Django: what Django already does for you, how to make Django do more, and also (quickly) what sort of data protecting batteries might be useful Django to include going forward.&lt;/p&gt;
&lt;p&gt;I'll be around for the sprints if anyone is interested in working on this at a framework level.&lt;/p&gt;
&lt;p&gt;Will Hardy&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Will Hardy</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:djangocon-europe-2018/protecting-personal-data-with-django-because-its-the-law.html</guid></item><item><title>Slow Food Digests Better - or how to maintain a 8.5 year old Python project without</title><link>https://pyvideo.org/djangocon-europe-2018/slow-food-digests-better-or-how-to-maintain-a-85-year-old-python-project-without.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;AMO - &lt;a class="reference external" href="https://addons.mozilla.org/"&gt;https://addons.mozilla.org/&lt;/a&gt; was originally written as a PHP web application, ported to Python / Django 1.1 in 2010, more or less maintained over time and only recently got much more traction because of Firefox Quantum and Mozilla's move to WebExtensions.&lt;/p&gt;
&lt;p&gt;The talk will show our approach to maintaining very old code, handling refactoring, adding new features as well as feature/code removal while slowly upgrading our way to a Python 3 and Django 2.0 ecosystem and why we chose that approach over a rewrite.&lt;/p&gt;
&lt;p&gt;Christopher Grebs&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Grebs</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:djangocon-europe-2018/slow-food-digests-better-or-how-to-maintain-a-85-year-old-python-project-without.html</guid></item><item><title>Strategies to Edit Production Data</title><link>https://pyvideo.org/djangocon-europe-2018/strategies-to-edit-production-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Editing data in a production database is sometimes necessary. However, mistakes in running these queries can be disastrous. In this talk, you will learn strategies for making edits to a production database with examples from a Python stack that increase safety and auditability.&lt;/p&gt;
&lt;p&gt;At some point, we all find ourselves at a SQL prompt making edits to the production database. We know it’s a bad practice and we always intend to put in place safer infrastructure before we need to do it again — what does a better system actually look like?&lt;/p&gt;
&lt;p&gt;This talk progresses through 5 strategies for teams using a Python stack to do SQL writes against a database, to achieve increasing safety and auditability:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Develop a process for raw SQL edits (2) Run scripts locally (3) Run scripts on an existing server (4) Use a task runner (5) Build a Script Runner service&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We’ll talk about the pros and cons of each strategy and help you determine which one is right for your specific needs.&lt;/p&gt;
&lt;p&gt;By the end of this talk you’ll be ready to start upgrading your infrastructure for making changes to your production database safely!&lt;/p&gt;
&lt;p&gt;Julie Qiu&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julie Qiu</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:djangocon-europe-2018/strategies-to-edit-production-data.html</guid></item><item><title>Taking Channels Async</title><link>https://pyvideo.org/djangocon-europe-2018/taking-channels-async.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We take a look at Channels 2.0 and the changes it brings by going fully async, examining not only why the change makes things better, but also how we've managed to bridge between Django's synchronous world and the async world, and what the future might hold for Django and Channels.&lt;/p&gt;
&lt;p&gt;The Channels project has taken a major turn with version 2.0, embracing Python's async functionality and building applications around an async event loop rather than worker processes. But why the big change? And what does it mean for Django?&lt;/p&gt;
&lt;p&gt;We'll look at the progress Channels is making in turning more of the request/response cycle into native async code - how far can we get down the stack before making APIs async becomes hard? Can we make it as far as the ORM? How do we bridge between Django's synchronous world and the async world when we do reach that boundary?&lt;/p&gt;
&lt;p&gt;We also take a look at how it's changed both Channels consumers, opening up the possibility of mixing async calls in with your synchronous code, and how it's changed what the ASGI spec looks like and what that might mean for adoption.&lt;/p&gt;
&lt;p&gt;And, finally, we'll look what's next for Django and Channels, and maybe how it will affect the Python web world as a whole.&lt;/p&gt;
&lt;p&gt;Andrew Godwin&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Godwin</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:djangocon-europe-2018/taking-channels-async.html</guid></item><item><title>A different Form of navigation</title><link>https://pyvideo.org/djangocon-europe-2018/a-different-form-of-navigation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web tooling for data analysis requires, at its heart, a way to select the data a user want's to analyze. This talk shows how you can use forms to pass data among pages, retain the selected form elements through the request/response cycle and build web interfaces that utilize forms while looking like simple link elements. I will also show how I use my [django-modelqueryform](&lt;a class="reference external" href="https://django-modelqueryform.readthedocs.io/en/latest/"&gt;https://django-modelqueryform.readthedocs.io/en/latest/&lt;/a&gt;) package to facilitate an advanced user-centric data filtering interface.&lt;/p&gt;
&lt;p&gt;Data analysis and visualization tools are different than many applications we build with django. They are not simple CRUD apps, and different users often want to use vastly different data subsets for their analysis.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The talk will start with a quick demo of such an application to give context.&lt;/li&gt;
&lt;li&gt;Overview of the functionality provided by [django-modelqueryform](&lt;a class="reference external" href="https://django-modelqueryform.readthedocs.io/en/latest/"&gt;https://django-modelqueryform.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Building widgets that encapsulate an instance of the form&lt;/li&gt;
&lt;li&gt;Coding required to maintain the form context through the request/response cycle so that the data selection is maintained through navigation to different analysis types&lt;/li&gt;
&lt;li&gt;Questions/Comments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chaim Kirby&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chaim Kirby</dc:creator><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-23:djangocon-europe-2018/a-different-form-of-navigation.html</guid></item><item><title>Accessibility Matters: Creating a Better Web</title><link>https://pyvideo.org/djangocon-europe-2018/accessibility-matters-creating-a-better-web.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Accessibility is an afterthought to many, but to those with issues navigating the web it's very important. We will go over examples of accessibility on the web, short and long term solutions, and talk about why accessibility matters to a variety of users. The audience should leave with the ability to spot some accessibility issues and the knowledge of how to fix them.&lt;/p&gt;
&lt;p&gt;Accessibility is a huge topic that is often acknowledged as important...by the people who already care about it. This talk is meant to help the entire audience start thinking about accessibility and realize how easy it is to at least put some accessibility into a site (or avoid adding blatantly inaccessible content).&lt;/p&gt;
&lt;p&gt;Ten to fifteen percent of the EU has a disability, according to the EU Labour Force Survey, which is a large potential audience for any site. There are various laws that factor into the amount of web accessibility a country must have, and the consequences a business can face because of that. Accessible web development also tends to lead to better UX and a happier user base. And, another plus: It will save devs time and frustration when they’re working with the code, since good HTML is enforced.&lt;/p&gt;
&lt;p&gt;This talk will start with a broad introduction to accessibility, how to break different concerns down into categories for consideration, and touch on some laws around web accessibility. The second part will go through examples of good and bad accessibility and what to look out for, as well as ways to improve accessibility (including &amp;quot;easy wins&amp;quot; that they could implement quickly to drastically improve their sites). The final section will include resources for finding accessibility standards and also browser extensions and the like for people to check on their own.&lt;/p&gt;
&lt;p&gt;The audience will be expected to have working knowledge of the internet, webpages, and using webpages.&lt;/p&gt;
&lt;p&gt;Lindsey Dragun&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lindsey Dragun</dc:creator><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-23:djangocon-europe-2018/accessibility-matters-creating-a-better-web.html</guid></item><item><title>Building real time applications with Django</title><link>https://pyvideo.org/djangocon-europe-2018/building-real-time-applications-with-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since the introduction of Channels, real time web has become much easier to work with in Django: discover how you can easily create yours with Django!&lt;/p&gt;
&lt;p&gt;Since the introduction of Channels, real time web has become much easier to work with in Django. It’s now possible to build real time applications with much less effort in managing the idiosyncrasies of the async programming and a lot of batteries are included. Starting with a brief introduction to Channels (targeting version 2.0), we will see how to build a real time application, both on the Django and the frontend side and how easy it’s to start experimenting with it. The talk has a very hands-on approach, to allow the attendees to experiment with the proposed solution and approach, and starting immediately building their own real time applications with Django.&lt;/p&gt;
&lt;p&gt;Iacopo Spalletti&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Iacopo Spalletti</dc:creator><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-23:djangocon-europe-2018/building-real-time-applications-with-django.html</guid></item><item><title>Can packaging improve Django deployments?</title><link>https://pyvideo.org/djangocon-europe-2018/can-packaging-improve-django-deployments.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How can packaging Django projects make deployments easier, faster and more reliable?&lt;/p&gt;
&lt;p&gt;Deployments of Django projects can be a challenging task. Beside the Python source code itself you usually have to handle a lot of other stuff:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Installing Python dependencies&lt;/li&gt;
&lt;li&gt;Shipping JavaScript code and installing it's dependencies&lt;/li&gt;
&lt;li&gt;Compiling SCSS to CSS&lt;/li&gt;
&lt;li&gt;Collecting static files&lt;/li&gt;
&lt;li&gt;Building documentation&lt;/li&gt;
&lt;li&gt;Compiling translations&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And of course you want a deployment approach that is independent of a specific hosting solution.&lt;/p&gt;
&lt;p&gt;Also you have to think about the scalability of your deployment when the number of servers you operate increases.&lt;/p&gt;
&lt;p&gt;This usually means that &lt;cite&gt;git pull&lt;/cite&gt; is not the best way to deal with these tasks.&lt;/p&gt;
&lt;p&gt;So I will discuss different ways to package your Django project like&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Wheels&lt;/li&gt;
&lt;li&gt;JavaScript packages&lt;/li&gt;
&lt;li&gt;Operating system packages&lt;/li&gt;
&lt;li&gt;Containers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of these concepts will hopefully help you to make your deployment process easier, faster and more reliable.&lt;/p&gt;
&lt;p&gt;Markus Zapke-Gründemann&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Zapke-Gründemann</dc:creator><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-23:djangocon-europe-2018/can-packaging-improve-django-deployments.html</guid></item><item><title>Creating Solid APIs</title><link>https://pyvideo.org/djangocon-europe-2018/creating-solid-apis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Increasingly, our apps are used not by humans but by other apps - via their APIs. Thus it is increasingly important that your APIs are well-designed and easy to consume for other developers.
I will share tips and good practices on authentication, versioning, documentation, response structure, and why it all matters.&lt;/p&gt;
&lt;p&gt;Adding a few API endpoints to your application for internal consumption is easy. Creating APIs that other developers will love to use is a much harder problem.
You'll need to think about solving variety of topics such as versioning, authentication, response structure, documentation and more. There are existing good practices for each of them, but often developers who haven't done a lot of API work aren't familiar with them.&lt;/p&gt;
&lt;p&gt;My talk will show how to build on top of Django and DRF and find reasonable solutions for those problems.
I will talk about JSON API, OAuth2, and other technologies and show how they fit into the puzzle.
Benefits of standardized response structure, as well as auto-generated documentation will also be discussed.&lt;/p&gt;
&lt;p&gt;I'll introduce OAuth2, discussing when it is a good choice and when not, as well as some trickier parts of it.
Next we'll look at why a standardized response structure such as JSON API makes lives of 3rd-party developers easier. We'll then move on to versioning and how you can change your API without breaking all existing apps. And the talk wouldn't be complete without looking at documenting your APIs and why the docs should be auto-generated.&lt;/p&gt;
&lt;p&gt;Rivo Laks&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rivo Laks</dc:creator><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-23:djangocon-europe-2018/creating-solid-apis.html</guid></item><item><title>Day 1 Guten Morgen</title><link>https://pyvideo.org/djangocon-europe-2018/day-1-guten-morgen.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Welcome to DjangoCon Europe 2018!&lt;/p&gt;
&lt;p&gt;Raphael Michel Tobias Kunze DjangoCon Europe Crew&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raphael Michel</dc:creator><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-23:djangocon-europe-2018/day-1-guten-morgen.html</guid></item><item><title>Day 1 Lightning Talks</title><link>https://pyvideo.org/djangocon-europe-2018/day-1-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon Europe Crew&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Justin Mayer</dc:creator><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-23:djangocon-europe-2018/day-1-lightning-talks.html</guid></item><item><title>It's not a bug, it's a bias</title><link>https://pyvideo.org/djangocon-europe-2018/its-not-a-bug-its-a-bias.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Product makers have a biased view of the world, and this translates to biased algorithms.
How can we take this into account, and create a fairer world though fairer algorithms?&lt;/p&gt;
&lt;p&gt;Even though Apple's Siri came out with a built-in response to where to hide a body, it was incapable of pointing a user to an abortion clinic.
How did an Artificial Assistant get iffy about abortion?
And how can I stop my own biases from seeping into the products and services I create?&lt;/p&gt;
&lt;p&gt;In this talk, I explore our preconceptions about the nature of algorithms, and how users and makers influence them to model the world according to their perspective.
I conclude the talk by proposing a change of mindset for product designers, to be more aware of our capacity to let our biases infuse our services, and to put in place tools to create more inclusive experiences for our clients.&lt;/p&gt;
&lt;p&gt;Anna-Livia Gomart&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anna-Livia Gomart</dc:creator><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-23:djangocon-europe-2018/its-not-a-bug-its-a-bias.html</guid></item><item><title>Keynote: Writing Code? Pfft... Evolve it Instead!</title><link>https://pyvideo.org/djangocon-europe-2018/keynote-writing-code-pfft-evolve-it-instead.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We’re heading into a future of delivery drones, driverless cars and 3D-printed “hoverboards” …&lt;/p&gt;
&lt;p&gt;With machines now able to perform many tasks better than humans, some people are going to be out of a job.&lt;/p&gt;
&lt;p&gt;But not software developers, right?! Could a computer generate the code you currently write for a living?&lt;/p&gt;
&lt;p&gt;In this talk, we’ll take a look at how technology is changing the work that people do, and think about the implications of that for our society. We'll then take a look at one of the many biologically inspired approaches to AI - Genetic Algorithms, and how they can be used to generate code given a description of the function that that code should perform, rather than having a software developer write it.&lt;/p&gt;
&lt;p&gt;Spoiler - you’re probably not out of a job, yet…&lt;/p&gt;
&lt;p&gt;Emma Gordon&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Emma Gordon</dc:creator><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-23:djangocon-europe-2018/keynote-writing-code-pfft-evolve-it-instead.html</guid></item><item><title>Making smarter queries with advanced ORM resources</title><link>https://pyvideo.org/djangocon-europe-2018/making-smarter-queries-with-advanced-orm-resources.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django ORM has lots of resources for making complex database queries and the documentation brings good examples on how to apply each one of them, but understanding how to orchestrate all of those resources on real-life projects may not be so simple. My goal with this talk is to show through examples how to combine some of the QuerySet Methods, Query Expressions and other optimization techniques to make the most of DB resources when processing information inside the code is not an option.&lt;/p&gt;
&lt;p&gt;When we start modelling an application, we don’t always know how it’s models will evolve and it may be even more difficult to foresee their behaviour when big amounts of data are stored in their respective tables. With tables getting bigger through the project’s life apparently harmless operations may become impossible to make. Thankfully, databases are already prepared for dealing with large amounts of data and resource consuming operations and Django’s ORM provides solutions for most of them.&lt;/p&gt;
&lt;p&gt;For this talk I’m going to build an example Django project, populate it’s tables with big enough datasets and formulate complex questions to demand the most on the ORM’s possibilities. For each question I’m writing at least one solution using the resources described in the QueryExpressions section of Django’s Docs to then analyse the SQL generated by it and the pros and cons between operational costs and code complexity.&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;The following topics will be covered:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Using F() expressions for filtering, ordering and annotate operations&lt;/li&gt;
&lt;li&gt;Using Max, Min, Avg with annotations&lt;/li&gt;
&lt;li&gt;Compare Subquery expressions to queryset equivalents&lt;/li&gt;
&lt;li&gt;Present the new Window functions for partitioned operations&lt;/li&gt;
&lt;li&gt;Using Union queries&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Mariana Bedran Lesche&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariana Bedran Lesche</dc:creator><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-23:djangocon-europe-2018/making-smarter-queries-with-advanced-orm-resources.html</guid></item><item><title>Representing Hierarchies in Relational Databases</title><link>https://pyvideo.org/djangocon-europe-2018/representing-hierarchies-in-relational-databases.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I’ll explain the fundamental problem representing deep hierarchies in relational databases. To address this problem, we can use a database design pattern, named Materialized Path Trees.&lt;/p&gt;
&lt;p&gt;Many data structures require a representation, where one parent node can have any arbitrary number of children. Inside relational databases, this typically is represented by a foreign key onto its own table. In Django’s ORM, we use &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;models.ForeignKey('self',&lt;/span&gt; &lt;span class="pre"&gt;...)&lt;/span&gt;&lt;/tt&gt;, to create this kind of recursive relationship.
The major problem with this kind of representation is, that it doesn’t scale for deep trees. Whenever we have to traverse the tree from a given starting node, our code has to perform one database query per hierarchy level.
To circumvent this, some database vendors implemented SQL dialects, to fetch a whole subtree with one query. Long time ago, Oracle for instance implemented 'CONNECT BY', which is proprietary and not part of the SQL standard. Nowadays, newer releases of most major database vendors implemented the 'WITH RECURSIVE' clause, which has been added to the SQL-99 standard. This allows us to build recursive queries.&lt;/p&gt;
&lt;p&gt;Fortunately there is a clever recipe to represent hierarchies in relational databases using standard SQL techniques, but without the mentioned scaling problem: Materialized Path Trees, discovered by Vadim Tropashko. Django’s ecosystem offers two libraries, which implement this design pattern: &lt;strong&gt;django-mptt&lt;/strong&gt; and &lt;strong&gt;django-treebeard&lt;/strong&gt;. I also would like to mention &lt;strong&gt;django-tree&lt;/strong&gt;, which only works on Postgres, using their SQL extension mentioned before.
In this talk I’ll explain the design patterns for Materialized Path Trees. Furthermore I’ll show the pros and cons of both libraries.&lt;/p&gt;
&lt;p&gt;Jacob Rief&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Rief</dc:creator><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-23:djangocon-europe-2018/representing-hierarchies-in-relational-databases.html</guid></item></channel></rss>