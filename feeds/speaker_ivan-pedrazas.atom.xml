<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ivan-pedrazas.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-10-08T00:00:00+00:00</updated><entry><title>Scaling Django - Running Django in Kubernetes</title><link href="https://pyvideo.org/pycon-es-2016/scaling-django-running-django-in-kubernetes.html" rel="alternate"></link><published>2016-10-08T00:00:00+00:00</published><updated>2016-10-08T00:00:00+00:00</updated><author><name>Iván Pedrazas</name></author><id>tag:pyvideo.org,2016-10-08:pycon-es-2016/scaling-django-running-django-in-kubernetes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Running Django in a single machine is easy. Running Django in a few machines becomes a bit more difficult, so, you look at containers but running Django in Docker can be a bit frustrating. During this talk we will see how to define, build and run a distributed Django application using docker and kubernetes.&lt;/p&gt;
&lt;p&gt;Presentación disponible en &lt;a class="reference external" href="https://docs.google.com/presentation/d/1_t0XGu6_4ZKsrLVIk6geQwaXGkWaBcLESdahPC2KWuo/edit?usp=sharing"&gt;https://docs.google.com/presentation/d/1_t0XGu6_4ZKsrLVIk6geQwaXGkWaBcLESdahPC2KWuo/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://2016.es.pycon.org/"&gt;http://2016.es.pycon.org/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Fifty shades of docker</title><link href="https://pyvideo.org/pycon-es-2014/fifty-shades-of-docker.html" rel="alternate"></link><published>2015-04-06T00:00:00+00:00</published><updated>2015-04-06T00:00:00+00:00</updated><author><name>Ivan Pedrazas</name></author><id>tag:pyvideo.org,2015-04-06:pycon-es-2014/fifty-shades-of-docker.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El workshop intentara explicar como montar una application hecha en Flask que usa un cluster de Cassandra (o mongo o redis... la base de datos da un poco igual) como backend y tiene servicios anyadidos como podria ser un buscador (ES)&lt;/p&gt;
</summary><category term="workshop"></category><category term="flask"></category><category term="cassandra"></category></entry></feed>