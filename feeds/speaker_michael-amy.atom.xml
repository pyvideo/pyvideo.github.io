<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_michael-amy.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-08-26T00:00:00+00:00</updated><entry><title>Introduction to deep learning for machine vision tasks using Keras</title><link href="https://pyvideo.org/pycon-apac-2016/introduction-to-deep-learning-for-machine-vision-tasks-using-keras.html" rel="alternate"></link><published>2016-08-26T00:00:00+00:00</published><updated>2016-08-26T00:00:00+00:00</updated><author><name>Michael Amy</name></author><id>tag:pyvideo.org,2016-08-26:pycon-apac-2016/introduction-to-deep-learning-for-machine-vision-tasks-using-keras.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker : Michael Amy / cocoade
Slide : &lt;a class="reference external" href="https://github.com/pythonkr/pyconapac-2016-files/raw/master/20160813-105-25-MichaelAmy.pdf"&gt;https://github.com/pythonkr/pyconapac-2016-files/raw/master/20160813-105-25-MichaelAmy.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Description :
&amp;quot;Neural networks&amp;quot; is the name of a machine learning technique that takes inspiration from biological brain cells.&lt;/p&gt;
&lt;p&gt;&amp;quot;Deep learning&amp;quot; is a term used to describe various 'deep' (many layered) networks that are capable of more sophisticated processing than the classic three-layer perceptrons.&lt;/p&gt;
&lt;p&gt;Recent advances in deep learning, especially the use of convolutional networks and the use of GPUs to process them instead of CPUs, have led to breakthroughs in performance on machine vision, natural language processing, and other tasks.&lt;/p&gt;
&lt;p&gt;Various frameworks have been introduced that facilitate easy experimentation with deep learning networks, amongst others, there are examples such as: Caffe, Theano, and recently Google's Tensorflow.&lt;/p&gt;
&lt;p&gt;Keras is a Python framework that uses Theano or Tensorflow as a backend.  It makes the building and testing of such networks much easier, as this session will demonstrate.&lt;/p&gt;
&lt;p&gt;This session will explain the concepts involved and go through some examples that will enable an intermediate-level python programmer to develop, train and validate their own deep learning networks to perform visual recognition tasks using deep convolutional networks.&lt;/p&gt;
&lt;p&gt;It will describe how to plan the basic network topology and will also highlight some common pitfalls and steps that can be taken to avoid them.&lt;/p&gt;
&lt;p&gt;Note: It will not explain how to set up a machine for these tasks, which is a job in itself. Nor will it explain detailed aspects of neural networks such as specifics of activation functions, optimizers or back propagation. There is just not enough time in the session. I will try to provide some useful links instead.&lt;/p&gt;
</summary><category term="deep learning"></category></entry></feed>