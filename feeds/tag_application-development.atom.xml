<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_application-development.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-04-21T00:00:00+00:00</updated><entry><title>Developing multi-platform apps with Python in 2013</title><link href="https://pyvideo.org/europython-2013/developing-multi-platform-apps-with-python-in-2013.html" rel="alternate"></link><published>2013-07-05T00:00:00+00:00</published><updated>2013-07-05T00:00:00+00:00</updated><author><name>Guillaume Aubert</name></author><id>tag:pyvideo.org,2013-07-05:europython-2013/developing-multi-platform-apps-with-python-in-2013.html</id><summary type="html"></summary><category term="gui"></category><category term="application-development"></category><category term="deployment"></category></entry><entry><title>Testing, then once you got there?</title><link href="https://pyvideo.org/pycon-italia-2018/testing-then-once-you-got-there.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/testing-then-once-you-got-there.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I benefici di una testsuite completa e coerente sono un dato di fatto,
ma una volta completata la nostra test suite è lì che cominciano i veri
problemi ed è lì che diventa meno chiaro come muoversi.&lt;/p&gt;
&lt;p&gt;Che rapporto tenere tra le tipologie di test? Le Unit Test sono
efficienti per identificare problemi e garantire comportamenti
consistenti sul lungo termine, ma sono come verificare che le gambe
camminano e le braccia fanno le flessioni senza verificare che un uomo
intero riesca a camminare e fare le flessioni. I test e2e invece sono
efficacissimi nel garantire il comportamento del sistema nel suo
insieme, ma possono rapidamente diventare lenti ed insostenibili.&lt;/p&gt;
&lt;p&gt;Sappiamo bene che ci sono i mock e fake objects, ma quando veramente mi
conviene usare uno, l’altro o l’implementazione reale? Un test che
riceve dei MagicMock e ritorna un MagicMock quanto è affidabile
realmente?&lt;/p&gt;
&lt;p&gt;Se ho decine di sviluppatori quanto serve testare i feature branches
isolatamente dagli altri feature branches?&lt;/p&gt;
&lt;p&gt;Questo talk cerca di evidenziare le problematiche che si devono
affrontare quando si parla di testing di un progetto di grande
complessità, che integra decine di servizi e cerca di fornire alcune
best practices pur conscio che non c’è mai una sola risposta.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 12:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="best-practices"></category><category term="testing"></category><category term="software-engineering"></category><category term="coverage"></category><category term="application-development"></category></entry></feed>