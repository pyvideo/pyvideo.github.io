<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_floto.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-06-01T00:00:00+00:00</updated><entry><title>Zero-Administration Data Pipelines using AWS Simple Workflow</title><link href="https://pyvideo.org/pydata-berlin-2016/zero-administration-data-pipelines-using-aws-simple-workflow.html" rel="alternate"></link><published>2016-06-01T00:00:00+00:00</published><updated>2016-06-01T00:00:00+00:00</updated><author><name>Anne Matthies</name></author><id>tag:pyvideo.org,2016-06-01:pydata-berlin-2016/zero-administration-data-pipelines-using-aws-simple-workflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Berlin 2016&lt;/p&gt;
&lt;p&gt;Floto is an open source tool to programmatically author, schedule and run scalable data pipelines using AWS Simple Workflow - without the need to maintain a master server or queue or the state of workers.&lt;/p&gt;
&lt;p&gt;There are quite a few great tools for building effective and robust distributed data processing pipelines, especially Luigi from Spotify and Airflow from AirBnB.&lt;/p&gt;
&lt;p&gt;For scaling out, they all require a queue or master server, though. And those need maintenance.&lt;/p&gt;
&lt;p&gt;We wrote floto (&lt;a class="reference external" href="https://github.com/babbel/floto"&gt;https://github.com/babbel/floto&lt;/a&gt;), an open source tool to programmatically author, schedule and run scalable data pipelines on AWS - without the maintenance overhead.&lt;/p&gt;
&lt;p&gt;It uses AWS Simple Workflow, but I'll talk most about some general topics regarding data workflow orchestration:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;separation of concerns&lt;/li&gt;
&lt;li&gt;managing complexity through dependency reduction&lt;/li&gt;
&lt;li&gt;idempotent (or re-runnable) jobs&lt;/li&gt;
&lt;li&gt;transactional jobs (either completely fail, or completely succeed)&lt;/li&gt;
&lt;li&gt;failures and reruns&lt;/li&gt;
&lt;li&gt;evolving changes&lt;/li&gt;
&lt;li&gt;organizational scaling&lt;/li&gt;
&lt;li&gt;heterogenous systems&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Floto"></category></entry></feed>