<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 21 Jul 2011 00:00:00 +0000</lastBuildDate><item><title>Playing tasks with Django-Celery</title><link>https://pyvideo.org/europython-2011/playing-tasks-with-django-celery.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Mauro Rocco - 22 June 2011 in &amp;quot;Track Tagliatelle &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Celery is an open source task queueing system based on distributed
message passing.&lt;/p&gt;
&lt;p&gt;I will talk about the tools that Celery offers for task distribution and
how to monitor and manage the system using a Django web interface. This
talk will also focus on how we use Celery at Jamendo and our real
solutions to some common issues you may encounter when developing a
back-office based on Celery.&lt;/p&gt;
&lt;p&gt;The talk will cover the following topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A brief overview of Celery and the AMPQ protocol AMPQ protocol
overview, Celery introduction: Celery, RabbitMQ code examples&lt;/li&gt;
&lt;li&gt;The impact of Celery on the Jamendo work-flow; examples with real
tasks. Here I will talk about the Jamendo back-office infrastructure
and some of our common tasks. I will discuss the improvements made by
introducing a new back-office system based on Celery. I will show
some code snippets and go over some real scenarios.&lt;/li&gt;
&lt;li&gt;Overview of the Django Celery admin interface and some Jamendo
extensions. Let's talk about the Django-Celery interface that allows
one to monitor or schedule tasks directly from the Django admin. I
will explain which common additional features are necessary and how
to add them.&lt;/li&gt;
&lt;li&gt;Common &amp;quot;gotchas&amp;quot; we encountered while working with Celery and how we
solved them.&lt;/li&gt;
&lt;li&gt;Global task locks&lt;/li&gt;
&lt;li&gt;Centralized logging: be able to read all the logs of all celery
workers on different servers and filter them for real-time debugging&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mauro Rocco</dc:creator><pubDate>Thu, 21 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-21:europython-2011/playing-tasks-with-django-celery.html</guid><category>celery</category><category>distributed</category><category>django</category><category>infrastructure</category><category>queueing</category><category>rabbitmq</category><category>real-time</category><category>web</category></item><item><title>Distributed Tasks with Celery</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--distributed-tasks-with-celery.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Distributed Tasks with Celery&lt;/p&gt;
&lt;p&gt;Presented by Ryan Petrello&lt;/p&gt;
&lt;p&gt;Celery is an open source task queueing system based on distributed
message passing, especially using the AMQP protocol. This talk will
focus on the need for task distribution, the tools celery provides to
meet those needs, and an in-depth discussion of how we've used celery at
ShootQ to improve the efficiency and reliability of our background
processes.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The talk (including time for questions) will last approximately 30
minutes and will focus on the following topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The need for distributed tasks in real world systems, especially in a
web application environment. This portion of the talk will describe
examples where the traditional request-response model of the web can
be improved with background processing.&lt;/li&gt;
&lt;li&gt;A brief overview of traditional distributed message passing models
and the AMPQ protocol.&lt;/li&gt;
&lt;li&gt;An overview of Celery and the variety of tools it provides for task
distribution, scheduling, and execution. This portion of the talk
will also review production-oriented components of Celery, such as
monitoring, error detection/reporting, and error recovery.&lt;/li&gt;
&lt;li&gt;Real world discussion of several problems we solved at ShootQ using
Celery including before-and-after looks at our implementations.&lt;/li&gt;
&lt;li&gt;Common pitfalls and gotchas we encountered while working with Celery.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan Petrello</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--distributed-tasks-with-celery.html</guid><category>amqp</category><category>celery</category><category>pycon</category><category>pycon2011</category><category>queueing</category></item></channel></rss>