<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-de-2013.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-10-17T00:00:00+00:00</updated><entry><title>batou - multi(component|host|environment|.*) deployment</title><link href="https://pyvideo.org/pycon-de-2013/batou-multicomponenthostenvironment-depl.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Christian Theune</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/batou-multicomponenthostenvironment-depl.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;batou ist ein Werkzeug um das Deployment für server-basierte Anwendungen
zu automatisieren.&lt;/p&gt;
&lt;p&gt;Es basiert auf vielen Ideen von Puppet, Fabric und anderen Werkzeugen,
bietet aber einen spezifische Modellierungsansatz, der das Konzept von
&amp;quot;Konvergenz&amp;quot; einfach umsetzbar macht.&lt;/p&gt;
&lt;p&gt;In dem Vortrag möchte ich erläutern warum Deployments zu automatisieren
schwierig ist, was &amp;quot;Konvergenz&amp;quot; dazu beitragen kann um es einfach zu
machen, und wie das in Batou ganz praktisch aussieht.&lt;/p&gt;
</summary><category term="administration"></category><category term="deployment"></category><category term="konvergenz"></category></entry><entry><title>boost.python - die Nabelschnur zu Python</title><link href="https://pyvideo.org/pycon-de-2013/boostpython-die-nabelschnur-zu-python.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Reinhard Wobst</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/boostpython-die-nabelschnur-zu-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Mit boost.python kann man Klassen und Klasseninstanzen an einen
eingebetteten Python-Interpreter weiterreichen und die Instanzen dort
verändern; ebenso lassen sich Python-Objekte bequem in C++ verarbeiten.
Gegenüber der Python-C-API entfällt das fehlerträchtige
Referenz-Handling, und der Stil ist näher an Python. Eigentlich ist
diese Bibliothek die erste Wahl für diese Situation, doch leider ist die
Dokumentation völlig unzureichend. Hilfe gibt es im Netz, doch
unstrukturiert und nicht immer optimal. Der Vortrag geht auf
Missverständnisse und typische Fehler ein, die bei der Nutzung
wenigstens anfangs auftreten, zeigt die (noch vorhandenen) Grenzen auf
und bietet einige &amp;quot;Kochrezepte&amp;quot;. Außerdem zeigt er, wozu das alles in
der Praxis gut sein kann.&lt;/p&gt;
</summary><category term="boost.python"></category><category term="embedded python"></category><category term="python-c-api"></category></entry><entry><title>Continuous building with Pybuilder</title><link href="https://pyvideo.org/pycon-de-2013/continuous-building-with-pybuilder.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>YADT Project</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/continuous-building-with-pybuilder.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Pybuilder ist ein erweiterbares und benutzerfreundliches &lt;em&gt;continuous
Build Tool&lt;/em&gt; für Python, welches die Arbeit mit fremden (und eigenen)
Python-Projekten angenehmer macht. Damit lassen sich diverse Buildtools
wie coverage, unittest, pip oder auch setuptools zentral
instrumentieren. Und das Beste zum Schluß : 100% open source!&lt;/p&gt;
</summary><category term="automation"></category><category term="build"></category><category term="buildtool"></category><category term="lifecycle"></category><category term="maven"></category><category term="pybuilder"></category><category term="python"></category></entry><entry><title>Continuum Data Analytics Stack</title><link href="https://pyvideo.org/pycon-de-2013/continuum-data-analytics-stack.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/continuum-data-analytics-stack.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Continuum Analytics bietet mit Anaconda Accelerate eine kommerzielle,
skalierbare und unternehmenstaugliche Python-Distribution. Diese basiert
auf der beliebten Open Source Distribution Anaconda.&lt;/p&gt;
&lt;p&gt;Gegenüber der freien Distribution verfügt Accelerate über Bibliotheken
wie NumbaPro oder IOPro, die eine nachhaltige Beschleunigung von
typischen Data Analytics Aufgaben mit Python erlauben.&lt;/p&gt;
&lt;p&gt;Bokeh, eine Open Source Bibliothek, etabliert einen neuen Standard für
die interaktive, Web-basierte Visualisierung von großen Datenmengen.&lt;/p&gt;
&lt;p&gt;Der Talk illustriert die Leistungsfähigkeit des &amp;quot;Continuum Data
Analytics Stack&amp;quot; an Hand einer Reihe von praxisnahen Beispielen, z.B.
aus dem Finanzumfeld, und gewährt auch einen Einblick in aktuelle sowie
geplante Entwicklungen und Erweiterungen.&lt;/p&gt;
</summary><category term="data analytics"></category><category term="financial analytics"></category><category term="python"></category><category term="visualization"></category></entry><entry><title>Die Dinge im Internet der Dinge mit Python verbinden...</title><link href="https://pyvideo.org/pycon-de-2013/die-dinge-im-internet-der-dinge-mit-python-verbin.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Andreas Schreiber</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/die-dinge-im-internet-der-dinge-mit-python-verbin.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Das Internet der Dinge besteht aus kleinen, manchmal intelligenten,
Geräten und Sensoren, die über das Internet verbunden sind. Typische
Sensoren sind Wettermessgeräte oder medizinische Geräte. Das Internet
der Dinge wird nun bald real da sein, was durch günstige kleine
Einplatinencomputer wie Raspberry Pi oder Arduino mit beeinflusst wird.
Allerdings haben diese Geräte nicht viel Rechenleistung. Außerdem sind
sie in machen Umgebungen auch nur mit eingeschränkter Netzwerkbandbreite
angebunden. Um nun (viele) solche Geräte zu verbinden und Daten
austauschen zu lassen sind sehr leichtgewichtige Protokolle und
Implementierungen notwendig.&lt;/p&gt;
&lt;p&gt;Der Vortrag ist über das Protokoll &lt;a class="reference external" href="http://mqtt.org/"&gt;Message Queuing Telemetry
Transport&lt;/a&gt; (MQTT), ein sehr geeignetes Protokoll
zum Verbinden kleiner Geräte und Sensoren. MQTT basiert auf einer
Publish/Subscribe-Architektur. Es eignet sich gut zum Schicken von Daten
von Sensoren zu anderen Geräten. Zum Beispiel lassen sich
Temperaturmesswerte von einem Temperaturfühler ohne viel Overhead zu
einem Server schicken oder zu einem Smartphone als Push-Nachricht
übermitteln. Ein andere Anwendung von MQTT sind Chat-Systeme, z.B. ist
das &lt;a class="reference external" href="https://www.facebook.com/messages/"&gt;Facebook-Messaging&lt;/a&gt; auf
Basis von MQTT implementiert.&lt;/p&gt;
&lt;p&gt;In dem Vortrag geht es vor allem um Open-Source-Implementierungen von
MQTT. Speziell wird der freie MQTT-Broker
&lt;a class="reference external" href="http://mosquitto.org/"&gt;Mosquitto&lt;/a&gt; und dessen
Python-Client-Bibliothek vorgestellt. Mosquitto ist eine
leichtgewichtige Implementierung die effizient auf günstigen
Einplatinenrechnern oder Smartphones läuft. An ein paar Bespielen in
Python wird im Vortrag verdeutlicht wie leicht sich Anwendungen auf
Basis von MQTT realisieren lassen: Die Übertragung von
Temperaturmesswerten per Raspberry Pi zu einem Server, das Senden von
Push-Nachrichten zu Android-Smartphones und das Senden von Smartphones
aus einer Kivy-App heraus.&lt;/p&gt;
</summary><category term="internet of things"></category><category term="mqtt"></category><category term="quantified self"></category><category term="raspberry pi"></category><category term="temperaturmessung"></category></entry><entry><title>FritzConnection</title><link href="https://pyvideo.org/pycon-de-2013/fritzconnection.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Klaus Bremer</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/fritzconnection.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Die AVM Fritzbox ist ein weit verbreiteter Router für den
Internet-Zugang und bietet darüber hinaus auch Funktionen einer
Telefonanlage.&lt;/p&gt;
&lt;p&gt;FritzConnection ist eine Sammlung von Modulen, die eine Python-API zur
FritzBox implementieren.&lt;/p&gt;
&lt;p&gt;Der Vortrag gibt einen Überblick über das Funktionsprinzip, den Stand
der Entwicklung sowie Beispiele für den Einsatz.&lt;/p&gt;
&lt;p&gt;Der Sourcecode ist verfügbar auf Bitbucket:
&lt;a class="reference external" href="https://bitbucket.org/kbr/fritzconnection"&gt;https://bitbucket.org/kbr/fritzconnection&lt;/a&gt;&lt;/p&gt;
</summary><category term="fritzbox"></category><category term="python-api"></category></entry><entry><title>Gehirnwellen für Hacker</title><link href="https://pyvideo.org/pycon-de-2013/gehirnwellen-fur-hacker.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Andreas Klostermann</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/gehirnwellen-fur-hacker.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Dieser Vortrag beschreibt das Neurosky Mindwave Headset, wie man es mit
Python von einem Linuxsystem aus ansteuert.&lt;/p&gt;
&lt;p&gt;Minimale biophysikalische Grundlagen zu Gehirnströmen werden erklärt um
ein Gefühl für Fähigkeiten und Grenzen dieses Systems zu vermitteln.&lt;/p&gt;
&lt;p&gt;Es werden Anwendungen im Neurofeedback vorgestellt, wie sie zum Beispiel
gegen das Aufmerksamkeitsdefizit-/Hyperaktivitätsstörungssyndrom (ADHS)
als unterstützende Maßnahme eingesetzt werden könnten.&lt;/p&gt;
&lt;p&gt;Zum Thema Brain Computer Interfaces stelle ich vor was mit diesem
Headset funktioniert und was nicht.&lt;/p&gt;
</summary><category term="biology"></category><category term="brain computer interfaces"></category><category term="eeg"></category><category term="medicine"></category><category term="neurofeedback"></category><category term="raspberry pi"></category></entry><entry><title>Handling Big Data with Python</title><link href="https://pyvideo.org/pycon-de-2013/handling-big-data-with-python.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Florian Wilhelm</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/handling-big-data-with-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The talk gives a small introduction of how Blue Yonder applies machine
learning and Predictive Analytics in various fields as well as the
challenges of Big Data. Using the example of Blue Yonder's machine
learning software NeuroBayes, we show the made efforts and hit dead ends
in order to provide a flexible and yet easy to use interface for
NeuroBayes to Data Scientists. Since NeuroBayes is written in FORTRAN
for performance reasons different interface approaches were tried which
lead us eventually to a Python interface. In the talk we elaborate on
the up- and downsides of the different approaches and the various
reasons why Python won the race with an emphasize on the benefits of the
Python ecosystem itself. Also, we discuss performance as well as
scalability issues with Python and how we address them. In detail, we
show the application of Cython to speed up calculations in the Python
interface layer as well as distributed computing in a private cloud
called Stratosphere. Scalability and efficiency is of utmost importance
when data processing is time critical. Our overall goal is to give the
audience an overview how Python fits in the software ecosystem of a
company handling Big Data.&lt;/p&gt;
</summary></entry><entry><title>High-Level Programmierung in der Raumfahrt</title><link href="https://pyvideo.org/pycon-de-2013/high-level-programmierung-in-der-raumfahrt.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Felix Huber</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/high-level-programmierung-in-der-raumfahrt.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Field Programmable Gate Arrays (FPGA) werden normalerweise auf
Registerebene programmiert mit Hardwarebeschreibungssprachen wie Verilog
oder VHDL. Dies ist vergleichbar mit Assemblerprogrammierung eines
Mikroprozessors. Die Sprache Handel-C (sic!) hat sich zum Ziel gemacht,
Hardwarebeschreibung mit C-Syntax zu ermöglichen, unabhängig von der zu
Grunde liegenden Hardware. Dazu muß das Problem die Synchronizität durch
die inhärente Parallelität einer Hardwarefunktion gelöst werden. Mit
Handel-C ist es nun möglich, einen Algorithmus in C zu schreiben, auf
einem Rechner zu simulieren und anschließend aus dem identischen
Quellcode eine Hardwareimplementierung zu synthetisieren. Dabei gehen
die Vorteile einer Hochsprache nicht verloren, im Gegenteil: durch den
global optimierenden Compiler werden weniger Ressourcen auf dem FPGA
benötigt. Zusammen mit Bibliotheken für Fest- und Fließkommaarithmetik,
Graphikausgabe und Tastatur bedient sich ein FPGA dann wie ein embedded
Prozessor mit einem Geschwindigkeitszuwachs von Faktor 100.&lt;/p&gt;
</summary></entry><entry><title>Kivy und Arduino - Robotersteuerung mit dem Smartphone</title><link href="https://pyvideo.org/pycon-de-2013/kivy-und-arduino-robotersteuerung-mit-dem-smart.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Andreas Bresser</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/kivy-und-arduino-robotersteuerung-mit-dem-smart.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In diesem Vortrag wird gezeigt, wie man ein Robotik-Board (Arduino) über
Bluetooth durch ein Smartphone steuern kann. Hierbei kommt Kivy als
Framework für die Grafische Oberfläche zum Einsatz.&lt;/p&gt;
</summary><category term="arduino"></category><category term="bluetooth"></category><category term="kivy"></category><category term="mobile"></category><category term="robot"></category><category term="smartphone"></category></entry><entry><title>Lupa - LuaJIT in Python</title><link href="https://pyvideo.org/pycon-de-2013/lupa-luajit-in-python.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Stefan Behnel</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/lupa-luajit-in-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Der Python-Interpreter hat den Ruf, eine ausgereifte und grandios
einfach zu verwendende dynamische Sprache und Laufzeitumgebung zu
bieten, die für jede noch so &lt;a class="reference external" href="https://xkcd.com/413/"&gt;exotische
Anforderung&lt;/a&gt; eine Lösung bereit hält.&lt;/p&gt;
&lt;p&gt;Ein oft genanntes Manko ist jedoch die begrenzte Performance des
Interpreters für stark algorithmisch geprägte, kritische Teile von
Anwendungen. Insbesondere hochdynamischer und generierter Code kommt
hier schnell an seine Grenzen.&lt;/p&gt;
&lt;p&gt;Auf der anderen Seite existiert mit LuaJIT2 eine sehr schnelle
JIT-kompilierte Laufzeitumgebung der dynamischen Programmiersprache Lua,
die bereits so manche Performance-Rekorde gebrochen hat und sich durch
ihre geringe Größe leicht in andere Programme einbinden lässt. Das große
Manko von Lua ist jedoch das Fehlen von Standard-Bibliotheken, die
extrem begrenzten Sprach-Features und der daraus resultierende hohe
Aufwand bei der Entwicklung größerer Anwendungen.&lt;/p&gt;
&lt;p&gt;Mit &lt;a class="reference external" href="https://github.com/scoder/lupa"&gt;Lupa&lt;/a&gt; steht eine Verbindung der
beiden Programmiersprachen bereit, die es ermöglicht, aus Python heraus
Lua-Code auszuführen und direkt mit diesem zu kommunizieren und Daten
auszutauschen. So kann der größte Teil einer Anwendung in Python
implementiert werden, und einzelne Aufgaben können von der schnellen
LuaJIT-Umgebung übernommen werden.&lt;/p&gt;
&lt;p&gt;Dieser Vortrag stellt das Projekt vor und gibt Einblicke in die
Integration der beiden Programmiersprachen.&lt;/p&gt;
</summary><category term="lua"></category><category term="luajit"></category><category term="lupa"></category></entry><entry><title>MapReduce mit Disco</title><link href="https://pyvideo.org/pycon-de-2013/mapreduce-mit-disco.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Dr. Jan Morlock</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/mapreduce-mit-disco.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Mit dem MapReduce-Verfahren können massive Datenmengen auf einem
Rechencluster verarbeitet werden. Namensgeber und wichtige Bestandteile
sind eine Map- und eine Reduce-Phase. Diese werden jeweils
parallelisiert ausgeführt und ermöglichen somit eine optimale Auslastung
der vorhandenen Ressourcen. Im Vergleich zu einer entsprechenden
sequentiellen Implementierung können dadurch große Zeiteinsparungen
erreicht werden.&lt;/p&gt;
&lt;p&gt;Mit dem freien Disco-Framework können MapReduce-Aufgaben leicht in
Python erstellt werden. Beim Zugriff auf die Eingabedaten werden
verschiedene Protokolle unterstützt. Während der Ausführung kann der
Zustand des Rechenclusters sowie der Fortschritt der einzelnen Aufgaben
mit Hilfe einer Weboberfläche überwacht werden. Ein verteiltes
Dateisystem, das Disco Distributed Filesystem (DDFS), wird zur
Speicherung der Zwischen- und Endergebnisse verwendet.&lt;/p&gt;
</summary><category term="big data"></category><category term="disco"></category><category term="mapreduce"></category><category term="parallelisierung"></category></entry><entry><title>py.test - feature and new release highlights</title><link href="https://pyvideo.org/pycon-de-2013/pytest-feature-and-new-release-highlights.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Holger Krekel</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/pytest-feature-and-new-release-highlights.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;py.test is a popular tool for writing tests in Python. It offers unique
features not found in other testing tools. Apart from some basics, this
talk introduces the modular fixture mechanism, the assert statement
reporting and discusses the latest news of pytest-2.4 such as better
doctest support and using contextmanagers in conjunction with fixtures.
We'll also quickly discuss the most popular from the many existing
plugins.&lt;/p&gt;
</summary><category term="fixtures"></category><category term="pytest"></category><category term="testing"></category></entry><entry><title>Python Packages</title><link href="https://pyvideo.org/pycon-de-2013/python-packages.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Daniel Hepper</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/python-packages.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;setup.py, PyPI, easy_install, pip, distutils, setuptools, virtualenv -
wer ein Paket nutzen oder den eigenen Code als Paket verteilen will muss
sich durch einen Dschungel von Modulen und Werkzeugen kämpfen. Dieser
Vortrag bringt Licht ins Dunkel und stellt aktuelle Best Practices für
die Verwendung und Erstellung von Python-Paketen vor.&lt;/p&gt;
</summary><category term="packaging"></category><category term="pip"></category><category term="pypi"></category><category term="setuptools"></category><category term="virtualenv"></category></entry><entry><title>Pythons Datenmodell - Ein Überblick</title><link href="https://pyvideo.org/pycon-de-2013/pythons-datenmodell-ein-uberblick.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Oliver Bestwalter</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/pythons-datenmodell-ein-uberblick.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Pythons Datenmodell ist sehr einfach: alles ist ein Objekt (wirklich
&lt;em&gt;alles&lt;/em&gt;). Darüberhinaus verfügt die Sprache über eine Reihe von
Konventionen und Protokollen, die es sehr einfach machen, die eigenen
Klassen dazu zu überreden, sich wie native Datentypen zu verhalten.&lt;/p&gt;
&lt;p&gt;In diesem Vortrag werden die dafür nötigen zentralen Konzepte eingeführt
und mittels einfacher Beispiele demonstriert.&lt;/p&gt;
</summary><category term="datenmodell"></category><category term="oop"></category><category term="protokolle"></category><category term="pythonisch"></category></entry><entry><title>Table Partitioning with Django</title><link href="https://pyvideo.org/pycon-de-2013/table-partitioning-with-django.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Max Tepkeev</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/table-partitioning-with-django.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Table partitioning can be thought of as a division of one large table
into several smaller tables which represent that original table. Table
partitioning is &amp;quot;transparent&amp;quot;, that means that in theory you don't need
to change any code to work with partitioned tables.&lt;/p&gt;
&lt;p&gt;We will talk about table partitioning theory in general and
implementations in different database servers. Why and when we need to
do table partitioning. What problems we can face and how we can solve
them.&lt;/p&gt;
&lt;p&gt;Django provides us with great database abstraction and ORM, but how can
we use it with table partitioning ? We will talk about existing
libraries for Django to work with table partitioning, their differences,
which is the best (if any) and why.&lt;/p&gt;
</summary><category term="database"></category><category term="django"></category><category term="partition"></category><category term="partitioning"></category></entry><entry><title>VHIST - Dokumentation von Workflows wissenschaftlicher Python-Anwendungen</title><link href="https://pyvideo.org/pycon-de-2013/vhist-dokumentation-von-workflows-wissenschaftl.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Andreas Hüsgen</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/vhist-dokumentation-von-workflows-wissenschaftl.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Wir haben mit VHIST ein Dateiformat entwickelt, um Workflows im Bereich
Scientific Computing möglichst vollständig zu erfassen. VHIST ist
PDF-kompatibel sowie PDF-unabhängig auswertbar. Wir bieten Werkzeuge, um
halb- bzw. vollautomatisch VHIST-Dateien zu generieren und auszuwerten.
Die Referenzimplementierung verwendet Python;
Python-(scriptable)-Programme können besonders gut integriert werden.&lt;/p&gt;
</summary><category term="dokumentation"></category><category term="gute wissenschaftliche praxis"></category><category term="reproduzierbarkeit bei scienti"></category><category term="strace"></category><category term="vhist"></category><category term="workflows"></category></entry><entry><title>Was Sie schon immer über „Visualisierung mit Python“ wissen wollten</title><link href="https://pyvideo.org/pycon-de-2013/was-sie-schon-immer-uber-visualisierung-mit-pyth.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Josef Heinen</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/was-sie-schon-immer-uber-visualisierung-mit-pyth.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Schon lange hat sich Python in den Software-Entwicklungsabteilungen von
Forschung und Industrie etabliert, nicht zuletzt wegen der Verbreitung
von Bibliotheken wie SciPy oder Matplotlib. Bei der Verarbeitung großer
Datenmengen oder im Zusammenspiel mit GUI-Toolkits stößt man aber leicht
an die Grenzen der interpretativen Programmierung.&lt;/p&gt;
&lt;p&gt;Der Vortrag zeigt auf, wie solche Anforderung auf der Basis des &lt;em&gt;GR
Frameworks&lt;/em&gt;, einer &amp;quot;Lightweight&amp;quot;-Alternative zu Matplotlib, umgesetzt
werden können. Im Einzelnen wird beschrieben wie man mit aktuellen
Software-Technologien Echtzeit-Anwendungen oder rechenintensive
Simulationen in Python realisieren kann. So lässt sich zum Beispiel
durch die Verwendung von Just-In-Time Kompilierung mit Numba(Pro) eine
enorme Performance-Steigerung erzielen. An konkreten Beispielen werden
die Vorzüge des &lt;em&gt;GR Frameworks&lt;/em&gt; im Zusammenspiel mit JIT-Compilern,
graphischen Benutzeroberflächen (GUIs) sowie OpenGL, aber auch vor dem
Hintergrund einer stetig ansteigenden Paketflut beschrieben.&lt;/p&gt;
</summary><category term="accelerate"></category><category term="anaconda"></category><category term="numba"></category><category term="numpy"></category><category term="opengl"></category><category term="pyqt"></category><category term="python"></category><category term="visualisierung"></category></entry><entry><title>ABGESAGT: IronPython - ein Hochzeitskuss zwischen C# und Python</title><link href="https://pyvideo.org/pycon-de-2013/abgesagt-ironpython-ein-hochzeitskuss-zwischen.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Mathias Mielitz</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/abgesagt-ironpython-ein-hochzeitskuss-zwischen.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Achtung:&lt;/strong&gt; &lt;em&gt;Dieser Vortrag wurde abgesagt und fällt aus!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wir erweitern die Funktionalität eines .NET-Programmes (C#) mit Hilfe
mehrerer Plugins, die wir gemeinsam in IronPython schreiben. Dabei
lernen wir mehr über das Zusammenspiel beider Sprachen kennen und werden
Trauzeugen einer Hochzeit zweier ungleicher Ehepartner.&lt;/p&gt;
</summary><category term="c#"></category><category term="erweitern"></category><category term="ironpython"></category><category term="plugins"></category><category term="python"></category></entry><entry><title>Asynchrone Programmierung mit Tornado</title><link href="https://pyvideo.org/pycon-de-2013/asynchrone-programmierung-mit-tornado.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Florian Ludwig</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/asynchrone-programmierung-mit-tornado.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Tornado ist eine asynchrone Netzwerkbibliothek mit der Fähigkeit
zehntausende Verbindungen zu verwalten. Dieser Vortrag legt dar, wie
dies erreicht wird und für welche Probleme Tornado die Lösung ist - und
für welche nicht. Mit Praxisbeispielen wird vorgestellt, wie TCP-Server
und Webanwendungen realisiert werden können und wie man asynchron auch
ohne Callback-Jungle programmieren kann.&lt;/p&gt;
</summary><category term="asynchron"></category><category term="non-blocking"></category><category term="tornado"></category><category term="websockets"></category></entry><entry><title>Content Management mit Web APIs</title><link href="https://pyvideo.org/pycon-de-2013/content-management-mit-web-apis.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Arndt Droullier</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/content-management-mit-web-apis.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;NoSql ein Schritt weiter: CMS-Systeme mit Web API lassen sich wie NoSql
Datenbanken erweitert um Daten-Validierung, Workflow und Template
Renderer verwenden. Ergebnis sind neue Anwendungsfälle wie Backends für
Javascript Anwendungen oder Structured Data Services. Gezeigt am
Beispiel &lt;a class="reference external" href="http://cms.nive.co/"&gt;Nive cms&lt;/a&gt;.&lt;/p&gt;
</summary><category term="cms"></category><category term="nosql"></category><category term="web api"></category></entry><entry><title>Data Mining mit Orange</title><link href="https://pyvideo.org/pycon-de-2013/data-mining-mit-orange.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Andreas Bresser</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/data-mining-mit-orange.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Es wird eine einfache Einführung in das Thema Data Mining gegeben. Dazu
werden anschauliche Beispiele für den Einsatz von Orange gezeigt. Orange
ist ein Open Source Programm, das Data Mining und Datenvisualisierung
durch visuelle Programmierung oder Python Scripting ermöglicht.&lt;/p&gt;
</summary><category term="classification"></category><category term="data mining"></category><category term="klassifikation"></category><category term="orange"></category></entry><entry><title>Ereignis-diskrete Simulation mit SimPy</title><link href="https://pyvideo.org/pycon-de-2013/ereignis-diskrete-simulation-mit-simpy.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Stefan Scherfke</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/ereignis-diskrete-simulation-mit-simpy.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Simulationen kommen immer dann zum Einsatz, wenn Experimente an realen
Systemen mit hohen Risiken bzw. Kosten verbunden oder gar nicht erst
möglich sind. Zudem erlauben Simulationen es, Vorgänge, die in der
realität lange Zeiträume beanspruchen, in zumeist wesentlich kürzerer
Zeit nachzuvollziehen.&lt;/p&gt;
&lt;p&gt;Nach einer kurzen Einführung in das Thema zeigt dieser Vortrag anhand
einfacher Beispiele, wie sich Ereignis-diskrete Simulationen mit SimPy
umsetzen lassen und welche Funktionen SimPy zur Umsetzung komplexerer
Simulationen bietet.&lt;/p&gt;
</summary><category term="ereignis-diskret"></category><category term="generators"></category><category term="simpy"></category><category term="simulation"></category><category term="zeit-diskret"></category></entry><entry><title>File-I/O ist doch ganz einfach, oder?</title><link href="https://pyvideo.org/pycon-de-2013/file-io-ist-doch-ganz-einfach-oder.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Christian Kauhaus</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/file-io-ist-doch-ganz-einfach-oder.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Der Vortrag soll Bewusstsein dafür schaffen, wann man sich aus einer
komfortablen Umgebung (z.B. einem Application-Framework) in eine
systemspezifische Domäne begibt. Aus meiner Erfahrung im DevOps-Umfeld
sind mir viele Fälle bekannt, in denen Code auf Entwickler-Maschinen
keine Probleme macht, sich aber auf produktiven Servern nicht
ausreichend robust verhält. Die Eigenschaften von File-I/O in Python
dienen dabei als durchgehendes Anwendungsbeispiel.&lt;/p&gt;
&lt;p&gt;Der Vortrag gliedert sich in zwei Teile. Im ersten Teil möchte ich
anhand von ausgewählten &amp;quot;Pannen&amp;quot; zeigen, wann ein &lt;em&gt;with open(...)&lt;/em&gt;
allein nicht ausreicht, da z.B. die Python-Standardfunktionen keine
Zuverlässigkeit im Sinne der ACID-Eigenschaften gewährleisten. Im
zweiten Teil geht um konkrete Programmiertechniken wie
Write-Replace-Updates, Locking oder fsync, die die Robustheit von I/O
ggf. unter Einschränkung der Plattformunabhängigkeit erhöhen.&lt;/p&gt;
&lt;p&gt;Der Anwendungsteil des Vortrags basiert auf Material aus meinem
&lt;a class="reference external" href="http://blog.gocept.com/2013/07/15/reliable-file-updates-with-python/"&gt;Blogpost&lt;/a&gt;
zum gleich Thema.&lt;/p&gt;
</summary><category term="acid"></category><category term="plattformunabhängigkeit"></category><category term="systemprogrammierung"></category><category term="zuverlässigkeit"></category></entry><entry><title>Fluid-Simulation für VFX mit PyOpenCl</title><link href="https://pyvideo.org/pycon-de-2013/fluid-simulation-fur-vfx-mit-pyopencl.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Dieter Morgenroth</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/fluid-simulation-fur-vfx-mit-pyopencl.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python ist zu langsam für die Berechnung von komplexen Simulationen für
Visual FX? Weit gefehlt! Wir stellen ein System vor, dass auf Basis des
PyOpenCl Projekts von Andreas Klöckner eine Fluid Simulation umsetzt,
die sich über ein Client / Server Konzept direkt in die Software 3dsmax
integriert und interaktives Arbeiten ermöglicht. Dabei läuft die
Simulation gleichermaßen auf allen Kombinationen aus Linux / Windows /
GPU / CPU. Ein Erfahrungsbericht aus der Anwendung der PyOpenCl Library.&lt;/p&gt;
</summary><category term="pyopencl"></category></entry><entry><title>Interaktive Datenanalyse und Visualisierung mit Python, pandas &amp; Co.</title><link href="https://pyvideo.org/pycon-de-2013/interaktive-datenanalyse-und-visualisierung-mit-p.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/interaktive-datenanalyse-und-visualisierung-mit-p.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python hat sich als ernste Alternative für die effiziente und
hochperformante Analyse auch von großen Datenmengen etabliert. Der
Vortrag stellt die wesentlichen Python-basierten Tools für die
interaktive Datenanalyse und Visualisierung vor und veranschaulicht
diese an Hand von praxisnahen Beispielen.&lt;/p&gt;
&lt;p&gt;Der Vortag nutzt IPython Notebooks um die Interaktivität in Echzeit zu
veranschaulichen.&lt;/p&gt;
</summary><category term="data analytics"></category><category term="visualisierung"></category></entry><entry><title>Introduction to django CMS</title><link href="https://pyvideo.org/pycon-de-2013/introduction-to-django-cms.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Benjamin Wohlwend</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/introduction-to-django-cms.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Wir werden das Open Source Content Management System «django CMS»
vorstellen. Einerseits zeigen wir das Backend, aber auch das Frontend,
geben Erfahrungen von Developern weiter und von CMS-Verwendern. Patrick
Lauber, als Senior Web Developer geht in die Tiefe, Stefanie Weilenmann
wir das CMS anhand einer kurzen Schulung zeigen.&lt;/p&gt;
</summary><category term="django"></category><category term="django cms"></category><category term="open source"></category><category term="python"></category><category term="website"></category></entry><entry><title>Komponenten einer komplexen Web-Applikation</title><link href="https://pyvideo.org/pycon-de-2013/komponenten-einer-komplexen-web-applikation.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Daniel Hepper</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/komponenten-einer-komplexen-web-applikation.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Komplexe Web-Applikationen bestehen aus mehr als einem Webserver, einer
Datenbank und etwas Code. Dieser Vortrag gibt einen Überblick über die
typischen Bausteine wie Celery als Task Queue, Haystack für
Volltextsuche, Sentry als Log-Diensten und automatischem Deployment mit
Fabric und Salt. Die vorgestellte Komponenten werden anhand einer
Django-Applikation erläutert, sind jedoch zum Großteil auch mit anderen
Frameworks nutzbar.&lt;/p&gt;
</summary><category term="celery"></category><category term="deployment"></category><category term="django"></category><category term="elasticsearch"></category><category term="fabric"></category><category term="haystack"></category><category term="salt"></category><category term="search"></category><category term="sentry"></category><category term="solr"></category></entry><entry><title>MIDI-Geräte drahtlos steuern mit OSC, Raspberry Pi und python-rtmidi</title><link href="https://pyvideo.org/pycon-de-2013/midi-gerate-drahtlos-steuern-mit-osc-raspberry-p.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Christopher Arndt</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/midi-gerate-drahtlos-steuern-mit-osc-raspberry-p.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Mit der &lt;a class="reference external" href="https://pypi.python.org/pypi/python-rtmidi"&gt;python-rtmidi&lt;/a&gt;
Bibliothek lässt sich mit Python unter den drei gängigsten
Betriebssystemen Windows, OS X und Linux auf MIDI-Schnittstellen
zugreifen und MIDI-Daten senden und empfangen. Viele elektronische
Musikinstrumente und anderes Soundequipment werden noch immer vorwiegend
über das MIDI-Protokoll gesteuert und besitzen nur herkömmliche
MIDI-Interfaces. Mit Hilfe einer auf &lt;em&gt;python-rtmidi&lt;/em&gt; und
&lt;a class="reference external" href="http://das.nasophon.de/pyliblo/"&gt;pyliblo&lt;/a&gt; aufsetzenden Software, der
&lt;em&gt;OSC-MIDI-Bridge&lt;/em&gt;, einem Raspberry Pi und je einem billigen WLAN- und
USB-MIDI-Interface, lassen sich solche Geräte kostengünstig in ein
drahtloses Netzwerk einbinden und z.B. über Tablet-Computer steuern, auf
denen entsprechende Software installiert ist, die OSC (&lt;a class="reference external" href="http://opensoundcontrol.org/"&gt;Open Sound
Control&lt;/a&gt;) unterstützt (z.B.
&lt;a class="reference external" href="http://hexler.net/software/touchosc"&gt;TouchOSC&lt;/a&gt; oder &lt;a class="reference external" href="http://www.thiburce.com/TBStuff/"&gt;TB MIDI
Stuff&lt;/a&gt;). Dies ist insbesondere für
Situationen praktisch, in denen kein sperriger Desktop-Computer oder
Laptop mit MIDI-Schnittstelle vor Ort vorhanden oder gewünscht ist.&lt;/p&gt;
&lt;p&gt;Mit einer &amp;quot;Live&amp;quot;-Demonstration zeigt der Referent diese von ihm
implementierte Software in Aktion (ca. 4 min) und erläutert dann kurz
die dabei benutzten Protokolle (MIDI und OSC) (5 min), stellt die
verwendeten Python-Bibliotheken &lt;em&gt;python-rtmidi&lt;/em&gt; und &lt;em&gt;pyliblo&lt;/em&gt; vor (4
min) und erläutert die eingesetzten Software-Techniken. Dabei wird
insbesondere auf die asynchrone Behandlung von MIDI-Input und Output via
des &lt;em&gt;multiprocessing&lt;/em&gt;-Moduls der Standardbibliothek eingegangen (5 min).
Abschliessend werden noch einige Anregungen für weitere Einsatzzwecke
von &lt;em&gt;python-rtmidi&lt;/em&gt; und der OSC-MIDI-Bridge gegeben (2 min).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;python-rtmidi&lt;/em&gt; ist ein Python-Bindung für die C++-Bibliothek
&lt;a class="reference external" href="http://www.music.mcgill.ca/~gary/rtmidi/index.html"&gt;RtMidi&lt;/a&gt; und
wurde mit &lt;a class="reference external" href="http://cython.org"&gt;Cython&lt;/a&gt; realisiert. Die Software
befindet sich noch im Alpha-Status, da momentan noch die Unterstützung
der Kernel Streaming API unter Windows fehlt (Windows wird aber über das
WinMM-Framework unterstützt). Die vorhandene Funktionalität ist jedoch
stabil und es ist geplant, vor der PyCon.DE eine Beta-Version zu
veröffentlichen. Die darauf aufsetzende OSC-MIDI Bridge ist bisher nur
als Beispielskript in der &lt;em&gt;python-rtmidi&lt;/em&gt;-Distribution verfügbar, wird
aber stetig weiterentwickelt und voraussichtlich demnächst in ein
eigenes Projekt ausgegliedert.&lt;/p&gt;
</summary><category term="diy"></category><category term="midi"></category><category term="musik"></category><category term="osc"></category><category term="raspberry pi"></category><category term="remote control"></category></entry><entry><title>Mittwoch Lightning Talks</title><link href="https://pyvideo.org/pycon-de-2013/mittwoch-lightning-talks.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/mittwoch-lightning-talks.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;(00:00) 2. Test Driven Infrastructure - Schlomo Schapiro&lt;/p&gt;
&lt;p&gt;(0:04:48) 3 What's (Not so) New In Python 3.4 - C. Heimes&lt;/p&gt;
&lt;p&gt;(0:04:50) 3 What's (Not so) New In Python 3.4 - C. Heimes&lt;/p&gt;
&lt;p&gt;(0:09:38) 4. Unicode: wide build vs narrow build - Christian Kauhans&lt;/p&gt;
&lt;p&gt;(0:14:23) 5. Nikola - Static Blog Generator - U. Spallele&lt;/p&gt;
&lt;p&gt;(0:18:51) 6. Ahoy! Local Message Broadcasts - M. Specht&lt;/p&gt;
&lt;p&gt;(0:23:34) 7. Python 2 &amp;amp; 3 mit demselben Code - Stefan&lt;/p&gt;
&lt;p&gt;(0:27:12) 8. YADT - An Augmented Deployment Tool - YADT Team / Max Riehl&lt;/p&gt;
&lt;p&gt;(0:31:51) 8. YADT - An Augmented Deployment Tool - YADT Team / Max Riehl&lt;/p&gt;
&lt;p&gt;(0:31:53) 10. Krumme Nadel im Heuhaufen - R. Wobst&lt;/p&gt;
&lt;p&gt;(0:31:58) 10. Krumme Nadel im Heuhaufen - R. Wobst&lt;/p&gt;
&lt;p&gt;(0:37:00) Python Brochure&lt;/p&gt;
&lt;p&gt;(0:41:22) Python Brochure&lt;/p&gt;
&lt;p&gt;(0:41:26) Python Brochure&lt;/p&gt;
&lt;p&gt;(0:41:32) 9. Python Camp 2014 PyCologne - Reimar Bauer&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Schlangenhochzeit in der Wolke</title><link href="https://pyvideo.org/pycon-de-2013/schlangenhochzeit-in-der-wolke.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Jens Klein</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/schlangenhochzeit-in-der-wolke.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Googles Appengine steht für hochskalierbare Anwendungen in der Cloud.
Locandy ist unser Startup für mobile Location based Games.&lt;/p&gt;
&lt;p&gt;Auf der Cloud-Platform mit ihrer sehr restriktiven Python-Umgebung haben
wir das Portal für Spieler, Autoren und Business Kunden umgesetzt.
Browser, Mobile-App und PDF-Server werden damit bedient.&lt;/p&gt;
&lt;p&gt;Dabei ist nicht alles so rund gelaufen, wie wir es gerne gehabt hätten.
Die Probleme wurden gelöst - dank Python mit seinem starken
Werkzeugkasten.&lt;/p&gt;
&lt;p&gt;Der Vortrag geht kurz auf die Anforderungen ein, zeigt auf welche
Probleme es gab und wie wir sie gelöst haben. In einem Github Repository
stelle ich ein Buildout inkl. kleiner Beispielapplikation mit den
meisten dieser Lösungen zur Verfügung.&lt;/p&gt;
</summary><category term="appengine"></category><category term="buildout"></category><category term="cloud"></category><category term="gruntjs"></category><category term="mobile"></category><category term="plone.testing"></category><category term="pyramid"></category><category term="testlayers"></category><category term="velruse"></category><category term="WebTest"></category></entry><entry><title>SCons - Software bauen in Python</title><link href="https://pyvideo.org/pycon-de-2013/scons-software-bauen-in-python.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Dirk Bächle</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/scons-software-bauen-in-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Dieser Vortrag stellt SCons (www.scons.org) und seine Benutzung vor. Er
richtet sich in erster Linie an Softwareentwickler oder Betreuer von
großen Buildumgebungen, die nach Alternativen zu herkömmlichen Tools,
wie CMake oder autotools, suchen.&lt;/p&gt;
&lt;p&gt;SCons ist ein Buildsystem das vollständig in Python programmiert wird.
Die Eingabedateien zur Definition der einzelnen Buildschritte werden
ebenfalls als Pythonskripte ausgeführt. Durch diese Kombination einer
DSL (Domain Specific Language) mit der Allzwecksprache Python, lassen
sich auch komplizierte Softwareprojekte einfach spezifizieren und bauen.&lt;/p&gt;
&lt;p&gt;Das Framework das sich hinter dem Startskript verbirgt, ist auf einfache
Erweiterbarkeit und hohe Flexibilität ausgelegt.&lt;/p&gt;
&lt;p&gt;Während des Vortrags soll gezeigt werden wie man ein Projekt richtig
anfängt und make-typische Denkweisen vermeidet. Die Vorteile von SCons
und Standardfragen, z.B. zur Erweiterung des Systems für neue
Buildschritte, werden diskutiert.&lt;/p&gt;
&lt;p&gt;Am Ende soll der Zuhörer einen Eindruck von der Arbeitsweise des
Programms erhalten haben, und entscheiden können ob sich der Einsatz von
SCons für sein Softwareprojekt lohnen würde.&lt;/p&gt;
</summary><category term="building"></category><category term="build system"></category><category term="framework"></category><category term="programming"></category><category term="software"></category></entry><entry><title>Spinning a Web Framework</title><link href="https://pyvideo.org/pycon-de-2013/spinning-a-web-framework.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Martijn Faassen</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/spinning-a-web-framework.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Over the years I've been exposed to a lot of ideas in web frameworks.
Reflecting on these ideas is valuable when you build a new one, but also
when you simply use an existing web framework.&lt;/p&gt;
&lt;p&gt;In this talk I will discuss the slow genesis of Morepath, a micro
web-framework with super powers that I've created, and discuss some of
the ideas behind it, things I've learned, and also share some thoughts
about the creative process.&lt;/p&gt;
&lt;p&gt;The ideas behind Morepath are not revolutionary, but hopefully still
make you think.&lt;/p&gt;
</summary></entry><entry><title>Wiki-Restauration aus dem Web Cache</title><link href="https://pyvideo.org/pycon-de-2013/wiki-restauration-aus-dem-web-cache.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Reimar Bauer</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/wiki-restauration-aus-dem-web-cache.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Nach einem Totalschaden ist bei Webanwendungen nicht unbedingt alles
verloren. Die Inhalte sind in der Regel auf eine begrenzte Zeit in
Suchmaschinen wieder zu finden.&lt;/p&gt;
&lt;p&gt;Der Vortrag beschreibt ein Verfahren das Anfang des Jahres zum Einsatz
kam um Wiki-Seiten aus dem HTML Webcache zurück in Wiki-Seiten Markup zu
übersetzen.&lt;/p&gt;
</summary><category term="adapter pattern"></category><category term="html"></category><category term="markup"></category><category term="moinmoin"></category><category term="python"></category></entry><entry><title>Wissenschaftliches Publizieren mit Python</title><link href="https://pyvideo.org/pycon-de-2013/wissenschaftliches-publizieren-mit-python.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/wissenschaftliches-publizieren-mit-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python hat sich als eine der bedeutendsten Programmiersprachen in vielen
Bereichen der Wissenschaft etabliert. Jüngere Entwicklungen im Bereich
des Publizierens machen die Nutzung von Python noch attraktiver. So ist
es heute recht einfach möglich ausführbaren Python-Code in
Dokument-Sourcen zu integrieren und die Ergebnisse dieses Codes direkt
in das Dokument zu importieren (z.B. Formeln, Berechnungen,
Abbildungen).&lt;/p&gt;
&lt;p&gt;Der Vortrag skizziert Tools wie IPython Notebook, Sphinx (inkl. IPython
Extension) oder auch PythonTEX. Er zeigt auch, wie einfach Open Research
mit Hilfe dieser Tools zu realisieren ist.&lt;/p&gt;
</summary><category term="latex"></category><category term="publizieren"></category><category term="python"></category><category term="wissenschaft"></category></entry><entry><title>Wo ist meine Pfadklasse?</title><link href="https://pyvideo.org/pycon-de-2013/wo-ist-meine-pfadklasse.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Oliver Bestwalter</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/wo-ist-meine-pfadklasse.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Zusammenfassung der Diskussion um die Einführung einer Pfadklasse in die
Python Standard Library. Überblick über bereits existierende
Bibliotheken, gefolgt von einem pragmatischen Ausblick.&lt;/p&gt;
</summary><category term="peps"></category><category term="pfade"></category><category term="standard library"></category></entry><entry><title>XML generieren mit lxml</title><link href="https://pyvideo.org/pycon-de-2013/xml-generieren-mit-lxml.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Stefan Behnel</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/xml-generieren-mit-lxml.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="http://lxml.de/"&gt;lxml&lt;/a&gt; ist der Platzhirsch unter den XML-Tools für
Python. Über das übliche Parsen hinaus bietet es auch einige schöne
Möglichkeiten, XML-Dokumente effizient zu generieren. Der Vortrag bietet
eine Einführung in die Teile von lxml, die das Erzeugen von XML einfach
und übersichtlich machen.&lt;/p&gt;
</summary><category term="lxml"></category><category term="xml"></category></entry><entry><title>-getrieben. Wer treibt eigentlich die Test-Entwicklung?</title><link href="https://pyvideo.org/pycon-de-2013/-getrieben-wer-treibt-eigentlich-die-test-entwic.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Andi Albrecht</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/-getrieben-wer-treibt-eigentlich-die-test-entwic.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In den letzten Jahren machen auch in der Python-Welt immer mehr
“getriebene” Entwicklungsmethoden die Runde, so zum Beispiel Test Driven
Development, Behavior Driven Development oder Feature Driven
Development. Kaum ist davon die Rede, kommen noch weitere Schlagworte
aus dem Bereich des Testens, wie Acceptance Test, Unit Test, Functional
Test oder Integration Test, dazu und die Verwirrung ist oftmals perfekt.
Verliert man in diesem Dschungel an Begriffen den Überblick, ist die
Gefahr gegeben, dass man das Testen entweder ganz lässt oder keine der
Methoden richtig anzuwenden.&lt;/p&gt;
&lt;p&gt;Der Vortrag gibt eine Ordnung für diese Begriffe und versucht dadurch
etwas mehr Licht ins Dickicht zu bringen. Dabei steht weniger die
lehrbuchartige Klassifizierung der Methoden im Vordergrund, sondern es
wird die Fragestellung verfolgt, wer eigentlich die Zielgruppe eines
Tests ist. Das können neben Entwicklern auch Qualitätssicherer,
Projektleiter und -Mitglieder, aber auch letztlich Kunden eines
Produktes sein. Wer “liest” also die Testergebnisse und in welcher Form
sollten die Ergebnisse vorliegen, damit sie nutzbar sind. Zusammen mit
einer Betrachtung der unterschiedlichen Test-Gegenstände wird die Wahl
der Test-Methode und die Implementierung der Tests klarer.&lt;/p&gt;
&lt;p&gt;Zu den vorgestellten Methoden werden beispielhaft Python-Test-Frameworks
wie zum Beispiel Selenium, das Robot-Framework und klassische
UnitTest-Frameworks vorgestellt. Anhand von kurzen Code-Beispielen wird
der Einsatz dieser Werkzeuge für bestimmte Methodiken verdeutlicht und
es wird gezeigt, wie auf Basis der Testergebnisse Berichte und Metriken
für die jeweiligen Zielgruppen generiert werden können.&lt;/p&gt;
</summary><category term="testing"></category></entry><entry><title>BACARDI - Ein Katalog für Raumfahrtrückstände</title><link href="https://pyvideo.org/pycon-de-2013/bacardi-ein-katalog-fur-raumfahrtruckstande.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Michael Meinel</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/bacardi-ein-katalog-fur-raumfahrtruckstande.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Das Thema Weltraumschrott tritt vermehrt in die Öffentlichkeit, denn nur
wenn jetzt das Augenmerk der raumfahrenden Nationen darauf gerichtet
wird, werden wir auch in Zukunft zu den Sternen reisen können. Die
Grundlage für eine nachhaltige Raumfahrtstrategie ist die Beobachtung
und Katalogisierung der Raumfahrtrückstände für die Planung und
Durchführung von Missionen. Am Deutschen Zentrum für Luft- und Raumfahrt
e.V. entsteht derzeit der Backend Catalog for Relational Debris
Information (BACARDI) als Technologiedemonstrator zum Umgang mit großen
Datenmengen.&lt;/p&gt;
&lt;p&gt;Die Python-Software kombiniert dazu moderne Technologien wie ZeroMQ und
Protocol Buffers zu einem flexiblen, skalierbaren Gesamtsystem, das in
der Lage sein soll, den wachsenden Ressourcenansprüchen zu genügen. Dank
der plattformunabhängigen Schnittstellen können Komponenten später auch
in anderen Programmiersprachen wie C, C# oder Java angebunden werden.&lt;/p&gt;
</summary><category term="middleware"></category><category term="protocol buffers"></category><category term="skalierbar"></category><category term="space debris"></category><category term="weltraumschrott"></category><category term="zeromq"></category></entry><entry><title>Cython für schnelleren Python-Code</title><link href="https://pyvideo.org/pycon-de-2013/cython-fur-schnelleren-python-code.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Stefan Behnel</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/cython-fur-schnelleren-python-code.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Der &lt;a class="reference external" href="http://cython.org"&gt;Cython-Compiler&lt;/a&gt; ist mehr als nur ein Weg,
Erweiterungsmodule for CPython zu schreiben. Durch die statische
Übersetzung von reinem Python-Code öffnen sich neue Möglichkeiten, den
Code vielfach zu beschleunigen. Anhand einiger Beispiele wird gezeigt,
wie durch Profiling und gezielte manuelle Optimierung auch reiner
Python-Code von statischer Kompilierung profitieren kann, ohne dabei das
Ökosystem der CPython-Laufzeitumgebung verlassen zu müssen.&lt;/p&gt;
</summary><category term="compiler"></category><category term="cython"></category><category term="optimierung"></category></entry><entry><title>devpi: driving packaging and testing needs</title><link href="https://pyvideo.org/pycon-de-2013/devpi-driving-packaging-and-testing-needs.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Holger Krekel</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/devpi-driving-packaging-and-testing-needs.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;devpi provides both a private pypi server, a self-updating
pypi.python.org package cache, and work flow commands for uploading,
testing and installing packages. This talk shows some example scenarios
and discusses the unique feature of seemlessly &amp;quot;inheriting&amp;quot; the
pypi.python.org packages into your private index. We'll also look into
how you can perform testing of a package before you push a release to
the public index or your company-specific private index.&lt;/p&gt;
</summary><category term="packaging"></category><category term="qa"></category><category term="testing"></category></entry><entry><title>Dienstag Lightning Talks</title><link href="https://pyvideo.org/pycon-de-2013/dienstag-lightning-talks.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/dienstag-lightning-talks.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;(00:00) Ilan Schnell - Conda Packaging&lt;/p&gt;
&lt;p&gt;(0:05:00) Stefan - Ada Lovelace Day&lt;/p&gt;
&lt;p&gt;(0:05:30) Marius Wesener - eGenix PyRun Not entirely sure about the last
name, it is shown on the first slide.&lt;/p&gt;
&lt;p&gt;(0:09:49) Marius - Smarthome: Steuerung mit KNX Last Name might be
Hübner, but the res is too low for me to read it off the slide&lt;/p&gt;
&lt;p&gt;(0:13:41) Programmierwettbewerb - Blender He did not say his name :-) He
mentiones a URL in the talk, I could not read it.&lt;/p&gt;
&lt;p&gt;(0:18:50) Benimm Dich! Das &amp;quot;behave&amp;quot; Tool für Behaviour Driven
Development He did not say his name, maybe there is something in the
slides.&lt;/p&gt;
&lt;p&gt;(0:23:55) Arnold - GPG Key Signing Party&lt;/p&gt;
&lt;p&gt;(0:25:43) Online Python Courses He did not say his name :-)&lt;/p&gt;
&lt;p&gt;(0:27:46) Schlomo Schapiro - Distributed Monitoring Configuration&lt;/p&gt;
&lt;p&gt;(0:32:59) Science Hack Day No name, maybe mentioned on slides but too
small to read&lt;/p&gt;
&lt;p&gt;(0:35:51) Beautiful Projekt No name.&lt;/p&gt;
&lt;p&gt;(0:41:03) Arnold - mezzanine-workout Sportuhren auslesen und
veröffentlichen&lt;/p&gt;
&lt;p&gt;(0:43:01) BVG Abfahrten im Büro anzeigen Name was said too fast, maybe
you can read it off the first slide.&lt;/p&gt;
&lt;p&gt;(0:44:50) Christian - Compiler optimieren Kryptographie bis sie unsicher
ist&lt;/p&gt;
&lt;p&gt;(0:49:52) Dirk - NumPy&lt;/p&gt;
&lt;p&gt;(0:54:53) ?? - Spielend Python lernen Name is visible but too small to
read&lt;/p&gt;
</summary></entry><entry><title>Echtzeit Web-Apps mit Mushroom</title><link href="https://pyvideo.org/pycon-de-2013/echtzeit-web-apps-mit-mushroom.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Michael P. Jung</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/echtzeit-web-apps-mit-mushroom.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://bitbucket.org/terreon/mushroom"&gt;Mushroom&lt;/a&gt; ist ein einfach zu
verwendendes Echtzeit-Web-Messaging-Framework, welches neben
Browser-Push-Nachrichten auch Funktionen für die
Interprozesskommunikation zur Verfügung stellt.&lt;/p&gt;
&lt;p&gt;Dieser Vortrag versucht, Lust auf das Echtzeit-Web zu machen und
beantwortet grundlegende Fragen zu Themen wie Skalierbarkeit und
Deployment.&lt;/p&gt;
</summary><category term="echtzeit"></category><category term="gevent"></category><category term="http"></category><category term="ipc"></category><category term="javascript"></category><category term="long polling"></category><category term="messagin"></category><category term="mushroom"></category><category term="network"></category><category term="python"></category><category term="real-time"></category><category term="websocket"></category></entry><entry><title>Effiziente Python-Entwicklung mit kleinen Teams</title><link href="https://pyvideo.org/pycon-de-2013/effiziente-python-entwicklung-mit-kleinen-teams.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Marc-André Lemburg</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/effiziente-python-entwicklung-mit-kleinen-teams.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python bietet eine sehr effiziente Basis für das Umsetzen von komplexen
Projektanforderungen. Die dadurch bedingten kürzeren Entwicklungszeiten
liefern allerdings nicht nur Vorteile, sondern bringen auch neue
Herausforderungen mit sich.&lt;/p&gt;
&lt;p&gt;Der Vortrag liefert praxisnahe und -erprobte Vorschläge für das
Projektmanagement, die eine möglichst effiziente Umsetzung von Projekten
auf Python-Basis ermöglichen.&lt;/p&gt;
&lt;p&gt;Darüber hinaus soll der Vortrag einen Anstoß zu einer Diskussion über
Erfahrungen aus dem Bereich Projektmanagement in Python-Projekten
liefern. Ziel sollte es sein, durch Erfahrungsaustausch Python insgesamt
im Projektgeschäft voranzubringen.&lt;/p&gt;
</summary><category term="effizient"></category><category term="projekt"></category><category term="team"></category></entry><entry><title>Entwicklung wissenschaftlicher Applikationen mit Python</title><link href="https://pyvideo.org/pycon-de-2013/entwicklung-wissenschaftlicher-applikationen-mit.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Florian Rhiem</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/entwicklung-wissenschaftlicher-applikationen-mit.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Durch Experimente und Simulationen werden im wissenschaftlichen Bereich
große Mengen an Daten erzeugt. Diese müssen geeignet aufbereitet werden,
um sie in eine für die Wissenschaftler verständliche Form zu überführen.
Ein Beispiel dafür ist die Untersuchung von Phasenwechselmaterialien,
welche in wiederbeschreibbaren optischen Medien eingesetzt werden. Der
beim Löschen und Beschreiben eintretende Wechsel zwischen kristallinem
und amorphen Zustand wird auf Großrechnern simuliert und die
resultierende molekulare Struktur auf Hohlstellen hin untersucht, da
diese Rückschlüsse auf das Verhalten des Materials zulassen. Den Kern
der Präsentation nimmt die Entwicklung der Anwendung &lt;em&gt;pyMolDyn&lt;/em&gt; ein,
welche die Analyse und Visualisierung der Moleküle und Hohlstellen
übernimmt.&lt;/p&gt;
&lt;p&gt;Dieser Vortrag gibt einen Einblick in die Erfahrungen, die während der
mehrjährigen Entwicklung dieser Software gesammelt wurden. Zum einen
wird dabei die rechenintensive Analyse der Daten betrachtet und wie
diese durch Verwendung von NumPy und (py)OpenCL vereinfacht und
beschleunigt werden kann. Zum anderen werden die grafischen
Anwendungskomponenten beschrieben, welche mithilfe von wxPython,
(py)OpenGL und einem gezielten Zusammenspiel dieser beiden Pakete
umgesetzt werden konnten. Neben Performance und Einfachheit der
Programmierung werden auch die gewonnenen Eindrücke zu
Plattformunabhängigkeit und Interversionskompatibilität vorgestellt.
Weiterhin werden Eigenheiten der Anwendungsentwicklung im Bereich der
Forschung erläutert und es wird darauf eingegangen, welche Stärken und
Schwächen Python in diesem Zusammenhang bietet. Abschließend folgt ein
Überblick darüber, wie sich die weitere Entwicklung von &lt;em&gt;pyMolDyn&lt;/em&gt;
gestalten wird und welche Konsequenzen die gesammelten Erfahrungen in
Zukunft für das Projekt haben werden.&lt;/p&gt;
</summary><category term="anwendungsentwicklung"></category><category term="numpy"></category><category term="opencl"></category><category term="opengl"></category><category term="python"></category><category term="visualisierung"></category><category term="wxpython"></category></entry><entry><title>OpenTechSchool Potpourri</title><link href="https://pyvideo.org/pycon-de-2013/opentechschool-potpourri.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Robert Lehmann</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/opentechschool-potpourri.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Die OpenTechSchool ist eine Community-Initiative die freie
Programmierworkshops für sämtliche Zielgruppen anbietet. Mit mehreren
freien Materialien für Programmieranfänger und -fortgeschrittene bringen
wir unseren Teilnehmern Grundlagen oder spezielle Themenkomplexe bei.&lt;/p&gt;
&lt;p&gt;Dieser Vortrag blickt zurück auf ein Jahr voller Workshops in mehreren
Städten, mit einem Fokus auf Python. Mit verschiedenen Konzepten wie
Workshops, Learners Meetups und Hackdays haben wir das verschiedenste
Publikum — von Konferenzteilnehmern zu Kindern — bedient.&lt;/p&gt;
&lt;p&gt;Der Vortragende speist seine Erfahrungen aus der Erarbeitung mehrerer
Python-Curriculi, dem Coaching auf verschiedenen Events in Berlin sowie
der Organisation der Lokalgruppe in Zürich.&lt;/p&gt;
</summary><category term="opentechschool"></category></entry><entry><title>Plone 5</title><link href="https://pyvideo.org/pycon-de-2013/plone-5.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Timo Stollenwerk</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/plone-5.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Plone 5, das nächstes Major Release des Python-basierten Open Source
Content Management Systems Plone, verspricht einige interessante
Neuerungen.&lt;/p&gt;
&lt;p&gt;Der Vortrag wird den aktuellen Stand der Entwicklung vorstellen und
insbesondere auch im Detail aufzeigen, welche Neuerungen heute schon
produktiv mit der aktuellen Version 4.3 eingesetzt werden können. Unter
anderem wird Plone 5:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;neue, leistungsfähigere Inhaltstypen zur Verfügung stellen, die
through-the-web veränderbar sind&lt;/li&gt;
&lt;li&gt;ein neues, moderenes User Inteface bekommen, einschließlich neuer
Widgets&lt;/li&gt;
&lt;li&gt;ein neues Modul für multilinguale Seiten bieten&lt;/li&gt;
&lt;li&gt;schneller sein&lt;/li&gt;
&lt;li&gt;einfacher zu erlernen sein&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Python Einsteiger-Programmierwettbewerb</title><link href="https://pyvideo.org/pycon-de-2013/python-einsteiger-programmierwettbewerb.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Reimar Bauer</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/python-einsteiger-programmierwettbewerb.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Im Planungsprozess der diesjährigen PyCon DE ist ein
Programmierwettbewerb für SchülerInnen im Alter von 13 bis zum
vollendetetem 21 Lebensjahr enthalten.&lt;/p&gt;
&lt;p&gt;Die Techniken, die zur Vorbereitung eingesetzt wurden, sowie die Medien
und die Python Software des Portals pymove3d.pysv.org werden
dargestellt.&lt;/p&gt;
&lt;p&gt;Das Ergebnis des Wettbewerbs und der Ausblick auf 2014 mit der
Zielvorgabe diesen Wettbewerb zur Europython fortzusetzen bedarf großer
Aufmerksamkeit.&lt;/p&gt;
</summary><category term="einsteiger"></category><category term="pymove3d"></category><category term="wettbewerb"></category></entry><entry><title>Python verbindet - Der Python Software Verband e.V. in 20 Minuten</title><link href="https://pyvideo.org/pycon-de-2013/python-verbindet-der-python-software-verband-e.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Mike Müller</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/python-verbindet-der-python-software-verband-e.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Der Python Software Verband (PySV) ist als eingetragener Verein in
Deutschland organisiert, und versteht sich als Support-Organ der
gesamten deutschsprachigen Python-Community. 2011 hat sich der PySV
langsam aber sicher organisatorisch aus dem früheren DZUG e.V., der
bereits vollständig aus Python Enthusiasten bestand, emanzipiert und
seine Neustrukturierung im letzten Jahr weitgehend abgeschlossen.&lt;/p&gt;
&lt;p&gt;Die wichtigsten Mittel zur Unterstützung der Community sind u. a. unsere
aktiven Mitglieder und die PySV-Website als zentraler Anlaufpunkt und
der neue Usergruppen-Hub. Der PySV unterstützte und organisierte bereits
die Python-Konferenzen PyCon.DE 2011 und 2012 als verantwortlicher
Partner mit. Auch die PyCon.DE 2013 wird er in enger Zusammenarbeit mit
der Kölner PyCologne Usergroup und dem DLR ermöglichen. In den Jahren
2014 und 2015 wird der PySV sogar Mitausrichter der EuroPython – der
größten europäsichen Python-Konferenz – sein. Die Berliner Usergroup mit
dem PySV im Rücken konnte sich in der Bewerbung durchsetzen.&lt;/p&gt;
&lt;p&gt;Auch kleinere, aber deswegen nicht unwichtigere Events unterstützt der
PySV. Neben dem mittlerweile schon traditionellen PythonCamp in Köln
sind das verschiedene Python-Sprints und u.A. der World Plone Day an
mehreren Orten. Auf Messen wie der CeBIT, der überregionalen FrOSCon
Konferenz und den Berliner und Chemnitzer Linuxtagen und dem Linuxtag in
Berlin sorgt der Verband dafür, dass Python regelmäßig präsent ist.&lt;/p&gt;
&lt;p&gt;Der gemeinsam neu entwickelte Programmierwettbewerb nimmt Formen an.
Studenten erhalten vom PySV Unterstützung für die Teilnahme an der
EuroSciPy.&lt;/p&gt;
&lt;p&gt;Wie der Verband der Community helfen kann, wird mit allen, die mithelfen
wollen, gemeinsam erarbeitet. Er bietet organisatorische, finanzielle
und technische Hilfe für Usergruppen, Sprints und Workshops mit
Python-Bezug. Alle Python-Enthusiasten sind eingeladen im Verein aktiv
mitzuarbeiten. Neue Ideen und Verbesserungsvorschläge sind immer gern
gesehen. Unsere Grundregel lautet: “Soviel Unterstüzung wie möglich, so
wenig Reglementierung wie möglich.”&lt;/p&gt;
</summary><category term="community"></category><category term="pysv"></category><category term="verband"></category></entry><entry><title>Recruiting Session (Neu)</title><link href="https://pyvideo.org/pycon-de-2013/recruiting-session-neu.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Daniel Hepper</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/recruiting-session-neu.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Sponsoren stellen sich vor und weisen auf aktuell offene Stellen hin.&lt;/p&gt;
</summary></entry><entry><title>Schwachstellen und Sicherheitslücken</title><link href="https://pyvideo.org/pycon-de-2013/schwachstellen-und-sicherheitslucken.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Christian Heimes</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/schwachstellen-und-sicherheitslucken.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In diesem Vortrag werden eine Reihe von Schwachstellen behandeln, die in
der Vergangenheit in CPython oder prominenten Pythonprojekten
aufgetreten sind. Als Python Kernentwickler und Mitglied des Python
Security Response Team war ich in die Analyse und Korrektur, zum Teil
auch in die Entdeckung dieser Lücken involviert.&lt;/p&gt;
&lt;p&gt;Jede Schwachstelle zählt exemplarisch einen oder mehrere typische
Programmierfehler auf. Mit Hilfe von best practices wird gezeigt, wie
man sicher mit Betriebsystemressourcen und Daten aus nicht
vertrauenswürdigen Quellen umgeht, kryptographischen Algorithmen korrekt
verwendet und side channel attacks verhindert.&lt;/p&gt;
&lt;p&gt;Desweiteren werde ich einen Ausblick auf geplante Änderungen und
sicherheitsrelevante Verbesserungen in Python 3.4 geben. Jenseits von
Python wird der Vortrag auch beleuchten, welche Fallstricke und Probleme
Compiler, Betriebsysteme und moderne CPU-Architekturen mit sich bringen
und sie sogar die Entwicklung sicherer Software verhindern können.&lt;/p&gt;
</summary></entry><entry><title>Sphinx i18n</title><link href="https://pyvideo.org/pycon-de-2013/sphinx-i18n.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Markus Zapke-Gründemann</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/sphinx-i18n.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Sphinx hat schon rudimentäre Unterstützung für die Internationalisierung
von Dokumentationen mit Hilfe von gettext. Dieser Vortrag berichtet über
die eigenen Erfahrungen und diskutiert weitergehende Lösungsansätze.&lt;/p&gt;
</summary><category term="dokumentation"></category><category term="gettext"></category><category term="i18n"></category><category term="internationalisierung"></category><category term="sphinx"></category><category term="transifex"></category></entry><entry><title>Sponsoring von Open-Source - und damit den Chef überzeugen</title><link href="https://pyvideo.org/pycon-de-2013/sponsoring-von-open-source-und-damit-den-chef-u.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Schlomo Schapiro</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/sponsoring-von-open-source-und-damit-den-chef-u.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Nutzen Sie Open-Source-Software?&lt;/p&gt;
&lt;p&gt;Haben Sie schon einmal eine Kleinigkeit ändern wollen?&lt;/p&gt;
&lt;p&gt;Konnten Sie für “Einwurf kleiner Münzen” diese Änderung machen lassen?&lt;/p&gt;
&lt;p&gt;Open-Source-Software zeichnet sich unter anderem durch die leichte
Anpassbarkeit an die eigenen Bedürfnisse aus. Doch nicht jeder kann oder
möchte die Software selbst ändern. Lieber würde man die Autoren oder
andere Spezialisten damit beauftragen.&lt;/p&gt;
&lt;p&gt;Der Vortrag gibt Einblick in die praktische Arbeit mit dem Sponsoring
von Open-Source-Projekten und beantwortet die Frage, wie man mit Hilfe
von Sponsoring seine eigenen Probleme schneller und günstiger lösen
kann: Nach der Vorstellung typischer Entwicklungsmodelle von
Open-Source-Projekten erfahren Besucher, wie sie Kontakte zu Open-Source
Projekten knüpfen können und damit jemanden finden, der ihnen weiter
hilft.&lt;/p&gt;
&lt;p&gt;Weitere Themen sind&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;rechtliche Aspekte wie ein Werksvertrag, Gewährleistung und einfache
Abwicklung&lt;/li&gt;
&lt;li&gt;Anforderungen so formulieren, dass der Kundennutzen und die
Nachhaltigkeit im Vordergrund steht&lt;/li&gt;
&lt;li&gt;Abnahmekriterien für den Auftrag&lt;/li&gt;
&lt;li&gt;Wirtschaftlichkeitsberechnung und Kosten-Nutzen-Abwägung&lt;/li&gt;
&lt;li&gt;Nachhaltige Lösungen statt ewigen Workarounds&lt;/li&gt;
&lt;li&gt;Mehrwert für sich und die Open-Source-Gemeinschaft schaffen&lt;/li&gt;
&lt;li&gt;Imagepflege über Open-Source-Sponsoring&lt;/li&gt;
&lt;li&gt;Eigene Open-Source Projekte durch Externe weiterentwickeln lassen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Als konkrete Beispiele dienen diverse in Python entwickelte Open-Source
Projekte der ImmobilienScout24.&lt;/p&gt;
</summary><category term="geld"></category><category term="kultur"></category><category term="open-source"></category><category term="politik"></category><category term="wirtschaft"></category></entry><entry><title>Über die Verwendung von Python zur Strukturanalyse von Schiffen</title><link href="https://pyvideo.org/pycon-de-2013/uber-die-verwendung-von-python-zur-strukturanalys.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Berthold Höllmann</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/uber-die-verwendung-von-python-zur-strukturanalys.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Der Germanische Lloyd ist ein international tätiges technisches
Dienstleistungsunternehmen, das sich mit u.a. mit der
sicherheitsrelevanten Bewertung von Schiffsstrukturen befasst.&lt;/p&gt;
&lt;p&gt;Für die Festigkeits- und Schwingungsberechnung von neuen Konstruktionen
wurden und werden beim Germanischen Lloyd Python Tools eingesetzt. Diese
dienen zur Manipulation von Berechnungsmodellen, zur Bereitstellung von
Simulationsmodellen in unterschiedlichste Berechnungsformate, zur
Kopplung unterschiedlicher (kommerzieller und nicht kommerzieller)
Berechnungsprogramme, zur Implementierung eigener Berechnungsverfahren
sowie zur Ergebnisdarstellung. Für die unterschiedlichen Aufgaben werden
verschiedene frei verfügbare Bibliotheken wie numpy oder scipy sowie
eigene in C, C++ und FORTRAN geschriebene Extensions und Module
eingesetzt. Für die Anbindung der Extensions an Python werden sowohl
Interface Generatoren (f2py, Cython) als auch handgeschriebener Code
unter Verwendung der Python C API verwendet.&lt;/p&gt;
</summary><category term="extension"></category><category term="fem"></category><category term="numpy"></category></entry><entry><title>Vom Commit zum Deployment - Build pipelines in Jenkins</title><link href="https://pyvideo.org/pycon-de-2013/vom-commit-zum-deployment-build-pipelines-in-je.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Thomas Fenzl</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/vom-commit-zum-deployment-build-pipelines-in-je.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Wenn man Code in ein Repository eincheckt möchte man dazu schnelles und
aussagekräftiges Feedback.&lt;/p&gt;
&lt;p&gt;Natürlich sind lokal die Tests durchgelaufen (oder etwa nicht?), aber
wie kann man weitere Überprüfungen automatisieren? Dieser Vortrag zeigt,
wie man in Jenkins und Werkzeugen wie nose/pylint/coverage build
pipelines anlegt, die von Unittests und linting bis zum Deployment gehen
können.&lt;/p&gt;
</summary><category term="build pipeline"></category><category term="continuous integration"></category></entry><entry><title>Von der Entwicklung bis zum Deployment mit standardisierten und konfigurierbaren Laufzeitumgebungen</title><link href="https://pyvideo.org/pycon-de-2013/von-der-entwicklung-bis-zum-deployment-mit-standa.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Juergen Schackmann</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/von-der-entwicklung-bis-zum-deployment-mit-standa.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Es wird gezeigt, wie Laufzeitumgebungen (Betriebssystem, Services wie
Datenbank oder Webserver, Python, Applikation) standardisiert
konfiguriert und automatisiert erzeugt werden können. Somit wird
sichergestellt, dass eine Applikation immer in definierten und
weitgehend identischen Umgebungen ausgeführt wird - unabhängig von den
verschiedenen Phasen des Lebenszyklus (Entwicklung, Test, Produktion
etc.) und persönlichen Präferenzen und Know-how der involvierten
Personen. Hierfür eingesetzt werden: Vagrant, Virtualbox,Puppet,
Virtualenv.&lt;/p&gt;
</summary><category term="bootstrapping"></category><category term="deployment"></category><category term="django"></category><category term="puppet"></category><category term="vagrant"></category><category term="virtualenv"></category></entry><entry><title>Who let the robot out? Qualitativ hochwerte Software mit Hilfe von Continuous Integration erstellen</title><link href="https://pyvideo.org/pycon-de-2013/who-let-the-robot-out-qualitativ-hochwerte-softw.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Timo Stollenwerk</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/who-let-the-robot-out-qualitativ-hochwerte-softw.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Continuous Integration ist Begriff aus der Softwareentwicklung, der den
Prozess des fortlaufenden Zusammenfügens von Komponenten zu einer
Anwendung beschreibt. Das Ziel der kontinuierlichen Integration ist die
Steigerung der Softwarequalität. Jede &amp;quot;Integration&amp;quot; führt zu einem
automatisierten Build-Prozess der verschiedene Software-Tests und
Code-Analyseschritte ausführt um Fehler so früh wie möglich erkennen und
beheben zu können.&lt;/p&gt;
&lt;p&gt;Dieser Vortrag wird die Prinzipien der Kontinuierlichen Integration
vorstellen und aufzeigen wie diese für ein Python-Projekt umgesetzt
werden können. Dabei werden die Erfahrungen aus dem Betrieb des
CI-Servers für das Plone Projekt, eines der größten Python-basierten
Open Source Projekte, vorgestellt. Unter anderem werden die folgenden
Themen behandelt:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Aufsetzen eines Continous Integration Servers mit Travis-CI oder
Jenkins&lt;/li&gt;
&lt;li&gt;Einbindung verschiedener Versionskontrollsysteme&lt;/li&gt;
&lt;li&gt;Das Ausführen verschiedener Tests und die Analyse der Code-Qualität
für jede Integration&lt;/li&gt;
&lt;li&gt;Wie Jenkins verwendet werden kann um automatisch eine Software
Dokumentation zu erstellen, die Entwickler zu benachrichtigen,
Software Releases zu erstellen und Software zu deployen&lt;/li&gt;
&lt;li&gt;Das Schreiben und kontinuierliche Ausführen von funktionalen
Akzeptanztests, basierend auf Robot Framework&lt;/li&gt;
&lt;/ul&gt;
</summary></entry></feed>