<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 24 May 2018 00:00:00 +0000</lastBuildDate><item><title>Automated spell-checking in Django projects</title><link>https://pyvideo.org/djangocon-europe-2018/automated-spell-checking-in-django-projects.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I'm aiming to show how avoid spelling errors by showing ways to implement automated spell-checking.&lt;/p&gt;
&lt;p&gt;Nearly all Django applications have two main textual bodies that users come in touch with: First, any text in the application and its translation, second the documentation. Since both are usually written by humans, they will contain spelling errors.
This is considered harmful and can from time to time hinder the user trying to understand what to do.
Therefore, an automated spell-checking tool should be a part of any CI-cyle.&lt;/p&gt;
&lt;p&gt;For spell-checking documentation, I will give a short demonstration on how to use the &amp;quot;sphinxcontrib-spelling&amp;quot;-tool written by Doug Hellmann, the problems we had and how we overcame them.
For spell-checking text in the application and its translations that are usually found in .po-files, I have implemented a small tool called &amp;quot;potypo&amp;quot; (name and development in progress).
I will present this tool and show challenges and problems on the way to implementing automated spell checking for .po-files.&lt;/p&gt;
&lt;p&gt;Jakob Schnell&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jakob Schnell</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:djangocon-europe-2018/automated-spell-checking-in-django-projects.html</guid></item></channel></rss>