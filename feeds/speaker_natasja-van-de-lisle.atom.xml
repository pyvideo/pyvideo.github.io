<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_natasja-van-de-lisle.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-11-30T00:00:00+00:00</updated><entry><title>BigMedilytics: MPyC in practice</title><link href="https://pyvideo.org/pydata-eindhoven-2019/bigmedilytics-mpyc-in-practice.html" rel="alternate"></link><published>2019-11-30T00:00:00+00:00</published><updated>2019-11-30T00:00:00+00:00</updated><author><name>Natasja van de L'Isle</name></author><id>tag:pyvideo.org,2019-11-30:pydata-eindhoven-2019/bigmedilytics-mpyc-in-practice.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we would like to introduce secure Multi-Party Computation
(MPC) - as it allows for privacy preserving analytics - and show the
possibilities of the framework MPyC. By utilizing MPyC, TNO, together
with an insurance company and a hospital, have built a solution that can
predict the number of hospitalization days on datasets from both
parties, without them sharing their data.&lt;/p&gt;
&lt;p&gt;TNO together with an insurance company and a hospital are analyzing data
of heart failure patients. The insurance company has a lot of data on
medical compliance and claim behavior, whereas the hospital has data
from an academic study of hundreds of people that we tracked throughout
several years. The hospital has data among others about exercising
performance, alcohol intake, smoking behavior, etc. history. Combining
these datasets can create more insights than analysis on each dataset
separately. However, given the privacy concerns, this is not feasible.
This is where Multi-Party Computation (MPC) offers a solution. MPC
comprises of a set of cryptographic techniques that enable analysis in
the encrypted domain. With these techniques it can be mathematically
shown that no sensitive data is leaked, when performing an analysis.
MPyC, developed by Berry Schoenmakers (TU/e), is a python library that
is an MPC framework based on the technique secret sharing. By using this
library, we have been able to successfully implement a LASSO regression.&lt;/p&gt;
</summary></entry></feed>