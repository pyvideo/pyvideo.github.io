<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_k-rain-leander.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-05-10T00:00:00+00:00</updated><entry><title>Build a Private Developer’s Cloud Using TripleO</title><link href="https://pyvideo.org/pycon-se-2016/build-a-private-developers-cloud-using-tripleo.html" rel="alternate"></link><published>2016-05-10T00:00:00+00:00</published><updated>2016-05-10T00:00:00+00:00</updated><author><name>K Rain Leander</name></author><id>tag:pyvideo.org,2016-05-10:pycon-se-2016/build-a-private-developers-cloud-using-tripleo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TripleO is an OpenStack Deployment &amp;amp; Management tool built using python. The Cloud, Big Data, Internet of Things – so many technologies are the new hotness right now and TripleO quickstart is one of many ways to dive into one of the largest open source umbrella project, OpenStack.&lt;/p&gt;
</summary><category term="TripleO"></category><category term="OpenStack"></category></entry><entry><title>Leveraging Procedural Knowledge</title><link href="https://pyvideo.org/djangocon-us-2015/leveraging-procedural-knowledge-by-k-rain-leander.html" rel="alternate"></link><published>2015-09-24T00:00:00+00:00</published><updated>2015-09-24T00:00:00+00:00</updated><author><name>K Rain Leander</name></author><id>tag:pyvideo.org,2015-09-24:djangocon-us-2015/leveraging-procedural-knowledge-by-k-rain-leander.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Leveraging Procedural Knowledge&lt;/p&gt;
&lt;p&gt;On the road to senior developer, one has to learn multiple languages.
This often seems like a series of massive obstacles wherein each new
language resembles a new beginning. However, developers may often
underestimate the extent to which procedural knowledge from one language
transfers to a new language. In this talk, I will demonstrate that the
process from Red Hat Technical Account Manager to Django Girls workshop
participant to OpenShift developer was a series of procedural knowledge
transfers, wherein the obstacles to learning reduces with each new
technology that is learned. I will provide specific examples, from using
editors to troubleshooting issues, and conclude with practical
recommendations on which language to start with and how to create a
coherent plan for transitioning from one language to another.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/HIXQ/"&gt;http://amara.org/v/HIXQ/&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>