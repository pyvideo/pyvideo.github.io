<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_gabriela-de-queir.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-08-16T00:00:00+00:00</updated><entry><title>Deploy Deep Learning models as Microservices in minutes</title><link href="https://pyvideo.org/pybay-2019/deploy-deep-learning-models-as-microservices-in-minutes.html" rel="alternate"></link><published>2019-08-16T00:00:00+00:00</published><updated>2019-08-16T00:00:00+00:00</updated><author><name>Saishruthi Swaminathan</name></author><id>tag:pyvideo.org,2019-08-16:pybay-2019/deploy-deep-learning-models-as-microservices-in-minutes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk was presented at PyBay2019 - 4th annual Bay Area Regional Python conference. See pybay.com for more details about PyBay and click SHOW MORE for more information about this talk.&lt;/p&gt;
&lt;p&gt;Description
Seamlessly serve state-of-the-art deep learning models as web microservices in minutes and create an application around it without having prior deep learning experience.&lt;/p&gt;
&lt;p&gt;Abstract
Powering your application with deep learning is no walk in the park, but is certainly attainable with some tricks and good practice. Serving a deep learning model on a production system demands the model to be stable, reproducible, capable of isolation and to behave as a stand-alone package. One possible solution to this is a containerized microservice.&lt;/p&gt;
&lt;p&gt;Ideally, serving deep learning microservices should be quick and efficient, without having to dive deep into the underlying algorithms and their implementation. Too good to be true? Not anymore! Together, we will demystify the process of developing, training, and deploying deep learning models as a web microservice using Model Asset Exchange, an open source framework developed in Python at the IBM Center for Open Source Data and AI Technologies (CODAIT).&lt;/p&gt;
&lt;p&gt;We will kick off with an overview of how deep learning models are best published as Docker Images on DockerHub, and are best prepared for deployment in local or cloud environments using Kubernetes or Docker. We highlight the following benefits of such an approach: Standardized REST API implementation and application-friendly output format (JSON) Abstracting out the complex pre and post-processing portions of the model inputs and outputs.&lt;/p&gt;
&lt;p&gt;We will walk you through some super cool applications such as automatic image cropping, age estimation from videos/webcam and Veremin - a video theremin. All these applications and the framework itself are open source and we conclude by inviting contributions and opening the gates for you to be a part of this amazing initiative!&lt;/p&gt;
&lt;p&gt;Original slides: &lt;a class="reference external" href="https://t.ly/3vKN7"&gt;https://t.ly/3vKN7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;About the speaker
Saishruthi Swaminathan is a developer advocate and data scientist in the IBM CODAIT team whose main focus is to democratize data and AI through open source technologies. She has a Masters in Electrical Engineering specializing in Data Science and a Bachelor degree in Electronics and Instrumentation. Her passion is to dive deep into the ocean of data, extract insights and use AI for social good. Previously, she was working as a Software Developer. On a mission to spread the knowledge and experience, she acquired in her learning process. She also leads education for rural children initiative and organizing meetups focussing women empowerment.&lt;/p&gt;
&lt;p&gt;Sponsor Acknowledgement
This and other PyBay2019 videos are via the help of our media partner AlphaVoice (&lt;a class="reference external" href="https://www.alphavoice.io/"&gt;https://www.alphavoice.io/&lt;/a&gt;)!&lt;/p&gt;
&lt;p&gt;#pybay #pybay2019 #python #python3 #gdb&lt;/p&gt;
</summary></entry></feed>