<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Ivana Devcic</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ivana-devcic.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-09-10T00:00:00+00:00</updated><subtitle></subtitle><entry><title>"It's a Feature" - Documenting Known Issues and Product Shortcomings</title><link href="https://pyvideo.org/write-the-docs-prague-2018/its-a-feature-documenting-known-issues-and-product-shortcomings.html" rel="alternate"></link><published>2018-09-10T00:00:00+00:00</published><updated>2018-09-10T00:00:00+00:00</updated><author><name>Ivana Devcic</name></author><id>tag:pyvideo.org,2018-09-10:/write-the-docs-prague-2018/its-a-feature-documenting-known-issues-and-product-shortcomings.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Imagine for a moment that documentation is the face of your product. How
much concealer would you put on it?&lt;/p&gt;
&lt;p&gt;The majority of people would likely agree that no product is ever
perfect. When it comes to software, the jokes about bugs practically
write themselves. Should the product documentation â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Imagine for a moment that documentation is the face of your product. How
much concealer would you put on it?&lt;/p&gt;
&lt;p&gt;The majority of people would likely agree that no product is ever
perfect. When it comes to software, the jokes about bugs practically
write themselves. Should the product documentation acknowledge this, or
should it cover up the imperfections? In some cases, the answer seems
obvious, but what about those situations where there is a major known
issue - or five? How should the person in charge of documentation
address this? Should they just stick a big warning into the release
notes, or point out the problem and offer a quick workaround in the
documentation itself?&lt;/p&gt;
&lt;p&gt;This is not only a content issue, but also a question of ethics. It is a
challenge that has come up time and again in my personal (albeit short)
career as a technical writer, and I suspect many others have faced it,
too.&lt;/p&gt;
&lt;p&gt;This talk will look at some strategies that writers can rely on if they
decide this is an issue worth considering. Important aspects that will
be covered include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;the tone and language used when addressing product shortcomings&lt;/li&gt;
&lt;li&gt;communication with stakeholders, product managers and other
subject-matter experts&lt;/li&gt;
&lt;li&gt;dealing with clunky or unintuitive UIs and workflows that are not
officially recognized as issues, but are still impeding the user
experience and understanding of the product&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Write the Docs Prague 2018"></category></entry></feed>