<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Carson Gross</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 23 Oct 2021 00:00:00 +0000</lastBuildDate><item><title>REST, HATEOAS &amp; Django - It's OK to not use JSON... or Javascript</title><link>https://pyvideo.org/djangocon-us-2021/rest-hateoas-django-its-ok-to-not-use-json-or-javascript.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;# REST, HATEOAS &amp;amp; Django -
&lt;em&gt;it's OK to not use JSON... or Javascript&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;## Intro&lt;/p&gt;
&lt;p&gt;In this talk we will revisit the basics of REST (REpresentational State Transfer), a term coined by Roy Fielding to describe the web network architecture, in contrast with older client-server network architectures.  In particular we will focus in on the &amp;quot;Uniform Interface&amp;quot; constraint and get to the bottom of what that means, discussing each of the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Resource identification in requests&lt;/li&gt;
&lt;li&gt;Resource manipulation through representations&lt;/li&gt;
&lt;li&gt;Self-descriptive messages&lt;/li&gt;
&lt;li&gt;Hypermedia as the engine of application state (HATEOAS)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;with a particular focus on the last two.&lt;/p&gt;
&lt;p&gt;## REST: Wandering in the Desert&lt;/p&gt;
&lt;p&gt;After gaining a deeper understanding of REST, we will look at the history of REST in development.  We will look at how the term was appropriated for use in XML APIs, when AJAX first emerged, and how it was then retained when APIs switched to JSON.  I will demonstrate why this is inappropriate by focusing on the ideas of the self-descriptive messages and HATEOAS constraints of REST.  We will look at recent developments in the JSON API space and how they are moving away from the concept of REST.&lt;/p&gt;
&lt;p&gt;## REST: A New Hope&lt;/p&gt;
&lt;p&gt;Finally, having established that REST does not apply well in the JSON API world, we will ask &lt;em&gt;where&lt;/em&gt; it is appropriate and answer: in hypermedia systems.  And, it will turn out, tools like Django are wonderful for producing hypermedia systems!  In reexamining the hypermedia approach, and how it trivially satisfies the REST-ful architecture, we will look at a tool, htmx, that can help you create more advanced user experience while staying within the hypermedia architecture.&lt;/p&gt;
&lt;p&gt;It's OK to not use JSON... or Javascript!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carson Gross</dc:creator><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-10-23:/djangocon-us-2021/rest-hateoas-django-its-ok-to-not-use-json-or-javascript.html</guid><category>DjangoCon US 2021</category></item></channel></rss>