<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_brian-luft.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2011-09-05T00:00:00+00:00</updated><entry><title>Selling Django to Your Superiors: Success Stories Panel</title><link href="https://pyvideo.org/djangocon-us-2009/djangocon-2009--selling-django-to-your-superiors-.html" rel="alternate"></link><published>2009-09-09T00:00:00+00:00</published><updated>2009-09-09T00:00:00+00:00</updated><author><name>Brian Luft</name></author><id>tag:pyvideo.org,2009-09-09:djangocon-us-2009/djangocon-2009--selling-django-to-your-superiors-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Video freezes from 3:30-4:30, audio is fine.&lt;/p&gt;
</summary><category term="djangocon"></category><category term="djangocon2009"></category></entry><entry><title>Treehugging</title><link href="https://pyvideo.org/djangocon-us-2010/djangocon-2010--treehugging.html" rel="alternate"></link><published>2010-09-09T00:00:00+00:00</published><updated>2010-09-09T00:00:00+00:00</updated><author><name>Brian Luft</name></author><id>tag:pyvideo.org,2010-09-09:djangocon-us-2010/djangocon-2010--treehugging.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hierarchical data sprouts up almost everywhere, but not all trees look
alike. Learn to how tell them apart and love them all in Django.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;This talk would cover some common examples of hierarchical data in web
applications and then review solutions like django-mptt and
django-treebeard. Rather than trying to cover tree algorithms in-depth,
the focus would be on best practices for querying and rendering trees in
your Django apps.&lt;/p&gt;
&lt;p&gt;This talk is not geared for the smart kids; they already know this
stuff. It is intended to help less experienced developers take advantage
of patterns without needing to worry about the deeper concepts.&lt;/p&gt;
</summary><category term="djangocon"></category><category term="djangocon2010"></category><category term="django-mptt"></category><category term="django-treebeard"></category><category term="graphs"></category><category term="structureddata"></category></entry><entry><title>Breaking down the process of building a custom CMS</title><link href="https://pyvideo.org/djangocon-us-2010/djangocon-2010--breaking-down-the-process-of-buil.html" rel="alternate"></link><published>2010-09-07T00:00:00+00:00</published><updated>2010-09-07T00:00:00+00:00</updated><author><name>Brian Luft</name></author><id>tag:pyvideo.org,2010-09-07:djangocon-us-2010/djangocon-2010--breaking-down-the-process-of-buil.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The purpose of this talk is to share some of the important insights
gained over a couple years of working on custom CMS-type projects
serving large organizations. Acknowledging that approx. 30 minutes is a
short time to cover a broad subject, the focus of the talk would be on
outlining a basic strategy for managing large projects.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Over the past couple of years, Brian and Yann's team have built and
worked on several large Django projects for large organizations. They
will discuss how to start and manage large CMS projects, with an
emphasis on pointing people to the best reference information and
breaking down the common operations.&lt;/p&gt;
&lt;p&gt;The primary discussion topics would cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Breaking Down the Job: Over the course of the project you'll end up
accounting for thousands of details; here's how to figure out the
first few Centering Around a Prototype: Hedging your bets for the
inevitable &amp;quot;give me a ballpark figure&amp;quot;&lt;/li&gt;
&lt;li&gt;Dealing With Legacy Data Stores: Migrate legacy information early and
often.&lt;/li&gt;
&lt;li&gt;Selecting 3rd Party Components: Reuse exiting app, fork it early or
Trailblaze&lt;/li&gt;
&lt;li&gt;Bad News: Django Ain't Perfect - where it has weaknesses and how to
compensate&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At the end of this talk the audience will be able to:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
* Break down this type of project into meaningful phases
* Migrate large dataset to populate the django models that are still under development.
* Have a rational and objective approach to select django reusable component and understand how to refine them during the different stages of the project lifecycle.
* Find and evaluate quality information about the tradeoffs Django presents in these types of projects
&lt;/pre&gt;
</summary><category term="development"></category><category term="djangocon"></category><category term="djangocon2010"></category><category term="projectmanagement"></category></entry><entry><title>Data Herding: How to Shepherd Your Flock Through Valleys of Darkness</title><link href="https://pyvideo.org/djangocon-us-2010/djangocon-2010--data-herding--how-to-shepherd-you.html" rel="alternate"></link><published>2010-09-07T00:00:00+00:00</published><updated>2010-09-07T00:00:00+00:00</updated><author><name>Brian Luft</name></author><id>tag:pyvideo.org,2010-09-07:djangocon-us-2010/djangocon-2010--data-herding--how-to-shepherd-you.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn how to use common tools like the management shell,
django-extensions, and iPython to craft an effective workflow whether
you're building a new schema or migrating from old systems. We'll also
look at how to take advantage of the latest ORM features.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The presentation would consist of walking through a few example
scenarios where one would deal with processing or converting data in
some manner. For example, migrating from a large legacy database often
brings a number of tedious problems. I would demonstrate how to work in
an iterative, repeatable style using the Django sql management commands,
a few iPython tricks, etc.&lt;/p&gt;
&lt;p&gt;Another demonstration would be showing a team workflow for South
migrations, illustrating how to deal with some common problems that crop
up in practice.&lt;/p&gt;
&lt;p&gt;The audience will leave with some solid techniques for dealing with a
few specific data management challenges. The unifying philosophy
throughout is to break large, difficult problems into small, repeatable
steps and audience members should also come away knowing how to select
tools that help them work in this style.&lt;/p&gt;
</summary><category term="djangocon"></category><category term="djangocon2010"></category><category term="django-extensions"></category><category term="ipython"></category><category term="managementshell"></category><category term="orm"></category></entry><entry><title>A Little South Sanity</title><link href="https://pyvideo.org/djangocon-us-2011/djangocon-2011--a-little-south-sanity.html" rel="alternate"></link><published>2011-09-05T00:00:00+00:00</published><updated>2011-09-05T00:00:00+00:00</updated><author><name>Brian Luft</name></author><id>tag:pyvideo.org,2011-09-05:djangocon-us-2011/djangocon-2011--a-little-south-sanity.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A Little South Sanity&lt;/p&gt;
&lt;p&gt;Presented by Brian Luft&lt;/p&gt;
&lt;p&gt;South is a useful tool in agile development environments, but learning
to use it effectively can take some practice. In this demo-driven talk
we'll walk through some common workflow examples, dissect a couple
pitfalls, and call out the relative strengths and weaknesses of South as
a tool at each step. Finding South's sweet spot for your environment
will give you the best results.&lt;/p&gt;
</summary><category term="djangocon"></category><category term="djangocon2011"></category><category term="south"></category></entry></feed>