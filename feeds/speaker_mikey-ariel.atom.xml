<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_mikey-ariel.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-04-21T00:00:00+00:00</updated><entry><title>Docs or it didn't happen! (with Q&amp;A)</title><link href="https://pyvideo.org/djangocon-europe-2019/docs-or-it-didnt-happen-with-qa.html" rel="alternate"></link><published>2019-04-21T00:00:00+00:00</published><updated>2019-04-21T00:00:00+00:00</updated><author><name>Mikey Ariel</name></author><id>tag:pyvideo.org,2019-04-21:djangocon-europe-2019/docs-or-it-didnt-happen-with-qa.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever skimmed through a README, tried to follow a quickstart tutorial, attempted to decipher an error message, or typed ‘–help’ in your console? Congratulations – you have encountered documentation! Long gone are the days of massive books with never-ending stories about your software. Today’s users are smarter and less patient, which means that we no longer need to document all the things, as long as what we do document is clear, concise, helpful, and accessible. And that’s where the real work starts.
Documentation requires some attitude adjustment, since prose doesn’t neatly compile into binaries as code does. But Don’t Panic™! No matter what your role is in the community, you can apply a few key principles from the technical writing world to make your project more docs-friendly, and therefore more user- and contributor-friendly.
This talk covers strategies, best practices, and pro tips for rethinking how we create and curate documentation. This special edition will include Django-specific examples and use-cases as well as a special Q&amp;amp;A session, where we will try to address some of the community’s top concerns and ideas about the Django docs.&lt;/p&gt;
</summary></entry><entry><title>PyCon Balkan Belgrade 2018 - Day 1 - LIVE STREAM</title><link href="https://pyvideo.org/pycon-balkan-belgrade-2018/pycon-balkan-belgrade-2018-day-1-live-stream.html" rel="alternate"></link><published>2018-11-16T00:00:00+00:00</published><updated>2018-11-16T00:00:00+00:00</updated><author><name>Luka Kladarić</name></author><id>tag:pyvideo.org,2018-11-16:pycon-balkan-belgrade-2018/pycon-balkan-belgrade-2018-day-1-live-stream.html</id><summary type="html"></summary></entry><entry><title>PyCon Balkan Belgrade 2018 - LIVE STREAM</title><link href="https://pyvideo.org/pycon-balkan-belgrade-2018/pycon-balkan-belgrade-2018-live-stream.html" rel="alternate"></link><published>2018-11-16T00:00:00+00:00</published><updated>2018-11-16T00:00:00+00:00</updated><author><name>Luka Kladarić</name></author><id>tag:pyvideo.org,2018-11-16:pycon-balkan-belgrade-2018/pycon-balkan-belgrade-2018-live-stream.html</id><summary type="html"></summary></entry><entry><title>Introduction to Write the Docs Prague 2018</title><link href="https://pyvideo.org/write-the-docs-prague-2018/introduction-to-write-the-docs-prague-2018.html" rel="alternate"></link><published>2018-09-10T00:00:00+00:00</published><updated>2018-09-10T00:00:00+00:00</updated><author><name>Mikey Ariel</name></author><id>tag:pyvideo.org,2018-09-10:write-the-docs-prague-2018/introduction-to-write-the-docs-prague-2018.html</id><summary type="html"></summary></entry><entry><title>Can we make the light bulb want to change?</title><link href="https://pyvideo.org/pycon-italia-2018/can-we-make-the-light-bulb-want-to-change.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Mikey Ariel</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/can-we-make-the-light-bulb-want-to-change.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In today’s fast-paced world, change is becoming more of a necessity than
a luxury. And yet, many of us, understandably, still have a love-hate
relationship with change. How comfortable is your comfort zone? Should
you take that step onto new, unknown territory? Once you do, can you
convince others to do the same? Learning how to answer questions like
these is crucial, if we want to truly innovate in our jobs, communities,
and lives. In this talk, I’d like to share some of the lessons that I
learned about inducing and managing change, both in myself and in groups
I’ve worked with as a documentation writer, Agile scrum master,
community manager, and diversity advocate. Magic solutions are not
guaranteed, healthy discussions are encouraged.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 09:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Docs or it didn't happen</title><link href="https://pyvideo.org/pycon-sk-2018/docs-or-it-didnt-happen.html" rel="alternate"></link><published>2018-03-09T00:00:00+00:00</published><updated>2018-03-09T00:00:00+00:00</updated><author><name>Mikey Ariel</name></author><id>tag:pyvideo.org,2018-03-09:pycon-sk-2018/docs-or-it-didnt-happen.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you ever skimmed through a README, tried to follow a quickstart
tutorial, attempted to decipher an error message, or typed '--help' in
your terminal, congratulations -- you have encountered documentation!&lt;/p&gt;
&lt;p&gt;Long gone are the days of massive books with never-ending stories about
your software. Today's users are smarter and less patient, which means
that we no longer need to document &lt;em&gt;all the things&lt;/em&gt;, as long as what we
do document is clear, concise, helpful, and accessible. And that's where
the real work starts.&lt;/p&gt;
&lt;p&gt;Documentation requires some attitude adjustment, since prose doesn't
neatly compile into binaries as code does. But Don't Panic(tm)! No
matter what your role is in the community, you can apply a few key
principles from the technical writing world to make your project more
docs-friendly, and therefore more user- and contributor-friendly.&lt;/p&gt;
&lt;p&gt;This high-level (and all-level) talk aims to introduce or re-acquaint
you with topics such as content strategy, docs-as-code, optimized DevOps
for docs, and contribution workflows. Open-source projects of all
shapes, ages, sizes are welcome!&lt;/p&gt;
</summary><category term="Documentation"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Docs or it didn't happen</title><link href="https://pyvideo.org/pycon-uk-2017/docs-or-it-didnt-happen.html" rel="alternate"></link><published>2017-10-26T11:30:00+01:00</published><updated>2017-10-26T11:30:00+01:00</updated><author><name>Mikey Ariel</name></author><id>tag:pyvideo.org,2017-10-26:pycon-uk-2017/docs-or-it-didnt-happen.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Apologies for the occasional mumbling in the audio over the presenter, a mic was left live next to the mixer for part of Thursday&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you ever skimmed through a README, tried to follow a quickstart tutorial, attempted to decipher an error message, or typed '--help' in your console, congratulations -- you have encountered documentation!&lt;/p&gt;
&lt;p&gt;Long gone are the days of massive books with never-ending stories about your software. Today's users are smarter and less patient, which means that we no longer need to document all the things, as long as what we do document is clear, concise, helpful, and accessible. And that's where the real work starts.&lt;/p&gt;
&lt;p&gt;Documentation requires some attitude adjustment, since prose doesn't neatly compile into binaries as code does. But Don't Panic(tm)! No matter what your role is in the community, you can apply a few key principles from the technical writing world to make your project more docs-friendly, and therefore more user- and contributor-friendly.&lt;/p&gt;
&lt;p&gt;This high-level (and all-level) talk aims to introduce or re-acquaint you with topics such as content strategy, modular content architecture, tone and style, optimized DevOps for docs, and contribution workflows. Open-source projects of all shapes and sizes are welcome!&lt;/p&gt;
</summary></entry><entry><title>FOSS DOCS 101 (keep it simple, present!)</title><link href="https://pyvideo.org/europython-2015/foss-docs-101-keep-it-simple-present.html" rel="alternate"></link><published>2015-08-03T00:00:00+00:00</published><updated>2015-08-03T00:00:00+00:00</updated><author><name>Mikey Ariel</name></author><id>tag:pyvideo.org,2015-08-03:europython-2015/foss-docs-101-keep-it-simple-present.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mikey Ariel - FOSS DOCS 101 (keep it simple, present!)
[EuroPython 2015]
[24 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;Does your open source project need better documentation? Do you wish
that new users could get started with your software more easily? Do
you feel that your code contribution workflow isn't documented well
enough, or that contributors are discouraged from documenting their
code? How can you give your project docs the love they deserve?&lt;/p&gt;
&lt;p&gt;This high-level talk aims to introduce the main principles of
technical communication in the context of FOSS projects. It is
intended for anyone who interacts with docs, whether your project is
fresh off the dev environment or has been around since the dawn of
Git. Topics include tone, style, process management, structure, and
contribution workflow.&lt;/p&gt;
</summary></entry></feed>