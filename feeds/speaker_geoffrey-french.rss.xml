<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 26 May 2016 00:00:00 +0000</lastBuildDate><item><title>Deep learning tutorial - advanced techniques</title><link>https://pyvideo.org/pydata-london-2016/geoffrey-french-deep-learning-tutorial-advanced-techniques.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData London 2016&lt;/p&gt;
&lt;p&gt;Some of the more advanced deep learning to help you get the best out of it in a practical setting. The main focus is on computer vision and image processing.&lt;/p&gt;
&lt;p&gt;In the last few years, deep neural networks have been used to generate state-of-the-art results in image classification, segmentation and object detection. They have also successfully been used for speech recognition.&lt;/p&gt;
&lt;p&gt;In this tutorial we build on the basics, demonstrating some useful techniques that are useful in a practical setting. Along with tips and tricks found to be useful, we will discuss the following:&lt;/p&gt;
&lt;p&gt;active learning; train a neural network using less training data
using pre-trained networks; using the body of a pre-trained network (e.g. an ImageNet network) and re-using it for localisation or locating objects not within the original training set
having fun with neural networks; some of the fun techniques that have been demonstrated in the last couple of years
Prior knowledge of deep learning, machine learning, linear algebra, a bit of calculus and the NumPy/SciPy stack would be helpful for participation. We will mainly focus on using the Theano toolkit along with the Lasagne neural network library.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="https://speakerdeck.com/britefury/deep-learning-tutorial-advanced-techniques-pydata-london-2016"&gt;https://speakerdeck.com/britefury/deep-learning-tutorial-advanced-techniques-pydata-london-2016&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Repo: &lt;a class="reference external" href="https://github.com/Britefury/deep-learning-tutorial-pydata2016"&gt;https://github.com/Britefury/deep-learning-tutorial-pydata2016&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geoffrey French</dc:creator><pubDate>Thu, 26 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-26:pydata-london-2016/geoffrey-french-deep-learning-tutorial-advanced-techniques.html</guid></item><item><title>A Visual Interactive Programming Environment</title><link>https://pyvideo.org/europython-2011/a-visual-interactive-programming-environment.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Geoffrey French - 24 June 2011 in &amp;quot;Track Ravioli &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Larch Environment is a visual interactive programming environment
for Jython/Python. Its purpose is to make programming more visual. To
this end, protocols for presenting objects visually have been devised. A
programming environment, that builds on the idea of the standard visual
console, allows a programmer to experiment with ideas, and develop
programs at the same time. Additionally, a way of embellishing source
code with visual content is presented.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geoffrey French</dc:creator><pubDate>Thu, 07 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-07:europython-2011/a-visual-interactive-programming-environment.html</guid></item></channel></rss>