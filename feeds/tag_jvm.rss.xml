<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 09 Oct 2016 00:00:00 +0000</lastBuildDate><item><title>Improving PySpark Performance Spark performance beyond the JVM</title><link>https://pyvideo.org/pydata-dc-2016/improving-pyspark-performance-spark-performance-beyond-the-jvm.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;This talk assumes you have a basic understanding of Spark (if not check out one of the intro videos on youtube - &lt;a class="reference external" href="http://bit.ly/hkPySpark"&gt;http://bit.ly/hkPySpark&lt;/a&gt; ) and takes us beyond the standard intro to explore what makes PySpark fast and how to best scale our PySpark jobs. If you are using Python and Spark together and want to get faster jobs - this is the talk for you.&lt;/p&gt;
&lt;p&gt;This talk covers a number of important topics for making scalable Apache Spark programs - from RDD re-use to considerations for working with Key/Value data, why avoiding groupByKey is important and more. We also include Python specific considerations, like the difference between DataFrames and traditional RDDs with Python. Looking at Spark 2.0; we examine how to mix functional transformations with relational queries for performance using the new (to PySpark) Dataset API. We also explore some tricks to intermix Python and JVM code for cases where the performance overhead is too high.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Holden Karau</dc:creator><pubDate>Sun, 09 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-09:pydata-dc-2016/improving-pyspark-performance-spark-performance-beyond-the-jvm.html</guid><category>jvm</category><category>performance</category><category>pyspark</category><category>spark</category></item><item><title>Interoperability: from Python to Clojure and the other way round</title><link>https://pyvideo.org/europython-2011/interoperability-from-python-to-clojure-and-the.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Enrico Franchi - 21 June 2011 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Clojure is a modern Lisp dialect symbiotic with the Java Virtual Machine
and designed for concurrency. Clojure is compiled to byte-code and yet
is fully dynamic. It is very oriented towards functional programming and
manages state change in a controlled environment with software
transactional memory (STM). Since Clojure is a Lisp dialect, it retains
the code-as-data philosophy and has a powerful macro system&lt;/p&gt;
&lt;p&gt;Using the Jython, an implementation of the Python programming language
written in Java, it is possible to call Clojure from Python and call
Python from Clojure, using the JVM as an interoperability platform.&lt;/p&gt;
&lt;p&gt;After a brief introduction of the main Clojure features, the
presentation will show how Jython and Clojure can be used together.&lt;/p&gt;
&lt;p&gt;No previous knowledge of Clojure (or Lisp) is assumed nor required.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Enrico Franchi</dc:creator><pubDate>Wed, 13 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-13:europython-2011/interoperability-from-python-to-clojure-and-the.html</guid><category>java</category><category>jvm</category><category>jython</category><category>memory</category></item><item><title>PyCon 2009: A better Python for the JVM</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--a-better-python-for-the-jvm.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A better Python for the JVM&lt;/p&gt;
&lt;p&gt;Presented at PyCon 2009 by Tobias Ivarsson&lt;/p&gt;
&lt;p&gt;At the last PyCon we announced that we were starting a project for
improving the Jython compiler. This year we will share the first fruits
of that work with the Python community!&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ambient mic left on; results in echoing audio]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--a-better-python-for-the-jvm.html</guid><category>jvm</category><category>jython</category><category>pycon</category><category>pycon2009</category></item></channel></rss>