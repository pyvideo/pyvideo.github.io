<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_raul-cumplido.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-02-02T00:00:00+00:00</updated><entry><title>La maquinaria de import, ese mágico desconocido</title><link href="https://pyvideo.org/pycon-es-2015/la-maquinaria-de-import-ese-magico-desconocido.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Raúl Cumplido</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/la-maquinaria-de-import-ese-magico-desconocido.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Importar módulos y librerías en python es una de las cosas más mágicas que existen. Básicamente funciona pero no sabemos como ni porque. En la charla se explicará como funciona y porque puede ser útil saber como funciona.&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Metaprogramación en Python</title><link href="https://pyvideo.org/pycon-es-2015/pycon-es-2015-metaprogramacion-en-python-raul-cumplido-track-avanzado.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Raúl Cumplido</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/pycon-es-2015-metaprogramacion-en-python-raul-cumplido-track-avanzado.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Según wikipedia: “La metaprogramación consiste en escribir programas que escriben o manipulan otros programas (o a sí mismos) como datos, o que hacen en tiempo de compilación parte del trabajo que, de otra forma, se haría en tiempo de ejecución. Esto permite al programador ahorrar tiempo en la producción de código.”&lt;/p&gt;
&lt;p&gt;En esta charla veremos diferentes mecanismos que Python proporciona como:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Decoradores.&lt;/li&gt;
&lt;li&gt;Metaclasses.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Track Avanzado"></category><category term="metaprograming"></category><category term="metaclass"></category><category term="decorator"></category></entry><entry><title>Metaprogramación en Python</title><link href="https://pyvideo.org/europython-2015/metaprogramacion-en-python.html" rel="alternate"></link><published>2015-08-06T00:00:00+00:00</published><updated>2015-08-06T00:00:00+00:00</updated><author><name>Raúl Cumplido</name></author><id>tag:pyvideo.org,2015-08-06:europython-2015/metaprogramacion-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Raúl Cumplido - Metaprogramación en Python
[EuroPython 2015]
[22 July 2015]
[Bilbao, Euskadi, Spain]
[En Español]&lt;/p&gt;
&lt;p&gt;Según wikipedia:
&amp;quot;La metaprogramación consiste en escribir programas que escriben o
manipulan otros programas (o a sí mismos) como datos, o que hacen en
tiempo de compilación parte del trabajo que, de otra forma, se haría
en tiempo de ejecución. Esto permite al programador ahorrar tiempo en
la producción de código.&amp;quot;
En esta charla veremos diferentes mecanismos que Python proporciona como:
- Decoradores
- Metaclasses
- Descriptors
A través de varios ejemplos veremos como reutilizar código en varias
funciones y clases, como modificar como nuestras clases se generan,
como se genera una clase (que funciones se llaman cuando una clase se
crea) o como se genera una instancia.
Veremos también que fácilmente se nos puede ir de las manos y como
utilizar con cuidado las herramientas que Python nos proporciona.&lt;/p&gt;
</summary></entry></feed>