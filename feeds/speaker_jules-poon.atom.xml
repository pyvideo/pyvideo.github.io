<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Jules Poon</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jules-poon.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-05-19T00:00:00+00:00</updated><subtitle></subtitle><entry><title>How two undergrads from the other side of the planet are speeding up your future code</title><link href="https://pyvideo.org/pycon-us-2024/how-two-undergrads-from-the-other-side-of-the-planet-are-speeding-up-your-future-code.html" rel="alternate"></link><published>2024-05-19T00:00:00+00:00</published><updated>2024-05-19T00:00:00+00:00</updated><author><name>Ken Jin</name></author><id>tag:pyvideo.org,2024-05-19:/pycon-us-2024/how-two-undergrads-from-the-other-side-of-the-planet-are-speeding-up-your-future-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;CPython 3.13 is planned to get cool new performance features. One of
them is an experimental runtime bytecode optimizer, which will optimize
bytecode on the fly using compiler optimizations. It aims to do
fancy-sounding things like type propagation, guard elimination, constant
promotion and more!&lt;/p&gt;
&lt;p&gt;Whatâ€™s less known â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;CPython 3.13 is planned to get cool new performance features. One of
them is an experimental runtime bytecode optimizer, which will optimize
bytecode on the fly using compiler optimizations. It aims to do
fancy-sounding things like type propagation, guard elimination, constant
promotion and more!&lt;/p&gt;
&lt;p&gt;Whatâ€™s less known - this optimizer is currently being built by a
university undergraduate ðŸ˜², with earlier iterations contributed by
another undergrad. Weâ€™re also receiving course credit for it! One of us
had no prior experience contributing to CPython.&lt;/p&gt;
&lt;p&gt;In this talk, weâ€™ll split our time 60-40, with some time for the
performance enthusiasts out there, and the remaining time on our
experience contributing to CPython as an (in our opinion)
underrepresented group, and how you can contribute to CPython as a
university student as well.&lt;/p&gt;
&lt;p&gt;You donâ€™t have to be a compiler or CPython expert to attend â€“ this talk
is aimed at everyone who can read and write some Python.&lt;/p&gt;
</content><category term="PyCon US 2024"></category></entry></feed>