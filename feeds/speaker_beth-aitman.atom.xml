<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Beth Aitman</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_beth-aitman.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-09-10T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Before the docs: writing for user interfaces</title><link href="https://pyvideo.org/write-the-docs-europe-2015/before-the-docs-writing-for-user-interfaces.html" rel="alternate"></link><published>2015-08-31T00:00:00+00:00</published><updated>2015-08-31T00:00:00+00:00</updated><author><name>Beth Aitman</name></author><id>tag:pyvideo.org,2015-08-31:/write-the-docs-europe-2015/before-the-docs-writing-for-user-interfaces.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Good documentation is important, but it should be your last resort. You
need to help users before they reach the docs - in the user interface
itself.&lt;/p&gt;
&lt;p&gt;In this talk, I'll discuss:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;strategies for writing microcopy when you’re short on space&lt;/li&gt;
&lt;li&gt;what to explain in the UI, and what …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Good documentation is important, but it should be your last resort. You
need to help users before they reach the docs - in the user interface
itself.&lt;/p&gt;
&lt;p&gt;In this talk, I'll discuss:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;strategies for writing microcopy when you’re short on space&lt;/li&gt;
&lt;li&gt;what to explain in the UI, and what to save for the documentation&lt;/li&gt;
&lt;li&gt;how to pick the right style of embedded help&lt;/li&gt;
&lt;li&gt;what makes a great error message (and a terrible one)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;... with plenty of real-world examples of doing it right and wrong.&lt;/p&gt;
</content><category term="Write the Docs Europe 2015"></category></entry><entry><title>Lightning Talk: How To Get Started With Cryptic Crosswords</title><link href="https://pyvideo.org/write-the-docs-prague-2018/lightning-talk-how-to-get-started-with-cryptic-crosswords.html" rel="alternate"></link><published>2018-09-10T00:00:00+00:00</published><updated>2018-09-10T00:00:00+00:00</updated><author><name>Beth Aitman</name></author><id>tag:pyvideo.org,2018-09-10:/write-the-docs-prague-2018/lightning-talk-how-to-get-started-with-cryptic-crosswords.html</id><content type="html"></content><category term="Write the Docs Prague 2018"></category></entry><entry><title>Who Writes the Docs?</title><link href="https://pyvideo.org/write-the-docs-portland-2018/who-writes-the-docs.html" rel="alternate"></link><published>2018-05-06T00:00:00+00:00</published><updated>2018-05-06T00:00:00+00:00</updated><author><name>Beth Aitman</name></author><id>tag:pyvideo.org,2018-05-06:/write-the-docs-portland-2018/who-writes-the-docs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the wider tech writer world, it’s still common to hear tech writers
be certain that developers can’t write good help: the prevailing sense
is “Only we can do this.” But those same tech writers often feel under
threat in their jobs - feeling like their organisation doesn …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the wider tech writer world, it’s still common to hear tech writers
be certain that developers can’t write good help: the prevailing sense
is “Only we can do this.” But those same tech writers often feel under
threat in their jobs - feeling like their organisation doesn’t see their
value, doesn’t understand what they do.&lt;/p&gt;
&lt;p&gt;Who &lt;em&gt;should&lt;/em&gt; write the docs? Should all developers write docs as a
matter of course? Is it even worthwhile having specialist writers?&lt;/p&gt;
&lt;p&gt;In this talk I’ll try to find some answers to these questions, based on
my experience working in many teams - both in teams that have valued
tech writing and in teams that haven’t. I’ll talk about the
‘documentarian’ mindset and how that contributes to better software, no
matter what your job title is.&lt;/p&gt;
&lt;p&gt;I’ll also explore the benefits that come from specialist writers and
generalist developers working together. And I’ll share the ways I’ve
found that people with specialist writer skills (whether they’re
developers, tech writers, or other roles) can make the biggest
difference to user experience, and through that to their organisations.&lt;/p&gt;
</content><category term="Write the Docs Portland 2018"></category></entry></feed>