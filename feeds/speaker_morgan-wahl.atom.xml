<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_morgan-wahl.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-05-20T00:00:00+00:00</updated><entry><title>Text is More Complicated Than You Think: Comparing and Sorting Unicode</title><link href="https://pyvideo.org/pycon-us-2017/text-is-more-complicated-than-you-think-comparing-and-sorting-unicode.html" rel="alternate"></link><published>2017-05-20T00:00:00+00:00</published><updated>2017-05-20T00:00:00+00:00</updated><author><name>Morgan Wahl</name></author><id>tag:pyvideo.org,2017-05-20:pycon-us-2017/text-is-more-complicated-than-you-think-comparing-and-sorting-unicode.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Few people realize just how complicated text can be. Did you know
sorting and even case-folding can depend on a user's locale? That
different strings of characters can be semantically completely
equivalent? That there are over a thousand Latin letters?&lt;/p&gt;
&lt;p&gt;Legacy text encodings like ASCII made a lot of simplifying assumptions
about how written languages work, and we all put up with them because it
was cool to even have computers in the first place. Unicode removes many
of those assumptions and provides the tools we need to write software
that can just do the right thing regardless of what text users throw at
it. Even if you don't translate your UI, getting the details of string
comparison, sorting, and searching right can eliminate annoying
surprises for you and your users.&lt;/p&gt;
</summary></entry></feed>