<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_benjamin-misell.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-29T11:30:00+01:00</updated><entry><title>Tales of C, the 6502 and the BBC with added python</title><link href="https://pyvideo.org/pycon-uk-2017/tales-of-c-the-6502-and-the-bbc-with-added-python.html" rel="alternate"></link><published>2017-10-29T11:30:00+01:00</published><updated>2017-10-29T11:30:00+01:00</updated><author><name>Benjamin Misell</name></author><id>tag:pyvideo.org,2017-10-29:pycon-uk-2017/tales-of-c-the-6502-and-the-bbc-with-added-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Any of you from the 80's will remember the BBC Micro. Well, I got one about half a year ago and have been fascinated by it ever since. The 8-bit 2MHz limitations are part of the joy of it.&lt;/p&gt;
&lt;p&gt;Ever since I learnt it had an assembler I've been learning assembly and one day I just thought &amp;quot;Let's write a C compiler for this&amp;quot; (bad idea), but I went with it and that's what this talk is about my journey and findings along the way of writing a C compiler in python.&lt;/p&gt;
</summary></entry></feed>