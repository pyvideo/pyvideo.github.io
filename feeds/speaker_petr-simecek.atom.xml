<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_petr-simecek.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-06-08T00:00:00+00:00</updated><entry><title>Python alternatives to R/Shiny</title><link href="https://pyvideo.org/pycon-cz-2017/python-alternatives-to-rshiny.html" rel="alternate"></link><published>2017-06-08T00:00:00+00:00</published><updated>2017-06-08T00:00:00+00:00</updated><author><name>Karla Fejfarov√°</name></author><id>tag:pyvideo.org,2017-06-08:pycon-cz-2017/python-alternatives-to-rshiny.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Shiny is a web application framework for R that makes it easy to turn
analyses into interactive applications. When a user changes input
parameters using sliders, drop-down menus and text fields, the
changes are propagated through a reactivity graph into outputs like
plots, tables and summaries.&lt;/p&gt;
&lt;p&gt;While Python is generally more powerful and easier to use for a web
development than R, it lack a comprehensive Shiny-like framework.
Current tools are either too complex (Flask, Tornado) or too trivial
and lacking Shiny-like graph interactivity (Bokeh, Dash, Spyre,
Bowtie).&lt;/p&gt;
&lt;p&gt;We will demonstrate those tools on a web app that for a given face
find look-alike actors / actresses and scientists. Then we will show
how to implement Shiny-like reactivity in our Python module glossy.&lt;/p&gt;
</summary></entry></feed>