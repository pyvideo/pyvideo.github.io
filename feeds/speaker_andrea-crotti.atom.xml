<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_andrea-crotti.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-07-24T00:00:00+00:00</updated><entry><title>Emacs and shell as your best friends</title><link href="https://pyvideo.org/europython-2013/emacs-and-shell-as-your-best-friends.html" rel="alternate"></link><published>2013-07-05T00:00:00+00:00</published><updated>2013-07-05T00:00:00+00:00</updated><author><name>Andrea Crotti</name></author><id>tag:pyvideo.org,2013-07-05:europython-2013/emacs-and-shell-as-your-best-friends.html</id><summary type="html"></summary></entry><entry><title>TDD from scratch</title><link href="https://pyvideo.org/europython-2013/tdd-from-scratch.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Andrea Crotti</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/tdd-from-scratch.html</id><summary type="html"></summary><category term="best-practices"></category><category term="testing"></category><category term="tdd"></category></entry><entry><title>Decorators and context managers</title><link href="https://pyvideo.org/europython-2013/decorators-and-context-managers.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Andrea Crotti</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/decorators-and-context-managers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is about decorators and context managers, what they are, how
they really work and how you can benefit from them.&lt;/p&gt;
&lt;p&gt;I already gave this talk at Pycon UK 2012, which I will integrate with
new material and better examples.&lt;/p&gt;
</summary><category term="best-practices"></category></entry><entry><title>Metaprogramming, from decorators to macros</title><link href="https://pyvideo.org/europython-2014/metaprogramming-from-decorators-to-macros.html" rel="alternate"></link><published>2014-07-24T00:00:00+00:00</published><updated>2014-07-24T00:00:00+00:00</updated><author><name>andrea crotti</name></author><id>tag:pyvideo.org,2014-07-24:europython-2014/metaprogramming-from-decorators-to-macros.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Starting off with the meaning of metaprogramming we quickly dive into
the different ways Python allows this.&lt;/p&gt;
&lt;p&gt;First we talk about class and functions decorators, when decorators are
not enough anymore we'll explore the wonders of metaclasses.&lt;/p&gt;
&lt;p&gt;In the last part of the talk we'll talk about macros, first in Lisp and
then using the amazing &lt;a class="reference external" href="https://github.com/lihaoyi/macropy"&gt;macropy
library&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is a journey in the wonderful world of metaprogramming. We
start off with the meaning of metaprogramming and what it can be used
for.&lt;/p&gt;
&lt;p&gt;Then we look at what can be done in Python, introducing function and
class decorators. When decorators are not enough anymore we move to the
black magic of metaclasses, showing how we can implemement a simple
Django-like model with them.&lt;/p&gt;
&lt;p&gt;In the bonus track we'll talk about macros, as the ultimate
metaprogramming weapon, showing briefly how Lisp macros work and
introducing the amazing &lt;a class="reference external" href="https://github.com/lihaoyi/macropy"&gt;macropy
library&lt;/a&gt;.&lt;/p&gt;
</summary></entry></feed>