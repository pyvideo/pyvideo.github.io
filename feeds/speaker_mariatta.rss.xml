<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Mariatta</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 21 Sep 2024 00:00:00 +0000</lastBuildDate><item><title>PEP talk</title><link>https://pyvideo.org/north-bay-python-2023/pep-talk.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you use Python, chances are you've heard of PEP 8, the Python style guide.&lt;/p&gt;
&lt;p&gt;But do you know what PEPs really are? PEPs are more than just a style guide. A PEP stands for Python Enhancement Proposal. It's a proposal documentation for when you want to change the Python programming language in a big way, for example when you want to change the syntax of Python. Think of the addition of f-strings, the walrus operator, or the ExceptionGroup, those changes all started with a PEP.&lt;/p&gt;
&lt;p&gt;Let's have a PEP talk, where you can learn about the PEP process, what needs a PEP and what doesn't, and how you as community members can take part.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariatta</dc:creator><pubDate>Sun, 30 Jul 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-07-30:/north-bay-python-2023/pep-talk.html</guid><category>North Bay Python 2023</category></item><item><title>PEP 581 and PEP 588: Migrating CPython's Issue Tracker</title><link>https://pyvideo.org/pybay-2019/pep-581-and-pep-588-migrating-cpythons-issue-tracker.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk was presented at PyBay2019 - 4th annual Bay Area Regional Python conference. See pybay.com for more details about PyBay and click SHOW MORE for more information about this talk.&lt;/p&gt;
&lt;p&gt;Description
In 2017, CPython codebase was moved to GitHub from Mercurial, an effort that took more than three years of planning and lots of volunteer coordination. The move proved to be successful and well-appreciated. New contributors face less barriers when contributing to Python. Core developers are benefiting from personal assistants in the form of GitHub bots and automations. Can the workflow be even better? In this talk, we'll look into other problems in CPython's workflow: the issue tracker itself.&lt;/p&gt;
&lt;p&gt;The acceptance of PEP 581, by Python steering council means that another big workflow change is impending. Let's hear about some of the proposed plans on improving CPython's workflow, and learn how you can help and take part in this process.&lt;/p&gt;
&lt;p&gt;Abstract
Outline&lt;/p&gt;
&lt;p&gt;Brief introduction to core Python workflow. It's complicated. (5 minutes)
The issue tracker is called bpo (an instance of Roundup) &lt;a class="reference external" href="https://bugs.python.org"&gt;https://bugs.python.org&lt;/a&gt;
Codebase and pull requests are done in GitHub: github.com/python/cpython
Contributing guide: devguide.python.org
CPython discussions aren't normally not on GitHub, but on mailing list (python-dev, core-mentorship) and discourse discuss.python.org&lt;/p&gt;
&lt;p&gt;GitHub is a new thing for Python (3 minutes)&lt;/p&gt;
&lt;p&gt;PEP 512: Migrating source code from Mercurial to GitHub
Some pain points: core devs and Python release managers have to learn and adjust to a workflow. (it was not an overnight success)
On the good side: it opens up oppurtunities to contribute to core workflow improvements, and still making big impact: devguide improvements, bots(bedevere, and miss-islington), toolings like blurb and cherry-picker. Contributing to Python is easier on GitHub.&lt;/p&gt;
&lt;p&gt;Should I stay or should I go? (3 minutes)&lt;/p&gt;
&lt;p&gt;bpo works, but it is not up to date with recent advancements: no emoji support, unintuitive UI, not mobile-friendly.
bpo's development is hindered and stagnated.
we're losing potential contributors just because the tracker is bpo.
lack of existing API from bpo making it hard to automate things.&lt;/p&gt;
&lt;p&gt;Let's Use GitHub Issues already! (7 minutes)&lt;/p&gt;
&lt;p&gt;It is not as simple as &amp;quot;just copy over a bunch of tickets to GitHub&amp;quot;
Some of us fear the uncertainties: GitHub is not open source, corporation owned, it could one day disappear without notice?
What we're already doing: daily backup of GitHub data. starting to use CLA Assistant. We've asked GitHub to grant us early access to the &amp;quot;issue triage&amp;quot;.&lt;/p&gt;
&lt;p&gt;What we still need help with (7 minutes) -- A professional project manager, similar to how PyPI/Warehouse project was handled. Steering council has opened this discussion with The PSF. -- We will have a &amp;quot;trial&amp;quot; issue tracker repo. We need to port 100s of tickets from bpo to GitHub. We need experiments and feedback. -- You can help update Devguide on how to use GitHub issue tracker and how to triage/add labels etc. -- We need more people to help triage issues. We've been able to grant bug triage permission more easily than granting commit privilege. Hear Emily's talk on being a core developer. -- If you have other ideas of improvements: write to python-dev, Use PEP 581 or PEP 588 in subject (to get my attention) -- Donate to The PSF. You can now donate directly for CPython's development: &lt;a class="reference external" href="https://www.python.org/psf/donations/python-dev/"&gt;https://www.python.org/psf/donations/python-dev/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Original slides: &lt;a class="reference external" href="https://t.ly/gLZ9W"&gt;https://t.ly/gLZ9W&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sponsor Acknowledgement
This and other PyBay2019 videos are via the help of our media partner AlphaVoice (&lt;a class="reference external" href="https://www.alphavoice.io/"&gt;https://www.alphavoice.io/&lt;/a&gt;)!&lt;/p&gt;
&lt;p&gt;#pybay #pybay2019 #python #python3&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariatta</dc:creator><pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-17:/pybay-2019/pep-581-and-pep-588-migrating-cpythons-issue-tracker.html</guid><category>PyBay 2019</category></item><item><title>F-Strings!</title><link>https://pyvideo.org/pybay-2024/f-strings.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;By now we hope you've been using f-strings, but do you know that there's more to it than sticking variables into curly braces?&lt;/p&gt;
&lt;p&gt;In this talk, we'll go through the useful features of f-strings, from formatting to debugging. We'll also share how f-strings have been improved since Python 3.12. Watch this talk so you don't miss out!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariatta</dc:creator><pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-09-21:/pybay-2024/f-strings.html</guid><category>PyBay 2024</category></item><item><title>Lightning Talks (PyCascades 2023)</title><link>https://pyvideo.org/pycascades-2023/lightning-talks-pycascades-2023.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Jim De la Hunt
Lightning Talk: Global domain names and email addresses, or, email me at जिम&amp;#64;डाटामेल.भारत . Alerting people that non-ASCII domain names are in use and spreading. Our code should be able to handle them. Python tools and online resources to get domain names and email right.&lt;/p&gt;
&lt;p&gt;Speaker: Wes Lord
Lightning Talk: The surprising alternative to git rebase (it's git reset)&lt;/p&gt;
&lt;p&gt;Speaker: Sam Edwardes
Lightning Talk: How to do &amp;quot;everything&amp;quot; with Pydantic. I want walk the audience through using Pydantic to do a few really cool things including: (1) parsing JSON into python objects, (2) validating data, (3) refactoring your code, (4) talking to a SQL database&lt;/p&gt;
&lt;p&gt;Speaker: Tony Fast
Lightning Talk: Important digital accessibility language, standards, and tools for designing inclusive technology . Attendees will learn community and industry standards for auditing and understanding web content accessibility guidelines.&lt;/p&gt;
&lt;p&gt;Speaker: Mariatta Wijaya
Lightning Talk: PyCon US 2023: the 20 years celebration special. I will tell attendees about info about PyCon US 2023: registration, schedule, venue, etc. While this year's travel grant application has closed, it's still worth knowing that it exists and I will share how attendees can stay updated on PyCon US news so they can apply for next year's travel grants. I'll also share how attending PyCon has impacted my personal growth and career and opens up opportunities, and I would love for more people to have the same experience by attending PyCon US.&lt;/p&gt;
&lt;p&gt;Speaker: Robin Reynolds-Haertle
Lightning Talk: Yellowstone Codera - Python programming puzzles with a Yellowstone theme&lt;/p&gt;
&lt;p&gt;Speaker: Santiago Soler
Lightning Talk: During this lightning talk I'll present Pooch, an open-source Python library for downloading and catching data files from the web. It provides easy ways to download data files from different protocols, cache it locally, check their integrity through checksums, and more. It also provides tools for downloading collections of files, useful for managing sample datasets for scientific and data-processing Python packages. Currently Pooch is being used by well-known libraries like SciPy, scikit-learn, Xarray and scikit-image, amongst others.&lt;/p&gt;
&lt;p&gt;Speaker: Andres Pineda
Lightning Talk: Invite to Pycon Latam&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jim De la Hunt</dc:creator><pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-03-19:/pycascades-2023/lightning-talks-pycascades-2023.html</guid><category>PyCascades 2023</category></item><item><title>PyLadies Panel: Talking about experiences and roles within the Python community</title><link>https://pyvideo.org/pycascades-2024/pyladies-panel-talking-about-experiences-and-roles-within-the-python-community.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Panelists: Christy Heaton, Mariatta, Lynn Root, Luciana Abud&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lynn Root</dc:creator><pubDate>Sun, 07 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-07:/pycascades-2024/pyladies-panel-talking-about-experiences-and-roles-within-the-python-community.html</guid><category>PyCascades 2024</category></item><item><title>Oops! I Became an Open Source Maintainer! 😱</title><link>https://pyvideo.org/pycon-au-2020/oops-i-became-an-open-source-maintainer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mariatta&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/JZW83Q"&gt;https://2020.pycon.org.au/program/JZW83Q&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 09:15:00 2020 at Obvious&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariatta</dc:creator><pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-09-05:/pycon-au-2020/oops-i-became-an-open-source-maintainer.html</guid><category>PyCon AU 2020</category><category>Mariatta</category><category>PyCon</category><category>PyConAU</category><category>PyConline</category><category>Python</category><category>pyconau</category><category>pyconau_2020</category></item><item><title>Don't be a robot, build the bot</title><link>https://pyvideo.org/pycon-us-2019/dont-be-a-robot-build-the-bot.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Managing a large open source project like CPython is no easy task. Learn
how the Python core team automated their GitHub workflow with bots,
making it easier for maintainers and contributors to collaborate
together. Even if you’re not managing a large project, you can still
build your own bot! Hear some ideas on what you can automate on GitHub
and personalize your bot based on your own workflow. All you need is
Python. Don’t be a robot; build the bot.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariatta</dc:creator><pubDate>Fri, 03 May 2019 10:50:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-03:/pycon-us-2019/dont-be-a-robot-build-the-bot.html</guid><category>PyCon US 2019</category><category>talk</category></item><item><title>Hands-on Intro to aiohttp</title><link>https://pyvideo.org/pycon-us-2019/hands-on-intro-to-aiohttp.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Asyncio is a relatively new feature in Python, with the &lt;tt class="docutils literal"&gt;async&lt;/tt&gt; and
&lt;tt class="docutils literal"&gt;await&lt;/tt&gt; syntaxes only recently became proper keywords in Python 3.7.
Asyncio allows you to write asynchronous programs in Python. In this
tutorial, we’ll introduce you to an asyncio web library called
&lt;tt class="docutils literal"&gt;aiohttp&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;aiohttp&lt;/tt&gt; is a library for building web client and server using Python
and asyncio. We’ll introduce you to several key features of &lt;tt class="docutils literal"&gt;aiohttp&lt;/tt&gt;;
including routing, session handling, templating, using middlewares,
connecting to database, and making HTTP GET/POST requests. We’ll provide
best practises in building your &lt;tt class="docutils literal"&gt;aiohttp&lt;/tt&gt; application, as well as how
to write tests for your application.&lt;/p&gt;
&lt;p&gt;We’ll use all new Python 3.7 features to build web services with asyncio
and aiohttp.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariatta</dc:creator><pubDate>Thu, 02 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:/pycon-us-2019/hands-on-intro-to-aiohttp.html</guid><category>PyCon US 2019</category><category>tutorial</category></item><item><title>9 Years of PyLadies: Lessons Learned and What Comes Next</title><link>https://pyvideo.org/pycon-us-2020/9-years-of-pyladies-lessons-learned-and-what-comes-next.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lorena Mesa</dc:creator><pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-04-17:/pycon-us-2020/9-years-of-pyladies-lessons-learned-and-what-comes-next.html</guid><category>PyCon US 2020</category></item><item><title>Say it with Bots!</title><link>https://pyvideo.org/pycon-us-2020/say-it-with-bots.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariatta</dc:creator><pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-04-17:/pycon-us-2020/say-it-with-bots.html</guid><category>PyCon US 2020</category><category>tutorial</category></item><item><title>Writing Documentation with Sphinx and reStructuredText</title><link>https://pyvideo.org/pycon-us-2021/writing-documentation-with-sphinx-and-restructuredtext.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The success of Python and open source libraries is not separable from the availability of good documentation. Reading documentation is one of the first things a user of the open source library has to do.&lt;/p&gt;
&lt;p&gt;In the Python open source community, documentation is often written using reStructuredText markup language, and built with Sphinx. The official Python documentation and Python Enhancements Proposals (PEPs) are all written using reStructuredText. Being able to write documentation using reStructuredText becomes a necessary skill for any aspiring Python open source contributors and maintainers.&lt;/p&gt;
&lt;p&gt;Yet, reStructuredText itself can be seen as a barrier into contributing to open source, since it is not as straightforward as Markdown. Compared to Markdown, reStructuredText is not as widely adopted outside of the Python community. Don’t let this discourage you! Let’s break down this barrier! reStructuredText is not as complicated as you might think. You can learn it!&lt;/p&gt;
&lt;p&gt;In this tutorial, we'll go through various useful features of reStructuredText. You will learn how to create and build a documentation project using Sphinx. Not only will you learn a new skill, you can also confidently start contributing to open source projects by helping to improve their documentation.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://sphinx-intro-tutorial.readthedocs.io/"&gt;https://sphinx-intro-tutorial.readthedocs.io/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariatta</dc:creator><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-05-14:/pycon-us-2021/writing-documentation-with-sphinx-and-restructuredtext.html</guid><category>PyCon US 2021</category></item><item><title>Acknowledging Women’s Contributions in the Python Community Through Podcast</title><link>https://pyvideo.org/pycon-us-2024/acknowledging-womens-contributions-in-the-python-community-through-podcast.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python community has been making efforts in improving the diversity
and representation among its members. There are examples of success
stories such as PyCon US Charlas, PyLadies, Djangonaut, and Django
Girls. Yet in the Python podcast community, women are still
underrepresented, making up only 17% of invited guests among the popular
podcast series. Being a guest in a podcast is a privilege, and an
opportunity to influence the Python community. There are many women and
underrepresented group members who have made impactful contributions to
the Python community globally, and they deserve the recognition and to
be heard by the rest of us. Disheartened by the lack of representation
by women on Python podcasts, and inspired by others who have shown us
how diversity in the community can be improved through intentionality,
we decided to start a podcast with a goal to highlight their voices so
that they could receive the recognition they deserve. In this talk,earn
about them, and about our podcast series. We’ll also share how you can
further help out cause in improving representation and diversity in the
Python community.&lt;/p&gt;
&lt;div class="section" id="goal"&gt;
&lt;h4&gt;Goal&lt;/h4&gt;
&lt;p&gt;To raise awareness of the underrepresentation of certain groups,
especially women. To acknowledge the progress made by the Python
community and what can be done further to continue the improvement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="target-audience"&gt;
&lt;h4&gt;Target Audience&lt;/h4&gt;
&lt;p&gt;Anyone who cares about the diversity and inclusion progression in the
Python community. Community leaders who want to be allies.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cheuk Ting Ho</dc:creator><pubDate>Fri, 17 May 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-05-17:/pycon-us-2024/acknowledging-womens-contributions-in-the-python-community-through-podcast.html</guid><category>PyCon US 2024</category></item><item><title>Intro to Unit Testing and Continuous Integration</title><link>https://pyvideo.org/pyohio-2022/intro-to-unit-testing-and-continuous-integration.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Having unit tests and continuous integration (CI) as part of your
development are considered best practises. But how do these things work?
In this talk, we will cover the benefits of writing unit tests and how
to get started with it in Python. Then, we'll step it up running tests
as part CI. And that's not all! CI is not just about running tests, but
for other things as well, like code quality checks, and even building
and generating documentation.&lt;/p&gt;
&lt;p&gt;Presentation slides:
&lt;a class="reference external" href="https://speakerdeck.com/mariatta/intro-to-unit-testing-and-continuous-integration-20264b4c-2777-4736-9639-5810098da5a0"&gt;https://speakerdeck.com/mariatta/intro-to-unit-testing-and-continuous-integration-20264b4c-2777-4736-9639-5810098da5a0&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariatta</dc:creator><pubDate>Sat, 30 Jul 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-07-30:/pyohio-2022/intro-to-unit-testing-and-continuous-integration.html</guid><category>PyOhio 2022</category></item><item><title>F-strings!</title><link>https://pyvideo.org/pyohio-2023/f-strings.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;By now we hope you've been using f-strings, but do you know that there's
more to it than sticking variables into curly braces?&lt;/p&gt;
&lt;p&gt;In this talk, we'll go through the useful features of f-strings, from
formatting to debugging. We'll also share how f-strings have been
improved since Python 3.12. Watch this talk so you don't miss out!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariatta</dc:creator><pubDate>Sat, 16 Dec 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-12-16:/pyohio-2023/f-strings.html</guid><category>PyOhio 2023</category></item><item><title>Keynote - Mariatta</title><link>https://pyvideo.org/pyohio-2024/keynote-mariatta.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mariatta presents our Saturday afternoon keynote.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariatta</dc:creator><pubDate>Sat, 27 Jul 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-07-27:/pyohio-2024/keynote-mariatta.html</guid><category>PyOhio 2024</category></item></channel></rss>