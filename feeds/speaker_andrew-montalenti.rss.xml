<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 12 Apr 2015 00:00:00 +0000</lastBuildDate><item><title>Rapid Web Prototyping with Lightweight Tools</title><link>https://pyvideo.org/pycon-us-2013/rapid-web-prototyping-with-lightweight-tools.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Tutorial participants will build a real-world web application rapidly
using lightweight tools, such as Flask, Jinja2, MongoDB, and Twitter
Bootstrap. By building the apps from scratch using tools whose size
matches the task at hand, participants will be able to churn out working
applications by the end of the tutorial that can solidify their Python
and modern web dev knowledge.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Montalenti</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-03-13:pycon-us-2013/rapid-web-prototyping-with-lightweight-tools.html</guid><category>tutorial</category></item><item><title>streamparse: real-time streams with Python and Apache Storm</title><link>https://pyvideo.org/pycon-us-2015/streamparse-real-time-streams-with-python-and-ap.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Real-time streams are everywhere, but does Python have a good way of
processing them? Until recently, there were no good options. A new open
source project, streamparse, makes working with real-time data streams
easy for Pythonistas. If you have ever wondered how to process 10,000
data tuples per second with Python -- while maintaining high
availability and low latency -- this talk is for you.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Montalenti</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-12:pycon-us-2015/streamparse-real-time-streams-with-python-and-ap.html</guid></item></channel></rss>