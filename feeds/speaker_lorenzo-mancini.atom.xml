<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_lorenzo-mancini.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2011-07-20T00:00:00+00:00</updated><entry><title>Developing cutting-edge applications with PyQt</title><link href="https://pyvideo.org/europython-2011/developing-cutting-edge-applications-with-pyqt.html" rel="alternate"></link><published>2011-07-20T00:00:00+00:00</published><updated>2011-07-20T00:00:00+00:00</updated><author><name>Lorenzo Mancini</name></author><id>tag:pyvideo.org,2011-07-20:europython-2011/developing-cutting-edge-applications-with-pyqt.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Lorenzo Mancini,Matteo Bertozzi - 23 June 2011 in
&amp;quot;Training Pizza Margherita &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;(Presented with Matteo Bertozzi)&lt;/p&gt;
&lt;p&gt;Python's high development speed and Qt's gargantuan feature set allow
for comfortable development of complex desktop applications. Still, what
does one need to do to best leverage this awesome combination? And more
importantly, what crucial advantages exist to decide its adoption in
favour of more traditional tecniques?&lt;/p&gt;
&lt;p&gt;During this training, we'll start from a white canvas and show how to
develop a desktop application using the best tools Qt offers. You'll
learn how to compose complex GUIs from basic building blocks, and how to
use QPainter, one of the most advanced 2D painting systems in the open
source world. Qt's Webkit integration will be discussed, along with the
recent Qt Quick technology, which allows one to create smooth and fluid
user interfaces. Qt's solution to common deployment problems, like
handling a serious translation workflow, will be presented. At the end,
we'll package our PyQt application so it's ready to be distributed for
download.&lt;/p&gt;
&lt;p&gt;Walk away with a sound understanding of why you should choose PyQt for
your next desktop project.&lt;/p&gt;
</summary><category term="deployment"></category><category term="distributed"></category><category term="pyqt"></category><category term="qt"></category></entry><entry><title>Realizzare un emulatore di videogiochi</title><link href="https://pyvideo.org/europython-2011/realizzare-un-emulatore-di-videogiochi.html" rel="alternate"></link><published>2011-07-13T00:00:00+00:00</published><updated>2011-07-13T00:00:00+00:00</updated><author><name>Lorenzo Mancini</name></author><id>tag:pyvideo.org,2011-07-13:europython-2011/realizzare-un-emulatore-di-videogiochi.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Lorenzo Mancini - 22 June 2011 in &amp;quot;Track Italiana Big
Mac &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lo sviluppo di un emulatore di videogiochi è tra le cose più divertenti
che un programmatore può fare davanti ad un monitor.&lt;/p&gt;
&lt;p&gt;Durante questo talk mostrerò come emulare un sistema relativamente
semplice, il Chip-8, realizzando tutto l'emulatore in Python ed
appoggiandomi solo a pygame come libreria grafica.&lt;/p&gt;
&lt;p&gt;Al termine del talk avrete imparato quali sono i concetti base necessari
per scrivere un emulatore, e non vedrete l'ora di realizzarne uno per il
vostro sistema preferito.&lt;/p&gt;
</summary><category term="pygame"></category></entry></feed>