<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_omer-nevo.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-06-05T00:00:00+00:00</updated><entry><title>Game Theory in Python</title><link href="https://pyvideo.org/pycon-israel-2018/game-theory-in-python.html" rel="alternate"></link><published>2018-06-05T00:00:00+00:00</published><updated>2018-06-05T00:00:00+00:00</updated><author><name>Omer Nevo</name></author><id>tag:pyvideo.org,2018-06-05:pycon-israel-2018/game-theory-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Game theory has vast applications including international relations, economics, psychology and computer science. In this lecture we show how to create games and strategies and test or improve them. We'll start out very simply, with easy strategies for the prisoner's dilemma, and work our way up to using evolutionary heuristics to find optimal strategies for complex situations. It's an incredibly cool use of Python, and most people don't realize how easy it is to create things that sound relatively complex.&lt;/p&gt;
</summary><category term="game theory"></category></entry><entry><title>Poetry in Python: Using Markov Chains to Generate Texts</title><link href="https://pyvideo.org/pycon-israel-2016/poetry-in-python-using-markov-chains-to-generate-texts.html" rel="alternate"></link><published>2016-10-09T00:00:00+00:00</published><updated>2016-10-09T00:00:00+00:00</updated><author><name>Omer Nevo</name></author><id>tag:pyvideo.org,2016-10-09:pycon-israel-2016/poetry-in-python-using-markov-chains-to-generate-texts.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Markov chains are an incredibly simple way to understand text and speech. In this talk we'll implement Markov chains, train them on different data and try to let python create new texts on it's own. Let's see how well this basic method does in creating texts that simulate poetry, famous books and other interesting things. The results might surprise you.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="http://il.pycon.org/2016/static/sessions/omer-nevo.pdf"&gt;http://il.pycon.org/2016/static/sessions/omer-nevo.pdf&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>