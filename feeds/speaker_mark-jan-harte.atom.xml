<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_mark-jan-harte.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-04-08T00:00:00+00:00</updated><entry><title>Training a TensorFlow model to detect lung nodules on CT scans</title><link href="https://pyvideo.org/pydata-amsterdam-2017/training-a-tensorflow-model-to-detect-lung-nodules-on-ct-scans.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Mark-Jan Harte</name></author><id>tag:pyvideo.org,2017-04-08:pydata-amsterdam-2017/training-a-tensorflow-model-to-detect-lung-nodules-on-ct-scans.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Amsterdam 2017&lt;/p&gt;
&lt;p&gt;To detect early-stage lung cancer, radiologists make CT scans which they interpret to find potential abnormalities. Deep learning can be applied to automate this process. In this talk, we will describe the Python-based training pipeline for a TensorFlow model to detect these abnormalities.&lt;/p&gt;
&lt;p&gt;Finding a nodule of a few pixels in size is a challenge in a 3D volume of 200512512 voxels. To solve this, a two-stage deep learning model is defined to generate potential nodule locations, and to classify those candidates. The pipeline is written in Python and addresses a number of challenges regarding the size of the 3D dataset, normalization, annotation and labeling, model design and validation.&lt;/p&gt;
</summary></entry></feed>