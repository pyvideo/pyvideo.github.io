<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Phillip Cloud</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 17 May 2024 00:00:00 +0000</lastBuildDate><item><title>Ibis: A fast, flexible, and portable tool for data analytics</title><link>https://pyvideo.org/euroscipy-2023/ibis-a-fast-flexible-and-portable-tool-for-data-analytics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ibis provides a common dataframe-like interface to many popular databases and analytics tools (BigQuery, Snowflake, Spark, DuckDB, …). This lets users analyze data using the same consistent API, regardless of which backend they’re using, and without ever having to learn SQL. No more pains rewriting pandas code to something else when you run into performance issues; write your code once using Ibis and run it on any supported backend. In this tutorial users will get experience writing queries using Ibis on a number of local and remote database engines.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gil Forsyth</dc:creator><pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-08-14:/euroscipy-2023/ibis-a-fast-flexible-and-portable-tool-for-data-analytics.html</guid><category>EuroSciPy 2023</category></item><item><title>Ibis: Because SQL is everywhere but you don't want to use it</title><link>https://pyvideo.org/euroscipy-2023/ibis-because-sql-is-everywhere-but-you-dont-want-to-use-it.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Instead, come and learn about Ibis! It offers a dataframe-like interface to construct concise and composable queries and then executes them against a wide variety of backends (Postgres, DuckDB, Spark, Snowflake, BigQuery, you name it.).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gil Forsyth</dc:creator><pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-08-14:/euroscipy-2023/ibis-because-sql-is-everywhere-but-you-dont-want-to-use-it.html</guid><category>EuroSciPy 2023</category></item><item><title>Porque SQL está en todas partes.</title><link>https://pyvideo.org/pycon-us-2024/porque-sql-esta-en-todas-partes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nos encanta usar Python en nuestro trabajo, pero lamentablemente la base
de datos de tu empresa donde ejecutas tus ETL (extracción,
transformación y carga) te lo previene. Muy probablemente tu base de
datos hable SQL, ¿Por qué? Porque SQL está en todos lados, ha estado
presente durante un largo tiempo, está estandarizado y es conciso.&lt;/p&gt;
&lt;p&gt;¿Pero realmente está estandarizado? ¿Y siempre es conciso? ¡No! ¿Aún
necesitamos usarlo? ¡Probablemente sí! ¿Qué puede hacer una persona que
trabaja con datos? ¿SQL con string-templating (plantilla de cadena de
caracteres)? print(f&amp;quot;Ese camino conduce a {locura}}&amp;quot;.)&lt;/p&gt;
&lt;p&gt;Mejor, ¡ven y aprende sobre Ibis!&lt;/p&gt;
&lt;p&gt;Ibis es una biblioteca completamente en Python que ofrece una una
interfaz similar a aquellas con estructuras de datos tabulares (data
frames), que te permite construir queries concisas y componibles que se
pueden ejecutar en una amplia variedad de backends (SQLite, DuckDB,
Postgres, Spark, Clickhouse, Snowflake, BigQuery, ¡y más!).&lt;/p&gt;
&lt;p&gt;¿Alguna vez has tenido que traducir un prototipo de Pandas a PySpark
para ejecutarlo en &amp;quot;datos reales&amp;quot;?&lt;/p&gt;
&lt;p&gt;¿O descargar un enorme archivo parquet porque los datos en la fuente son
el resultado de 500 líneas de SQL denso y tienes miedo de tocarlo?&lt;/p&gt;
&lt;p&gt;¿Quieres probar esta cosa llamada &amp;quot;DuckDB&amp;quot; pero no quieres aprender SQL?&lt;/p&gt;
&lt;p&gt;¿Tienes una relación de amor/odio con SQL porque te permite hacer tu
trabajo, pero piensas que debe haber una mejor manera?&lt;/p&gt;
&lt;p&gt;¿Te has quedado atascado manteniendo un creciente y amorfo conjunto de
SQL con plantillas que solo se suponía que se usaría para esa
demostración?&lt;/p&gt;
&lt;p&gt;Bueno, si eres un ingeniero de datos, científico de datos, entusiasta de
los datos o cualquier cosa relacionada con los datos, ¡ven y únete a
nosotros para descubrir lo que Ibis puede hacer por ti!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Phillip Cloud</dc:creator><pubDate>Fri, 17 May 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-05-17:/pycon-us-2024/porque-sql-esta-en-todas-partes.html</guid><category>PyCon US 2024</category></item><item><title>Introduction to Ibis: blazing fast analytics with DuckDB, Polars, Snowflake, and more, from the comfort of your Python repl.</title><link>https://pyvideo.org/pycon-us-2024/introduction-to-ibis-blazing-fast-analytics-with-duckdb-polars-snowflake-and-more-from-the-comfort-of-your-python-repl.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tabular data is ubiquitous, and pandas has been the de facto tool in
Python for analyzing it. However, as data size scales, analysis using
pandas may become untenable. Luckily, modern analytical databases (like
DuckDB) are able to analyze this same tabular data, but perform
orders-of-magnitude faster than pandas, all while using less memory.
Many of these systems only provide a SQL interface though; something far
different from pandas’ dataframe interface, requiring a rewrite of your
analysis code.&lt;/p&gt;
&lt;p&gt;This is where Ibis comes in. Ibis provides a common dataframe interface
to many popular databases and analytics tools (BigQuery, Snowflake,
Spark, DuckDB, …). This lets users analyze data using the same
consistent API, regardless of which backend they’re using, and without
ever having to learn SQL (but you can use SQL if you want to!). No more
pains rewriting pandas code to something else when you run into
performance issues; write your code once using Ibis and run it on any
supported backend.&lt;/p&gt;
&lt;p&gt;In this tutorial we’ll cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The basic operations of Ibis (&lt;tt class="docutils literal"&gt;select&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;filter&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;group_by&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;order_by&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;join&lt;/tt&gt;, and &lt;tt class="docutils literal"&gt;aggregate&lt;/tt&gt;), and how these operations
may be composed to form more complicated queries.&lt;/li&gt;
&lt;li&gt;How Ibis may be used on a number of different local and remote
backend engines to execute the same queries on different systems.&lt;/li&gt;
&lt;li&gt;The tradeoffs of different database engines, and recommendations for
how to choose the best tool for the job.&lt;/li&gt;
&lt;li&gt;How Ibis integrates into the larger Python data ecosystem, including
tools like Scikit-Learn, Matplotlib, PyArrow, pandas, Altair, and
VegaFusion.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a hands-on tutorial, with numerous examples to get your hands
dirty. Participants should ideally have some experience using Python and
pandas, but no SQL experience is necessary.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gil Forsyth</dc:creator><pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-05-15:/pycon-us-2024/introduction-to-ibis-blazing-fast-analytics-with-duckdb-polars-snowflake-and-more-from-the-comfort-of-your-python-repl.html</guid><category>PyCon US 2024</category></item><item><title>Phillip Cloud - Blaze in the Real World</title><link>https://pyvideo.org/pydata-dallas-2015/phillip-cloud-blaze-in-the-real-world.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Phillip Cloud</dc:creator><pubDate>Fri, 24 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-24:/pydata-dallas-2015/phillip-cloud-blaze-in-the-real-world.html</guid><category>PyData Dallas 2015</category></item><item><title>Phillip Cloud - Driving Blaze in the Real World of Data Land Mines</title><link>https://pyvideo.org/pydata-new-york-city-2014/phillip-cloud-driving-blaze-in-the-real-world-of-data-land-mines.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Phillip Cloud</dc:creator><pubDate>Sat, 22 Nov 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-11-22:/pydata-new-york-city-2014/phillip-cloud-driving-blaze-in-the-real-world-of-data-land-mines.html</guid><category>PyData New York City 2014</category></item><item><title>Run Numba functions in SQLite: WTF?</title><link>https://pyvideo.org/pydata-new-york-city-2018/run-numba-functions-in-sqlite-wtf.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Phillip Cloud</dc:creator><pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-17:/pydata-new-york-city-2018/run-numba-functions-in-sqlite-wtf.html</guid><category>PyData New York City 2018</category></item><item><title>Blaze and Odo</title><link>https://pyvideo.org/pydata-seattle-2015/blaze-and-odo.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Blaze and Odo are designed to help domain experts answer questions more quickly. They work together by providing a symbolic computation layer (blaze) alongside a graph of data converters (odo) that enables users to move seamlessly between formats in the most performant way. We discuss both libraries in the context of PyData and emerging data analytics technologies.&lt;/p&gt;
&lt;p&gt;Blaze separates expressions from computation. Odo moves complex data resources from point A to point B. Together Blaze and Odo smooth over many of the complexities of computing with large data warehouse technologies like Redshift, Impala and HDFS. Because we designed Blaze and Odo with PyData in mind they also integrate well with pandas, numpy, and a host of other foundational libraries. We show examples of both Blaze and Odo in action and discuss the design behind each library.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="http://slides.com/phillipcloud/odo-5"&gt;http://slides.com/phillipcloud/odo-5&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Phillip Cloud</dc:creator><pubDate>Sat, 25 Jul 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-07-25:/pydata-seattle-2015/blaze-and-odo.html</guid><category>PyData Seattle 2015</category></item><item><title>Blaze + Odo</title><link>https://pyvideo.org/scipy-2015/blaze-odo.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Phillip Cloud</dc:creator><pubDate>Thu, 09 Jul 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-07-09:/scipy-2015/blaze-odo.html</guid><category>SciPy 2015</category></item><item><title>SciPy Tools Plenary Day 3</title><link>https://pyvideo.org/scipy-2023/scipy-tools-plenary-day-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SciPy is a community dedicated to the advancement of scientific computing through open source Python software for mathematics, science, and engineering. The annual SciPy Conference allows participants from all types of organizations to showcase their latest projects, learn from skilled users and developers, and collaborate on code development. SciPy is organized by NumFOCUS, a 501(c)(3) nonprofit organization that promotes open source scientific computing.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Nunez-Iglesias</dc:creator><pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-07-10:/scipy-2023/scipy-tools-plenary-day-3.html</guid><category>SciPy 2023</category></item></channel></rss>