<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_tony-yu.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-07-09T00:00:00+00:00</updated><entry><title>Image analysis in Python with scipy and scikit image 4</title><link href="https://pyvideo.org/scipy-2014/image-analysis-in-python-with-scipy-and-scikit-im.html" rel="alternate"></link><published>2014-07-09T00:00:00+00:00</published><updated>2014-07-09T00:00:00+00:00</updated><author><name>Juan Nunez-Iglesias</name></author><id>tag:pyvideo.org,2014-07-09:scipy-2014/image-analysis-in-python-with-scipy-and-scikit-im.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;From telescopes to satellite cameras to electron microscopes, scientists
are producing more images than they can manually inspect. This tutorial
will introduce automated image analysis using the &amp;quot;images as numpy
arrays&amp;quot; abstraction, run through various fundamental image analysis
operations (filters, morphology, segmentation), and finally complete one
or two more advanced real-world examples.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Image analysis is central to a boggling number of scientific endeavors.
Google needs it for their self-driving cars and to match satellite
imagery and mapping data. Neuroscientists need it to understand the
brain. NASA needs it to &lt;a class="reference external" href="http://www.bbc.co.uk/news/technology-26528516"&gt;map
asteroids&lt;/a&gt; and save
the human race. It is, however, a relatively underdeveloped area of
scientific computing. Attendees will leave this tutorial confident of
their ability to extract information from their images in Python.&lt;/p&gt;
&lt;p&gt;Attendees will need a working knowledge of numpy arrays, but no further
knowledge of images or voxels or other doodads. After a brief
introduction to the idea that images are just arrays and vice versa, we
will introduce fundamental image analysis operations: filters, which can
be used to extract features such as edges, corners, and spots in an
image; morphology, inferring shape properties by modifying the image
through local operations; and segmentation, the division of an image
into meaningful regions.&lt;/p&gt;
&lt;p&gt;We will then combine all these concepts and apply them to several
real-world examples of scientific image analysis: given an image of a
pothole, measure its size in pixels compare the fluorescence intensity
of a protein of interest in the centromeres vs the rest of the
chromosome. observe the distribution of cells invading a wound site&lt;/p&gt;
&lt;p&gt;Attendees will also be encouraged to bring their own image analysis
problems to the session for guidance, and, if time allows, we will cover
more advanced topics such as image registration and stitching.&lt;/p&gt;
&lt;p&gt;The entire tutorial will be coordinated with the IPython notebook, with
various code cells left blank for attendees to fill in as exercises.&lt;/p&gt;
</summary><category term="scikit"></category></entry><entry><title>Image analysis in Python with scipy and scikit image, Part 1</title><link href="https://pyvideo.org/scipy-2014/image-analysis-with-scikit-image-part-1.html" rel="alternate"></link><published>2014-07-09T00:00:00+00:00</published><updated>2014-07-09T00:00:00+00:00</updated><author><name>Juan Nunez-Iglesias</name></author><id>tag:pyvideo.org,2014-07-09:scipy-2014/image-analysis-with-scikit-image-part-1.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;From telescopes to satellite cameras to electron microscopes, scientists
are producing more images than they can manually inspect. This tutorial
will introduce automated image analysis using the &amp;quot;images as numpy
arrays&amp;quot; abstraction, run through various fundamental image analysis
operations (filters, morphology, segmentation), and finally complete one
or two more advanced real-world examples.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Image analysis is central to a boggling number of scientific endeavors.
Google needs it for their self-driving cars and to match satellite
imagery and mapping data. Neuroscientists need it to understand the
brain. NASA needs it to &lt;a class="reference external" href="http://www.bbc.co.uk/news/technology-26528516"&gt;map
asteroids&lt;/a&gt; and save
the human race. It is, however, a relatively underdeveloped area of
scientific computing. Attendees will leave this tutorial confident of
their ability to extract information from their images in Python.&lt;/p&gt;
&lt;p&gt;Attendees will need a working knowledge of numpy arrays, but no further
knowledge of images or voxels or other doodads. After a brief
introduction to the idea that images are just arrays and vice versa, we
will introduce fundamental image analysis operations: filters, which can
be used to extract features such as edges, corners, and spots in an
image; morphology, inferring shape properties by modifying the image
through local operations; and segmentation, the division of an image
into meaningful regions.&lt;/p&gt;
&lt;p&gt;We will then combine all these concepts and apply them to several
real-world examples of scientific image analysis: given an image of a
pothole, measure its size in pixels compare the fluorescence intensity
of a protein of interest in the centromeres vs the rest of the
chromosome. observe the distribution of cells invading a wound site&lt;/p&gt;
&lt;p&gt;Attendees will also be encouraged to bring their own image analysis
problems to the session for guidance, and, if time allows, we will cover
more advanced topics such as image registration and stitching.&lt;/p&gt;
&lt;p&gt;The entire tutorial will be coordinated with the IPython notebook, with
various code cells left blank for attendees to fill in as exercises.&lt;/p&gt;
</summary><category term="scikit"></category></entry><entry><title>Image analysis in Python with scipy and scikit image, Part 2</title><link href="https://pyvideo.org/scipy-2014/image-analysis-with-scikit-image-part-2.html" rel="alternate"></link><published>2014-07-09T00:00:00+00:00</published><updated>2014-07-09T00:00:00+00:00</updated><author><name>Juan Nunez-Iglesias</name></author><id>tag:pyvideo.org,2014-07-09:scipy-2014/image-analysis-with-scikit-image-part-2.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;From telescopes to satellite cameras to electron microscopes, scientists
are producing more images than they can manually inspect. This tutorial
will introduce automated image analysis using the &amp;quot;images as numpy
arrays&amp;quot; abstraction, run through various fundamental image analysis
operations (filters, morphology, segmentation), and finally complete one
or two more advanced real-world examples.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Image analysis is central to a boggling number of scientific endeavors.
Google needs it for their self-driving cars and to match satellite
imagery and mapping data. Neuroscientists need it to understand the
brain. NASA needs it to &lt;a class="reference external" href="http://www.bbc.co.uk/news/technology-26528516"&gt;map
asteroids&lt;/a&gt; and save
the human race. It is, however, a relatively underdeveloped area of
scientific computing. Attendees will leave this tutorial confident of
their ability to extract information from their images in Python.&lt;/p&gt;
&lt;p&gt;Attendees will need a working knowledge of numpy arrays, but no further
knowledge of images or voxels or other doodads. After a brief
introduction to the idea that images are just arrays and vice versa, we
will introduce fundamental image analysis operations: filters, which can
be used to extract features such as edges, corners, and spots in an
image; morphology, inferring shape properties by modifying the image
through local operations; and segmentation, the division of an image
into meaningful regions.&lt;/p&gt;
&lt;p&gt;We will then combine all these concepts and apply them to several
real-world examples of scientific image analysis: given an image of a
pothole, measure its size in pixels compare the fluorescence intensity
of a protein of interest in the centromeres vs the rest of the
chromosome. observe the distribution of cells invading a wound site&lt;/p&gt;
&lt;p&gt;Attendees will also be encouraged to bring their own image analysis
problems to the session for guidance, and, if time allows, we will cover
more advanced topics such as image registration and stitching.&lt;/p&gt;
&lt;p&gt;The entire tutorial will be coordinated with the IPython notebook, with
various code cells left blank for attendees to fill in as exercises.&lt;/p&gt;
</summary><category term="scikit"></category></entry><entry><title>Image analysis in Python with scipy and scikit image, Part 3</title><link href="https://pyvideo.org/scipy-2014/image-analysis-with-scikit-image-part-3.html" rel="alternate"></link><published>2014-07-09T00:00:00+00:00</published><updated>2014-07-09T00:00:00+00:00</updated><author><name>Juan Nunez-Iglesias</name></author><id>tag:pyvideo.org,2014-07-09:scipy-2014/image-analysis-with-scikit-image-part-3.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;From telescopes to satellite cameras to electron microscopes, scientists
are producing more images than they can manually inspect. This tutorial
will introduce automated image analysis using the &amp;quot;images as numpy
arrays&amp;quot; abstraction, run through various fundamental image analysis
operations (filters, morphology, segmentation), and finally complete one
or two more advanced real-world examples.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Image analysis is central to a boggling number of scientific endeavors.
Google needs it for their self-driving cars and to match satellite
imagery and mapping data. Neuroscientists need it to understand the
brain. NASA needs it to &lt;a class="reference external" href="http://www.bbc.co.uk/news/technology-26528516"&gt;map
asteroids&lt;/a&gt; and save
the human race. It is, however, a relatively underdeveloped area of
scientific computing. Attendees will leave this tutorial confident of
their ability to extract information from their images in Python.&lt;/p&gt;
&lt;p&gt;Attendees will need a working knowledge of numpy arrays, but no further
knowledge of images or voxels or other doodads. After a brief
introduction to the idea that images are just arrays and vice versa, we
will introduce fundamental image analysis operations: filters, which can
be used to extract features such as edges, corners, and spots in an
image; morphology, inferring shape properties by modifying the image
through local operations; and segmentation, the division of an image
into meaningful regions.&lt;/p&gt;
&lt;p&gt;We will then combine all these concepts and apply them to several
real-world examples of scientific image analysis: given an image of a
pothole, measure its size in pixels compare the fluorescence intensity
of a protein of interest in the centromeres vs the rest of the
chromosome. observe the distribution of cells invading a wound site&lt;/p&gt;
&lt;p&gt;Attendees will also be encouraged to bring their own image analysis
problems to the session for guidance, and, if time allows, we will cover
more advanced topics such as image registration and stitching.&lt;/p&gt;
&lt;p&gt;The entire tutorial will be coordinated with the IPython notebook, with
various code cells left blank for attendees to fill in as exercises.&lt;/p&gt;
</summary><category term="scikit"></category></entry></feed>