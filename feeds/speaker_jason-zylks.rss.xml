<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 10 Sep 2011 00:00:00 +0000</lastBuildDate><item><title>Custom Decorators for Authentication and Authorization</title><link>https://pyvideo.org/pytexas-2011/custom-decorators-for-authentication-and-authoriz.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;An introduction to writing decorators, with an example of how they can
be used to handle common authentication and authorization actions for a
set of web services.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To provide access to enterprise directory data and services to
developers at Texas A&amp;amp;M; University, we have implemented a set of
RESTful web services, using Django as our framework. Because these
services include access to protected data, all web service clients must
authenticate and be authorized to access a particular service. In order
to implement the logic for making authentication and authorization
decisions in one place, and cleanly apply it to any view, we wrote a
custom decorator. This talk will cover the basic concepts behind
decorators, how to write a decorator, and walk through our
implementation of a decorator for authN/authZ.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Zylks</dc:creator><pubDate>Sat, 10 Sep 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-09-10:pytexas-2011/custom-decorators-for-authentication-and-authoriz.html</guid></item><item><title>Getting Started with PyMongo</title><link>https://pyvideo.org/pytexas-2011/getting-started-with-pymongo.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A look at how to get started with MongoDB using Python. The talk will
cover basic concepts, a brief walkthrough of some more advanced
features, and how Texas A&amp;amp;M is using MongoDB and Python to solve some
large data problems.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the last month, we've started an effort to aggregate our logs so we
can do some real-time, holistic log analysis. Among other things, we are
tracking failed logins across all points of entry, identifying possibly
compromised accounts (simultaneous logins from multiple IPs,
geographically disparate logins), and identifying high-volume mailers
across multiple mail relays. The talk will include an introduction to
MongoDB (NoSQL, data structures, querying, indexing, differences from
relational databases, etc); some important performance and reliability
features like its support for replica sets, sharding, and map/reduce;
and some very cool features like GridFS and geospatial indexing. All of
this, with the exception of database configuration, will be demoed with
MongoDB's python client.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Zylks</dc:creator><pubDate>Sat, 10 Sep 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-09-10:pytexas-2011/getting-started-with-pymongo.html</guid></item><item><title>Using Message Queues for Distributed Processing</title><link>https://pyvideo.org/pytexas-2011/using-message-queues-for-distributed-processing.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Message queues provide a reliable, language agnostic method for sharing
data between processes for distributed processing, and to manage work
flows. This talk will examine the role of message queues in a redesign
of the provisioning process for Texas A&amp;amp;M; University's enterprise
directory.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;About six months ago we moved our account provisioning process from a
monolithic Perl script to a set of distributed, interconnected python
scripts. By using message queues (specifically beanstalkd) to pass
messages between the processes, we were able to build a system that was
much faster, more reliable and more flexible.&lt;/p&gt;
&lt;p&gt;I will walk through the process that led us to choose beanstalkd, look
at some alternatives that are available, and describe some use cases for
message queues.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Zylks</dc:creator><pubDate>Sat, 10 Sep 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-09-10:pytexas-2011/using-message-queues-for-distributed-processing.html</guid></item></channel></rss>