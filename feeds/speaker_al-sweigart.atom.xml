<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Al Sweigart</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_al-sweigart.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-05-16T00:00:00+00:00</updated><subtitle></subtitle><entry><title>BayPIGgies April 2017 talk: Annual PyCon Preview</title><link href="https://pyvideo.org/bay-piggies/baypiggies-april-2017-talk-annual-pycon-preview.html" rel="alternate"></link><published>2017-04-27T00:00:00+00:00</published><updated>2017-04-27T00:00:00+00:00</updated><author><name>Moshe Zadka</name></author><id>tag:pyvideo.org,2017-04-27:/bay-piggies/baypiggies-april-2017-talk-annual-pycon-preview.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Video courtesy of our meeting host, LinkedIn.
1. Automate AWS With Python - Moshe Zadka
AWS is one of the best-known cloud vendors. Using the Web UI is fine when starting out, but automating cloud operations is important. Boto3 provides a great Pythonic API to AWS, but using it correctly …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Video courtesy of our meeting host, LinkedIn.
1. Automate AWS With Python - Moshe Zadka
AWS is one of the best-known cloud vendors. Using the Web UI is fine when starting out, but automating cloud operations is important. Boto3 provides a great Pythonic API to AWS, but using it correctly can be subtle.
The talk will cover how to automate AMI builds, building Cloud Formation Templates and automating S3 bucket management.
Speaker Bio
Moshe has been involved with Python since 1998, when he helped obsolete math-related modules. Since then, he made some contributions that were not just deleting code to core Python, and has been a contributor on the Twisted project since its inception.
Abstract
2. Yes, It's Time to Learn Regular Expressions - Al Sweigart
Regular expressions have a reputation as opaque and inscrutable. However, the basic concepts behind &amp;quot;regex&amp;quot; and text pattern recognition are simple to grasp. This talk is for any programmer who isn't familiar with Python's re module and its best practices. Stop putting it off, it's time to learn regular expressions!
Speaker Bio
Al Sweigart is a software developer and the author of Automate the Boring Stuff with Python, Invent Your Own Computer Games with Python, Making Games with Python &amp;amp; Pygame, and Hacking Secret Ciphers with Python. These books are freely available under a Creative Commons license at &lt;a class="reference external" href="http://inventwithpython.com"&gt;http://inventwithpython.com&lt;/a&gt;.
Al enjoys haunting coffee shops, writing educational materials, cat whispering, and making useful software. He lives in San Francisco.
3. Type uWSGI; press enter; what happens? - Asheesh Laroia and Philip James
You're a pretty knowledgeable Python web application developer, but how does that web application get served to the world? For many of us, uWSGI is the magic that makes our application available, and in this talk we'll look at how uWSGI works with the OS and the networking stack to make the magic happen.
Speaker Bios
Asheesh Laroia
By day, Asheesh Laroia is a member of the technical staff at Sandstorm in Palo Alto. By night, he is volunteer President at OpenHatch, helping create workshops that teach students how to get involved in open source. His technical background touches machine learning, security, and linguistics. He helped start the Boston Python Workshop for women and their friends, has been teaching Python to newcomers since 2004, including at Noisebridge and the EFF, and has advised user groups on how to make their events more newcomer-friendly and gender-diverse.
Philip James
Philip James is a Software Engineer at Stripe, a Civic Technologist and a Director for the City of Alameda Democratic Club and the East Bay Young Democrats. In his free time he builds ContactOtter, a smart address book you can share.&lt;/p&gt;
</content><category term="Bay Piggies"></category></entry><entry><title>Automating Your Browser and Desktop Apps</title><link href="https://pyvideo.org/djangocon-us-2015/automating-your-browser-and-desktop-apps-by-al.html" rel="alternate"></link><published>2015-09-19T00:00:00+00:00</published><updated>2015-09-19T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2015-09-19:/djangocon-us-2015/automating-your-browser-and-desktop-apps-by-al.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Automating Your Browser and Desktop Apps by Al Sweigart&lt;/p&gt;
&lt;p&gt;This talk is an introduction to using the Requests, Beautiful Soup,
Selenium, and PyAutoGUI modules in order to automatically grab data from
the web or interact with desktop applications.&lt;/p&gt;
&lt;p&gt;Attendees will learn:&lt;/p&gt;
&lt;p&gt;How to download files and pages from the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Automating Your Browser and Desktop Apps by Al Sweigart&lt;/p&gt;
&lt;p&gt;This talk is an introduction to using the Requests, Beautiful Soup,
Selenium, and PyAutoGUI modules in order to automatically grab data from
the web or interact with desktop applications.&lt;/p&gt;
&lt;p&gt;Attendees will learn:&lt;/p&gt;
&lt;p&gt;How to download files and pages from the web How to use CSS selectors to
find content in a web page How to control a web browser from Python
using Selenium How to programmatically control the keyboard and mouse
The content from this talk is derived from Al Sweigart's book, Automate
the Boring Stuff with Python, which is freely available under a Creative
Commons license at &lt;a class="reference external" href="http://automatetheboringstuff.com"&gt;http://automatetheboringstuff.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/HHCL/"&gt;http://amara.org/v/HHCL/&lt;/a&gt;&lt;/p&gt;
</content><category term="DjangoCon US 2015"></category></entry><entry><title>Recursion for Beginners: A Beginner's Guide to Recursion</title><link href="https://pyvideo.org/north-bay-python-2018/recursion-for-beginners-a-beginners-guide-to-recursion.html" rel="alternate"></link><published>2018-11-03T00:00:00+00:00</published><updated>2018-11-03T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2018-11-03:/north-bay-python-2018/recursion-for-beginners-a-beginners-guide-to-recursion.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Between unintelligible algorithms and beautiful fractal artwork,
recursion has an intimidating reputation. But the underlying ideas
behind it are simple. This tutorial presents a quick intro of recursive
code, Python's features for handling recursion, and drawing fractals
with the turtle module. If you've ever thought &amp;quot;recursion is confusing&amp;quot;,
this …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Between unintelligible algorithms and beautiful fractal artwork,
recursion has an intimidating reputation. But the underlying ideas
behind it are simple. This tutorial presents a quick intro of recursive
code, Python's features for handling recursion, and drawing fractals
with the turtle module. If you've ever thought &amp;quot;recursion is confusing&amp;quot;,
this tutorial is for you.&lt;/p&gt;
</content><category term="North Bay Python 2018"></category></entry><entry><title>Automating Your Browser and Desktop Apps</title><link href="https://pyvideo.org/pybay-2016/automating-your-browser-and-desktop-apps.html" rel="alternate"></link><published>2016-08-21T00:00:00+00:00</published><updated>2016-08-21T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2016-08-21:/pybay-2016/automating-your-browser-and-desktop-apps.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's a lot of data on the web and in your desktop apps, but accessing it can involve a lot of tedious typing and clicking. This talk is an introduction to the Selenium and PyAutoGUI modules, with live demos straight from the interactive shell. Al Sweigart explains web scraping …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's a lot of data on the web and in your desktop apps, but accessing it can involve a lot of tedious typing and clicking. This talk is an introduction to the Selenium and PyAutoGUI modules, with live demos straight from the interactive shell. Al Sweigart explains web scraping techniques and programmatically controlling the keyboard and mouse to automate these tasks for you.
​
Abstract
The internet and personal computer are central tools in many jobs, including professions outside of engineering. This makes web scraping and GUI automation are relevant to not just developers and QA testers, but academics, organizers, and office workers. This talk is an introduction to Selenium and PyAutoGUI modules. and programatically controlling your browser and desktop applications from Python.&lt;/p&gt;
&lt;p&gt;Web scraping and GUI automation frameworks have an intimidating reputation for a steep learning curve. While they do have many sophisticated features, the basics that most folks will ever need can be covered in a single presentation.&lt;/p&gt;
&lt;p&gt;This presentation has multiple live demos to showcase these modules straight from the interactive shell.&lt;/p&gt;
&lt;p&gt;The content from this talk is derived from Automate the Boring Stuff with Python, a beginner's Python book freely available under a Creative Commons license at &lt;a class="reference external" href="https://automatetheboringstuff.com"&gt;https://automatetheboringstuff.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bio:&lt;/strong&gt;
Al Sweigart is a software developer and the author of Automate the Boring Stuff with Python, Invent Your Own Computer Games with Python, Making Games with Python &amp;amp; Pygame, and Hacking Secret Ciphers with Python. These books are freely available under a Creative Commons license at &lt;a class="reference external" href="https://inventwithpython.com"&gt;https://inventwithpython.com&lt;/a&gt;. Al enjoys haunting coffee shops, writing educational materials, cat whispering, and making useful software. He lives in San Francisco.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/pybay2016/al-sweigart-automating-your-browser-and-desktop-apps"&gt;https://speakerdeck.com/pybay2016/al-sweigart-automating-your-browser-and-desktop-apps&lt;/a&gt;&lt;/p&gt;
</content><category term="PyBay 2016"></category></entry><entry><title>Logging and Testing and Debugging, Oh My!</title><link href="https://pyvideo.org/pybay-2017/logging-and-testing-and-debugging-oh-my.html" rel="alternate"></link><published>2017-08-13T00:00:00+00:00</published><updated>2017-08-13T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2017-08-13:/pybay-2017/logging-and-testing-and-debugging-oh-my.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Logging messages, unit tests, and using the debugger are best practices, but often left out of introductory programming tutorials. As a result, beginners come away with the idea that these time-saving features are somehow &amp;quot;advanced&amp;quot; or things to be learned later on. In this presentation, Al Sweigart dispels these …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Logging messages, unit tests, and using the debugger are best practices, but often left out of introductory programming tutorials. As a result, beginners come away with the idea that these time-saving features are somehow &amp;quot;advanced&amp;quot; or things to be learned later on. In this presentation, Al Sweigart dispels these notions by providing quickstart guides to Python's logging, doctest, and pdb modules.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Logging messages, unit tests, and using the debugger are best practices, but often left out of introductory programming tutorials. As a result, beginners come away with the idea that these time-saving features are somehow &amp;quot;advanced&amp;quot; or things to be learned later on. In this presentation, Al Sweigart dispels these notions by providing quickstart guides to Python's logging, doctest, and pdb modules, including:&lt;/p&gt;
&lt;p&gt;Why beginners (incorrectly) avoid these programming best practices.
The &amp;quot;if you're doing this&amp;quot; signs that you aren't using these best practices.
The 4 lines of code you need from the logging module.
The 4 lines of code you need from the doctest module.
The 2 lines of code you need from the pdf module.
How much time you'll save, not spend, by using these not-so-advanced modules.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bio&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Al Sweigart is the author of several programming books, including Automate the Boring Stuff with Python. He releases all of his books online for free under a Creative Commons license. He lives in San Francisco, and his cat weighs 12 pounds.&lt;/p&gt;
</content><category term="PyBay 2017"></category></entry><entry><title>STDIO Game Jam</title><link href="https://pyvideo.org/pybay-2017/stdio-game-jam.html" rel="alternate"></link><published>2017-08-11T00:00:00+00:00</published><updated>2017-08-11T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2017-08-11:/pybay-2017/stdio-game-jam.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Oakland's video game museum will host a hackathon to create small, complete game programs that beginners can read. These text-based games only use stdio, so they're easy for beginners to read.&lt;/p&gt;
</content><category term="PyBay 2017"></category><category term="lightning talks"></category></entry><entry><title>Lightning Talks Day 3 Round 2</title><link href="https://pyvideo.org/pybay-2018/lightning-talks-day-3-round-2.html" rel="alternate"></link><published>2018-08-18T00:00:00+00:00</published><updated>2018-08-18T00:00:00+00:00</updated><author><name>Amjith Ramanujam</name></author><id>tag:pyvideo.org,2018-08-18:/pybay-2018/lightning-talks-day-3-round-2.html</id><content type="html"></content><category term="PyBay 2018"></category></entry><entry><title>Scrolling Animated ASCII Art in Python</title><link href="https://pyvideo.org/pybay-2024/scrolling-animated-ascii-art-in-python.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/scrolling-animated-ascii-art-in-python.html</id><content type="html"></content><category term="PyBay 2024"></category></entry><entry><title>Everything You Need to Know About Writing Technical Python Books</title><link href="https://pyvideo.org/pycascades-2021/everything-you-need-to-know-about-writing-technical-python-books.html" rel="alternate"></link><published>2021-02-20T00:00:00+00:00</published><updated>2021-02-20T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2021-02-20:/pycascades-2021/everything-you-need-to-know-about-writing-technical-python-books.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Technical books are one of the most popular ways to learn and improve your Python skills. Join us in this interactive session as we hear from three popular authors about their experiences publishing a book from start to finish. We’ll be joined by Al Sweigart, who’s most …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Technical books are one of the most popular ways to learn and improve your Python skills. Join us in this interactive session as we hear from three popular authors about their experiences publishing a book from start to finish. We’ll be joined by Al Sweigart, who’s most popular book Automate the Boring Stuff with Python has been met with rave reviews, April Speight, author of Bite-Size Python and Harry Percival who authored Test Driven Development with Python. They’ll clue you in on what the process is like from start to finish, tips on how to get started if you’d like to write your own book, and warn you of unexpected pitfalls.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pretalx.com/pycascades-2021/talk/QCRVPL/"&gt;https://pretalx.com/pycascades-2021/talk/QCRVPL/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After three amazing in-person conferences, this time we're moving PyCascades online.&lt;/p&gt;
&lt;p&gt;PyCascades is a regional PyCon in the Pacific Northwest, celebrating the west coast Python developer and user community. Our organizing team includes members of the Vancouver, Seattle, and Portland Python user groups.&lt;/p&gt;
&lt;p&gt;Videos are released as CC BY-NC-SA 4.0.&lt;/p&gt;
&lt;p&gt;Produced by Next Day Video Australia: &lt;a class="reference external" href="https://nextdayvideo.com.au"&gt;https://nextdayvideo.com.au&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#pycascades #pycon #python #conference&lt;/p&gt;
&lt;p&gt;Sat Feb 20 10:25:00 2021 at Interactive Track&lt;/p&gt;
</content><category term="PyCascades 2021"></category><category term="#pycascades#pycon#python#conference"></category><category term="pycascades"></category><category term="pycascades2021"></category></entry><entry><title>PyCon PH 2018 Al Sweigart - Hello Community</title><link href="https://pyvideo.org/pycon-philippines-2018/pycon-ph-2018-al-sweigart-hello-community.html" rel="alternate"></link><published>2018-02-24T00:00:00+00:00</published><updated>2018-02-24T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2018-02-24:/pycon-philippines-2018/pycon-ph-2018-al-sweigart-hello-community.html</id><content type="html"></content><category term="PyCon Philippines 2018"></category></entry><entry><title>Yes, It's Time to Learn Regular Expressions</title><link href="https://pyvideo.org/pycon-us-2017/yes-its-time-to-learn-regular-expressions.html" rel="alternate"></link><published>2017-05-20T00:00:00+00:00</published><updated>2017-05-20T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2017-05-20:/pycon-us-2017/yes-its-time-to-learn-regular-expressions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Regular expressions have a reputation as opaque and inscrutable.
However, the basic concepts behind &amp;quot;regex&amp;quot; and text pattern recognition
are simple to grasp. This talk is for any programmer who isn't familiar
with Python's re module and its best practices. Stop putting it off,
it's time to learn regular …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Regular expressions have a reputation as opaque and inscrutable.
However, the basic concepts behind &amp;quot;regex&amp;quot; and text pattern recognition
are simple to grasp. This talk is for any programmer who isn't familiar
with Python's re module and its best practices. Stop putting it off,
it's time to learn regular expressions!&lt;/p&gt;
</content><category term="PyCon US 2017"></category></entry><entry><title>Lightning talks May 19th, 2017 Evening session</title><link href="https://pyvideo.org/pycon-us-2017/lightning-talks-may-19th-2017-evening-session.html" rel="alternate"></link><published>2017-05-19T00:00:00+00:00</published><updated>2017-05-19T00:00:00+00:00</updated><author><name>Katie McLaughlin</name></author><id>tag:pyvideo.org,2017-05-19:/pycon-us-2017/lightning-talks-may-19th-2017-evening-session.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks 2017-05-19 Evening&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="12%" /&gt;
&lt;col width="23%" /&gt;
&lt;col width="65%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head" rowspan="2"&gt;Start&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Speakers&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Subject&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;0:55&lt;/td&gt;
&lt;td rowspan="3"&gt;Katy&lt;/td&gt;
&lt;td rowspan="3"&gt;&lt;strong&gt;Emoji Archeology 101 - A lightning talk cover&lt;/strong&gt;
- A call to revolution against the Unicode emoji.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;5:55&lt;/td&gt;
&lt;td rowspan="4"&gt;Daniel Whitenack&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Taking Over the Data World with Containerized&lt;/strong&gt;
&lt;strong&gt;Python&lt;/strong&gt;
- Using Kubernetes cluster with Pachyderm.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;11:20&lt;/td&gt;
&lt;td rowspan="4"&gt;Fang-Pen Lin&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Bugbuzz - A modern …&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks 2017-05-19 Evening&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="12%" /&gt;
&lt;col width="23%" /&gt;
&lt;col width="65%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head" rowspan="2"&gt;Start&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Speakers&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Subject&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;0:55&lt;/td&gt;
&lt;td rowspan="3"&gt;Katy&lt;/td&gt;
&lt;td rowspan="3"&gt;&lt;strong&gt;Emoji Archeology 101 - A lightning talk cover&lt;/strong&gt;
- A call to revolution against the Unicode emoji.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;5:55&lt;/td&gt;
&lt;td rowspan="4"&gt;Daniel Whitenack&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Taking Over the Data World with Containerized&lt;/strong&gt;
&lt;strong&gt;Python&lt;/strong&gt;
- Using Kubernetes cluster with Pachyderm.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;11:20&lt;/td&gt;
&lt;td rowspan="4"&gt;Fang-Pen Lin&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Bugbuzz - A modern web-based debugger for Python&lt;/strong&gt;
- Adding just a couple lines triggers a web based
debugger with basic functionality.  Uses PubNub.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;16:45&lt;/td&gt;
&lt;td rowspan="5"&gt;Kojo Idrissa&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Software Engineering for Beginners&lt;/strong&gt;
- Focus on common tools like version control, in-code
documentation, testing &amp;amp; TDD, dependency management &amp;amp;
deployment, and finally OS stuff.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="8"&gt;21:50&lt;/td&gt;
&lt;td rowspan="8"&gt;Cameron Dershem&lt;/td&gt;
&lt;td rowspan="8"&gt;&lt;strong&gt;Community Level Development:  What Python Should&lt;/strong&gt;
&lt;strong&gt;Learn From Rust&lt;/strong&gt;
- Please learn From Rust. Rust is the best community.
Devs are on chat and enforce good attitude; cool thank
you page; roadmap; 'how should this be taught' section
in RFCs; mentorship for starter maintainers; great
opensource book.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;26:30&lt;/td&gt;
&lt;td rowspan="4"&gt;Al Sweigart&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;How to Do PyCon&lt;/strong&gt;
- Skip talks and meet people; use shirt trick; don't
eat alone; Twitter is great for followup.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;31:53&lt;/td&gt;
&lt;td rowspan="4"&gt;Myron Walker&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Faking Python Imports&lt;/strong&gt;
- Fake for modules and callables not available on test
environment. Use directory of local fakes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;35:12&lt;/td&gt;
&lt;td rowspan="4"&gt;Vince Salvino&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Help Wanted: A PyPI Vulnerability DB&lt;/strong&gt;
- Like WPScan, it would be nice to a central DB and
tool for known PyPI security issues. Talk to me.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;37:50&lt;/td&gt;
&lt;td rowspan="5"&gt;Lev
Konstantinovskiy&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Same Content, Different Words&lt;/strong&gt;
- Is 'Ice cream' the same as 'Gelato' in different
reviews? Use Word Mover's Distance in GenSim to find
out.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;43:20&lt;/td&gt;
&lt;td rowspan="5"&gt;Mario&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Randomize Your Decisions&lt;/strong&gt;
- We spammed ourselves by having too many alerts, had
hacked users, bugs everywhere, bad SEO. Still, it was
worth making a website.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;48:30&lt;/td&gt;
&lt;td rowspan="5"&gt;Tim Head&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Bayesian Optimization: Coffee&lt;/strong&gt;
- Tweak settings with Bayesian Optimization, easily.
Made scikit-optimize with simpler calls than scikit-
learn.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;53:35&lt;/td&gt;
&lt;td rowspan="4"&gt;Meg Ray&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Teaching Python to Children&lt;/strong&gt;
- Use both teacher pedagogy and developer technical
skills to train K-12 teachers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content><category term="PyCon US 2017"></category><category term="lightning talks"></category></entry><entry><title>A complete Beginner's Guide to Python by Making Simple Games</title><link href="https://pyvideo.org/pycon-us-2021/a-complete-beginners-guide-to-python-by-making-simple-games.html" rel="alternate"></link><published>2021-05-14T00:00:00+00:00</published><updated>2021-05-14T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2021-05-14:/pycon-us-2021/a-complete-beginners-guide-to-python-by-making-simple-games.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Excited about programming? Have you heard good things about Python? Now is the time to dive in and start learning how to program. This three hour tutorial covers the basics of the basics of Python. Programming is a wide and deep field, but you only need a taste. You'll …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Excited about programming? Have you heard good things about Python? Now is the time to dive in and start learning how to program. This three hour tutorial covers the basics of the basics of Python. Programming is a wide and deep field, but you only need a taste. You'll learn about variables, expressions, loops, functions, and most importantly: what those words even mean to begin with. This is a tutorial for complete beginners (or those who want to start over again from the beginning.) This tutorial does not include computer science, machine learning, or brain surgery. By the end, we'll have create a few simple games (Guess the Number, Magic 8 Ball, and a Dice Rolling Simulator) as well as how to guide yourself through the next steps on your programming journey.&lt;/p&gt;
</content><category term="PyCon US 2021"></category></entry><entry><title>An Overview of the Python Code Tool Landscape 2023</title><link href="https://pyvideo.org/pycon-us-2023/an-overview-of-the-python-code-tool-landscape-2023.html" rel="alternate"></link><published>2023-04-23T00:00:00+00:00</published><updated>2023-04-23T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2023-04-23:/pycon-us-2023/an-overview-of-the-python-code-tool-landscape-2023.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Linters, type checkers, style formatters, package linters, security
analysis, dead code removers, docstring formatters, code complexity
analyzers: There is a wealth of static code analysis tools in the Python
ecosystem. It's intimidating to start looking at them and easy to get
lost. What's the difference between Pyflakes, flake8, and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Linters, type checkers, style formatters, package linters, security
analysis, dead code removers, docstring formatters, code complexity
analyzers: There is a wealth of static code analysis tools in the Python
ecosystem. It's intimidating to start looking at them and easy to get
lost. What's the difference between Pyflakes, flake8, and autoflake? Or
between autopep8 and pep8-naming? This overview explains the different
kinds of static code analysis tools, what tools are out there (as of
2023), and how beginners can get started using these tools to write code
like pros. This talk also provides a beginner's introduction to type
hints in Python and the type checker tools available. There are too many
tools to describe in detail, but this talk does introduce the promising
newcomer Ruff, an extremely fast Python linter written in Rust.&lt;/p&gt;
</content><category term="PyCon US 2023"></category></entry><entry><title>Make Python Talk, Make Python Listen</title><link href="https://pyvideo.org/pycon-us-2025/make-python-talk-make-python-listen.html" rel="alternate"></link><published>2025-05-16T00:00:00+00:00</published><updated>2025-05-16T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2025-05-16:/pycon-us-2025/make-python-talk-make-python-listen.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Third-party packages for Python allow your programs to perform text-to-speech and speech recognition with only a few lines of code. You don't need to understand advanced machine learning algorithms to take advantage of these sophisticated features: even beginners can use these packages. In this talk, you'll learn the PyTTSx3 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Third-party packages for Python allow your programs to perform text-to-speech and speech recognition with only a few lines of code. You don't need to understand advanced machine learning algorithms to take advantage of these sophisticated features: even beginners can use these packages. In this talk, you'll learn the PyTTSx3 and gTTS packages to make your programs talk using your operating system's speech engine. You'll also learn how to use the free, offline Whisper package to convert audio files into text strings. The straightforward configuration for these packages mean you can start making immediate use of them in your Python applications. Finally, we cover the yt-dlp package for downloading video and audio files from the web for transcription purposes, and how all of this is being used by the PyVideo.org website.&lt;/p&gt;
</content><category term="PyCon US 2025"></category></entry><entry><title>Automating Your Browser and Desktop Apps</title><link href="https://pyvideo.org/pyohio-2015/automating-your-browser-and-desktop-apps.html" rel="alternate"></link><published>2015-08-01T00:00:00+00:00</published><updated>2015-08-01T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2015-08-01:/pyohio-2015/automating-your-browser-and-desktop-apps.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's a lot of data on the web and in your desktop apps, but accessing
it can involve a lot of tedious typing and clicking. In this talk Al
Sweigart explains web scraping techniques and programmatically
controlling the keyboard and mouse to automate these tasks for you.
Covers the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's a lot of data on the web and in your desktop apps, but accessing
it can involve a lot of tedious typing and clicking. In this talk Al
Sweigart explains web scraping techniques and programmatically
controlling the keyboard and mouse to automate these tasks for you.
Covers the Selenium and PyAutoGUI modules.&lt;/p&gt;
</content><category term="PyOhio 2015"></category><category term="talk"></category></entry><entry><title>A Beginner's Guide to Tackling Recursion</title><link href="https://pyvideo.org/pyohio-2018/a-beginners-guide-to-tackling-recursion.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2018-07-28:/pyohio-2018/a-beginners-guide-to-tackling-recursion.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Between unintelligible algorithms and beautiful fractal artwork,
recursion has an intimidating and even mystical reputation. But the
underlying ideas behind it are simple. In this tutorial we get a solid
foundation of recursive code, and run through several examples in the
interactive shell. If you've ever said or thought …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Between unintelligible algorithms and beautiful fractal artwork,
recursion has an intimidating and even mystical reputation. But the
underlying ideas behind it are simple. In this tutorial we get a solid
foundation of recursive code, and run through several examples in the
interactive shell. If you've ever said or thought the words &amp;quot;recursion
is confusing&amp;quot;, this tutorial is for you.&lt;/p&gt;
</content><category term="PyOhio 2018"></category></entry><entry><title>The Amazing Mutable Immutable Tuple and Other Philosophic Digressions</title><link href="https://pyvideo.org/pytexas-2020/the-amazing-mutable-immutable-tuple-and-other-philosophic-digressions.html" rel="alternate"></link><published>2020-10-25T00:00:00+00:00</published><updated>2020-10-25T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2020-10-25:/pytexas-2020/the-amazing-mutable-immutable-tuple-and-other-philosophic-digressions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everyone knows Python tuples are immutable, but an immutable tuple that contains mutable objects is itself mutable. Or is it? What is immutability? Or equality? What is “is”? And what does Humpty Dumpty have to say about it? In this talk, we examine what these terms mean in far …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everyone knows Python tuples are immutable, but an immutable tuple that contains mutable objects is itself mutable. Or is it? What is immutability? Or equality? What is “is”? And what does Humpty Dumpty have to say about it? In this talk, we examine what these terms mean in far too much fun detail.&lt;/p&gt;
&lt;p&gt;Speaker: Al Sweigart
Al Sweigart is a software developer and tech book author living in San Francisco. Python is his favorite programming language, and he is the developer of several open source modules for it. His books, including Automate the Boring Stuff with Python, are freely available under a Creative Commons license on his website &lt;a class="reference external" href="https://inventwithpython.com/"&gt;https://inventwithpython.com/&lt;/a&gt;. His cat weighs 10 pounds.&lt;/p&gt;
</content><category term="PyTexas 2020"></category></entry><entry><title>Recursion for Beginners: A Beginner's Guide to Recursion</title><link href="https://pyvideo.org/pytexas-2023/recursion-for-beginners-a-beginners-guide-to-recursion.html" rel="alternate"></link><published>2023-04-01T00:00:00+00:00</published><updated>2023-04-01T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2023-04-01:/pytexas-2023/recursion-for-beginners-a-beginners-guide-to-recursion.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Recursion for Beginners: A Beginner's Guide to Recursion&amp;quot;
An introduction to recursion and the Python-specific functionality for recursion. Recursion is not just for computer science wizards, and this talk breaks it down into smaller (and smaller!) concepts.
Speaker: Al Sweigart&lt;/p&gt;
&lt;p&gt;Al Sweigart is a software developer, fellow of the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Recursion for Beginners: A Beginner's Guide to Recursion&amp;quot;
An introduction to recursion and the Python-specific functionality for recursion. Recursion is not just for computer science wizards, and this talk breaks it down into smaller (and smaller!) concepts.
Speaker: Al Sweigart&lt;/p&gt;
&lt;p&gt;Al Sweigart is a software developer, fellow of the Python Software Foundation, and author of several programming books with No Starch Press, including the worldwide bestseller Automate the Boring Stuff with Python. His Creative Commons licensed works are available at &lt;a class="reference external" href="https://inventwithpython.com"&gt;https://inventwithpython.com&lt;/a&gt;.&lt;/p&gt;
</content><category term="PyTexas 2023"></category></entry><entry><title>20 GOTO 10: How to Make Scrolling ASCII Art</title><link href="https://pyvideo.org/pytexas-2024/20-goto-10-how-to-make-scrolling-ascii-art.html" rel="alternate"></link><published>2024-04-21T00:00:00+00:00</published><updated>2024-04-21T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2024-04-21:/pytexas-2024/20-goto-10-how-to-make-scrolling-ascii-art.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;20 GOTO 10: How to Make Scrolling ASCII Art&lt;/p&gt;
&lt;p&gt;Scroll art is a form of animated ASCII art that beginners can make. Using loops, print(), and random numbers, you'll learn how to make a surprisingly wide variety of digital art within the constraints of text strings. You'll also learn …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;20 GOTO 10: How to Make Scrolling ASCII Art&lt;/p&gt;
&lt;p&gt;Scroll art is a form of animated ASCII art that beginners can make. Using loops, print(), and random numbers, you'll learn how to make a surprisingly wide variety of digital art within the constraints of text strings. You'll also learn about the history of ASCII art, computer education, and where to find inspiration for your own digital art.&lt;/p&gt;
&lt;p&gt;Speaker: Al Sweigart&lt;/p&gt;
&lt;p&gt;Al Sweigart is a software developer, artist, Fellow of the Python Software Foundation, and the author of Automate the Boring Stuff with Python and other programming books freely available under the Creative Commons license at &lt;a class="reference external" href="https://inventwithpython.com"&gt;https://inventwithpython.com&lt;/a&gt;.&lt;/p&gt;
</content><category term="PyTexas 2024"></category></entry><entry><title>Lightning Talks (Day 1)</title><link href="https://pyvideo.org/pytexas-2024/lightning-talks-day-1.html" rel="alternate"></link><published>2024-04-20T00:00:00+00:00</published><updated>2024-04-20T00:00:00+00:00</updated><author><name>Pandy Knight</name></author><id>tag:pyvideo.org,2024-04-20:/pytexas-2024/lightning-talks-day-1.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are five minute talks on a variety of subjects.&lt;/p&gt;
</content><category term="PyTexas 2024"></category></entry><entry><title>Lighting Talks Day 1</title><link href="https://pyvideo.org/pytexas-2025/lighting-talks-day-1.html" rel="alternate"></link><published>2025-04-12T00:00:00+00:00</published><updated>2025-04-12T00:00:00+00:00</updated><author><name>Lynn Root</name></author><id>tag:pyvideo.org,2025-04-12:/pytexas-2025/lighting-talks-day-1.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lighting Talks Day 1&lt;/p&gt;
</content><category term="PyTexas 2025"></category></entry></feed>