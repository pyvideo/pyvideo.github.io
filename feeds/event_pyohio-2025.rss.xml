<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - PyOhio 2025</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 27 Jul 2025 00:00:00 +0000</lastBuildDate><item><title>A Very Brief Overview of Python‚Äôs ‚ÄúLang‚Äù AI Tools and Two Low-Code GUI AI Tools: Flowise and n8n</title><link>https://pyvideo.org/pyohio-2025/a-very-brief-overview-of-pythons-lang-ai-tools-and-two-low-code-gui-ai-tools-flowise-and-n8n.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;AI is the theme of the moment - and even as a pythonista you might not
know where to begin, or you may have started as you had time - and
wished to go further. This talk is a guide about where some have gone,
and where you might want to go with AI in python. But it is not the last
stop. This talk is designed to be a stating guide to move from hobbyist
level AI learning to more production-ready coding.&lt;/p&gt;
&lt;p&gt;Often where you begin is with some of the low-code GUI tools - for
instance Flowise [ flowiseai.com] - where with a api key and some clicks
you can quickly build a chatbot - and then you leant to add complexity -
maybe you pull out some embeddable code -or start to have more than one
agent talk to each other, or with some walk-throughs you build a
knowledge-base of documents for your bot ( a RAG - Retrieval Augmented
Generation ) and now it knows - all your recipes.&lt;/p&gt;
&lt;p&gt;Later you want to give your bot some &amp;quot;hands&amp;quot; or rather tools and later
you connect to N8N [n8n.io] - which is a flexible workflow automation.
You've made your bot reach out into the world to do something (aka made
it &amp;quot;Agentic&amp;quot;).&lt;/p&gt;
&lt;p&gt;But then you want more control - and stability - so you look to do what
you previously did in low-code- directly in python, with a view to
production.&lt;/p&gt;
&lt;p&gt;This is when you look to the &amp;quot;Lang&amp;quot; flavor tools: Langchain, Langflow,
Langraph, and Langsmith.&lt;/p&gt;
&lt;p&gt;Given the time, this will be a very quick tour of these concepts with
both images and code shown - so it won't be a line-by line build along.
A repo and suggested resources will be provided at the end.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Curtis Oneal</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/a-very-brief-overview-of-pythons-lang-ai-tools-and-two-low-code-gui-ai-tools-flowise-and-n8n.html</guid><category>PyOhio 2025</category></item><item><title>Beyond the Benchmark: Why the ‚ÄúBest‚Äù Python Dependency Manager Might Not Be Best for You</title><link>https://pyvideo.org/pyohio-2025/beyond-the-benchmark-why-the-best-python-dependency-manager-might-not-be-best-for-you.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Ever wondered why your team still uses pip when benchmarks show
alternatives are 10x faster?&lt;/strong&gt; The answer lies beyond raw performance
metrics.&lt;/p&gt;
&lt;p&gt;In this myth-busting session, I'll reveal surprising insights from
analyzing thousands of GitHub repositories and real-world implementation
case studies. You'll discover why technical superiority doesn't always
translate to organizational success, and how to navigate the complex
decision landscape of Python dependency management.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;I'll share:&lt;/div&gt;
&lt;div class="line"&gt;- ‚ö° Eye-opening performance comparisons between UV, Poetry, Conda,
and pip+pyenv&lt;/div&gt;
&lt;div class="line"&gt;- üìä Actual adoption statistics that challenge conventional wisdom&lt;/div&gt;
&lt;div class="line"&gt;- üíº ROI calculations that factor in both technical AND human costs&lt;/div&gt;
&lt;div class="line"&gt;- üõ£Ô∏è A decision framework for selecting the right tool for YOUR
specific context&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Whether you're contemplating a migration, advocating for better tooling,
or simply curious about the evolving Python ecosystem, you'll leave with
actionable insights that balance technical excellence with
organizational reality.&lt;/p&gt;
&lt;p&gt;Don't miss this data-driven exploration of Python's most
underappreciated infrastructure challenge!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Keming He</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/beyond-the-benchmark-why-the-best-python-dependency-manager-might-not-be-best-for-you.html</guid><category>PyOhio 2025</category></item><item><title>Bringing Ideas to Life with DIY IoT: Visualizing Noise Pollution with a Raspberry Pi and Python</title><link>https://pyvideo.org/pyohio-2025/bringing-ideas-to-life-with-diy-iot-visualizing-noise-pollution-with-a-raspberry-pi-and-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Discover how to harness the power of IoT to tackle real-world problems
using affordable and accessible technology. In this talk, you'll learn
how to build an IoT system from off-the-shelf components, collect data
from sensors, and visualize the data to tell compelling stories.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;In this talk I'll showcase a project where I used a Raspberry Pi,
environmental sensor, and Python to measure and monitor noise levels.
This project demonstrates how to design and implement an IoT solution
from concept to deployment, including using InfluxDB and Grafana for
real-time data visualization, all running in Docker.&lt;/div&gt;
&lt;div class="line"&gt;By the end of this talk, you'll have the skills to bring various
pieces of technology together to solve real-world problems. Whether
you're an enthusiast, developer, or researcher, this session will
inspire you to apply open-source tools and inexpensive hardware in
innovative ways to address the challenges in your every day life.&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan Carroll</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/bringing-ideas-to-life-with-diy-iot-visualizing-noise-pollution-with-a-raspberry-pi-and-python.html</guid><category>PyOhio 2025</category></item><item><title>Developing a System Maintenance Plan and Utilizing Python to Aid in System Maintenance</title><link>https://pyvideo.org/pyohio-2025/developing-a-system-maintenance-plan-and-utilizing-python-to-aid-in-system-maintenance.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Overtime, systems can experience rapid growth and become unstable
without proper management. Managing that growth while maintaining the
system can become a challenge. We will explore system maintenance in the
context of a Geographic Information Systems (GIS) Team‚Äôs plan for GIS
system maintenance. We will go over the reasons for having a system
maintenance plan, the components of our plan, and things to consider
when making your own maintenance plan.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joseph Guzi</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/developing-a-system-maintenance-plan-and-utilizing-python-to-aid-in-system-maintenance.html</guid><category>PyOhio 2025</category></item><item><title>Finding Practical Applications for Your Passion Projects</title><link>https://pyvideo.org/pyohio-2025/finding-practical-applications-for-your-passion-projects.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Getting from &amp;quot;I'm passionate about this topic&amp;quot; to actually working in
(or on) your dream is a wild leap. Lessons learned from traveling this
path the hard way, from finding the right niche for your passion project
to getting the right collaborators on board, can't be taught in a
classroom.&lt;/p&gt;
&lt;p&gt;These are some of the lessons formed over six years of growing an
international charity from two through to 6000 volunteers across the
globe. You'll learn tips on applying Python's ecosystem of third-party
tools to your project's aim, assembling a diverse team that can assess
the needs of a diverse world, and using Python-based tools to build your
dream project.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joe Kaufeld</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/finding-practical-applications-for-your-passion-projects.html</guid><category>PyOhio 2025</category></item><item><title>From Fortran to Python: A Conversation Across Generations of Scientific Computing</title><link>https://pyvideo.org/pyohio-2025/from-fortran-to-python-a-conversation-across-generations-of-scientific-computing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What was it like to write scientific code before personal computers,
IDEs, or instant feedback loops? In this talk, a mother and son ‚Äî one
who programmed in &lt;em&gt;Fortran&lt;/em&gt; using punch cards and one who writes
&lt;em&gt;Python&lt;/em&gt; today in modern IDEs ‚Äî reflect on how programming practices,
tools, and mindsets have evolved across generations.&lt;/p&gt;
&lt;p&gt;Through personal stories and a short demo of a scientific simulation, we
compare the experience of coding the same computational model decades
apart. This talk is less about syntax and more about what has changed
(and what hasn‚Äôt) in how we approach problem-solving, debugging, and
scientific thinking in code.&lt;/p&gt;
&lt;p&gt;Whether you're a veteran programmer or just getting started, join us for
a thoughtful, engaging, and intergenerational exploration of scientific
computing ‚Äî from punch cards to &lt;em&gt;Python&lt;/em&gt; notebooks and modern IDEs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rodrigo Silva Ferreira</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/from-fortran-to-python-a-conversation-across-generations-of-scientific-computing.html</guid><category>PyOhio 2025</category></item><item><title>GDIOCSpider: Extracting and Identifying IOCs from the GDriveverse</title><link>https://pyvideo.org/pyohio-2025/gdiocspider-extracting-and-identifying-iocs-from-the-gdriveverse.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Google Drive in recent years has become one of the most abused
platforms for threat actors to conduct illegal and malicious activity.
Threat actors use Google accounts to launch, store, and log malware,
effectively turning Drive into a command and control center. On the
side of legal and ethical activity, Google Drive remains a popular
platform for security researchers to store these artifacts in
summarized write-ups and spreadsheets of malicious and illegal
activity observed. Much like an archaeologist looks for artifacts
providing clues of the history of civilization, security researchers
look for Indicators of Compromise (IOCs), which are clues to what a
threat actor has done. Security engineers have worked across decades
to build out tooling to analyze hard drives and network resources;
however, similar advances to analyze Google Drive resources have
remained underdeveloped. Along the same line, tools that aggregate and
summarize collections of records on IOCs stored in Google Drive by
researchers are also lacking.&lt;/div&gt;
&lt;div class="line"&gt;The GDIOCSpider (Google Drive IOC Spider) provides a tool for both of
these use cases. This open-source, configurable, Python tool is
capable of crawling through an entire Google Drive, analyzing its file
contents, and searching for various defined IOC (Indicators of
Compromise) types to extract. This tool outputs a summary of all
discovered artifacts across all files, erasing the need for security
researchers to manually sift through cloud stores. Supplementing the
compromised account use case, the same tool can be used to aggregate
IOCs collected in personal or corporate Google Drive accounts in the
form of case records gathered by security researchers. This
‚Äòenvironment agnostic‚Äô approach is how GDIOCSpider enables security
researchers to perform efficient IOC research in Google Drive.&lt;/div&gt;
&lt;div class="line"&gt;GDIOCSpider supports capabilities for both user accounts and service
accounts through the Google Drive API. It has allowlist and denylist
capabilities for both folders and files to prevent access of files
with compliance and security restrictions. For those that are very
interested in performing local IOC analysis and extraction,
GDIOCSpider contains a build abstract tool ‚ÄòIOCFlagger‚Äô within the
context of the source code. IOCFlagger offers a rich IOC parser that
is capable of both loose and strict matching for use cases where it is
necessary to search within a string, or simply match a string to an
IOC type exactly. The full suite of tools under the GDIOCSpider‚Äôs
umbrella enables the user or team operating it to enter the
‚ÄúGDriveverse‚Äù of Google account incident response, and provide
meaningful data for case work and research.&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Noah Dunn</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/gdiocspider-extracting-and-identifying-iocs-from-the-gdriveverse.html</guid><category>PyOhio 2025</category></item><item><title>Introducing Labrea: How Embracing Declarative, Functional Programming Can Lead You Out of the Tar Pit</title><link>https://pyvideo.org/pyohio-2025/introducing-labrea-how-embracing-declarative-functional-programming-can-lead-you-out-of-the-tar-pit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a multi-paradigm language, Python gives its users the freedom to
solve problems in a vast number of ways. However, this freedom comes
with a cost: we must resist the urge to use quick, unsustainable
approaches in order to avoid the plague that is software complexity. For
many real world problems, using familiar techniques like mutable state
and imperative programming make it easier to complete the task while
yielding a more complex codebase. In many cases, functional programming
offers a way to write simpler code, but the difficulty of committing to
it makes it impractical or unappealing to developers.&lt;/p&gt;
&lt;p&gt;Inspired by the 2006 paper &lt;a class="reference external" href="https://curtclifton.net/papers/MoseleyMarks06a.pdf"&gt;Out of the Tar
Pit&lt;/a&gt;, and the
2011 talk &lt;a class="reference external" href="https://www.youtube.com/watch?v=SxdOUGdseq4"&gt;Simple Made
Easy&lt;/a&gt; by Rich Hickey,
&lt;a class="reference external" href="https://github.com/8451/labrea"&gt;Labrea&lt;/a&gt; is a Python framework that
seeks to make the happy path one that results in a simpler codebase that
is functional, declarative, and composable. Learn about how Labrea
allowed developers at 84.51¬∫ (Kroger) to pull the company's most
complicated coupon recommender system out of the slow death march of
software complexity, and how it might help you.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Austin Warner</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/introducing-labrea-how-embracing-declarative-functional-programming-can-lead-you-out-of-the-tar-pit.html</guid><category>PyOhio 2025</category></item><item><title>Keynote: Looking Back at a Lifetime of Poor Tech Choices</title><link>https://pyvideo.org/pyohio-2025/keynote-looking-back-at-a-lifetime-of-poor-tech-choices.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working in tech is a never-ending stream of choices: from the language,
platform, and framework we use to the vendors we put our trust (and
money) in. Many of us live in fear that our next choice will turn sour,
and will end up being a resume-generating event for us.&lt;/p&gt;
&lt;p&gt;In reality, there is often a lot more good than you'd expect from those
seemingly bad tech choices. In this session, I'll look back on several
failed implementations, poor calls, and wasted weekends to see, with the
benefit of hindsight, how they turned out to be decent decisions after
all.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Leon Adato</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/keynote-looking-back-at-a-lifetime-of-poor-tech-choices.html</guid><category>PyOhio 2025</category></item><item><title>Organizing and Maintaining Your Code-Scape with Python</title><link>https://pyvideo.org/pyohio-2025/organizing-and-maintaining-your-code-scape-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you're a software engineer, a data scientist, or almost any other
type of developer, you're probably familiar with the idea of writing
well-organized, reusable code. Principles like DRY (&amp;quot;Don't Repeat
Yourself&amp;quot;) and ETC (&amp;quot;Easy to Change&amp;quot;) are powerful heuristics at the
line-by-line level of code. Design concepts like modularity, decoupling,
MVC (&amp;quot;Model-View-Controller&amp;quot;) and &amp;quot;Fat Model, Skinny Controller&amp;quot; can
help you make software-level organizing decisions. Resources for
project-level organization (code, data, documentation, etc.) are
abundant and growing fast. Putting all this together in a useful way can
be challenging, but there's no shortage of advice, resources, or
templates in any of these areas. By comparison, material related to
effective organization at the level of the coder's file system or source
tree is sparse, harder to find, or designed for a more general audience.
This talk uses &amp;quot;code-scape&amp;quot; as an umbrella term to consolidate ideas
about organizing files and folders, maintaining your codebase, building
a second brain, digital filing systems, etc. and shares examples of how
you can use lightweight Python scripts to help keep your code-scape
organized, searchable, and safeguarded.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Lavin</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/organizing-and-maintaining-your-code-scape-with-python.html</guid><category>PyOhio 2025</category></item><item><title>Quantum Computing with Python: From Qubits to Circuits</title><link>https://pyvideo.org/pyohio-2025/quantum-computing-with-python-from-qubits-to-circuits.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you heard the buzz about quantum computing and wondered what it
&lt;em&gt;actually&lt;/em&gt; means? This beginner-friendly talk introduces the
fundamentals of quantum computing using the language we all love;
Python.&lt;/p&gt;
&lt;p&gt;We‚Äôll start by breaking down core quantum concepts like &lt;strong&gt;qubits&lt;/strong&gt;,
&lt;strong&gt;superposition&lt;/strong&gt;, &lt;strong&gt;entanglement&lt;/strong&gt;, and &lt;strong&gt;quantum gates&lt;/strong&gt; in simple
terms. Then, we‚Äôll bring those ideas to life with real code using
&lt;a class="reference external" href="https://qiskit.org/"&gt;Qiskit&lt;/a&gt;, a powerful open-source quantum
computing framework built in Python.&lt;/p&gt;
&lt;p&gt;You'll learn how to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Simulate qubits and quantum circuits&lt;/li&gt;
&lt;li&gt;Visualize quantum states and interference&lt;/li&gt;
&lt;li&gt;Run your own quantum circuits on a real IBM quantum computer (yes,
free and live!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Along the way, we‚Äôll highlight where quantum computing stands today,
where Python fits in the ecosystem, and how you can get involved;
whether you're a hobbyist, educator, or software developer.&lt;/p&gt;
&lt;p&gt;No prior knowledge of quantum mechanics is needed. If you can write a
'for' loop, you can build your first quantum circuit.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Temitope Adeniyi</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/quantum-computing-with-python-from-qubits-to-circuits.html</guid><category>PyOhio 2025</category></item><item><title>Using Python in the Concrete Industry</title><link>https://pyvideo.org/pyohio-2025/using-python-in-the-concrete-industry.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working in the concrete industry, I often found myself doing tasks that
felt repetitive. Python has been great for automating these tasks, with
the goal being to both increase efficiency and remove opportunities for
human error, which can be costly in this business. Automating things has
also taught me that seemingly simple tasks can be more complicated than
they seem.&lt;/p&gt;
&lt;p&gt;As part of this I will discuss libraries that I have found useful,
including ezdxf, which can be used for drafting and creating files that
can be read by CAD software.&lt;/p&gt;
&lt;p&gt;Python really is a programming language for everyone, and can have a use
case in places you might not expect.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Windsor</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/using-python-in-the-concrete-industry.html</guid><category>PyOhio 2025</category></item><item><title>uv: Ultimate Victory over Installation and Dependency Chaos</title><link>https://pyvideo.org/pyohio-2025/uv-ultimate-victory-over-installation-and-dependency-chaos.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Did you recoil at the news that there's &lt;em&gt;yet another&lt;/em&gt; hot new packaging
tool to cram into your poor crowded brain?&lt;/p&gt;
&lt;p&gt;Take heart, brain! It will be all right! uv is splendidly complete and
gloriously simple to use. It's the single tool that can elegantly and
easily replace the whole jumbled toolbox you've been using until now.
See the essential simple usages of uv, and you'll be a believer.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catherine Devlin</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/uv-ultimate-victory-over-installation-and-dependency-chaos.html</guid><category>PyOhio 2025</category></item><item><title>When Your SME Ghosts You: Using GenAI to Build a Database Documentation Agent</title><link>https://pyvideo.org/pyohio-2025/when-your-sme-ghosts-you-using-genai-to-build-a-database-documentation-agent.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever been handed a mystery database and told, ‚ÄúYou‚Äôll figure it
out‚Äù... with no documentation, no SME, and no time?&lt;/p&gt;
&lt;p&gt;In this session, I‚Äôll share how I turned a frustrating (and very
relatable) real-world problem into a capstone project for Kaggle's Gen
AI 5 Day Intensive Course with Google: building a GenAI-powered Database
Documentation Agent using Python, SQLite, and the Gemini API ‚Äî aka what
I like to call my SME Ghost Protocol.&lt;/p&gt;
&lt;p&gt;I‚Äôll walk through how I used GenAI to automatically generate natural
language summaries, answer ad-hoc schema questions, and create entity
relationship diagrams ‚Äî even when human help wasn't available.&lt;/p&gt;
&lt;p&gt;We'll dive into the challenges of working with GenAI as a &amp;quot;coding
partner,&amp;quot; designing prompts like communication plans, and lessons
learned the hard way about iteration, hallucination, and debugging when
you're flying solo.&lt;/p&gt;
&lt;p&gt;Expect live demos, practical takeaways, a little workplace sarcasm, and
ideas for how you can launch your own SME Ghost Protocol ‚Äî because
sometimes, GenAI is the only teammate who shows up.üëª&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Denise Williams</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/when-your-sme-ghosts-you-using-genai-to-build-a-database-documentation-agent.html</guid><category>PyOhio 2025</category></item><item><title>Why Python Loops Are "Slow": A Gentle Introduction to Interpretation, Bytecode, and Fast Code</title><link>https://pyvideo.org/pyohio-2025/why-python-loops-are-slow-a-gentle-introduction-to-interpretation-bytecode-and-fast-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python loops are &amp;quot;slow&amp;quot;, is a phrase every python programmer has heard.
For better or worse, it is partially true. This talk breaks down how
Python executes code and why that creates overhead, especially in tight
loops. I'll also explore how tools like NumPy, SIMD, and JIT compilation
achieve massive speedups by working with the CPU instead of against it.&lt;/p&gt;
&lt;p&gt;You should walk away from this talk with more insight into why loops are
slow, how python code is executed at a high level, and what you should
do about it if anything.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tyler Riccio</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/why-python-loops-are-slow-a-gentle-introduction-to-interpretation-bytecode-and-fast-code.html</guid><category>PyOhio 2025</category></item><item><title>Write Apps for Your TV with Kodi and Python</title><link>https://pyvideo.org/pyohio-2025/write-apps-for-your-tv-with-kodi-and-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The open-source media player Kodi is designed to play videos and music
on your TV, but it also comes with a plugin system that is programmable
with Python. This talk will walk through writing a plugin for your
set-top-box running Kodi, including packaging, debugging, and dealing
with dependencies (there's no pip here).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Kubera</dc:creator><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-27:/pyohio-2025/write-apps-for-your-tv-with-kodi-and-python.html</guid><category>PyOhio 2025</category></item><item><title>A Bug's Life</title><link>https://pyvideo.org/pyohio-2025/a-bugs-life.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A beginner friendly talk that goes from the manifestation of a bug in
production, traces it all the way to its inception, and asks what other
than code needs to change to ship faster and NOT break things.&lt;/p&gt;
&lt;p&gt;We open with the support rotation pager going off as customers of a low
latency realtime system report an outage. With every second of downtime
resulting in revenue loss, it is all hands on deck for the site
reliability team, Dev team, data team, product owners are peeling down
the stack. We will see the to the commit messages in polyglot systems
that caused the failure, the bug getting squashed, hotfix getting
shipped and crisis is averted.&lt;/p&gt;
&lt;p&gt;Cut to the blameless postmortem - the real life challenges of issue
resolution that is more than changing lines in code, debugging
workflows, monitoring gaps, testing limitations, navigating change
management processes, team dynamics. for each of these pillars we will
see what allowed the teams to shift left, and shorten a bug's lifecycle.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;What does the audience get out of it:&lt;/div&gt;
&lt;div class="line"&gt;Modern software deployments are complex and dynamic ecosystems, an
ideal breeding ground for bugs. In a way, the lifecycle of a bug,
reveals the truth about the software development lifecycle of a
product.&lt;/div&gt;
&lt;div class="line"&gt;This talk takes learnings from multiple real life outages and tries to
condense it as a shift-left journey by Continuous Questioning how can
we catch bugs in lower environments.&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tathagata Dasgupta</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/a-bugs-life.html</guid><category>PyOhio 2025</category></item><item><title>Beyond the Black Box: Interpreting ML Models with SHAP</title><link>https://pyvideo.org/pyohio-2025/beyond-the-black-box-interpreting-ml-models-with-shap.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ML models behave as a black box in most scenarios. Model predicts or
provides a certain output but it is very difficult to generate any
actionable insights directly. This is mostly because we generally have
no idea which features are contributing the most to the model behavior
internally. SHAP provides a certain way to explain model predictions,
and can act as an important tool in a data scientist‚Äôs toolbox.&lt;/p&gt;
&lt;p&gt;In this talk, we will begin by explaining to the audience the need for
explainable ML models and why it is important to understand beyond what
the model outputs. We will then briefly go over the mathematical
intuition behind Shapley values and its origins from game theory. After
that we will walk through a couple of case studies of tree based and
neural network based models. We will be focusing on interpretation of
SHAP through various plots using the shap library in Python. Finally, we
will discuss the best practices for interpreting SHAP visualizations,
handling large datasets, and common pitfalls to avoid.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Avik Basu</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/beyond-the-black-box-interpreting-ml-models-with-shap.html</guid><category>PyOhio 2025</category></item><item><title>Chasten Your Python Program: Configurable Program Analysis and Linting with XPath</title><link>https://pyvideo.org/pyohio-2025/chasten-your-python-program-configurable-program-analysis-and-linting-with-xpath.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="section" id="abstract"&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Stop wrestling with regular expressions (regex) and complex abstract
syntax tree&lt;/div&gt;
&lt;div class="line"&gt;(AST)-based frameworks to analyze and lint your Python code! Chasten
offers an&lt;/div&gt;
&lt;div class="line"&gt;elegant solution by leveraging XPath expressions to search Python's
abstract&lt;/div&gt;
&lt;div class="line"&gt;syntax tree, making static code analysis both powerful and accessible.
In this&lt;/div&gt;
&lt;div class="line"&gt;talk, you'll discover how to implement custom linting rules, enforce
coding&lt;/div&gt;
&lt;div class="line"&gt;standards, and perform sophisticated pattern matching in your Python
projects&lt;/div&gt;
&lt;div class="line"&gt;using a tool designed for both simplicity and flexibility. Whether
you're a&lt;/div&gt;
&lt;div class="line"&gt;developer tired of writing fragile regex patterns, an instructor
validating&lt;/div&gt;
&lt;div class="line"&gt;student code, or a project maintainer who wants to ensure code
quality, Chasten&lt;/div&gt;
&lt;div class="line"&gt;provides the perfect balance of power and usability for your static
analysis&lt;/div&gt;
&lt;div class="line"&gt;needs. More details about chasten are available at:&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="https://github.com/AstuteSource/chasten"&gt;https://github.com/AstuteSource/chasten&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="key-takeaways"&gt;
&lt;h4&gt;Key Takeaways&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create custom linting rules through simple YAML configuration&lt;/li&gt;
&lt;li&gt;Practical examples of enforcing code standards on documentation and
code&lt;/li&gt;
&lt;li&gt;Ways to analyze results through interactive dashboards with Datasette&lt;/li&gt;
&lt;li&gt;How to integrate Chasten into development workflow and CI/CD
pipelines&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gregory M. Kapfhammer</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/chasten-your-python-program-configurable-program-analysis-and-linting-with-xpath.html</guid><category>PyOhio 2025</category></item><item><title>Demystifying AI Agents with Python Code</title><link>https://pyvideo.org/pyohio-2025/demystifying-ai-agents-with-python-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everyone‚Äôs talking about AI Agents! But what are they, and how can you
build them? This talk cuts through the hype. Drawing on a year spent
developing a GenAI platform, I'll show you that creating powerful AI
Agents is within your reach, no advanced degree required.&lt;/p&gt;
&lt;p&gt;We‚Äôll define agents practically: Large Language Models combined with
tools and memory. Moving beyond the abstract definition, I‚Äôll show you
how to build your first agent using the OpenAI Python SDK and
fundamental Python concepts you‚Äôre already familiar with: functions,
loops, and conditions. From there, I will demonstrate how you can use
the CrewAI framework to abstract away the boilerplate code, allowing for
simpler setup of multi-agent systems.&lt;/p&gt;
&lt;p&gt;By the end, you won't just understand agents; you'll be equipped and
inspired to build your own, ready to tackle custom tasks by integrating
the APIs that matter to you.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">William Horton</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/demystifying-ai-agents-with-python-code.html</guid><category>PyOhio 2025</category></item><item><title>Deploy Django: GitOps &amp; Kubernetes Made Easy</title><link>https://pyvideo.org/pyohio-2025/deploy-django-gitops-kubernetes-made-easy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Deploying code shouldn‚Äôt be stressful. But too often, the journey from
local dev to production is fragile, manual, and hard to debug. This talk
is about building peace of mind into your pipeline ‚Äî with GitOps,
Kubernetes, and open source tools like Argo CD that make continuous
delivery predictable, repeatable, and scalable from the very first
release to the 50th.&lt;/p&gt;
&lt;p&gt;We‚Äôll tackle the realities of ‚Äúday two‚Äù DevOps ‚Äî what happens after the
first deploy. From managing rollbacks and coordinating releases to
enforcing consistency across dev, staging, and production, you‚Äôll learn
how to bring stability and scalability to your delivery pipeline.&lt;/p&gt;
&lt;p&gt;In a live demo, we‚Äôll deploy a full stack Django app from GitHub to
production using Argo CD and GitHub Actions ‚Äî with observability,
rollback strategies, and environment parity built in from the start.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;You‚Äôll learn how to:&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;- Set up a GitOps-based CI/CD pipeline that works across all
environments&lt;/div&gt;
&lt;div class="line"&gt;- Automate rollouts, rollbacks, and version control of infrastructure&lt;/div&gt;
&lt;div class="line"&gt;- Understand why Kubernetes is a future-proof platform for Django
teams&lt;/div&gt;
&lt;div class="line"&gt;- Gain confidence in releasing updates safely, consistently, and at
scale&lt;/div&gt;
&lt;div class="line"&gt;- Leverage open source tools to eliminate manual deployment headaches&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Whether you're writing the code or leading the team, you'll leave with a
clear, practical blueprint for shipping faster ‚Äî and with fewer
surprises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Calvin Hendryx-Parker</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/deploy-django-gitops-kubernetes-made-easy.html</guid><category>PyOhio 2025</category></item><item><title>Detecting Road Conditions from Space Using PyTorch, Public Data, and Free Satellite Imagery</title><link>https://pyvideo.org/pyohio-2025/detecting-road-conditions-from-space-using-pytorch-public-data-and-free-satellite-imagery.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Monitoring the health of city streets and roadways is expensive,
time-consuming, and often reactive. But what if we could automate part
of that process using satellite imagery and Python?&lt;/p&gt;
&lt;p&gt;In this talk, we‚Äôll walk through a real-world project that combines
transfer learning, PyTorch, and publicly available datasets to classify
road segment conditions (good, fair, poor) from aerial imagery. You'll
learn how to work with messy real-world geospatial data, fine-tune a
deep learning model using only a small training set (~2,000 examples),
and overcome common challenges like blurry imagery, inconsistent labels,
and overfitting.&lt;/p&gt;
&lt;p&gt;This session is practical and code-driven, aimed at data scientists and
analysts working in mobility analytics, urban development, or
infrastructure who want to apply machine perception techniques in their
work. By the end, you‚Äôll walk away with a reusable workflow for
analyzing and predicting urban infrastructure quality ‚Äî all using free
tools and open data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cynthia Ukawu</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/detecting-road-conditions-from-space-using-pytorch-public-data-and-free-satellite-imagery.html</guid><category>PyOhio 2025</category></item><item><title>From Data to Insights in Minutes: Accelerating Predictive Modelling (in Python) with AutoML</title><link>https://pyvideo.org/pyohio-2025/from-data-to-insights-in-minutes-accelerating-predictive-modelling-in-python-with-automl.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wondered how Machine Learning could automate your tasks
but hesitated due to time constraints or a lack of specialized coding
skills? If so, this session is for you!&lt;/p&gt;
&lt;p&gt;Traditionally, building predictive models required specialized coding
abilities and a deep understanding of statistical concepts. However,
AutoML simplifies this process and can automatically create machine
learning models from your data. This session will empower you to use a
simple, open-source AutoML tool to quickly create Python-based machine
learning prototypes (using the pandas, NumPy, and scikit-learn
frameworks) without writing any code. A live demonstration will show how
AutoML seamlessly (i) processes input data, (ii) selects and trains the
best algorithms for your specific use case, (iii) generates reproducible
Python code for easy integration, and most importantly, (iv) how to
interpret the results.&lt;/p&gt;
&lt;p&gt;Discover how AutoML can turn your transform your data into actionable
insights!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shailaja Sampat</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/from-data-to-insights-in-minutes-accelerating-predictive-modelling-in-python-with-automl.html</guid><category>PyOhio 2025</category></item><item><title>From Forge to Keyboard: Crafting a Developer‚Äôs Journey</title><link>https://pyvideo.org/pyohio-2025/from-forge-to-keyboard-crafting-a-developers-journey.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What do metalsmithing, managing a manufacturing floor, and raising
children have to do with writing code? More than you might think.&lt;/p&gt;
&lt;p&gt;Through stories of precision, adaptability, and resilience, I'll show
how non-technical experiences have helped me to thrive in tech. From
iteration at my forge, troubleshooting on the manufacturing floor, and
to building empathy as a parent I'll share how life's lessons have built
transferable skills.&lt;/p&gt;
&lt;p&gt;Whether you're a seasoned professional or a new developer, this session
will inspire you to embrace your own journey and discover the hidden
strengths you can bring to the table.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bianca Ploss</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/from-forge-to-keyboard-crafting-a-developers-journey.html</guid><category>PyOhio 2025</category></item><item><title>Graph Machine Learning in All Its Glory!</title><link>https://pyvideo.org/pyohio-2025/graph-machine-learning-in-all-its-glory.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Our world is complex: one approach to understanding and learning more
about relationships within the data is to represent it as a network or a
graph - with entities as nodes and relations between them as edges.
Network applications are abundant - Facebook, knowledge databases like
Wikipedia, traffic routes, molecular pathways, and the fun starts when
we start thinking of the physical world as graphs. Where there‚Äôs data,
there‚Äôs uncertainty and the need to predict the future to make it a
little less uncertain, which is why we need machine learning.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This talk will be about modeling one such network using a Graph Neural
Network (GNN) and making some predictions on it using Deep Graph
Library, an efficient and scalable open source framework to train and
serve GNNs. While GNNs can be used for any ML task, we‚Äôll focus on
building a recommendation model.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;But the transition from traditional data structures to graph-based
models is not straightforward. Unlike tabular data, graphs require
adapting ML principles to accommodate their topological and relational
complexities.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;This talk will help participants gain practical insights into modeling
their data as graphs and leveraging GNNs to build a recommendation
system. After the talk, the audience should have a good understanding
about:&lt;/div&gt;
&lt;div class="line"&gt;- How to structure their data as graph components and prepare it for
modeling&lt;/div&gt;
&lt;div class="line"&gt;- What a GNN is and how do we train, evaluate and serve models in DGL&lt;/div&gt;
&lt;div class="line"&gt;- End-to-end ML tasks on graph data: best practices to avoid pitfalls&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shreya Khurana</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/graph-machine-learning-in-all-its-glory.html</guid><category>PyOhio 2025</category></item><item><title>Guardrails: An Alternative View of Safely Working in Python</title><link>https://pyvideo.org/pyohio-2025/guardrails-an-alternative-view-of-safely-working-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python ‚Äì like many languages ‚Äì lets you do things that are completely
inadvisable. Many of the features that (left unchecked) allow you to do
inadvisable things were used to achieve things that have since become
necessary and defining features of Python.&lt;/p&gt;
&lt;p&gt;Python ‚Äì unlike many languages ‚Äì discovered that leaving these obvious
and necessary features lying around next to inadvisable things was a bad
idea, and built guardrails around them.&lt;/p&gt;
&lt;p&gt;In real life, guardrails are structures that make it easier to
understand how to be safe in an area where there is otherwise danger. If
respected, guardrails make you safer, but unlike walls or fences,
guardrails do not block you from danger.&lt;/p&gt;
&lt;p&gt;In Python, features like decorators, context managers, async functions,
importlib, and more are all guardrails that let you work with less-safe
Python machinery from a much safer distance.&lt;/p&gt;
&lt;p&gt;In this talk, we‚Äôre going to explore the idea of guardrails as a design
philosophy, and use that to explain Python‚Äôs attitude to safely working
with the language and its internals.&lt;/p&gt;
&lt;p&gt;We‚Äôll explore features of Python that are guardrails around less-safe
features ‚Äì what features they replaced, how those features could be used
incorrectly, and how the newer features allow you to use Python more
safely. As a special treat, you may also get to see how Python lets you
abuse these features*.&lt;/p&gt;
&lt;p&gt;We‚Äôll conclude with a discussion of how you can use Python‚Äôs guardrail
philosophy in your own code.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;(* SKILLED OPERATOR ON CLOSED CIRCUIT; DO NOT ATTEMPT)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Neugebauer</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/guardrails-an-alternative-view-of-safely-working-in-python.html</guid><category>PyOhio 2025</category></item><item><title>How a Solo Hobbyist Learned to Love Testing</title><link>https://pyvideo.org/pyohio-2025/how-a-solo-hobbyist-learned-to-love-testing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I don‚Äôt get paid to write code. I have no boss to answer to. I have no
partner to work with. Most of the apps I produce are for me to use. When
I was learning Python with online videos, I was introduced to testing. I
found it interesting, but it felt time consuming.&lt;/p&gt;
&lt;p&gt;Then I went back to an old app I had written and wanted to re-work. I
was lost. I couldn‚Äôt even figure out where to begin to make it work
again. I slowly decided to integrate testing into my personal workflow
on projects. Then I came upon an unexpected benefit: by testing my code
in a Django app, I was able to better learn what the library was doing
to convert a request into a response. I knew the steps, but through
writing a test with an expected output and seeing the error messages on
failures, I now intuitively understand how this process works. This talk
will demonstrate that.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carl James</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/how-a-solo-hobbyist-learned-to-love-testing.html</guid><category>PyOhio 2025</category></item><item><title>Keynote: Begin with the End in Mind: Why Your Community Work Matters</title><link>https://pyvideo.org/pyohio-2025/keynote-begin-with-the-end-in-mind-why-your-community-work-matters.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the world of open source, community work often begins with passion,
but to make it sustainable and impactful, we must begin with the end in
mind. In this keynote, I will reflect on my journey from contributing to
Django Girls to leading PyLadies Ghana and building inclusive tech
communities across Africa. Drawing lessons from open source leadership,
cultural identity, and personal growth, we will explore what it truly
means to build communities that outlast us. This talk challenges
attendees to rethink community involvement not just as volunteering, but
as systems-building, infused with purpose, clarity, and intention.
Through storytelling, reflection, and real-world examples, we will
experience how every contribution can create ripple effects of
confidence, leadership, and global impact.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Abigail Mesrenyame Dogbe</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/keynote-begin-with-the-end-in-mind-why-your-community-work-matters.html</guid><category>PyOhio 2025</category></item><item><title>Keynote: The Right Vibe: The Role of Community in the Age of AI</title><link>https://pyvideo.org/pyohio-2025/keynote-the-right-vibe-the-role-of-community-in-the-age-of-ai.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk explores the evolution of coding to the current trend of vibe
coding, where one allows AI to take the wheel of programmatic decisions.
Using an AI assistant, Windsurf, the audience will experience vibe
coding in action and learn about the opportunities and challenges that
exist in this new paradigm, as well as how they might impact programming
communities such as PyOhio,&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica Garson</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/keynote-the-right-vibe-the-role-of-community-in-the-age-of-ai.html</guid><category>PyOhio 2025</category></item><item><title>Lights! Python! Action!</title><link>https://pyvideo.org/pyohio-2025/lights-python-action.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Intended to be an entertaining overview of challenges faced and lessons
learned working on my first big maker project. Using code snippets,
pictures and short demos, I will discuss problems overcome while
developing new features and integrating new devices into my humble
animated sign, which includes lights along with rhythmic and melodic
components. I promise not to dance; no one wants to see that.&lt;/p&gt;
&lt;p&gt;The intended audience is anyone interested in maker projects. I will
also be touching on introductory-level topics in type hinting; the
standard library modules abc, dataclasses, signal, and threading; and
the 3rd-party modules aiohttp, gpiozero, and requests.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Note on Photosensitivity:&lt;/tt&gt;&lt;/div&gt;
&lt;div class="line"&gt;Based on &lt;a class="reference external" href="https://www.epilepsy.com/stories/shedding-light-photosensitivity-one-epilepsys-most-complex-conditions"&gt;this epilepsy.com
article&lt;/a&gt;,
this presentation should be safe for any photosensitive audience
member. I will include this information in a slide at the beginning of
the presentation, and give anyone in the audience the chance to leave
or ask questions before proceeding.&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The sign project uses standard 60 watt incandescent bulbs, which are
not capable of producing a strobe effect.&lt;/li&gt;
&lt;li&gt;For further safety, during the presentation, bulbs will not cycle on
and off more than 3 times per second.&lt;/li&gt;
&lt;li&gt;Additionally, the room‚Äôs lighting will not be darkened more than
usual for a standard presentation.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike McCaffrey</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/lights-python-action.html</guid><category>PyOhio 2025</category></item><item><title>Python for Hardware Folks</title><link>https://pyvideo.org/pyohio-2025/python-for-hardware-folks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a versatile language, and it‚Äôs often the go-to language for
data scientists, machine learning engineers, and web developers, among
others. However, often notably absent from this list are those working
on and developing things in the physical world. Too often is the humble
hardware engineer forgotten, doomed to a fate of spreadsheets. But what
if I told you there was a whole world of hardware-focused Python? This
talk will explore various examples of Python in the world of hardware
folks, including building test fixtures, data acquisition, and
industrial automation. We‚Äôll also look at other issues, including what
are the alternatives and why adoption of Python can be challenging. This
talk is meant for everyone, but especially those who love or want to
tinker with hardware.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alec Delaney</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/python-for-hardware-folks.html</guid><category>PyOhio 2025</category></item><item><title>The Core Values of a Successful Startup</title><link>https://pyvideo.org/pyohio-2025/the-core-values-of-a-successful-startup.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What really makes a startup succeed? It‚Äôs not just product-market fit or
clever tech‚Äîit‚Äôs the people and the culture they create together. In
this talk, I‚Äôll share lessons from my journey across three startups at
different stages, through acquisitions, pivots, and cultural
transformations.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;I‚Äôll explore the core values that I‚Äôve seen make the biggest
difference‚Äînot the ones painted on walls, but the ones that show up in
code reviews, standups, hard conversations, and late-night problem
solving. We‚Äôll talk about:&lt;/div&gt;
&lt;div class="line"&gt;‚Ä¢ Authenticity over performance&lt;/div&gt;
&lt;div class="line"&gt;‚Ä¢ Love and empathy as engineering virtues&lt;/div&gt;
&lt;div class="line"&gt;‚Ä¢ Presence and trust in high-stakes uncertainty&lt;/div&gt;
&lt;div class="line"&gt;‚Ä¢ Balance, sustainability, and knowing when to push or pause&lt;/div&gt;
&lt;div class="line"&gt;‚Ä¢ Grit, growth, and intentionality‚Äîwhat it really takes to build
something that lasts&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This talk is for anyone who wants to build or be part of a values-driven
team: engineers, tech leads, future founders, or just curious humans
trying to build things that matter.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Kim</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/the-core-values-of-a-successful-startup.html</guid><category>PyOhio 2025</category></item><item><title>Tune-Up Your Knowledge: A Beginner's Journey Under the Hood of Search Engines</title><link>https://pyvideo.org/pyohio-2025/tune-up-your-knowledge-a-beginners-journey-under-the-hood-of-search-engines.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Many people drive their cars around all day and never look under the
hood. Likewise, search is used every day, millions of times, with very
little thought for how those results appear on your device. While I
can't build a car engine from scratch (yet), I can build a search
engine! (mostly).&lt;/div&gt;
&lt;div class="line"&gt;In this talk, we'll take a beginner-friendly approach to discussing
how search engines work under the hood while building one from scratch
in Python along the way. We'll discuss some history of search,
demonstrate common data structures that make search engines fast and
effective, and review how we can get results in a meaningful order.&lt;/div&gt;
&lt;div class="line"&gt;We'll also take a high-level look at machine learning models and how
vector embeddings can easily understand similarity and influence
search results.&lt;/div&gt;
&lt;div class="line"&gt;This talk is for those interested in taking a beginner's peek under
the hood to understand some of the techniques used. No prior
experience with information retrieval required‚Äîjust bring your
curiosity about what really happens when you type a query into that
search bar.&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eddie Mitchell</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/tune-up-your-knowledge-a-beginners-journey-under-the-hood-of-search-engines.html</guid><category>PyOhio 2025</category></item><item><title>Wildfires!</title><link>https://pyvideo.org/pyohio-2025/wildfires.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wildfires have become more frequent nationwide, causing chaos not only
within fire zones but also affecting communities far away through smoke
and poor air quality. In this talk, we'll explore the world of
wildfires, understanding common terminology and clearing up
misconceptions. We will explore data sources, potential file formats,
and essential data fields using fire perimeter data. By leveraging
Python and Geopandas we will clean a dataset, analyze the cleaned
dataset, and finally create compelling visualizations of our wildfire
data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lazouich Ford</dc:creator><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-07-26:/pyohio-2025/wildfires.html</guid><category>PyOhio 2025</category></item></channel></rss>