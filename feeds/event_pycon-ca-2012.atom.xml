<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-ca-2012.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-11-11T00:00:00+00:00</updated><entry><title>A Pure Python Genetic Algorithms Framework</title><link href="https://pyvideo.org/pycon-ca-2012/a-pure-python-genetic-algorithms-framework.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Ashwin Panchapakesan</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/a-pure-python-genetic-algorithms-framework.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Genetic algorithms are a class of evolutionary algorithms, which have
been around since the mid 1950s. Since then, a lot of study has been
done on these algorithms, using them to solve various different types of
problems. While many frameworks exist to help develop and run
evolutionary algorithms, mine is aimed at simplicity for the user to
create a program to execute an evolutionary algorithm&lt;/p&gt;
</summary></entry><entry><title>An Ember.js adapter for Django</title><link href="https://pyvideo.org/pycon-ca-2012/an-emberjs-adapter-for-django.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Diego Muñoz Escalante</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/an-emberjs-adapter-for-django.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Ember is a JS framework based on established conventions that allows
writing complex applications with a small amount of code. Ember-data is
the component that connects this framework with a REST API.
Unfortunately, the conventions followed by its community are not
compatible with Tastypie, one of the most widely used Django libraries.
This adapter makes all these technologies work together.&lt;/p&gt;
</summary></entry><entry><title>Beyond Passwords: Secure Authentication with Mozilla Persona</title><link href="https://pyvideo.org/pycon-ca-2012/beyond-passwords-secure-authentication-with-mozi.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Dan Callahan</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/beyond-passwords-secure-authentication-with-mozi.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Persona is a decentralized, cross-browser login system that eliminates
site passwords. Learn about its design with a focus on adding it to
Python-based webapps, drawing from Mozilla's own experience.&lt;/p&gt;
</summary></entry><entry><title>Console Applications with Urwid</title><link href="https://pyvideo.org/pycon-ca-2012/console-applications-with-urwid.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Ian Ward</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/console-applications-with-urwid.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Demonstration of some of the best Python console applications written&lt;/p&gt;
&lt;p&gt;using Urwid:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;bpython-urwid&lt;/li&gt;
&lt;li&gt;videotop&lt;/li&gt;
&lt;li&gt;alot&lt;/li&gt;
&lt;li&gt;turses&lt;/li&gt;
&lt;li&gt;hachoir-urwid&lt;/li&gt;
&lt;li&gt;speedometer&lt;/li&gt;
&lt;li&gt;pudb&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Dancing with Big Data: Disco + Inferno</title><link href="https://pyvideo.org/pycon-ca-2012/dancing-with-big-data-disco-inferno.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Tim Spurway</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/dancing-with-big-data-disco-inferno.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In our search for a better Map/Reduce framework we found Disco, an
Erlang/Python based Map/Reduce framework that's small, fast, elegant,
understandable. We needed a way to tame the power of Disco and that's
when we came up with the Inferno project which takes even more
complexity out of Map/Reduce. With Inferno you concentrate about what
you want from your data and not the underlying complexity.&lt;/p&gt;
</summary></entry><entry><title>Distributed, Real-time Web Apps with Stack.io</title><link href="https://pyvideo.org/pycon-ca-2012/distributed-real-time-web-apps-with-stackio.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Gabriel Grant</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/distributed-real-time-web-apps-with-stackio.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Stack.io[1] is an open-source tool to quickly build real-time web apps.
By directly linking clients to back-end services via WebSockets,
Stack.io helps decompose complex code into a set of simple components in
Python or Node.js. It augments standard RPC with bi-directional
streaming, and provides a layer of auth and service discovery on top.&lt;/p&gt;
&lt;p&gt;[1]: &lt;a class="reference external" href="https://github.com/dotcloud/stack.io"&gt;https://github.com/dotcloud/stack.io&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Gevent-socketio, cross-framework real-time web live demo</title><link href="https://pyvideo.org/pycon-ca-2012/gevent-socketio-cross-framework-real-time-web-li.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Alexandre Bourget</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/gevent-socketio-cross-framework-real-time-web-li.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;gevent-socketio is the cross-framework python implementation of the
Socket.IO protocol, based on Gevent's cooperative concurrency model.
Alexandre Bourget is the maintainer of the project.&lt;/p&gt;
&lt;p&gt;In this talk, we're going to have a live demo of its capabilities
building Google Analytics in 45 minutes, with some AngularJS on the
front-end, and other cool integrations.&lt;/p&gt;
&lt;p&gt;Black chocolate will await you.&lt;/p&gt;
</summary></entry><entry><title>GPIO on the Raspberry Pi</title><link href="https://pyvideo.org/pycon-ca-2012/gpio-on-the-raspberry-pi.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Bonnie King</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/gpio-on-the-raspberry-pi.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;GPIO on the Raspberry Pi with Python.&lt;/p&gt;
</summary></entry><entry><title>Graph Databases in Python</title><link href="https://pyvideo.org/pycon-ca-2012/graph-databases-in-python.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Javier de la Rosa</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/graph-databases-in-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Since the irruption in the market of the NoSQL concept, graph databases
have been traditionally designed to be used with Java or C. With some
honorable exceptions, there isn't an easy way to manage graph databases
from Python. In this talk, I will introduce you some of the tools that
you can use today in order to work with those new challenging databases,
from our favorite languge, Python.&lt;/p&gt;
</summary></entry><entry><title>Horizontally Scaling Your Database with Django</title><link href="https://pyvideo.org/pycon-ca-2012/horizontally-scaling-your-database-with-django.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Ash Christopher</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/horizontally-scaling-your-database-with-django.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;When web apps reach a certain size, often their data footprint will
outgrow what can reasonably be stored on a single database. Scaling your
database horizontally by adding more servers is the dream but it can be
a daunting task. This talk outlines the process I used to add horizontal
scaling to Wave Accounting's infrastructure.&lt;/p&gt;
</summary></entry><entry><title>How to Solve a Problem Like Santa Claus</title><link href="https://pyvideo.org/pycon-ca-2012/how-to-solve-a-problem-like-santa-claus.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Andrew Francis</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/how-to-solve-a-problem-like-santa-claus.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Santa Claus Problem is a conceptually simple but notoriously tough
concurrency problem. For 20 years, the problem has been used to
highlight new concurrency features. Polyphonic C# sports an elegant
solution using join patterns. I prototyped a version of join patterns
for Stackless Python. Rather than hack Stackless Python's C code base, I
use PyPy's stackless.py module and greenlets!&lt;/p&gt;
</summary></entry><entry><title>How you can contribute to Python</title><link href="https://pyvideo.org/pycon-ca-2012/how-you-can-contribute-to-python.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Éric Araujo</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/how-you-can-contribute-to-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Did you know that you could contribute to Python? From documentation&lt;/p&gt;
&lt;p&gt;work to patch reviews to new features to blogging, there are a number of&lt;/p&gt;
&lt;p&gt;ways you can give back to Python. This talk for beginners will walk you&lt;/p&gt;
&lt;p&gt;through these ways with concrete demonstrations.&lt;/p&gt;
</summary></entry><entry><title>Integrating Geocode Data with Python</title><link href="https://pyvideo.org/pycon-ca-2012/integrating-geocode-data-with-python.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Karen Bennet</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/integrating-geocode-data-with-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will showcase the integration of Google Map API, Maptronics
and OpenStreetMap Data with Python in the context of a reuse store
locator module. We will show you the basics of how to setup your project
and what you need to know about rendering maps, parsing and importing
the data, etc. in Python. Python is the best language for doing GIS.&lt;/p&gt;
</summary></entry><entry><title>Introduction to OpenStack</title><link href="https://pyvideo.org/pycon-ca-2012/introduction-to-openstack.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Sandy Walsh</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/introduction-to-openstack.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;OpenStack is a large python application being developed collaboratively
with Rackspace, Red Hat, Canonical, Dell, HP, Intel, IBM, Citrix and a
host of other companies. This application is the software that Cloud
Computing is built on. It is a controller for massive farms of
hypervisors. In this talk, you'll learn about the architecture and
implementation of OpenStack.&lt;/p&gt;
</summary></entry><entry><title>Programmatically Managing Python Workloads Across Multiple Clouds</title><link href="https://pyvideo.org/pycon-ca-2012/programmatically-managing-python-workloads-across.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Chayim Kirshen</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/programmatically-managing-python-workloads-across.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk covers using Python to initiate change on the infrastructure
side; we'll discuss on great tools like Django, libCloud, and Celery. We
will focus on node creation and destruction within multiple clouds, as
well as the frameworks used to achieve this.&lt;/p&gt;
</summary></entry><entry><title>Python for Humans</title><link href="https://pyvideo.org/pycon-ca-2012/python-for-humans-0.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Kenneth Reitz</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/python-for-humans-0.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python’s ecosystem is held up to a high standard, but it falls short in
a few key areas. A handful of crucial APIs are an absolute pain to work
with. We’ll go over where these APIs went wrong and learn about strong
and elegant API design. The high barriers to entry in Python will be
discussed. Potential solutions will be proposed.&lt;/p&gt;
</summary></entry><entry><title>Python in your database</title><link href="https://pyvideo.org/pycon-ca-2012/python-in-your-database.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Steve Singer</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/python-in-your-database.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Pl/Python is a stored function language for PostgreSQL that allows you
to write database stored functions in python.&lt;/p&gt;
</summary></entry><entry><title>Science And Python: retrospective of a (mostly) successful decade</title><link href="https://pyvideo.org/pycon-ca-2012/science-and-python-retrospective-of-a-mostly-s.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Fernando Pérez</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/science-and-python-retrospective-of-a-mostly-s.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The relation between Python and scientific work is a long one, and in
the last 10+ years it has turned into a major success story. I will
review this process from the vantage point of IPython’s role, and will
look into the challenges ahead for Python to remain a leader in this
space.&lt;/p&gt;
</summary></entry><entry><title>Server Log Analysis with Pandas</title><link href="https://pyvideo.org/pycon-ca-2012/server-log-analysis-with-pandas.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Taavi Burns</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/server-log-analysis-with-pandas.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Use iPython, matplotlib, and Pandas to slice, dice, and visualise your
application's behaviour through its logs.&lt;/p&gt;
</summary></entry><entry><title>Speed Up Your Database</title><link href="https://pyvideo.org/pycon-ca-2012/speed-up-your-database.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Anna Filina</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/speed-up-your-database.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Are your queries slow? Learn how to speed them up through better SQL
crafting and use meaningful indices. Attendees will understand what
works well and what doesn't, and will walk away with a checklist for
faster databases.&lt;/p&gt;
</summary></entry><entry><title>Statistical Data Exchange and Publishing - an introduction to SDMX and DSPL</title><link href="https://pyvideo.org/pycon-ca-2012/statistical-data-exchange-and-publishing-an-int.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Ram Venkat</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/statistical-data-exchange-and-publishing-an-int.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In the era of big data analytics it makes even more sense to have
efficient and standardized way of exchanging, sharing and publishing
statistical data. This talk explores two such mechanisms - SDMX , a
standard for exchange of statistical data for national statistical
organizations and Google's DSPL that allows data to be published to
Google Public Data Explorer.&lt;/p&gt;
</summary></entry><entry><title>Success Rate of Technology Projects</title><link href="https://pyvideo.org/pycon-ca-2012/success-rate-of-technology-projects.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Dimitri Gnidash</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/success-rate-of-technology-projects.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Why do some projects fail and some succeed? Is it about technology and
quality of developers?&lt;/p&gt;
&lt;p&gt;I will be advocating that the success or failure of a given technology
project will be dependent on factors frequently outside of control of
development team.&lt;/p&gt;
</summary></entry><entry><title>Testing Django with Travis CI</title><link href="https://pyvideo.org/pycon-ca-2012/testing-django-with-travis-ci.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Adam McKerlie</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/testing-django-with-travis-ci.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this talk, aimed at novice Python and Django developers, we'll have a
look at getting started with testing your Django applications, how to
properly write your first test case and then moving to automated testing
with Travis CI.&lt;/p&gt;
</summary></entry><entry><title>Wilderness Labs</title><link href="https://pyvideo.org/pycon-ca-2012/wilderness-labs.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Albert O'Connor</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/wilderness-labs.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Lessons learned and inspiration from developing Django applications&lt;/p&gt;
&lt;p&gt;quickly in isolated locations via Wilderness Labs and other zero&lt;/p&gt;
&lt;p&gt;budget projects.&lt;/p&gt;
</summary></entry><entry><title>A Python Æsthetic: Beauty and Why I Python</title><link href="https://pyvideo.org/pycon-ca-2012/a-python-sthetic-beauty-and-why-i-python.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Brandon Rhodes</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/a-python-sthetic-beauty-and-why-i-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Why did I start using Python in the late 1990s? Was it for any of the
reasons that I remain a fan today? In this talk we will explore how
Python, even while training us to avoid and become blind to its rough
edges, works to teach us new ways of making programs beautiful. Even
novices should learn new things to love about Python by listening to
this talk!&lt;/p&gt;
</summary></entry><entry><title>A really, really, really, fast tour of WebDriver</title><link href="https://pyvideo.org/pycon-ca-2012/a-really-really-really-fast-tour-of-webdriver.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>adam goucher</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/a-really-really-really-fast-tour-of-webdriver.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;WebDriver is actually not that complicated. No, really! If you know
about Page Objects, synchronization and the JS Executor you can solve
just about any problem. 20 minutes is not a lot of time, but we'll cover
all three of those things. Honest!&lt;/p&gt;
</summary></entry><entry><title>Avoiding The Search Hall Of Shame</title><link href="https://pyvideo.org/pycon-ca-2012/avoiding-the-search-hall-of-shame.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Daniel Lindsley</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/avoiding-the-search-hall-of-shame.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Most pieces of modern software (web, desktop or otherwise) include that
innocuous little text box with inviting word &amp;quot;Search&amp;quot; nearby. But behind
it lies a torrid world of bad ideas, worse ideas &amp;amp; ideas no computer
should be made to suffer. If you want to keep your good name &amp;amp; stay out
of the hall of shame, this talk will give you a grounding on how to make
the search in your software better.&lt;/p&gt;
</summary></entry><entry><title>Configuration management with ZooKeeper</title><link href="https://pyvideo.org/pycon-ca-2012/configuration-management-with-zookeeper.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Matthew Hooker</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/configuration-management-with-zookeeper.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk is about Jones, a robust configuration management interface
for Zookeeper. It will cover what ZooKeeper is, and how it works. I'll
talk about the problems of configuration management and how it can be
solved using the primitives available in ZooKeeper. If there's time I
will go in to additional use cases of ZooKeeper.&lt;/p&gt;
</summary></entry><entry><title>Distributed Programming in Python: A Model for Strong, Eventual Consistency</title><link href="https://pyvideo.org/pycon-ca-2012/distributed-programming-in-python-a-model-for-st.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>James King</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/distributed-programming-in-python-a-model-for-st.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Starting with the theory behind eventual consistency we'll dive into a
practical toolkit, knockblock, for programming these types of systems.&lt;/p&gt;
</summary></entry><entry><title>DynamoDB and DynamoDB-Mapper -- Building scalable Python applications with Amazon's NoSQL database</title><link href="https://pyvideo.org/pycon-ca-2012/dynamodb-and-dynamodb-mapper-building-scalable.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Maxime Noël</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/dynamodb-and-dynamodb-mapper-building-scalable.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In January 2012, Amazon introduced DynamoDB, a NoSQL database service
with seamless, linear scalability. How can we neatly integrate it in
Python applications and address its shortcomings?&lt;/p&gt;
</summary></entry><entry><title>Everything you wanted to know about deploying web apps on Windows but were too horrified to ask</title><link href="https://pyvideo.org/pycon-ca-2012/everything-you-wanted-to-know-about-deploying-web.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Christopher Lambacher</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/everything-you-wanted-to-know-about-deploying-web.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Conventional wisdom says that no one deploys web applications on
Windows. I ship Python backed web sites on Windows that are cumulatively
visited by 1 in 50 Canadians every month. This talk will cover my
experience with deploying Python based web applications on Windows, why
you might want to do this and and the horrors in store for you if you
choose to sacrifice your sanity and dive in.&lt;/p&gt;
</summary></entry><entry><title>Fail Faster, Fail Better</title><link href="https://pyvideo.org/pycon-ca-2012/fail-faster-fail-better.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Meredith L. Patterson</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/fail-faster-fail-better.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Fail Faster, Fail Better&lt;/p&gt;
</summary></entry><entry><title>from business import logic</title><link href="https://pyvideo.org/pycon-ca-2012/from-business-import-logic.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Bogdan Chmielewski</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/from-business-import-logic.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Programmers generally spend their time heads-down crafting complex
technical solutions, however advocating and communicating in the wider
business context is often challenging. This talk uses a visual approach
to describe how business managers think, with the goal of increasing
your personal communication effectiveness.&lt;/p&gt;
</summary></entry><entry><title>GEvent + ZMQ</title><link href="https://pyvideo.org/pycon-ca-2012/gevent-zmq.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Michael Woodworth</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/gevent-zmq.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;GEvent + ZMQ&lt;/p&gt;
</summary></entry><entry><title>Hit the Flask and Get Some REST: Rewriting the Cloudant API in a Single Python Back End</title><link href="https://pyvideo.org/pycon-ca-2012/hit-the-flask-and-get-some-rest-rewriting-the-cl.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Joan Touzet</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/hit-the-flask-and-get-some-rest-rewriting-the-cl.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Cloudant Engineer Joan Touzet will explain the design decisions that led
the company to rewrite the supporting API layer to all its back-end
systems in Python using the Flask microframework to create a unified,
RESTful API.&lt;/p&gt;
</summary></entry><entry><title>I Wish I Knew How to Quit You: Secrets to sustainable Python communities</title><link href="https://pyvideo.org/pycon-ca-2012/i-wish-i-knew-how-to-quit-you-secrets-to-sustain.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Elizabeth Leddy</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/i-wish-i-knew-how-to-quit-you-secrets-to-sustain.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Plone is one of the oldest open source python communities still working
today. Despite a decade of trials and tribulations, the community is
stronger than ever thanks to a unique and persisted python subculture.
10 lessons over 10 years on building a great community.&lt;/p&gt;
</summary></entry><entry><title>Lightweight Web Services with Pyramid</title><link href="https://pyvideo.org/pycon-ca-2012/lightweight-web-services-with-pyramid.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Tres Seaver</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/lightweight-web-services-with-pyramid.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;As more and more of the web experience moves into the browser, enabling
acesss to your application's data via asynchronous HTTP calls is
increasingly more important. Pyramid is a lightweight web framework
which has several features for serviing such queries easy.&lt;/p&gt;
</summary></entry><entry><title>MongoDB and Gene databases</title><link href="https://pyvideo.org/pycon-ca-2012/mongodb-and-gene-databases.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Vidya Ayer</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/mongodb-and-gene-databases.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Managing scientific data in the Bioinformatics domain is a complex
process and this talk will introduce you to MongoDB used to enable
datamining and processing of very large Gene datasets obtained from
various sources.&lt;/p&gt;
</summary></entry><entry><title>Network programming for automation developers</title><link href="https://pyvideo.org/pycon-ca-2012/network-programming-for-automation-developers.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Mark Côté</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/network-programming-for-automation-developers.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Advice on how to design and implement networking code for use in
automation: learn how sockets work, plan for and handle errors, and
design effective protocols.&lt;/p&gt;
</summary></entry><entry><title>NINJA-IDE, an IDE specially designed for Python</title><link href="https://pyvideo.org/pycon-ca-2012/ninja-ide-an-ide-specially-designed-for-python.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Martin Alderete</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/ninja-ide-an-ide-specially-designed-for-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;One of the recurrent questions in all the Python communities around the
world is: &amp;quot;What is a good IDE for Python?&amp;quot; As answer to that question
NINJA-IDE born from a group of members of the Argentinian Python
Community (PyAr). NINJA-IDE is an Open Source distributed under GPLv3
license, cross-platform, lightweight, powerful and full of features IDE.&lt;/p&gt;
</summary></entry><entry><title>Once you Scoop, no need to fork</title><link href="https://pyvideo.org/pycon-ca-2012/once-you-scoop-no-need-to-fork.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Yannick Hold</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/once-you-scoop-no-need-to-fork.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The future is parallel. In this rapidly evolving parallel world, the
scoop is that parallel programming can be much simpler, transparent and
elegant. Introducing SCOOP, a new distributed task package allowing easy
concurrent parallel programming on various environments. We propose a
new way of handling distributed computing based on simplicity, beauty
and the Future (see PEP-3148).&lt;/p&gt;
</summary></entry><entry><title>Profiling for Performance</title><link href="https://pyvideo.org/pycon-ca-2012/profiling-for-performance.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Mike Fletcher</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/profiling-for-performance.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;We will discuss how to profile Python code, how to interpret profiles,
and how (and how not) to use profiling to improve your code's run-time
performance. We will look at both built-in and external tools (including
RunSnakeRun and SnakeViz). We will also discuss the wider issues of how
to approach optimization in your code base.&lt;/p&gt;
</summary></entry><entry><title>Python and Kyotocabinet: Memory Mapped Storage</title><link href="https://pyvideo.org/pycon-ca-2012/python-and-kyotocabinet-memory-mapped-storage.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Evan Hicks</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/python-and-kyotocabinet-memory-mapped-storage.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The problem of how to store and access data in real time is one with
many different variations and flavours that applications today are
trying to solve. One version of this problem is storing data in a way
that optimizes for reading data, while sacrificing performance from
writing data. One piece of software that Chango uses to solve this
problem is Kyotocabinet. This is a memory-mapped, key ...&lt;/p&gt;
</summary></entry><entry><title>Python development with Komodo IDE</title><link href="https://pyvideo.org/pycon-ca-2012/python-development-with-komodo-ide.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Todd Whiteman</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/python-development-with-komodo-ide.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Todd Whiteman, the lead developer of ActiveState's Komodo IDE, will show
you the best practices for creating, writing, debugging and deploying
Python applications when using Komodo IDE.&lt;/p&gt;
</summary></entry><entry><title>PyCon Canada 2012 - Saturday Morning Keynote</title><link href="https://pyvideo.org/pycon-ca-2012/saturday-morning-keynote.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Jessica McKellar</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/saturday-morning-keynote.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Jessica is a veteran open source contributor and a maintainer for
several open source projects, including OpenHatch and the Twisted
event-driven networking engine; she wrote a chapter on Twisted for The
Architecture of Open Source Applications Volume II and is working with
O'Reilly on a new edition of Twisted Networking Essentials. Jessica is a
Python Software Foundation board member and an organizer for the largest
Python user group in the world.&lt;/p&gt;
</summary></entry><entry><title>SchoolTool</title><link href="https://pyvideo.org/pycon-ca-2012/schooltool.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Douglas Cerna</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/schooltool.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;SchoolTool is an FOSS student information system developed in Python
using the Zope 3 framework. It has several basic components a teacher
could use: gradebook, attendance, calendars, etc and some &amp;quot;advanced&amp;quot;
ones like interventions and skill tracking. It's easily available in the
Ubuntu Linux distribution.&lt;/p&gt;
</summary></entry><entry><title>Supercharge web application prototypes with the App Engine Python SDK</title><link href="https://pyvideo.org/pycon-ca-2012/supercharge-web-application-prototypes-with-the-a.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Vlad Filippov</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/supercharge-web-application-prototypes-with-the-a.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The goal of this talk is to showcase how App Engine makes it exciting to
prototype back-end services for larger projects. Creating such
prototypes helps shape project requirements, develop datastores and
improve testing coverage.&lt;/p&gt;
</summary></entry><entry><title>The SQLAlchemy Session - In Depth</title><link href="https://pyvideo.org/pycon-ca-2012/the-sqlalchemy-session-in-depth.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Mike Bayer</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/the-sqlalchemy-session-in-depth.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A detailed walkthrough of SQLAlchemy's Session, describing the rationale
for its existence, its driving philosophies, and finally a walkthrough
of Session lifecycle through the use of an animated diagram. We'll cover
how the relational database refers to database rows within a
transaction, and how the Session has over the years developed a tight,
proxied integration with this lifecycle.&lt;/p&gt;
</summary></entry><entry><title>Twisted History of Python Packaging</title><link href="https://pyvideo.org/pycon-ca-2012/twisted-history-of-python-packaging.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Mahdi Yusuf</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/twisted-history-of-python-packaging.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python Packaging has had a more than less than ideal evolution. This
talk aims to clarify this evolution and where packaging is headed in the
future.&lt;/p&gt;
</summary></entry><entry><title>Using SendGrid Email APIs to Bring Your Eh? Game</title><link href="https://pyvideo.org/pycon-ca-2012/using-sendgrid-email-apis-to-bring-your-eh-game.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Ian Douglas</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/using-sendgrid-email-apis-to-bring-your-eh-game.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This lightning talk will introduce SendGrid and its public Python
library, and show several examples of sending simple transactional
messages using our APIs. It will also introduce you to other available
APIs we have available for retrieving/parsing stats, managing your
profile, retrieving lists of delivery failures, and more.&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Writing self-documenting scientific code using physical quantities</title><link href="https://pyvideo.org/pycon-ca-2012/writing-self-documenting-scientific-code-using-ph.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Trevor Bekolay</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/writing-self-documenting-scientific-code-using-ph.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In high school science, we're taught to always include units in
equations. Why not in scientific Python code? I'll show why and how to
keep track of units in Python using real-world examples.&lt;/p&gt;
</summary></entry></feed>