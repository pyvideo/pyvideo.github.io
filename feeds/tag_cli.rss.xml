<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Tue, 07 May 2019 00:00:00 +0000</lastBuildDate><item><title>Clime: With A Line, Convert Your Functions into a Multi-Command CLI Program</title><link>https://pyvideo.org/pycon-japan-2012/clime-with-a-line-convert-your-functions-into-a-multi-command-cli-program.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Clime provides an intuitive approach to convert your module contains functions into a multi-command CLI program. This talk will introduce the Clime and take a deeper look into the inner of Clime.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mosky Liu</dc:creator><pubDate>Sat, 15 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-15:pycon-japan-2012/clime-with-a-line-convert-your-functions-into-a-multi-command-cli-program.html</guid><category>clime</category><category>cli</category></item><item><title>Keeping the grip on decoupled code using CLIs</title><link>https://pyvideo.org/pycon-de-2017/keeping-the-grip-on-decoupled-code-using-clis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Anne Matthies&lt;/strong&gt; (&amp;#64;babeltron)&lt;/p&gt;
&lt;p&gt;Anne Matthies has been coding data stuff professionally since 1996. She switched to Python 2 in 2000, to Python 3 in 2015. Currently, she’s working at Babbel, Berlin, responsible for building and operating the data platform – and developing the next generation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So you’ve decoupled your code monolith into all those micro chunks. When someone asks &amp;quot;How can I…&amp;quot; you want to answer: &amp;quot;That’s easy! We’ve built that.&amp;quot; Actually, you’ve built all parts needed for that. Who plugs them together? And how?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Keeping the grip on decoupled code using CLIs&lt;/p&gt;
&lt;p&gt;So you’ve decoupled your monolith spaghetti code into micro chunks. You’ve switched to infrastructure as code, and you’re confident that it scales horizontally. Your data pipelines are pretty resilient, your CI pipeline runs tests on every single git push.&lt;/p&gt;
&lt;p&gt;And then, you get a new team member. Or your CTO wants to plot data of his brandnew sandbox project that isn’t integrated into your pipelines. Or someone just asks &amp;quot;How can I…&amp;quot; and you want to answer: &amp;quot;That’s easy! We’ve built that… – Well, actually, we’ve built all parts needed for that.&amp;quot; Who plugs them together? And how?&lt;/p&gt;
&lt;p&gt;In my talk, I’d like to show how lightweight CLIs can be Ariadne Threads through the labyrinth of micro components. How at Babbel we use conda, setuptools entrypoints and simple CLI scripts to keep the grip on our data platform code chunks&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anne Matthies</dc:creator><pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-25:pycon-de-2017/keeping-the-grip-on-decoupled-code-using-clis.html</guid><category>pydata</category><category>devops</category><category>cli</category><category>python</category></item><item><title>Awesome CLI</title><link>https://pyvideo.org/pycon-italia-2017/awesome-cli.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wanted to get user input from your command line program?
Or maybe color the output a bit? Or do you want to write an immersive
terminal application like top, or even vim? Then you need to speak a bit
of terminal! This talk describes how to talk to your terminal from
scratch and goes on to show why the Python library prompt-toolkit is so
awesome.&lt;/p&gt;
&lt;p&gt;The terminal emulators we run so many of our programming tools in are
more powerful than we give them credit for, and the key to that power is
understanding the interface. This talk will cover terminal colors and
styles, writing to arbitrary portions of the screen, handling signals
from the terminal, determining the terminal’s dimensions and scrollback
buffer behavior.&lt;/p&gt;
&lt;p&gt;Terminal programming can get hairy, especially if you want to support
multiple platforms like Mac, Linux and Win; along the way we’ll deal
with encoding issues, automatisation issues and look into 4 decades’ of
terminal communication. By gaining a deeper understanding of these
issues, we’ll be able to choose from the abstractions over them offered
by Python libraries like Blessings, prompt-toolkit, asciimatics etc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Fink</dc:creator><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-09:pycon-italia-2017/awesome-cli.html</guid><category>terminal</category><category>prompt-toolkit</category><category>cli</category><category>command-line</category></item><item><title>tqdm - A Fast, Extensible Progress Bar for Python and CLI</title><link>https://pyvideo.org/pydata-meetups/tqdm-a-fast-extensible-progress-bar-for-python-and-cli.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A demonstration of the world's most-used progress bar by its primary developer&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Casper da Costa-Luis</dc:creator><pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-07:pydata-meetups/tqdm-a-fast-extensible-progress-bar-for-python-and-cli.html</guid><category>lightning-talks</category><category>tutorial</category><category>performance</category><category>jupyter</category><category>notebook</category><category>tqdm</category><category>progressbar</category><category>progressmeter</category><category>progress-bar</category><category>meter</category><category>rate</category><category>eta</category><category>console</category><category>terminal</category><category>time</category><category>progress</category><category>bar</category><category>gui</category><category>python</category><category>parallel</category><category>cli</category><category>utilities</category></item></channel></rss>