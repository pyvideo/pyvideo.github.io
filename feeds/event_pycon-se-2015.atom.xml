<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-se-2015.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-06-04T00:00:00+00:00</updated><entry><title>GitFs: Building a file system in Python</title><link href="https://pyvideo.org/pycon-se-2015/gitfs-building-a-file-system-in-python.html" rel="alternate"></link><published>2015-06-04T00:00:00+00:00</published><updated>2015-06-04T00:00:00+00:00</updated><author><name>Vlad Temian</name></author><id>tag:pyvideo.org,2015-06-04:pycon-se-2015/gitfs-building-a-file-system-in-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;GitFs is an open-source filesystem which was designed to bring the full
powers of Git to everyone, no matter how little they know about
versioning. In this talk we will take a look at some of the crucial
aspects involved in building a reliable FUSE filesystem, the steps that
we took in building GitFs, especially in handling the git objects, what
testing methods we have used for it and also we will share the most
important lessons learned while building it.&lt;/p&gt;
</summary></entry><entry><title>Why Django Sucks</title><link href="https://pyvideo.org/pycon-se-2015/why-django-sucks.html" rel="alternate"></link><published>2015-06-04T00:00:00+00:00</published><updated>2015-06-04T00:00:00+00:00</updated><author><name>Emil Stenstr</name></author><id>tag:pyvideo.org,2015-06-04:pycon-se-2015/why-django-sucks.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;When you love something very much, you run the risk of losing
perspective. This is my chance to take on a more negative view of
Django, and talk about its worst parts. I will talk about five problem
areas: Async, Components, NoSQL, Isomorphic apps, and Single codebase.&lt;/p&gt;
</summary></entry><entry><title>A Reference DASH Live Video Source</title><link href="https://pyvideo.org/pycon-se-2015/a-reference-dash-live-video-source.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Torbjörn Einarsson</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/a-reference-dash-live-video-source.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;DASH is the new standard for HTML-5 video streaming to browsers. I'll
describe a reference synthetic live test source that is available at
&lt;a class="reference external" href="http://vm2.dashif.org"&gt;http://vm2.dashif.org&lt;/a&gt;. It is a mod_python module which manipulates DASH
manifests and media segments to provide an infinite wall-clock
synchronized stream.&lt;/p&gt;
</summary></entry><entry><title>Analyzing data with Pandas</title><link href="https://pyvideo.org/pycon-se-2015/analyzing-data-with-pandas.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Robin Linderborg</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/analyzing-data-with-pandas.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A gentle introduction to data analysis and visualization in Python using
the Pandas library. We will explore how to clean, restructure, analyze
and visualize data sets.&lt;/p&gt;
</summary></entry><entry><title>Bulding an interpreter in RPython</title><link href="https://pyvideo.org/pycon-se-2015/bulding-an-interpreter-in-rpython.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Julian Berman</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/bulding-an-interpreter-in-rpython.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;RPython is a language and toolchain for building interpreters, most
prominently PyPy, a Python interpreter. But RPython is a powerful tool
for writing interpreters for many dynamic languages. We'll learn how to
write a simple interpreter in RPython by implementing a parser, bytecode
compiler and VM for a small language.&lt;/p&gt;
</summary></entry><entry><title>Data Processing &amp; Machine Learning with Python</title><link href="https://pyvideo.org/pycon-se-2015/data-processing-machine-learning-with-python.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Ahmed Kachkach</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/data-processing-machine-learning-with-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk gives a quick overview of Python's capabilities as a
data-processing and machine learning tool through practical examples:
gathering data from the web or a local file, validating/modifying it and
finally analyzing it to build models for classification and prediction
tasks&lt;/p&gt;
</summary></entry><entry><title>Deep Learning and Deep Data Science</title><link href="https://pyvideo.org/pycon-se-2015/deep-learning-and-deep-data-science.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Roelof Pieters</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/deep-learning-and-deep-data-science.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Deep Learning, anyone who has followed machine learning over the past
years has heard it. In this talk I will go past the hype and show what
deep learning actually means and how one goes about solving complex
machine learning task with a minimum amount of code, with the help of
theano, an amazing python library for deep learning. I will show
examples from my own research in language and vision, and hope to show
that Deep Learning is not only fun, but also not as difficult as one
might expect.&lt;/p&gt;
</summary></entry><entry><title>Docker and Python at Spotify</title><link href="https://pyvideo.org/pycon-se-2015/docker-and-python-at-spotify.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Belhorma Bendebiche</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/docker-and-python-at-spotify.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Docker is a tool that helps containerize, package and run applications
in their own isolated environment, greatly simplifying the deployment
process.This talk is about how we containerized some of our Python
services at Spotify, the challenges faced and how we solved them.&lt;/p&gt;
</summary></entry><entry><title>From Explicitness to convention: A Journey from Django to Rails</title><link href="https://pyvideo.org/pycon-se-2015/from-explicitness-to-convention-a-journey-from-d.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Rebecca Meritz</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/from-explicitness-to-convention-a-journey-from-d.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;I've just switched jobs from writting Django fulltime to writing Rails
fulltime. This talk will be a reflection on what I miss from Django and
why and what I've gained from Rails.&lt;/p&gt;
</summary></entry><entry><title>Hacking Human Language</title><link href="https://pyvideo.org/pycon-se-2015/hacking-human-language.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Hendrik Heuer</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/hacking-human-language.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;If you convert words into numbers, you can do interesting things with
them. You can compare the topics in a book, make better translations and
tell if a sentence is positive or negative. Python libraries like gensim
and spaCy make it easy to play with this for fun, profit or social
science.&lt;/p&gt;
</summary></entry><entry><title>How Python drives the analysis of billions of DNA sequences</title><link href="https://pyvideo.org/pycon-se-2015/how-python-drives-the-analysis-of-billions-of-dna.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Guillermo Carrasco</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/how-python-drives-the-analysis-of-billions-of-dna.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The first part will focus on how Python manages the preprocessing and
analysis of billions of DNA sequences in a completely automated way. We
will also cover how sequencing results are visualised using Flask and
MongoEngine to solve medical mysteries in the clinic today.&lt;/p&gt;
</summary></entry><entry><title>How to build a Python web application with Flask and Neo4j</title><link href="https://pyvideo.org/pycon-se-2015/how-to-build-a-python-web-application-with-flask.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Nicole White</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/how-to-build-a-python-web-application-with-flask.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Flask, a popular Python web framework, has many tutorials available
online that use an SQL database to store information about the website’s
users and their activities. In this session, we’ll use Neo4j instead of
SQL to build social aspects into our application, including recommending
similar users to the logged-in user.&lt;/p&gt;
</summary></entry><entry><title>IPython: How a notebook is changing science</title><link href="https://pyvideo.org/pycon-se-2015/ipython-how-a-notebook-is-changing-science.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Juan Luis Cano</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/ipython-how-a-notebook-is-changing-science.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;IPython was born as an Interactive Python shell on steroids 14 years
ago, but its notebook tool is shaping the way scientists, developers and
even journalists communicate and explore science. Let us examine
IPython's importance in Open Science now that Nature highlighted one of
its awesome features!&lt;/p&gt;
</summary></entry><entry><title>Keynote: Data Science Deployed</title><link href="https://pyvideo.org/pycon-se-2015/keynote-data-science-deployed.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Ian Ozswald</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/keynote-data-science-deployed.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Keynote of the first day of PyCon SE 2015&lt;/p&gt;
</summary></entry><entry><title>Keynote: The Ethics of Being a Programmer</title><link href="https://pyvideo.org/pycon-se-2015/keynote-the-ethics-of-being-a-programmer.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Kate Heddleston</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/keynote-the-ethics-of-being-a-programmer.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Keynote of the second day of PyCon SE 2015&lt;/p&gt;
</summary></entry><entry><title>Lightning talks - First Day - PyCon SE 2015</title><link href="https://pyvideo.org/pycon-se-2015/lightning-talks-first-day-pycon-se-2015.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/lightning-talks-first-day-pycon-se-2015.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Lightning talks for the first day of PyCon SE 2015&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Puppet and Python</title><link href="https://pyvideo.org/pycon-se-2015/puppet-and-python.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Daniele Sluijters</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/puppet-and-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Building tooling around Puppet, but in Python! People forget that even
though a tool like Puppet is written in Ruby or PuppetDB in Clojure, as
long as we have an API to talk to we can build anything we need by
layering in some Python.&lt;/p&gt;
</summary></entry><entry><title>Python for Humans</title><link href="https://pyvideo.org/pycon-se-2015/python-for-humans-4.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Kenneth Reitz</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/python-for-humans-4.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python’s ecosystem is held up to a high standard, but it falls short in
a few key areas. A handful of crucial APIs are an absolute pain to work
with. We’ll go over where these APIs went wrong and learn about strong
and elegant API design. The high barriers to entry in Python will be
discussed. Potential solutions will be proposed.&lt;/p&gt;
</summary></entry><entry><title>Ship Python Apps with Docker!</title><link href="https://pyvideo.org/pycon-se-2015/ship-python-apps-with-docker.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Rasheed Amir</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/ship-python-apps-with-docker.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Docker allows to create lightweight, portable &amp;amp; self-sufficient
containers. My presentation will have two parts: (1) First I'll give a
brief introduction about docker &amp;amp; (2) then I'll build a docker image for
a simple python app and then deploy it to my own computer, EC2, and
Google cloud engine.&lt;/p&gt;
</summary></entry><entry><title>Test Driven Development with Python and Django</title><link href="https://pyvideo.org/pycon-se-2015/test-driven-development-with-python-and-django.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Flavia Missi</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/test-driven-development-with-python-and-django.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;TDD can be tricky and many developers out there fail to perceive it's
real value. This talk will show TDD's benefits and applications with
real world examples.&lt;/p&gt;
</summary></entry><entry><title>U2F: Phishing proof two factor authentication for everyone</title><link href="https://pyvideo.org/pycon-se-2015/u2f-phishing-proof-two-factor-authentication-for.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Dain Nilsson</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/u2f-phishing-proof-two-factor-authentication-for.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Today's dominating two-factor authentication standard was invented long
before the web; it's not secure nor usable enough. This led a group of
IT-giants to develop the U2F open standard. We'll start by showing U2F
in action, explain how it works and why it's needed, then add U2F to a
Django application.&lt;/p&gt;
</summary></entry></feed>