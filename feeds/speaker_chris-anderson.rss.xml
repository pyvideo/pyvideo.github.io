<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Chris Anderson</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 12 Apr 2025 00:00:00 +0000</lastBuildDate><item><title>Generators: The Unsung Hero of Async Programming</title><link>https://pyvideo.org/pytexas-2025/generators-the-unsung-hero-of-async-programming.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Async is often about tackling IO-bound, high concurrency work, but it can also be about long running, interruptible work. While we frequently think about generators in the context of iterators, generators are a great fit in any scenario where the function needs to be interruptible and resumable. In this talk, weâ€™ll take a fresh look at generators and look at how we used them to build a durable orchestration framework.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Anderson</dc:creator><pubDate>Sat, 12 Apr 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-04-12:/pytexas-2025/generators-the-unsung-hero-of-async-programming.html</guid><category>PyTexas 2025</category></item></channel></rss>