<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - PyCon Korea 2022</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-korea-2022.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-10-02T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Building Blockchain Scaling Solutions with Python</title><link href="https://pyvideo.org/pycon-korea-2022/building-blockchain-scaling-solutions-with-python.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Son Byeong-gil</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/building-blockchain-scaling-solutions-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Blockchain has obvious limitations as much as it has potential. Various efforts have been made to solve these limitations, and the results are slowly being revealed to the world. Among the various technologies to overcome the limitations of blockchain, we will introduce how Python can play a role in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Blockchain has obvious limitations as much as it has potential. Various efforts have been made to solve these limitations, and the results are slowly being revealed to the world. Among the various technologies to overcome the limitations of blockchain, we will introduce how Python can play a role in expanding blockchain, focusing on how to develop a layer 2 solution that functionally expands blockchain, and what Python technologies are actually being utilized.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Blockchain"></category></entry><entry><title>Communication &amp; Contributing to Python Open Source</title><link href="https://pyvideo.org/pycon-korea-2022/communication-contributing-to-python-open-source.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Tereza Iofciu</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/communication-contributing-to-python-open-source.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Open Source Software work is not just about being a core contributor or a maintainer, it is also about lots of invisible work in the community. Most of this work requires lots of interactions. If the interactions are about OSS, these would be mostly in English, and although good …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Open Source Software work is not just about being a core contributor or a maintainer, it is also about lots of invisible work in the community. Most of this work requires lots of interactions. If the interactions are about OSS, these would be mostly in English, and although good communication skills are essential, they can also be gatekeeping sometimes. After describing the state of diversity in OSS and in Python I showing some thoughts about how we can build a better communication culture in the Python local and global communities. Why it is important to rethink Code of Conducts, what are the current problems with how people think of Code of Conducts. We can use these as a tool for building more inclusive Python communities. These are reflections stemming from my involvement over the past years in the Python community.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Life / Social"></category></entry><entry><title>Developing a Modern Visual Novel Game with Ren'Py</title><link href="https://pyvideo.org/pycon-korea-2022/developing-a-modern-visual-novel-game-with-renpy.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Ha Jae Seung</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/developing-a-modern-visual-novel-game-with-renpy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a &amp;quot;Ren'Py Engine (&lt;a class="reference external" href="https://renpy.org"&gt;https://renpy.org&lt;/a&gt;)&amp;quot; that is useful for developing story-oriented games using Python. I will share the details of adding necessary functions that were not in the engine while making an indie game called &amp;quot;Illusion&amp;quot; using Ren'Py. I implemented a timeline function that shows the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a &amp;quot;Ren'Py Engine (&lt;a class="reference external" href="https://renpy.org"&gt;https://renpy.org&lt;/a&gt;)&amp;quot; that is useful for developing story-oriented games using Python. I will share the details of adding necessary functions that were not in the engine while making an indie game called &amp;quot;Illusion&amp;quot; using Ren'Py. I implemented a timeline function that shows the choices made by the player while playing the game and allows them to try different choices. I implemented a function that downloads and updates DLC or updated information through the server. I will explain what I considered and how I collaborated while making these functions. (It does not cover how to make a game with Ren'Py or modifying the GUI.)&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>Development of a Markdown parser that extends code block functionality</title><link href="https://pyvideo.org/pycon-korea-2022/development-of-a-markdown-parser-that-extends-code-block-functionality.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Lim Chan-sik</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/development-of-a-markdown-parser-that-extends-code-block-functionality.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When writing a document explaining the code, I mainly use a Markdown document. I usually list the entire code first and then explain the related code parts again. At this time, if the code has line numbers, it is easy to specify the code and it can help to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When writing a document explaining the code, I mainly use a Markdown document. I usually list the entire code first and then explain the related code parts again. At this time, if the code has line numbers, it is easy to specify the code and it can help to find it. For this, I use the PLY (Python Lex-Yacc) project to define additional grammar in the code block and develop a Markdown parser that parses it.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>Django + GraphQL Rapid MVP Development Strategy</title><link href="https://pyvideo.org/pycon-korea-2022/django-graphql-rapid-mvp-development-strategy.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Jeong Jin-kyung</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/django-graphql-rapid-mvp-development-strategy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Shareholder management software ZUZU is a product of a kind that has never existed in the world. It is a SaaS software that helps companies handle tasks related to shareholders, stocks, and stock options. You may be wondering why this service is a product of a kind that has …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Shareholder management software ZUZU is a product of a kind that has never existed in the world. It is a SaaS software that helps companies handle tasks related to shareholders, stocks, and stock options. You may be wondering why this service is a product of a kind that has never existed in the world. In order to create software like ZUZU, it must be implemented in accordance with domestic circumstances based on laws such as the Commercial Act and the Capital Market Act. In addition, the range of users who use the software is very diverse. It is a very challenging task to create a service that can be used by all of them, including the company's CEO, shareholders, and employees who have received stock options, as well as lawyers, legal advisors, and tax accountants who handle related tasks. It is a very challenging task to create a service that can be used by all of them. It is really difficult for startups to find developers these days. In order to develop software with complex requirements like the above with limited development resources, we have been developing and releasing an MVP (Minimum Viable Product), receiving feedback, and continuously improving it. I would like to share that experience in this presentation. The first part of the presentation briefly introduces ZUZU's development stack, Django and GraphQL. We will discuss the security that we paid special attention to while using Django and GraphQL, and the performance issues that we have experienced through trial and error. In the latter part of the presentation, I will share my experience on how I set up the development team structure and R&amp;amp;R for rapid MVP development, what efforts I made to effectively handle issues in situations where the development team resources were insufficient, and how I wrote tests since product verification is important due to the nature of the product.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Web Service"></category></entry><entry><title>Django ORM that understands and uses SQL</title><link href="https://pyvideo.org/pycon-korea-2022/django-orm-that-understands-and-uses-sql.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Shin Dong-hyun</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/django-orm-that-understands-and-uses-sql.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most web developers manage data persistence using ORMs such as SQLAlchemy and Django ORM rather than writing SQL directly. ORM connects objects and relational databases. Using ORM, developers can perform DML in programming languages ​​without writing SQL. Since data is handled through object-oriented code, code readability is improved and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most web developers manage data persistence using ORMs such as SQLAlchemy and Django ORM rather than writing SQL directly. ORM connects objects and relational databases. Using ORM, developers can perform DML in programming languages ​​without writing SQL. Since data is handled through object-oriented code, code readability is improved and productivity is enhanced. Also, since the database and code base are loosely connected through abstraction, it can flexibly respond to infrastructure changes. In addition, ORM provides additional features such as lazy-loading and caching to reduce unnecessary queries. However, ORM does not have only advantages. The more complex the data being queried, the more inconvenient ORM can be. This is because the limitations of ORM prevent the full functionality of SQL from being utilized. ORMs that are used without properly understanding the operating principles create very inefficient queries. Therefore, it is very important to understand the characteristics of SQL and know the operating principles of ORM so that you can query correctly. Let's learn how to properly use Django ORM by understanding the characteristics of SQL.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Web Service"></category></entry><entry><title>Finding Order in the Chaos of Matplotlib</title><link href="https://pyvideo.org/pycon-korea-2022/finding-order-in-the-chaos-of-matplotlib.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Lee Je-Hyeon</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/finding-order-in-the-chaos-of-matplotlib.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many people start learning Python while studying data analysis and machine learning. For these people, Matplotlib, a data visualization library, is an essential program that they must learn along with numpy and pandas. However, in the rush to learn many functions, they often skip over the object-oriented method that …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many people start learning Python while studying data analysis and machine learning. For these people, Matplotlib, a data visualization library, is an essential program that they must learn along with numpy and pandas. However, in the rush to learn many functions, they often skip over the object-oriented method that can effectively visualize data. In this presentation, we will experience the object-oriented method and learn how to widely use the Matplotlib ecosystem through the process of creating a picture close to the best data visualization example.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>How do asyncio libraries work?</title><link href="https://pyvideo.org/pycon-korea-2022/how-do-asyncio-libraries-work.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Jo Seong-bin</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/how-do-asyncio-libraries-work.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We frequently use various libraries that support asyncio, such as asynchronous web frameworks, asynchronous database libraries, asynchronous web servers, and aiohttp, but the asyncio network API that makes up these frameworks is not often covered. In this session, we will cover network-related APIs provided by the asyncio library, such …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We frequently use various libraries that support asyncio, such as asynchronous web frameworks, asynchronous database libraries, asynchronous web servers, and aiohttp, but the asyncio network API that makes up these frameworks is not often covered. In this session, we will cover network-related APIs provided by the asyncio library, such as asyncio.Transport, asyncio.Protocol, and asyncio.Server.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>How to Use Python Type Hints Properly</title><link href="https://pyvideo.org/pycon-korea-2022/how-to-use-python-type-hints-properly.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Choi Bo-seong</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/how-to-use-python-type-hints-properly.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I think many people are already familiar with the simple Python type hints. However, there may be times when you cannot give type hints as you want in practice with only the basic usage. I felt that type hints were more useful after I learned about the various functions …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I think many people are already familiar with the simple Python type hints. However, there may be times when you cannot give type hints as you want in practice with only the basic usage. I felt that type hints were more useful after I learned about the various functions of Python type hints and started using them. In fact, simple type hints are often enough for most Python codes. The complex type hints introduced in this session are not used often. So I think there are often cases where you forget or do not use them because you do not know about them. In this session, rather than going into depth about the application concepts of type hints one by one, I will introduce them in general. I hope that you will vaguely remember them when you encounter a situation where you need them later. Personally, I learned a lot about this “type system for people who are not compilers” while using TypeScript. There are still many things that Python type hints are inconvenient or cannot express, but I think Python type hints have their own charm. I think the advantages are that they can be used dynamically and that they are used within existing grammar. Of course, there are limitations due to this, but I expect that they will improve as they develop further in the future. I hope that this session will be an opportunity to discuss Python type hints with more people and to spark new interest in type hints.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Development Method with Python"></category></entry><entry><title>[Keynote] A fair value assessment system starting from zero</title><link href="https://pyvideo.org/pycon-korea-2022/keynote-a-fair-value-assessment-system-starting-from-zero.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Park Young-tae</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/keynote-a-fair-value-assessment-system-starting-from-zero.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We share our experience in the process of introducing Python and re-creating a quantitative evaluation system at the Financial Asset Evaluation Research Institute. We will briefly introduce what kind of company the asset evaluation company is and what kind of work it does as a discipline called financial engineering …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We share our experience in the process of introducing Python and re-creating a quantitative evaluation system at the Financial Asset Evaluation Research Institute. We will briefly introduce what kind of company the asset evaluation company is and what kind of work it does as a discipline called financial engineering. We will also talk about what difficulties there were in the asset evaluation company's evaluation work flow, what concerns they had to resolve the difficulties, and why they chose Python to resolve them. We will also talk about our experience of checking which parts were necessary for the system from the smallest details, what we considered for the staff who were not familiar with Python and system programming, how we set the level of difficulty, how we conducted the training, and what approach we took to introduce it as a living task to the staff. We will also talk about how we structured the system we created and how we realized again that Python is a good tool while creating it.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category></entry><entry><title>Let's try real-time data processing with Python</title><link href="https://pyvideo.org/pycon-korea-2022/lets-try-real-time-data-processing-with-python.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Kim Tae-hong</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/lets-try-real-time-data-processing-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the past few years, there have been many introductions on the development of real-time data processing and analysis systems. In particular, data pipelines using Apache Kafka are being developed. I would like to share my experience developing an Apache Kafka consumer using Python through the system development process …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the past few years, there have been many introductions on the development of real-time data processing and analysis systems. In particular, data pipelines using Apache Kafka are being developed. I would like to share my experience developing an Apache Kafka consumer using Python through the system development process called real-time threat analysis. Through this presentation, I hope to be helpful to those who want to develop a service that collects real-time data to Apache Kafka and quickly develops a consumer using Python to process data. The main contents of this presentation are as follows. - Concepts required for data pipeline development - Introduction to Python Kafka client library - Experience in developing real-time data processing pipelines For questions and inquiries, please contact &lt;a class="reference external" href="mailto:rlaxoghd91&amp;#64;gmail.com"&gt;rlaxoghd91&amp;#64;gmail.com&lt;/a&gt;. Also, the code used in the presentation can be found at &lt;a class="reference external" href="https://github.com/kimtaehong/pycon2022"&gt;https://github.com/kimtaehong/pycon2022&lt;/a&gt;.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>Meaning of super (Duet multiple inheritance)</title><link href="https://pyvideo.org/pycon-korea-2022/meaning-of-super-duet-multiple-inheritance.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Ahn Won-seok</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/meaning-of-super-duet-multiple-inheritance.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The meaning of super (Duet. Multiple inheritance) session will look into the true meaning of super and introduce several ways to handle multiple inheritance efficiently. Many people explain the super of a Python class as a &amp;quot;parent class.&amp;quot; The explanation of the parent class is not wrong, but it …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The meaning of super (Duet. Multiple inheritance) session will look into the true meaning of super and introduce several ways to handle multiple inheritance efficiently. Many people explain the super of a Python class as a &amp;quot;parent class.&amp;quot; The explanation of the parent class is not wrong, but it is difficult to see it as the true meaning of super. If the meaning of super is the parent class, then in a situation of multiple inheritance of a class, the super of the child class should refer to multiple parents. However, in reality, super does not work that way. To understand the true meaning of super, you must first understand the diamond problem and MRO of multiple inheritance of classes. The diamond problem is a problem that occurs when there are methods with overlapping names in parent classes in multiple inheritance, and it is not known which parent's method to call. And MRO is a solution to the diamond problem presented in Python. MRO solves the problem by linearizing the diamond shape by specifying the execution order of methods of all related classes. In other words, the true meaning of super is the method in the next order determined by MRO. The examples used in the session are sufficient just to understand MRO. However, in real programs, you will encounter classes that are larger and more complex than the examples. If large and complex classes are entangled using multiple inheritance, it is necessary to consider patterns and methods along with MRO to enable efficient use. So, at the end of the session, we will introduce several ways to efficiently use multiple inheritance. Multiple inheritance has many advantages, but it has problems that are large and small to the point that it is not supported at all depending on the programming language. Since Python supports it, it would be good if we could only take advantage of it through efficient use.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Core &amp; Fundamental"></category></entry><entry><title>Migrating large Python projects to a monorepo using Pantsbuild</title><link href="https://pyvideo.org/pycon-korea-2022/migrating-large-python-projects-to-a-monorepo-using-pantsbuild.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Kim Jun-ki</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/migrating-large-python-projects-to-a-monorepo-using-pantsbuild.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session introduces the process of migrating the Backend.AI open source project to a mono-repo using the Pantsbuild tool. The Backend.AI project is written with over 74,000 lines of Python code accumulated over 7 years, and has a code base with considerable complexity that requires combining …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session introduces the process of migrating the Backend.AI open source project to a mono-repo using the Pantsbuild tool. The Backend.AI project is written with over 74,000 lines of Python code accumulated over 7 years, and has a code base with considerable complexity that requires combining and installing multiple packages to develop and test the overall function. As the number of project participants increased and the internal code became more complex, managing the repository by package unit became a bottleneck in the development process, and to overcome this problem, we considered and decided to introduce a mono-repo. Although a mono-repo is not always the right answer in all cases, we considered various conditions such as the size of the development team, the current and expected complexity of internal dependencies, the way the organization operates, the scope of the impact of code changes, the release cycle, and the limitations of the project board function of GitHub, an issue management tool, and we thought it was a reasonable transition at this point. In particular, the process of writing and reviewing multiple pull requests in multiple repositories to resolve a single issue significantly increased the context switching overhead of developers, and there were repeated problems of forgetting to write pull requests for specific repositories or forgetting to unify branches, leading to errors. In the process of converting to a monorepo, Pantsbuild was introduced to explicitly and automatically manage internal and external dependencies as much as possible. Pantsbuild is a modern build tool that primarily supports the Python ecosystem, and it supports powerful caching and parallel execution of build and CI-related tasks. In this presentation, we will introduce how we merged existing Backend.AI repositories to enable seamless use of Pantsbuild, and the process of adapting to Pantsbuild by writing Pantsbuild plugins and responding to Backend.AI's dynamic module loading mechanism. We will also explain additional problems that the development team encountered after the basic migration and how we dealt with them. We hope that this session will provide you with examples and hints on configuring a monorepo for a large-scale Python project.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Development Method with Python"></category></entry><entry><title>Numpy and Quantum Computing</title><link href="https://pyvideo.org/pycon-korea-2022/numpy-and-quantum-computing.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Lee Jong-won</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/numpy-and-quantum-computing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the past several years, semiconductors have become smaller and their processing speeds have gotten faster. However, due to the recent components becoming too small, electrons simply ignore them and pass through them, so-called tunneling phenomenon has made it difficult to further miniaturize semiconductors. In addition, as problems that …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the past several years, semiconductors have become smaller and their processing speeds have gotten faster. However, due to the recent components becoming too small, electrons simply ignore them and pass through them, so-called tunneling phenomenon has made it difficult to further miniaturize semiconductors. In addition, as problems that are difficult to solve even with the best supercomputers in existence are presented, the need for faster and more efficient computers than existing classical computers has been discussed. The genius physicist Richard Feynman proposed the concept of a quantum computer, a computer that calculates quantum phenomena using the properties of quantum mechanics. Unlike existing bits that can only have one value of 0 or 1 at a time, qubits that can exist as 0 and 1 at the same time are used as calculation units by utilizing the superposition and entanglement phenomena of quantum mechanics. As the number of qubits increases, the number of values ​​that can be expressed simultaneously increases exponentially. It is expected that quantum computers will be able to efficiently solve problems such as factoring large numbers and optimization problems that were previously difficult to solve. How can we mathematically express superposition and entanglement, which are the core of quantum computers? And if we know how to express this mathematically, wouldn't it be possible to simulate these mathematical models? In this session, we will cover the mathematical basis used in quantum circuits for quantum computing and how to simulate them using the Python library NUMPY.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>Python Code Review Tips</title><link href="https://pyvideo.org/pycon-korea-2022/python-code-review-tips.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Kim Dong-hyun</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/python-code-review-tips.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Here are some libraries that you can use when you want to suggest opinions as a reviewer during a Python application code review but lack evidence, when you want to provide evidence for changes as a reviewer, or when you want to automatically handle annoying things that need to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Here are some libraries that you can use when you want to suggest opinions as a reviewer during a Python application code review but lack evidence, when you want to provide evidence for changes as a reviewer, or when you want to automatically handle annoying things that need to be caught during the code review phase. We will learn about dis, a library for analyzing bytecode of Python code, timeit, a library for measuring execution time of Python code snippets, and pre-commit, a git-hook framework that automatically searches for and corrects parts to be caught during code review using git-hook, from the basic usage of pre-commit to how to use it during code review.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Development Method with Python"></category></entry><entry><title>Python in Mobile Networks</title><link href="https://pyvideo.org/pycon-korea-2022/python-in-mobile-networks.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Choi Hong-jun Lee Seung-jae</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/python-in-mobile-networks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mobile network supporting many services 365/24. Unlike other sites, telecommunication companies have the difficulty of stably performing large-scale work on numerous types of equipment. While working as a network engineer for several years, I personally conducted research and PoC such as global case analysis and feasibility review to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mobile network supporting many services 365/24. Unlike other sites, telecommunication companies have the difficulty of stably performing large-scale work on numerous types of equipment. While working as a network engineer for several years, I personally conducted research and PoC such as global case analysis and feasibility review to fundamentally improve this difficulty. I would like to share with those who are interested in introducing the contents of operational efficiency from the perspective of a network operator. Due to external restrictions during the presentation, I excluded detailed contents and parts unrelated to Python, so I ask for your understanding. This presentation will be briefly explained in the following three points. I will briefly explain the characteristics related to telecommunication company infrastructure operation, why Python is recommended to network engineers, my personal thoughts on candidates for Python frameworks related to network automation, and a comparison summary of each Python framework. Finally, I will present an example of how Python was utilized, and then present the concerns I had while proceeding.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="DevOps"></category></entry><entry><title>SQLAlchemy with asyncio, From Core to ORM</title><link href="https://pyvideo.org/pycon-korea-2022/sqlalchemy-with-asyncio-from-core-to-orm.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Lee Sang Hoon</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/sqlalchemy-with-asyncio-from-core-to-orm.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SQLAlchemy, which is used in an open source project called Backend.AI, is used with Python asyncio. We talk about the reason and process of migrating SQLAlchemy from Core API to ORM API, as well as the many trials and errors and lessons learned.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>Technical Art 101 Building a Blender Pipeline with Python</title><link href="https://pyvideo.org/pycon-korea-2022/technical-art-101-building-a-blender-pipeline-with-python.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Park Sung-guk</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/technical-art-101-building-a-blender-pipeline-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is an essential language for technical artists around the world. Maya, one of the most widely used DCC (Digital Content Creation) tools, also uses Python as a scripting language in addition to MEL (Maya Embedded Language). Blender, which has recently emerged as a rising powerhouse in DCC, has …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is an essential language for technical artists around the world. Maya, one of the most widely used DCC (Digital Content Creation) tools, also uses Python as a scripting language in addition to MEL (Maya Embedded Language). Blender, which has recently emerged as a rising powerhouse in DCC, has also adopted Python as a scripting language, which is useful for creating plugins and building pipelines. This lecture shares the concept of how Python is used in actual game development from the perspective of a technical artist, from the perspective of a technical artist to practical experience. Technical Art is a craft that connects engineers and artists, and practitioners in this job are called technical artists. The work areas of technical artists are diverse, including rendering or building asset pipelines, shader writing, optimization, and profiling, and these work areas also vary by industry. Technical art is a bridge between technology and art, and depending on each individual's capabilities, some individuals have strong capabilities as engineers while others have weak capabilities as artists. Blender, like Maya, uses Python as a scripting language, so all Blender plugins are made in Python. In this reality, Python, which automates unnecessary repetition in artists' daily lives and easily provides necessary tools and functions, is an essential language for building a game development pipeline using Blender. In this session, we will introduce the concept of &amp;quot;pipeline&amp;quot; for building a pipeline, which is one of the core capabilities of a technical artist. In addition, we will introduce an extension of Visual Studio Code that facilitates Blender scripting using Python, and share our experience building an asset pipeline that is actually used in game development.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Development Method with Python"></category></entry><entry><title>The Journey from Monolithic to MSA</title><link href="https://pyvideo.org/pycon-korea-2022/the-journey-from-monolithic-to-msa.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Jo Min-woo</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/the-journey-from-monolithic-to-msa.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If last year's announcement focused on the technical details centered around the big event of the MSA transition, this time we would like to share with many people the journey of how Soomgo, which was a monolithic service, faced difficulties in the early days of its service and how …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If last year's announcement focused on the technical details centered around the big event of the MSA transition, this time we would like to share with many people the journey of how Soomgo, which was a monolithic service, faced difficulties in the early days of its service and how it transitioned to MSA as the service grew.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Web Service"></category></entry><entry><title>A community of teachers who code, Jjorap Story</title><link href="https://pyvideo.org/pycon-korea-2022/a-community-of-teachers-who-code-jjorap-story.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Song Seok-ri</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/a-community-of-teachers-who-code-jjorap-story.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I would like to introduce the community of public education teachers who code, which started at the end of June, the direction of the community, and the course of the basic Python study that 300 teachers across the country are participating in. Currently, experts in the IT/AI field …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I would like to introduce the community of public education teachers who code, which started at the end of June, the direction of the community, and the course of the basic Python study that 300 teachers across the country are participating in. Currently, experts in the IT/AI field, such as Upstage CEO Seong-Hoon Kim and Ellis CEO Jae-Won Kim, are participating in the community, and I plan to talk about the value of connecting public education teachers and IT experts who want to contribute to public education.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Life / Social"></category></entry><entry><title>Building a Serverless Jupyter Notebook App for Teaching Python to Kids</title><link href="https://pyvideo.org/pycon-korea-2022/building-a-serverless-jupyter-notebook-app-for-teaching-python-to-kids.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Shin Jeong-gyu</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/building-a-serverless-jupyter-notebook-app-for-teaching-python-to-kids.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As Python becomes more widely used, the demand for learning Python is also increasing. Python can be easily installed through the official website, and there are many cases where it is pre-installed depending on the operating system. However, installing libraries for data science along with the widely used notebook …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As Python becomes more widely used, the demand for learning Python is also increasing. Python can be easily installed through the official website, and there are many cases where it is pre-installed depending on the operating system. However, installing libraries for data science along with the widely used notebook environment is a bit more complicated. I will introduce the process of creating a notebook app that runs on a browser engine to teach Python to children. In this presentation, I will look at Python implementations based on WebAssembly and web-based interfaces that have shown various application possibilities in the past two years. I will introduce the process of building Pyodide, a WASM-based Python environment, together with JupyterLite, a complete notebook environment, to enable simple practice of Python in a notebook environment. I will also introduce the process of developing an implementation that uses the Python environment of the local PC as a kernel environment in JupyterLite. I will demo the process of packaging the notebook environment created in this way as a desktop app and testing the results in various ways. I will also share the results of creating a notebook app that bundles various examples along with benchmark results and having children use it. Finally, I'd like to share my personal views on browser-based Python, which has recently become famous through pyscript, and the interesting development environments that could be possible when combined with JavaScript containers.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Life / Social"></category></entry><entry><title>Challenge Building Management with Event Sourcing</title><link href="https://pyvideo.org/pycon-korea-2022/challenge-building-management-with-event-sourcing.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>cotton</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/challenge-building-management-with-event-sourcing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We introduce the Event Sourcing pattern used in stock account management by Doomoolmori's Boolileo, a robo-advisor service. Event Sourcing is used to stably manage states that are prone to change. An example that can be easily encountered in everyday life is a bankbook. If you look at all the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We introduce the Event Sourcing pattern used in stock account management by Doomoolmori's Boolileo, a robo-advisor service. Event Sourcing is used to stably manage states that are prone to change. An example that can be easily encountered in everyday life is a bankbook. If you look at all the deposit/withdrawal details of your bankbook and calculate from the first occurrence to the last occurrence, you can find out your current balance. In this lesson, we will talk about how the fictional character Ensome improves a building management project using Event Sourcing. We will not go into depth about Event Sourcing. The goal is to explain only the essential parts lightly so that you can naturally accept Event Sourcing. If there is anyone who is interested in Event Sourcing and wants to introduce it, we will find out whether this pattern is really necessary for the project you are trying to apply it to using the project Ensome conducted in the last part.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Development Method with Python"></category></entry><entry><title>Create an Object Detection Model with One Click</title><link href="https://pyvideo.org/pycon-korea-2022/create-an-object-detection-model-with-one-click.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Baek Seung-hoon</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/create-an-object-detection-model-with-one-click.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I would like to introduce the method I tried to speed up the sample collection and labeling process, which takes the longest time to create an Object Detection model. When the user uploads several object images, we internally use Python OpenCV to regenerate them into various image types so …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I would like to introduce the method I tried to speed up the sample collection and labeling process, which takes the longest time to create an Object Detection model. When the user uploads several object images, we internally use Python OpenCV to regenerate them into various image types so that they can be used for model training. I will introduce the results I was able to obtain through this and the parts I was concerned about.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Computer Vision"></category></entry><entry><title>Data Engineering in Python</title><link href="https://pyvideo.org/pycon-korea-2022/data-engineering-in-python.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Han Seong-min</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/data-engineering-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Today's data is changing trends to meet the needs of AI and data-driven business. Various keywords such as LakeHouse, ELT, DataOps, and Feature Store are becoming known to many engineers through corporate white papers and open sources. These trends are leading to changes in the movement of the Python …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Today's data is changing trends to meet the needs of AI and data-driven business. Various keywords such as LakeHouse, ELT, DataOps, and Feature Store are becoming known to many engineers through corporate white papers and open sources. These trends are leading to changes in the movement of the Python ecosystem. In this session today, we will look at the changes in data trends in 2022 and what movements there are for data engineering and data science in Python.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Open Source / Community"></category></entry><entry><title>Designing a ReBAC architecture for security in Django</title><link href="https://pyvideo.org/pycon-korea-2022/designing-a-rebac-architecture-for-security-in-django.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Seo Min-kyo and Kang Jin-oh</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/designing-a-rebac-architecture-for-security-in-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As the structural complexity of web services increases, RBAC / ReBAC structure is often adopted for easy role and permission management. Our service is no exception. Since the need for many roles and permission management was anticipated, we decided to use ReBAC from an SSDLC-ish perspective from the initial planning …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As the structural complexity of web services increases, RBAC / ReBAC structure is often adopted for easy role and permission management. Our service is no exception. Since the need for many roles and permission management was anticipated, we decided to use ReBAC from an SSDLC-ish perspective from the initial planning stage and defined requirements such as Table-less role assignment, Role explosion, Hierarchical object graph, and Row-level access control. After checking the status of libraries in the existing Django ecosystem, we introduce the direction and implementation we approached each problem to satisfy the requirements defined above, and introduce the journey to create django-entity-rbac, an open-source library that solves them.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Web Service"></category></entry><entry><title>Global Interpreter Lock GIL Detailed Exploration</title><link href="https://pyvideo.org/pycon-korea-2022/global-interpreter-lock-gil-detailed-exploration.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Han Seong-min</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/global-interpreter-lock-gil-detailed-exploration.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, we will look at the core structure of the Python Global Interpreter Lock (GIL), the basic concepts of the GIL and the innate background of Python related to RefCount and ThreadSafe, and a session that takes an in-depth look at the future and trends of the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, we will look at the core structure of the Python Global Interpreter Lock (GIL), the basic concepts of the GIL and the innate background of Python related to RefCount and ThreadSafe, and a session that takes an in-depth look at the future and trends of the GIL, including Pycon Language Summit 2022.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Core &amp; Fundamental"></category></entry><entry><title>How to Build great Applications for Business Users in Python</title><link href="https://pyvideo.org/pycon-korea-2022/how-to-build-great-applications-for-business-users-in-python.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>GOSSELIN</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/how-to-build-great-applications-for-business-users-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Turning your Data/AI algorithms into full web apps in no time with Taipy In the Python open-source eco-system, many packages are available that cater to: - the building of great algorithms - the visualization of data - back-end functions despite this, over 85% of Data Science Pilots remain pilots and do …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Turning your Data/AI algorithms into full web apps in no time with Taipy In the Python open-source eco-system, many packages are available that cater to: - the building of great algorithms - the visualization of data - back-end functions despite this, over 85% of Data Science Pilots remain pilots and do not make it to the production stage. With Taipy, Data Scientists/Python Developers will be able to build great pilots as well as stunning production-ready applications for end-users. Taipy provides two independent modules: Taipy GUI and Taipy Core. In this talk, we will demonstrate how: Taipy GUI goes way beyond the capabilities of the standard graphical stack. Taipy Core is simpler yet more powerful than the standard Python back-end stack.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>How to manage various and complex Python objects in a database using Type Annotation</title><link href="https://pyvideo.org/pycon-korea-2022/how-to-manage-various-and-complex-python-objects-in-a-database-using-type-annotation.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Yong-Seok Ko</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/how-to-manage-various-and-complex-python-objects-in-a-database-using-type-annotation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's learn how to store complex JSON data in a database using type annotations that indicate type information in Python. Using Pydantic, which is also used in FastAPI, you can extract information from fields and convert them to JSON. Based on this function, we will define various data types …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's learn how to store complex JSON data in a database using type annotations that indicate type information in Python. Using Pydantic, which is also used in FastAPI, you can extract information from fields and convert them to JSON. Based on this function, we will define various data types necessary for defining a database table schema, and discuss how to make a specific key value an indexed database field value or an array value an index. Furthermore, we will discuss methods for effectively searching and processing nested objects within objects. We will explain Python's type annotations and briefly show how type information is stored. The basic usage of Pydantic and some of Mariadb's JSON-related functions will also be discussed. Using Pydantic and SQLAlchemy, you can manage objects that exactly correspond to database table fields, but it is difficult to process diverse and complex data. Using the method we shared, you can also store complex objects. Using this library, you can easily create an expandable Rest API related to a database. We will also share the detailed implementation source. Although not mentioned in the presentation, I think it would be helpful to refer to it as it also implements frequently shared objects, definitions of objects that can be joined together, methods for storing various types of objects, and a full text search function.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>[Keynote] I tried Do clinical psychology with Python</title><link href="https://pyvideo.org/pycon-korea-2022/keynote-i-tried-do-clinical-psychology-with-python.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Go Eun-kyung</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/keynote-i-tried-do-clinical-psychology-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I am a clinical psychologist and currently work in psychiatry and counseling centers, providing psychological counseling and psychological evaluations. In this presentation, I will talk about how I, a non-developer working as a clinical psychologist, learned Python and was able to utilize it in my actual work, and how …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I am a clinical psychologist and currently work in psychiatry and counseling centers, providing psychological counseling and psychological evaluations. In this presentation, I will talk about how I, a non-developer working as a clinical psychologist, learned Python and was able to utilize it in my actual work, and how easy and highly usable Python is. In clinical settings, we deal with a lot of psychological data. In this video, I will introduce how to download the graded psychological evaluation results, preprocess them, and create graphs when writing a psychological evaluation report, and how to implement the search process of the DSM-5 diagnosis search program, which is a patient diagnosis system. In addition, I will introduce the procedure for automatically grading and calculating the results, storing, and managing the results by conducting pre- and post-psychological tests on Colab instead of on paper to see the effects before and after counseling for those receiving counseling. In addition, I will show you the results of implementing a graph to see how much of the effects of the pre- and post-test results were for each individual after the group counseling program. After that, I would like to show you how I write functions to register and save information when I actually do neurofeedback counseling and write my clients' diaries and manage them. Finally, I would like to wrap up by thinking about how our clinical psychologists can utilize and apply Python.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category></entry><entry><title>[Keynote] Living as a Pythonista in High School</title><link href="https://pyvideo.org/pycon-korea-2022/keynote-living-as-a-pythonista-in-high-school.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Lee Han-gyeol</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/keynote-living-as-a-pythonista-in-high-school.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a high school student living as a Pythonista, I would like to share with you my experience of doing anything with Python during my school days. I hope that this presentation will go beyond sharing my experience and make you, the prospective Pythonistas, even more interested in Python …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a high school student living as a Pythonista, I would like to share with you my experience of doing anything with Python during my school days. I hope that this presentation will go beyond sharing my experience and make you, the prospective Pythonistas, even more interested in Python and ask, “Wow? You can do this with Python, too?” I will introduce five meaningful projects that I have done with Python during my school days, along with the story of how I first encountered Python, through my stagnation, and then encountering libraries. The projects I will introduce are a class subject desktop reminder, an AI reporting chatbot, a quick route finder within the school, a meal application confirmation program, and an unmanned borrowing/return machine at the school library. I will share the results and production process of each project, as well as the changes in the surroundings as a result, along with the project introduction. I learned Python and applied it to my life. I was proud of myself for growing as I did so. How about you also try your hand at doing anything with Python? Do Anything with Python!&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category></entry><entry><title>Learn FastAPI with pseudocode</title><link href="https://pyvideo.org/pycon-korea-2022/learn-fastapi-with-pseudocode.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Cha Kyung-mook</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/learn-fastapi-with-pseudocode.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I am very interested in how my team can learn and grow sustainably, and I am exploring and experimenting with various methods. The experiments are designed and executed with a focus on: - Feedback - Narrowing the scope of what you don’t know about the learning target and gradually expanding …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I am very interested in how my team can learn and grow sustainably, and I am exploring and experimenting with various methods. The experiments are designed and executed with a focus on: - Feedback - Narrowing the scope of what you don’t know about the learning target and gradually expanding it - Mutual coaching - Taking notes within the scope of what you understand and connecting notes FastAPI is an asynchronous web framework that is receiving a lot of attention and growing rapidly. I am developing a project using FastAPI, and as I learn and use FastAPI, I find it useful as a tool for the learning method I am refining. On the other hand, since FastAPI is a new tool compared to other web frameworks, it is rare for new colleagues to have experience with FastAPI when joining the team. Therefore, onboarding FastAPI is a major task for the team. This presentation introduces the content of learning FastAPI based on my experience of efficiently and effectively onboarding new colleagues when they have not used FastAPI or are not familiar with it. I will explain what the learning method I am refining is and in what context FastAPI is a useful learning tool for that learning method.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>Leveraging PyTorch Natural Language Processing Models in the Elastic Stack</title><link href="https://pyvideo.org/pycon-korea-2022/leveraging-pytorch-natural-language-processing-models-in-the-elastic-stack.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Kim Jong-min, Park Yu-na, Hwang Han-gyeol</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/leveraging-pytorch-natural-language-processing-models-in-the-elastic-stack.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The latest version of Elastic Stack, a popular data search and analysis tool, has added features for natural language processing (NLP). This article explains the process of analyzing user reviews of Google Play Store collected through crawling via Text Classification by applying a language model trained with PyTorch to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The latest version of Elastic Stack, a popular data search and analysis tool, has added features for natural language processing (NLP). This article explains the process of analyzing user reviews of Google Play Store collected through crawling via Text Classification by applying a language model trained with PyTorch to Elasticsearch.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Data Science"></category></entry><entry><title>Managing Python Django Versions for Sustainable Services</title><link href="https://pyvideo.org/pycon-korea-2022/managing-python-django-versions-for-sustainable-services.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Lee Dong-geun</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/managing-python-django-versions-for-sustainable-services.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;No Description&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category></entry><entry><title>(No time to be bored) Deep Joy and Joy with Python (Subtitle: Wanted Lab's Python Stories)</title><link href="https://pyvideo.org/pycon-korea-2022/no-time-to-be-bored-deep-joy-and-joy-with-python-subtitle-wanted-labs-python-stories.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Kwon Jin-man Choi Jong-won</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/no-time-to-be-bored-deep-joy-and-joy-with-python-subtitle-wanted-labs-python-stories.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wanted Lab uses Python as its main technology in the server and data fields, and shares its experiences with Python. In the server part, we talk about the hardships we experienced when migrating Wanted's actual service from Flask to FastAPI. We introduce three major difficulties we experienced when applying …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wanted Lab uses Python as its main technology in the server and data fields, and shares its experiences with Python. In the server part, we talk about the hardships we experienced when migrating Wanted's actual service from Flask to FastAPI. We introduce three major difficulties we experienced when applying FastAPI, which has not yet been released as a major version, to the production level, and talk about how we solved those difficulties. We also briefly introduce our plans to use FastAPI better in the future. In the data engineering part, we introduce representative cases that can clearly show how Wanted Lab's data team independently solves problems in the life cycle from product development to distribution. Wanted Lab's data environment enables flexible collaboration with other teams through responsibility separation and environment separation. We introduce the method of how we built this independent data environment, and talk about how we can further advance the data team in the future.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Development Method with Python"></category></entry><entry><title>Openreview Analysis Reviewers Can Identify the Seeds of Good Research</title><link href="https://pyvideo.org/pycon-korea-2022/openreview-analysis-reviewers-can-identify-the-seeds-of-good-research.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Kim Ki-beom</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/openreview-analysis-reviewers-can-identify-the-seeds-of-good-research.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We collect and analyze review and citation data to determine whether conference reviewers are identifying promising papers using ICLR conference review data from OpenReview and paper citation data from Google Scholar.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Data Science"></category></entry><entry><title>Practical usage of python ecosystem to build the AI ​​model to fight</title><link href="https://pyvideo.org/pycon-korea-2022/practical-usage-of-python-ecosystem-to-build-the-ai-model-to-fight.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Leksikov Sergey</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/practical-usage-of-python-ecosystem-to-build-the-ai-model-to-fight.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We use diverse python libraries such as Pandas, Scikit-learn, Seaborn, and TensorFlow from data processing to data visualization to fight the Covid-19 disease spread. Besides, by using the Deep Learning python-based framework TensorFlow we have built an Artificial Intelligence system to analyze and predict covid risk infection under various …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We use diverse python libraries such as Pandas, Scikit-learn, Seaborn, and TensorFlow from data processing to data visualization to fight the Covid-19 disease spread. Besides, by using the Deep Learning python-based framework TensorFlow we have built an Artificial Intelligence system to analyze and predict covid risk infection under various circumstances. Artificial Intelligence is used for generating and interpolating from low-resolution to high-resolution data for various conditions of the experimental setup, particle distribution estimation, and risk infection prediction.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Data Science"></category></entry><entry><title>Serverless Python Web Services</title><link href="https://pyvideo.org/pycon-korea-2022/serverless-python-web-services.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Choi Woojin</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/serverless-python-web-services.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session, I will briefly introduce serverless Python web services. First, I will briefly review the meaning of serverless, and then I will explain the reasons why my current company built a serverless service (limited development resources, irregular server traffic patterns, cost reduction) and how I operate and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session, I will briefly introduce serverless Python web services. First, I will briefly review the meaning of serverless, and then I will explain the reasons why my current company built a serverless service (limited development resources, irregular server traffic patterns, cost reduction) and how I operate and deploy Python web services in a serverless environment. In particular, I will introduce “Zappa,” an open source Python library that helps you conveniently build and deploy serverless Python web services. I will start by creating a very simple Django example project, and then show you the process of setting up “Zappa” and deploying it to an AWS serverless environment (API Gateway, Lambda, etc.). You will be able to experience deploying a Python web service serverless very easily with a single command through “Zappa.” Also, if you are considering building a Python-based serverless environment, I hope this session will be of some help to you!&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Web Service"></category></entry><entry><title>Small office coding</title><link href="https://pyvideo.org/pycon-korea-2022/small-office-coding.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Kim Jae-yoon</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/small-office-coding.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, I will share a case of using Python in the office. It is a non-developer office worker version of &amp;quot;Do anything with python&amp;quot;. It is a story of an office worker's struggle to finish work easily and quickly and leave work with Python in real-life situations …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, I will share a case of using Python in the office. It is a non-developer office worker version of &amp;quot;Do anything with python&amp;quot;. It is a story of an office worker's struggle to finish work easily and quickly and leave work with Python in real-life situations such as &amp;quot;Let's put these files on a USB and give them as a souvenir&amp;quot;, &amp;quot;This English report is good, let's translate it (but it's 300 pages)&amp;quot;, &amp;quot;The survey results come out on Saturday, let's report on Monday&amp;quot;, &amp;quot;Don't use the work automation alone, make it so that we can use it and distribute it&amp;quot;. In terms of Python's functions and modules, I will introduce folder and file handling (os module), PDF parsing (pdfminer module), data refinement (pandas module), and creating an automation of Hangul (hwp) in a GUI and distributing it as an exe file (win32com, tkinter, pyinstaller module). In this presentation, I wanted to show that Python can be useful in workplaces without developers and in general office work that is not related to development. Although it is difficult to change what we do, we can at least change the way we work. It is using Python like Excel and Word in the office. I hope to introduce Python to those around me, learn it together, and promote the use of Python by non-developer office workers and expand the community. I expect that if more people use Python on a daily basis in the office, the code will develop further and more people will be able to work with less effort. I thought that this might be the way to realize Python's vision of &amp;quot;Computer programming for everybody&amp;quot; in Korean offices in the 2020s. * Presentation materials, code: &lt;a class="reference external" href="https://sites.google.com/view/jaeyoon-kim/pycon"&gt;https://sites.google.com/view/jaeyoon-kim/pycon&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Life / Social"></category></entry><entry><title>That, that I like ‘BWASP’</title><link href="https://pyvideo.org/pycon-korea-2022/that-that-i-like-bwasp.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Kim Joo-won Lee Sang-hyun</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/that-that-i-like-bwasp.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The web application environment is the platform with the most user contact points and security incident types, and vulnerability analysis using various automated tools has been performed for a long time. However, we realized that these tools have limitations and are not very helpful to manual diagnosticians. Therefore, we …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The web application environment is the platform with the most user contact points and security incident types, and vulnerability analysis using various automated tools has been performed for a long time. However, we realized that these tools have limitations and are not very helpful to manual diagnosticians. Therefore, we planned to create a tool that can provide manual diagnosticians with useful information in advance from a manual perspective to reduce time spent. In this presentation, we will share how we conducted research to predict vulnerabilities while developing a web vulnerability manual analysis tool and what Python modules were utilized.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Security"></category></entry><entry><title>Type it!</title><link href="https://pyvideo.org/pycon-korea-2022/type-it.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Yoo Byung Hoon</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/type-it.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Here's how to use type annotation better. It's aimed at those who know how to use basic typing and type checkers like mypy, and it presents several problem situations and explains the typing methods and functions for each.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Core &amp; Fundamental"></category></entry></feed>