<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - PyBay 2024</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pybay-2024.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-09-21T00:00:00+00:00</updated><subtitle></subtitle><entry><title>13 fun facts about Python's return statement for savvy programmers</title><link href="https://pyvideo.org/pybay-2024/13-fun-facts-about-pythons-return-statement-for-savvy-programmers.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Erin 'August' Allard</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/13-fun-facts-about-pythons-return-statement-for-savvy-programmers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python’s return statement is one of the first keywords introduced to new learners of the language. We’re taught that it “tells Python the function is done” and often not much else about it! What happens if you forget to include a return at the end of a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python’s return statement is one of the first keywords introduced to new learners of the language. We’re taught that it “tells Python the function is done” and often not much else about it! What happens if you forget to include a return at the end of a function? What if you try to use one outside of a function? Can a function return another function? Come learn about all of the cool things you can achieve in your programs through a better understanding of return statements!&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>A 101 in time series analytics with Apache Arrow, Pandas and Parquet</title><link href="https://pyvideo.org/pybay-2024/a-101-in-time-series-analytics-with-apache-arrow-pandas-and-parquet.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Zoe Steinkamp</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/a-101-in-time-series-analytics-with-apache-arrow-pandas-and-parquet.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Columnar databases are on the rise! They provide an efficient and scalable data warehouse for many use cases including time series data. The problem? many conventional database drivers and querying methods become the bottleneck for data processing and analytics within our client-side applications. Learn how to leverage open-source projects …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Columnar databases are on the rise! They provide an efficient and scalable data warehouse for many use cases including time series data. The problem? many conventional database drivers and querying methods become the bottleneck for data processing and analytics within our client-side applications. Learn how to leverage open-source projects like Apache Arrow Flight and Apache Parquet alongside industry-standard analytics libraries to build the foundations of a performant analytics application for time series data.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Accelerating ML Prototyping: The Pythonic Way</title><link href="https://pyvideo.org/pybay-2024/accelerating-ml-prototyping-the-pythonic-way.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Parul Gupta</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/accelerating-ml-prototyping-the-pythonic-way.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Effective machine learning (ML) prototyping is critical for developing successful models and applications. Python, with its robust ecosystem of tools, plays a significant role in this process.&lt;/p&gt;
&lt;p&gt;This talk will bring a fresh perspective on how we, at Meta, provide tools for efficient ML prototyping for our researchers and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Effective machine learning (ML) prototyping is critical for developing successful models and applications. Python, with its robust ecosystem of tools, plays a significant role in this process.&lt;/p&gt;
&lt;p&gt;This talk will bring a fresh perspective on how we, at Meta, provide tools for efficient ML prototyping for our researchers and ML engineers. We will first go through a comprehensive overview of the ML lifecycle and then deep dive into the ML prototyping phase, emphasizing on its significance. We will focus on conda for environment management and jupyter notebooks for interactive development — two powerful tools that streamline development and experimentation at Meta and in the industry, in general. In the last part of the talk, I will highlight interesting examples of improvements made to these tools at Meta for efficient prototyping, accelerating the developer productivity in the AI space.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Architecting Native Python Extension Modules</title><link href="https://pyvideo.org/pybay-2024/architecting-native-python-extension-modules.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Alexander Steele</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/architecting-native-python-extension-modules.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over 20% of the most downloaded Python modules rely on native extension modules written in compiled languages like C, C++, and Rust. These extension modules, with their low-level control and high performance, enable Python to be used in new domains, from numerical computing to interfacing with hardware. However, they …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over 20% of the most downloaded Python modules rely on native extension modules written in compiled languages like C, C++, and Rust. These extension modules, with their low-level control and high performance, enable Python to be used in new domains, from numerical computing to interfacing with hardware. However, they also present a new set of architecture-level questions, as well as trade-offs between performance, Python API ergonomics, and extension module maintainability. This talk will answer those questions and provide a set of best practices for creating fast, useful, and maintainable extension modules.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Automate Your City Data With Python</title><link href="https://pyvideo.org/pybay-2024/automate-your-city-data-with-python.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Philip James</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/automate-your-city-data-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every week, in every city, hundreds if not thousands of decisions, big and small, are being made about the places where we all live. Most of the time, these decisions are hidden behind old systems, arcane websites, or poorly formatted PDFs. With the power of Datasette, Python data tooling …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every week, in every city, hundreds if not thousands of decisions, big and small, are being made about the places where we all live. Most of the time, these decisions are hidden behind old systems, arcane websites, or poorly formatted PDFs. With the power of Datasette, Python data tooling, and Github actions, you can quickly set up a low-or-no-cost city data pipeline, and help us all better understand the decisions being made where we live.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Branch deploys at any scale</title><link href="https://pyvideo.org/pybay-2024/branch-deploys-at-any-scale.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Ted Nyman</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/branch-deploys-at-any-scale.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A branch deploy system—where developers deploy a branch to production before merging— enables everyone to deploy faster, unblocks developer productivity, and dramatically reduces the need for reverts. Companies at large scale do it, but anyone can! We'll go through the benefits, logistics, and how you use Python to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A branch deploy system—where developers deploy a branch to production before merging— enables everyone to deploy faster, unblocks developer productivity, and dramatically reduces the need for reverts. Companies at large scale do it, but anyone can! We'll go through the benefits, logistics, and how you use Python to build one.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Deploy Python Apps on Kubernetes and Prepare for Scale</title><link href="https://pyvideo.org/pybay-2024/deploy-python-apps-on-kubernetes-and-prepare-for-scale.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Senthil Kumaran</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/deploy-python-apps-on-kubernetes-and-prepare-for-scale.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Applications aren't stand alone, they need to work along with other applications, talk to databases; and be prepared for scale. Kubernetes is the de-facto standard for achieving scalability.&lt;/p&gt;
&lt;p&gt;In this talk, we will see how Developers can be design their workflow ad architecture, the take the python app …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Applications aren't stand alone, they need to work along with other applications, talk to databases; and be prepared for scale. Kubernetes is the de-facto standard for achieving scalability.&lt;/p&gt;
&lt;p&gt;In this talk, we will see how Developers can be design their workflow ad architecture, the take the python app, interacting with database and an AI Model (not api) and deploy the application to Kubernetes, and prepare for scale.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Edges of Python: Three Radical Python Hacks for Fun and Profit</title><link href="https://pyvideo.org/pybay-2024/edges-of-python-three-radical-python-hacks-for-fun-and-profit.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Elvis Pranskevichus</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/edges-of-python-three-radical-python-hacks-for-fun-and-profit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building complex software projects is hard, but the fun part of doing it is that it often pushes you to find non-obvious solutions to problems which seem radical at first, yet almost obvious in hindsight.  In this talk you learn some of the unusual Python tricks that we use …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building complex software projects is hard, but the fun part of doing it is that it often pushes you to find non-obvious solutions to problems which seem radical at first, yet almost obvious in hindsight.  In this talk you learn some of the unusual Python tricks that we use at EdgeDB to write more efficient Python with fewer bugs, and which you can apply in your project next time you need to scratch a similar itch.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>F-Strings!</title><link href="https://pyvideo.org/pybay-2024/f-strings.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Mariatta</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/f-strings.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;By now we hope you've been using f-strings, but do you know that there's more to it than sticking variables into curly braces?&lt;/p&gt;
&lt;p&gt;In this talk, we'll go through the useful features of f-strings, from formatting to debugging. We'll also share how f-strings have been improved since Python 3 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;By now we hope you've been using f-strings, but do you know that there's more to it than sticking variables into curly braces?&lt;/p&gt;
&lt;p&gt;In this talk, we'll go through the useful features of f-strings, from formatting to debugging. We'll also share how f-strings have been improved since Python 3.12. Watch this talk so you don't miss out!&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>From Pandas to Polars: Upgrading Your Data Workflow</title><link href="https://pyvideo.org/pybay-2024/from-pandas-to-polars-upgrading-your-data-workflow.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Matt Harrison</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/from-pandas-to-polars-upgrading-your-data-workflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thinking about making the switch from Pandas to Polars? This talk is for you. Matt Harrison, author of both Effective Pandas and Effective Polars, will compare the two libraries, highlighting Polars' unique advantages and how it addresses some of Pandas' limitations. You’ll learn how to translate your existing …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thinking about making the switch from Pandas to Polars? This talk is for you. Matt Harrison, author of both Effective Pandas and Effective Polars, will compare the two libraries, highlighting Polars' unique advantages and how it addresses some of Pandas' limitations. You’ll learn how to translate your existing Pandas knowledge into Polars, taking full advantage of its speed and efficiency for more effective data processing&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>How to build a cross-platform GUI with Python</title><link href="https://pyvideo.org/pybay-2024/how-to-build-a-cross-platform-gui-with-python.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Russell Keith-Magee</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/how-to-build-a-cross-platform-gui-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you need to build a user interface for your Python code, many guides will tell you that your only options are to use the command line, or wrap your code in a web interface. However, there is another option - building a GUI interface. In fact, in some cases …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you need to build a user interface for your Python code, many guides will tell you that your only options are to use the command line, or wrap your code in a web interface. However, there is another option - building a GUI interface. In fact, in some cases, a GUI app may be your &lt;em&gt;only&lt;/em&gt; option. In this talk, you'll learn how to build a cross-platform GUI application to wrap your Python code, and how to use that GUI application to access device features that may not be accessible from a command line or web interface.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Impress your enterprise customers with OpenID Connect login</title><link href="https://pyvideo.org/pybay-2024/impress-your-enterprise-customers-with-openid-connect-login.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Semona Igama</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/impress-your-enterprise-customers-with-openid-connect-login.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When you sell a Python SaaS app, customers' first question will be, &amp;quot;How do I log in?&amp;quot;. Are you committing the security faux pas of rolling your own authentication? Does your app only support password login? If you've integrated identity standards, do you understand how they work and how …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When you sell a Python SaaS app, customers' first question will be, &amp;quot;How do I log in?&amp;quot;. Are you committing the security faux pas of rolling your own authentication? Does your app only support password login? If you've integrated identity standards, do you understand how they work and how you can benefit from their full set of features? In this talk, you'll learn the principles of how to use OpenID Connect (OIDC) to secure a Django app for the first time or refresh your knowledge. OIDC allows enterprise customers' users to sign in with their corporate identity providers and facilitates social login with Google or Twitter. Show your customers how you're prioritizing their authentication needs by following secure open standards.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Make a working implementation of async functions in Python 1.6!</title><link href="https://pyvideo.org/pybay-2024/make-a-working-implementation-of-async-functions-in-python-16.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Christopher Neugebauer</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/make-a-working-implementation-of-async-functions-in-python-16.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;FULL TITLE:  &amp;quot;Let's make a working implementation of async functions in Python 1.6; or, why to use newer Pythons&amp;quot; — Christopher Neugebauer (PyBay 2024)&amp;quot;&lt;/p&gt;
&lt;p&gt;Often I hear people lamenting that Python has too many features and that older versions of Python were better for that exact reason.&lt;/p&gt;
&lt;p&gt;To make …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;FULL TITLE:  &amp;quot;Let's make a working implementation of async functions in Python 1.6; or, why to use newer Pythons&amp;quot; — Christopher Neugebauer (PyBay 2024)&amp;quot;&lt;/p&gt;
&lt;p&gt;Often I hear people lamenting that Python has too many features and that older versions of Python were better for that exact reason.&lt;/p&gt;
&lt;p&gt;To make those people happy, we're going to pick apart the features of Python that enable the &lt;cite&gt;async&lt;/cite&gt;/&lt;cite&gt;await&lt;/cite&gt; syntax, layer by layer, until we happen upon a working implementation of coroutines that will function in Python 2.1.&lt;/p&gt;
&lt;p&gt;Somewhere in this talk will be some useful discussions about why recent syntactic developments in Python are a good thing actually, but let's not lie, you're reading this abstract for the stunt content. You'll get what you came for.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Master Python typing with Python-Type-Challenges</title><link href="https://pyvideo.org/pybay-2024/master-python-typing-with-python-type-challenges.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Laike9m</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/master-python-typing-with-python-type-challenges.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this lightning talk, I'll introduce Python-Type-Challenges, a free and open-source online exercise to help people master Python typing (type hints).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/laike9m/Python-Type-Challenges"&gt;https://github.com/laike9m/Python-Type-Challenges&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Slide: &lt;a class="reference external" href="https://shorturl.at/oJGon"&gt;https://shorturl.at/oJGon&lt;/a&gt;&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Next Level Python Applications with PyScript</title><link href="https://pyvideo.org/pybay-2024/next-level-python-applications-with-pyscript.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Fabio Pliger</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/next-level-python-applications-with-pyscript.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Abstract: Zero Installation, massive scalability, mobile support and more. This talk is going to cover the super powers of running Python in the Browser and how to best use PyScript.&lt;/p&gt;
&lt;p&gt;Description: PyScript is a Platform that allows users to create Python applications that run in the browser in a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Abstract: Zero Installation, massive scalability, mobile support and more. This talk is going to cover the super powers of running Python in the Browser and how to best use PyScript.&lt;/p&gt;
&lt;p&gt;Description: PyScript is a Platform that allows users to create Python applications that run in the browser in a fast and easy way.&lt;/p&gt;
&lt;p&gt;The talk will quickly cover the basics of a PyScript Application and focus on a series of examples (from basic to mid-advanced levels and from games to simple dashboards) that displays:
- How easy it is to create PyScript applications
- PyScript Applications architecture
- Differences between running python on native OS vs on the Browser
- How to take advantage of Python on the browser for massive scalability, portability, security and other important factors
- Using Javascript libraries with Python in your PyScript Application&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Playing Improv ... with Python!</title><link href="https://pyvideo.org/pybay-2024/playing-improv-with-python.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Pamela Fox</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/playing-improv-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I ❤️ playing group improv games, but I don't always have a group of humans available for playing. What if I could get a computer to play the games with me, by using a small language model? Let's give it a go in this interactive talk!&lt;/p&gt;
&lt;p&gt;I'll start by playing …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I ❤️ playing group improv games, but I don't always have a group of humans available for playing. What if I could get a computer to play the games with me, by using a small language model? Let's give it a go in this interactive talk!&lt;/p&gt;
&lt;p&gt;I'll start by playing some improv games with the audience (willing volunteers needed!) and then bring in a language model to play the games with us. Let's see what sort of creativity computers can bring to the table, and have fun along the way!&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Practical GraphRAG - Making LLMs smarter with Knowledge Graphs</title><link href="https://pyvideo.org/pybay-2024/practical-graphrag-making-llms-smarter-with-knowledge-graphs.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Alison Cossette</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/practical-graphrag-making-llms-smarter-with-knowledge-graphs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;We all know that LLMs hallucinate and RAG can help by providing current, relevant information to the model for generative tasks.&lt;/p&gt;
&lt;p&gt;But can we do better than just vector retrievals? A knowledge graph can represent data (and reality) at high fidelity and can make this  rich context available based …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;We all know that LLMs hallucinate and RAG can help by providing current, relevant information to the model for generative tasks.&lt;/p&gt;
&lt;p&gt;But can we do better than just vector retrievals? A knowledge graph can represent data (and reality) at high fidelity and can make this  rich context available based on the user's questions. But how to turn your text data into graphs data structures?&lt;/p&gt;
&lt;p&gt;Here is where the language skills of LLM can help to extract entities and relationships from text, which you then can correlate with sources,
cluster into communities and navigate while answering the questions.&lt;/p&gt;
&lt;p&gt;In this talk we will both dive into Microsoft Research's GraphRAG approach as well as run the indexing and search live with Neo4j and LangChain.&amp;quot;&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Pyre, Lints, Codemods, Code Quality, and You</title><link href="https://pyvideo.org/pybay-2024/pyre-lints-codemods-code-quality-and-you.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Maggie Moss</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/pyre-lints-codemods-code-quality-and-you.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to use types in Python and codemods to keep your code quality high.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Raising Python quality across a large &amp; diverse AI org</title><link href="https://pyvideo.org/pybay-2024/raising-python-quality-across-a-large-diverse-ai-org.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Isaac Storch</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/raising-python-quality-across-a-large-diverse-ai-org.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;AI practitioners come from diverse backgrounds with varying degrees of Python software engineering experience. Maintaining engineering excellence across a large organization with this variance in skill set is a challenge. Come hear how Intuit has successfully addressed this challenge by leveling up engineering skills at scale and by building …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;AI practitioners come from diverse backgrounds with varying degrees of Python software engineering experience. Maintaining engineering excellence across a large organization with this variance in skill set is a challenge. Come hear how Intuit has successfully addressed this challenge by leveling up engineering skills at scale and by building automatic code quality enforcement into our Python paved roads. We will also share a few of our most effective best practices and the tech stack it takes to make it all work, including Poetry, Pytest, Black, Flake8, and Mypy.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Scrolling Animated ASCII Art in Python</title><link href="https://pyvideo.org/pybay-2024/scrolling-animated-ascii-art-in-python.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/scrolling-animated-ascii-art-in-python.html</id><content type="html"></content><category term="PyBay 2024"></category></entry><entry><title>The Five Demons of Python Packaging That Fuel Our Persistent Nightmare</title><link href="https://pyvideo.org/pybay-2024/the-five-demons-of-python-packaging-that-fuel-our-persistent-nightmare.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Peter Wang</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/the-five-demons-of-python-packaging-that-fuel-our-persistent-nightmare.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Packaging is very likely Python's most widespread and persistent frustration. It has remained an unsolved problem for 20+ years. Is Python uniquely cursed in this category? Do we just need more tools? What if the ecosystem just standardized on {tool X}?&lt;/p&gt;
&lt;p&gt;In this talk, Peter will explain why Python …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Packaging is very likely Python's most widespread and persistent frustration. It has remained an unsolved problem for 20+ years. Is Python uniquely cursed in this category? Do we just need more tools? What if the ecosystem just standardized on {tool X}?&lt;/p&gt;
&lt;p&gt;In this talk, Peter will explain why Python has a uniquely hard problem to solve, sitting in the crosshairs of 5 very different kinds of challenges. Ironically, each of these challenges can be traced back to a core strength or value of Python and its open source ecosystem.&lt;/p&gt;
&lt;p&gt;This talk will not offer any new comprehensive solutions, but will hopefully will give a holistic perspective of the fundamental drivers of complexity around Python and packaging. This can hopefully help orient future discussions, help tool makers surface opportunities for collaboration and consolidation, and help users better understand which subset of the 5 demons of packaging they are fighting at any given point in time.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Thinking of Topic Modeling as Search</title><link href="https://pyvideo.org/pybay-2024/thinking-of-topic-modeling-as-search.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Kas Stohr</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/thinking-of-topic-modeling-as-search.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Typically when you think about using a topic model in production you encounter two hurdles: First, topics change continually, and document tags become stale as soon as they are created. Second, while unsupervised topic models do a good job of clustering topics, creating robust, human-interpretable labels is challenging. Framing …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Typically when you think about using a topic model in production you encounter two hurdles: First, topics change continually, and document tags become stale as soon as they are created. Second, while unsupervised topic models do a good job of clustering topics, creating robust, human-interpretable labels is challenging. Framing topic modeling as a search problem, helps overcome these challenges and makes it easier to use supervised or unsupervised topic models in real-time applications.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Unlocking Creative Potential Through Teaching</title><link href="https://pyvideo.org/pybay-2024/unlocking-creative-potential-through-teaching.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Johannan Hjersman</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/unlocking-creative-potential-through-teaching.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Teaching is not merely reserved for academia - it happens everyday in tech. It takes on many forms from instructing an entire team to a new process or an informal knowledge transfer between two engineers. Many shy away from the opportunity, but can find that often the mentor can learn …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Teaching is not merely reserved for academia - it happens everyday in tech. It takes on many forms from instructing an entire team to a new process or an informal knowledge transfer between two engineers. Many shy away from the opportunity, but can find that often the mentor can learn as much as the mentee.&lt;/p&gt;
&lt;p&gt;Join me as we explore the importance of teaching in tech, where we will start with Bloom's Taxonomy as the driver for learning. From there, I'll provide examples and case-studies from my own experiences in tech and how I learn from those specific use-cases to generalize for future applications.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Using AI to Entice Employees to Python</title><link href="https://pyvideo.org/pybay-2024/using-ai-to-entice-employees-to-python.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Paul Pereyda Karayan</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/using-ai-to-entice-employees-to-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we'll explore how AI being the &amp;quot;&amp;quot;bright shiny object&amp;quot;&amp;quot; as a bridge to bring both technical and non-technical employees into the world of coding. By leveraging AI tools and methodologies, we'll demonstrate how to demystify programming concepts and make them accessible and enjoyable for everyone.&lt;/p&gt;
&lt;p&gt;This …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we'll explore how AI being the &amp;quot;&amp;quot;bright shiny object&amp;quot;&amp;quot; as a bridge to bring both technical and non-technical employees into the world of coding. By leveraging AI tools and methodologies, we'll demonstrate how to demystify programming concepts and make them accessible and enjoyable for everyone.&lt;/p&gt;
&lt;p&gt;This comes from experience at our company, Opto Investments, as a professional engineer (PK) and an investment analyst who's a hobbyist pythonista (Manny).&lt;/p&gt;
&lt;p&gt;We'll cover:
- Engagement Strategies: Techniques for demystifying tech and getting through to that inner creativity that we know everyone has&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Lesson Plans and Case Studies we used to personalise the learning experience for individuals with different skill levels.&lt;/li&gt;
&lt;li&gt;Real-World Applications: Practical examples of how AI can be used in everyday tasks to highlight the relevance and importance of coding.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Join us to uncover the &amp;quot;&amp;quot;Secret Snake&amp;quot;&amp;quot; and learn how to leverage the excitement about AI to better teach coding, and make it an exciting and inclusive journey for all.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Using (and abusing?) Python's logging module for more readable logs</title><link href="https://pyvideo.org/pybay-2024/using-and-abusing-pythons-logging-module-for-more-readable-logs.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Colin Chan</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/using-and-abusing-pythons-logging-module-for-more-readable-logs.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A brief but deep dive into several unusual and possibly controversial things I've done &lt;em&gt;in production&lt;/em&gt; with the logging module, and a reflection on how they've held up over time.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Welcome to PyBay 2024!</title><link href="https://pyvideo.org/pybay-2024/welcome-to-pybay-2024.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Chris Brousseau</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/welcome-to-pybay-2024.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Welcome and kickoff session for the PyBay 2024 Conference in San Francisco, CA on 21 Oct 2024.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>When "Arbitrary Code Execution" is "Working As Intended": What Code is Python *Supposed* To Execute</title><link href="https://pyvideo.org/pybay-2024/when-arbitrary-code-execution-is-working-as-intended-what-code-is-python-supposed-to-execute.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Glyph</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/when-arbitrary-code-execution-is-working-as-intended-what-code-is-python-supposed-to-execute.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When somebody can trick your program into running arbitrary code, that is the worst kind of security bug. But of course, your program has to run &lt;em&gt;some&lt;/em&gt; code or it's not much of a program.  So how do we tell the difference between the two?&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Wrap Up PyBay 2024</title><link href="https://pyvideo.org/pybay-2024/wrap-up-pybay-2024.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Chris Brousseau</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/wrap-up-pybay-2024.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wrap Up and Thank You for PyBay 2024.&lt;/p&gt;
&lt;p&gt;Join us to celebrate our gathering, thank everyone who made it possible and get a glimpse of our next event.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry></feed>