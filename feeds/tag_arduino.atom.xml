<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_arduino.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-03T00:00:00+00:00</updated><entry><title>Internet delle cose con Redis e django-channels</title><link href="https://pyvideo.org/pycon-italia-2019/internet-delle-cose-con-redis-e-django-channels.html" rel="alternate"></link><published>2019-05-03T00:00:00+00:00</published><updated>2019-05-03T00:00:00+00:00</updated><author><name>Mario Orlandi</name></author><id>tag:pyvideo.org,2019-05-03:pycon-italia-2019/internet-delle-cose-con-redis-e-django-channels.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/morlandi/sinewave"&gt;https://github.com/morlandi/sinewave&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;L’esempio proposto ha lo scopo di esaminare alcuni possibili paradigmi
di comunicazione fra dispositivi periferici e un server centrale, con
particolare riferimento al protocollo PUB/SUB reso disponibile da Redis.
L’invio di informazioni da parte del dispositivo può essere
concretizzato sia utilizzando una delle tante librerie client
disponibili (Python o altri linguaggi), sia mediante una funzione
“publish” minimale (per es. scritta in C); questa seconda opzione può
essere convenientemente utilizzata in contesti limitati quali Arduino o
altre schede embedded. Le informazioni ricevute sul server possono
essere ulteriormente propagate ad eventuali clients web che avessero
manifestato il proprio interesse, predisponendo sul server un processo
“listener” incaricato di raccogliere i dati come subscriber, per poi
eseguirne il broadcast via WebSocket; l’esempio proposto illustra una
semplice implementazione basata su django-channels.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1726"&gt;https://python.it/feedback-1726&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="pub/sub"></category><category term="redis"></category><category term="arduino"></category></entry><entry><title>Messaging for the Internet of Things</title><link href="https://pyvideo.org/europython-2013/messaging-for-the-internet-of-things.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Andreas Schreiber</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/messaging-for-the-internet-of-things.html</id><summary type="html"></summary><category term="MessageQueues"></category><category term="networking"></category><category term="arduino"></category><category term="raspberrypi"></category><category term="sensor networks"></category><category term="healthcare"></category><category term="android"></category></entry><entry><title>Machine Learning con Python: algoritmi NILM e real-time processing</title><link href="https://pyvideo.org/pycon-italia-2017/machine-learning-con-python-algoritmi-nilm-e-real-time-processing.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Felice Tuosto</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/machine-learning-con-python-algoritmi-nilm-e-real-time-processing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le tecniche di Machine Learning sono sempre più pervasive nelle
applicazioni analitiche odierne. In questo talk l’attenzione verte sul
problema del &lt;strong&gt;NILM&lt;/strong&gt; (Not Intrusive Load Monitoring) per cui
l’obiettivo è la disaggregazione real-time dei consumi di energia
elettrica. Gli algoritmi, permettono di riconoscere in realtime i
dispositivi attivi in base alle sole caratteristiche del segnale
aggregato.&lt;/p&gt;
&lt;p&gt;L’obiettivo del talk è dimostrare come sia possibile implementare
rapidamente un prototipo hardware e software grazie alle potenzialità di
Arduino e Python rispettivamente.&lt;/p&gt;
&lt;p&gt;Con degli &lt;em&gt;esempi hardware e software pratici&lt;/em&gt; (4 devices collegati ad
una multipresa), verrà dimostrata la capacità di Arduino di acquisire le
misura di corrente elettrica e la capacità di Python di riconoscere i
dispositivi attivi. Verranno fornite informazioni sulle logiche alla
base di tali algoritmi, con riferimento all’ecosistema Python e alle
relative librerie utilizzate.&lt;/p&gt;
&lt;p&gt;Per la comprensione del talk non sono necessari particolari requisiti se
non una conoscenza di base di programmazione in Python e di Machine
Learning.&lt;/p&gt;
</summary><category term="signal-processing"></category><category term="arduino"></category><category term="nilm"></category><category term="machine-learning"></category><category term="realtime"></category></entry><entry><title>Kivy und Arduino - Robotersteuerung mit dem Smartphone</title><link href="https://pyvideo.org/pycon-de-2013/kivy-und-arduino-robotersteuerung-mit-dem-smart.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Andreas Bresser</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/kivy-und-arduino-robotersteuerung-mit-dem-smart.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In diesem Vortrag wird gezeigt, wie man ein Robotik-Board (Arduino) über
Bluetooth durch ein Smartphone steuern kann. Hierbei kommt Kivy als
Framework für die Grafische Oberfläche zum Einsatz.&lt;/p&gt;
</summary><category term="arduino"></category><category term="bluetooth"></category><category term="kivy"></category><category term="mobile"></category><category term="robot"></category><category term="smartphone"></category></entry></feed>