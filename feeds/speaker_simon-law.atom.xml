<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_simon-law.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-08-10T00:00:00+00:00</updated><entry><title>Communicating Sequential Processes: Multicore Programs in Standard CPython</title><link href="https://pyvideo.org/pycon-ca-2013/communicating-sequential-processes-multicore-pro.html" rel="alternate"></link><published>2013-08-10T00:00:00+00:00</published><updated>2013-08-10T00:00:00+00:00</updated><author><name>Simon Law</name></author><id>tag:pyvideo.org,2013-08-10:pycon-ca-2013/communicating-sequential-processes-multicore-pro.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;We live in a multicore world now: your cellphone has more CPUs now than
your desktop did a decade ago.&lt;/p&gt;
&lt;p&gt;Traditionally, Python programs have been sequential. With Communicating
Sequential Processes (CSP), you can transform your CPython programs into
concurrent programs.&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>