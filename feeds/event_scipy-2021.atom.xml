<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - SciPy 2021</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_scipy-2021.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-07-12T00:00:00+00:00</updated><subtitle></subtitle><entry><title>A Review of Linear Programming for Python</title><link href="https://pyvideo.org/scipy-2021/a-review-of-linear-programming-for-python.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Nicholas McKibben</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/a-review-of-linear-programming-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This presentation provides a user's perspective review of open source linear programming libraries and packages available for Python including recent enhancements to SciPy's linear programming capabilities from the HiGHS high performance library. Examples of classic problem formulation and encoding are explored to illustrate differences in library approaches. General comparisons …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This presentation provides a user's perspective review of open source linear programming libraries and packages available for Python including recent enhancements to SciPy's linear programming capabilities from the HiGHS high performance library. Examples of classic problem formulation and encoding are explored to illustrate differences in library approaches. General comparisons of solvers in terms of features, performance, and portability are presented as well as a gap analysis of the Python linear programming ecosystem.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>A Tour of Property Based Testing how I find bugs with the scientific method</title><link href="https://pyvideo.org/scipy-2021/a-tour-of-property-based-testing-how-i-find-bugs-with-the-scientific-method.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Zac Hatfield-Dodds</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/a-tour-of-property-based-testing-how-i-find-bugs-with-the-scientific-method.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tests can be helpful: they can find bugs in new code, check for regressions in old code, and clarify precisely what the code is meant to do. On the other hand, writing tests is often tedious - and it's rare to think of an error when testing that you forgot …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tests can be helpful: they can find bugs in new code, check for regressions in old code, and clarify precisely what the code is meant to do. On the other hand, writing tests is often tedious - and it's rare to think of an error when testing that you forgot when writing the code. Even worse, as scientists we write code &lt;em&gt;because&lt;/em&gt; we don't yet know the correct answer - so how can we possibly test it? The answer is to generate many inputs, and check whether the code does something _wrong_, like changing the data you save-then-load. Whether you're a novice Pythonista or gnarled wizard, this Talk about property-based testing with Hypothesis will educate, entertain, and help take your testing to the next level.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Accelerating Spectroscopic Data Processing Using Python &amp; GPUs on NERSC Supercomputers</title><link href="https://pyvideo.org/scipy-2021/accelerating-spectroscopic-data-processing-using-python-gpus-on-nersc-supercomputers.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Daniel Margala</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/accelerating-spectroscopic-data-processing-using-python-gpus-on-nersc-supercomputers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We present a case study in porting a Python-based cosmology data processing application to GPU-accelerated compute nodes, achieving a 20x improvement in per-node throughput, on current and future supercomputers at the National Energy Research and Scientific Computing Center (NERSC). We describe our iterative approach to porting and optimizing the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We present a case study in porting a Python-based cosmology data processing application to GPU-accelerated compute nodes, achieving a 20x improvement in per-node throughput, on current and future supercomputers at the National Energy Research and Scientific Computing Center (NERSC). We describe our iterative approach to porting and optimizing the application using CuPy and Numba CUDA for GPU-acceleration and NVIDIA NSight Systems for performance analysis. We discuss the lessons learned during the course of this work to guide future efforts of the team and inform other science teams looking to leverage GPU-acceleration in their Python-based data processing applications.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Agent-based modelling for studying the past</title><link href="https://pyvideo.org/scipy-2021/agent-based-modelling-for-studying-the-past.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Iza Romanowska</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/agent-based-modelling-for-studying-the-past.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;“I didn’t choose to study archaeology to spend my time in front of a computer” is how one of my students expressed their dismay at the idea that studying humanities (in Europe) or social science (in the USA) may involve the kind of work they avoided their whole …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;“I didn’t choose to study archaeology to spend my time in front of a computer” is how one of my students expressed their dismay at the idea that studying humanities (in Europe) or social science (in the USA) may involve the kind of work they avoided their whole life. Yet the academic reality is such that exchanging opinions, developing narratives or simply describing things fails to impress the funders, multiply one’s citation indices or inform policy makers. The “old” ways of doing humanities translates very poorly into what is nowadays the academic “currency”. At the same time we’re witnessing a slow yet steady shift towards formal, computational methods across humanities disciplines. Initially these were mostly related to data, its handling, analysis and visualisation but now a new kid on the block is proclaiming a new dawn for theory building. This kid is simulation modelling and its most prevalent form is Agent-based Modelling (ABM). In simple terms, simulation is a formal representation of our ideas of how the world functions that allows us to see how likely these ideas are given the data. Agent-based modelling is just one of many simulation techniques but it lends itself particularly well to human-centered research. An ABM model operates with familiar entities - individuals, families, houses or cars - which follow easy to understand behaviour rules: “when hungry, find some food”, “copy the idea from a friend”, “exchange only if price is below your budget”. As such, ABM is likely to remain the simulation technique of choice in social and humanities research. In this talk, I will ground modelling methods in the epistemological framework of the scientific process and showcase the innovative ways in which we can use simulation and other formal model-building techniques to understand the interactions between individuals and their social and natural environments. I will talk about the potential and limitations of computational modelling in disciplines studying the past and highlight the range of possible applications. Finally, I will try to sketch out how profound this transition to formal theory development is for our field as a whole.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Bayesian Data Science by Simulation</title><link href="https://pyvideo.org/scipy-2021/bayesian-data-science-by-simulation.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Hugo Bowne-Anderson</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/bayesian-data-science-by-simulation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This Tutorial is an introduction to Bayesian data science through the lens of simulation or hacker statistics. We will become familiar with many common probability distributions through i) matching them to real-world stories &amp;amp; ii) simulating them. We will work with joint/conditional probabilities, Bayes Theorem, prior/posterior distributions and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This Tutorial is an introduction to Bayesian data science through the lens of simulation or hacker statistics. We will become familiar with many common probability distributions through i) matching them to real-world stories &amp;amp; ii) simulating them. We will work with joint/conditional probabilities, Bayes Theorem, prior/posterior distributions and likelihoods while seeing their applications in real-world data analyses. We’ll see the utility of Bayesian inference in parameter estimation and comparing groups and we’ll wrap up with a dive into the wonderful world of probabilistic programming.&lt;/p&gt;
</content><category term="SciPy 2021"></category><category term="tutorial"></category></entry><entry><title>Big data, low effort: out-of-core visualization with the napari image viewer</title><link href="https://pyvideo.org/scipy-2021/big-data-low-effort-out-of-core-visualization-with-the-napari-image-viewer.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Draga Doncila Pop</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/big-data-low-effort-out-of-core-visualization-with-the-napari-image-viewer.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We present napari: an open source n-dimensional viewer in python. We will cover an overview of the napari viewer and an introduction to extending its functionality through plugins. Finally, we demonstrate a practical case study by loading and interacting with hundreds of Sentinel satellite images and the results of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We present napari: an open source n-dimensional viewer in python. We will cover an overview of the napari viewer and an introduction to extending its functionality through plugins. Finally, we demonstrate a practical case study by loading and interacting with hundreds of Sentinel satellite images and the results of their analysis in near real-time. napari is a General purpose viewer and this Talk will benefit anyone wishing to interact with imaging data beyond the limits of memory in any field including microscopy, astronomy and life sciences. After this Talk you’ll be familiar with many of the tools provided by napari to improve your imaging research workflow.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Build and Distribute Data Science Apps with Pyodide</title><link href="https://pyvideo.org/scipy-2021/build-and-distribute-data-science-apps-with-pyodide.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Michael Greminger</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/build-and-distribute-data-science-apps-with-pyodide.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pyodide is a project that compiles the CPython Python interpreter and much of the Python scientific stack (including NumPy, Pandas, and parts of SciPy) to WebAssembly. Pyodide runs in all modern web browsers at near native speeds and provides a means to allow users to run Python code without …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pyodide is a project that compiles the CPython Python interpreter and much of the Python scientific stack (including NumPy, Pandas, and parts of SciPy) to WebAssembly. Pyodide runs in all modern web browsers at near native speeds and provides a means to allow users to run Python code without having to install anything. This Talk will go over a case study of porting a design optimization tool that I use in my university class to Pyodide. I’ll cover some of the implementation details and how the JavaScript user interface code interfaces with the data science code written in Python.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Building the NetworkX developer community</title><link href="https://pyvideo.org/scipy-2021/building-the-networkx-developer-community.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>K. Jarrod Millman</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/building-the-networkx-developer-community.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NetworkX (&lt;a class="reference external" href="https://networkx.org/"&gt;https://networkx.org/&lt;/a&gt;) is a foundational tool in the scientific Python ecosystem for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks. Started in 2002, it is one of the oldest projects in the ecosystem and is widely used for education and network …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NetworkX (&lt;a class="reference external" href="https://networkx.org/"&gt;https://networkx.org/&lt;/a&gt;) is a foundational tool in the scientific Python ecosystem for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks. Started in 2002, it is one of the oldest projects in the ecosystem and is widely used for education and network science. Recently, we received funding through the CZI Essential Open Source Software for Science program to revitalize NetworkX. I will discuss the challenges of building and maintaining a healthy development community, provide General lessons for fostering a health developer community, as well as describe pathways for new contributors to become core developers.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Community, Computing, and Chemistry</title><link href="https://pyvideo.org/scipy-2021/community-computing-and-chemistry.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Raychelle Burks</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/community-computing-and-chemistry.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;After working in a crime lab, Dr. Burks returned to academia, teaching, and forensic science research. Her research team is focused on the development of colorimetric and luminescent sensing systems with integrated image and chemometric analysis for forensic applications. She is co-creator of the Digital Imaging and Vision Applications …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;After working in a crime lab, Dr. Burks returned to academia, teaching, and forensic science research. Her research team is focused on the development of colorimetric and luminescent sensing systems with integrated image and chemometric analysis for forensic applications. She is co-creator of the Digital Imaging and Vision Applications in Science (DIVAS) project which created a pedagogical and programmatic &amp;amp;quot;&amp;amp;quot;onramp&amp;amp;quot;&amp;amp;quot; that empowers natural science majors to engage in authentic computational problems as members of community of practice. Beyond the bench, Dr. Burks is a popular science communicator appearing regularly on TV, radio, podcasts, and print outlets. Most recently, she was a series regular in the Smithsonian Channel show &amp;amp;quot;&amp;amp;quot;The Curious Life and Death Of...&amp;amp;quot;&amp;amp;quot; and writes a science-meets-true crime column called “Trace Analysis” for Chemistry World. In 2020, she was awarded the American Chemical Society's Grady - Stack Award for Interpreting Chemistry for the Public.  Central to Dr. Burks' research, teaching, and service is the central tenet that equitable, diverse, and inclusive spaces and practices both respect people and produce scientific outcomes of greater integrity. She is a member of several local, national, and international committees, task forces, and projects focused on social justice and STEM.&lt;/p&gt;
</content><category term="SciPy 2021"></category><category term="Keynote"></category></entry><entry><title>Creating advanced machine vision applications using Python and 3D depth sensing</title><link href="https://pyvideo.org/scipy-2021/creating-advanced-machine-vision-applications-using-python-and-3d-depth-sensing.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Andrei Cozma</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/creating-advanced-machine-vision-applications-using-python-and-3d-depth-sensing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session introduces the Python API provided by the Analog Devices open source ToF SDK and Talks about some of the challenges of implementing an efficient Python interface layer on top of a C++ library. It also covers 3D image processing and visualization tools available in Python and the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session introduces the Python API provided by the Analog Devices open source ToF SDK and Talks about some of the challenges of implementing an efficient Python interface layer on top of a C++ library. It also covers 3D image processing and visualization tools available in Python and the flow of creating Python based AI machine vision applications and deploying those on real hardware. The Talk is targeted to system engineers, vision algorithms developers and software engineers looking to boost their knowledge in developing Python based machine vision applications coupled with depth sensing cameras and high-performance embedded processing platforms.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>dame-flame: A Python Library For Interpretable Matching for Causal Inference</title><link href="https://pyvideo.org/scipy-2021/dame-flame-a-python-library-for-interpretable-matching-for-causal-inference.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Neha Gupta</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/dame-flame-a-python-library-for-interpretable-matching-for-causal-inference.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Causal inference is the attempt to go beyond correlation, and draw conclusions that something is being caused by something else. Questions of robust causal inference are unavoidable in health or social science settings, where available data is observational, meaning we only observe one outcome per individual. One common approach …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Causal inference is the attempt to go beyond correlation, and draw conclusions that something is being caused by something else. Questions of robust causal inference are unavoidable in health or social science settings, where available data is observational, meaning we only observe one outcome per individual. One common approach to causal inference is to match each treatment unit to an identical control unit with all the same characteristics. Exact matching is not possible for high dimensional datasets. So, for the best possible alternative, we introduce the dame-flame matching library for discrete datasets, and show the matches are high quality and interpretable.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Deep Learning with Python for Natural Disaster Relief from Satellite Imagery</title><link href="https://pyvideo.org/scipy-2021/deep-learning-with-python-for-natural-disaster-relief-from-satellite-imagery.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Thomas Y. Chen</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/deep-learning-with-python-for-natural-disaster-relief-from-satellite-imagery.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Natural disasters and extreme weather events, from hurricanes to earthquakes to wildfires, devastate countless cities, towns, and villages every year. They ravage the infrastructure of affected regions, including homes, power lines, and water supplies, incur immense economic loss, and cause thousands of deaths. In turn, this causes perpetually negative …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Natural disasters and extreme weather events, from hurricanes to earthquakes to wildfires, devastate countless cities, towns, and villages every year. They ravage the infrastructure of affected regions, including homes, power lines, and water supplies, incur immense economic loss, and cause thousands of deaths. In turn, this causes perpetually negative health outcomes. These are challenges faced particularly by the developing world. In this presentation, I will outline my current work in developing interpretable convolutional neural networks using PyTorch to assess building damage from satellite imagery. Further, I will outline previous works in the field to contextualize this research as well as propose future areas of work.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Defeat obscure file formats with Parsita</title><link href="https://pyvideo.org/scipy-2021/defeat-obscure-file-formats-with-parsita.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>David Hagen</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/defeat-obscure-file-formats-with-parsita.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scientific programmers often encounter specialized file formats. Parsing these files so they can be used in Python can be daunting if a parser does not already exist because writing parsers is difficult, error-prone, and time-consuming. Parsita is a parser combinator library for Python that makes it easy to write …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scientific programmers often encounter specialized file formats. Parsing these files so they can be used in Python can be daunting if a parser does not already exist because writing parsers is difficult, error-prone, and time-consuming. Parsita is a parser combinator library for Python that makes it easy to write a parser for a file format or even design a new file format for a domain-specific language of interest.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Discovering directed transport of RNA in skeletal muscle by 3D microscopy image analysis and Markov chain simulation</title><link href="https://pyvideo.org/scipy-2021/discovering-directed-transport-of-rna-in-skeletal-muscle-by-3d-microscopy-image-analysis-and-markov-chain-simulation.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Lance T. Denes</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/discovering-directed-transport-of-rna-in-skeletal-muscle-by-3d-microscopy-image-analysis-and-markov-chain-simulation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Precise spatial distribution of RNA is crucial in highly differentiated cells; nevertheless, RNA localization in muscle remains poorly understood. Here, we visualize single RNA molecules in muscle fibers using fluorescence microscopy, and we implement robust image analysis with SciPy and scikit-image to study 3D spatial patterns of RNA. By …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Precise spatial distribution of RNA is crucial in highly differentiated cells; nevertheless, RNA localization in muscle remains poorly understood. Here, we visualize single RNA molecules in muscle fibers using fluorescence microscopy, and we implement robust image analysis with SciPy and scikit-image to study 3D spatial patterns of RNA. By applying segmentation, blob detection, and particle tracking, we show that RNAs associate with microtubules and Z-disks, and that RNAs require transport along microtubules to move within the cell. We measure RNA motion parameters in live cells, and we show by stochastic simulation that RNAs cannot distribute effectively in muscle by diffusion alone. This work demonstrates the power of quantitative image analysis and simulation in Python to uncover fundamental biological processes.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Event Flow workflow to examine interplay bw events &amp; flow of info historical newspapers</title><link href="https://pyvideo.org/scipy-2021/event-flow-workflow-to-examine-interplay-bw-events-flow-of-info-historical-newspapers.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Melvin Wevers</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/event-flow-workflow-to-examine-interplay-bw-events-flow-of-info-historical-newspapers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I will showcase a project that combines several methods to analyze the complex dynamic structure of front pages in historical newspapers with varying ideological backgrounds. This project applies natural language processing, information theory, and time series analysis to examine a coarse-grained representation of the news. The …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I will showcase a project that combines several methods to analyze the complex dynamic structure of front pages in historical newspapers with varying ideological backgrounds. This project applies natural language processing, information theory, and time series analysis to examine a coarse-grained representation of the news. The project draws from a wide range of Python packages, which are combined in an adaptable workflow. Rather than highlighting one particular method, I will reflect on the process of constructing a larger workflow and how this can be used for historical research.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Fuzzy environments for the perturbation evaluation and appl of num uncertainty via Mo</title><link href="https://pyvideo.org/scipy-2021/fuzzy-environments-for-the-perturbation-evaluation-and-appl-of-num-uncertainty-via-mo.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Gregory Kiar</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/fuzzy-environments-for-the-perturbation-evaluation-and-appl-of-num-uncertainty-via-mo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The numerical stability of algorithms provides a bound on precision and reliability, where unstable algorithms will be unable to provide precise results in the face of noise or error. Monte Carlo Arithmetic (MCA) is a stochastic arithmetic technique used in the evaluation of such errors and allows for empirical …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The numerical stability of algorithms provides a bound on precision and reliability, where unstable algorithms will be unable to provide precise results in the face of noise or error. Monte Carlo Arithmetic (MCA) is a stochastic arithmetic technique used in the evaluation of such errors and allows for empirical estimation of numerical stability. We instrumented the scientific Python stack with MCA to present an environment that allows for the perturbed execution and evaluation of arbitrary Python code. This &amp;amp;quot;Fuzzy&amp;amp;quot; environment provides a fully transparent experience for users who wish to evaluate the robustness of their tools and pipelines.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Hands On Introduction to Property Based Testing for Science</title><link href="https://pyvideo.org/scipy-2021/hands-on-introduction-to-property-based-testing-for-science.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Zac Hatfield-Dodds</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/hands-on-introduction-to-property-based-testing-for-science.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Code is now a critical part of almost all research, whether for communication or for data collection and analysis. Unfortunately, producing reliably error-free code is an open problem, and result-altering bugs are regularly found (and usually fixed) in everything from preprints to foundational open source packages. I believe there …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Code is now a critical part of almost all research, whether for communication or for data collection and analysis. Unfortunately, producing reliably error-free code is an open problem, and result-altering bugs are regularly found (and usually fixed) in everything from preprints to foundational open source packages. I believe there is a core, fixable problem: writing tests is tedious, difficult, and only covers edge cases we know to test for. The solution? Use tools that write tests for us! Crucially, this isn't a pipe-dream: it's a proven technique that the scipy ecosystem has already started to use, and just needs to scale up. Hypothesis - &lt;a class="reference external" href="https://hypothesis.readthedocs.io/"&gt;https://hypothesis.readthedocs.io/&lt;/a&gt; - is basically a superhuman experimentalist. You write a test function and describe what inputs it should pass for; and the Hypothesis engine searches for a falsifying example. This process often tries inputs that I wouldn't think of, such as Numpy arrays with a sizezero dimension or a &amp;amp;quot;signalling&amp;amp;quot; NaN represented by a non-standard bit-pattern; and as a result it regularly uncovers bugs that users &lt;em&gt;and authors&lt;/em&gt; didn't know were possible. The Tutorial is designed for researchers and software engineers who regularly write code that other scientists rely on. You might be 'the Python person' in your lab; a core developer of one of the core SciPy or PyData libraries, or an enthusiast looking for a valuable way to contribute to that ecosystem. Attendees are expected to be familiar with Numpy and Pandas, as well as with traditional unit testing (i.e. pytest or unittest), and ideally with writing traditional tests for numerical or data-centric code. You don't need to be an expert in any of these, but the Tutorial will have plenty of content to engage those who are! If this sounds too good to be true, Hypothesis has quickly found bugs in approximately everything it has even been pointed at, including Numpy, Astropy, Xarray, CPython, and of course Hypothesis itself. If you already have a large stack of bug reports, maybe ask that it only be used for new features!&lt;/p&gt;
</content><category term="SciPy 2021"></category><category term="tutorial"></category></entry><entry><title>Intelligent irrigation management using crop models, optimization and machine learning</title><link href="https://pyvideo.org/scipy-2021/intelligent-irrigation-management-using-crop-models-optimization-and-machine-learning.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Tom Kelly</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/intelligent-irrigation-management-using-crop-models-optimization-and-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Crop-growth models are powerful tools for supporting optimal planning and management of agricultural water use globally. Here, we present AquaCrop-OSPy, an open source, Python implementation of the crop-water productivity model AquaCrop. The model provides a user friendly, flexible and computationally efficient solution to support agricultural water management, which can …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Crop-growth models are powerful tools for supporting optimal planning and management of agricultural water use globally. Here, we present AquaCrop-OSPy, an open source, Python implementation of the crop-water productivity model AquaCrop. The model provides a user friendly, flexible and computationally efficient solution to support agricultural water management, which can be readily integrated with other Python modules or code bases and run instantly via a web browser using Google Colab. This Talk demonstrates a number of model applications such as optimizing rule based irrigation strategies, or learning irrigation management strategies from scratch using deep reinforcement learning.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Introduction to Numerical Computing With NumPy</title><link href="https://pyvideo.org/scipy-2021/introduction-to-numerical-computing-with-numpy.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Logan Thomas</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/introduction-to-numerical-computing-with-numpy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NumPy provides Python with a powerful array processing library and an elegant syntax that is well suited to expressing computational algorithms clearly and efficiently. We'll introduce basic array syntax and array indexing, review some of the available mathematical functions in NumPy, and discuss how to write your own routines …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NumPy provides Python with a powerful array processing library and an elegant syntax that is well suited to expressing computational algorithms clearly and efficiently. We'll introduce basic array syntax and array indexing, review some of the available mathematical functions in NumPy, and discuss how to write your own routines. Along the way, we'll learn just enough about matplotlib to display results from our examples.&lt;/p&gt;
</content><category term="SciPy 2021"></category><category term="tutorial"></category></entry><entry><title>itkwidgets Interactive Web based 3D and 2D Spatial Visualization for Python</title><link href="https://pyvideo.org/scipy-2021/itkwidgets-interactive-web-based-3d-and-2d-spatial-visualization-for-python.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Matt McCormick</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/itkwidgets-interactive-web-based-3d-and-2d-spatial-visualization-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The itkwidgets python package integrates with the Python and Jupyter ecosystem and supports visualization of large imaging, geometry and point set datasets in 3D and 2D. We provide an overview of image volume rendering, slicing, and data probing capabilities and techniques used with these WebGL-based, interactive 3D widgets. We …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The itkwidgets python package integrates with the Python and Jupyter ecosystem and supports visualization of large imaging, geometry and point set datasets in 3D and 2D. We provide an overview of image volume rendering, slicing, and data probing capabilities and techniques used with these WebGL-based, interactive 3D widgets. We reveal new developments including integration with other ipywidgets in JupyterLab, Voilà applications.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Light Up Your Data with Streamlit</title><link href="https://pyvideo.org/scipy-2021/light-up-your-data-with-streamlit.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Thomas J. Fan</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/light-up-your-data-with-streamlit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Streamlit is a Python library providing a quick way to turn your scripts into data applications or dashboards. Creating these dashboards can be done in Python without the need to write any HTML or Javascript. First, we will learn how to create static and interactive widgets with Streamlit and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Streamlit is a Python library providing a quick way to turn your scripts into data applications or dashboards. Creating these dashboards can be done in Python without the need to write any HTML or Javascript. First, we will learn how to create static and interactive widgets with Streamlit and work with Python's visualization libraries such as Matplotlib, Altair, and Plotly. Next, we will create a dashboard explaining a machine learning model's predictions using SHAP and Anchor explanations. By the end of this Talk, you will be ready to create your own data applications with Streamlit!&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Lightning Talks Day 2</title><link href="https://pyvideo.org/scipy-2021/lightning-talks-day-2.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>John Waidhofer</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/lightning-talks-day-2.html</id><content type="html"></content><category term="SciPy 2021"></category><category term="lightning talks"></category></entry><entry><title>Little Helicopter, Big Data: Python’s Contributions to The First Flight on Mars</title><link href="https://pyvideo.org/scipy-2021/little-helicopter-big-data-pythons-contributions-to-the-first-flight-on-mars.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Michael Starch</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/little-helicopter-big-data-pythons-contributions-to-the-first-flight-on-mars.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;On April 19th the small helicopter Ingenuity took off for the first powered flight on another world.  From early development through operations, the Python programming language had a big impact on the success of the mission through its use in code generation, validation, and big data management. We will …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;On April 19th the small helicopter Ingenuity took off for the first powered flight on another world.  From early development through operations, the Python programming language had a big impact on the success of the mission through its use in code generation, validation, and big data management. We will discuss this impact as well as Python’s continued application to missions following in Ingenuity’s footsteps. Michael graduated with a Bachelors in Computer Engineering from the University of Michigan College of Engineering in Ann Arbor, Michigan. In his free time, Michael mentors students at a local high school, helps organize local technical organizations, and loves to talk anything tech.&lt;/p&gt;
</content><category term="SciPy 2021"></category><category term="Keynote"></category></entry><entry><title>Modern Time Series Analysis with STUMPY</title><link href="https://pyvideo.org/scipy-2021/modern-time-series-analysis-with-stumpy.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Sean Law</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/modern-time-series-analysis-with-stumpy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Traditional time series analysis techniques have found success in a variety of data mining tasks. However, they often require years of experience to master and the recent development of straightforward, easy-to-use analysis tools has been lacking. We address these needs with STUMPY, a scientific Python library that implements a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Traditional time series analysis techniques have found success in a variety of data mining tasks. However, they often require years of experience to master and the recent development of straightforward, easy-to-use analysis tools has been lacking. We address these needs with STUMPY, a scientific Python library that implements a novel yet intuitive approach for discovering patterns, anomalies, and other insights from any time series data. This presentation will cover the necessary background needed to follow the live interactive demo, requires no prior experience, and promises a simple, powerful, and scalable time series analysis package that will complement your current toolset.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Monitoring Scientific Python Usage on a Supercomputer</title><link href="https://pyvideo.org/scipy-2021/monitoring-scientific-python-usage-on-a-supercomputer.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Rollin Thomas</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/monitoring-scientific-python-usage-on-a-supercomputer.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In 2020, 35% of users at the National Energy Research Scientific Computing Center (NERSC) used Python on the Cori supercomputer. How do we know? We developed a simple, minimally invasive monitoring framework that leverages standard Python features to capture Python imports and other job data. The data are analyzed …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In 2020, 35% of users at the National Energy Research Scientific Computing Center (NERSC) used Python on the Cori supercomputer. How do we know? We developed a simple, minimally invasive monitoring framework that leverages standard Python features to capture Python imports and other job data. The data are analyzed with GPU-enabled Python libraries (Dask + cuDF) in a Jupyter notebook, and results are summarized in a Voila dashboard. After detailing our methodology, we provide a high-level tour of some of the data we’ve gathered over the past year. We conclude by outlining future work and potential broader applications.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Multithreaded parallel Python through OpenMP support in Numba</title><link href="https://pyvideo.org/scipy-2021/multithreaded-parallel-python-through-openmp-support-in-numba.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Todd Anderson</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/multithreaded-parallel-python-through-openmp-support-in-numba.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A modern CPU delivers performance through parallelism. A program that exploits the performance available from a CPU must run in parallel on multiple cores. This is usually best done through multithreading. Threads belong to a process and share the memory associated with that process. The most popular approach for …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A modern CPU delivers performance through parallelism. A program that exploits the performance available from a CPU must run in parallel on multiple cores. This is usually best done through multithreading. Threads belong to a process and share the memory associated with that process. The most popular approach for writing multithreaded code is to use directives to tell the compiler how to convert code into multithreaded code. The most commonly used directive-based API for writing multithreaded code is OpenMP. Python is not designed for parallel programming with threads. The GlobalInterpreterLock (GIL) prevents multiple threads from simultaneously accessing Python objects. This effectively prevents data races and makes Python naturally thread safe. Consequently, the GIL prevents parallel programming with multiple threads and therefore keeps Python from accessing the full performance from a CPU. In this paper, we describe a solution to this problem. We implement OpenMP in Python so programmers can easily annotate their code and then let the Numba just-in-time (JIT) compiler generate multithreaded, OpenMP code in LLVM, thereby bypassing the GIL. We describe this new multithreading system for Python and and show that the performance in our early tests is on par with the analogous C code. The purpose of this talk is to highlight the trends that emerged across the following functional domains: data, visualization, scale, and collaboration.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Natural Language Processing with Pandas DataFrames</title><link href="https://pyvideo.org/scipy-2021/natural-language-processing-with-pandas-dataframes.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Fred Reiss</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/natural-language-processing-with-pandas-dataframes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most areas of Python data science have standardized using Pandas DataFrames for representing and manipulating structured data in memory. Natural Language Processing, not so much. In this presentation, we'll explain why you should be using Pandas for NLP. We'll start by explaining the extension system that the Pandas developers …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most areas of Python data science have standardized using Pandas DataFrames for representing and manipulating structured data in memory. Natural Language Processing, not so much. In this presentation, we'll explain why you should be using Pandas for NLP. We'll start by explaining the extension system that the Pandas developers recently added to Pandas. Then we'll Talk about our open source library, Text Extensions for Pandas (&lt;a class="reference external" href="https://ibm.biz/text-extensions-for-pandas"&gt;https://ibm.biz/text-extensions-for-pandas&lt;/a&gt;), which adds special data types and library integrations specifically geared to NLP use cases. We'll explain how these extensions connect to some basic NLP concepts, and then we'll finish with an example of using Pandas to build an NLP application.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Needles in the haystack Interactive dashboards - single point selection in billion row</title><link href="https://pyvideo.org/scipy-2021/needles-in-the-haystack-interactive-dashboards-single-point-selection-in-billion-row.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Jean-Luc Stevens</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/needles-in-the-haystack-interactive-dashboards-single-point-selection-in-billion-row.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python tools allow you to create custom web-based visualization dashboards, but previously supported _either_ deep interactivity _or_ efficient rendering of large datasets, and not both. Here we show how to use hvPlot (building on HoloViews, Datashader, and Bokeh) to view millions or billions of datapoints while allowing precise selection …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python tools allow you to create custom web-based visualization dashboards, but previously supported _either_ deep interactivity _or_ efficient rendering of large datasets, and not both. Here we show how to use hvPlot (building on HoloViews, Datashader, and Bokeh) to view millions or billions of datapoints while allowing precise selection and exploration of the details of individual datapoints, all within a single Panel dashboard. Just dump your data in and truly understand it, for the first time, without having to program with events, callbacks, or other advanced mechanisms, and with very little programming required at all.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Network Analysis Made Simple</title><link href="https://pyvideo.org/scipy-2021/network-analysis-made-simple.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Mridul Seth</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/network-analysis-made-simple.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Through the use of NetworkX's API, tutorial participants will learn about the basics of graph theory and its use in applied network science. Starting with a computationally-oriented definition of a graph and its associated methods, we will build out into progressively more advanced concepts (path and structure finding, and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Through the use of NetworkX's API, tutorial participants will learn about the basics of graph theory and its use in applied network science. Starting with a computationally-oriented definition of a graph and its associated methods, we will build out into progressively more advanced concepts (path and structure finding, and graph theory's relation to linear algebra), as well as an overview of scalable alternatives to NetworkX.&lt;/p&gt;
</content><category term="SciPy 2021"></category><category term="tutorial"></category></entry><entry><title>Ocetrac morphological image processing for monitoring ocean temperature extremes</title><link href="https://pyvideo.org/scipy-2021/ocetrac-morphological-image-processing-for-monitoring-ocean-temperature-extremes.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Hillary Scannell</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/ocetrac-morphological-image-processing-for-monitoring-ocean-temperature-extremes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dangerous hot-water events, called marine heatwaves, cause prolonged periods of thermal stress in the marine environment that can lead to widespread coral bleaching, harmful algal blooms, unproductive fisheries, and even economic loss. Anticipating the paths of destructive marine heatwaves remains a challenge owing to the complex spatiotemporal evolution of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dangerous hot-water events, called marine heatwaves, cause prolonged periods of thermal stress in the marine environment that can lead to widespread coral bleaching, harmful algal blooms, unproductive fisheries, and even economic loss. Anticipating the paths of destructive marine heatwaves remains a challenge owing to the complex spatiotemporal evolution of these events. We present a novel open source package called Ocetrac that implements morphological image processing and tracking to aid in the analysis of marine heatwave detection and movement. We discuss how this approach can be applied to monitor other extreme ocean conditions, such as deoxygenation and acidification.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Performance Analysis with Timemory</title><link href="https://pyvideo.org/scipy-2021/performance-analysis-with-timemory.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Jonathan Madsen</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/performance-analysis-with-timemory.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Timemory is a cross-language, multi-paradigm performance analysis package which combines the capabilities of many different Python profiling packages and exposes a toolkit API for the underlying performance measurements. Regardless of whether you desire a complete tool or a backend for your own performance measurements, timemory can meet your performance …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Timemory is a cross-language, multi-paradigm performance analysis package which combines the capabilities of many different Python profiling packages and exposes a toolkit API for the underlying performance measurements. Regardless of whether you desire a complete tool or a backend for your own performance measurements, timemory can meet your performance analysis needs.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Plotting is easy, Graphics Acceleration is hard Let’s do Videos instead!</title><link href="https://pyvideo.org/scipy-2021/plotting-is-easy-graphics-acceleration-is-hard-lets-do-videos-instead.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Sebastian M. Ernst</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/plotting-is-easy-graphics-acceleration-is-hard-lets-do-videos-instead.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sometimes, a middle ground between static plots and hardware accelerated visualizations is required: Videos. This is true in particular when visualizing large quantities of data with limited development time and resources. While the Python ecosystem offers many rather advanced plotting and visualization tools, it lacks a solid and flexible …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sometimes, a middle ground between static plots and hardware accelerated visualizations is required: Videos. This is true in particular when visualizing large quantities of data with limited development time and resources. While the Python ecosystem offers many rather advanced plotting and visualization tools, it lacks a solid and flexible solution for generating videos for advanced scientific visualizations. This Talk gives an overview of the state-of-the art in video generation with Python. It subsequently introduces a new Python package: &lt;cite&gt;bewegung&lt;/cite&gt; - a versatile video renderer.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Portable performance on multi threaded Sparse BLAS operations with PyRSB</title><link href="https://pyvideo.org/scipy-2021/portable-performance-on-multi-threaded-sparse-blas-operations-with-pyrsb.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Michele Martone</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/portable-performance-on-multi-threaded-sparse-blas-operations-with-pyrsb.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The PyRSB package offers portable threaded performance on Sparse BLAS operations. These include multiplication of sparse matrices by vectors or multi-vectors. Their speed is essential in the iterative solutions of sparse linear systems. PyRSB is a Python interface to the LGPLv3-licensed LIBRSB library. LIBRSB uses the Recursive Sparse Blocks …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The PyRSB package offers portable threaded performance on Sparse BLAS operations. These include multiplication of sparse matrices by vectors or multi-vectors. Their speed is essential in the iterative solutions of sparse linear systems. PyRSB is a Python interface to the LGPLv3-licensed LIBRSB library. LIBRSB uses the Recursive Sparse Blocks (RSB) format, a storage scheme supporting cache efficient multithreaded Sparse BLAS operations. RSB is characterized by a recursive subdivision of matrices and uses a mix of sparse subformats. A user needs not to know that: PyRSB is largely compatible with SciPy's sparse matrix classes, but runs faster than reference scipy.sparse.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Practical approaches for efficient hyperparameter optimization with Oríon</title><link href="https://pyvideo.org/scipy-2021/practical-approaches-for-efficient-hyperparameter-optimization-with-orion.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Xavier Bouthillier</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/practical-approaches-for-efficient-hyperparameter-optimization-with-orion.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hyperparameters of machine learning algorithms are instrumental for the generation of high-performing models. The tedious task of hyperparamater optimization is nonetheless often reduced to manual optimization or simple methods, a situation often leading to results that are highly sensitive to hyperparameters. In this Talk, we will walk machine learning …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hyperparameters of machine learning algorithms are instrumental for the generation of high-performing models. The tedious task of hyperparamater optimization is nonetheless often reduced to manual optimization or simple methods, a situation often leading to results that are highly sensitive to hyperparameters. In this Talk, we will walk machine learning practitioners through guidelines for efficient hyperparameter optimization based on the framework Oríon. We will present practical approaches for the design of the search space, provide guidelines to select hyperparameter optimization algorithms, and demonstrate how to leverage the pioneering Experiment Version Control provided by Oríon for more efficiency.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Predicting the economic impact of COVID 19 using real time images from space</title><link href="https://pyvideo.org/scipy-2021/predicting-the-economic-impact-of-covid-19-using-real-time-images-from-space.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Nataraj Dasgupta</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/predicting-the-economic-impact-of-covid-19-using-real-time-images-from-space.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this Talk, we will discuss the process of analysing terabytes of GeoTIFF images of surface lights on Earth from space at scale using Multiprocessing, geospatial, image-processing and raster libraries on high-performance AWS instances. Second, we will discuss how the data can then be used with Machine Learning libraries …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this Talk, we will discuss the process of analysing terabytes of GeoTIFF images of surface lights on Earth from space at scale using Multiprocessing, geospatial, image-processing and raster libraries on high-performance AWS instances. Second, we will discuss how the data can then be used with Machine Learning libraries to predict GDP and other economic metrics, especially during supply-demand shocks like COVID-19. In a recent analysis, using this approach, we accurately predicted the GDP impact in India during COVID-19 with a 99.5% accuracy, much ahead of official announcements, compared to 67% accuracy of estimates from leading investment banks. Overall, the Talk covers 4 disciplines: 1) computer science - TB-scale parallel processing using Python/Linux, 2) stats/ml - geospatial statistics &amp;amp; econometrics, 3) engineering - high-performance cloud computing and 4) finance - economics of supply-demand shocks.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Python Framework to ease access to Climate and Weather Data in Machine Learning</title><link href="https://pyvideo.org/scipy-2021/python-framework-to-ease-access-to-climate-and-weather-data-in-machine-learning.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Baudouin Raoult</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/python-framework-to-ease-access-to-climate-and-weather-data-in-machine-learning.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;New high-level Python package to ease access to weather and climate data provided by ECMWF. Main focus is fit smoothly with the existing SciPy eco system. Looking for collaborations on describing popular data sets for ML applications.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Scaling Science leveraging Dask for life sciences</title><link href="https://pyvideo.org/scipy-2021/scaling-science-leveraging-dask-for-life-sciences.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Genevieve Buckley</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/scaling-science-leveraging-dask-for-life-sciences.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Managing the challenges associated with big data in life sciences can be difficult. Scalable scientific computing is required to cope with the increasing demands of modern biology and neuroscience. Dask is a python library for distributed computation. In this talk, we'll look at several case studies where Dask is …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Managing the challenges associated with big data in life sciences can be difficult. Scalable scientific computing is required to cope with the increasing demands of modern biology and neuroscience. Dask is a python library for distributed computation. In this talk, we'll look at several case studies where Dask is used to scale up data processing for life sciences. It will include examples from statistical genetics, single cell analysis, and imaging visualization &amp;amp; analysis. This will give you a better understanding of how you can extend code with Dask to scale your analysis.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Scaling up Python for Geo with Distributed Computing</title><link href="https://pyvideo.org/scipy-2021/scaling-up-python-for-geo-with-distributed-computing.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Brendan Collins</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/scaling-up-python-for-geo-with-distributed-computing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For large scale Geo projects, such as Natural Resource Management and Conservation efforts, a connection between the GIS and PyData communities goes a long way. With tools like xarray-spatial, coupled with Dask and Numba, GIS professionals can exponentially increase the computing power and scalability of their work for faster …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For large scale Geo projects, such as Natural Resource Management and Conservation efforts, a connection between the GIS and PyData communities goes a long way. With tools like xarray-spatial, coupled with Dask and Numba, GIS professionals can exponentially increase the computing power and scalability of their work for faster results. After this Talk, you will understand how to Generally use Python libraries for Geo applications, without being a software developer: by extracting over the stuff you don't need to know and interfacing with familiar APIs.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>SciPy and open source tools in science: successes and the challenges ahead</title><link href="https://pyvideo.org/scipy-2021/scipy-and-open-source-tools-in-science-successes-and-the-challenges-ahead.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Fernando Perez</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/scipy-and-open-source-tools-in-science-successes-and-the-challenges-ahead.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The SciPy community has had an enormous impact on the world of science, thanks to an amazingly generous and open group of folks who, for two decades, have shared openly the fruit of their labor. This is probably a good time to reflect not only on these successes, but …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The SciPy community has had an enormous impact on the world of science, thanks to an amazingly generous and open group of folks who, for two decades, have shared openly the fruit of their labor. This is probably a good time to reflect not only on these successes, but also on what the new strategic challenges are ahead of us. We don't need to argue about &amp;amp;quot;why open source&amp;amp;quot; at conferences and grant proposals anymore. But do we have the right funding models, career paths, models for interaction with industry, educational integration, etc? Is our community on the right track to grow and diversify in a sustainable way? I'll try to reflect on some of these issues and propose some starting points for both conversation and action. Pérez is a co-founder of the 2i2c.org initiative, the Berkeley Institute for Data Science and the NumFOCUS Foundation. He is a National Academy of Science Kavli Frontiers of Science Fellow and a member of the Python Software Foundation. He is a recipient of the 2017 ACM Software System Award and the 2012 FSF Award for the Advancement of Free Software. He holds a PhD in physics from the University of Colorado, Boulder, and did postdoctoral research in applied mathematics at the same institution.&lt;/p&gt;
</content><category term="SciPy 2021"></category><category term="Keynote"></category></entry><entry><title>SciPy Tools Plenary Day 1</title><link href="https://pyvideo.org/scipy-2021/scipy-tools-plenary-day-1.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>K. Jarrod Millman</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/scipy-tools-plenary-day-1.html</id><content type="html"></content><category term="SciPy 2021"></category></entry><entry><title>SciPy Tools Plenary Day 2</title><link href="https://pyvideo.org/scipy-2021/scipy-tools-plenary-day-2.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Gregory Lee</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/scipy-tools-plenary-day-2.html</id><content type="html"></content><category term="SciPy 2021"></category></entry><entry><title>signac: Data Management and Workflows for Computational Researchers</title><link href="https://pyvideo.org/scipy-2021/signac-data-management-and-workflows-for-computational-researchers.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Bradley Dice</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/signac-data-management-and-workflows-for-computational-researchers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The signac data management framework (&lt;a class="reference external" href="https://signac.io"&gt;https://signac.io&lt;/a&gt;) helps researchers execute reproducible computational studies, scaling from laptops to supercomputers and emphasizing portability and fast prototyping. With signac, users can track, search, and archive data and metadata for file-based workflows and automate workflow submission on high performance computing (HPC) clusters …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The signac data management framework (&lt;a class="reference external" href="https://signac.io"&gt;https://signac.io&lt;/a&gt;) helps researchers execute reproducible computational studies, scaling from laptops to supercomputers and emphasizing portability and fast prototyping. With signac, users can track, search, and archive data and metadata for file-based workflows and automate workflow submission on high performance computing (HPC) clusters. We will discuss recent growth in the software's feature set, scalability, scientific applications, usability, and community. Newly implemented synced data structures, workflow subgraph execution, and performance optimizations will be covered, as well as recent research using the framework and the project's efforts on improving documentation, contributor onboarding, and governance.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>The need for serverless Python</title><link href="https://pyvideo.org/scipy-2021/the-need-for-serverless-python.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Stephanie Wang</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/the-need-for-serverless-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Running an application in the cloud today means both writing the program and figuring out how to deploy it. Deployment requires provisioning virtual machines while considering both cost and the application’s needs. Unfortunately, it’s very difficult to know ahead of time how many resources an application might …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Running an application in the cloud today means both writing the program and figuring out how to deploy it. Deployment requires provisioning virtual machines while considering both cost and the application’s needs. Unfortunately, it’s very difficult to know ahead of time how many resources an application might need and how that will change over time. The promise of serverless execution is to lower the barrier of deployment, so that users can focus on programming logic and deploy applications without having to think about machines (or have their own DevOps team). Meanwhile, the serverless platform promises to optimize both performance and cost through autoscaling. However, the reality today is that it is still very difficult to bring serverless execution to many classes of applications, like data processing or model inference. These applications do not fit into the current General-purpose severless offerings, namely functions-as-a-service. In this Talk, I will discuss the key limitations faced by these applications, and our vision for the Ray project as a truly General-purpose serverless platform.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Using Python to Measure Seismic Silences and Bring Geoscience Projects to Students during COVID19 Lockdown</title><link href="https://pyvideo.org/scipy-2021/using-python-to-measure-seismic-silences-and-bring-geoscience-projects-to-students-during-covid19-lockdown.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Artash Nath</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/using-python-to-measure-seismic-silences-and-bring-geoscience-projects-to-students-during-covid19-lockdown.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lockdown' was a key tool used by governments around the world to stem the movement of people to check the spread of COVID19. I visualized the impact of lockdown on human movements by writing Python algorithms to measure the reduction in seismic vibrations using data from seismic stations across …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lockdown' was a key tool used by governments around the world to stem the movement of people to check the spread of COVID19. I visualized the impact of lockdown on human movements by writing Python algorithms to measure the reduction in seismic vibrations using data from seismic stations across Canada. I created a web application so that anyone can visualize the seismic silences and is available at www.MonitorMyLockdown.com&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Visualizing Intersectionality using Python</title><link href="https://pyvideo.org/scipy-2021/visualizing-intersectionality-using-python.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Laura K. Nelson</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/visualizing-intersectionality-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Machine learning has opened an opportunity to study complex social process using qualitative data in new and rich ways. Using these methods to better understand society does come from reducing complex, qualitative data to numbers, however, but in visualizing data in ways that preserve the complexity and embeddedness of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Machine learning has opened an opportunity to study complex social process using qualitative data in new and rich ways. Using these methods to better understand society does come from reducing complex, qualitative data to numbers, however, but in visualizing data in ways that preserve the complexity and embeddedness of social processes while also illuminating their empirical dynamics. I use Python to implement a word embedding model of first-person narratives of the nineteenth-century U.S. South, using the output from this model to visualize one social process, intersectionality, in a way that is reproducible and stays true to the epistemology of intersectional research. Python, machine learning, and visualizations, I argue, can help explain complex social processes without reducing them to uninterpretable numbers on a page.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>What is Feminist Data Science</title><link href="https://pyvideo.org/scipy-2021/what-is-feminist-data-science.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Lauren F. Klein</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/what-is-feminist-data-science.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is feminist data science? How is feminist thinking being incorporated into data-driven work? And how are humanities scholars, in particular, bringing together data science and feminist theory in their research? Drawing from my recent book, Data Feminism (MIT Press), co-authored with Catherine D’Ignazio, I will present a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is feminist data science? How is feminist thinking being incorporated into data-driven work? And how are humanities scholars, in particular, bringing together data science and feminist theory in their research? Drawing from my recent book, Data Feminism (MIT Press), co-authored with Catherine D’Ignazio, I will present a set of principles for doing data science that are informed by the past several decades of intersectional feminist activism and critical thought. In order to illustrate these principles, as well as some of the ways that humanities scholars have begun to put them into action, I will discuss a range of recent research projects including several of my own: 1) a thematic analysis of a large corpus of nineteenth-century newspapers that reveals the invisible labor of women newspaper editors; 2) the development of a model of lexical semantic change that, when combined with network analysis, tells a new story about Black activism in the nineteenth-century United States; and 3) the design and fabrication of a large-scale haptic data visualization, inspired by a forgotten historical visualization scheme, that suggests new possibilities for visualization design. Taken together, these examples demonstrate how feminist thinking can be operationalized into more ethical, more intentional, and more capacious data practices, in the humanities and beyond.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry></feed>