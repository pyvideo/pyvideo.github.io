<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-ireland-2016.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-11-06T00:00:00+00:00</updated><entry><title>Building a social network content recommendation service using Factorisation machines</title><link href="https://pyvideo.org/pycon-ireland-2016/building-a-social-network-content-recommendation-service-using-factorisation-machines.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Conor Duke</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/building-a-social-network-content-recommendation-service-using-factorisation-machines.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Rasa.io are a community management platform. They wanted to build a
service which would generate a personalised content feed based on both
user commentary and external news feeds. We have use python and a
factorisation machines framework to create a service which there
platform could call to generate a personalised feed&lt;/p&gt;
</summary></entry><entry><title>Cut your losses! How to use web scraping to analyse Ireland's used car market</title><link href="https://pyvideo.org/pycon-ireland-2016/cut-your-losses-how-to-use-web-scraping-to-analyse-irelands-used-car-market.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Ruairi Fahy</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/cut-your-losses-how-to-use-web-scraping-to-analyse-irelands-used-car-market.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Depreciation of value when you buy a car is inevitable, but can you
limit your losses? Is it true that Toyotas and Volkswagens hold their
value? What does high mileage do to a car’s value?&lt;/p&gt;
&lt;p&gt;Let’s leave aesthetics and preferences aside and use real data to see
what really determines the price of a car on the second hand market.&lt;/p&gt;
&lt;p&gt;This session will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How to make spiders using Portia and scrapy to extract data from Irish
car websites&lt;/li&gt;
&lt;li&gt;The use of simhash to find duplicates in different datasets.&lt;/li&gt;
&lt;li&gt;How to use pandas to analyse and plot scraped data.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Deep learning with Keras</title><link href="https://pyvideo.org/pycon-ireland-2016/deep-learning-with-keras.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Shubhabrata Roy</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/deep-learning-with-keras.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It has always been our dream to create machines that can think. In the
early phase of artificial intelligence, we solved the problems that
could have been described by a list of formal and mathematical rules.
The main motivation was solving the tasks that are trivial for people to
perform but difficult to describe formally, for example recognizing
objects in images or spoken words. Neural networks have been one
predominant area of research in artificial intelligence that stayed in
limelight over the past five decades or so. However, one major boost in
this domain happened around 2010 when the computers got much faster and
data sets got much bigger. The existing algorithms with some critical
tweaks and improvements became much more efficient and won several
challenges in computer vision, speech recognition, and natural language
processing. In this talk, I would briefly describe how neural networks
works and then move towards state-of-the-art approaches of deep
learning. I would describe in detail how to build deep learning models
and its training procedures using the deep learning library &amp;quot;Keras&amp;quot; that
removes all of the complexity, leaving you an API containing only what
you need to know to efficiently develop and evaluate neural network
models. This talk aims to present two use cases (facial recognition and
sequence prediction) that uses Keras for model building and evaluation.&lt;/p&gt;
</summary></entry><entry><title>Detection of Duplicate Records in Large-scale Multi-tenant Platforms</title><link href="https://pyvideo.org/pycon-ireland-2016/detection-of-duplicate-records-in-large-scale-multi-tenant-platforms.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Paul O'Grady</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/detection-of-duplicate-records-in-large-scale-multi-tenant-platforms.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Zalando's quest to create an open multi-tenant fashion platform has its
challenges. One of these is the detection of duplicate product records
within the platform, where different tenants input the same product
using different product descriptions. Commonly referred to as
the_Record Linkage_problem in Machine Learning, the task is to group
together similar product records under a single canonical identifier,
which is useful for business intelligence purposes and for product
search etc. The kernel of the solution is the computation of an
~O(n**2) all-pairs similarity join, where the runtime explodes
quadratically with an increase in input. At Zalando's Fashion Insight
Centre in Dublin we are looking at solutions to this problem that work
at scale (i.e., more than one million products). For our particular
problem, which involves Categorical Data (cosine similarity will not
work here), we employ a data-driven similarity measure and approximate
the similarity join using a two-step approach. In this talk we introduce
the standard approaches to the problem and illustrate our work-to-date
using Python.&lt;/p&gt;
</summary></entry><entry><title>Gradient boosting: What is it and How can I use in my machine learning ?</title><link href="https://pyvideo.org/pycon-ireland-2016/gradient-boosting-what-is-it-and-how-can-i-use-in-my-machine-learning.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Eoin Brazil</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/gradient-boosting-what-is-it-and-how-can-i-use-in-my-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gradient boosting is a very popular technique in Machine Learning and
particularly so for competitions like those hosted by Kaggle. This talk
will provide an introduction to the technique, a short historical recap
and then focus on the existing libraries in Python that allow you to use
this general family. It'll work through the advantages and disadvantage
of specific libraries using worked examples. The code and slides will be
in Github. The end learning of attendees will be sufficient knowledge to
understand when to use this technique and what is the most appropriate
Python library for their needs.&lt;/p&gt;
</summary></entry><entry><title>How Data Science fits in the Balanced Team</title><link href="https://pyvideo.org/pycon-ireland-2016/how-data-science-fits-in-the-balanced-team.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Ian Huston</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/how-data-science-fits-in-the-balanced-team.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The goal of a Balanced Team is to share ownership and responsibility
for the success of a project between team members. Each team member
has specific obligations to the team and a specific area of authority.
Until recently, designers, product managers and developers were the
usual team members considered. In this talk I will explore how data
scientists can function in a balanced team and discuss my experience
working as a data scientist on balanced teams at Pivotal Labs with our
global clients. I will consider what obligations and authority a data
scientist can provide as part of a balanced team and how this
situation differs from the usual jack-of-all-trades type data science
work. I will outline specific examples where data science can help
user centric design and product management, and where the practices of
lean-startup and agile development can help accelerate analysis and
data science. Based on my experience building data science driven
products with a global bank and European car manufacturers, I will
outline what we tried, what worked and most importantly what didn’t.&lt;/p&gt;
&lt;p&gt;If you are a data scientist or need to work with one, this talk will
equip you to understand how data science can be an integral part of a
balanced team.&lt;/p&gt;
</summary></entry><entry><title>How to Merge Noisy Datasets</title><link href="https://pyvideo.org/pycon-ireland-2016/how-to-merge-noisy-datasets.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Johannes Ahlmann</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/how-to-merge-noisy-datasets.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Acquiring large datasets is quite simple these days on the internet,
but data is often noisy and most of the value often lies in combining,
connecting and merging multiple datasets from different sources.&lt;/p&gt;
&lt;p&gt;This talk gives an overview of Probabilistic Record Matching, i.e. the
challenges posed when dealing with noisy data, how to normalize data
and how to match noisy records to each other.&lt;/p&gt;
&lt;p&gt;The goal of the presentation is to give participants an understanding
of the possibilities and challenges of merging datasets, as well as
mention some of the amazing python libraries available.&lt;/p&gt;
&lt;p&gt;Topics discussed: normalization of attributes, approximate string
matching, performance, similarity clustering&lt;/p&gt;
</summary></entry><entry><title>Introduction to Image classification in Python: from API calls to Neural Networks</title><link href="https://pyvideo.org/pycon-ireland-2016/introduction-to-image-classification-in-python-from-api-calls-to-neural-networks.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Jose Dominguez</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/introduction-to-image-classification-in-python-from-api-calls-to-neural-networks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In a world full of user generated media content, automated image and
video processing plays a prominent role, both in social media apps
(face, object, and place detection), and in local applications that
automatically sort media collections, among other uses. In the last
few years, a number of startups such as Clarifai and Indico, and much
bigger players such as Google and Microsoft, have launched their own
'machine learning as a service' offerings, including 'vision' products
that can recognise objects present in image and video footage and
automatically tag them, provide optical character recognition (OCR)
services, and even not safe for work (NSFW) classifiers that can be
used to omit content from internal networks.&lt;/p&gt;
&lt;p&gt;This talk will focus on 'food' recognition within images, and will
walk through the basics of how to get started with image
classification, from using APIs and SDKs for some of the commercial
(but free) offerings available, to trying and recreate those services
locally, first by walking through and example of the 'bag of features'
technique, using a mix of supervised and unsupervised methods in
scikit-learn and OpenCV, and secondly showing examples based on
'transfer learning', a 'deep learning' technique to reuse pre-trained
convolutional neural networks to customise classification from smaller
training datasets.&lt;/p&gt;
</summary></entry><entry><title>Kajiki, the fast and validated Template Engine your were looking for</title><link href="https://pyvideo.org/pycon-ireland-2016/kajiki-the-fast-and-validated-template-engine-your-were-looking-for.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/kajiki-the-fast-and-validated-template-engine-your-were-looking-for.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Being dissatisfied with some of the constraints and complex usage of
Genshi, the TurboGears2 team started working on an alternative that
could solve Genshi speed issues, complex inheritance system and be
backward compatible with genshi templates. This is what lead to the
creation of the Kajiki template engine.&lt;/p&gt;
&lt;p&gt;The talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Comparison on the major template engines available in python to
showcase what's special in Kajiki (validated, xml based) what was
special in Genshi (also lazy evaluated)&lt;/li&gt;
&lt;li&gt;What's a validated template engine and why it's good to have one.&lt;/li&gt;
&lt;li&gt;How Kajiki works, showcase kajiki syntax, it's performances and how
to use it in any python project.&lt;/li&gt;
&lt;li&gt;Why Kajiki is fast, code generation applied and how to write a code
generation template engine like Kajiki and Jinja2 (showcase a simple
50 lines of code template engine that uses code generation).&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Lessons Learned Open Sourcing Codespeed</title><link href="https://pyvideo.org/pycon-ireland-2016/lessons-learned-open-sourcing-codespeed.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Miquel Torres</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/lessons-learned-open-sourcing-codespeed.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Open Sourcing a Python project can teach you lessons in so diverse
fields as Software Engineering, Project Management, Marketing,
Community Management and more. Looking back at the past 7 years,
Codespeed, my first Open Source project, has been a niche but very
successful project by many metrics. It is or has been in use by
well-known projects and organizations like the PSF, PyPy, Twisted,
RubySpec, Julia (lang), companies like AMD, Dropbox and many others,
and to this date there is no clear alternative. And yet its codebase
has become a mess and active development grounded to a halt for a
spell of two or three years.&lt;/p&gt;
&lt;p&gt;What lessons can we learn from that story? This talk will highlight
some aspects that went horribly wrong, as well as explain some
concepts in the original design that proved key for the project's
success.&lt;/p&gt;
</summary></entry><entry><title>Making good testing decisions</title><link href="https://pyvideo.org/pycon-ireland-2016/making-good-testing-decisions.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Ingrid Epure</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/making-good-testing-decisions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing is important and we all know we should test. When starting a new
project or trying to improve the coverage of an existing one, there is
still a lot of debate around what frameworks should be used, what are
the best practices when mocking, when should we mock vs using in memory
and more importantly, the reasons behind each decision. This talk aims
to provide some insights on making good testing decisions.&lt;/p&gt;
</summary></entry><entry><title>Natural Language Processing using Python tools</title><link href="https://pyvideo.org/pycon-ireland-2016/natural-language-processing-using-python-tools.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Piyush Arora</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/natural-language-processing-using-python-tools.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I would like to focus more on how language processing is
made easier using python tool kits. How can we set up pipeline
starting from scratch to the specific solution using Python tools. I
have been using python from last 5-6 years and my main area of
research is language processing and information retrieval. I have used
python tools previously on various projects and problems related to
Sentiment analysis, Text processing, Summarization , Classification
etc. For details you can check out my profile &lt;a class="reference external" href="http://computing.dcu.ie/~parora/"&gt;http://computing.dcu.ie/~parora/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I would like to talk about main 2 aspects:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Based Raw Text processing: using NLTK toolkit and other plugins&lt;/li&gt;
&lt;li&gt;Deep learning: using Gensim toolkit&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Depending on the time availability I would like to have some hands-on
experience or have some live coding to make the talk interactive.&lt;/p&gt;
&lt;p&gt;During my PhD and collaborative projects with researchers and
industries I have discovered sometime starting from scratch seems
quite complicated and can take lots of time and resources, but how can
we speed up that process and focus on the main innovative solution is
the main key resources, which I would like to address and discuss.&lt;/p&gt;
</summary></entry><entry><title>Part of Speech Tagging: Who's winning</title><link href="https://pyvideo.org/pycon-ireland-2016/part-of-speech-tagging-whos-winning.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Brian Carter</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/part-of-speech-tagging-whos-winning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Up until quite recently the main go to part-of-speech tagger (POS) for
use in Python was the NLTK Tagger using the default Penn Treebank
tagger. Another popular option was from the Stanford Log-Linear
Part-Of-Speech Tagger from Stanford CoreNLP.&lt;/p&gt;
&lt;p&gt;In May 2016 Google open sourced SyntaxNet with the humorously named
English parser Parsey McParseFace. Another commercial
company &lt;a class="reference external" href="http://spacy.io/"&gt;Spacy.io&lt;/a&gt; also provides an open source
parser.&lt;/p&gt;
&lt;p&gt;The development of Part-Of-Speech tagging continues in academia, but
most are not at the stage where they can be easily used outside of
research. How do these taggers differ? This talk will give an overview
of part-of-speech tagging from a practical implementation/use-case
point of view.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What is part-of-speech tagging&lt;/li&gt;
&lt;li&gt;Real life performance on datasets&lt;/li&gt;
&lt;li&gt;How you might use POS in a project&lt;/li&gt;
&lt;li&gt;Compare and contrast the above mentioned taggers for performance.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Plug in with Python</title><link href="https://pyvideo.org/pycon-ireland-2016/plug-in-with-python.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Markus Törnqvist</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/plug-in-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;First I'll talk about what plugins are in general. From there it's on to
show an overview of the philosophy of plugins and different ways they're
used in different types of applications, what kinds of peculiarities
there are. I will top it off with some live coding!&lt;/p&gt;
</summary></entry><entry><title>Rethinking package management</title><link href="https://pyvideo.org/pycon-ireland-2016/rethinking-package-management.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Rok Garbas</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/rethinking-package-management.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Packaging is a hard problem. Still every language/distribution tries
to invent packaging on their own. This leaves us (developers /
sysadmins) with a big number of tools that we need to master in order
to do our job. We will look at how Nix[1] and NixOS[2] can be used in
today's software development processes and which are the benefits and
drawbacks you might face. In this talk we will look into how Nix can
be used to solve some problems we face when developing with python and
how it might just be the right tool for your next project.&lt;/p&gt;
&lt;p&gt;[1] Nix is a powerful package manager for Linux and other Unix systems
that makes package management reliable and reproducible. It provides
atomic upgrades and rollbacks, side-by-side installation of multiple
versions of a package, multi-user package management and easy setup of
build environments.&lt;/p&gt;
&lt;p&gt;[2] NixOS is a Linux distribution built on top of the Nix package
manager, it is completely declarative, makes upgrading systems
reliable, and has many other advantages.&lt;/p&gt;
</summary></entry><entry><title>Social Network Analysis at Scale</title><link href="https://pyvideo.org/pycon-ireland-2016/social-network-analysis-at-scale.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Eoin Hurrell</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/social-network-analysis-at-scale.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will focus on the scientific analysis of social networks, how
to derive useful insights from social graphs using Python, and discuss
some lessons learned from taking this analysis out of the lab and into
to a useful product in a production setting. I will cover acquiring
data, predicting influence or activity, recommending possible friends
from the graph and detecting communities within large networks.
Experience with tools used to do this, including sklearn, networkx,
Spark and Kafka will be covered.&lt;/p&gt;
</summary></entry><entry><title>The Bluffer's Guide to Data Science</title><link href="https://pyvideo.org/pycon-ireland-2016/the-bluffers-guide-to-data-science.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Paul Barry</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/the-bluffers-guide-to-data-science.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A light-hearted look at the world of Data Science for Python programmers
who are eyeing-up the Data Science problem domain and thinking: &amp;quot;It
can't be all that hard, can it?&amp;quot;. In his talk, Paul presents his
thinking on what Python programmers need to know in order to
convincingly pass themselves off as a &amp;quot;real&amp;quot; Data Scientist.&lt;/p&gt;
</summary></entry><entry><title>The Evolution of Containerised Testing at Demonware</title><link href="https://pyvideo.org/pycon-ireland-2016/the-evolution-of-containerised-testing-at-demonware.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Thomas Shaw</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/the-evolution-of-containerised-testing-at-demonware.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As the feedback loop between developers and customers continues to
shrink, the ability to deliver features and fixes in near real-time
becomes more crucial. Continuous Delivery (CD) pipelines can enable
teams to deliver code quickly but optimisation of the Build, Test and
Deploy stages can be the difference between a 10 minute deployment and a
5 hour deployment.&lt;/p&gt;
&lt;p&gt;At Demonware we are using Docker to optimise the Test Stage of our CD
pipelines. Containerised testing has helped us reduce test execution
time, make tests more portable, better utilize our test infrastructure
and deliver game services to our customers faster.&lt;/p&gt;
&lt;p&gt;This talk will cover some of the challenges we faced along the way and
the various approaches we used to containerise our tests.&lt;/p&gt;
</summary></entry><entry><title>Type Hints for Static and Runtime Type Checking</title><link href="https://pyvideo.org/pycon-ireland-2016/type-hints-for-static-and-runtime-type-checking.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Ivan Smirnov</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/type-hints-for-static-and-runtime-type-checking.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The main objective of this talk is introducing type hints and the new
&amp;quot;typing&amp;quot; module that appeared in Python 3.5, along with the static
analysis tools that support them. As a part of this talk, we will also
discuss how to build a runtime type checker on top of the type hints
mechanics.&lt;/p&gt;
&lt;p&gt;Syllabus:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Function annotations&lt;/li&gt;
&lt;li&gt;Brief introduction to mypy&lt;/li&gt;
&lt;li&gt;Type hints, typing module&lt;/li&gt;
&lt;li&gt;Runtime type checking&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Webscraping with Asyncio</title><link href="https://pyvideo.org/pycon-ireland-2016/webscraping-with-asyncio.html" rel="alternate"></link><published>2016-11-06T00:00:00+00:00</published><updated>2016-11-06T00:00:00+00:00</updated><author><name>Jose Manuel Ortega</name></author><id>tag:pyvideo.org,2016-11-06:pycon-ireland-2016/webscraping-with-asyncio.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If we want to extract the contents of a website automating information
extraction, often we find that the website does not offer any API to
get the data you need and it is necessary use scraping techniques to
recover data from a Web automatically. Some of the most powerful tools
for extracting the data in web pages can be found in python ecosystem.&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Introduction to webscraping and python tools&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some of the most powerful tools to extract data can be found in the
python ecosystem, among which we highlight Beautiful soup, Pyquery and
Scrapy.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Asyncio with aiohttp for asyncronous requests&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I will make an introduction to asyncio and aiohttp modules explaining
the basic concepts like coroutines and event loops and try to compare
them with requests module. The most important is understand why the
union asyncio + aiohttp has a better performance than requests module.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Asynchronous scraping data&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I will show an example integrating some of the scraping tools
commented before like BeautifulSoup or Scrapy with asyncio + aiohttp
and obtain the performance improvement comparing with Requests module.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary></entry><entry><title>All Kinds of Everything - Human Input Devices in Python</title><link href="https://pyvideo.org/pycon-ireland-2016/all-kinds-of-everything-human-input-devices-in-python.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Zeth Green</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/all-kinds-of-everything-human-input-devices-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Inputs is a brand new module published in 2016 but it is already
gaining some traction. The inputs module provides cross-platform
Python support for keyboards, mice, gamepads, touch screens, wiimotes,
buttons, switches and pretty much any other input device you might
want to use. Currently supported platforms are the Raspberry Pi,
Linux, Windows and the Apple Mac. The talk is suitable for everyone.
The inputs module is very high level and suitable for complete
beginners to programming, I will also explain very briefly for more
advanced developers how to support a new class of device, but not in a
boring way.&lt;/p&gt;
&lt;p&gt;In a light-hearted fashion, I will demonstrate how to use the inputs[1]
module and will demonstrate some embedded/Internet of Things use
cases, a digital signage use case and some more comical, imaginative
and entertaining applications of the module.&lt;/p&gt;
&lt;p&gt;[1] &lt;a class="reference external" href="https://pypi.python.org/pypi/inputs"&gt;https://pypi.python.org/pypi/inputs&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Building Hermetic Python Packages with Bazel @ Dropbox</title><link href="https://pyvideo.org/pycon-ireland-2016/building-hermetic-python-packages-with-bazel-dropbox.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Leonid Vasilyev</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/building-hermetic-python-packages-with-bazel-dropbox.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, I’d like to talk about Dropbox’s Python code
repository, how we build and package it, so it can be safely deployed
to production.&lt;/p&gt;
&lt;p&gt;Specifically I’d like to focus on the issues we had with dependency
management and how Bazel build system, which was open-sourced by
Google early last year, helped us deal with it.&lt;/p&gt;
&lt;p&gt;Also, I’m going to cover lessons-learned and what plumbing was done in
order to make Bazel work for Dropbox in development, test and
production environment.&lt;/p&gt;
&lt;p&gt;Key take-aways for attendees:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An approach to introducing dependency management system into existing codebase&lt;/li&gt;
&lt;li&gt;Better understanding of how Bazel works in real-world&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>CPython - Bytecode and Virtual Machine</title><link href="https://pyvideo.org/pycon-ireland-2016/cpython-bytecode-and-virtual-machine.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Stephane Wirtel</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/cpython-bytecode-and-virtual-machine.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From a small example of code, we will generate the bytecode with the
compiler, we will study the generated bytecode with the tools of CPython
and especially we will see the execution of this bytecode by the virtual
machine with a modified version of CPython, just for this talk.This talk
is based on my previous talk &amp;quot;Exploring our Python Interpreter&amp;quot; but in
this talk, we will go more in the details of the interpreter and
especially of the virtual machine.&lt;/p&gt;
</summary></entry><entry><title>Data Analysis in MRI and PET/MRI Neuroimaging</title><link href="https://pyvideo.org/pycon-ireland-2016/data-analysis-in-mri-and-petmri-neuroimaging.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Davide Poggiali</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/data-analysis-in-mri-and-petmri-neuroimaging.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since the introduction of new hybrid systems as PET/MRI and due to the
constant increase of MRI sequences, neuroimaging datasets are growing
constantly. Nowadays a Neurological research study has to be considered
a big data problem. In this talk I will introduce from scratch some of
the most common algorithms for computing neuroimaging biomarkers and
give some ideas about efficiency increasing. Some examples in python
will be given.&lt;/p&gt;
</summary></entry><entry><title>Data Pipeline Evolution</title><link href="https://pyvideo.org/pycon-ireland-2016/data-pipeline-evolution.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Ali King</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/data-pipeline-evolution.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How do you build a big data pipeline when the size of your data starts
to get out of hand? How do you improve on the initial model when
people are demanding more data, and faster?&lt;/p&gt;
&lt;p&gt;This talk covers the evolution of a data pipeline in Python, from
daily full load to up-to-the-minute event stream, based on our
experience at FanDuel. Technologies covered include Amazon EMR,
Redshift, Hadoop, Luigi, Spark and Kinesis. We also look at the
challenges and trade-offs, and building a big data engineering team.&lt;/p&gt;
</summary></entry><entry><title>Deploy your Python Application Without Getting Owned</title><link href="https://pyvideo.org/pycon-ireland-2016/deploy-your-python-application-without-getting-owned.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Justin Mayer</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/deploy-your-python-application-without-getting-owned.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With severe security vulnerabilities on the rise, it’s critical for
Python developers to understand how to protect their applications.
Unattended upgrades, automated TLS certificate provisioning, enhanced
web security, and other measures can significantly reduce the attack
surface of the systems upon which our applications run.&lt;/p&gt;
</summary></entry><entry><title>Experimenting with TensorFlow</title><link href="https://pyvideo.org/pycon-ireland-2016/experimenting-with-tensorflow.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Breandan Considine</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/experimenting-with-tensorflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From implementing new research to validating results, running machine
learning experiments can often be a process of trial and error.
TensorFlow is an open source computing framework that places state of
the art algorithms and tools into developers' hands, allowing you to
rapidly iterate experiments, monitor their results and scale into
production. We'll show you how to train machine learning pipelines from
conception to release with TensorFlow.&lt;/p&gt;
</summary><category term="tensorflow"></category></entry><entry><title>From documents to graphs with Python</title><link href="https://pyvideo.org/pycon-ireland-2016/from-documents-to-graphs-with-python.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Hanneli Tavante</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/from-documents-to-graphs-with-python.html</id><summary type="html"></summary></entry><entry><title>Get your code to do your job</title><link href="https://pyvideo.org/pycon-ireland-2016/get-your-code-to-do-your-job.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Ronan Hayes</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/get-your-code-to-do-your-job.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;“I choose a lazy person to do a hard job. Because a lazy person will
find an easy way to do it.” In the AOL Adtech team we have some
creative/easy ways to test our systems. This workshop will showcase two
key points:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;How to get your code to generate your unit and integration tests&lt;/li&gt;
&lt;li&gt;How to get your customers to generate even more tests&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The workshop will go into detail on:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Modelling your interfaces and data&lt;/li&gt;
&lt;li&gt;Using introspection and JINJA2 to generate tests&lt;/li&gt;
&lt;li&gt;Using the Elastic stack to monitor and collect data&lt;/li&gt;
&lt;li&gt;Leveraging data to generate more test cases.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The workshop will assume a beginner level of python and introduce each
library and technology . The net result is a very simple and easy step
by step guide to getting your code to do your job.&lt;/p&gt;
</summary></entry><entry><title>Introduction to Data Science</title><link href="https://pyvideo.org/pycon-ireland-2016/introduction-to-data-science.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Ana Peleteiro Ramallo</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/introduction-to-data-science.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The aim of this talk is to give a introduction to what data science is,
what kind of problems it can solve and how to solve them. Participants
will learn both with theory and a practical problem to understand the
end-to- end data science process. The contents will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What is data science&lt;/li&gt;
&lt;li&gt;Data preprocessing and data manipulation&lt;/li&gt;
&lt;li&gt;Natural Language Processing (NLP)&lt;/li&gt;
&lt;li&gt;Machine Learning&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The talk is tailored for people interested in data science who do not
have previous knowledge about the topic, but have basic knowledge of
general computer science topics.&lt;/p&gt;
</summary></entry><entry><title>Lightning Talks</title><link href="https://pyvideo.org/pycon-ireland-2016/lightning-talks.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Saturday afternoon Lightning talks&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Managing Kubernetes from Python using Kube</title><link href="https://pyvideo.org/pycon-ireland-2016/managing-kubernetes-from-python-using-kube.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>David Charles</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/managing-kubernetes-from-python-using-kube.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kubernetes is the Google Borg inspired control plane for Docker
containers that everyone is talking about. It has a great API but needs
a load of HTTP client code and JSON processing to use it from Python.
This talk introduces Kube, a Python wrapper around the Kubernetes API
that enables you to manage your Kubernetes cluster in a pythonic way
while avoiding any Kubernetes API peculiarities.&lt;/p&gt;
</summary></entry><entry><title>Mozilla &amp; Python</title><link href="https://pyvideo.org/pycon-ireland-2016/mozilla-python.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Tarek Ziadé</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/mozilla-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is heavily used at Mozilla for many different tasks. This talk
will explain how and why&lt;/p&gt;
&lt;p&gt;Python is often the language of choice in the Kingdom of Javascript and
now Rust,&lt;/p&gt;
</summary></entry><entry><title>Opening Session</title><link href="https://pyvideo.org/pycon-ireland-2016/opening-session.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>David Markey</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/opening-session.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We're delighted to have the Minister of Jobs, Enterprise and Innovation
to open the conference this year.&lt;/p&gt;
</summary></entry><entry><title>Overview of Python Web Development, from Searching to Deployment</title><link href="https://pyvideo.org/pycon-ireland-2016/overview-of-python-web-development-from-searching-to-deployment.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Andrea Fagan</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/overview-of-python-web-development-from-searching-to-deployment.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is about helping people new to development &amp;amp; Python to
connect the dots between googling ”python web development” and
reaching deployment. When entering the world of development there is a
huge learning curve. It’s not just about understanding python syntax
and writing a function. How does everything fit together? This talk
will attempt to introduce the budding developer to the options
available and why you may choose one over another.&lt;/p&gt;
&lt;p&gt;I will run through the following topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The major python web frameworks that exist. We will examine the pros and cons of the main
players.&lt;/li&gt;
&lt;li&gt;Python itself, Apis vs Services, what goes where?&lt;/li&gt;
&lt;li&gt;How to build restfully and the importance of adhering to correct http
protocols. How does javascript know what to do?&lt;/li&gt;
&lt;li&gt;The merits of testing and running through the different testing
libraries that are available.&lt;/li&gt;
&lt;li&gt;Brief intro to Github and pointing to resources to help learn how to
commit.&lt;/li&gt;
&lt;li&gt;Highlighting any “gotchas”&lt;/li&gt;
&lt;li&gt;Deployment tools.&lt;/li&gt;
&lt;li&gt;Hosting, where to go?&lt;/li&gt;
&lt;li&gt;How to google for relevant answers.&lt;/li&gt;
&lt;li&gt;Python community for answers. (globally and local)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hopefully those that attending will have a greater understanding of
the whole development system so they will know what to research for
each step and where to find answers.&lt;/p&gt;
</summary></entry><entry><title>Practical Django Debugging and Profiling</title><link href="https://pyvideo.org/pycon-ireland-2016/practical-django-debugging-and-profiling.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Sean O'Donnell</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/practical-django-debugging-and-profiling.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I plan to cover Debug Mode, The Django Debug Toolbar, The Werkzeug
Debugger, Profiling Middleware, Logging and Locust for Load testing. The
Goal is to introduce each tool, give its pros and cons, and a short
demonstration. Ideally there will be enough time for some Q&amp;amp;A; at the
end.&lt;/p&gt;
</summary></entry><entry><title>Putting python data science into production</title><link href="https://pyvideo.org/pycon-ireland-2016/putting-python-data-science-into-production.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Brian O'Mullane</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/putting-python-data-science-into-production.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data science once involved working with a large data set in relative
isolation and producing a static report to present at a quarterly
meeting. Decision makers in companies have been inspired by the types of
insights the data can offer and are asking more questions of it, such as
what happens if I change this variable or where did this result come
from. Data scientist regularly now present their analysis not in reports
but in web apps or behind APIs that allow this kind of interrogation. We
have been building data science solutions for 10 years and have learnt
many lessons along the way. In this talk we will run through how to
build performant, scalable and validated data science web apps, using
python.&lt;/p&gt;
</summary></entry><entry><title>Python for Text Analysis Kaggle Competition</title><link href="https://pyvideo.org/pycon-ireland-2016/python-for-text-analysis-kaggle-competition.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>John Savage</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/python-for-text-analysis-kaggle-competition.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using the recent Home Depot Search Relevance Kaggle competition
(&lt;a class="reference external" href="https://www.kaggle.com/c/home-depot-product-search-relevance"&gt;https://www.kaggle.com/c/home-depot-product-search-relevance&lt;/a&gt;) as an
example, this talk will give a general overview of a predictive
analytics project in python, specifically focusing on text analytics.
This talk will first give an introduction to Kaggle and this
competition in particular. To give an introduction to predictive
analytics, I will then show how to start designing &amp;quot;features&amp;quot; which
describe the similarity of two samples of text. Using a very simple
feature, the number of overlapping words, we can build our first
simple predictive model. Building on this base, we'll then explore
more advanced text mining techniques, such as term frequency matrices,
TF-IDF, Latent Semantic Analysis, and word2vec. Finally, we can see
how the final random forest model performs and what the most important
features were.&lt;/p&gt;
&lt;p&gt;I've delivered this presentation in 30 minutes at a work event
already. I can tweak the talk to focus less on the introduction to
predictive analytics and more on the text analytics methods if that
would be a better fit for the audience.&lt;/p&gt;
</summary></entry><entry><title>Recruit Session</title><link href="https://pyvideo.org/pycon-ireland-2016/recruit-session.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Harald Armin Massa</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/recruit-session.html</id><summary type="html"></summary></entry><entry><title>Sharing knowledge in the Python ecosystem</title><link href="https://pyvideo.org/pycon-ireland-2016/sharing-knowledge-in-the-python-ecosystem.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Humberto Corona</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/sharing-knowledge-in-the-python-ecosystem.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data Scientists (or researchers) often do many early-stage prototyping
and run many experiments before finding the optimal solution for the
problem they are trying to solve. However, sometimes, a lot of the
knowledge gained in the process stays with the person. In this proposed
talk, I would like to introduce how to produce, share and ensure the
reproducibility of experiments using jupyter notebooks and github. This
is a series of lessons Iearned while being a research student (where
open-sourcing the code and data used to generate papers is very
important) and more recently, working in a new team in Zalando, where we
have experimented with different ways to share and review the data
science tasks, as well as the knowledge generated from those tasks.&lt;/p&gt;
</summary></entry><entry><title>Try, try, and try again</title><link href="https://pyvideo.org/pycon-ireland-2016/try-try-and-try-again.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Paul Barry</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/try-try-and-try-again.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing code in Python is easier than most other programming languages.
So much so, in fact, that it's easy to quickly knock-up something to
solve a problem, especially if your code is ultimately &amp;quot;throw-away&amp;quot;. As
a language, Python's great at not getting in your way: you write your
code, it runs, then you move onto something else. But, how easy is it to
to write robust code in Python? What if your code has to hang around for
a long time? What if you need to write code which not only runs but also
has to handle problems should they occur? In this talk, Paul attempts to
answer these questions by presenting some working code, which he then
dissects to highlight some of the things that can go wrong, before
describing how it's possible to handle and survive the identified
problems (should they occur).&lt;/p&gt;
</summary></entry></feed>