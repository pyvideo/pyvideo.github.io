<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Lee Briggs</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_lee-briggs.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-03-24T00:00:00+00:00</updated><subtitle></subtitle><entry><title>What's Your Type? A Real World Use Case for Python Type Hints</title><link href="https://pyvideo.org/python-web-conf-2022/whats-your-type-a-real-world-use-case-for-python-type-hints.html" rel="alternate"></link><published>2022-03-24T00:00:00+00:00</published><updated>2022-03-24T00:00:00+00:00</updated><author><name>Lee Briggs</name></author><id>tag:pyvideo.org,2022-03-24:/python-web-conf-2022/whats-your-type-a-real-world-use-case-for-python-type-hints.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Type hints for python have been available since Python 3.5, but it’s rare to see the Python type system used in the wild. As a dynamic language, it’s easy to gain the habit of allowing Python programs to “fail fast” and handle type and syntax errors …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Type hints for python have been available since Python 3.5, but it’s rare to see the Python type system used in the wild. As a dynamic language, it’s easy to gain the habit of allowing Python programs to “fail fast” and handle type and syntax errors at runtime.&lt;/p&gt;
&lt;p&gt;However, when using Python for infrastructure as code, this can start to create a difficult and painful feedback loop for code that is heavily iterated upon.&lt;/p&gt;
&lt;p&gt;In this talk, we’ll take a look at how the type system dramatically can improve an infrastructure as code programs, and see how it can improve the feedback loop. Finally, we’ll examine some of the strong and weak parts of the Python type system against other popular languages and make a case for improvements that could benefit the wider python community.&lt;/p&gt;
&lt;p&gt;#PWC2022 attracted nearly 375 attendees from 36 countries and 21 time zones making it the biggest and best year yet. The highly engaging format featured 90 speakers, 6 tracks (including 80 talks and 4 tutorials) and took place virtually on March 21-25, 2022 on LoudSwarm by Six Feet Up.&lt;/p&gt;
&lt;p&gt;More information about the conference can be found at: &lt;a class="reference external" href="https://2022.pythonwebconf.com"&gt;https://2022.pythonwebconf.com&lt;/a&gt;&lt;/p&gt;
</content><category term="Python Web Conf 2022"></category><category term="PythonWebConf"></category><category term="PythonWebConf2022"></category></entry></feed>