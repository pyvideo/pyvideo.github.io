<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_holger-peters.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-06-20T00:00:00+00:00</updated><entry><title>Going Functional in the Python Data Science Stack</title><link href="https://pyvideo.org/pycon-italia-2016/going-functional-in-the-python-data-science-stack.html" rel="alternate"></link><published>2016-06-20T00:00:00+00:00</published><updated>2016-06-20T00:00:00+00:00</updated><author><name>Holger Peters</name></author><id>tag:pyvideo.org,2016-06-20:pycon-italia-2016/going-functional-in-the-python-data-science-stack.html</id><summary type="html"></summary></entry><entry><title>Using Scikit-Learn's interface for turning Spaghetti Data Science into Maintainable Software</title><link href="https://pyvideo.org/europython-2015/using-scikit-learns-interface-for-turning-spaghetti-data-science-into-maintainable-software.html" rel="alternate"></link><published>2015-08-05T00:00:00+00:00</published><updated>2015-08-05T00:00:00+00:00</updated><author><name>Holger Peters</name></author><id>tag:pyvideo.org,2015-08-05:europython-2015/using-scikit-learns-interface-for-turning-spaghetti-data-science-into-maintainable-software.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Holger Peters - Using Scikit-Learn's interface for turning Spaghetti Data Science into Maintainable Software
[EuroPython 2015]
[21 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;Finding a good structure for number-crunching code can be a problem,
this especially applies to routines preceding the core algorithms:
transformations such as data processing and cleanup, as well as
feature construction.&lt;/p&gt;
&lt;p&gt;With such code, the programmer faces the problem, that their code
easily  turns into a sequence of highly interdependent operations,
which are hard to separate. It can be challenging to test, maintain
and reuse such &amp;quot;Data Science Spaghetti code&amp;quot;.&lt;/p&gt;
&lt;p&gt;Scikit-Learn offers a simple yet powerful interface for data science
algorithms: the estimator and composite classes (called meta-
estimators). By example, I show how clever usage of meta-estimators
can encapsulate elaborate machine learning models into a maintainable
tree of objects that is both handy to use and simple to test.&lt;/p&gt;
&lt;p&gt;Looking at examples, I will show how this approach simplifies model
development, testing and validation and how this brings together best
practices from software engineering as well as data science.&lt;/p&gt;
&lt;p&gt;_Knowledge of Scikit-Learn is handy but not necessary to follow this talk._&lt;/p&gt;
</summary></entry></feed>