<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_turbogears.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-05-27T00:00:00+00:00</updated><entry><title>Fast, documented and reliable JSON based webservices with Python</title><link href="https://pyvideo.org/europython-2013/fast-documented-and-reliable-json-based-webservices-with-python.html" rel="alternate"></link><published>2013-07-05T00:00:00+00:00</published><updated>2013-07-05T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2013-07-05:europython-2013/fast-documented-and-reliable-json-based-webservices-with-python.html</id><summary type="html"></summary><category term="web"></category><category term="turbogears"></category><category term="mongodb"></category><category term="json"></category><category term="api"></category><category term="gevent"></category></entry><entry><title>Web Applications on Python3 and Python2 with TurboGears - Part 1</title><link href="https://pyvideo.org/europython-2013/web-applications-on-python3-and-python2-with-turbogears-part-1.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/web-applications-on-python3-and-python2-with-turbogears-part-1.html</id><summary type="html"></summary><category term="web"></category><category term="WSGI"></category><category term="sqlalchemy"></category><category term="HTTP"></category><category term="turbogears"></category><category term="mongodb"></category><category term="html"></category><category term="python3"></category></entry><entry><title>Web Applications on Python3 and Python2 with TurboGears - Part 2</title><link href="https://pyvideo.org/europython-2013/web-applications-on-python3-and-python2-with-turbogears-part-2.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/web-applications-on-python3-and-python2-with-turbogears-part-2.html</id><summary type="html"></summary><category term="web"></category><category term="WSGI"></category><category term="sqlalchemy"></category><category term="HTTP"></category><category term="turbogears"></category><category term="mongodb"></category><category term="html"></category><category term="python3"></category></entry><entry><title>TurboGears2 the Framework that scales with you</title><link href="https://pyvideo.org/pyconweb-2017/turbogears2-the-framework-that-scales-with-you.html" rel="alternate"></link><published>2017-05-27T00:00:00+00:00</published><updated>2017-05-27T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2017-05-27:pyconweb-2017/turbogears2-the-framework-that-scales-with-you.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TurboGears is one of the longest running web frameworks for Python, featured on TalkPythonToMe and with configuration modes ranging from full-stack to microframework.&lt;/p&gt;
&lt;p&gt;Used by big projects like SourceForge.net and RedHat, TG2 might be the right balance between Django and Flask you were looking for.&lt;/p&gt;
</summary><category term="turbogears"></category></entry><entry><title>Joel Burton - Why Python Web Frameworks are Changing the Web</title><link href="https://pyvideo.org/kiwi-pycon-2009/joel-burton---why-python-web-frameworks-are-chang.html" rel="alternate"></link><published>2009-11-07T00:00:00+00:00</published><updated>2009-11-07T00:00:00+00:00</updated><author><name>Joel Burton</name></author><id>tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/joel-burton---why-python-web-frameworks-are-chang.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why Python web frameworks are changing the web&lt;/p&gt;
&lt;p&gt;Presented by Joel Burton&lt;/p&gt;
&lt;p&gt;Keynote.&lt;/p&gt;
&lt;p&gt;Slides from the keynote:
&lt;a class="reference external" href="http://www.slideshare.net/joelburton/why-python-web"&gt;http://www.slideshare.net/joelburton/why-python-web&lt;/a&gt;-
frameworks-are-changing-the-web&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</summary><category term="kiwipycon"></category><category term="kiwipycon2009"></category><category term="plone"></category><category term="pylons"></category><category term="turbogears"></category><category term="web"></category><category term="zope"></category></entry><entry><title>PyCon 2009: Intermediate Turbogears (Part 1 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--intermediate-turbogears--part-1-of-3.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--intermediate-turbogears--part-1-of-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you conquered the basics of Pylons/TurboGears2 (or just taken the
morning class)? Do you want to understand more about how everything
works, and how you can go beyond the basics to understand how to
customize things? This class will take you from a basic understanding of
how to use the framework, to a clear picture of how the framework pieces
are put together. I will also cover how to create REST+JSON based web
services, we'll focus particularly on how all this works with rich
javascript based user interfaces, but the techniques should easily apply
to Flex, or other &amp;quot;Rich Internet Application&amp;quot; tools.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2009"></category><category term="turbogears"></category></entry><entry><title>PyCon 2009: Intermediate Turbogears (Part 2 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--intermediate-turbogears--part-2-of-3.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--intermediate-turbogears--part-2-of-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you conquered the basics of Pylons/TurboGears2 (or just taken the
morning class)? Do you want to understand more about how everything
works, and how you can go beyond the basics to understand how to
customize things? This class will take you from a basic understanding of
how to use the framework, to a clear picture of how the framework pieces
are put together. I will also cover how to create REST+JSON based web
services, we'll focus particularly on how all this works with rich
javascript based user interfaces, but the techniques should easily apply
to Flex, or other &amp;quot;Rich Internet Application&amp;quot; tools.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2009"></category><category term="turbogears"></category></entry><entry><title>PyCon 2009: Intermediate Turbogears (Part 3 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--intermediate-turbogears--part-3-of-3.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--intermediate-turbogears--part-3-of-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you conquered the basics of Pylons/TurboGears2 (or just taken the
morning class)? Do you want to understand more about how everything
works, and how you can go beyond the basics to understand how to
customize things? This class will take you from a basic understanding of
how to use the framework, to a clear picture of how the framework pieces
are put together. I will also cover how to create REST+JSON based web
services, we'll focus particularly on how all this works with rich
javascript based user interfaces, but the techniques should easily apply
to Flex, or other &amp;quot;Rich Internet Application&amp;quot; tools.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2009"></category><category term="turbogears"></category></entry><entry><title>PyCon 2009: Introduction to TurboGears2 and WSGI (Part 2 of 2)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-turbogears2-and-wsgi-.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--introduction-to-turbogears2-and-wsgi-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: annoying noise starting at 1:17 (2nd half)] Are you
interested in building web applications with modern libraries and tools?
Do you want to build on top of the work that many others have done? Have
you done some basic web development, but want to be more productive. If
so this is the class for you. TurboGears 2 provides a well defined set
of the best libraries for web development python has to offer. But more
importantly it brings them together in a clean, well documented way that
allows for developing reusable TurboGears 2 components. The result is a
powerful, flexible, set of tools that helps make it easy to build
dynamic web applications.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2009"></category><category term="turbogears"></category><category term="tutorial"></category><category term="wsgi"></category></entry><entry><title>PyCon 2009: Introduction to TurboGears2 and WSGI (Part 1 of 2)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-turbogears2-and-wsgi0.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--introduction-to-turbogears2-and-wsgi0.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: annoying noise starting at 1:17 (2nd half)] Are you
interested in building web applications with modern libraries and tools?
Do you want to build on top of the work that many others have done? Have
you done some basic web development, but want to be more productive. If
so this is the class for you. TurboGears 2 provides a well defined set
of the best libraries for web development python has to offer. But more
importantly it brings them together in a clean, well documented way that
allows for developing reusable TurboGears 2 components. The result is a
powerful, flexible, set of tools that helps make it easy to build
dynamic web applications.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2009"></category><category term="turbogears"></category><category term="tutorial"></category><category term="wsgi"></category></entry><entry><title>Designing to Scale: The Story of ShootQ (#5)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--designing-to-scale--the-story-of-shoo.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--designing-to-scale--the-story-of-shoo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Designing to Scale: The story of ShootQ&lt;/p&gt;
&lt;p&gt;Jonathan LaCour (ShootQ)&lt;/p&gt;
&lt;p&gt;ShootQ is a web-based studio management solution for professional
photography studios, designed to automate and simplify the task of
running a small business. In this talk, Jonathan LaCour, the CTO of
ShootQ, hopes to share his experience designing a web application that
can scale up to meet the demands of a rapidly growing customer base. The
talk will cover a variety of topics including TurboGears 2.0, WSGI,
horizontal and vertical scaling, database replication, load balancing,
deployment, and more.&lt;/p&gt;
</summary><category term="deployment"></category><category term="loadbalancing"></category><category term="pycon"></category><category term="pycon2010"></category><category term="replication"></category><category term="scaling"></category><category term="turbogears"></category><category term="wsgi"></category></entry><entry><title>How Python, TurboGears, and MongoDB are Transforming SourceForge.net (#47)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--how-python--turbogears--and-mongodb-a.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Rick Copeland</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--how-python--turbogears--and-mongodb-a.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How Python, TurboGears, and MongoDB are transforming SourceForge.net&lt;/p&gt;
&lt;p&gt;Presented by Rick Copeland&lt;/p&gt;
&lt;p&gt;In mid-2009, SourceForge embarked on a quest to modernize our websites,
starting with the download (consumer) flow on SourceForge.net. A small
team was tasked the rewrite, converting a site originally implemented in
PHP with Python. Using a customized TurboGears as a core component, the
rewrite was completed and the new site deployed in under 2 months. This
talk tells the story of that rewrite and explains our new technology
stack, which includes TurboGears, MongoDB, and Jinja templates.&lt;/p&gt;
</summary><category term="jinja"></category><category term="mongodb"></category><category term="pycon"></category><category term="pycon2010"></category><category term="turbogears"></category></entry><entry><title>Panel: Form Generator Generators (#28)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--panel--form-generator-generators---28.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--panel--form-generator-generators---28.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Panel: Form Generator Generators&lt;/p&gt;
&lt;p&gt;Christopher Perkins; Brandon Craig Rhodes (Rhodes Mill Studios, Inc.);
Chris P McDonough (Agendaless Consulting); Jacob Kaplan-Moss
(&lt;a class="reference external" href="mailto:jacob&amp;#64;jacobian.org"&gt;jacob&amp;#64;jacobian.org&lt;/a&gt;); Jonathan Ellis&lt;/p&gt;
&lt;p&gt;It seems that almost every python web framework in existence has solved
the problem of automatically generating forms. Some have straight
forward techniques, some are unique or even an unusual approach to the
problem. The question is: &amp;quot;what can we learn from each other?&amp;quot;. This
panel will examine the different ways developers generate forms by
offering examples, and summarizing the functionality, differences, and
similarities between these valuable web development tools.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Feedback galore when moving between mics, cover your
ears]&lt;/p&gt;
</summary><category term="forms"></category><category term="panel"></category><category term="pycon"></category><category term="pycon2010"></category><category term="restish"></category><category term="turbogears"></category><category term="web"></category><category term="web2py"></category><category term="zope"></category></entry><entry><title>Relational Database Applications</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--relational-database-applications.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Chris Perkins</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--relational-database-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Turbogears Database Applications (Relational Database Applications)&lt;/p&gt;
&lt;p&gt;Presented by Chris Perkins&lt;/p&gt;
&lt;p&gt;TurboGears2 provides a rich toolset to provide developers with a
platform for developing web applications with existing databases. This
â€œun-tutorialâ€ has a simple goal. The participants may bring in their
own databases, and we will explore how TurboGears can use this database
to create a working web application. If the student does not want to use
her own database, one will be provided. This tutorial will focus on the
TurboGears Admin system, along with relational databases.&lt;/p&gt;
&lt;p&gt;This tutorial is intended to be an un-tutorial. The idea is simple.
Bring a public database, (or 4) and share with the class as we explore
the new admin- level RESTful features that TurboGears2 employs.&lt;/p&gt;
&lt;p&gt;At the end of the class, the goal is for everyone to have a working TG2
application, with a working admin, at least one customized form or
table, based on a database they, or another student brought to class.&lt;/p&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Laptop with Python 2.5 or 2.6 installed. Database system of your choice
(Postgres, Sqlite, MySQL) Python drivers for your desired database
system installed. (psychopg2, pg8000, pysqlite, mysql-python)&lt;/p&gt;
</summary><category term="database"></category><category term="pycon"></category><category term="pycon2010"></category><category term="turbogears"></category><category term="tutorial"></category></entry><entry><title>TurboGears Geospatial Framework (#19)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--turbogears-geospatial-framework---19.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Sanjiv Singh</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--turbogears-geospatial-framework---19.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TurboGears Geospatial Framework&lt;/p&gt;
&lt;p&gt;Presented by Sanjiv Singh&lt;/p&gt;
&lt;p&gt;It is now possible to develop feature rich GIS web applications using
TurboGears by harnessing the power of spatial databases using GeoAlchemy
and integrating python GIS frameworks &amp;amp; utilities with TurboGears using
tgext.geo&lt;/p&gt;
</summary><category term="geoalchemy"></category><category term="gis"></category><category term="pycon"></category><category term="pycon2010"></category><category term="turbogears"></category></entry><entry><title>Scaling Python past 100</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--scaling-python-past-100.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Mark Ramm</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--scaling-python-past-100.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scaling Python past 100&lt;/p&gt;
&lt;p&gt;Presented by Mark Ramm&lt;/p&gt;
&lt;p&gt;Sourceforge.net has been in the top 100 sites on the internet, and we
discovered that python was easily able to scale up to handle that
traffic. In fact Python is now the core language for all new features,
and is taking over all of sourceforge.net.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The path from legacy PHP to modern python tools has been long an bumpy,
and this is the story of how we took Python from a single prototype
site, to the core technology driving SourceForge.net. I will discuss the
mistakes we made along the way, the benefits that sold python, and the
real secret behind our python transformation.&lt;/p&gt;
&lt;p&gt;A few highlights include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How we abused libraries for fun and profit&lt;/li&gt;
&lt;li&gt;How a major mistake made us look good&lt;/li&gt;
&lt;li&gt;How the python community worked for us&lt;/li&gt;
&lt;li&gt;How we couldn't have done it without Django AND TurboGears&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="casestudy"></category><category term="pycon"></category><category term="pycon2011"></category><category term="scalability"></category><category term="sourceforge"></category><category term="turbogears"></category></entry><entry><title>State of Pylons/TurboGears 2/repoze.bfg</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--state-of-pylons-turbogears-2-repoze-b.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Ben Bangert</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--state-of-pylons-turbogears-2-repoze-b.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;State of Pylons/TurboGears 2/repoze.bfg&lt;/p&gt;
&lt;p&gt;Presented by Chris McDonough, Ben Bangert, and Mark Ramm&lt;/p&gt;
&lt;p&gt;A three-for-one talk by the main developers of three popular Python web
frameworks! We'll (very) briefly cover the state of each of our
individual frameworks and communities, and then we'll describe the
results of our efforts to work together and share code.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Pylons is a popular, lightweight Python web framework.&lt;/p&gt;
&lt;p&gt;TurboGears 2 is a full-stack framework built atop Pylons.&lt;/p&gt;
&lt;p&gt;repoze.bfg is a moderately popular, lightweight Python web framework.&lt;/p&gt;
&lt;p&gt;The main developers and community leaders of these frameworks have been
working together and sharing as much as possible over the course of
roughly the last year. We'll very briefly describe to the audience the
states of our individual efforts, then we'll discuss how we intend to
move forward and share more code and effort in the year to come. The
talk will be more socially- oriented than technical.&lt;/p&gt;
&lt;p&gt;It's unusual for open source code and communities to bridge minor
perceived differences in scope and style and to start sharing code and
ideas openly. If you're a user of any of these frameworks, you'll want
to be present for this talk.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2011"></category><category term="pylons"></category><category term="pyramid"></category><category term="repoze.bfg"></category><category term="turbogears"></category></entry></feed>