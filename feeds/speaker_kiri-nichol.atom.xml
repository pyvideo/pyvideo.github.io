<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_kiri-nichol.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-11-19T00:00:00+00:00</updated><entry><title>Painter by numbers: using python to create a Kaggle competition</title><link href="https://pyvideo.org/pycon-ca-2017/painter-by-numbers-using-python-to-create-a-kaggle-competition.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Kiri Nichol</name></author><id>tag:pyvideo.org,2017-11-19:pycon-ca-2017/painter-by-numbers-using-python-to-create-a-kaggle-competition.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The &amp;quot;Painter By Numbers&amp;quot; Kaggle competition challenged participants to come up with an algorithm which can examine a pair of paintings and make a prediction: are these two paintings by the same artist? This talk explores some of the technical challenges involved with making an exciting and challenging competition, including how to build a simple RandomForestClassifier algorithm with sklearn as well as how to reduce the problem space to a manageable size by using painting metadata and clustering algorithms to identify groups of similar paintings.&lt;/p&gt;
&lt;p&gt;I also explain how to implement siamese neural networks in keras and examine how they allow the development of classification algorithms that can learn to extrapolate to new classes. Finally, I explore how the winning algorithm performed in an actual case of art fraud.&lt;/p&gt;
</summary></entry></feed>