<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 25 Aug 2019 00:00:00 +0000</lastBuildDate><item><title>Build and hack your own IoT with MQTT</title><link>https://pyvideo.org/kiwi-pycon-2019/build-and-hack-your-own-iot-with-mqtt.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Connecting the things in the Internet of Things (IoT) is hard. This talk will introduce MQTT - a messaging protocol which makes it easier to exchange information between disparate devices. You'll be equipped to build your own IoT system and hack it to find some of its weaknesses.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Agnetha Korevaar</dc:creator><pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-25:kiwi-pycon-2019/build-and-hack-your-own-iot-with-mqtt.html</guid><category>iot</category><category>internet of things</category><category>MQTT</category></item><item><title>Lightning Talks</title><link>https://pyvideo.org/kiwi-pycon-2019/lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various Speakers</dc:creator><pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-25:kiwi-pycon-2019/lightning-talks.html</guid><category>lightning talks</category></item><item><title>The Packaging Lifecycle with Poetry</title><link>https://pyvideo.org/kiwi-pycon-2019/the-packaging-lifecycle-with-poetry.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Right now is an interesting time in the land of Python packaging; there are a lot of ideas flying around about the correct way to package, develop and publish your code. Poetry is one thread in this conversation.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Clinton Roy</dc:creator><pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-25:kiwi-pycon-2019/the-packaging-lifecycle-with-poetry.html</guid><category>poetry</category><category>Packaging</category></item><item><title>Aircraft predictive maintenance using Python/ML</title><link>https://pyvideo.org/kiwi-pycon-2019/aircraft-predictive-maintenance-using-pythonml.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Applied machine learning for predictive maintenance (PdM) with objectives to reduce aircraft downtime &amp;amp; in-workshop costs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amar Verma</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/aircraft-predictive-maintenance-using-pythonml.html</guid><category>machine learning</category></item><item><title>Automate Your Integration Tests Using pytest-docker-compose</title><link>https://pyvideo.org/kiwi-pycon-2019/automate-your-integration-tests-using-pytest-docker-compose.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sometimes unit tests aren't enough, and you need to actually deploy your solution to see how it behaves as a whole. Utilities like docker-compose make it easy to stand up an entire environment, but the actual testing part still has to be done manually... or does it? Learn how to automate your integration tests using pytest-docker-compose today!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Phoenix Zerin</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/automate-your-integration-tests-using-pytest-docker-compose.html</guid><category>docker</category><category>docker-compose</category><category>pytest</category><category>testing</category></item><item><title>Building an interactive training environment using JupyterHub</title><link>https://pyvideo.org/kiwi-pycon-2019/building-an-interactive-training-environment-using-jupyterhub.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;JupyterHub is used to run and manage Jupyter notebook instances for multiple users at the same time. Did you know though that you can use JupyterHub to spawn applications other than Jupyter notebooks? Come see how JupyterHub was used to create a multi user interactive training environment.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Dumpleton</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/building-an-interactive-training-environment-using-jupyterhub.html</guid><category>jupyterhub</category></item><item><title>From Pascal to Python</title><link>https://pyvideo.org/kiwi-pycon-2019/from-pascal-to-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A look at the journey schools (specifically Burnside High) have taken from no computers to students being able to take courses in computer science, software engineering, game development and microelectronics.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Dunford</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/from-pascal-to-python.html</guid><category>Teaching</category></item><item><title>Getting started with MicroPython on a microcontroller</title><link>https://pyvideo.org/kiwi-pycon-2019/getting-started-with-micropython-on-a-microcontroller.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using MicroPython on an ESP32 board to make a simple soundmeter&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Glenn Ramsey</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/getting-started-with-micropython-on-a-microcontroller.html</guid><category>micropython</category></item><item><title>How to Write Python Code Others Like to Use</title><link>https://pyvideo.org/kiwi-pycon-2019/how-to-write-python-code-others-like-to-use.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What makes an API Pythonic? If you are writing Python code you want to share with the world, or maybe just within your team - how can you design it in a way that's intuitive to use and easy to navigate for both the beginner and the expert.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anna Tisch</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/how-to-write-python-code-others-like-to-use.html</guid><category>pythonic</category></item><item><title>I'm So Meta Even This Acronym...</title><link>https://pyvideo.org/kiwi-pycon-2019/im-so-meta-even-this-acronym.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever wanted to better understand metaclasses?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Curtis Maloney</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/im-so-meta-even-this-acronym.html</guid><category>metaclass</category><category>metaclasses</category></item><item><title>Keynote: From NASA to Startups to Big Commerce</title><link>https://pyvideo.org/kiwi-pycon-2019/keynote-from-nasa-to-startups-to-big-commerce.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While aircraft and spacecraft disasters are extremely visible, the impact of software mistakes on more pedestrian efforts can affect significantly more people. For example, applications that handle catastrophe or infrastructure. Fortunately, the lessons learned building aircraft and spacecraft can be extended for build projects of any size or scale.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roy Greenfeld</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/keynote-from-nasa-to-startups-to-big-commerce.html</guid><category>keynote</category></item><item><title>Keynote: The Natural State Of Computers</title><link>https://pyvideo.org/kiwi-pycon-2019/keynote-the-natural-state-of-computers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The renaissance of asynchronous programming can leave you asking 'how does this actually solve the problem?'. By investigating the common tasks that we as Python developers implement, we can find which ones are made easier with asynchronous techniques, and which ones are made more difficult.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amber Brown</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/keynote-the-natural-state-of-computers.html</guid><category>keynote</category><category>asynchronous</category></item><item><title>Parallelism in Python</title><link>https://pyvideo.org/kiwi-pycon-2019/parallelism-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python as a language has enjoyed a decade of usage in both industry and academia. It has been the most popular abstractions to scientific computing and machine learning, yet the base remains single-threaded. Just how is productivity in these fields being maintained with a single-threaded language?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rounak Vyas</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/parallelism-in-python.html</guid><category>parallelism</category></item><item><title>Python: A Medley of Programming Paradigms</title><link>https://pyvideo.org/kiwi-pycon-2019/python-a-medley-of-programming-paradigms.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Exploring Python's multiple programming paradigms - Imperative, Procedural, Functional and Object Oriented - and their applications through Python examples.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simon Merrick</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/python-a-medley-of-programming-paradigms.html</guid><category>programming paradigms</category><category>python</category></item><item><title>Python for Public Transport</title><link>https://pyvideo.org/kiwi-pycon-2019/python-for-public-transport.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I'll show you how to analyse public transport data with Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Raichev</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/python-for-public-transport.html</guid><category>GTFSTK</category><category>pandas</category><category>Shapely</category></item><item><title>Python product dev tools for electronics</title><link>https://pyvideo.org/kiwi-pycon-2019/python-product-dev-tools-for-electronics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Automation dev tools allow us to work smarter not harder. We have integrated Python into a large range of our electronic product development lifecycle. This includes: 1. Simulators for new technology. 2. Code generators for embedded C firmware. 3. Automation testing and data analysis.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Barrie Duncan</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/python-product-dev-tools-for-electronics.html</guid><category>product dev tools</category></item><item><title>Python, Threads &amp; Qt: Boom!</title><link>https://pyvideo.org/kiwi-pycon-2019/python-threads-qt-boom.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will investigate problems and pitfalls that will occur when using threads &amp;amp; Qt together inside a Python application, including unexpected memory corruption and crashes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Teijo Holzer</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/python-threads-qt-boom.html</guid><category>qt</category><category>threads</category></item><item><title>The journey of building a production-ready managed Kubernetes service</title><link>https://pyvideo.org/kiwi-pycon-2019/the-journey-of-building-a-production-ready-managed-kubernetes-service.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation we will share Catalyst’s public cloud journey in building a production ready managed Kubernetes service on top of OpenStack.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fei Long Wang</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/the-journey-of-building-a-production-ready-managed-kubernetes-service.html</guid><category>kubernetes</category><category>OpenStack</category></item><item><title>Turning 'wat' into 'why'</title><link>https://pyvideo.org/kiwi-pycon-2019/turning-wat-into-why.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To a seasoned dev, using a different programming language might be... an experience. Everything is a double? Equality isn't equality?! WAT!?! There are two directions this could go: 'Oh, this language is TERRIBLE. I HATE IT'. Or: 'Huh.. I wonder why that is...' Take a trip along the latter path through a dozen different languages and understand why things the way they are.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie McLaughlin</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/turning-wat-into-why.html</guid><category>programming-languages</category></item><item><title>Using Python, Django, and ruthlessness to protect people from social media harassment.</title><link>https://pyvideo.org/kiwi-pycon-2019/using-python-django-and-ruthlessness-to-protect-people-from-social-media-harassment.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I present 'secateur', a tool for Twitter users to protect themselves from some forms of online harassment. I discuss using Python and Django to create tools that integrate with Twitter, use its APIs, and block lots of people (LOTS of people).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Eastman</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/using-python-django-and-ruthlessness-to-protect-people-from-social-media-harassment.html</guid><category>twitter</category><category>APIs</category><category>secateur</category><category>django</category></item></channel></rss>