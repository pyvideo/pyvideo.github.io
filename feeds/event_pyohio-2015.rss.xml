<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 02 Aug 2015 00:00:00 +0000</lastBuildDate><item><title>A Trip to the SPA</title><link>https://pyvideo.org/pyohio-2015/a-trip-to-the-spa.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern web application experiences demand Single-Page-Application
architectures. Join us on a journey building a simple kanban board with
Flask and AngularJS. We'll hack together a simple server API with
Flask-SQLAlchemy and Flask-Marshmallow, then link it into a Bootstrap
frontend with ngResource.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Griffith</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/a-trip-to-the-spa.html</guid><category>talk</category></item><item><title>Catching the bus on time -- Using Python, a Pebble Watch and (kind of) Open Data</title><link>https://pyvideo.org/pyohio-2015/catching-the-bus-on-time-using-python-a-pebbl.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Taking the bus used to be hard. You'd have to find a timetable, map out
your route, and then cross your fingers that the bus actually showed up
on time! Modern transit systems have equipped their fleet with GPS
devices which provide near real-time location information. Using open
data systems, a Python webapp, and a Pebble watch, let's build a bus
time tracker that would make Dick Tracy envious!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Heinen</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/catching-the-bus-on-time-using-python-a-pebbl.html</guid><category>talk</category></item><item><title>Developing a RESTful Python service on Windows</title><link>https://pyvideo.org/pyohio-2015/developing-a-restful-python-service-on-windows.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will walk you through the development and design experience of
the speaker creating a Python web service on Windows. It will give an
overview of integrating a WSGI server with Microsoft IIS or other
alternatives. In addition to the operational server infrastructure, this
talk includes some discussion of RESTful practices and client side code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joel B. Mohler</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/developing-a-restful-python-service-on-windows.html</guid><category>talk</category></item><item><title>Fumbling Forward - Docker Don'ts</title><link>https://pyvideo.org/pyohio-2015/fumbling-forward-docker-donts.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Questing for the continuous-deployment grail, I've had plenty of pit and
prat falls. Perhaps others can learn from my mistakes and do as I
didn't. This talk will demonstrate how [not] to stitch together Docker,
Compose, Machine, Boot2Docker, YAML, CircleCI, EC2, Route53, and likely
a few other tools into a simple yet automated code -&amp;gt; commit -&amp;gt; review
-&amp;gt; deploy process.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason M. Green</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/fumbling-forward-docker-donts.html</guid><category>talk</category></item><item><title>Growler - Using asyncio to Build a Web Framework</title><link>https://pyvideo.org/pyohio-2015/growler-using-asyncio-to-build-a-web-framework.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The asyncio library introduced a native way for python programs to
handle multiple network connections with one thread, asynchronously.
Inspired by the Express framework for nodejs, I set out to write my own
web server using the new library. This is what I've learned.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Kubera</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/growler-using-asyncio-to-build-a-web-framework.html</guid><category>talk</category></item><item><title>Introduction to PySchool.net</title><link>https://pyvideo.org/pyohio-2015/introduction-to-pyschoolnet.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PySchool.net is a Python programming environment where students can
create, edit, load, save and execute Python scripts directly in a
browser. The main directives of PySchool.net is to be free for educators
and students, and to reduce the technological burdens of hosting
programming classes. PySchool.net is powered by Brython, and is 100%
open source and is hosted on github.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Billy Earney</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/introduction-to-pyschoolnet.html</guid><category>talk</category></item><item><title>Making sense of CORS using web.py</title><link>https://pyvideo.org/pyohio-2015/making-sense-of-cors-using-webpy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cross-Origin Resource Sharing is the bane of Javascript API clients
existence. It is possible to easily implement CORS support in your
Python server code with just a few simple request headers. Once your API
is talking CORS, you are free from the tyranny of browsers' same-origin
security policies. This talk will explain what CORS is, why should care,
and work through an example using web.py.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zach Wick</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/making-sense-of-cors-using-webpy.html</guid><category>talk</category></item><item><title>**More lightning talks!**</title><link>https://pyvideo.org/pyohio-2015/more-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/mKK2GKxFMSE?t=0h0m0s"&gt;(0:00:00)&lt;/a&gt; 2015 was great,
2016 needs you. Eric and Brian&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/mKK2GKxFMSE?t=0h3m6s"&gt;(0:03:06)&lt;/a&gt; Issue trackers
for your town. - Chad Whitacre&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/mKK2GKxFMSE?t=0h7m48s"&gt;(0:07:48)&lt;/a&gt; How much can I
share with five minutes? -Ron DuPlain&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/mKK2GKxFMSE?t=0h12m55s"&gt;(0:12:55)&lt;/a&gt; Computer
colors importance. -Scott Sievert&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/mKK2GKxFMSE?t=0h17m2s"&gt;(0:17:02)&lt;/a&gt; Piecing
together a story with Google Maps. Lars&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/mKK2GKxFMSE?t=0h22m6s"&gt;(0:22:06)&lt;/a&gt; Back to the
Cheese Shop. -Cameron&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/mKK2GKxFMSE?t=0h22m52s"&gt;(0:22:52)&lt;/a&gt; Logging
Framework and Postgres -Matthew Wilson&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/mKK2GKxFMSE?t=0h25m40s"&gt;(0:25:40)&lt;/a&gt; Conda and
Virtualenv -Brian Costlow&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/mKK2GKxFMSE?t=0h30m30s"&gt;(0:30:30)&lt;/a&gt; PyOhio 2017
-Brian Costlow&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/mKK2GKxFMSE?t=0h33m15s"&gt;(0:33:15)&lt;/a&gt; All good
things come to an end -Lars&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chad Whitacre</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/more-lightning-talks.html</guid><category>lightning talks</category></item><item><title>Production Django: Building a Highly Scalable, Secure Django Site</title><link>https://pyvideo.org/pyohio-2015/production-django-building-a-highly-scalable-se.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When your Django application is ready for primetime, how do you ensure
that it won't crash the second real users begin interacting with it? In
this talk, we'll discuss building secure, scalable Django applications
and the infrastructure they need to stand up to the test of production.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joseph Mosby</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/production-django-building-a-highly-scalable-se.html</guid><category>talk</category></item><item><title>Python for Economists: An overview of Python tools for Economists</title><link>https://pyvideo.org/pyohio-2015/python-for-economists-an-overview-of-python-tool.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has developed applications in GIS, text analysis, networks,
statistics, csv manipulation, data analysis, data mining and
simulations. Despite this, there are few references for using python as
an economist. This talk provides an introduction to economic tools using
python. I conclude with python in data analysis and future projects for
economists using python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gary Hlusko</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/python-for-economists-an-overview-of-python-tool.html</guid><category>talk</category></item><item><title>Python Packaging from Init to Deploy</title><link>https://pyvideo.org/pyohio-2015/python-packaging-from-init-to-deploy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python packaging really isn't that bad (anymore.) In this talk you'll
learn how you can take your beautiful new Python code and share it with
the world in a way that everyone benefits. I will cover tools and
techniques you can use to get the boring stuff out of the way so you can
focus on your code and deploy quickly, frequently, and consistently.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Forgac</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/python-packaging-from-init-to-deploy.html</guid><category>talk</category></item><item><title>REPL-driven development</title><link>https://pyvideo.org/pyohio-2015/repl-driven-development.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You know the Read-Evaluate-Print-Loop you get when you type python,
ipython or bpython? You should spend more time in it! This talk
describes development workflows using a REPL and their associated
pitfalls. IPython and bpython features useful for writing, testing,
debugging and using code will be sprinkled throughout.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Ballinger</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/repl-driven-development.html</guid><category>talk</category></item><item><title>Synchronizing Objects to YAML using Black Magic</title><link>https://pyvideo.org/pyohio-2015/synchronizing-objects-to-yaml-using-black-magic.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lately, I've been running into many situations where I'd like to store
program configuration and/or data in version control. YORM was born to
provide automatic, bidirectional, and human-friendly mappings of Python
object attributes to YAML files. In order to explain the inner-workings
of this library, I'll be diving into some of the less common features of
Python that I learned along the way.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jace Browning</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/synchronizing-objects-to-yaml-using-black-magic.html</guid><category>talk</category></item><item><title>Testing the Database Layer: typical problems &amp; best practices</title><link>https://pyvideo.org/pyohio-2015/testing-the-database-layer-typical-problems-be.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will cover typical problems and best practices for testing the
database layer of Python applications. We will also cover using
factories vs fixtures for loading test data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Randy Syring</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/testing-the-database-layer-typical-problems-be.html</guid><category>talk</category></item><item><title>The Well Tempered API</title><link>https://pyvideo.org/pyohio-2015/the-well-tempered-api.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I can play 400 year old music, but I can't open a Word document from
1990. Centuries ago, a revolution in music enabled compositions to last
for centuries with no bit rot. There are innumerable parallels between
music and software, why don't our programs last longer? Software
Engineering has some things to learn from the parallel world of music.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">K Lars Lohn</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/the-well-tempered-api.html</guid><category>talk</category></item><item><title>Typing better and potentially faster with python</title><link>https://pyvideo.org/pyohio-2015/typing-better-and-potentially-faster-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We'll explore areas outside QWERTY keyboard layout most of us are born
into. And we'll build tools to help us expand that (layout) universe and
understand it better using python. We'll go over my history of creating
and using my custom keyboard layout (dvorak variant), how I designed and
improved it over time, and how I confidently know it's better for me.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jamiel Almeida</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/typing-better-and-potentially-faster-with-python.html</guid><category>talk</category></item><item><title>Why You Can't Sit With Us - Understanding Network Analysis in Python With Mean Girls</title><link>https://pyvideo.org/pyohio-2015/why-you-cant-sit-with-us-understanding-network.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Network analysis is a handy tool used to understand group dynamics,
provide product recommendations, and prevent homicides (and other
things). This talk will introduce the theory behind network analysis and
showcase the flexibility of Python's NetworkX library. No knowledge of
network analysis (or Mean Girls) is needed, but basic knowledge of
Python and the iPython Notebook, will be helpful.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Harris</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/why-you-cant-sit-with-us-understanding-network.html</guid><category>talk</category></item><item><title>A Calendar for Mars</title><link>https://pyvideo.org/pyohio-2015/a-calendar-for-mars.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A discussion of Martian timekeeping and using Python to create a Single
Page Application about a calendar for mars using Flask, Twitter
Bootstrap, and Backbone.js.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Roche</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/a-calendar-for-mars.html</guid><category>talk</category></item><item><title>Art and Science With Six Million Timelapse Images and Python</title><link>https://pyvideo.org/pyohio-2015/art-and-science-with-six-million-timelapse-images.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I have been taking a picture every 10 seconds out my window for two
years. This talk explores all the cool things you can do with almost 4
Terabytes of images to make art and demonstrate science. We'll touch on
everything from pillow, pyephem, Django, Celery, and OpenCV.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Floehr</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/art-and-science-with-six-million-timelapse-images.html</guid><category>talk</category></item><item><title>Automating Your Browser and Desktop Apps</title><link>https://pyvideo.org/pyohio-2015/automating-your-browser-and-desktop-apps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's a lot of data on the web and in your desktop apps, but accessing
it can involve a lot of tedious typing and clicking. In this talk Al
Sweigart explains web scraping techniques and programmatically
controlling the keyboard and mouse to automate these tasks for you.
Covers the Selenium and PyAutoGUI modules.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Al Sweigart</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/automating-your-browser-and-desktop-apps.html</guid><category>talk</category></item><item><title>Best Practices for Python Scripting</title><link>https://pyvideo.org/pyohio-2015/best-practices-for-python-scripting.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python REPL is an amazing tool for exploring a problem and quickly
finding an answer. But how do you turn that &amp;quot;quick and dirty&amp;quot; snippet
into an elegant, reusable module? In this talk, you'll learn how to
isolate input, output, configuration options and more from your core
logic to transform that block of code into a package and script that
behave well in command line environments.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Back</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/best-practices-for-python-scripting.html</guid><category>talk</category></item><item><title>Coroutines, Async/Await, Asyncio and the Pulsar Library</title><link>https://pyvideo.org/pyohio-2015/coroutines-asyncawait-asyncio-and-the-pulsar-l.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will discuss the past benefits of using gevent, greenlet and twisted
and how asyncio acts as a new solution in Python 3. This talk will focus
on the new async/await features for Python 3.5, as well as the Pulsar
library, a powerful coroutine library that builds on asyncio coroutines.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David J Felix</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/coroutines-asyncawait-asyncio-and-the-pulsar-l.html</guid><category>talk</category></item><item><title>Data Science: It's Easy as Pyǃ</title><link>https://pyvideo.org/pyohio-2015/data-science-its-easy-as-py.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the last several years, many amazing Python projects have been
created for working with data, making Python one of the top languages
for data scientists. In this talk, I'll cover all five stages of the
OSEMN data science process, and several Python libraries that can be
used at each stage. To demo, I'll illustrate the creation of a language
classification algorithm, using Wikipedia articles.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Becker</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/data-science-its-easy-as-py.html</guid><category>talk</category></item><item><title>Filling the Flask</title><link>https://pyvideo.org/pyohio-2015/filling-the-flask.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Just because Flask is a micro-framework doesn’t mean we still don’t want
to have great AAA (authentication, authorization, and accounting), email
services, simplified database access/migrations and form handling. Lets
look at some of the most common libraries used to build the powerful
simplicity of Flask into a full featured web application without having
to reinvent the wheel each time.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Myers</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/filling-the-flask.html</guid><category>talk</category></item><item><title>From Synchronous to Asynchronous Postgres with Tornado</title><link>https://pyvideo.org/pyohio-2015/from-synchronous-to-asynchronous-postgres-with-to.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;During my talk two years ago &amp;quot;ORM vs SQL Roundup&amp;quot; I concluded with some
simple ways to do Object Relationship mapping without the heavy overhead
of a full featured ORM. This talk will show how I transformed the code
to work asynchronously.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Robellard</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/from-synchronous-to-asynchronous-postgres-with-to.html</guid><category>talk</category></item><item><title>How I built a power debugger out of the standard library and things I found on the internet</title><link>https://pyvideo.org/pyohio-2015/how-i-built-a-power-debugger-out-of-the-standard.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Smiley spys on your application, recording everything it does, using
Python's built-in tracing facility and a database to create a complete
record of your program's runtime so you can study it. Most of the tools
I used to create Smiley are in Python's standard library, and the
history of Smiley's development serves as a framework to discuss those
tools and how you can tap their power yourself.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Doug Hellmann</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/how-i-built-a-power-debugger-out-of-the-standard.html</guid><category>talk</category></item><item><title>How I learned Python while working at Eventbrite</title><link>https://pyvideo.org/pyohio-2015/how-i-learned-python-while-working-at-eventbrite.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How do you learn a new tech stack while shipping code at the same time?
When I joined Eventbrite I knew Java and Ruby (and don't ask me to
program in either of those anymore, I don't remember). I'll give some
tips and strategies while saying what worked -- and didn't -- for me
when I was learning Django at Eventbrite.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allison Lacker</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/how-i-learned-python-while-working-at-eventbrite.html</guid><category>talk</category></item><item><title>How I taught my dog to text me selfies</title><link>https://pyvideo.org/pyohio-2015/how-i-taught-my-dog-to-text-me-selfies.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you want to get into hardware hacking but don't want to learn a new
language, this talk's for you. The Arduino Yun is Wifi enabled and comes
with Python installed. Using Python, Twilio, a webcam and a big red
button, I taught my dog how to send selfies. In this talk, we'll live
code the solution from beginning to end.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Baugues</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/how-i-taught-my-dog-to-text-me-selfies.html</guid><category>talk</category></item><item><title>How to be a good mentor</title><link>https://pyvideo.org/pyohio-2015/how-to-be-a-good-mentor.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I've been lucky enough to work with a team of 15 engineers and every
single one of them has been a mentor to me formally or informally. What
makes a great mentor? How can you encourage people to stay in the field
and help them to become better engineers. When your junior developers
are better your whole team benefits.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Liz Tom</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/how-to-be-a-good-mentor.html</guid><category>talk</category></item><item><title>Is that spam in my ham? A novice's inquiry into classification.</title><link>https://pyvideo.org/pyohio-2015/is-that-spam-in-my-ham-a-novices-inquiry-into-c.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Supervised learning, machine learning, classifiers!&lt;/strong&gt; &lt;em&gt;Help?&lt;/em&gt; In this
talk I define a problem, identifying an email as spam, from the
perspective of a beginner and show how Python can help us learn to
classify. We will translate knowing spam &amp;quot;when I see it&amp;quot; into a basic
model and use a Naive Bayes classifier to determine if email is spam. We
will train our classifier with examples and practice!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lorena Mesa</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/is-that-spam-in-my-ham-a-novices-inquiry-into-c.html</guid><category>talk</category></item><item><title>Open-Source Society (PyOhio 2015 keynote)</title><link>https://pyvideo.org/pyohio-2015/keynote-by-catherine-devlin.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Open-source developers don't just build software - we also build ways to
work cooperatively. We can serve as a laboratory of cooperation that
develops and demonstrate cooperative tools, techniques, and attitudes
that will have a huge benefit to the world outside software, helping
human society scale more effectively than it ever has.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catherine Devlin</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/keynote-by-catherine-devlin.html</guid><category>plenary</category></item><item><title>Learning to learn Python</title><link>https://pyvideo.org/pyohio-2015/learning-to-learn-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For those new to programming and Python, the best way to learn the
language can be confusing. However, the web provides many avenues from
MOOCs, learning communities, user groups, books, online tutorials, and
Q&amp;amp;A sites to begin learning and build skills. What path should you take
as a solo learner? This talk will provide an overview of places to get
started and strategies to learn smarter. .&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ann Schoenenberger</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/learning-to-learn-python.html</guid><category>talk</category></item><item><title>**Lightning talks!**</title><link>https://pyvideo.org/pyohio-2015/lightning-talks-15.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/lightning-talks-15.html</guid><category>lightning talks</category></item><item><title>Name Things Once</title><link>https://pyvideo.org/pyohio-2015/name-things-once.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Naming things is hard so you should do as little of it as possible. Your
coworkers will thank you for it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jack Diederich</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/name-things-once.html</guid><category>talk</category></item><item><title>Network Automation using Ansible and Python</title><link>https://pyvideo.org/pyohio-2015/network-automation-using-ansible-and-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session will look at some of the ways that network infrastructure
can be managed in an automated way using Ansible and Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Oswalt</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/network-automation-using-ansible-and-python.html</guid><category>talk</category></item><item><title>Pandas Dataframes At The Cinema</title><link>https://pyvideo.org/pyohio-2015/pandas-dataframes-at-the-cinema.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using data from the Internet Movie Database, students will use the
Pandas data analysis library to search the data and answer questions
about it. This will be a more focused version of the tutorial I gave at
PyCon this year, with an emphasis on demonstrations that get the
students ready to go home and work on the several hours' worth of fun
exercises that the full tutorial includes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/pandas-dataframes-at-the-cinema.html</guid><category>talk</category></item><item><title>Python as the multitool of data science</title><link>https://pyvideo.org/pyohio-2015/python-as-the-multitool-of-data-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has lead the way in making data science more accessible with a
number of solid data driven libraries. This talk will be a high
introduction to familiarize people interested in data science with some
of the more common Python tools such as pandas for data munging and
analysis, numpy for scientific computing, scikit-learn for machine
learning and matplotlib for visualizing your data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Derik Pell</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/python-as-the-multitool-of-data-science.html</guid><category>talk</category></item><item><title>Simple Games for Python Beginners</title><link>https://pyvideo.org/pyohio-2015/simple-games-for-python-beginners.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This class is designed for enthusiasts just starting out with Python. We
will design and build a simple game and, along the way, learn about
various statements and data structures in Python. If you can write and
run &amp;quot;hello, world!&amp;quot; but don't know what to do next, this class is for
you! Note that this is not a class on pyGame.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Lindstrom</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/simple-games-for-python-beginners.html</guid><category>talk</category></item><item><title>Stumbling blocks of a Python newbie</title><link>https://pyvideo.org/pyohio-2015/stumbling-blocks-of-a-python-newbie.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In our PyLadies study group the training resources we’ve used have
common stumbling blocks which can make learning difficult for the
beginner. We will provide suggestions on how to overcome these
challenges and to increase the success of learners.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amy Hubbard</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/stumbling-blocks-of-a-python-newbie.html</guid><category>talk</category></item><item><title>Super Intermediate Python 3</title><link>https://pyvideo.org/pyohio-2015/super-intermediate-python-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is a follow up of my 2013 Super Advanced Python talk, but now
will be much more focused on functional programming and data
transformation. We will deep dive into the wonders of functional
programming with Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raymond Chandler III</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/super-intermediate-python-3.html</guid><category>talk</category></item><item><title>Teaching a Computer to Fight Itself (Implementing an OGRE AI)</title><link>https://pyvideo.org/pyohio-2015/teaching-a-computer-to-fight-itself-implementing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OGRE is an asymmetric board game pitting a futuristic fighting force of
infantry and armor against a single, massive, artificially intelligent
cyber tank. Figuring out a winning strategy was difficult, so I taught
my computer how to play the game, and learn to play it better using
Python.&lt;/p&gt;
&lt;p&gt;Source code available at: &lt;a class="reference external" href="https://github.com/gar0u/ogre-ai"&gt;https://github.com/gar0u/ogre-ai&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">William Hutton</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/teaching-a-computer-to-fight-itself-implementing.html</guid><category>talk</category></item><item><title>Using Python to Get Out the Vote</title><link>https://pyvideo.org/pyohio-2015/using-python-to-get-out-the-vote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will explore how I used Python to power the get-out-the-vote
campaign for a local school levy ballot issue—saving thousands of
consulting dollars along the way. We’ll talk about fusing and
normalizing available data sources, reading and writing CSV files, and
data modeling and querying using SQLAlchemy.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Pirnat</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/using-python-to-get-out-the-vote.html</guid><category>talk</category></item><item><title>You Gotta Want It: Building Up Women in Computer Science</title><link>https://pyvideo.org/pyohio-2015/you-gotta-want-it-building-up-women-in-computer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tech's diversity problem is well-known, and college communities are no
exception. This is the story of building up Case Western's women in
computer science community over a year, and how to apply the same
strategies to your own company or community.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephanie Hippo</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/you-gotta-want-it-building-up-women-in-computer.html</guid><category>talk</category></item></channel></rss>