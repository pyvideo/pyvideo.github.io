<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 04 May 2019 11:30:00 +0000</lastBuildDate><item><title>Intentional Deployment: Best Practices for Feature Flag Management</title><link>https://pyvideo.org/pytexas-2019/intentional-deployment-best-practices-for-feature-flag-management.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Feature flags can be powerful tools in mitigating risk in your development cycle: if you use them correctly. In 2012 one improperly deployed feature flag sent a $365 million dollar trading company into bankruptcy in about 45 minutes. So let's talk about how to manage and use feature flags in Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caitlin Rubin</dc:creator><pubDate>Sat, 13 Apr 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-04-13:pytexas-2019/intentional-deployment-best-practices-for-feature-flag-management.html</guid><category>deployment</category><category>feature flag management</category></item><item><title>Intentional Deployment: Best Practices for Feature Flag Management</title><link>https://pyvideo.org/pycon-us-2019/intentional-deployment-best-practices-for-feature-flag-management.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Feature flags can be powerful tools in mitigating risk in your
development cycle — &lt;em&gt;if you use them correctly&lt;/em&gt;. Failing to do so can
have enormous consequences for yourself and your business. In 2012 one
improperly deployed feature flag sent a $365 million company into
bankruptcy in 45 minutes. So let’s talk about feature flags,
specifically in how they can help us with intentional deployment.
Feature flags give us a high degree of control over the features we
release — but what ensures we have a high degree of control over our
feature flags?&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;In this talk, I’ll go over the best practices which will make your
feature flagging program a success. The humble Feature Flag can
transform into many different things: release toggle, experiment, kill
switch, permissioning and more. I’ll talk briefly about the
possibilities Feature Flags open up, and then describe how to use best
practices of visibility and accountability to align those different
flags into a cohesive feature flagging system.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;After this talk, you’ll know what best practices make a successful
feature flagging program, and be able to implement them into your
current solution to deploy faster and with less risk.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caitlin Rubin</dc:creator><pubDate>Sat, 04 May 2019 11:30:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-04:pycon-us-2019/intentional-deployment-best-practices-for-feature-flag-management.html</guid><category>talk</category></item></channel></rss>