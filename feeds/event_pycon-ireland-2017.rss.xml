<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 21 Oct 2017 00:00:00 +0000</lastBuildDate><item><title>A Django project template for a RESTful Application using Docker</title><link>https://pyvideo.org/pycon-ireland-2017/a-django-project-template-for-a-restful-application-using-docker.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presenting a template ready to use for a simple Django application in a Docker container environment. The code is available here &lt;a class="reference external" href="https://github.com/jaimebuelta/django-docker-template"&gt;https://github.com/jaimebuelta/django-docker-template&lt;/a&gt; and the talk will walk through some of the caveats and tricks of working in a useful Docker environment.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jaime Buelta</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/a-django-project-template-for-a-restful-application-using-docker.html</guid></item><item><title>About Snakes, Gophers, Ducks and Camels</title><link>https://pyvideo.org/pycon-ireland-2017/about-snakes-gophers-ducks-and-camels.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Especially in the world of microservices - where applications are part of the same machinery, yet able to work independently - we can leverage the fact that different programming languages have different strengths to the fullest and harness them without yielding conflicts. Neither technical ones, nor interpersonal ones. This talk is not just a comparison of two languages. At its core it is an introduction to some of the concepts of Golang for the Python enthusiast who is willing to see and use the benefits of each. It is not here to change your opinion of Python; it is here to (perhaps) give you a new perspective on software development and show you how diversity is important not just amongst humans but also amongst codebases.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Rieger</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/about-snakes-gophers-ducks-and-camels.html</guid></item><item><title>Convolution Neural Networks for Legal Text Analytics</title><link>https://pyvideo.org/pycon-ireland-2017/convolution-neural-networks-for-legal-text-analytics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Convolution Neural Networks are a neural network architecture which has been applied with great success in the fields of image processing and neural machine translation. Practitioners and researchers have recently begun applying them to other general natural language processing applications. The convolution layers in a neural network operate by passing a kernel transformation over adjacent features such as words or pixels. This enables the convolution layer to 'learn' features such as expressions where the meaning of a phrase is dependant upon its context. Stacking multiple convolution layers enables the network to detect higher order features which further processing such as a densely connected feed forward layer can use for purposes such as classification of sentiment, legal context, etc..&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Dineen</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/convolution-neural-networks-for-legal-text-analytics.html</guid></item><item><title>Data Anonymization</title><link>https://pyvideo.org/pycon-ireland-2017/data-anonymization.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Today’s data contains personally identifiable information (PII), which has to be protected. The protection methods include strong encryption, authentication and authorization, and anonymization. The latter, the data anonymization, removes or modifies sensitive data in an irreversible transformation, preserving sufficient data characteristics to enable analysis, aggregations and evaluation while protecting privacy. In our talk we will discuss using two modules: faker and mimesis, for anonymizing customer data. The primarily goal of both modules is producing synthetic data for development and quality assurance. However, the modules can be used for anonymizing data sets, preserving data characteristics, such as uniqueness and consistency. The data formats of, for example, email addresses, urls, dates, are also preserved&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bartlomiej Uscilowski</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/data-anonymization.html</guid><category>faker</category><category>mimesis</category></item><item><title>Discrete Event Simulation</title><link>https://pyvideo.org/pycon-ireland-2017/discrete-event-simulation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many real-world processes that need to be modeled contain stochastic elements. A variety of mathematical tools is available to model simple processes analytically, However, when things get more complicated we need to fall back on to Monte Carlo simulations. SimPy is a package that uses generators to model discrete, time-based processes, such as queueing systems, financial markets and network protocols. By simulating a process or scenario a significant number of times, we can inspect possibilities of failure, expected utilization rates, targets aimed for in the healthcare industry and how changes we make in the decisions for our processes impact these performance indicators. In the talk, we use the running example of alien UFO factories, where we assume the role of factory manager and need to make decisions on hiring staff, the equipment that we need in our processing pipeline, the contracts with our customers and the actual location of our new factory. Some choices cost less money but are less efficient or introduce higher risks, and dependencies between the different parts of the process make it difficult to oversee the impact of our choices. After showcasing the scenario, we will add these concepts one by one in our SimPy model and link them to discrete event simulation theory. After the implementation, we can gather insights on the risks and the profits and make an informed decision on our factory. This talk is aimed at people interested in Monte Carlo simulation, stochastic optimization, Operations Research, statistics, UFOs or an innovative way of using Python generators.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan van der Vegt</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/discrete-event-simulation.html</guid></item><item><title>Django and GraphQL</title><link>https://pyvideo.org/pycon-ireland-2017/django-and-graphql.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a new alternative to REST API. GraphQL. GraphQL has been created by Facebook in 2012 and since then is being used by big companies like Facebook itself, Github, Shopify and so on. In this talk I'd like to explain why we need an alternative to REST APIs and why GraphQL is that alternative. Also we will see how to use GraphQL with Django and how to use it for non trivial applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Arminio</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/django-and-graphql.html</guid><category>graphql</category></item><item><title>Django, from nightmare to dream, with good tools</title><link>https://pyvideo.org/pycon-ireland-2017/django-from-nightmare-to-dream-with-good-tools.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Maybe it's your life, imagine you are hired for a new job with a new dev team and they develop with Django, but they don't know the right tools for the development with Django. This talk is for you, from a legacy code with no tests, no documentation, no code coverage, I will show you some tools they can help you with this legacy code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/django-from-nightmare-to-dream-with-good-tools.html</guid><category>dev-server</category><category>profiling</category><category>tests</category><category>sentry</category></item><item><title>Fun with WebSocket and Flask</title><link>https://pyvideo.org/pycon-ireland-2017/fun-with-websocket-and-flask.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;WebSocket enables a web server to establish dedicated connections with clients, on which raw data can flow at any time and in any direction, free of the request/response cycle and the &amp;quot;chattiness&amp;quot; of the HTTP protocol. Paired with a high-level protocol such as Socket.IO, you get a powerful and easy to use framework for bi-directional, low latency communication, with clients available for Python, JavaScript, Java, iOS, Android, C++, .Net and more. Flask is a lightweight and very popular web framework for Python that makes writing web servers easy and fun, without sacrificing any power. What happens when you combine WebSocket, Socket.IO and Flask? In this talk I'm going to show you some of the cool applications that you can build when these technologies are put to work together, including streaming audio and video, real-time sensor data, automatic voting and more!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miguel Grinberg</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/fun-with-websocket-and-flask.html</guid><category>webSocket</category><category>flask</category></item><item><title>Getting started with Django's Authentication System</title><link>https://pyvideo.org/pycon-ireland-2017/getting-started-with-djangos-authentication-system.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django’s authentication system is great out of the box, and very useful when we want to manage users logging into our web apps. But, since it’s all set up for us automatically when we create our new Django project, sometimes it can be a little mysterious.&lt;/p&gt;
&lt;p&gt;I’ll clear up some of its mysteries by going over each aspect of authentication in Django and give tips on how to better utilize it for web applications. The authentication package has three main aspects: Users, Groups, and Permissions, along with some authentication middleware to tie it all together.&lt;/p&gt;
&lt;p&gt;First I’ll cover Django’s User model, which is the core of the authentication package. I’ll explain how it interacts with the web app, and I’ll even give a few tips on how it can be customized.&lt;/p&gt;
&lt;p&gt;Then I’ll talk about Groups, and how they interact with the User model. I’ll give some tips on how to manage users in web apps based on groups to get the most out of them.&lt;/p&gt;
&lt;p&gt;Then I’ll cover permissions, which relate to how users can interact with the web app. I’ll go over some examples for how to use the default permissions, how to set up custom permissions, and how this is particularly used in the Django admin panel.&lt;/p&gt;
&lt;p&gt;Finally, I’ll talk about Django’s authentication middleware, and how users are authenticated throughout the app. I’ll cover examples for how users get sent through requests, and how to handle logic surrounding authentication in Django’s views and templates.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julia Looney</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/getting-started-with-djangos-authentication-system.html</guid></item><item><title>How to make a Lisp</title><link>https://pyvideo.org/pycon-ireland-2017/how-to-make-a-lisp.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I'll take the unusual step of discussing a language other than Python. I'll present Áireamhán, a small Lisp-like language that I built (in Python of course), that is, as far as I know, the first and only programming language &lt;em&gt;as Gaeilge&lt;/em&gt;. I'll cover some of the core ideas in language design; lexing, parsing, tokenization, with an emphasis on how you can compactly implement these in Python to build your own language. I'll also discuss the features of Lisp (and Áireamhán), and how these functional programming primitives give us a really powerful framework for computation that inspired some of the parts of Python that we all know and love.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Neal Ó Riain</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/how-to-make-a-lisp.html</guid><category>lisp</category></item><item><title>Interacting with C and Rust using CFFI</title><link>https://pyvideo.org/pycon-ireland-2017/interacting-with-c-and-rust-using-cffi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of Python's main advantages has always been its ability to expose external libraries to Python code very easily, however, writing wrappers around these libraries has always been a pain point that CFFI aims to address. CFFI allows you to call code written in other programming languages without having to write anything other than Python code, it is famous for being able to call C code but is also able to call code written in other languages like Rust and Go. This talk will go over the advantages of using CFFI as opposed to the other ways of calling external libraries in Python (such as writing C extensions) and showcase more advanced ways of using CFFI to improve PyPy's compatibility with Python modules.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Romain Guillebert</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/interacting-with-c-and-rust-using-cffi.html</guid><category>rust</category></item><item><title>Lightning Talks</title><link>https://pyvideo.org/pycon-ireland-2017/lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;table border="1" class="colwidths-given docutils"&gt;
&lt;caption&gt;Lightning Talks&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="10%" /&gt;
&lt;col width="30%" /&gt;
&lt;col width="60%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Time&lt;/th&gt;
&lt;th class="head"&gt;Speaker&lt;/th&gt;
&lt;th class="head"&gt;Title&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Kxn3xXvBjqw&amp;amp;t=00m00s"&gt;00:00&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Stephane&lt;/td&gt;
&lt;td&gt;Python debugger&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Kxn3xXvBjqw&amp;amp;t=04m55s"&gt;04:55&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Larry Hastings&lt;/td&gt;
&lt;td&gt;Pyweek&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Kxn3xXvBjqw&amp;amp;t=08m12s"&gt;08:12&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Jaime Buelta&lt;/td&gt;
&lt;td&gt;ffind&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Kxn3xXvBjqw&amp;amp;t=10m12s"&gt;10:12&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Przemyslaw Pietrzak&lt;/td&gt;
&lt;td&gt;Monadic Error Handling in Python&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Kxn3xXvBjqw&amp;amp;t=15m28s"&gt;15:28&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Jacobo de Vera&lt;/td&gt;
&lt;td&gt;A surreptitious injection of Python at work&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Kxn3xXvBjqw&amp;amp;t=20m38s"&gt;20:38&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Lilly Ryan&lt;/td&gt;
&lt;td&gt;Towns I wish I Could Visit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Kxn3xXvBjqw&amp;amp;t=24m38s"&gt;24:38&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Pycon Italy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Kxn3xXvBjqw&amp;amp;t=25m22s"&gt;25:22&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;NodeRed with python&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Kxn3xXvBjqw&amp;amp;t=31m22s"&gt;31:22&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Max&lt;/td&gt;
&lt;td&gt;pilgrim logger (in micropython)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Larry Hastings</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/lightning-talks.html</guid><category>lightning talks</category></item><item><title>MicroPython: The Next Step to World Domination</title><link>https://pyvideo.org/pycon-ireland-2017/micropython-the-next-step-to-world-domination.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the availability of a competent open source Python implementation for microcontrollers, suddenly Python became a first-class player in the Internet of Things. This talk describes with code examples what is possible in MicroPython, the range of devices on which it is implemented, the hardware it can connect to and the emerging ecosystems designed to support the Internet of Things.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Holden</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/micropython-the-next-step-to-world-domination.html</guid><category>micropython</category></item><item><title>Microservices: Death by a Thousand Cuts</title><link>https://pyvideo.org/pycon-ireland-2017/microservices-death-by-a-thousand-cuts.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every one loves micro services as the great new... Small single purpose services are great for quick development and rapid releases. But if not managed well, it turns into death by a thousand cuts. In this talk I will go through strategies for managing the resulting complexity from a micro-services layout. The core tenets beings, automation, monitoring and discovery.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vishal Vatsa</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/microservices-death-by-a-thousand-cuts.html</guid><category>microservices</category></item><item><title>Pico: Rethinking how we build HTTP APIs</title><link>https://pyvideo.org/pycon-ireland-2017/pico-rethinking-how-we-build-http-apis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python universe is overflowing with web frameworks, from full featured batteries included frameworks like Django to micro frameworks like Bottle or Flask. They each have their own specific features but in the end they are all very similar in their core functionality of processing requests and generating responses. In this talk I will discuss why I felt the need to create yet another framework, a pico framework, that specifically focuses on the task of building HTTP based APIs for the web. Pico, as it is aptly called, doesn't do templating, ORM, custom routing, authentication, validation, caching, or a million other things. Instead it helps you write clean APIs using simple functions and modules with minimal boilerplate. Pico is both opinionated and flexible in equal measures so you can focus on what matters; your API logic. Pico helps you to write code that that is simple to get started, trivial to test, and easy to maintain as your project grows. APIs built with Pico are self describing so client code can automatically/dynamically be created. Pico includes both a Python &amp;amp; Javascript client but it is also very simple to interact with your API with plain old cURL/Requests/jQuery/etc. It is just a HTTP API after all. Having recently released Pico 2.0, this talk will outline the evolution of this framework over the past 7 years and discuss some lessons learnt along the way about building HTTP APIs and frameworks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fergal Walsh</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/pico-rethinking-how-we-build-http-apis.html</guid><category>pico</category><category>api framework</category></item><item><title>Predicting the past</title><link>https://pyvideo.org/pycon-ireland-2017/predicting-the-past.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I would like to present basic techniques in counter-factual predictions that are used for uplift analysis in marketing. The idea is to use time series prediction models to predict the past after certain intervention date (our marketing action) and compare what would have happened to what actually happened. With some basic black magic trickery (statistics) we can then draw conclusions about effectiveness of the marketing intervention. This basic talk would cover using simple off the shelf tools (fbprophet) and ML techniques.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Piotr Milian</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/predicting-the-past.html</guid><category>fbprophet</category><category>machine learning</category></item><item><title>Protecting Your Users from Change: Pythonic Refactoring</title><link>https://pyvideo.org/pycon-ireland-2017/protecting-your-users-from-change-pythonic-refactoring.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So you've released a library! Now you need to maintain it. You want to add features, restructure the code, fix bugs, and maybe improve the library's usability. Your users just want their code to carry on working. That's okay! This talk will cover techniques in both code and project management to allow you to keep your code moving forwards without breaking your users' code. It is aimed at developers with a little experience of writing libraries in Python, and will cover some intermediate subjects like function decorators and magic methods.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Smith</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/protecting-your-users-from-change-pythonic-refactoring.html</guid><category>refactoring</category></item><item><title>Recruitment Session</title><link>https://pyvideo.org/pycon-ireland-2017/recruitment-session.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/recruitment-session.html</guid></item><item><title>Rewrite</title><link>https://pyvideo.org/pycon-ireland-2017/rewrite.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Software rewrites. Are they a good idea. What are the best strategies? How do you avoid common mistakes? RapidRatings have rewritten most of their infrastructure over the last 4 years and will share the lessons they have learned.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Lawless</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/rewrite.html</guid><category>keynote</category></item><item><title>Star Wars: A Social Network Analysis</title><link>https://pyvideo.org/pycon-ireland-2017/star-wars-a-social-network-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An introductory talk for anyone interested in learning what social network analysis is, and how to conduct their own network analysis using the Python package NetworkX (&lt;a class="reference external" href="https://networkx.github.io/"&gt;https://networkx.github.io/&lt;/a&gt;). In particular, I will focus on using character co-occurrences extracted from the scripts of Star Wars and will demonstrate how to build a directed network from them, calculate basic network metrics, and describe the relevance of each of these metrics in the context of our Star Wars dataset.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Siobhán Grayson</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/star-wars-a-social-network-analysis.html</guid></item><item><title>Testing in Django</title><link>https://pyvideo.org/pycon-ireland-2017/testing-in-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Django documentation section on testing starts with this: “Automated testing is an extremely useful bug-killing tool for the modern Web developer.” Nobody can argue with that. Testing is an integral part of modern software development, and Ana’s talk will offer an in-depth overview of how the Django testing framework evolved; showcase some common techniques, tools, and best practices; talk about speed improvements; and guide you through a real-world example of testing a Django app. Testing is fun, isn’t it? Previously presented at Django Under the Hood and keynoted recently at DjangoCon US. See video and slides: &lt;a class="reference external" href="http://ana-balica.github.io/talks/"&gt;http://ana-balica.github.io/talks/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ana Balica</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/testing-in-django.html</guid></item><item><title>Text Classification with Word Vectors &amp; Recurrent Neural Networks</title><link>https://pyvideo.org/pycon-ireland-2017/text-classification-with-word-vectors-recurrent-neural-networks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Globally, research teams are reporting dramatic improvements in text classification accuracy and text processing by employing deep neural networks. But what are deep nets? Can you harness these techniques in your own projects? How much training data do you need? What are the libraries required? Do you need a super computer? Do these techniques improving accuracy and are they worth the hassle? In this talk, we'll examine some basic neural architectures for text classification, we'll run through how to use the Python Keras library for classification, and speak a little about our experience in using these techniques.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shane Lynn</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/text-classification-with-word-vectors-recurrent-neural-networks.html</guid><category>keras</category></item><item><title>The Different Roads We Take</title><link>https://pyvideo.org/pycon-ireland-2017/the-different-roads-we-take.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We’ve all taken different routes to get to where we are today, and we’re not all currently on the same road going the same place. Tracy Osborn will talk about the idea of the “Python engineer,” her (long and full of bumps and potholes) journey to learning and teaching Python, and the harmful myths about learning programming and the paths available when you do so.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tracy Osborn</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/the-different-roads-we-take.html</guid><category>keynote</category></item><item><title>The Lightning Memory-Mapped Database</title><link>https://pyvideo.org/pycon-ireland-2017/the-lightning-memory-mapped-database.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Lightning Memory-Mapped Database (LMDB) was introduced at LDAPCon 2011 and has been enjoying tremendous success in the intervening time. LMDB was written for the OpenLDAP Project and has proved to be the world’s smallest, fastest, and most reliable transactional embedded data store. It has cemented OpenLDAP’s position as world’s fastest directory server, and its adoption outside the OpenLDAP Project continues to grow, with a wide range of applications including big data services, crypto-currencies, machine learning, and many others. The talk will cover highlights of the LMDB design as well as the impact of LMDB on other projects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Howard Chu</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/the-lightning-memory-mapped-database.html</guid><category>lmdb</category></item><item><title>Two approaches to scale your processing, Task Queues and Workflows</title><link>https://pyvideo.org/pycon-ireland-2017/two-approaches-to-scale-your-processing-task-queues-and-workflows.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk covers two useful libraries/approaches to scaling your processing. Task Queues will be introduced, Celery will be covered and a specific example of a refactoring of a sequential crawler to highlight the ease and utility of this library. Workflows will then be covered, Airflow will be introduced, in the context of more complex tasks with requirements plus dependencies, building on how tasks as the atomic unit can be woven together to support complex business / app requirements as Workflows. The theme linking both aspects is the need to provide a reliable async fabric (Celery + Rabbitmq) only provides part of a solution for more complex problems, hence the need to use Airflow (with Celery executors) to provide the additional smarts / logic necessary to solve them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eoin Brazil</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/two-approaches-to-scale-your-processing-task-queues-and-workflows.html</guid><category>airflow</category><category>celery</category></item><item><title>Understanding Customer Intent at Scale in an e-commerce Platform</title><link>https://pyvideo.org/pycon-ireland-2017/understanding-customer-intent-at-scale-in-an-e-commerce-platform.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Zalando is an European Fashion platform with a yearly revenue of ~3.6 Billion Euro. We have more than 20Million active customers and more than 200 Million visits per month. Our tech department has around 1700 people across 3 different countries. Operating in Germany is very interesting from a data protection point of view (specially for products like this) In this talk we present a technical overview of customer intent; a product that assigns a state (exploring, gathering, comparing or deciding) to each customer at any given point in their customer journey in the Zalando shop. We will introduce the problem of customer intent and briefly present our unsupervised approach to solve this model which uses a Hidden Markov Models algorithm. During this talk, we will explain the main challenges we faced on each of the steps when building, and the lessons learned from building this product from an engineering perspective. We will introduce our architecture, the reason behind using PySpark to build our product and how we made extensive use of Apache Zeppelin notebooks and branch-specific deployments in AWS EMR clusters for early experimentation. We will then show how we rewrote parts of the Python HMMLearn library using PySpark to achieve almost linear scalability. Finally, we will explain our use of AWS Data Pipelines to run daily jobs for both feature creation and scoring Zalando customers across 6 different countries, and how we support our product being used by several personalization products in different contexts.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Humberto Corona</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/understanding-customer-intent-at-scale-in-an-e-commerce-platform.html</guid></item><item><title>Understanding Natural Language using Word Vectors</title><link>https://pyvideo.org/pycon-ireland-2017/understanding-natural-language-using-word-vectors.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is an introduction to word vectors, a.k.a. word embeddings, a family of Natural Language Processing (NLP) algorithms where words are mapped to vectors. An important property of these vector is being able to capture semantic relationships, for example: Ireland - Dublin + London = ??? These techniques have been driving important improvements in many NLP applications over the past few years, so the interest around word embeddings is spreading. In this talk, we'll discuss the basic linguistic intuitions behind word embeddings, we'll compare some of the most popular word embedding approaches, from word2vec to fastText, and we'll showcase their use with Python libraries. The aim of the talk is to be approachable for beginners, so the theory is kept to a minimum.&lt;/p&gt;
&lt;p&gt;By attending this talk, you'll be able to learn:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;the core features of word embeddings&lt;/li&gt;
&lt;li&gt;how to choose between different word embedding algorithms&lt;/li&gt;
&lt;li&gt;how to implement word embedding techniques in Python&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/understanding-natural-language-using-word-vectors.html</guid></item><item><title>Using Scikit Learn to Improve Existing Risk Models</title><link>https://pyvideo.org/pycon-ireland-2017/using-scikit-learn-to-improve-existing-risk-models.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using sklearn to improve market risk models&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">PJ Fitzpatrick</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/using-scikit-learn-to-improve-existing-risk-models.html</guid></item><item><title>When bugs bite – why neglecting your edge cases can kill</title><link>https://pyvideo.org/pycon-ireland-2017/when-bugs-bite-why-neglecting-your-edge-cases-can-kill.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Two people died because of a Unicode support error. Another died because of a camera’s inability to distinguish colours from one another, and yet another died because of bad GPS data. Many thousands more deaths could have been prevented by a single variable, if the developers had thought to include it. As software developers, our skills and ideas are increasingly crucial for keeping the world running. We don’t have time to test for, find, and fix all of the bugs. Most bugs are annoying, some bugs allow for sneaky behaviour, but the most innocuous of edge cases can sometimes lead to an actual loss of life. No software ever holds up to contact with reality, but in this talk, Lilly Ryan shows you some of the more extreme consequences of tech debt, and offers guidelines on how your team can more easily identify assumptions and eliminate edge case behaviour when developing software. That boring task hiding in your backlog might just save a life.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lilly Ryan</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/when-bugs-bite-why-neglecting-your-edge-cases-can-kill.html</guid></item><item><title>Writing and deploying serverless Python applications</title><link>https://pyvideo.org/pycon-ireland-2017/writing-and-deploying-serverless-python-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk you’ll learn how to implement and deploy a basic serverless Python application.&lt;/p&gt;
&lt;p&gt;Serverless is a concept that has recently raised to popularity, boosted by the drive to financially optimize usage of computing power in cloud environments while reducing maintenance efforts. The following topics will be covered in this talk:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What is a serverless application?&lt;/li&gt;
&lt;li&gt;What are the benefits of the serverless execution model?&lt;/li&gt;
&lt;li&gt;What is AWS Lambda&lt;/li&gt;
&lt;li&gt;How to implement a basic Python serverless application with AWS Lambda?&lt;/li&gt;
&lt;li&gt;How to implement a serverless Python based Webservice using Zappa&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cesar Cardenas Desales</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/writing-and-deploying-serverless-python-applications.html</guid></item><item><title>You look at it till a solution occurs</title><link>https://pyvideo.org/pycon-ireland-2017/you-look-at-it-till-a-solution-occurs.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/you-look-at-it-till-a-solution-occurs.html</guid></item></channel></rss>