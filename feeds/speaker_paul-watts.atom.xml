<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_paul-watts.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-02-23T00:00:00+00:00</updated><entry><title>Given this, assert that: fluent testing using fixtures and properties</title><link href="https://pyvideo.org/pycascades-2019/given-this-assert-that-fluent-testing-using-fixtures-and-properties.html" rel="alternate"></link><published>2019-02-23T00:00:00+00:00</published><updated>2019-02-23T00:00:00+00:00</updated><author><name>Paul Watts</name></author><id>tag:pyvideo.org,2019-02-23:pycascades-2019/given-this-assert-that-fluent-testing-using-fixtures-and-properties.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's face it, most of us don't write enough tests. Even if we do, our tests require a lot of boilerplate and don't test everything we'd want.&lt;/p&gt;
&lt;p&gt;In this talk we'll learn how to make smaller, more self-descriptive tests by using pytest fixtures and property-based tests using Hypothesis.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/given-this-assert-that-fluent-testing-using-fixtures-and-properties/"&gt;https://2019.pycascades.com/talks/given-this-assert-that-fluent-testing-using-fixtures-and-properties/&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>