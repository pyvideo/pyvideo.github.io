<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - PyCon Italia 2022</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-italia-2022.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-06-03T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Addestramento d'emergenza alla fase di Discovery per sviluppatori frustrati</title><link href="https://pyvideo.org/pycon-italia-2022/addestramento-demergenza-alla-fase-di-discovery-per-sviluppatori-frustrati.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Gabriele Giaccari</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/addestramento-demergenza-alla-fase-di-discovery-per-sviluppatori-frustrati.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Addestramento d’emergenza alla fase di Discovery per sviluppatori
frustrati - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Quante notti avete passato a produrre codice ‘importantissimo’ poi mai
andato in produzione? E la vostra idea di app del secolo che non ha mai
portato a nulla? Quanti soldi buttati per produrre software mai
utilizzato …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Addestramento d’emergenza alla fase di Discovery per sviluppatori
frustrati - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Quante notti avete passato a produrre codice ‘importantissimo’ poi mai
andato in produzione? E la vostra idea di app del secolo che non ha mai
portato a nulla? Quanti soldi buttati per produrre software mai
utilizzato? Troppi. Ma non deve andare per forza così,e la chiave è in
una parola: Discovery! Come programmatori, tutti noi abbiamo provato la
frustrazione di lavorare col massimo dell’impegno su software che poi
nella migliore delle ipotesi non hanno prodotto i risultati sperati, e
nella peggiore non sono neanche mai andati in produzione. Giorni (e
quindi soldi) buttati a realizzare cose che non andavano fatte, a
sviluppare “requisiti” imposti dall’alto senza capirne il contesto.
Usarci come ingranaggi in una fabbrica di funzionalità, invece che come
specialisti di team che puntino a risolvere dei problemi ed avere un
impatto reale sul mondo, è uno spreco senza precedenti. Scrivere codice
nel modo corretto, fare i test, impostare pipeline di Continuous
Integration è solo una parte del nostro lavoro, ma se quel codice in
primis non andava neanche scritto, sarà tutto inutile. Da parecchi anni
ormai sono nate metodologie e strumenti che aiutano a risolvere questo
problema, dal Design Thinking al Lean Startup, l’Impact Mapping o
l’Opportunity Solution Tree. Non è una roba solo da Designer o Product
Manager, gli sviluppatori devono essere i protagonisti di questo
processo cosiddetto di Discovery anche se spesso se ne tengono alla
larga. Questo addestramento è diviso in 3 mini lezioni di 10 minuti, per
definire il contesto, la teoria e la pratica di questa fase, con
l’obiettivo di dare gli strumenti e qualche spunto per iniziare questa
piccola rivoluzione, a livello personale e di team.&lt;/p&gt;
&lt;p&gt;Speaker: Gabriele Giaccari&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="agile"></category><category term="best practice"></category><category term="communication"></category></entry><entry><title>Autenticazione e autorizzazione in salsa microservice</title><link href="https://pyvideo.org/pycon-italia-2022/autenticazione-e-autorizzazione-in-salsa-microservice.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Gianluca Carucci</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/autenticazione-e-autorizzazione-in-salsa-microservice.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Autenticazione e autorizzazione in salsa microservice - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Se partiamo da un monolite è tutto facile: verifichiamo le credenziali
sul database (e/o utilizziamo oauth) e il gioco è fatto. Ma cosa succede
in un mondo distribuito? Chi verifica le credenziali? Come ogni servizio
identifica in modo sicuro …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Autenticazione e autorizzazione in salsa microservice - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Se partiamo da un monolite è tutto facile: verifichiamo le credenziali
sul database (e/o utilizziamo oauth) e il gioco è fatto. Ma cosa succede
in un mondo distribuito? Chi verifica le credenziali? Come ogni servizio
identifica in modo sicuro l’utente e gli assegna i giusti ruoli? Se
partiamo da un monolite è tutto facile: verifichiamo le credenziali sul
database (e/o utilizziamo oauth) e il gioco è fatto. I monoliti sono
semplici e utili in tantissimi casi, ma non sempre. A volte abbiamo
bisogno di una architettura a microservizi, magari con linguaggi e stack
tecnologici differenti. Chi verifica le credenziali? Come ogni servizio
è in grado di identificare in modo sicuro l’utente e assegnargli i
giusti ruoli per poter esaudire le richieste? Queste sono alcune domande
che un sistema distribuito ci impone di valutare. In questo talk
analizzeremo tramite demo e un caso reale e complesso, i diversi modi e
le tecniche per gestire l’autorizzazione e l’autenticazione in un mondo
a microservizi, illustrando pregi e difetti di ogni soluzione. slides:&lt;/p&gt;
&lt;p&gt;Speaker: Gianluca Carucci&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="apis"></category><category term="architecture"></category><category term="authentication"></category><category term="distributed systems"></category><category term="microservices"></category></entry><entry><title>Automate cleaning code in few easy steps!</title><link href="https://pyvideo.org/pycon-italia-2022/automate-cleaning-code-in-few-easy-steps.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Ester Beltrami</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/automate-cleaning-code-in-few-easy-steps.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Automate cleaning code in few easy steps! - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;How annoying is to find out that everything went to hell on the pipeline
because you forgot to run the formatters? Be smart and learn how to set
up automations! Have you ever been in the situation where you …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Automate cleaning code in few easy steps! - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;How annoying is to find out that everything went to hell on the pipeline
because you forgot to run the formatters? Be smart and learn how to set
up automations! Have you ever been in the situation where you check the
pipeline to see if it has finished and you discover it didn’t even start
because you forgot to run formatters and linters locally? or when the
code you’re reading isn’t formatted properly and you’re dying to stop
doing everything you’re doing and fix it once for all this crap? There
are wonderful tools out there to avoid this problem, that runs every
commit or push so you don’t forget anymore! Learn how to configure them
for your needs and more importantly learn why you need them now!!&lt;/p&gt;
&lt;p&gt;Slides available [here](&lt;/p&gt;
&lt;p&gt;Speaker: Ester Beltrami&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="clean code"></category><category term="development"></category></entry><entry><title>Automate creation and deployment using Python, Terraform and GitLab</title><link href="https://pyvideo.org/pycon-italia-2022/automate-creation-and-deployment-using-python-terraform-and-gitlab.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Filippo Morelli</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/automate-creation-and-deployment-using-python-terraform-and-gitlab.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Automate web projects creation, development, test and deployment using
Python, Terraform and GitLab - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;An overview of how, in 20tab, a bunch of intrepid web developers, acting
as consummate DevOps, accomplished the ten year long dream of automating
the creation, test and deployment of their projects, by …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Automate web projects creation, development, test and deployment using
Python, Terraform and GitLab - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;An overview of how, in 20tab, a bunch of intrepid web developers, acting
as consummate DevOps, accomplished the ten year long dream of automating
the creation, test and deployment of their projects, by integrating the
latest CI/CD solutions and technologies into Talos: the almighty company
tool. For over a decade, in 20tab, we worked on improving our company
tool for web projects scaffolding and continuous delivery flow
management. We integrated the latest solutions and technologies to
automate, speed up and strengthen the creation, development, testing and
deployment procedures. In this talk I am going to present in detail
Talos, the result of our latest challenge, and how we managed to harness
Python scripts, cookiecutter templates, Terraform configurations, GitLab
pipelines and Cloud resources.&lt;/p&gt;
&lt;p&gt;Speaker: Filippo Morelli&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="aws"></category><category term="deployment/continuous integration"></category><category term="devops"></category><category term="django"></category></entry><entry><title>Back to Basics: Revisiting Basics with few Tips and Tricks in Python3.10v!</title><link href="https://pyvideo.org/pycon-italia-2022/back-to-basics-revisiting-basics-with-few-tips-and-tricks-in-python310v.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Gaurav Pandey</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/back-to-basics-revisiting-basics-with-few-tips-and-tricks-in-python310v.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Back to Basics: Revisiting Basics with few Tips and Tricks in
Python3.10v! - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;This talk is aimed at NewBie Python Programmers as well as Professional
Python Programmers to revise Python Basics and make fundamentals strong
for NewBie. During this talk, I’ll be revisiting Python Basics …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Back to Basics: Revisiting Basics with few Tips and Tricks in
Python3.10v! - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;This talk is aimed at NewBie Python Programmers as well as Professional
Python Programmers to revise Python Basics and make fundamentals strong
for NewBie. During this talk, I’ll be revisiting Python Basics with a
few Tips and Tricks and what’s new in Python3.10v. This talk is aimed at
NewBie Python Programmers as well as Professional Python Programmers to
revise Python Basics and make fundamentals strong for NewBie with new
end exciting features in Python3.10v. During this talk, I’ll be
revisiting Python Basics with a few Tips and Tricks. The talk is for
little experienced Python 3 programmers who have written a few lines of
code: Python experience is required. You can consider this talk as a
teaser of Python 3 features that you may have never used yet.&lt;/p&gt;
&lt;p&gt;After this talk, I hope you’ll be inspired to use these Tips and Tricks
in Python3.10v and make your fundamentals strong.&lt;/p&gt;
&lt;p&gt;Python3.10v comes with a few new features and for that Python3
fundamentals need to be strong, and in this talk, I’ll be covering
Important Basics on Python, you will learn everything about Python3.10v!&lt;/p&gt;
&lt;p&gt;Python3.10 is pretty simple to understand, but it also comes with a lot
of different code syntax options you can use. In this talk, I’ll be
going to have a look at all of them. We start with the basic syntax and
then move on to all the different syntaxes.&lt;/p&gt;
&lt;p&gt;Speaker: Gaurav Pandey&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="best practice"></category><category term="clean code"></category><category term="debugging"></category><category term="documentation"></category><category term="education"></category></entry><entry><title>Best practices for good(ish) and clean(ish) code</title><link href="https://pyvideo.org/pycon-italia-2022/best-practices-for-goodish-and-cleanish-code.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Ernesto Arbitrio</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/best-practices-for-goodish-and-cleanish-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Best practices for good(ish) and clean(ish) code - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;A famous book introduction says:
&lt;tt class="docutils literal"&gt;The only valid measurement of code quality: WTFs/minute&lt;/tt&gt;. In this
talk I’d like to share my past and current experience on how to write
good and clean code and what …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Best practices for good(ish) and clean(ish) code - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;A famous book introduction says:
&lt;tt class="docutils literal"&gt;The only valid measurement of code quality: WTFs/minute&lt;/tt&gt;. In this
talk I’d like to share my past and current experience on how to write
good and clean code and what to do and not to do to achieve good shape
programs. Sounds interesting uh? Have you ever thought what is the cost
vs revenue of a well written code and of an ugly code? Nowadays, in most
companies, code bases are huge (in terms of lines of code and
complexity) and the number of contributors is also high; this means that
a well shaped code could benefit the company finance and the mental
health of the employees (AKA software engineers).&lt;/p&gt;
&lt;p&gt;Writing clean (and/or good) code requires discipline. This discipline
can be acquired and increased during your job and doing experience with
messy code, but more important is that using discipline, respecting and
following some rules you can achieve elegant and efficient code.&lt;/p&gt;
&lt;p&gt;In this talk I will cover some principles of clean code (they are too
much for 30 minutes): - Meaningful Names - Formatting - Tests and their
importance - Continuous Integration - Code Refactoring - Code Review -
Boundaries&lt;/p&gt;
&lt;p&gt;All the work contained in this talk is mostly inspired by the book
&lt;tt class="docutils literal"&gt;Clean Code - Robert C. Martin (AKA Uncle Bob)&lt;/tt&gt; and the experience I
have made during my current job and the previous one.&lt;/p&gt;
&lt;p&gt;Speaker: Ernesto Arbitrio&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="clean code"></category><category term="deployment/continuous integration"></category><category term="development"></category><category term="testing"></category></entry><entry><title>Boost your motivation by organizing your workspace with plants</title><link href="https://pyvideo.org/pycon-italia-2022/boost-your-motivation-by-organizing-your-workspace-with-plants.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Avila</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/boost-your-motivation-by-organizing-your-workspace-with-plants.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Trasforma il tuo home office con le piante e scatena la tua creatività -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Learn how to decorate your home office with plants and transform it into
your own “urban jungle.” Create a healthy and inspiring workplace using
houseplants.&lt;/p&gt;
&lt;p&gt;Get an overview of:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Interior styling with houseplants …&lt;/pre&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Trasforma il tuo home office con le piante e scatena la tua creatività -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Learn how to decorate your home office with plants and transform it into
your own “urban jungle.” Create a healthy and inspiring workplace using
houseplants.&lt;/p&gt;
&lt;p&gt;Get an overview of:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Interior styling with houseplants and find your unique style.
The foundations on how to keep plants alive and simple decor rules to organize your home office.
How to select and combine the right plants for your space
&lt;/pre&gt;
&lt;p&gt;This talk is for those who want to bring plants into their lives and
transform their home space into a fresh, inspiring green oasis.&lt;/p&gt;
&lt;p&gt;Speaker: Avila&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Building data pipelines with Apache Airflow</title><link href="https://pyvideo.org/pycon-italia-2022/building-data-pipelines-with-apache-airflow.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Ricardo Sueiras</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/building-data-pipelines-with-apache-airflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building data pipelines with Apache Airflow - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Apache Airflow is a popular orchestration tool that uses Python to
author workflows, but what is it, what are the architectural components,
why do I need this, and how do you get started? If you care about
reliably getting your …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building data pipelines with Apache Airflow - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Apache Airflow is a popular orchestration tool that uses Python to
author workflows, but what is it, what are the architectural components,
why do I need this, and how do you get started? If you care about
reliably getting your data from source to your big data platforms, this
is the talk for you. Moving, refining and enriching data in order to get
actionable insights is hard. Apache Airflow, an open source project that
makes it easy for data engineers to create repeatable and reliable
workflows in Python. This session will be a hands on getting started
looking at creating your first workflows and understanding how you can
use the features of Apache Airflow to orchestrate your own data
pipelines.&lt;/p&gt;
&lt;p&gt;Slides:&lt;/p&gt;
&lt;p&gt;Speaker: Ricardo Sueiras&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="aws"></category><category term="big data"></category><category term="open source"></category></entry><entry><title>Building GraphQL APIs using Python and Type Hints</title><link href="https://pyvideo.org/pycon-italia-2022/building-graphql-apis-using-python-and-type-hints.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Patrick Arminio</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/building-graphql-apis-using-python-and-type-hints.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building GraphQL APIs using Python and Type Hints - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;GraphQL is an awesome technology that allows to build type safe APIs. In
this talk we’ll learn how GraphQL works and how we can use Python’s type
hints to create GraphQL APIs. GraphQL is a technology …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building GraphQL APIs using Python and Type Hints - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;GraphQL is an awesome technology that allows to build type safe APIs. In
this talk we’ll learn how GraphQL works and how we can use Python’s type
hints to create GraphQL APIs. GraphQL is a technology to create web APIs
that has become quite popular in the past years. In this talk we’ll see
in detail what GraphQL is, why it exists and why you should use it.&lt;/p&gt;
&lt;p&gt;We’ll also see how we can implement a GraphQL API using Strawberry and
Python’s type hints. We’ll see why type hints make a lot of sense for
GraphQL and what kind of issue you might encounter writing GraphQL APIs.&lt;/p&gt;
&lt;p&gt;By the end of the talk you’ll know what GraphQL is, how to implement a
basic GraphQL API using Python and what to look out for when working
with GraphQL in production.&lt;/p&gt;
&lt;p&gt;Target audience: python developers with familiarities of web APIs (like
REST). some knowledge of type hints might be useful&lt;/p&gt;
&lt;p&gt;Speaker: Patrick Arminio&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="graphql"></category></entry><entry><title>Can Unsupevised ML Be Overfitted?</title><link href="https://pyvideo.org/pycon-italia-2022/can-unsupevised-ml-be-overfitted.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Dana Racah</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/can-unsupevised-ml-be-overfitted.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Can Unsupevised ML Be Overfitted? - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Overfitting is a widely discussed pitfall in ML. In ML 101 class, we are
taught how to identify and mitigate it in a Supervised ML setting. But
wait, how about the Unsupervised setting? Can we overfit there as well?
In my …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Can Unsupevised ML Be Overfitted? - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Overfitting is a widely discussed pitfall in ML. In ML 101 class, we are
taught how to identify and mitigate it in a Supervised ML setting. But
wait, how about the Unsupervised setting? Can we overfit there as well?
In my talk, I will show that we sure can, and we will discuss what to do
about it. Throughout my career as a data scientist, I had the
opportunity to work on many diverse Machine Learning (ML) projects. Some
of my favourite projects deal with an unsupervised learning setting. At
first glance, an unsupervised model may seem simpler to execute, and
with less potential for pitfalls along the way. For example, it does not
require to split the data into training, test and validation datasets,
and on the face of it, there is no risk of overfitting: we just run our
ML model on the dataset, and voila!&lt;/p&gt;
&lt;p&gt;Subsequently however, from my experience, when the model is deployed to
production, we often measure poor performance. How can this be? In this
talk, I will present how, if we are not careful enough, unsupervised ML
models can be overfitted. I will demonstrate overfitting on a clustering
problem, by simulating a clustering model selection. We will run several
clustering models on the learning set and select the best model. Then,
we will see that it may be overfitted. But don’t worry! We will also
discuss some ways to mitigate the overfitting peril in an unsupervised
setting. I will provide a toolset to help you identify and avoid this
situation, and will show how each mitigation impacts our simulation
results.&lt;/p&gt;
&lt;p&gt;Speaker: Dana Racah&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="machine learning"></category></entry><entry><title>Come gestire dinamicamente un database tramite microservizi</title><link href="https://pyvideo.org/pycon-italia-2022/come-gestire-dinamicamente-un-database-tramite-microservizi.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Daniele Carigi</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/come-gestire-dinamicamente-un-database-tramite-microservizi.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Come gestire dinamicamente un database tramite microservizi - PyCon
Italia 2022&lt;/p&gt;
&lt;p&gt;Speaker: Daniele Carigi&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Come sfruttare le session auth di Django per un progetto multi tenant</title><link href="https://pyvideo.org/pycon-italia-2022/come-sfruttare-le-session-auth-di-django-per-un-progetto-multi-tenant.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Matteo Vitali</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/come-sfruttare-le-session-auth-di-django-per-un-progetto-multi-tenant.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Come sfruttare le potenzialità della session auth di Django in un
progetto multi tenant - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Descriverò l’approccio e il metodo di implementazione di un’app multi
tenant in Django, nella quale viene sfruttata la session auth di Django
per recuperare il tenant che domina ogni risorsa …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Come sfruttare le potenzialità della session auth di Django in un
progetto multi tenant - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Descriverò l’approccio e il metodo di implementazione di un’app multi
tenant in Django, nella quale viene sfruttata la session auth di Django
per recuperare il tenant che domina ogni risorsa richiesta dietro
autenticazione. Una soluzione a cui la letteratura sul tema non fa
solitamente riferimento. La “letteratura” sull’argomento multi tenant è
abbastanza varia a approfondita e come del resto lo sono anche i metodi
e gli approcci alla gestione a tenant multipli. In questo talk verrà
descritto, attraverso alcuni esempi, il metodo adottato per la gestione
di un’app backend in Django, con gestione di tenant multipli e
interfacciabile, dietro autenticazione, tramite chiamate API RESTful.
Adottando la session authentication di Django, verrà mostrato come sia
possibile renderla depositaria del tenant che domina tutte le risorse
richieste, per poter filtrarle dinamicamente sulla base dei dati
depositati nella sessione di autenticazione di un utente.&lt;/p&gt;
&lt;p&gt;Speaker: Matteo Vitali&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="apis"></category><category term="authentication"></category><category term="django"></category><category term="rest"></category></entry><entry><title>Conference Opening and Welcome</title><link href="https://pyvideo.org/pycon-italia-2022/conference-opening-and-welcome.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/conference-opening-and-welcome.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Conference Opening and Welcome - PyCon Italia 2022&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Continuous Disclosure: la nuova divulgazione dell’apprendimento è continua</title><link href="https://pyvideo.org/pycon-italia-2022/continuous-disclosure-la-nuova-divulgazione-dellapprendimento-e-continua.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Raffaele Colace</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/continuous-disclosure-la-nuova-divulgazione-dellapprendimento-e-continua.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Continuous Disclosure: la nuova divulgazione dell’apprendimento è
continua - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Speaker: Raffaele Colace&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Continuous Documentation for your Python code</title><link href="https://pyvideo.org/pycon-italia-2022/continuous-documentation-for-your-python-code.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Anastasiia Tymoshchuk</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/continuous-documentation-for-your-python-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Continuous Documentation for your Python code - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Do you document your code? Do you think it is important? Imagine that
you need to get back to your code in 6 month after you wrote it, there
is always a big possibility that you will have to spend …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Continuous Documentation for your Python code - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Do you document your code? Do you think it is important? Imagine that
you need to get back to your code in 6 month after you wrote it, there
is always a big possibility that you will have to spend some time to
find out how this code works. This talk will tell you a secret trick
about documentation. Do you document your code? Do you think it is
important?&lt;/p&gt;
&lt;p&gt;Imagine that you need to get back to your code in 6 month after you
wrote it, there is always a big possibility that you will have to spend
some time to find out how this code works. Or if someone else wrote some
code, which is already in production and your task is to fix a bug in it
and there is no documentation and no one actually knows what this code
does.&lt;/p&gt;
&lt;p&gt;There are more benefits of implementing continuous documentation for the
code:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;easy to onboard new team members,&lt;/li&gt;
&lt;li&gt;easy to share knowledge,&lt;/li&gt;
&lt;li&gt;if this code is open source - easy to start contributing,&lt;/li&gt;
&lt;li&gt;easy to see purpose and motivation of each piece of code,&lt;/li&gt;
&lt;li&gt;easy to keep versioning for each new release of the code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It this talk I will show the difference between documentation types and
will show a demo in the end of the talk.&lt;/p&gt;
&lt;p&gt;Speaker: Anastasiia Tymoshchuk&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="best practice"></category><category term="documentation"></category></entry><entry><title>Creare API REST su Odoo con OCA REST Framework</title><link href="https://pyvideo.org/pycon-italia-2022/creare-api-rest-su-odoo-con-oca-rest-framework.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Andrea Colangelo</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/creare-api-rest-su-odoo-con-oca-rest-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Creare API REST su Odoo con OCA REST Framework - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;La disponibilità di API è spesso un requisito fondamentale per
l’integrazione di Odoo con terze parti. Tuttavia la mancanza di una
piattaforma REST nativa su Odoo è un ostacolo, a cui è tuttavia semplice
porre rimedio …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Creare API REST su Odoo con OCA REST Framework - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;La disponibilità di API è spesso un requisito fondamentale per
l’integrazione di Odoo con terze parti. Tuttavia la mancanza di una
piattaforma REST nativa su Odoo è un ostacolo, a cui è tuttavia semplice
porre rimedio in maniera sistematica e organizzata con il framework
messo a disposizione da OCA Odoo fornisce di default un’interfaccia RPC
per le integrazioni di terze parti, ma non un set di API REST. Per
ovviare a questa mancanza, OCA, la comunità open-source di Odoo, ha
sviluppato un insieme di moduli che aggiungono un framework molto solido
e robusto per la realizzazione di API REST, con una integrazione nativa
di Swagger, un sistema di validazione dei dati in ingresso e in uscita,
e meccanismi di versionamento delle API stesse. In questo talk vedremo
come utilizzare questo framework per realizzare API REST su Odoo.&lt;/p&gt;
&lt;p&gt;Speaker: Andrea Colangelo&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="apis"></category><category term="architecture"></category><category term="cpython"></category><category term="development"></category><category term="odoo"></category><category term="open source"></category><category term="rest"></category></entry><entry><title>Creating Python services using cookiecutter</title><link href="https://pyvideo.org/pycon-italia-2022/creating-python-services-using-cookiecutter.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Sian Lennon</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/creating-python-services-using-cookiecutter.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Creating Python services using cookiecutter - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Speaker: Sian Lennon&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Da crontab a Celery senza rimpianti</title><link href="https://pyvideo.org/pycon-italia-2022/da-crontab-a-celery-senza-rimpianti.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Marco Pavanelli</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/da-crontab-a-celery-senza-rimpianti.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Da crontab a Celery senza rimpianti - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Eseguire i backup, controllare le email, cancellare i log .. ci sono un
sacco di cose utili che si possono automatizzare con i cron jobs ma dopo
un po’ di tempo i vostri file di crontab diventano ingestibili. In
questo caso …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Da crontab a Celery senza rimpianti - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Eseguire i backup, controllare le email, cancellare i log .. ci sono un
sacco di cose utili che si possono automatizzare con i cron jobs ma dopo
un po’ di tempo i vostri file di crontab diventano ingestibili. In
questo caso Celery può diventare il vostro migliore amico. I cont jobs
sono fantastici, possono salvarti la vita e il matrimonio, lavorano di
giorno e di notte con qualsiasi tempo e non sbagliano mai orario. Ma
quando diventano troppi diventa davvero difficile gestirli e poi avete
mai provato ad eseguire un cron job in un container?&lt;/p&gt;
&lt;p&gt;la prima volta che ho provato Celery è stato abbastanza frustrante, il
setup iniziale non è semplice ma se non ci si arrende il risultato è
sorprendente e il potere che ti può dare Celery una volta installato è
gigantesco.&lt;/p&gt;
&lt;p&gt;Speaker: Marco Pavanelli&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="django"></category><category term="docker"></category><category term="infrastructure"></category></entry><entry><title>DALL·E Flow: when neural search meets generative art</title><link href="https://pyvideo.org/pycon-italia-2022/dalle-flow-when-neural-search-meets-generative-art.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Dr. Han Xiao</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/dalle-flow-when-neural-search-meets-generative-art.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DALL·E Flow: when neural search meets generative art - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Speaker: Dr.&amp;nbsp;Han Xiao&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Data Engineering and Python</title><link href="https://pyvideo.org/pycon-italia-2022/data-engineering-and-python.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Prakhar Srivastava</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/data-engineering-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data Engineering and Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Data Engineering is the backbone of all analytics that happens in any
organization. This marks data engineering as the central role in any
data-driven organization. This talk aims to introduce the fundamentals
of data engineering with python apps driving the core concepts …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data Engineering and Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Data Engineering is the backbone of all analytics that happens in any
organization. This marks data engineering as the central role in any
data-driven organization. This talk aims to introduce the fundamentals
of data engineering with python apps driving the core concepts. The aim
of this talk is to introduce the audience to the world of big data
analytics with pythonic tools and libraries at its core. One can expect
the talk to cover the basics of Extract, Transform and Load(ETL)
pipelines using python scripts and then Airflow with PySpark. These ETL
pipelines are core to any data infrastructure. There will be a discourse
on how we can use cloud providers and design an entire system that is
responsible for analytics and ML in an organization. Finally a short
outro into how one can start their journey to become a data engineer.&lt;/p&gt;
&lt;p&gt;Speaker: Prakhar Srivastava&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="architecture"></category><category term="big data"></category><category term="databases"></category><category term="distributed systems"></category></entry><entry><title>Data Visualization con Streamlit</title><link href="https://pyvideo.org/pycon-italia-2022/data-visualization-con-streamlit.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Luca Corbucci</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/data-visualization-con-streamlit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data Visualization con Streamlit - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Streamlit è un progetto open source che permette di creare in pochi
minuti delle data-web-app (e non solo) scrivendo solamente codice Python
senza necessità di avere esperienza di front-end. In questa sessione
scopriremo il suo funzionamento, come deployare un’app e vedremo …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data Visualization con Streamlit - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Streamlit è un progetto open source che permette di creare in pochi
minuti delle data-web-app (e non solo) scrivendo solamente codice Python
senza necessità di avere esperienza di front-end. In questa sessione
scopriremo il suo funzionamento, come deployare un’app e vedremo un
possibile caso d’uso. Vi è mai capitato di dover mostrare e spiegare i
risultati di un progetto di analisi di dati? Non c’è sempre tempo e modo
di sviluppare da zero una dashboard per l’occasione e presentare
direttamente un jupyter notebook potrebbe non essere la soluzione
ideale.&lt;/p&gt;
&lt;p&gt;E qui arriva in soccorso Streamlit: si tratta di un progetto open source
che permette di creare in pochissimi minuti una data-web-app (e non
solo) scrivendo solamente codice Python senza necessità di avere
esperienza di front-end.&lt;/p&gt;
&lt;p&gt;In questa sessione scopriremo come funziona Streamlit, come deployare
un’app e vedremo un possibile caso d’uso.&lt;/p&gt;
&lt;p&gt;Slides: IT: EN:&lt;/p&gt;
&lt;p&gt;Speaker: Luca Corbucci&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="visualization"></category></entry><entry><title>Debugging asynchronous programs in Python</title><link href="https://pyvideo.org/pycon-italia-2022/debugging-asynchronous-programs-in-python.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/debugging-asynchronous-programs-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Debugging asynchronous programs in Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Recently the interest in asynchronous programming has grown
dramatically. Unfortunately, asynchronous programs do not always have
reproducible behavior. Even when they are run with the same inputs,
their results can be radically different. In this talk I’ll show you
different …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Debugging asynchronous programs in Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Recently the interest in asynchronous programming has grown
dramatically. Unfortunately, asynchronous programs do not always have
reproducible behavior. Even when they are run with the same inputs,
their results can be radically different. In this talk I’ll show you
different approaches on how to debug asynchronous programs in Python.
Luckily, when it comes to debugging asynchronous applications in python,
we have a couple of options to consider. The writers of the asyncio
module have very kindly provided a debug mode, which is quite powerful
and can really aid us in our debugging adventures without the overhead
of modifying the system’s code base too dramatically. In particular I’ll
show you what asyncio debug mode means for developers, and how to source
tracebacks for unhandled exceptions in futures. Also how to detect
accidental blocking for I/O. We discuss how to monitor the asyncio event
loop and collect metrics in statsD. Finally we discuss monitor and cli
capabilities for asyncio applications based on aiomonitor and
aioconsole. Also we discuss how asynchronous python works in REPL via
autoawait based on ipython and how to do it in vanilla python REPL.&lt;/p&gt;
&lt;p&gt;Speaker: Andrii Soldatenko&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="asyncio"></category><category term="cpython"></category><category term="debugging"></category></entry><entry><title>Django with PostgreSQL superpowers</title><link href="https://pyvideo.org/pycon-italia-2022/django-with-postgresql-superpowers.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Paolo Melchiorre</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/django-with-postgresql-superpowers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django with PostgreSQL superpowers - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Django&lt;/strong&gt; per se is a &lt;em&gt;database-agnostic&lt;/em&gt; web framework, but
&lt;em&gt;real-world projects&lt;/em&gt; based on it are not. &lt;strong&gt;PostgreSQL&lt;/strong&gt; has the
&lt;em&gt;richest feature set&lt;/em&gt; of any supported databases and we’ll see how to
use these &lt;strong&gt;superpowers&lt;/strong&gt; in &lt;em&gt;Django&lt;/em&gt;. Every time we’re going …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django with PostgreSQL superpowers - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Django&lt;/strong&gt; per se is a &lt;em&gt;database-agnostic&lt;/em&gt; web framework, but
&lt;em&gt;real-world projects&lt;/em&gt; based on it are not. &lt;strong&gt;PostgreSQL&lt;/strong&gt; has the
&lt;em&gt;richest feature set&lt;/em&gt; of any supported databases and we’ll see how to
use these &lt;strong&gt;superpowers&lt;/strong&gt; in &lt;em&gt;Django&lt;/em&gt;. Every time we’re going to create
a new project with &lt;strong&gt;Django&lt;/strong&gt; we make assessments on its requirements to
choose the best architecture, of which, the &lt;strong&gt;database&lt;/strong&gt; is usually the
core.&lt;/p&gt;
&lt;p&gt;Django is a &lt;em&gt;database-agnostic&lt;/em&gt; web framework but natively supports only
4 &lt;strong&gt;Open Source databases&lt;/strong&gt;: PostgreSQL, SQLite, MariaDB and MySQL.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt; has the &lt;em&gt;richest feature set&lt;/em&gt; of any supported database
and some of these features are natively supported directly in Django via
its contrib module.&lt;/p&gt;
&lt;p&gt;In this talk we’ll see how to use to our &lt;em&gt;advantage&lt;/em&gt; the features of
PostgreSQL as a database in Django, its exclusive features present in
its &lt;em&gt;contrib module&lt;/em&gt; and also other superpowers that can be exploited
through the use of &lt;em&gt;third-party packages&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;More info&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide&lt;/strong&gt; and more &lt;strong&gt;information&lt;/strong&gt; on the talk on [&lt;/p&gt;
&lt;p&gt;Speaker: Paolo Melchiorre&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="best practice"></category><category term="django"></category><category term="postgresql"></category></entry><entry><title>Don't rely on discipline</title><link href="https://pyvideo.org/pycon-italia-2022/dont-rely-on-discipline.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Nejc Zupan</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/dont-rely-on-discipline.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Don’t rely on discipline - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In the programming field we often rely on discipline. We expect from
ourselves and from others that we will not introduce bugs and cause
problems. That we will use the libraries and APIs as they are intended.
That we will not …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Don’t rely on discipline - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In the programming field we often rely on discipline. We expect from
ourselves and from others that we will not introduce bugs and cause
problems. That we will use the libraries and APIs as they are intended.
That we will not cut corners.&lt;/p&gt;
&lt;p&gt;Sadly, tales from the industry tell us otherwise. This talk explores why
we should not rely on discipline as a bouncer against bugs, and what to
rely on instead.&lt;/p&gt;
&lt;p&gt;Slides:&lt;/p&gt;
&lt;p&gt;Speaker: Nejc Zupan&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="clean code"></category><category term="static analysis"></category><category term="testing"></category></entry><entry><title>Efficient computer vision on edge devices: How we guide blind people using Python</title><link href="https://pyvideo.org/pycon-italia-2022/efficient-computer-vision-on-edge-devices-how-we-guide-blind-people-using-python.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Vollmer</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/efficient-computer-vision-on-edge-devices-how-we-guide-blind-people-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Efficient computer vision on edge devices: How we guide blind people
using Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In real-life environments, performance and delay of algorithms matter.
biped is an AI copilot that guides blind people with limited computation
capabilities. In this talk we show how we dropped computation time by …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Efficient computer vision on edge devices: How we guide blind people
using Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In real-life environments, performance and delay of algorithms matter.
biped is an AI copilot that guides blind people with limited computation
capabilities. In this talk we show how we dropped computation time by a
factor of four relying on profiling, algorithmic design, multi-threading
and Cython. biped aims to bring autonomous driving capabilities to the
human level, to safely guide blind and visually impaired people in the
street. The device acquires 3D images and then detects, tracks and
predicts trajectories of all surrounding elements, before warning the
user via spatial sounds. In the process of working on this project we
realized that for most problems that we encountered there is already an
existing algorithm that roughly fits our requirements. The majority of
the existing solutions though only work well on very powerful machines
with dedicated GPUs. This is especially true for algorithms from the
domain of Computer Vision.&lt;/p&gt;
&lt;p&gt;Making the same algorithm work on computationally limited devices, like
a Raspberry Pi, opens up a new set of interesting and non-trivial
problems. In this talk we want to explore some options to adjust new or
existing algorithms to computationally constrained environments to make
them work in the real world. We want to show some common pitfalls as
well as best practices to optimize algorithms build with Numpy, OpenCV
and Python. Furthermore we want to give a swift overview over system and
algorithmic design decisions as well as what options exist to profile
Python code.&lt;/p&gt;
&lt;p&gt;To make it easier to understand the ideas and concepts and to follow
along we will showcase some examples of our work at biped during the
presentation. By presenting some algorithms of our perception pipeline,
we can showcase some of the key aspects for the modelling and
implementation of algorithms. In particular, we present how we implement
the detection of ground in an image and how we optimized the algorithm
to go from roughly two FPS to nearly real-time. We conclude the talk
with a brief demonstration of the capabilities of our whole perception
pipeline and discuss the performance we achieved by applying the ideas
introduced in this talk.&lt;/p&gt;
&lt;p&gt;Speaker: Vollmer&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="cpython"></category><category term="multi processing"></category><category term="numpy"></category><category term="performance"></category></entry><entry><title>Efficient ML pipelines using Parquet and PyArrow</title><link href="https://pyvideo.org/pycon-italia-2022/efficient-ml-pipelines-using-parquet-and-pyarrow.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Ingargiola</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/efficient-ml-pipelines-using-parquet-and-pyarrow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Efficient ML pipelines using Parquet and PyArrow - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Parquet is an high-performance columnar data format that has become the
de facto standard in the ML world. By leveraging the powerful PyArrow
API, I’ll show how to manage parquet datasets, ranging from a single
local file to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Efficient ML pipelines using Parquet and PyArrow - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Parquet is an high-performance columnar data format that has become the
de facto standard in the ML world. By leveraging the powerful PyArrow
API, I’ll show how to manage parquet datasets, ranging from a single
local file to a partitioned cloud-based dataset updated in real time.
Advanced analytics and Machine Learning (ML) are increasingly used to
drive business decisions or provide real-time services for end-users in
virtually every industry. Tabular data is the most ubiquitous type of
data. Therefore, efficient processing of handle tabular datasets is a
critical requirement to deliver performant products or services.&lt;/p&gt;
&lt;p&gt;In a proto-typical production ML workflow, an “ingestion pipeline” needs
to store large datasets on the cloud and continuously update them as new
data becomes available. An “analytics pipeline” usually needs to process
the entire dataset by reading it in batches, because the full dataset
would be too large to fit in RAM. An “inference pipeline” provides
real-time results (i.e.&amp;nbsp;model predictions or other online statistics)
and needs to process small batches of data in quasi-realtime. Finally,
the presentation of analytics results requires not only to show the
output from the models but also to provide context through “historical
data” for an arbitrary set of features. Therefore, low-latency access to
a small group of columns from a large dataset represents an additional
requirement.&lt;/p&gt;
&lt;p&gt;In the Python ecosystem, we can leverage tools such as Parquet and
PyArrow to address such complex workflow.&lt;/p&gt;
&lt;p&gt;Apache Parquet is a columnar storage format initially created to address
similar storage challenges in the Hadoop ecosystem. It has since become
a standard for efficient storage of large datasets in all the major
languages, including Python.&lt;/p&gt;
&lt;p&gt;The Apache Arrow project provides a cross-language in-memory
representation and query engine for tabular datasets and has a
performant IO interface for Parquet datasets. Its Python interface,
PyArrow, allows to query and process large partitioned datasets
distributed across multiple files and folders on local and cloud
storage.&lt;/p&gt;
&lt;p&gt;In this talk, combining PyArrow and Parquet datasets, we will explore
several techniques to address the use-cases of the typical production ML
workflows delineated above.&lt;/p&gt;
&lt;p&gt;Speaker: Ingargiola&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="aws"></category><category term="best practice"></category><category term="infrastructure"></category><category term="machine learning"></category><category term="pandas"></category><category term="performance"></category><category term="scaling"></category></entry><entry><title>Emmett: the web framework for inventors</title><link href="https://pyvideo.org/pycon-italia-2022/emmett-the-web-framework-for-inventors.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Giovanni Barillari</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/emmett-the-web-framework-for-inventors.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Emmett: the web framework for inventors - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Great Scott! Is this 2022? But wait, did I wrongly set the temporal
circuits of the DeLorean and went to 2012, or Python web developers are
still stuck with Django and Flask? Martin! We ended up in a timeline
without …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Emmett: the web framework for inventors - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Great Scott! Is this 2022? But wait, did I wrongly set the temporal
circuits of the DeLorean and went to 2012, or Python web developers are
still stuck with Django and Flask? Martin! We ended up in a timeline
without AsyncIO! Let’s get back and fix it! And remember the plutonium!
An overview of Emmett’s capabilities and features, and a few
demonstrations on how the web framwork for inventors can help developers
writing awesome applications in the AsyncIO era.&lt;/p&gt;
&lt;p&gt;Speaker: Giovanni Barillari&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="asyncio"></category><category term="open source"></category><category term="rest"></category></entry><entry><title>Event Driven Applications with Flask and Kafka</title><link href="https://pyvideo.org/pycon-italia-2022/event-driven-applications-with-flask-and-kafka.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Francesco Tisiot</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/event-driven-applications-with-flask-and-kafka.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Event Driven Applications with Flask and Kafka - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Let’s build an event driven application together! Using Flask as
framework we’ll add the powerful Apache Kafka, a streaming platform, as
backend… all live on stage! Join to understand how to integrate your
application with Apache Kafka …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Event Driven Applications with Flask and Kafka - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Let’s build an event driven application together! Using Flask as
framework we’ll add the powerful Apache Kafka, a streaming platform, as
backend… all live on stage! Join to understand how to integrate your
application with Apache Kafka! Solid event driven applications are based
on a widely adopted coding framework and a resilient data streaming
technology. While Flask is a common choice for the framework, a wise
selection of the backend data systems can bring benefits in terms of
ease of integration and performances.&lt;/p&gt;
&lt;p&gt;In this session we will explore Apache Kafka, a data streaming platform,
that enables reliable real-time data integration for your event driven
application. We will look at the types of problems that Kafka is best at
solving, and show how to use it in your own applications. We’ll then
take a look at Kafka in action, by creating a Flask web application.&lt;/p&gt;
&lt;p&gt;After understanding how to produce and consume events from Apache Kafka,
we’ll then introduce Kafka Connect, a selection of pre-built connectors
making Apache Kafka your only backend interface, no matter where your
data originally sits.&lt;/p&gt;
&lt;p&gt;If you’re using Flask, and want to understand how to make your
application event driven by integrating it with the most used streaming
technology, this session is for you!&lt;/p&gt;
&lt;p&gt;Speaker: Francesco Tisiot&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="big data"></category><category term="development"></category><category term="flask"></category><category term="open source"></category></entry><entry><title>Everything You Always Wanted to Know About Async But Were Afraid to Ask (cit.)</title><link href="https://pyvideo.org/pycon-italia-2022/everything-you-always-wanted-to-know-about-async-but-were-afraid-to-ask-cit.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Deusebio</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/everything-you-always-wanted-to-know-about-async-but-were-afraid-to-ask-cit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everything You Always Wanted to Know About Async But Were Afraid to Ask
(cit.) - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In this talk, we will dig in the marvelous world of sync/async/parallel
computation. And show you how to define abstract computation upfront
lazily using Promises, deferring execution subsequently and throttling …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everything You Always Wanted to Know About Async But Were Afraid to Ask
(cit.) - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In this talk, we will dig in the marvelous world of sync/async/parallel
computation. And show you how to define abstract computation upfront
lazily using Promises, deferring execution subsequently and throttling
the computation as you please. After this, async processing won’t have
any secret to you I still remember when during an interview for a Junior
Data Scientist position, I was asked about async and when to use it. I
was buffled. And - I must say - after learning about these concepts,
they are not that hard. Nevertheless, still mysterious to some. In this
talk, after explaining some basic concepts about asynchronous processing
and reviewing the most important Pythonic packages to be used in the
async context, we will gently introduce some notions of functional
programming and - most of all - one of its most useful tool for async
operations: the Promise monad. Thanks to this, we will then be able to
create, compose and chain abstract computations together, therefore
defining what we want to do, without actually doing it yet. Acting
lazily, its execution will rather be deferred to a second moment, where
we will make use of async and parallel framework to speed up and
parallelise execution. We will also show you how to throttle the
execution, a need that often arises when dealing with rate-limited
services and/or avoid overloading external component or resources. The
talk will be accompanied by the help of a simple Github repo that will
have examples and (hopefully) useful utility functions that will allow
you to approach the asynchronous world more easily and seamlessly.&lt;/p&gt;
&lt;p&gt;Speaker: Deusebio&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="asyncio"></category><category term="clean code"></category><category term="functional programming"></category></entry><entry><title>Everything You Know About MongoDB is Wrong</title><link href="https://pyvideo.org/pycon-italia-2022/everything-you-know-about-mongodb-is-wrong.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Mark Smith</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/everything-you-know-about-mongodb-is-wrong.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everything You Know About MongoDB is Wrong - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;MongoDB is webscale, right? It’s a JSON database, it’s eventually
consistent. Oh, and it’s insecure.&lt;/p&gt;
&lt;p&gt;Let me clear up some things: MongoDB is an ACID-compliant database with
transactions, schemas &amp;amp; relationships. It includes a powerful
aggregation query …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everything You Know About MongoDB is Wrong - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;MongoDB is webscale, right? It’s a JSON database, it’s eventually
consistent. Oh, and it’s insecure.&lt;/p&gt;
&lt;p&gt;Let me clear up some things: MongoDB is an ACID-compliant database with
transactions, schemas &amp;amp; relationships. It includes a powerful
aggregation query language. MongoDB doesn’t store JSON, and nowadays it
comes with pretty good security defaults (we think).&lt;/p&gt;
&lt;p&gt;I’ll cover all of this and more, so you know what you need to, if you’re
considering MongoDB for your next (or current) project.&lt;/p&gt;
&lt;p&gt;Speaker: Mark Smith&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Exploring Patterns to Debug your Life</title><link href="https://pyvideo.org/pycon-italia-2022/exploring-patterns-to-debug-your-life.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Miriam Perrone</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/exploring-patterns-to-debug-your-life.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Exploring Patterns to Debug your Life - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Just as in code, in our daily life we have patterns that can be
returning patterns. Can we debug our life, via debugging skills we
learned in coding? Come to experience this talk to learn how to debug
your life …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Exploring Patterns to Debug your Life - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Just as in code, in our daily life we have patterns that can be
returning patterns. Can we debug our life, via debugging skills we
learned in coding? Come to experience this talk to learn how to debug
your life! In daily life we have patterns and even returning patterns,
at least if you take time to recognize some parts happening in your
life. This can be in your career, customer relations, and even in
personal and family relations. Nice patterns lead to success and
inspiration. Bad pattens leads to bore-out, burn-out or even worse… In
this talk Dennie and special guest speaker Miriam – a well-known Belgian
speaker and experience expert in Autism – will take you on a journey
where they explain life patterns via metaphors in the tech/ developer
world. You will learn how to recognize life patterns exactly as in code,
engineering, and business patterns. When you recognize the patterns it’s
finally time to learn to debug those patterns! Just as you debug code
patterns with changing the source code, you learn to debug life patterns
via changing lifestyle, and in specific thoughts. As you see, those are
just the same. Slides:&lt;/p&gt;
&lt;p&gt;Speakers: Miriam Perrone, Dennie Declercq&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="communication"></category><category term="community"></category><category term="teaching"></category></entry><entry><title>Four years of Python</title><link href="https://pyvideo.org/pycon-italia-2022/four-years-of-python.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Duarte Carmo</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/four-years-of-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Four years of Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Inspired by my post Four Years of Python where I talk through some
valuable lessons for intermediate/beginner programmers to have in mind
when scaling up their career in Python development. I mention topics
such as testing, keeping things simple, and educating …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Four years of Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Inspired by my post Four Years of Python where I talk through some
valuable lessons for intermediate/beginner programmers to have in mind
when scaling up their career in Python development. I mention topics
such as testing, keeping things simple, and educating yourself. The
other day I realized: I’ve been programming in Python for about 4 years
now. I do get paid to write code, but for some reason still don’t
consider myself a pro. I did learn some valuable lessons however. For
those who just got started with Python, you’ll hopefully take something
out of these lessons. For the experienced, see this as a celebration of
our beloved language.&lt;/p&gt;
&lt;p&gt;Some of the topics I’ll cover are: - Reading is better then googling -
Keep things stupid simple - First make it work, then make it pretty -
Test early - Learn continuously&lt;/p&gt;
&lt;p&gt;I’ll share some learnings, principles, and resources that I’ve learned
through the years.&lt;/p&gt;
&lt;p&gt;Slides:&lt;/p&gt;
&lt;p&gt;Speaker: Duarte Carmo&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="architecture"></category><category term="best practice"></category><category term="clean code"></category><category term="education"></category><category term="machine learning"></category><category term="testing"></category></entry><entry><title>From XML to JSON and beyond</title><link href="https://pyvideo.org/pycon-italia-2022/from-xml-to-json-and-beyond.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Davide Brunato</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/from-xml-to-json-and-beyond.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From XML to JSON and beyond - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;I want to share my experience on converting XML data to JSON, talking
about the existing conventions, some that expect a loss of information
and others that are lossless, with a focus on conversion methods defined
by XPath 3.1 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From XML to JSON and beyond - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;I want to share my experience on converting XML data to JSON, talking
about the existing conventions, some that expect a loss of information
and others that are lossless, with a focus on conversion methods defined
by XPath 3.1. JSON has been often described as an XML alternative or
even a replacement. This can be true in several applications, but many
often XML persists due to its more richer characteristics and pretty
different architectural scopes. So crucial is the build of conversion
tools and mapping conventions, to let the data communication effective
between the different formats. Despite many defined conventions also
XPath 3.1 put a step in this direction. So don’t trash old XML data, but
use them for what is better suited and convert them to send chunks of
JSON data to other systems or to submit to other applications.&lt;/p&gt;
&lt;p&gt;Speaker: Davide Brunato&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="compiler and interpreters"></category><category term="data structures"></category><category term="open source"></category></entry><entry><title>Fuzzing Python code with Atheris</title><link href="https://pyvideo.org/pycon-italia-2022/fuzzing-python-code-with-atheris.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Federico Scrinzi</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/fuzzing-python-code-with-atheris.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fuzzing Python code with Atheris - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Fuzz testing is a well-known technique for uncovering programming
errors. Atheris is an open-source fuzzing engine for finding bugs in
Python code and native extensions, released by the Google Information
Security team. With this talk we’ll learn how Atheris works …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fuzzing Python code with Atheris - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Fuzz testing is a well-known technique for uncovering programming
errors. Atheris is an open-source fuzzing engine for finding bugs in
Python code and native extensions, released by the Google Information
Security team. With this talk we’ll learn how Atheris works and how it
can be used in practice. Fuzz testing is a well-known technique for
uncovering programming errors. Many of these detectable errors have
serious security implications. Atheris ( is an open-source fuzzing
engine for automatically finding bugs in Python code and native
extensions. Atheris is a “coverage-guided” fuzzer, which means that
Atheris will repeatedly try various inputs to your program while
watching how it executes, and try to find interesting execution paths.
In the past, Atheris was used to find bugs in Pillow’s native code
(CVE-2020-35653) or to find differences in JSON parsing between Python’s
standard library and Ultrajson, or between Python’s idna package and the
native libidn2 library.&lt;/p&gt;
&lt;p&gt;In this talk you can learn the basics of fuzzing, how Atheris works
internally, and how it can be used for bug hunting.&lt;/p&gt;
&lt;p&gt;Speaker: Federico Scrinzi&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="code analysis"></category><category term="open source"></category><category term="security"></category><category term="testing"></category></entry><entry><title>Generazione file PDF per affinamento dell'Object detection</title><link href="https://pyvideo.org/pycon-italia-2022/generazione-file-pdf-per-affinamento-dellobject-detection.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Lorenzo Pisaneschi</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/generazione-file-pdf-per-affinamento-dellobject-detection.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Generazione di file PDF con Transformers per affinamento dell’object
detection in documenti testuali - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;De-costruire un file PDF è un task di sempre maggior interesse; questo
talk mostrerà come sfruttare l’informazione non strutturata dei dati per
la generazione di PDF sintetici da utilizzare in sistemi …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Generazione di file PDF con Transformers per affinamento dell’object
detection in documenti testuali - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;De-costruire un file PDF è un task di sempre maggior interesse; questo
talk mostrerà come sfruttare l’informazione non strutturata dei dati per
la generazione di PDF sintetici da utilizzare in sistemi di
apprendimento più controllabili, con l’uso di Transformers ed NLP su
dataset ristretti di PDF. Il Portable Document Format (meglio noto come
PDF) è il formato di file più utilizzato al mondo. All’interno di un
file PDF possiamo trovare un’ampia gamma di elementi diversi, non solo
semplice testo: elementi grafici come immagini ed algoritmi, tabelle,
didascalie, addirittura oggetti interattivi o firme digitali. La
decostruzione di un file PDF è dunque un task difficile, per l’alto
livello di eterogeneità dei dati e perché il formato stesso non è stato
pensato per fornire in modo strutturato la disposizione delle diverse
entità che costituiscono le pagine dei documenti. Tuttavia, questo tipo
di analisi sta attirando sempre più l’interesse di ricercatori e
aziende, perché le informazioni sul layout e i contenuti dei file di
testo possono essere utilizzate per aumentare i dataset esistenti per
ottenere miglioramenti qualitativi nell’espletamento delle comuni
operazioni di data mining, sfruttando le tecniche di deep learning più
innovative.&lt;/p&gt;
&lt;p&gt;Questo talk, descrive un sistema che, partendo da un insieme ristretto
di file PDF, è in grado di generarne un numero arbitrariamente grande
per costituire un dataset di immagini da utilizzare per addestrare reti
neurali a svolgere le classiche operazioni di object detection e
recognition; per fare questo, sarà mostrata una pipeline capace di
annotare automaticamente il contenuto di un PDF; dopodiché, sarà
spiegato come utilizzare le annotazioni precedentemente ottenute come
input di una architettura a Transformers per generare layout artificiali
di documenti; infine, si passerà all’effettiva sintesi dei PDF: verrà
indicato come popolare le parti testuali dei layout generati grazie a
tecniche di NLP (Natural Language Processing), come popolare immagini,
tabelle e formule e, infine, come utilizzare il dataset sintetico così
ottenuto.&lt;/p&gt;
&lt;p&gt;Speaker: Lorenzo Pisaneschi&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="big data"></category><category term="deep learning"></category><category term="machine learning"></category><category term="predictions"></category></entry><entry><title>Genetic Algorithm from Scratch in Python</title><link href="https://pyvideo.org/pycon-italia-2022/genetic-algorithm-from-scratch-in-python.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Davide Anghileri</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/genetic-algorithm-from-scratch-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genetic Algorithm from Scratch in Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;The Genetic Algorithm is an evolutionary algorithm inspired by Charles
Darwin’s theory of natural selection. It may be one of the most popular
biologically inspired algorithms. In this talk, you will discover how a
genetic optimization algorithm works and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genetic Algorithm from Scratch in Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;The Genetic Algorithm is an evolutionary algorithm inspired by Charles
Darwin’s theory of natural selection. It may be one of the most popular
biologically inspired algorithms. In this talk, you will discover how a
genetic optimization algorithm works and how to implement it from
scratch in Python. Genetic Algorithm (GA) is a stochastic global search
optimization algorithm inspired by the biological theory of evolution.
It is commonly used to find solutions to search and optimization
problems.&lt;/p&gt;
&lt;p&gt;In this talk I will explain how GAs work going through a Python example
implemented from scratch. I will show how the genetic algorithm,
starting from a population of candidate solutions repeatedly evolves
them toward better solutions trying to solve an optimization problem. I
will illustrate a Python implementation of the main biologically
inspired operators of GAs such as selection, crossover and mutation.
Finally, I will mention limitations and variants of genetic algorithms.&lt;/p&gt;
&lt;p&gt;After the talk, you will be able to implement your own genetic algorithm
and apply it to solve a large variety of optimization problems,
especially those that are not well suited for standard optimization
techniques, like problems in which the objective function is
non-differentiable or highly non-linear.&lt;/p&gt;
&lt;p&gt;Speaker: Davide Anghileri&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="machine learning"></category><category term="science"></category></entry><entry><title>Goodbye and Conference Closing 👋</title><link href="https://pyvideo.org/pycon-italia-2022/goodbye-and-conference-closing.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/goodbye-and-conference-closing.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Goodbye and Conference Closing 👋 - PyCon Italia 2022&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Head First Machine Learning</title><link href="https://pyvideo.org/pycon-italia-2022/head-first-machine-learning.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Gianmarco Forcella</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/head-first-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Head First Machine Learning - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Every wanted to learn Machine Learning, or at least understand the
basics, but you don’t know where to start? Math scares you? Bad
experiences with it during Calculus 1 or at the High School? No worries!
In just 1hr, I’m …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Head First Machine Learning - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Every wanted to learn Machine Learning, or at least understand the
basics, but you don’t know where to start? Math scares you? Bad
experiences with it during Calculus 1 or at the High School? No worries!
In just 1hr, I’m gonna turn audience into ML rockstars! Machine Learning
is nowadays expanding. As more data becomes available (and power
calculation), so are algorithms that can solve new challenges. But how
does Machine Learning exactly work? And why mathematics shouldn’t be a
stop? In this speech, I would like to give a brief introduction on the
Machine Learning field and explain its concepts in the most easiest and
“Head First” way. Digging in mathematical concepts will be, of course,
necessary, but no prior depth knowledge of math will be required, as I
will try to keep things as simple as possible.&lt;/p&gt;
&lt;p&gt;Speaker: Gianmarco Forcella&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="machine learning"></category></entry><entry><title>How the internet could be healthier</title><link href="https://pyvideo.org/pycon-italia-2022/how-the-internet-could-be-healthier.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Solana Larsen</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/how-the-internet-could-be-healthier.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How the internet could be healthier - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Beyond the headlines, what does it mean for the internet and AI to be
more trustworthy around the world? Let’s chart the path to a healthier
internet.&lt;/p&gt;
&lt;p&gt;Speaker: Solana Larsen&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>How to imprison a minotaur: mazes building methodologies</title><link href="https://pyvideo.org/pycon-italia-2022/how-to-imprison-a-minotaur-mazes-building-methodologies.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Juna Salviati</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/how-to-imprison-a-minotaur-mazes-building-methodologies.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to imprison a minotaur: mazes building methodologies - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Maze solving algorithms are very popular: we seldom talk about about how
to create them. We will explore maze generation with Python, keeping a
multidisciplinary approach. [EN] Talking about mazes, we usually think
about algorithms to find an …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to imprison a minotaur: mazes building methodologies - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Maze solving algorithms are very popular: we seldom talk about about how
to create them. We will explore maze generation with Python, keeping a
multidisciplinary approach. [EN] Talking about mazes, we usually think
about algorithms to find an exit: we seldom think about algorithms and
methods to &lt;em&gt;create&lt;/em&gt; them. In this talk we will use Python to “imprison
the minotaur”: starting from an algorithmic approach, we will generate
mazes with cellular automata, formal systems, genetic algorithms and
machine learning.&lt;/p&gt;
&lt;p&gt;[IT] Quando parliamo di labirinti, pensiamo subito ad algoritmi di
pathfinding: molto meno trattate sono invece le metodologie per la loro
costruzione. In questo talk utilizzeremo Python per “imprigionare il
minotauro”: partendo da un approccio prettamente algoritmico, genereremo
poi labirinti con automi cellulari e sistemi formali, per arrivare ad
utilizzare infine algoritmi genetici ed il machine learning.&lt;/p&gt;
&lt;p&gt;[SLIDES LINK]&lt;/p&gt;
&lt;p&gt;Speaker: Juna Salviati&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="machine learning"></category><category term="science"></category></entry><entry><title>HPy: the future of Python C extensions</title><link href="https://pyvideo.org/pycon-italia-2022/hpy-the-future-of-python-c-extensions.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Antonio Cuni</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/hpy-the-future-of-python-c-extensions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;HPy: the future of Python C extensions - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;C extensions plays a big role in the Python ecosystem, but the existing
Python/C API has become a burden for alternative implementations and for
innovation of CPython itself. HPy is a joint project by PyPy, CPython,
Cython, Numpy …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;HPy: the future of Python C extensions - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;C extensions plays a big role in the Python ecosystem, but the existing
Python/C API has become a burden for alternative implementations and for
innovation of CPython itself. HPy is a joint project by PyPy, CPython,
Cython, Numpy and GraalPython developers to design a new future proof
API. HPy provides a new API for extending Python in C. In other words,
you use include hpy.h instead of include Python.h. The talk will
explain: 1. Why the current Python/C API is problematic for alternative
implementations such as PyPy and for CPython itself 2. How HPy plans to
solve the problem, and what is the migration path for existing
extensions 3. Why HPy is appealing for extension developers: in
particular, higher performance on PyPy and GraalPython, and the “debug
mode” which automatically catches many mistakes at runtime instead of
hitting painful segfaults and/or memory leaks.&lt;/p&gt;
&lt;p&gt;Speaker: Antonio Cuni&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="apis"></category><category term="compiler and interpreters"></category><category term="cpython"></category><category term="pypy"></category></entry><entry><title>Ideas, Visions and Reality: Looking back on 20 years of community work - Mar</title><link href="https://pyvideo.org/pycon-italia-2022/ideas-visions-and-reality-looking-back-on-20-years-of-community-work-mar.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Marc-André Lemburg</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/ideas-visions-and-reality-looking-back-on-20-years-of-community-work-mar.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ideas, Visions and Reality: Looking back on 20 years of community work -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Python has become very important for many of us - as the basis for
making a living, as a way to enjoy programming, or to bring people
together.&lt;/p&gt;
&lt;p&gt;I’d like to take you on …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ideas, Visions and Reality: Looking back on 20 years of community work -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Python has become very important for many of us - as the basis for
making a living, as a way to enjoy programming, or to bring people
together.&lt;/p&gt;
&lt;p&gt;I’d like to take you on a tour through my two decades of community work
and hopefully inspire some of you to contribute to the community as
well. Python has become a very important part of life for many of us -
as the basis for making a living, as a way to enjoy programming, or as a
project which brings together people. I’ve had the opportunity to work
in all these fields in the last two decades and have learned a lot.&lt;/p&gt;
&lt;p&gt;In this talk I’d like to take you on a tour, share some of the insights
I have gained and hopefully inspire some of you to contribute to the
community as well.&lt;/p&gt;
&lt;p&gt;PDF of the talk slides:&lt;/p&gt;
&lt;p&gt;Speaker: Marc-André Lemburg&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="best practice"></category><category term="community"></category><category term="conferences and meet ups"></category><category term="education"></category></entry><entry><title>Inclusive community leadership</title><link href="https://pyvideo.org/pycon-italia-2022/inclusive-community-leadership.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Jessica Greene</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/inclusive-community-leadership.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Inclusive community leadership - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;What does an inclusive community look like and how can we be inclusive
leaders within it? Community leadership can take many forms, from
organizing events, sharing knowledge, to advocating for other members
and connecting them to opportunities. Communities look to their leaders
to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Inclusive community leadership - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;What does an inclusive community look like and how can we be inclusive
leaders within it? Community leadership can take many forms, from
organizing events, sharing knowledge, to advocating for other members
and connecting them to opportunities. Communities look to their leaders
to set the tone of the space so it is, therefore, their responsibility
to ensure a continued space that is safe for all its members to thrive.
Leadership should also be sustainable so recognizing and supporting the
growth of new leaders is important. My journey as a community leader
began after attending a PyLadies Berlin meetup in 2018. As a career
changer, my motivation was to immerse myself in a space where I could
learn and meet others in a position similar to my own. Inspired by other
community leaders and conversations with other members, it soon became
my goal to not only nourish my own growth but also that of those around
me however I could. Witnessing the change which we create within the
community has shown me that responsibility also lies with the wider tech
community to support its leaders, who not only add immense value to
their respective communities but reach far beyond them to make the
industry a better place for all. The labor we pour into the community is
essential to fostering inclusive work environments as gender parity (and
other forms of representation) is still severely lacking especially at a
decision-making level at most tech companies. It is this bridge between
community and companies that I have been reflecting on and hope to now
influence. Through the lens of my experience in the PyLadies community
and beyond, sharing both my insights and those gained through
interactions with other members, I will reflect on what it means to be
an inclusive leader and how a community can stay true to these
principles while growing and evolving. This talk aims to inspire folks
to take up leadership roles in their communities while also celebrating
those already putting in the work.&lt;/p&gt;
&lt;p&gt;Speaker: Jessica Greene&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Intervista Pythonista con Fabio Pliger 🐍🎙</title><link href="https://pyvideo.org/pycon-italia-2022/intervista-pythonista-con-fabio-pliger.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Fabio Pliger</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/intervista-pythonista-con-fabio-pliger.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Intervista Pythonista con Fabio Pliger 🐍🎙 - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Partecipa ad un episodio di Intervista Pythonista registrato dal vivo!
Marco Santoni e Cesare Placanica intervisteranno Fabio Pliger, Principal
Software Architect ad Anaconda, inc!&lt;/p&gt;
&lt;p&gt;Scopri di più su Intervista Pythonista su intervistapythonista.com e su
Fabio ed il suo keynote a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Intervista Pythonista con Fabio Pliger 🐍🎙 - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Partecipa ad un episodio di Intervista Pythonista registrato dal vivo!
Marco Santoni e Cesare Placanica intervisteranno Fabio Pliger, Principal
Software Architect ad Anaconda, inc!&lt;/p&gt;
&lt;p&gt;Scopri di più su Intervista Pythonista su intervistapythonista.com e su
Fabio ed il suo keynote a PyCon Italia sul nostro sito!&lt;/p&gt;
&lt;p&gt;Speakers: Fabio Pliger, Marco Santoni, Cesare Placanica&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Introduction to Network Analysis by Analyzing Characters in Harry Potter Fanfiction</title><link href="https://pyvideo.org/pycon-italia-2022/introduction-to-network-analysis-by-analyzing-characters-in-harry-potter-fanfiction.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Sara Jakša</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/introduction-to-network-analysis-by-analyzing-characters-in-harry-potter-fanfiction.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Network Analysis by Analyzing Characters in Harry Potter
Fanfiction - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Is Ginny considered the best girl for Harry? Do Hermione and Snape
really go well together? In this talk, I will go through the process of
analyzing the tags data from the fanfiction website, which …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Network Analysis by Analyzing Characters in Harry Potter
Fanfiction - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Is Ginny considered the best girl for Harry? Do Hermione and Snape
really go well together? In this talk, I will go through the process of
analyzing the tags data from the fanfiction website, which might help
answer these and some similar questions. In the more and more globalized
world, network analysis is becoming more and more prominent in helping
us realize how different people and things are connected. Let it be how
the power grid will need to change, to accommodate the move to renewable
sources or how the different political and corporate actors are
connected, explaining why some changes can happen as some do not.&lt;/p&gt;
&lt;p&gt;Or it can be done to answer some other, in some way just as interesting.
Is Ginny considered the best girl for Harry? Do Hermione and Snape
really go well together? And many more.&lt;/p&gt;
&lt;p&gt;In this talk, I will go through the process of analyzing the tags data
from the fanfiction website. I will go through the formatting of the
data for analysis with the networkx library, some simple analysis and
the visualization of the data.&lt;/p&gt;
&lt;p&gt;I will not assume any network analysis knowledge, but I will assume that
you are comfortable programming in Python on a level, that if you need
to create a quick script, you could do it easily.&lt;/p&gt;
&lt;p&gt;Slides:&lt;/p&gt;
&lt;p&gt;Speaker: Sara Jakša&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="analytics"></category></entry><entry><title>Introduction to Property-Based testing using Hypothesis</title><link href="https://pyvideo.org/pycon-italia-2022/introduction-to-property-based-testing-using-hypothesis.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/introduction-to-property-based-testing-using-hypothesis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Property-Based testing using Hypothesis - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Has testing got you down? Ever spent a day writing tests, only to
discover that you missed a bug because of some edge case you didn’t know
about? Does it ever feel like writing tests is just a formality …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Property-Based testing using Hypothesis - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Has testing got you down? Ever spent a day writing tests, only to
discover that you missed a bug because of some edge case you didn’t know
about? Does it ever feel like writing tests is just a formality - that
you already know your test cases will pass? Hyphothesis might be just
what you need! Property based testing relies on properties. It checks
that a function, program or whatever system under test abides by a
property. Most of the time, properties do not have to go into too much
details about the output. They just have to check for useful
characteristics that must be seen in the output. Benefits are numerous:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Cover the scope of all possible inputs: by construct, it does not
restrict the generated inputs if not asked to do so. Consequently it
can theorically generate all possible inputs and cover the whole
range of strings, integers or whatever type required by the system
under test.&lt;/li&gt;
&lt;li&gt;Shrink the input in case of failure: whenever it fails, the framework
tries to reduce the input to a smaller input. For instance: if the
condition of the failure is the existence of a given character in a
string it should return the one-character string having only this
character. This is certainly one of the most interesting features of
such approach as most of the time the failure can be summarized by a
very small case.&lt;/li&gt;
&lt;li&gt;Reproducible and replayable: each time it runs a property test, a
seed is produced in order to be able to re-run the test again on the
same datasets. Any run failure causes the framework to print both the
failing case and the seed in order to be able to fully reproduce the
run.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this talk i’ll present, the teorethical aspects behind the approach
and the benefits of using Hypothesis with schemathesis, a modern API
testing tool for web applications built with Open API and GraphQL
specifications.&lt;/p&gt;
&lt;p&gt;Speakers: Alessandro Molina, Aniello Barletta&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="TDD"></category><category term="testing"></category></entry><entry><title>It's Your Call(able): a tour of Python's callable (function) interface</title><link href="https://pyvideo.org/pycon-italia-2022/its-your-callable-a-tour-of-pythons-callable-function-interface.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Weldon</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/its-your-callable-a-tour-of-pythons-callable-function-interface.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It’s Your Call(able): a tour of Python’s callable (function) interface -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;A deep dive into python functions and the callable interface surrounding
them. We take a tour into everything that happens on on a “def” line in
Python, and explore how to make the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It’s Your Call(able): a tour of Python’s callable (function) interface -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;A deep dive into python functions and the callable interface surrounding
them. We take a tour into everything that happens on on a “def” line in
Python, and explore how to make the most of all the rich metadata
provided about functions, before going into detail hacking the Python
decorator pattern. Functions are fundamental to python, and are amongst
the first features of python that most users learn. We call a function
with arguments, and it returns a value. However, there is more to this
callable interface than meets the eye, and there are lots of useful and
powerful things we can do with the callable interface. You may have come
across many of these already: (anonymous) lambda functions, the &lt;strong&gt;call&lt;/strong&gt;
magic method, the decorator pattern, the &lt;strong&gt;doc&lt;/strong&gt; property, and modules
like functools and inspect which provide detailed about functions and
allow us to alter functions at runtime. The now-retired Python 3.6
release added typing annotations to this mix, and opened up a new world
of metadata to use alongside your callables.&lt;/p&gt;
&lt;p&gt;Lots of libraries, particularly web frameworks like Flask, Django, and
FastAPI, and testing toolkits like pytest, use this callable interface
to implement their API. As developers, understanding these advanced
features of python’s callable interface is particularly useful when
writing generic, automation focused code, and understanding how such
prominent libraries work.&lt;/p&gt;
&lt;p&gt;This talk gives a deep-dive into python functions, and the associated
callable interface. We’ll start with a quick tour of the basics, before
covering python’s more advanced callable features, and exploring some
examples about how, why, and when you may wish to use these features
yourself.&lt;/p&gt;
&lt;p&gt;Speaker: Weldon&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="clean code"></category><category term="type hinting"></category></entry><entry><title>La Continuous Delivery è una condizione mentale</title><link href="https://pyvideo.org/pycon-italia-2022/la-continuous-delivery-e-una-condizione-mentale.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Raffaele Colace</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/la-continuous-delivery-e-una-condizione-mentale.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La Continuous Delivery è una condizione mentale - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In questo talk racconterò il mio percorso evolutivo da un approccio
waterfall a quello iterativo passando per i tanti errori commessi.
Mostrerò come abbiamo realizzato un template che aiuta nel processo di
Continuous Delivery utilizzando Kubernetes, Docker, Python e …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La Continuous Delivery è una condizione mentale - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In questo talk racconterò il mio percorso evolutivo da un approccio
waterfall a quello iterativo passando per i tanti errori commessi.
Mostrerò come abbiamo realizzato un template che aiuta nel processo di
Continuous Delivery utilizzando Kubernetes, Docker, Python e Terraform.
Vedo la gente passare i venerdì a fare rilasci in produzione e passare
il weekend a fare bug fixing. Vedo la gente stufa di fare sempre le
stesse attività ripetitive e perseverare nella solita routine da
developer frustrato. Ma tutto questo si può evitare con un cambio di
mentalità. Quello che voglio raccontare in questo talk è il mio percorso
evolutivo da un approccio waterfall a quello iterativo passando per i
tanti errori commessi.&lt;/p&gt;
&lt;p&gt;Racconterò come abbiamo realizzato un template che aiuta nel processo di
Continuous Delivery, dove la parola “continuous” è quella che definisce
bene l’importanza di questo processo. Nell’Agile Software Development,
il rilascio del software funzionante è uno dei punti più importanti e
questo deve avvenire spesso. Per poter rilasciare nuove funzionalità
però, dovremo scrivere tutti i test necessari, eseguirli, creare una
build e infine effettuare il deploy vero e proprio.&lt;/p&gt;
&lt;p&gt;Nello sviluppo del software moderno la Continuous Delivery (CD) è quel
processo che permette all’intero team di affrontare qualsiasi
cambiamento, come nuove feature, bugfix o esperimenti, in un modo
sostenibile, sicuro e rapido. In questo processo generalmente vengono
utilizzate tra le altre cose, due pratiche per effettuare i rilasci
continui: Continuous Integration (CI) e Continuous Deployment (CD).&lt;/p&gt;
&lt;p&gt;In questo talk racconterò come, insieme ai miei colleghi, siamo arrivati
alla costruzione di un processo automatizzato per effettuare rilasci sin
dal primo commit utilizzando Kubernetes, Docker, Python e Terraform per
la creazione di applicazioni web basate su Django e React.&lt;/p&gt;
&lt;p&gt;Slide:&lt;/p&gt;
&lt;p&gt;Speaker: Raffaele Colace&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="agile"></category><category term="best practice"></category><category term="case study"></category><category term="devops"></category><category term="django"></category></entry><entry><title>Leaflet on steroids with Django</title><link href="https://pyvideo.org/pycon-italia-2022/leaflet-on-steroids-with-django.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Valentino Gagliardi</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/leaflet-on-steroids-with-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Leaflet on steroids with Django - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Django fornisce potenti strumenti per costruire applicazioni
geospaziali. Ma cosa succede quando i dati da visualizzare diventano
troppi, e gli strumenti di base non bastano più? Basato su un caso
reale, in questo talk vedremo come rendere fruibile una mappa
inizialmente …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Leaflet on steroids with Django - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Django fornisce potenti strumenti per costruire applicazioni
geospaziali. Ma cosa succede quando i dati da visualizzare diventano
troppi, e gli strumenti di base non bastano più? Basato su un caso
reale, in questo talk vedremo come rendere fruibile una mappa
inizialmente lentissima da caricare. L’obiettivo del talk è quello di
fornire spunti e strumenti per affrontare ottimizzazioni lato backend e
frontend su Leaflet e Django, molto utili nel caso di grandi quantità di
dati geospaziali. In particolare vedremo nel dettaglio:&lt;/p&gt;
&lt;p&gt;Il problema, ovvero, una grande quantità di dati geospaziali da
visualizzare in mappa, che prima dell’ottimizzazione sono praticamente
inutilizzabili.&lt;/p&gt;
&lt;p&gt;La soluzione lato backend. Vedremo l’impiego di:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;filtri geospaziali intelligenti.&lt;/li&gt;
&lt;li&gt;stream per servire grandi quantità di dati.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La soluzione lato frontend. Vedremo l’impiego di:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;tecniche di ottimizzazione per il caricamento dinamico dei livelli
Leaflet.&lt;/li&gt;
&lt;li&gt;stream per il rendering progressivo dei dati geospaziali.&lt;/li&gt;
&lt;li&gt;filtri intelligenti e relative librerie per ottimizzare le richieste
verso il backend.&lt;/li&gt;
&lt;li&gt;test unitari e funzionali per verificare tutte le feature della
mappa.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Speaker: Valentino Gagliardi&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="apis"></category><category term="django"></category><category term="GIS"></category><category term="javascript"></category><category term="rest"></category></entry><entry><title>Librerie Python per Explainable Artificial Intelligence</title><link href="https://pyvideo.org/pycon-italia-2022/librerie-python-per-explainable-artificial-intelligence.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Roberto Marmo</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/librerie-python-per-explainable-artificial-intelligence.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Librerie Python per Explainable Artificial Intelligence - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Alcuni modelli di Intelligenza Artificiale creano black-box in cui è
difficile capire come decidono. IA spiegabile (XAI) descrive il
funzionamento con modelli di spiegazione e visualizzazione dei dati, per
creare fiducia nei risultati. Il talk presenta librerie XAI, righe di …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Librerie Python per Explainable Artificial Intelligence - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Alcuni modelli di Intelligenza Artificiale creano black-box in cui è
difficile capire come decidono. IA spiegabile (XAI) descrive il
funzionamento con modelli di spiegazione e visualizzazione dei dati, per
creare fiducia nei risultati. Il talk presenta librerie XAI, righe di
codice ed esempi di uso. Alcuni modelli di Intelligenza Artificiale
creano black-box in cui si può conoscere input e output, ma è difficile
capire come generano le decisioni al loro interno, tanto da renderli
inutili per risolvere certi problemi. IA spiegabile (XAI) descrive il
funzionamento con modelli di spiegazione e visualizzazione dei dati, per
creare fiducia nei risultati e gestire il rischio di malfunzionamento.
Perciò, XAI è una importante linea di ricerca e sviluppo. Il talk
presenta librerie XAI, righe di codice ed esempi di uso riguardanti:
Shap, Lime, Shapash, ExplainerDashboard, Dalex, ELI5. Link dove
scaricare le slide&lt;/p&gt;
&lt;p&gt;Speaker: Roberto Marmo&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="abstractions"></category><category term="machine learning"></category><category term="performance"></category><category term="predictions"></category></entry><entry><title>Lightning talks</title><link href="https://pyvideo.org/pycon-italia-2022/lightning-talks.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/lightning-talks.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks - PyCon Italia 2022&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Linting Python The Elegant Way</title><link href="https://pyvideo.org/pycon-italia-2022/linting-python-the-elegant-way.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Riya Bansal</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/linting-python-the-elegant-way.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Linting Python The Elegant Way - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;This talk is for those people who know basic python but are looking
forward to writing better and cleaner python code. Python has always
been known for its easy-to-understand syntax. This talk will empower all
developers and give perspective on how …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Linting Python The Elegant Way - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;This talk is for those people who know basic python but are looking
forward to writing better and cleaner python code. Python has always
been known for its easy-to-understand syntax. This talk will empower all
developers and give perspective on how can you write code in a much more
elegant way. Linting is the automated checking of your source code for
programmatic and stylistic errors. Linters analyze source code to flag
programming errors, bugs, stylistic errors, and suspicious constructs.
This is done by using a lint tool. Python being one of the most elegant
language has got a wide variety of listing tools available that can help
programmers in Code formatting and styling their code in the best
suitable form. Python has got some advance listing tools like pylint and
flake8. In this talk we will have a great deal of discussion around how
these linters can be used and how these tools can help you find more
bugs and improve your code quality. These linting tools finds problems
that are typically caught by a compiler for less dynamic languages. We
will also discuss about how can we manage import orders, code
formatting, checking security vulnerabilities, managing dependencies etc
using these tools. There are also code analysis tools that provide other
insights into your code. While maybe not linters by definition, these
tools are usually used side-by-side with linters. They too hope to
improve the quality of the code. It’s useful to have linters run against
your code frequently. If automation and consistency aren’t there, it’s
easy for a large team or project to lose sight of the goal and start
creating lower-quality code.&lt;/p&gt;
&lt;p&gt;Attendees will be able to learn 1. What is a linter? 2. Famous linting
solutions like pylint and flake 8 3. Use cases like ordering imports,
finding error bugs 4. Managing dependency in python with these linter
tools.&lt;/p&gt;
&lt;p&gt;Speaker: Riya Bansal&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="best practice"></category><category term="clean code"></category><category term="code analysis"></category><category term="community"></category><category term="development"></category></entry><entry><title>Make the most of Django</title><link href="https://pyvideo.org/pycon-italia-2022/make-the-most-of-django.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Paolo Melchiorre</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/make-the-most-of-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Make the most of Django - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Taking full advantage of &lt;strong&gt;Open Source&lt;/strong&gt; software means getting involved
in its &lt;strong&gt;community&lt;/strong&gt; and &lt;strong&gt;contributing&lt;/strong&gt; to its development. We will
see how this is profoundly true in the &lt;strong&gt;Django&lt;/strong&gt; case as well.
&lt;strong&gt;Django&lt;/strong&gt; is one of the longest running &lt;strong&gt;open source …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Make the most of Django - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Taking full advantage of &lt;strong&gt;Open Source&lt;/strong&gt; software means getting involved
in its &lt;strong&gt;community&lt;/strong&gt; and &lt;strong&gt;contributing&lt;/strong&gt; to its development. We will
see how this is profoundly true in the &lt;strong&gt;Django&lt;/strong&gt; case as well.
&lt;strong&gt;Django&lt;/strong&gt; is one of the longest running &lt;strong&gt;open source&lt;/strong&gt; web frameworks
but despite this it is still one of the best around and continues to be
actively developed.&lt;/p&gt;
&lt;p&gt;Approaching such &lt;strong&gt;software&lt;/strong&gt; can be intimidating to a novice developer
as well as an experienced one because it is the result of over &lt;strong&gt;15
years&lt;/strong&gt; of excellent &lt;strong&gt;developers&lt;/strong&gt; work and it would take a long time
to get to know it thoroughly.&lt;/p&gt;
&lt;p&gt;In this talk we will see together the way I found for anyone to take
full &lt;strong&gt;advantage&lt;/strong&gt; of Django while &lt;strong&gt;contributing&lt;/strong&gt; to its success and
that of its &lt;strong&gt;community&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="more-info"&gt;
&lt;h4&gt;More info&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Slide&lt;/strong&gt; and more &lt;strong&gt;information&lt;/strong&gt; on the talk on [&lt;/p&gt;
&lt;p&gt;Speaker: Paolo Melchiorre&lt;/p&gt;
&lt;/div&gt;
</content><category term="PyCon Italia 2022"></category><category term="best practice"></category><category term="community"></category><category term="django"></category></entry><entry><title>Managing large-scale ML pipelines with MLflow and serverless computing.</title><link href="https://pyvideo.org/pycon-italia-2022/managing-large-scale-ml-pipelines-with-mlflow-and-serverless-computing.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>ilyas chaoua</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/managing-large-scale-ml-pipelines-with-mlflow-and-serverless-computing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Managing large-scale Machine Learning pipelines with MLflow and
serverless computing. - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;MLOps aims to manage the machine learning (ML) lifecycle including
experimentation, reproducibility, deployment, and model registry. Come
to discover how in Vedrai - one of the top AI startups in Europe - we
enhance and maintain ML pipelines …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Managing large-scale Machine Learning pipelines with MLflow and
serverless computing. - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;MLOps aims to manage the machine learning (ML) lifecycle including
experimentation, reproducibility, deployment, and model registry. Come
to discover how in Vedrai - one of the top AI startups in Europe - we
enhance and maintain ML pipelines models in production reliably and
efficiently using MLOps. Problem:&lt;/p&gt;
&lt;p&gt;One difficulty of employing Machine Learning (ML) within organizations
is managing the model’s lifecycle. Moving from experimenting to
deployment in production environments is operated by different steps:
Preparing and Analysing Data, Training, Deployment, Monitoring, and
Governance of ML models. So, it is crucial to possess a platform to
manage and organize the ML lifecycle.&lt;/p&gt;
&lt;p&gt;Solution:&lt;/p&gt;
&lt;p&gt;In Vedrai, we combined the strength of the MLflow framework and the
resilience of AWS serverless services to manage, deploy, and scale our
ML models in production. MLflow is an open-source framework for tracking
the entire ML lifecycle from training to deployment. Among the
functions, it offers model tracking, packaging, and serving. Whereas,
deploying ML applications is an infrastructure affair that needs to be
scalable with minimum server management, which makes AWS serverless
services a great choice.&lt;/p&gt;
&lt;p&gt;Value:&lt;/p&gt;
&lt;p&gt;MLflow enforces the model’s reproducibility and robustness at the same
time allowing more centralized experimentation. AWS serverless services
allow training and inferencing pipelines to run without provisioning or
managing servers while only paying for the time it takes to run.&lt;/p&gt;
&lt;p&gt;Summary:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;State of the art of MLOps.&lt;/li&gt;
&lt;li&gt;Record and query experiments with MLflow Tracking.&lt;/li&gt;
&lt;li&gt;Package data science code with MLflow Projects.&lt;/li&gt;
&lt;li&gt;Store ML models with MLflow Models Registry.&lt;/li&gt;
&lt;li&gt;Deploy ML models in the AWS environment.&lt;/li&gt;
&lt;li&gt;Future MLOps challenges.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Speaker: ilyas chaoua&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="architecture"></category><category term="aws"></category><category term="best practice"></category><category term="deep learning"></category><category term="devops"></category><category term="docker"></category><category term="infrastructure"></category><category term="machine learning"></category><category term="open source"></category><category term="operations"></category><category term="packaging"></category><category term="performance"></category><category term="scaling"></category></entry><entry><title>/metrics, a must have</title><link href="https://pyvideo.org/pycon-italia-2022/metrics-a-must-have.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Luiz Marques</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/metrics-a-must-have.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;/metrics, a must have - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;With modern applications being distributed, only testing is enough to
ensure your apps are healthy? The web is wild and users are
unpredictable. Having a good strategy of observability in place is
essential. In this talk, I’ll demo how to setup …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;/metrics, a must have - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;With modern applications being distributed, only testing is enough to
ensure your apps are healthy? The web is wild and users are
unpredictable. Having a good strategy of observability in place is
essential. In this talk, I’ll demo how to setup extensible metrics in
your app using open-source tools With the advent of microservices and
all that jazz, the complexity of monitoring applications increased quite
a lot. How many instances of my app do I have running? Are they all
healthy? How is it performing under heavy load? Questions like that can
not be answered by guesses only, but you need data to be more assertive.&lt;/p&gt;
&lt;p&gt;In this talk, we will create a sample web application and instrument it
using Prometheus (and potentially other tools such as Grafana, Jaeger,
Alert Manager, etc) and see in practice how we can monitor web
applications in real-time.&lt;/p&gt;
&lt;p&gt;Speaker: Luiz Marques&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="apis"></category><category term="asyncio"></category><category term="debugging"></category><category term="docker"></category><category term="open source"></category><category term="performance"></category><category term="tooling"></category></entry><entry><title>Modern Data Engineering with Python</title><link href="https://pyvideo.org/pycon-italia-2022/modern-data-engineering-with-python.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Andrea Guzzo</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/modern-data-engineering-with-python.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern Data Engineering with Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Speaker: Andrea Guzzo&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Modern Python: Alla scoperta delle ultime novità di (C)Python</title><link href="https://pyvideo.org/pycon-italia-2022/modern-python-alla-scoperta-delle-ultime-novita-di-cpython.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Mattia Giambirtone</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/modern-python-alla-scoperta-delle-ultime-novita-di-cpython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern Python: Alla scoperta delle ultime novità di (C)Python - PyCon
Italia 2022&lt;/p&gt;
&lt;p&gt;Vi siete mai chiesti se ci fosse un modo migliore di scrivere il vostro
codice? Una qualche feature di Python oscura di cui eravate all’oscuro?
Sì? Ebbene, insieme demistificheremo alcune delle ultime feature più
interessanti …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern Python: Alla scoperta delle ultime novità di (C)Python - PyCon
Italia 2022&lt;/p&gt;
&lt;p&gt;Vi siete mai chiesti se ci fosse un modo migliore di scrivere il vostro
codice? Una qualche feature di Python oscura di cui eravate all’oscuro?
Sì? Ebbene, insieme demistificheremo alcune delle ultime feature più
interessanti e più sottovalutate del vecchio serpentone: sarà uno
spasso, promesso! Modern Python: Alla scoperta delle ultime novità di
(C)Python&lt;/p&gt;
&lt;p&gt;Pubblico Consigliato&lt;/p&gt;
&lt;p&gt;Questa presentazione è diretta a sviluppatori Python con almeno qualche
anno di esperienza sulle spalle e che siano interessati a rendere il
proprio codice più leggibile, idiomatico e magari anche più &lt;em&gt;veloce&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Introduzione Vi siete mai trovati a dover scrivere codice simile a
questo:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;some_var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;some_function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;some_var&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;Code&lt;/span&gt; &lt;span class="n"&gt;Here&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;e aver pensato: &lt;em&gt;”Cavolo, quell’assegnamento sembra proprio di
troppo!”&lt;/em&gt;? Se la risposta è sì, allora questa presentazione fa per voi!
Vi mostrerò come migliorare l’estetica, e magari anche la performance,
del vostro codice, mantenendo la medesima funzionalità. Imparerete
concetti avanzati quali i generatori asincroni, introdotti nel lontano
Python 3.6, il mitico operatore “tricheco”, la nuova e scintillante
istruzione &lt;tt class="docutils literal"&gt;match&lt;/tt&gt;, per un efficiente ed elegante pattern matching, ed
altro ancora: Sarà una figata, promesso!&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Immagino già che qualcuno di voi si stia chiedendo, &lt;em&gt;”Ma, Matt, Python
3.6? É vecchissimo! Perchè sei venuto a parlarci di una feature
introdotta nel 2016?”&lt;/em&gt;: Okay, diciamo che ho mentito (giusto un
pochino).&lt;/p&gt;
&lt;p&gt;Non tutte le funzionalità di cui parlerò in questa presentazione sono
&lt;em&gt;esattamente&lt;/em&gt; nuove di zecca, ma ho sempre avuto la sensazione che
alcune— specialmente i generatori asincroni— non abbiano mai ricevuto
l’attenzione che meritavano e che siano andate piuttosto in sordina: ciò
è stato probabilmente dovuto dal rilascio di Python 3.5 (che per
rinfrescarvi la memoria ha finalmente standardizzato la programmazione
asincrona, introducendo il concetto di coroutine e vari altri nuovi
oggetti), e con questa presentazione vorrei rendere loro giustizia e al
tempo stesso far notare alcune delle (spesso ben nascoste!) trappole in
cui si può cadere facendone uso. Giusto per dare un’assaggio degli
argomenti che voglio trattare, ecco cosa spero impariate dalla
presentazione: - Migliorare le performance del vostro codice,
parallelizzando le operazioni di I/O basata su file, utilizzando un solo
thread grazie all’aiuto dei generatori asincroni - Risparmiare prezioso
spazio e tempo sostituendo &lt;tt class="docutils literal"&gt;typing.Union[A, B, C]&lt;/tt&gt; con il suo
(magnificamente idiomatico) equivalente &lt;tt class="docutils literal"&gt;A | B | C&lt;/tt&gt; - Imparare la
maniera &lt;em&gt;”Pythonica”&lt;/em&gt; di effettuare pattern matching grazie all’uso
della nuova istruzione &lt;tt class="docutils literal"&gt;match&lt;/tt&gt; introdotta in Python 3.10. Potete dire
finalmente addio a codice del tipo
&lt;tt class="docutils literal"&gt;python&amp;nbsp; cases = {1: &amp;quot;one&amp;quot;, 2: &amp;quot;two&amp;quot;, 3: &amp;quot;three&amp;quot;}&amp;nbsp; one_two_three = cases.get(some_var, default_value)&lt;/tt&gt;
- Altro ancora! Ma vi toccherà venire alla presentazione per scoprirlo
:)&lt;/p&gt;
&lt;p&gt;Speaker: Mattia Giambirtone&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="abstractions"></category><category term="best practice"></category><category term="clean code"></category><category term="cpython"></category><category term="performance"></category><category term="type hinting"></category></entry><entry><title>MongoDB and Python, a Perfect Match</title><link href="https://pyvideo.org/pycon-italia-2022/mongodb-and-python-a-perfect-match.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Joel Lord</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/mongodb-and-python-a-perfect-match.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MongoDB and Python, a Perfect Match - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Any modern web application needs a database. Why hassle with an old
database when you can easily use modern technology? MongoDB works
perfectly well with Python. Learn how in this talk. Is your application
looking for a database to hang …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MongoDB and Python, a Perfect Match - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Any modern web application needs a database. Why hassle with an old
database when you can easily use modern technology? MongoDB works
perfectly well with Python. Learn how in this talk. Is your application
looking for a database to hang out with? Search no more! MongoDB and
Python are a perfect match. By leveraging the native Python driver,
accessing a MongoDB database is easier than ever. In this presentation,
the attendees will learn what a document database is and how to use it.&lt;/p&gt;
&lt;p&gt;Speaker: Joel Lord&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="apis"></category><category term="databases"></category><category term="mongodb"></category></entry><entry><title>Mutabilità e side effect non sono tuoi amici</title><link href="https://pyvideo.org/pycon-italia-2022/mutabilita-e-side-effect-non-sono-tuoi-amici.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Claudio Stamile</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/mutabilita-e-side-effect-non-sono-tuoi-amici.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mutabilità e side effect non sono tuoi amici - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;La mutabilità di classi ed oggetti in python è croce e delizia degli
sviluppatori. L’utilizzo di operatori di modifica può generare problemi
nella consistenza delle strutture dati. In questo talk analizzeremo il
concetto di mutabilità mostrando alcuni …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mutabilità e side effect non sono tuoi amici - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;La mutabilità di classi ed oggetti in python è croce e delizia degli
sviluppatori. L’utilizzo di operatori di modifica può generare problemi
nella consistenza delle strutture dati. In questo talk analizzeremo il
concetto di mutabilità mostrando alcuni metodi per evitare side effect
indesiderati. Python lascia agli sviluppatori un’enorme libertà di
utilizzo quando si tratta di modificare strutture dati o classi. E’
dunque necessario procedere in modo strutturato e rigoroso quando
vengono effettuate delle modifiche al fine di evitare che strutture dati
mutabili possano essere modificate in modo impropio generando dei side
effect che si ripercuotono all’interno di tutto il codice. Questo
problema è di particolare importanza quando si scrivono delle pipeline
di machine learning. In questi casi, infatti, a mutazione di una
struttura dati può portare ad un errato processing dei dati che, di
conseguenza, porterà al training di algoritmi di machine learning
errati. Scopo di questo talk è quello di investigare il concetto di
mutabilità nelle strutture dati e nelle classi e di quali effetti
dannosi essi possono generare all’interno del codice ed in particolar
modo in pipeline di machine learning. Verranno inoltre proposte alcune
buone norme (che prendono spunto dalla programmazione funzionale) utili
per poter scrivere codice robusto e privo di effetti indesiderati dati
dalla mutazione di eventuali strutture dati o classi.&lt;/p&gt;
&lt;p&gt;Speaker: Claudio Stamile&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="best practice"></category><category term="data structures"></category><category term="functional programming"></category></entry><entry><title>Nowcasting financial crisis with deep learning techniques</title><link href="https://pyvideo.org/pycon-italia-2022/nowcasting-financial-crisis-with-deep-learning-techniques.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Pelucchi Mauro</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/nowcasting-financial-crisis-with-deep-learning-techniques.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nowcasting financial crisis with deep learning techniques - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;In this tutorial, I’ll show how train machine learning models to predict
a financial crisis event in the next 20 days. Specifically, we’ll speak
about: - preparation of the dataset - selection of variables with
RandonForest and Boruta - training …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nowcasting financial crisis with deep learning techniques - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;In this tutorial, I’ll show how train machine learning models to predict
a financial crisis event in the next 20 days. Specifically, we’ll speak
about: - preparation of the dataset - selection of variables with
RandonForest and Boruta - training and the predictions - measure of our
performances This tutorial shows how apply Regression Models and Deep
Learning Models to nowcasting stock markets crisis events. Specifically,
we’ll how the transmission mechanisms across stock markets can be used
to train machine learning models to predict crisis events. The
tutorial’ll show the entire pipeline: from the preparation of the
dataset, how balance observations and how measure our performances. Here
the git repo of the talk:&lt;/p&gt;
&lt;p&gt;Speaker: Pelucchi Mauro&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="big data"></category><category term="machine learning"></category></entry><entry><title>Oops ho sovrascritto le tue modifiche</title><link href="https://pyvideo.org/pycon-italia-2022/oops-ho-sovrascritto-le-tue-modifiche.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Riccardo Magliocchetti</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/oops-ho-sovrascritto-le-tue-modifiche.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Oops ho sovrascritto le tue modifiche - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Mai capitato di sovrascrivere dati involontariamente tramite una
interfaccia web o tramite un pannello di amministrazione? 😅 Vediamo
cosa possiamo fare per limitare i danni 🎉 Mai capitato di sovrascrivere
dati involontariamente dall’interfaccia web o tramite il pannello di
amministrazione di …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Oops ho sovrascritto le tue modifiche - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Mai capitato di sovrascrivere dati involontariamente tramite una
interfaccia web o tramite un pannello di amministrazione? 😅 Vediamo
cosa possiamo fare per limitare i danni 🎉 Mai capitato di sovrascrivere
dati involontariamente dall’interfaccia web o tramite il pannello di
amministrazione di una applicazione Django? In questo talk vedremo
qualche strategia per ovviare al problema.&lt;/p&gt;
&lt;p&gt;Vedremo delle strategie generiche come salvare un log delle nostre
modifiche, fare il locking delle righe del database oppure usare la
concorrenza ottimistica. Quindi vedremo una strategia specifica di
PostgreSQL implementando un sistema di concorrenza ottimistica per le
modifiche fatte da utenti tramite il pannello di amministrazione di
Django.&lt;/p&gt;
&lt;p&gt;[Slides](&lt;/p&gt;
&lt;p&gt;Speaker: Riccardo Magliocchetti&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="django"></category><category term="postgresql"></category></entry><entry><title>Optimal design &amp; control of a telecommunications network</title><link href="https://pyvideo.org/pycon-italia-2022/optimal-design-control-of-a-telecommunications-network.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Andi Dulla</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/optimal-design-control-of-a-telecommunications-network.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Optimal design &amp;amp; control of a telecommunications network - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Everyone wants to go faster on the Internet, or design faster networks.
You can throw a lot of money to it or you can squeeze every bit from it.
I’ll show through a research project how can we …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Optimal design &amp;amp; control of a telecommunications network - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Everyone wants to go faster on the Internet, or design faster networks.
You can throw a lot of money to it or you can squeeze every bit from it.
I’ll show through a research project how can we do the latter and create
better networks. These two years have shown big weaknesses in the design
and usage of the Internet and many other important enterprise networks.
A good Quality of Experience and cost-effectiveness are paramount for
network operators and designers. Enter optimal design and control…
Through the use of optimal control it’s possibile to double the
performance with respect to how it’s operated today, furthermore it
allows us to better organize the network in order to minimally distrupt
the users in the event of a failure. I’ll show through two examples the
algorithms, the theory behind them and the code.&lt;/p&gt;
&lt;p&gt;Speaker: Andi Dulla&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="abstractions"></category><category term="architecture"></category><category term="case study"></category><category term="communication"></category></entry><entry><title>Patti chiari, amicizia lunga. Disaccoppiamo lo sviluppo con test di contratto</title><link href="https://pyvideo.org/pycon-italia-2022/patti-chiari-amicizia-lunga-disaccoppiamo-lo-sviluppo-con-test-di-contratto.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Daniele Pompa</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/patti-chiari-amicizia-lunga-disaccoppiamo-lo-sviluppo-con-test-di-contratto.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Patti chiari amicizia lunga. Come disaccoppiamo lo sviluppo tramite i
test di contratto - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Front-end, vi è mai capitato che nonostante vi siate messi d’accordo con
il back-end l’endpoint non vi espone qualcosa? Noi abbiamo risolto
utilizzando il Contract testing, vi mostrerò i vantaggi e …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Patti chiari amicizia lunga. Come disaccoppiamo lo sviluppo tramite i
test di contratto - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Front-end, vi è mai capitato che nonostante vi siate messi d’accordo con
il back-end l’endpoint non vi espone qualcosa? Noi abbiamo risolto
utilizzando il Contract testing, vi mostrerò i vantaggi e alcuni casi
reali di come scrivere un patto aiuta a rendere più semplice lo sviluppo
per tutti. Quando sono entrato in 20tab l’azienda seguiva già le
metodologie Lean e Agile ed era composta principalmente da sviluppatori
Python/Django. Quando abbiamo deciso di disaccoppiare i servizi
(back-end in Django e front-end in React JS) siamo andati incontro a
difficoltà dovute ai differenti tempi di sviluppo o limiti tecnici. Come
prima soluzione avevamo provato con alternare lo sviluppo dei due
servizi prima iniziava il back-end, una volta completato partiva lo
sviluppo front-end. Questo ci rendeva inefficienti a volte i dati che
arrivavano al front-end erano insufficienti o eccessivi rispetto
all’interfaccia che doveva costruire. Quindi abbiamo provato a
dettagliare con maggior rigore tutti i requisiti tecnici necessari per
partire in parallelo, ma lato front-end dovevamo sempre costruirci un
server finto per procedere con lo sviluppo. In questo ci è venuto
incontro il contract testing, entrambi i rappresentanti dei servizi si
riuniscono prendono il design lo analizzano insieme e il front-end
scrive un test di contratto dopo di che entrambi i servizi possono
procedere con i rispettivi sviluppi in maniera svincolata tra di loro.
Il front-end può sfruttare il pact-stub-server per scrivere test
funzionali con cypress e per lavorare senza neanche tirare su il
servizio back-end. Questo ha portato il front-end a riorganizzare il
proprio template, ora abbiamo 3 tipi di test diversi, quelli unitari sui
componenti, quelli funzionali con cypress e quelli di contratto con Pact
JS. Tutti questi test tramite Docker vengono eseguiti nelle nostre
pipeline e bloccano il nostro processo di deploy in caso di fallimento.&lt;/p&gt;
&lt;p&gt;Slide:&lt;/p&gt;
&lt;p&gt;Speaker: Daniele Pompa&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="apis"></category><category term="django"></category><category term="docker"></category><category term="javascript"></category><category term="testing"></category></entry><entry><title>Predictive maintenance: from data collection to ML key approaches</title><link href="https://pyvideo.org/pycon-italia-2022/predictive-maintenance-from-data-collection-to-ml-key-approaches.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>KHVATOVA KRISTINA</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/predictive-maintenance-from-data-collection-to-ml-key-approaches.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Predictive maintenance: from data collection to ML key approaches -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Predictive Maintenance (PM) prevents future system failures and helps to
reduce the maintenance costs. Machine Learning with the use of IoT
Sensors is the most efficient approach. Come to see some case study
solved by Vedrai - one …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Predictive maintenance: from data collection to ML key approaches -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Predictive Maintenance (PM) prevents future system failures and helps to
reduce the maintenance costs. Machine Learning with the use of IoT
Sensors is the most efficient approach. Come to see some case study
solved by Vedrai - one of the top AI startups in Europe - and how it
addresses the topic. PROBLEM.&lt;/p&gt;
&lt;p&gt;The world we live in today is highly dependent on the functioning of
machines and systems. Breakdown of machinery and tools should never come
as a surprise. When predictive maintenance is working effectively,
maintenance is only performed on machines when it is required. That is,
just before failure is likely to occur. This brings reduction of the
downtime and cost, maximizes component utilization and residual useful
life.&lt;/p&gt;
&lt;p&gt;SOLUTION.&lt;/p&gt;
&lt;p&gt;Machine learning-based PdM is one of the best-known data-based
analytical approaches for monitoring industrial systems to maximize
reliability and efficiency. It is the most efficient method as it allows
the maintenance team to anticipate failure predictions, reduce equipment
downtime, increase reliability and improve performance by reducing
operations and maintenance expenses. The talk will outline the
methodologies applied by Vedrai Team - one of the top AI startups in
Europe - that allow it to overcome the most common obstacles of ML-based
PdM.&lt;/p&gt;
&lt;p&gt;TALK OUTLINE.&lt;/p&gt;
&lt;p&gt;The main purpose of this presentation is to show how to build and use
PdM models in their entirety, and it will be based on the following
steps:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;collect OT (operational technology), IT (informational technology)
data and other information about manufacturing processes&lt;/li&gt;
&lt;li&gt;search patterns and detect anomalies&lt;/li&gt;
&lt;li&gt;train ML model to provide early warning notifications and diagnosis
of equipment problems days, weeks or months in advance of the fault&lt;/li&gt;
&lt;li&gt;present key studies that show how ML algorithms can effectively
estimate the maintenance plan&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Speaker: KHVATOVA KRISTINA&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="case study"></category><category term="education"></category><category term="iot"></category><category term="machine learning"></category><category term="predictions"></category></entry><entry><title>Pro tips for writing great unit tests</title><link href="https://pyvideo.org/pycon-italia-2022/pro-tips-for-writing-great-unit-tests.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Raymond Hettinger</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/pro-tips-for-writing-great-unit-tests.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pro tips for writing great unit tests - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;There is an art to condensing test concepts into readable, fast, clear
predicates.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;We look at many examples and show how they can be improve&lt;/li&gt;
&lt;li&gt;Master the use of any() and all() with generator expressions.&lt;/li&gt;
&lt;li&gt;Expression set() relations to …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pro tips for writing great unit tests - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;There is an art to condensing test concepts into readable, fast, clear
predicates.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;We look at many examples and show how they can be improve&lt;/li&gt;
&lt;li&gt;Master the use of any() and all() with generator expressions.&lt;/li&gt;
&lt;li&gt;Expression set() relations to express big ideas clearly.&lt;/li&gt;
&lt;li&gt;Cover the problem space with combinatoric iterators: product(),
combinations(), permutations()&lt;/li&gt;
&lt;li&gt;Use subtests for clear error reporting&lt;/li&gt;
&lt;li&gt;Factor-out data acquisition and parsing from the test predicates.&lt;/li&gt;
&lt;li&gt;Learn patterns for testing edge cases.&lt;/li&gt;
&lt;li&gt;Cover class based technique for test reuse.&lt;/li&gt;
&lt;li&gt;Make effective use of setup and teardown.&lt;/li&gt;
&lt;li&gt;We look at many examples and show how they can be improved&lt;/li&gt;
&lt;li&gt;Treating TDD test cases and bug test cases with special reverence.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Speaker: Raymond Hettinger&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Processing and analysing streaming data with Python and Apache Flink</title><link href="https://pyvideo.org/pycon-italia-2022/processing-and-analysing-streaming-data-with-python-and-apache-flink.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Javier Ramirez</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/processing-and-analysing-streaming-data-with-python-and-apache-flink.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Processing and analysing streaming data with Python and Apache Flink -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Data used to be a batch thing, but more and more we get unbounded
streams of data, fast or slow, that we need to process and analyse in
near real time.&lt;/p&gt;
&lt;p&gt;In this talk I’ll …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Processing and analysing streaming data with Python and Apache Flink -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Data used to be a batch thing, but more and more we get unbounded
streams of data, fast or slow, that we need to process and analyse in
near real time.&lt;/p&gt;
&lt;p&gt;In this talk I’ll show you how you can use Apache Flink and QuestDB to
build reliable streaming data pipelines that can grow as much as you
need. Data used to be a batch thing, but more and more we get unbounded
streams of data, fast or slow, that we need to process and analyse in
near real time.&lt;/p&gt;
&lt;p&gt;In this talk I’ll show you how you can use Apache Flink and QuestDB to
build reliable streaming data pipelines that can grow as much as your
Python application needs.&lt;/p&gt;
&lt;p&gt;Speaker: Javier Ramirez&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="analytics"></category><category term="big data"></category><category term="databases"></category><category term="distributed systems"></category><category term="open source"></category></entry><entry><title>Protecting hardcoded credentials in public source code</title><link href="https://pyvideo.org/pycon-italia-2022/protecting-hardcoded-credentials-in-public-source-code.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Marco Rosa</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/protecting-hardcoded-credentials-in-public-source-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Protecting hardcoded credentials in public source code - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Hardcoding credentials in source code is a known bad practice, but it is
still happening every day, even on public platforms like GitHub.
Credential Digger is an open source scanning tool that can help
developers find and remediate to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Protecting hardcoded credentials in public source code - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Hardcoding credentials in source code is a known bad practice, but it is
still happening every day, even on public platforms like GitHub.
Credential Digger is an open source scanning tool that can help
developers find and remediate to their exposed credentials with a low
false positive rate. Github is now widely adopted in the software
development industry as internal and external code hosting, sharing and
versioning platform. Even if this platform offers advanced code control
features it remains exposed to security weaknesses. In this talk we will
discuss about Github security concepts and introduce an SAP Open Source
tool called Credential Digger used to scan Git platforms (GitHub,
GitLab, BitBucket, etc.) in order to identify hardcoded credentials
(Passwords, API Keys, Secret Keys, Tokens, personal information,
internal domains, etc.). Compared to other secret scanners in the
market, Credential Digger is able to identify passwords with a low false
positive rate. Thanks to a NLP model we trained for this purpose, we can
identify when passwords are fake and when they are real. Together with
Credential Digger, we also work on a real time Github Organization
monitor that analyzes permanently the new commits on the projects of a
team, and alerts the owner when a potential secret is shared.&lt;/p&gt;
&lt;p&gt;Slides:&lt;/p&gt;
&lt;p&gt;Speaker: Marco Rosa&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="open source"></category><category term="security"></category></entry><entry><title>Psycopg from 2 to 3: designing and living Free Software</title><link href="https://pyvideo.org/pycon-italia-2022/psycopg-from-2-to-3-designing-and-living-free-software.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Daniele Varrazzo</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/psycopg-from-2-to-3-designing-and-living-free-software.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Psycopg from 2 to 3: designing and living Free Software - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Since it is inception, psycopg2 allowed seamless communication between
Python and PostgreSQL. But after 15 years and numerous evolutions of
both PostgreSQL and Python, a new challenge approached the project: How
do we embrace the new …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Psycopg from 2 to 3: designing and living Free Software - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Since it is inception, psycopg2 allowed seamless communication between
Python and PostgreSQL. But after 15 years and numerous evolutions of
both PostgreSQL and Python, a new challenge approached the project: How
do we embrace the new ways of doing things while maintaining a stable
codebase?&lt;/p&gt;
&lt;p&gt;The answer? psycopg3. A unique occasion to rewrite the library without
having to worry about backward compatibility.&lt;/p&gt;
&lt;p&gt;This talk will go over all the hard design decisions that came with it:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What do we keep the same or radically change?&lt;/li&gt;
&lt;li&gt;How do we make the migration from 2 to 3 as painless as possible?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Speaker: Daniele Varrazzo&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Python 3.10: let's pattern match! 🔥</title><link href="https://pyvideo.org/pycon-italia-2022/python-310-lets-pattern-match.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Laysa Uchoa</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/python-310-lets-pattern-match.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.10: let’s pattern match! 🔥 - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Python 3.10 is out there and with this comes Pattern Matching. With this
talk, you will be surprised how simple, yet powerful, Pattern Matching
really is.&lt;/p&gt;
&lt;p&gt;This talk and you, it is a match! 🔥 Python 3.10 is …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.10: let’s pattern match! 🔥 - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Python 3.10 is out there and with this comes Pattern Matching. With this
talk, you will be surprised how simple, yet powerful, Pattern Matching
really is.&lt;/p&gt;
&lt;p&gt;This talk and you, it is a match! 🔥 Python 3.10 is out there now. This
was a two-digit minor version change since the last release, and with
this release new ways of thinking about programming were brought to the
Python language - Pattern Matching.&lt;/p&gt;
&lt;p&gt;We will understand what was there before Python Pattern Matching and how
to use Pattern Matching in different scenarios. We will pattern match
from simple data types to more complex ones, such as dictionaries and
objects. We will also understand how to use guards, and how can build
composable patterns.&lt;/p&gt;
&lt;p&gt;By the end of this talk, you will be surprised how simple, yet powerful,
Pattern Matching really is. This talk and you, it is a match!&lt;/p&gt;
&lt;p&gt;Speaker: Laysa Uchoa&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="apis"></category><category term="best practice"></category><category term="development"></category></entry><entry><title>Python, Data Science and the Community: The Past, Present and Future</title><link href="https://pyvideo.org/pycon-italia-2022/python-data-science-and-the-community-the-past-present-and-future.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Fabio Pliger</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/python-data-science-and-the-community-the-past-present-and-future.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python, Data Science and the Community: The Past, Present and Future -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;We’ll talk about some of the history of Python, Data Science and our
community, the current state of affairs, and what is waiting for us in
the future. And yes(!), we’ll also be …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python, Data Science and the Community: The Past, Present and Future -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;We’ll talk about some of the history of Python, Data Science and our
community, the current state of affairs, and what is waiting for us in
the future. And yes(!), we’ll also be talking about and having fun with
PyScript.&lt;/p&gt;
&lt;p&gt;Speaker: Fabio Pliger&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Python Developers vs UX/UI Designer, incontri e scontri</title><link href="https://pyvideo.org/pycon-italia-2022/python-developers-vs-uxui-designer-incontri-e-scontri.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Virginia Capoluongo</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/python-developers-vs-uxui-designer-incontri-e-scontri.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Developers vs UX/UI Designer, incontri e scontri - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Racconto la mia esperienza come UX/UI Designer che da 4 anni collabora
con un team di sviluppatori Python, due mondi affini che possono però
sentirsi distanti e parlare lingue differenti. Come, con un po’ di
impegno …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Developers vs UX/UI Designer, incontri e scontri - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Racconto la mia esperienza come UX/UI Designer che da 4 anni collabora
con un team di sviluppatori Python, due mondi affini che possono però
sentirsi distanti e parlare lingue differenti. Come, con un po’ di
impegno, siamo riusciti a trovare un equilibrio fra call, metodologie e
qualche birra. Racconto la mia esperienza con un team di sviluppatori
Python. Quando quattro anni fa ho iniziato a collaborare con loro ho
sentito per la prima volta parlare di Django, Agile, DevOps… arabo per
me che venivo da un mondo di colori e creatività. Come designer avevo
sempre lavorato da freelance con sviluppatori e agenzie, progettando
interfacce che venivano poi implementate, in molti casi il mio lavoro
finiva con la consegna del mockup che veniva “dato in pasto” a
sviluppatori nella maggior parte dei casi sconosciuti.&lt;/p&gt;
&lt;p&gt;Lavorando in un team coordinato e collaborativo siamo riusciti a trovare
dei punti di incontro fra design thinking e continuous delivery,
inserendo nel processo una fase di discovery che include indagini e
co-design per migliorare i prodotti e l’esperienza degli utenti.&lt;/p&gt;
&lt;p&gt;Speaker: Virginia Capoluongo&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="agile"></category><category term="development"></category></entry><entry><title>Python has a macro language: it's Python</title><link href="https://pyvideo.org/pycon-italia-2022/python-has-a-macro-language-its-python.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Tin Tvrtkovic</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/python-has-a-macro-language-its-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has a macro language: it’s Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;A small but growing number of Python projects, including &lt;tt class="docutils literal"&gt;attrs&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;cattrs&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;incant&lt;/tt&gt;, use Python to generate Python.&lt;/p&gt;
&lt;p&gt;We will example concrete cases of code generation in these libraries and
go over the ‘how’ and the ‘why’. Macros …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has a macro language: it’s Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;A small but growing number of Python projects, including &lt;tt class="docutils literal"&gt;attrs&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;cattrs&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;incant&lt;/tt&gt;, use Python to generate Python.&lt;/p&gt;
&lt;p&gt;We will example concrete cases of code generation in these libraries and
go over the ‘how’ and the ‘why’. Macros in mainstream languages are
generally a tool for metaprogramming, probably the most famous examples
being preprocessor directives in C and C++, and Rust macros.&lt;/p&gt;
&lt;p&gt;Python has rich metaprogramming capabilities baked in through the
compile and eval built-in functions, although a little care needs to be
taken for the generated code to be debuggable and properly shown in
track staces.&lt;/p&gt;
&lt;p&gt;We will examine one concrete example of metaprogramming in each of the
attrs, cattrs and incant libraries.&lt;/p&gt;
&lt;p&gt;Speaker: Tin Tvrtkovic&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="compiler and interpreters"></category><category term="performance"></category></entry><entry><title>Python Italia Yearly Meeting</title><link href="https://pyvideo.org/pycon-italia-2022/python-italia-yearly-meeting.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/python-italia-yearly-meeting.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Italia Yearly Meeting - PyCon Italia 2022&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Python Robo-Advisor: Come uso Python per gestire i mie risparmi</title><link href="https://pyvideo.org/pycon-italia-2022/python-robo-advisor-come-uso-python-per-gestire-i-mie-risparmi.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Damiano Dotto</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/python-robo-advisor-come-uso-python-per-gestire-i-mie-risparmi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Robo-Advisor: Come uso Python per gestire i mie risparmi - PyCon
Italia 2022&lt;/p&gt;
&lt;p&gt;Si parla tanto di libertà finanzia e di non lasciare marcire i risparmi
in banca e allora perché non usare le nostre competenze da developer e
le librerie di Python per creare un portafoglio basato su …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Robo-Advisor: Come uso Python per gestire i mie risparmi - PyCon
Italia 2022&lt;/p&gt;
&lt;p&gt;Si parla tanto di libertà finanzia e di non lasciare marcire i risparmi
in banca e allora perché non usare le nostre competenze da developer e
le librerie di Python per creare un portafoglio basato su algoritmi e
dati quantitativi? Oggi giorno si sente sempre di più parlare di libertà
finanziaria, concetto un po’ utopico a mio avviso. Sono un programmatore
“comune” e tendo spesso ad essere pratico più che teorico (so che anche
tu non leggi la documentazione prima di scrivere codice ;) )! Ti
mostrerò in maniera concreta come è possibile sfruttare le nostre
conoscenze di programmazione per poter assumere un “consulente
finanziario fedele” (così mi piace definirlo) che prenda decisioni
obiettive per gestire al meglio i nostri risparmi sui mercati
finanziari. In 30 minuti, vedremo assieme come costruirci un robot
automatico che ci permetta di testare, validare, ottimizzare una
strategia di trading automatico con un esempio REALE, statistico e
basato sui dati.&lt;/p&gt;
&lt;p&gt;Speaker: Damiano Dotto&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="data structures"></category><category term="education"></category><category term="static analysis"></category></entry><entry><title>Python, you can drive my car. Yes, I'm gonna be a star.</title><link href="https://pyvideo.org/pycon-italia-2022/python-you-can-drive-my-car-yes-im-gonna-be-a-star.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Fabio Lamanna</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/python-you-can-drive-my-car-yes-im-gonna-be-a-star.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python, you can drive my car. Yes, I’m gonna be a star. - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;We know that our beloved Python can do everything, and today we are
learning how to use it to build a micro-simulation model of mobility!
Thanks to SUMO, a microscopic traffic simulation package …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python, you can drive my car. Yes, I’m gonna be a star. - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;We know that our beloved Python can do everything, and today we are
learning how to use it to build a micro-simulation model of mobility!
Thanks to SUMO, a microscopic traffic simulation package written in C++
and Python, we discover how to analyze vehicle, pedestrian and train
flows very easily! In this talk I present SUMO, an open source, highly
portable, microscopic and continuous traffic simulation package designed
to handle large networks. Within SUMO, you can build multi-modal
transportation networks, including demand (flows of vehicles,
pedestrians, buses, trains) and network characteristics (traffic lights,
junctions, bike lanes etc.), running simulations over large urban
networks.&lt;/p&gt;
&lt;p&gt;Written in C++, it comprises several functions and tools written in
Python, as well a complete package called sumolib, a set of Python
modules for working with SUMO networks.&lt;/p&gt;
&lt;p&gt;We will learn how to import a network from OpenStreetMap in one click
thanks to a Python script, set some traffic flows and run a simulation
within the SUMO-GUI, a perfect interface to see your cars, bicycles,
buses flowing on the network. Typical outputs that we can get and
visualize with Python include vehicle information data, trajectories,
speed, delays and emissions.&lt;/p&gt;
&lt;p&gt;If you are a mobility passioner or a professional engineer dealing with
traffic problems, tired of spending tons of money on commercial
software, you should definitely give SUMO a try.&lt;/p&gt;
&lt;p&gt;Please download the slides of the talk here:&lt;/p&gt;
&lt;p&gt;Speaker: Fabio Lamanna&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="open source"></category><category term="tooling"></category><category term="visualization"></category></entry><entry><title>Python's Life of the Brain</title><link href="https://pyvideo.org/pycon-italia-2022/pythons-life-of-the-brain.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Dominik Krzeminski</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/pythons-life-of-the-brain.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python’s Life of the Brain - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In this talk, you will learn how to analyse the data coming from the
human brain, how to visualise and process individual neurons, how to
design customised cognitive experiments and finally how to create your
own brain from scratch in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python’s Life of the Brain - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In this talk, you will learn how to analyse the data coming from the
human brain, how to visualise and process individual neurons, how to
design customised cognitive experiments and finally how to create your
own brain from scratch in jupyter notebook! There is no need to praise
Python for its ubiquitousness in various areas of industry or science.
We all know about Python applications to engineering, web development,
data analysis, or machine learning. But an emerging number of packages
appear that allow scientists and brain research enthusiasts to analyse
the data coming from the brain, visualise and process individual neurons
from various brain areas, design customised cognitive experiments and
finally simulate the whole brain in silico! In this talk, you’ll learn
how to do that, without leaving your jupyter notebook.&lt;/p&gt;
&lt;p&gt;Speaker: Dominik Krzeminski&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="case study"></category><category term="education"></category><category term="open source"></category><category term="tooling"></category><category term="visualization"></category></entry><entry><title>RegEx Strikes Back: Regular Expressions for Text Mining</title><link href="https://pyvideo.org/pycon-italia-2022/regex-strikes-back-regular-expressions-for-text-mining.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Daniel Mesejo</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/regex-strikes-back-regular-expressions-for-text-mining.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;RegEx Strikes Back: Regular Expressions for Text Mining - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;A short time ago in a galaxy not so far away a regular expression was
taking 5 days to run. In this talk you will learn why regular
expressions can be slow, how to make them fast using …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;RegEx Strikes Back: Regular Expressions for Text Mining - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;A short time ago in a galaxy not so far away a regular expression was
taking 5 days to run. In this talk you will learn why regular
expressions can be slow, how to make them fast using a trie regex data
structure and the many uses a good old regular expression can have.
Regular Expressions have a bad reputation, and they are slow (or so they
say) for text mining tasks. In this talk you’ll learn why regex can be
slow and how to use a Trie Regex to craft blazingly fast regular
expressions with no effort. How regular expressions integrate smoothly
with many libraries (pandas, spacy, etc) and how to use the regex module
for common text cleaning tasks such as: prefix finding, fuzzy matching
and many more.&lt;/p&gt;
&lt;p&gt;Slides:&lt;/p&gt;
&lt;p&gt;Speaker: Daniel Mesejo&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="data structures"></category><category term="nlp"></category><category term="open source"></category><category term="text mining"></category></entry><entry><title>REST In Peace - producing REST services for Odoo by code or just backend</title><link href="https://pyvideo.org/pycon-italia-2022/rest-in-peace-producing-rest-services-for-odoo-by-code-or-just-backend.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>FILIPPO IOVINE</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/rest-in-peace-producing-rest-services-for-odoo-by-code-or-just-backend.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;REST In Peace - producing REST services for Odoo by code or just backend
- PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;REST In Peace (RIP) is an Odoo module to ease the
development/implementantion of REST services into Odoo using the RIP API
framework library or, without a single line of code, just thru …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;REST In Peace - producing REST services for Odoo by code or just backend
- PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;REST In Peace (RIP) is an Odoo module to ease the
development/implementantion of REST services into Odoo using the RIP API
framework library or, without a single line of code, just thru the Odoo
RIP backend settings interface RIP has two easy approaches in producing
a REST server exposing Odoo models data structure and Odoo models method
as REST API services: you can do that by code (the RIP API framework
library) or using Odoo RIP backend configuration interface where you can
define access rules (which models are exposed, who users can access what
and how, which http methods, specific blocking rules, etc.), set models
schema IN and OUT being parsed and validated when invoking the request
or being rendered in the HTTP responses, write your own fuction and
expose that as a REST API service, choose custom HTTP responses data
layouts, requests and responses logs, auth token handlers, etc,
potentially whithout developing one single line of code.&lt;/p&gt;
&lt;p&gt;Speaker: FILIPPO IOVINE&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="apis"></category><category term="odoo"></category><category term="rest"></category></entry><entry><title>Rilasciare software di valore e in maniera continua. Si può!</title><link href="https://pyvideo.org/pycon-italia-2022/rilasciare-software-di-valore-e-in-maniera-continua-si-puo.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Fabio Mora</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/rilasciare-software-di-valore-e-in-maniera-continua-si-puo.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Rilasciare software di valore e in maniera continua. Si può! - PyCon
Italia 2022&lt;/p&gt;
&lt;p&gt;Speakers: Fabio Mora, Serena Sensini, Raffaele Colace, Filippo Morelli&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Seek Answers on Oncology with Machine Learning</title><link href="https://pyvideo.org/pycon-italia-2022/seek-answers-on-oncology-with-machine-learning.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Nicola Procopio</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/seek-answers-on-oncology-with-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Seek Answers on Oncology with Machine Learning - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Imagine having to do a very important online search and receive billions
of irrelevant results. Our oncology search engine only offers answers
from professionals, this reduces spam and limit the phenomenon of
cybercondria. Simple queries in natural language. Come …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Seek Answers on Oncology with Machine Learning - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Imagine having to do a very important online search and receive billions
of irrelevant results. Our oncology search engine only offers answers
from professionals, this reduces spam and limit the phenomenon of
cybercondria. Simple queries in natural language. Come and try it! We
will talk about how semantic search engines can be fundamental in the
health field. In particular, Healthware has developed a service
concerning oncology that uses various Machine Learning algorithms and
its medical consultation database to reduce information spam and limit
the phenomenon of cybercondria. Slides:&lt;/p&gt;
&lt;p&gt;Speaker: Nicola Procopio&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="machine learning"></category><category term="nlp"></category><category term="open source"></category><category term="science"></category></entry><entry><title>Self-explaining APIs</title><link href="https://pyvideo.org/pycon-italia-2022/self-explaining-apis.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Roberto Polli</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/self-explaining-apis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Self-explaining APIs - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;To mash up various APIs you need data to have a well defined meaning:
imagine meshing up healthcare APIs using different units for human
temperature, or financial APIs using different currencies.&lt;/p&gt;
&lt;p&gt;This talk describes strategies and python tools to overcome these
problems in large …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Self-explaining APIs - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;To mash up various APIs you need data to have a well defined meaning:
imagine meshing up healthcare APIs using different units for human
temperature, or financial APIs using different currencies.&lt;/p&gt;
&lt;p&gt;This talk describes strategies and python tools to overcome these
problems in large API ecosystems. This talk will present strategies and
python tools to create semantically interoperable REST APIs. After the
problem statement, various solutions will be presented, including: -
contract-first api development with OpenAPI 3, ontologies, controlled
vocabularies; - the rdflib and pyld python libraries; - the use of
centralized catalogs.&lt;/p&gt;
&lt;p&gt;[Very draft slides here](&lt;/p&gt;
&lt;p&gt;Speaker: Roberto Polli&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="apis"></category><category term="best practice"></category><category term="data structures"></category><category term="rest"></category></entry><entry><title>Smart Home: l’AI applicata al benessere della persona</title><link href="https://pyvideo.org/pycon-italia-2022/smart-home-lai-applicata-al-benessere-della-persona.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Serena Palazzo</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/smart-home-lai-applicata-al-benessere-della-persona.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Smart Home: l’AI applicata al benessere della persona - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Speaker: Serena Palazzo&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Soo many ingredients in the webapp kitchen!</title><link href="https://pyvideo.org/pycon-italia-2022/soo-many-ingredients-in-the-webapp-kitchen.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Jacopo Nespolo</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/soo-many-ingredients-in-the-webapp-kitchen.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Soo many ingredients in the webapp kitchen! - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Flask or FastAPI? Sql or NoSql? Pydantic or Marshmallow? Docker or K8s?&lt;/p&gt;
&lt;p&gt;Building a webapp is like coming up with a new recipe: you have many
ingredients available, some add sweetness, some add sourness. Not all of
them taste …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Soo many ingredients in the webapp kitchen! - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Flask or FastAPI? Sql or NoSql? Pydantic or Marshmallow? Docker or K8s?&lt;/p&gt;
&lt;p&gt;Building a webapp is like coming up with a new recipe: you have many
ingredients available, some add sweetness, some add sourness. Not all of
them taste good together!&lt;/p&gt;
&lt;p&gt;Above all, de gustibus non disputandum! Writing your first webapp, the
paradox of choice can overwhelm you. You need to choose among several
(micro)frameworks, choose how you persist data, how you deploy your app,
etc.&lt;/p&gt;
&lt;p&gt;Here are my personal gourmand views to those and other choices related
to the development and deployment in production of small to mid-size web
applications.&lt;/p&gt;
&lt;p&gt;This talk wants to be somewhat of a tasting session for all the
different ingredients I tasted over the past two years, a talk I wish I
had received two years back to make more informed decisions myself. As
such, the core of the talk will consist of comparing what I liked and
disliked of two projects I worked on: one based on Flask + Postgres
(Sqlalchemy) + Marshmallow-sqlalchemy + static files, the other based on
FastAPI + Mongodb (Motor) + S3 (Boto3) + Pydantic. I will review the
differences of these choices, both technical and related to
documentation and community.&lt;/p&gt;
&lt;p&gt;Of course, this talk does not aim to provide answers, but merely give
the audience a very blurry map to an extremely diverse environment where
each one can build his own personal taste.&lt;/p&gt;
&lt;p&gt;EDIT 2022-06-10: You can find a summary and an edited versions of the
slides used during the talk at the following link&lt;/p&gt;
&lt;p&gt;Speaker: Jacopo Nespolo&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="databases"></category><category term="microservices"></category><category term="rest"></category></entry><entry><title>Standardising MLOps in a start-up with Dagster and PyTorch</title><link href="https://pyvideo.org/pycon-italia-2022/standardising-mlops-in-a-start-up-with-dagster-and-pytorch.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Andrea Giardini</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/standardising-mlops-in-a-start-up-with-dagster-and-pytorch.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;standardising MLOps in a start-up: an example using Dagster and PyTorch
- PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Good processes and toolings allow companies to adapt and strive with
changing business requirements and short development cycles. Using
Dagster, a new workflow engine, and PyTorch, we found the perfect match
to guarantee reliable deployments …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;standardising MLOps in a start-up: an example using Dagster and PyTorch
- PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Good processes and toolings allow companies to adapt and strive with
changing business requirements and short development cycles. Using
Dagster, a new workflow engine, and PyTorch, we found the perfect match
to guarantee reliable deployments with fast-changing models. Join us and
find out how! Extending a deep learning model beyond your dataset to
make it available to multiple use-cases and stakeholders requires a
structured workflow. Finding the proper workflow and tooling depends on
your use case, but what happens when your use case is dynamic?&lt;/p&gt;
&lt;p&gt;In a start-up, changing business requirements are standard, so change
the inputs, outputs, and model types: the pipeline may be outdated by
the time you have put a “model in production”.&lt;/p&gt;
&lt;p&gt;With this talk, we want to show a pipeline based on Dagster, deployed on
Kubernetes, and PyTorch, that adds little overhead when making models
available to colleagues and projects with minimal requirements, making
it flexible to handle very customized workflows if needed.&lt;/p&gt;
&lt;p&gt;Speakers: Andrea Giardini, Lorenzo Riches&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="deep learning"></category><category term="deployment/continuous integration"></category><category term="machine learning"></category></entry><entry><title>Structural Pattern Matching in the Real World</title><link href="https://pyvideo.org/pycon-italia-2022/structural-pattern-matching-in-the-real-world.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Raymond Hettinger</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/structural-pattern-matching-in-the-real-world.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Structural Pattern Matching in the Real World - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Speaker: Raymond Hettinger&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Stupid Things I've Done With Python</title><link href="https://pyvideo.org/pycon-italia-2022/stupid-things-ive-done-with-python.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Mark Smith</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/stupid-things-ive-done-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Stupid Things I’ve Done With Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;On every computer I’ve had for the past 20 years, I’ve created a folder
called “stupid python tricks”. It’s where I put code that should never
see the light of day. Code that abuses features like …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Stupid Things I’ve Done With Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;On every computer I’ve had for the past 20 years, I’ve created a folder
called “stupid python tricks”. It’s where I put code that should never
see the light of day. Code that abuses features like decorators,
metaclasses, and dynamic typing to do terrible things.&lt;/p&gt;
&lt;p&gt;Code I’m going to teach you. I have a GitHub repository that contains a
compilation of all the awful code I’ve written over the years, abusing
features like metaclasses, decorators, various &lt;strong&gt;dunder&lt;/strong&gt; methods, and
the mutable nature of Python’s underlying data structures.&lt;/p&gt;
&lt;p&gt;It’s a funny way to see how Python works under the hood, but it’s also
educational.&lt;/p&gt;
&lt;p&gt;Really!&lt;/p&gt;
&lt;p&gt;Each of the tricks is entertainingly terrible. But they’re also mostly
self-contained ways to see what happens when you override certain
behaviours of the Python language. Anyone with an intermediate level of
Python understanding should be able to follow along and learn something.&lt;/p&gt;
&lt;p&gt;I will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Replacing an imported module with a class, so attribute lookups can
be &amp;#64;properties, with &lt;em&gt;hilarious&lt;/em&gt; results.&lt;/li&gt;
&lt;li&gt;Overriding the &lt;tt class="docutils literal"&gt;__sub__&lt;/tt&gt; magic method to create a hyphenated,
fuzzy-matching version of a boolean.&lt;/li&gt;
&lt;li&gt;Using &lt;tt class="docutils literal"&gt;__getattr__&lt;/tt&gt; to save time implementing all the functions in
the &lt;tt class="docutils literal"&gt;math&lt;/tt&gt; module.&lt;/li&gt;
&lt;li&gt;Using &lt;tt class="docutils literal"&gt;__eq__&lt;/tt&gt; to make things that aren’t really the same look the
same.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk is an entertaining tour of the Python Data Model, and the
things you can do - if you’re so inclined.&lt;/p&gt;
&lt;p&gt;Speaker: Mark Smith&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="abstractions"></category><category term="best practice"></category><category term="teaching"></category></entry><entry><title>Supercharge Your Shell — Command-Line Power-Ups and Dotfile Automation</title><link href="https://pyvideo.org/pycon-italia-2022/supercharge-your-shell-command-line-power-ups-and-dotfile-automation.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Justin Mayer</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/supercharge-your-shell-command-line-power-ups-and-dotfile-automation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Supercharge Your Shell — Command-Line Power-Ups and Dotfile Automation -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;We spend hours each day in a terminal console, so let’s make the most of
that time by enhancing our command-line productivity. We will automate
dotfile configuration, facilitate Python interpreter and virtual
environment management, and supercharge our …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Supercharge Your Shell — Command-Line Power-Ups and Dotfile Automation -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;We spend hours each day in a terminal console, so let’s make the most of
that time by enhancing our command-line productivity. We will automate
dotfile configuration, facilitate Python interpreter and virtual
environment management, and supercharge our terminals with powerful
command-line tools. We spend hours each day in a terminal console, so
let’s make the most of that time by enhancing our command-line
productivity. Together we will automate dotfile configuration,
facilitate Python interpreter and virtual environment management, and
supercharge our terminals with powerful command-line tools.&lt;/p&gt;
&lt;p&gt;Managing our shell configuration, commonly referred to collectively as
“dotfiles”, can be an onerous task. Thankfully there are tools like
Ansible and Chezmoi that we will use to more effectively automate
dotfile management in versioned repositories, which we can then easily
deploy to both personal workstations and remote servers.&lt;/p&gt;
&lt;p&gt;Given the pitfalls inherent in distro-packaged Python interpreters,
building and managing our own Python interpreters efficiently
has never been more important. Thankfully, we will use tools like ASDF
to make this incredibly easy, as well as examine its similar benefits
for Node.js/NPM and &lt;em&gt;hundreds&lt;/em&gt; of other languages and tools, all via
extensible plugins. For Fish shell users, we will see how VirtualFish
makes it easy to create, upgrade, and activate virtual environments in
ways that have never been available before.&lt;/p&gt;
&lt;p&gt;Finally, we will explore how powerful command-line tools like Zoxide,
Bat, RipGrep-All + fzf, and others can be used to dramatically increase
our terminal console productivity.&lt;/p&gt;
&lt;p&gt;Attendees of this talk will take home the following knowledge and
skills:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;how to automate dotfile configuration management and deployment&lt;/li&gt;
&lt;li&gt;how to build and manage multiple Python interpreter versions&lt;/li&gt;
&lt;li&gt;how to more efficiently manage Python virtual environments&lt;/li&gt;
&lt;li&gt;how to use powerful command-line tools to increase terminal console
productivity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Speaker: Justin Mayer&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="best practice"></category><category term="development"></category><category term="open source"></category></entry><entry><title>Sustainable Code Panel</title><link href="https://pyvideo.org/pycon-italia-2022/sustainable-code-panel.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Jessica Greene</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/sustainable-code-panel.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sustainable Code Panel - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Speakers: Jessica Greene, Chris Adams, Uljan Sharka&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Sviluppare e progettare consapevolmente: occhio all'inclusività</title><link href="https://pyvideo.org/pycon-italia-2022/sviluppare-e-progettare-consapevolmente-occhio-allinclusivita.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Fiorella De Luca</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/sviluppare-e-progettare-consapevolmente-occhio-allinclusivita.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sviluppare e progettare consapevolmente: occhio all’inclusività - PyCon
Italia 2022&lt;/p&gt;
&lt;p&gt;Speakers: Fiorella De Luca, Sabrina Scoma, Ambra Tonon&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Teaching Python: who, how and what</title><link href="https://pyvideo.org/pycon-italia-2022/teaching-python-who-how-and-what.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>GIANFRANCO DURIN</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/teaching-python-who-how-and-what.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Teaching Python: who, how and what - PyCon Italia 2022&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;People consider Python the easiest languange to learn, and they are
right, likely. Many students in (non-scientific) Universities think
that learning Python is a nightmare, expecially if is mandatory.&lt;/div&gt;
&lt;div class="line"&gt;So, do we have the right strategies to bring our language …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Teaching Python: who, how and what - PyCon Italia 2022&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;People consider Python the easiest languange to learn, and they are
right, likely. Many students in (non-scientific) Universities think
that learning Python is a nightmare, expecially if is mandatory.&lt;/div&gt;
&lt;div class="line"&gt;So, do we have the right strategies to bring our language to all? (I
do not, but I am learning) After a few years of courses I realized I
(we?) need a strategy to teach Python properly. While it is really
exiting to teach PhD students how to make use of a script language in
their own projects, it is really hard to show its beauty and
opportunities to second year students when they hardly have the
concept of a folder, a variable, and if they have them, they are
usually quite confused. I would like to share my (little) experience,
the good and the bad, so to make a few suggestions for a general and
shared approach to teaching: should we introduce levels (A, B, C?),
what are the best books to use, how to make exams?&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Speaker: GIANFRANCO DURIN&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="education"></category><category term="teaching"></category></entry><entry><title>Test sana in codice sano</title><link href="https://pyvideo.org/pycon-italia-2022/test-sana-in-codice-sano.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Antonio Mustich</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/test-sana-in-codice-sano.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Test sana in codice sano - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Hai mai avuto voglia o necessità di scrivere test ma non conosci le best
practices? Hai difficoltà a trovare esempi pratici online? Vuoi capire
quanto i test migliorino la qualità del codice? Questo talk, partendo
dalle best practices, ti darà le …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Test sana in codice sano - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Hai mai avuto voglia o necessità di scrivere test ma non conosci le best
practices? Hai difficoltà a trovare esempi pratici online? Vuoi capire
quanto i test migliorino la qualità del codice? Questo talk, partendo
dalle best practices, ti darà le risposte che cerchi tramite esempi
pratici. Le slide sono disponibili a questo link:&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Ad oggi i software sono parte integrante della nostra vita, abbiamo un
software per tutto, come sviluppatori vogliamo renderli privi di bug.
“Se il tuo codice non è testabile non è stato ben progettato” e si
presenta agli occhi degli altri come un teorema senza dimostrazione,
ma scrivere test è diverso dallo scrivere codice ed è bene, quindi,
seguire delle best practices.&lt;/div&gt;
&lt;div class="line"&gt;Scrivere codice testato non è soltanto un modo per dormire sonni più
sereni, ma anche un atto etico, perché un bug, nei casi peggiori, può
anche portare ad eventi catastrofici.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Hai mai avuto voglia di scrivere codice testato ma non conosci le best
practices? Scrivi già test ma ti chiedi come mai in fase di refactoring
ti ritrovi a perdere più tempo nel fixare i test piuttosto che il tuo
codice? Mentre scrivi i test ti sembra di perdere il focus rispetto ai
requisiti del cliente? Vuoi capire quanto i test migliorino la qualità
del codice? Hai difficoltà a trovare esempi pratici online?&lt;/p&gt;
&lt;p&gt;Nel caso tu abbia risposto sì almeno una volta, segui questo talk:
scoprirai, con esempi pratici, come meglio approcciarsi alla scrittura
di codice testabile e testato. Il talk, presentato da chi ne aveva
davvero bisogno, ti darà spunti di riflessione partendo dai suggerimenti
e dalle linee guida più condivise in letteratura, passando per lo
sviluppo di logiche di business tramite test unit e comportamentali,
fino ad arrivare ai tools e alle librerie disponibili in Django
mostrando esempi pratici di utilizzo.&lt;/p&gt;
&lt;p&gt;Speakers: Antonio Mustich, Davide Ria&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="apis"></category><category term="django"></category><category term="TDD"></category><category term="testing"></category></entry><entry><title>Testing Documentation</title><link href="https://pyvideo.org/pycon-italia-2022/testing-documentation.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/testing-documentation.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing Documentation - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Speaker: Alessandro Molina&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry><entry><title>Testing ML Systems: More than just accuracy</title><link href="https://pyvideo.org/pycon-italia-2022/testing-ml-systems-more-than-just-accuracy.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Carlos Kidman</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/testing-ml-systems-more-than-just-accuracy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing ML Systems: More than just accuracy - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Zillow lost millions because they didn’t have proper MLOps or testing
processes. They relied on the training metrics, like accuracy, but
Software Quality goes beyond that. I will cover different testing types,
techniques, and concepts that you can …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing ML Systems: More than just accuracy - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Zillow lost millions because they didn’t have proper MLOps or testing
processes. They relied on the training metrics, like accuracy, but
Software Quality goes beyond that. I will cover different testing types,
techniques, and concepts that you can apply to make high-quality ML
Systems. As ML/AI systems are becoming more prevalent, the need for
setting quality standards and testing practices has become crucial.
Testing these models goes beyond validation metrics like accuracy,
precision, and recall.&lt;/p&gt;
&lt;p&gt;Instead, quality attributes like model Behaviors, Usability, and
Fairness need to be tested and measured using exploratory and automated
strategies.&lt;/p&gt;
&lt;p&gt;In this talk, we’ll cover some of the risks and biases that can happen
throughout the MLOps pipeline, demonstrate a few techniques to test a
model’s behaviors and fairness, and apply them against some real-world
scenarios and state-of-the-art models.&lt;/p&gt;
&lt;p&gt;By the end, you will have new ideas and techniques that you can use to
test your own ML/AI systems and approach these quality attributes from a
customer’s perspective.&lt;/p&gt;
&lt;p&gt;Speaker: Carlos Kidman&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="machine learning"></category><category term="testing"></category></entry><entry><title>The Design of Everyday APIs</title><link href="https://pyvideo.org/pycon-italia-2022/the-design-of-everyday-apis.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Lynn Root</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/the-design-of-everyday-apis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Design of Everyday APIs - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;What makes a good API for a library? Or more importantly, what makes it
bad? This talk will discuss the principles of what goes into
user-centered design, and how best to apply those principles when
writing a Python library for fellow …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Design of Everyday APIs - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;What makes a good API for a library? Or more importantly, what makes it
bad? This talk will discuss the principles of what goes into
user-centered design, and how best to apply those principles when
writing a Python library for fellow developers. What makes a good API
for a library? Or more importantly, what makes it bad?&lt;/p&gt;
&lt;p&gt;Implementing an API is an art. It’s the connection between the user and
the library itself. How can we optimize that connection to make the
experience more pleasing? What makes a user reach for one library over
another? What goes into an ergonomic API?&lt;/p&gt;
&lt;p&gt;This talk will first discuss what makes an API good: documentation,
simplicity, consistency, completeness, and flexibility. We will apply
those elements by looking at developing and iterating on our own
library.&lt;/p&gt;
&lt;p&gt;Speaker: Lynn Root&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="abstractions"></category><category term="apis"></category><category term="best practice"></category></entry><entry><title>Transformer e Meccanismi di Attenzione: modelli che rivoluzionano l'AI</title><link href="https://pyvideo.org/pycon-italia-2022/transformer-e-meccanismi-di-attenzione-modelli-che-rivoluzionano-lai.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Vincenzo Maritati</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/transformer-e-meccanismi-di-attenzione-modelli-che-rivoluzionano-lai.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Transformer e Meccanismi di Attenzione: modelli che stanno
rivoluzionando l’Intelligenza Artificiale - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Analizziamo le caratteristiche che permettono alle architetture di reti
neurali artificiali basate sui Transformer di diventare i nuovi modelli
SotA in tutti i domini applicativi. Descriveremo dalle tecniche
seq-2-seq ai meccanismi di attenzione, dai …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Transformer e Meccanismi di Attenzione: modelli che stanno
rivoluzionando l’Intelligenza Artificiale - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Analizziamo le caratteristiche che permettono alle architetture di reti
neurali artificiali basate sui Transformer di diventare i nuovi modelli
SotA in tutti i domini applicativi. Descriveremo dalle tecniche
seq-2-seq ai meccanismi di attenzione, dai vettori posizionali al
Perceiver-IO. Le architetture di rete neurale artificiale basate sui
Transformer stanno rivoluzionando il mondo del Deep Learning,
permettendo ai relativi nuovi modelli di surclassare tutte le precedenti
soluzioni allo stato dell’arte. Oltre che in ambito Natural Language
Processing, dove i Transformer sono nati e sono stati fatti evolvere,
oggi possiamo sfruttare lo stesso approccio in qualsiasi altro ambito,
come in Computer Vision o per l’analisi di segnali industriali. Lo scopo
del talk è di spiegare in maniera comprensibile il funzionamento dei
principali componenti di queste architetture per scoprirne i segreti e
capirne il funzionamento. Slide:&lt;/p&gt;
&lt;p&gt;Speaker: Vincenzo Maritati&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="deep learning"></category><category term="machine learning"></category></entry><entry><title>Trojan Source - Can we trust open-source anymore?</title><link href="https://pyvideo.org/pycon-italia-2022/trojan-source-can-we-trust-open-source-anymore.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Cheuk Ho</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/trojan-source-can-we-trust-open-source-anymore.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Trojan Source - Can we trust open-source anymore? - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Recently, a paper is published to demonstrate how a visibly valid
contribution can contain malicious code by exporting the Unicode control
characters. Some of these attacks has been tested on Python and it
works. Shall the Python and open-source …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Trojan Source - Can we trust open-source anymore? - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Recently, a paper is published to demonstrate how a visibly valid
contribution can contain malicious code by exporting the Unicode control
characters. Some of these attacks has been tested on Python and it
works. Shall the Python and open-source communities be concerned?
Background:&lt;/p&gt;
&lt;p&gt;After researchers at the University of Cambridge published a paper(
about a malicious attack named Trojan Source, which exploited the fact
that some program interpreters, like CPython, can handle Unicode. This
has caused concerns in the open-source community about the malicious
contribution that looks totally legitimate in human eyes but contain
invisible attacks. As a member of the Python community, we should all be
aware of that and understand how we can prevent this attack to happen.&lt;/p&gt;
&lt;p&gt;About this talk:&lt;/p&gt;
&lt;p&gt;In this talk, Cheuk will decode the finding in this paper to a level
that can be understood by everyone. She will start with a joke example
who you can mess up someone by using Unicode. She will then explain what
is Unicode and why it causes trouble. Afterwards, she will explain the
Python examples( in the paper and why it can be dangerous. Lastly, she
will open up a discussion on how we should defend ourselves from those
attacks and what we can do as a community.&lt;/p&gt;
&lt;p&gt;Outline (30 mins talk):&lt;/p&gt;
&lt;p&gt;**5 minutes - Introduction, the opening of the talk&lt;/p&gt;
&lt;p&gt;In this session, Cheuk will ask audiences to debug a code snippet that
looks absolutely fine but will not work as code. She will explain that
this is the same concept used in Trojan Source.&lt;/p&gt;
&lt;p&gt;**10 mins - What is Unicode&lt;/p&gt;
&lt;p&gt;In this session, Cheuk will give an introduction about what is Unicode,
what it is to a computer and why we need Unicode in computers. She will
also explain how the benefit of having Unicode can also be a downfall to
make us vulnerable to the Trojan Source attack.&lt;/p&gt;
&lt;p&gt;**10 mins - How Trojan Source works in Python&lt;/p&gt;
&lt;p&gt;In this session, Cheuk will show a few examples using the Trojan Source
in legitimate Python code. She will point out how the attack is hiding
in the source code and in what cases it can be dangerous.&lt;/p&gt;
&lt;p&gt;**5 mins - How to protect ourselves&lt;/p&gt;
&lt;p&gt;In this session, Cheuk will open the discussion and make a few
suggestions of how we can protect ourselves as a community. This will
lead to the Q&amp;amp;A session where the audience can weigh in on their own
thought.&lt;/p&gt;
&lt;p&gt;Target audiences&lt;/p&gt;
&lt;p&gt;From those who are curious to maintainers of open-source libraries. This
is the knowledge we should all know and be aware of. Cheuk will explain
in a way that expects no prior knowledge is needed.&lt;/p&gt;
&lt;p&gt;What will audiences learn&lt;/p&gt;
&lt;p&gt;About Trojan Source attacks and how it works. They may also learn about
how interpreters, especially Python interpreters, works with Unicode.
Plus, they may have increased awareness about security in the
open-source world.&lt;/p&gt;
&lt;p&gt;Speaker: Cheuk Ho&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="best practice"></category><category term="community"></category><category term="open source"></category><category term="security"></category></entry><entry><title>Using GitHub Actions and Python to keep your blogs updated</title><link href="https://pyvideo.org/pycon-italia-2022/using-github-actions-and-python-to-keep-your-blogs-updated.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Andrea Grillo</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/using-github-actions-and-python-to-keep-your-blogs-updated.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using GitHub Actions and Python to keep your blogs updated - PyCon
Italia 2022&lt;/p&gt;
&lt;p&gt;Se hai un blog su GitHub Pages ma vuoi avere maggiore visibilità, non
devi più copiare manualmente gli stessi contenuti sulle altre
piattaforme. Grazie a Github Actions puoi sviluppare il tuo operatore
Python che monitora la …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using GitHub Actions and Python to keep your blogs updated - PyCon
Italia 2022&lt;/p&gt;
&lt;p&gt;Se hai un blog su GitHub Pages ma vuoi avere maggiore visibilità, non
devi più copiare manualmente gli stessi contenuti sulle altre
piattaforme. Grazie a Github Actions puoi sviluppare il tuo operatore
Python che monitora la tua repository ed aggiorna tutte le tue
piattaforme di blog in automatico. GitHub Actions è il potente strumento
introdotto da GitHub per automatizzare le operazioni che riguardano una
repository GitHub. Ogni volta che un evento viene generato dalla nostra
repository (una commit, un issue, …), GitHub Actions fa partire in
automatico una sequenza di operazioni definite dall’utente. Queste
operazioni (dette “Actions”) possono essere condivise dalla community o
sviluppate personalmente, anche in Python! In questo talk voglio
mostrare come costruire la propria GitHub Action in Python per
condividere automaticamente i post di un blog su GitHub Pages su altre
piattaforme, come Medium.&lt;/p&gt;
&lt;p&gt;Speaker: Andrea Grillo&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="deployment/continuous integration"></category><category term="devops"></category><category term="open source"></category></entry><entry><title>Viaggio nel mondo delle librerie python</title><link href="https://pyvideo.org/pycon-italia-2022/viaggio-nel-mondo-delle-librerie-python.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Danilo Abbasciano</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/viaggio-nel-mondo-delle-librerie-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Viaggio nel mondo delle librerie python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;25 utili librerie in 30 minuti Attraverso un affascinate viaggio tra le
librerie python, tratteremo rapidamente quelle più utili e semplici da
utilizzare che ci faranno risparmiare tempo e linee di codice. Farò una
rapida presentazione per ognuna di esse …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Viaggio nel mondo delle librerie python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;25 utili librerie in 30 minuti Attraverso un affascinate viaggio tra le
librerie python, tratteremo rapidamente quelle più utili e semplici da
utilizzare che ci faranno risparmiare tempo e linee di codice. Farò una
rapida presentazione per ognuna di esse facendone risaltare i benefici e
le principali funzionalità. Da non perdere!&lt;/p&gt;
&lt;p&gt;Slides:&lt;/p&gt;
&lt;p&gt;Speaker: Danilo Abbasciano&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="best practice"></category><category term="clean code"></category><category term="development"></category></entry><entry><title>Vulture eats some Python</title><link href="https://pyvideo.org/pycon-italia-2022/vulture-eats-some-python.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Rahul Jha</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/vulture-eats-some-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vulture eats some Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Maintaining a high level of code quality is important for any serious
project. One aspect of this is ensuring that all code is actually used.
Finding and removing dead code allows to keep the code base clean and
reduces bugs. This is …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vulture eats some Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Maintaining a high level of code quality is important for any serious
project. One aspect of this is ensuring that all code is actually used.
Finding and removing dead code allows to keep the code base clean and
reduces bugs. This is a practical guide on using and configuring Vulture
to do so. This talk is focused on how we can use Vulture to find dead
code. There are many reasons for dead code ending up in a project. The
most common is refactoring, but another is misspellings, which are only
detected at runtime for dynamic languages. Vulture helps you find unused
code in Python programs, and it is useful for cleaning up and finding
errors in large codebases. If you run Vulture on both your library and
test suite, you can find untested code.&lt;/p&gt;
&lt;p&gt;Due to Python’s dynamic nature, static code analyzers like Vulture are
likely to miss some dead code. Also, code that is only called implicitly
(e.g., using getattr) may be reported as unused. Nonetheless, Vulture
can be a very helpful tool for higher code quality.&lt;/p&gt;
&lt;p&gt;The second part of this talk investigates ways to improve Vulture’s
reporting such that the results are actionable and optimized for a low
number of false positives. It also discusses how to automate testing for
dead code with Vulture – there are quite a few options available: 1. Add
a step in your continuous integration testing. 2. As a pre-commit hook.
3. Run a script using Vulture API for more fine-grained control.&lt;/p&gt;
&lt;p&gt;The third and last part of this talk discusses a brief overview of the
internal workings of the tool, along with the scope of future
improvements. After all, the motive of this talk is not only to
encourage developers to prioritize code hygiene but also to inspire them
to come up with ideas to &lt;em&gt;enable&lt;/em&gt; it.&lt;/p&gt;
&lt;p&gt;Speaker: Rahul Jha&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="best practice"></category><category term="clean code"></category><category term="code analysis"></category><category term="static analysis"></category><category term="tooling"></category></entry><entry><title>Web Accessibility in mind</title><link href="https://pyvideo.org/pycon-italia-2022/web-accessibility-in-mind.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Bernabei</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/web-accessibility-in-mind.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web Accessibility in mind - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Speaker: Bernabei&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category></entry></feed>