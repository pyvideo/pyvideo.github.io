<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - SciPy 2022</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_scipy-2022.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-07-11T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Accelerating ETL/SQL Workloads with RAPIDS-Dask + Dask-SQL</title><link href="https://pyvideo.org/scipy-2022/accelerating-etlsql-workloads-with-rapids-dask-dask-sql.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Charles Blackmon-Luca</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/accelerating-etlsql-workloads-with-rapids-dask-dask-sql.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The NVIDIA® RAPIDS suite of open-source software libraries enable end-to-end data science pipelines to run entirely on GPUs, offering massive parallelism, high memory bandwidth and high speed interconnect through user-friendly PyData APIs. Coupled with Dask, a Python library for distributed computing, RAPIDS libraries can achieve even higher performance by …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The NVIDIA® RAPIDS suite of open-source software libraries enable end-to-end data science pipelines to run entirely on GPUs, offering massive parallelism, high memory bandwidth and high speed interconnect through user-friendly PyData APIs. Coupled with Dask, a Python library for distributed computing, RAPIDS libraries can achieve even higher performance by scaling out across multiple GPUs and machines. And now, with the introduction of Dask-SQL, SQL users can take full advantage of this software stack to accelerate their data science workloads. This talk will present an overview of RAPIDS-Dask and introduce Dask-SQL, a developing SQL interface for the RAPIDS-Dask ecosystem which can leverage both CPU and GPUs.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Accelerating Science with the GT4SD</title><link href="https://pyvideo.org/scipy-2022/accelerating-science-with-the-gt4sd.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Alexy Khrabrov</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/accelerating-science-with-the-gt4sd.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GT4SD (&lt;a class="reference external" href="https://github.com/GT4SD/gt4sd-core"&gt;https://github.com/GT4SD/gt4sd-core&lt;/a&gt;) is an open-source library to accelerate hypothesis generation in the scientific discovery process that eases the adoption of state-of-the-art generative AI. In this session, we will present GT4SD code base and its main functionalities, ranging from model inference to training and using live …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GT4SD (&lt;a class="reference external" href="https://github.com/GT4SD/gt4sd-core"&gt;https://github.com/GT4SD/gt4sd-core&lt;/a&gt;) is an open-source library to accelerate hypothesis generation in the scientific discovery process that eases the adoption of state-of-the-art generative AI. In this session, we will present GT4SD code base and its main functionalities, ranging from model inference to training and using live applications demos in the context of material science and chemistry. The session is designed to provide a deep dive for developers and research scientists who want to accelerate their discovery pipelines with generative modeling capabilities.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>AiiDA Common Workflows for Computing Material Properties</title><link href="https://pyvideo.org/scipy-2022/aiida-common-workflows-for-computing-material-properties.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Chris Sewell</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/aiida-common-workflows-for-computing-material-properties.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will feature an overview of the AiiDA common workflows project, an international collaboration to develop a standardized, open source, interface for computing material properties across many quantum simulation codes. The workflows are underpinned by AiiDA, a Python based framework for developing and running scientific workflows.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>An Introduction to Distributed Hybrid Hyperparameter Optimization</title><link href="https://pyvideo.org/scipy-2022/an-introduction-to-distributed-hybrid-hyperparameter-optimization.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Jun Liu</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/an-introduction-to-distributed-hybrid-hyperparameter-optimization.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hyperparameter optimization in machine learning is commonly done on single search spaces, where the same search method is applied to all parameters. We introduce the concept of hybrid search space to combine various existing tuning methods in one optimization task through Fugue-tune. We will also demo how it simplifies …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hyperparameter optimization in machine learning is commonly done on single search spaces, where the same search method is applied to all parameters. We introduce the concept of hybrid search space to combine various existing tuning methods in one optimization task through Fugue-tune. We will also demo how it simplifies the usage of Optuna and scales out on Spark.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>ANI-AIM: The Use of Machine Learning in Computational Chemistry</title><link href="https://pyvideo.org/scipy-2022/ani-aim-the-use-of-machine-learning-in-computational-chemistry.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Kate Huddleston</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/ani-aim-the-use-of-machine-learning-in-computational-chemistry.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The introduction of machine learning into the computational chemistry field has been a milestone. ANAKIN-ME (Accurate NeurAl networK engINe for Molecular Energies), or ANI, is a transferable machine learning potential for organic molecules. It is successful at reproducing the chemical accuracy of its reference level of theory and bridges …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The introduction of machine learning into the computational chemistry field has been a milestone. ANAKIN-ME (Accurate NeurAl networK engINe for Molecular Energies), or ANI, is a transferable machine learning potential for organic molecules. It is successful at reproducing the chemical accuracy of its reference level of theory and bridges the gap between accuracy and computational cost. ANI is used through our TorchANI software, which is coded in Pytorch. This makes it flexible and easy to make modifications, which is important for extending the ANI methodology. My current work uses ANI-2x and aims at predicting atomic descriptors in order to test the conceptual DFT charge models.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Automatic Structural Refinement Platform</title><link href="https://pyvideo.org/scipy-2022/automatic-structural-refinement-platform.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Wenduo Zhou</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/automatic-structural-refinement-platform.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern neutron powder diffraction experiments demand real-time qualitative analysis and material structural refinement results to steer the experiment. This requires automatic data processing capabilities spanning the neutron data’s life cycle. Automatic Structural Refinement Platform (ASRP) is a python-based software suite that will enable the real-time data reduction, analysis …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern neutron powder diffraction experiments demand real-time qualitative analysis and material structural refinement results to steer the experiment. This requires automatic data processing capabilities spanning the neutron data’s life cycle. Automatic Structural Refinement Platform (ASRP) is a python-based software suite that will enable the real-time data reduction, analysis, and visualization for neutron powder diffractometers at Oak Ridge National Laboratory. The core of ASRP is a platform that supports live data reduction, automatic analysis, and visualization workflow. Several machine-learning empowered powder diffraction data analysis tools are also developed inside ASRP.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Awkward Packaging: Building Scikit-HEP</title><link href="https://pyvideo.org/scipy-2022/awkward-packaging-building-scikit-hep.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Henry Schreiner</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/awkward-packaging-building-scikit-hep.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scikit-HEP has grown rapidly over the last few years, not just to serve the needs of the High Energy Physics (HEP) community, but in many ways, the Python ecosystem at large. AwkwardArray, boost-histogram/hist, and iMinuit are examples of libraries that are used beyond the original HEP focus. In …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scikit-HEP has grown rapidly over the last few years, not just to serve the needs of the High Energy Physics (HEP) community, but in many ways, the Python ecosystem at large. AwkwardArray, boost-histogram/hist, and iMinuit are examples of libraries that are used beyond the original HEP focus. In this talk, we will look key packages in the ecosystem, at how the collection of 30+ packages was developed and maintained, and the software ecosystem contributions made to packages like cibuildwheel, pybind11, nox, scikit-build, build, and pipx that support this effort, and the Scikit-HEP developer pages, and initial WebAssembly support.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Bayesian Data Science by Simulation</title><link href="https://pyvideo.org/scipy-2022/bayesian-data-science-by-simulation.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Hugo Bowne Anderson</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/bayesian-data-science-by-simulation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a foundational tutorial in statistics and Bayesian inference, the intended audience is Pythonistas who are interested in gaining a foundational knowledge of probability theory and the basics of parameter estimation.&lt;/p&gt;
&lt;p&gt;After attending this tutorial, participants will have a solid foundation of probability viewed through the lens of computational …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a foundational tutorial in statistics and Bayesian inference, the intended audience is Pythonistas who are interested in gaining a foundational knowledge of probability theory and the basics of parameter estimation.&lt;/p&gt;
&lt;p&gt;After attending this tutorial, participants will have a solid foundation of probability viewed through the lens of computational simulation and see how probability distributions can be matched to real-world data generating processes. Participants will also understand how to use &lt;cite&gt;numpy.random&lt;/cite&gt; to simulate draws from a probability distribution, use those simulations to calculate summary statistics, and use those summary statistics in testing hypotheses against data in a Bayesian fashion. Participants will also be given an introductory taste of a probabilistic programming language.&lt;/p&gt;
&lt;p&gt;Knowledge of &lt;cite&gt;numpy&lt;/cite&gt;, &lt;cite&gt;matplotlib&lt;/cite&gt;, and Python are prerequisites for this tutorial, in addition to curiosity and an excitement to learn new things!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/ericmjl/bayesian-stats-modelling-tutorial"&gt;https://github.com/ericmjl/bayesian-stats-modelling-tutorial&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Building binary extensions with pybind11, scikit build, and cibuildwheel- Q&amp;A and Panel</title><link href="https://pyvideo.org/scipy-2022/building-binary-extensions-with-pybind11-scikit-build-and-cibuildwheel-qa-and-panel.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Henry Schreiner</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/building-binary-extensions-with-pybind11-scikit-build-and-cibuildwheel-qa-and-panel.html</id><content type="html"></content><category term="SciPy 2022"></category></entry><entry><title>Comparing the Different Ways to Scale Python &amp; Pandas Code</title><link href="https://pyvideo.org/scipy-2022/comparing-the-different-ways-to-scale-python-pandas-code.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Shaswat Shah</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/comparing-the-different-ways-to-scale-python-pandas-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will compare different ways to scale Python and Pandas. We will discuss the major problems of using Pandas-like syntax to represent the distributed computing logic. And we will introduce Fugue, an open-source unified interface for Pandas, Spark, and Dask aiming to let data practitioners define their computing workflows …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will compare different ways to scale Python and Pandas. We will discuss the major problems of using Pandas-like syntax to represent the distributed computing logic. And we will introduce Fugue, an open-source unified interface for Pandas, Spark, and Dask aiming to let data practitioners define their computing workflows in a frame-agnostic and scale-agnostic manner.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Conda-forge in 2022</title><link href="https://pyvideo.org/scipy-2022/conda-forge-in-2022.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Marius van Niekerk</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/conda-forge-in-2022.html</id><content type="html"></content><category term="SciPy 2022"></category></entry><entry><title>Convex Optimization using CVXPY</title><link href="https://pyvideo.org/scipy-2022/convex-optimization-using-cvxpy.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Steven Diamond</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/convex-optimization-using-cvxpy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In a convex optimization problem, the goal is to find a numerical assignment to a variable that minimizes an objective function, while also satisfying some constraints. The variable might represent parameters in a machine learning model, trades in a financial portfolio, actuations for controllers of a physical system, or …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In a convex optimization problem, the goal is to find a numerical assignment to a variable that minimizes an objective function, while also satisfying some constraints. The variable might represent parameters in a machine learning model, trades in a financial portfolio, actuations for controllers of a physical system, or tunable parameters for the design of a physical device. In industry, convex optimization problems are solved to land rockets, allocate financial portfolios, fit machine learning models, and control self-driving cars, among other applications. By abstracting away numerical solvers, CVXPY makes it easy to specify and solve convex optimization problems. CVXPY is best understood as a rewriting system for convex optimization problems, with a user-facing front-end and a solver-facing back-end:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Front-end: CVXPY provides users with a large library of atomic functions, like exp, log, and norm. These atoms can be composed according to a simple rule that guarantees convexity of the composition, forming the grammar of CVXPY. Formulating problems using this rule is known as Disciplined Convex Programming.&lt;/li&gt;
&lt;li&gt;Back-end: When the &lt;cite&gt;solve&lt;/cite&gt; method on a problem is called, CVXPY transparently rewrites it into a terse numerical format expected by a solver; it will then call the solver, and return a solution to the user.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tutorial will cover the basics of convex optimization with CVXPY, with an emphasis on real-world applications. Attendees will come away with:
* A thorough understanding of what a convex optimization problem is.
* The ability to model real-world problems as convex optimization problems, using CVXPY.
* The ability to use CVXPY Parameters to solve many related convex optimization problems in a short amount of time.
* An exposure to advanced features included in CVXPY, including quasiconvex programming, log-log convex programming, and differentiating through parametric convex optimization problems.&lt;/p&gt;
&lt;p&gt;Target audience:
* Computationally-minded scientists and engineers from any field who are interested in learning about a powerful tool for solving mathematically modeled problems.&lt;/p&gt;
&lt;p&gt;Prerequisites:
* Basic understanding of linear algebra and probability.
* We do _not_ assume any familiarity with convex optimization or mathematical programming.&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/cvxgrp/cvx_short_course"&gt;https://github.com/cvxgrp/cvx_short_course&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Counting on Poisson Regression with Scikit-learn</title><link href="https://pyvideo.org/scipy-2022/counting-on-poisson-regression-with-scikit-learn.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Thomas Fan</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/counting-on-poisson-regression-with-scikit-learn.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Poisson regression is an effective machine learning technique that models counts or frequency data. Examples of this type of data include the number of insurance claims per year or rainfall events per month. We learn about generalized linear models in scikit-learn and how they connect to the PoissonRegressor. For …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Poisson regression is an effective machine learning technique that models counts or frequency data. Examples of this type of data include the number of insurance claims per year or rainfall events per month. We learn about generalized linear models in scikit-learn and how they connect to the PoissonRegressor. For tree-based models, we cover the algorithm behind scikit-learn's HistGradientBoostingRegressor, concentrating on Poisson loss. This talk reviews just enough theory to get an intuition for the various machine learning models and focuses on applying scikit-learn's Poisson regression techniques on a bike-share dataset.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Creating Beautiful Geospatial Data Visualizations with Python</title><link href="https://pyvideo.org/scipy-2022/creating-beautiful-geospatial-data-visualizations-with-python.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Adam Symington</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/creating-beautiful-geospatial-data-visualizations-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will give a broad overview of many of the core concepts in geospatial data visualisations. Attendees will come away with the skills needed to analyse and plot geospatial data as well as manipulate and combine geospatial datasets, generate new geospatial data from existing sources, generate insightful data …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will give a broad overview of many of the core concepts in geospatial data visualisations. Attendees will come away with the skills needed to analyse and plot geospatial data as well as manipulate and combine geospatial datasets, generate new geospatial data from existing sources, generate insightful data maps and other geospatial data visualisations and come away from the tutorial with the confidence to seek out new datasets to apply their skills to.  When it comes to data visualisation, attendees will be encouraged to express themselves, material will be provided to get them to the point where they can generate their own visualisations without help but styling the plots will be up to them. This tutorial will provide a high-level overview of geospatial data analysis and visualisation and provide a list of open-source datasets that can be used to practice newly learned skills. Furthermore, the packages used are not all specific to geospatial data visualisation and are applicable to a wide range of scientific and data science problems. As such, it is open to everyone and hopefully beginners, intermediates and experts will all come away with a new skill or two.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/symmy596/PythonMaps-Scipy-2022"&gt;https://github.com/symmy596/PythonMaps-Scipy-2022&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Cutting Edge Climate Science in the Cloud with Pangeo</title><link href="https://pyvideo.org/scipy-2022/cutting-edge-climate-science-in-the-cloud-with-pangeo.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Julius Busecke</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/cutting-edge-climate-science-in-the-cloud-with-pangeo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Climate change is one of the most challenging issues of our time. To prevent the worst outcomes, we need to drastically accelerate the creation and distribution of scientific knowledge. But the complex and massive datasets produced by numerical climate models render the common 'download and analyze' workflow inefficient, blocking …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Climate change is one of the most challenging issues of our time. To prevent the worst outcomes, we need to drastically accelerate the creation and distribution of scientific knowledge. But the complex and massive datasets produced by numerical climate models render the common 'download and analyze' workflow inefficient, blocking innovative analysis and fast scientific discoveries.&lt;/p&gt;
&lt;p&gt;We present python tools and cloud infrastructure developed within the Pangeo community, enabling cutting edge climate science from a web-browser, making it efficient, reproducible, and inclusive. To demonstrate these capabilities we will reproduce a plot from the IPCC report in a live cloud demonstration.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Dask Tutorial: The PyData Ecosystem</title><link href="https://pyvideo.org/scipy-2022/dask-tutorial-the-pydata-ecosystem.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Natalia Clementi</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/dask-tutorial-the-pydata-ecosystem.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dask is a flexible library for parallel computing in Python. Dask provides high-level interfaces to extend the PyData ecosystem to larger-than-memory or distributed environments, as well as lower-level interfaces to customize workflows. This tutorial will be a data-oriented, hands-on, workshop that will show new users how to scale NumPy …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dask is a flexible library for parallel computing in Python. Dask provides high-level interfaces to extend the PyData ecosystem to larger-than-memory or distributed environments, as well as lower-level interfaces to customize workflows. This tutorial will be a data-oriented, hands-on, workshop that will show new users how to scale NumPy and pandas via the Dask Array and Dask DataFrame collections, and how to use the interactive diagnostic tools to understand their computational performance. It will also cover the low-level Dask Delayed and Futures interfaces, and introduce cluster deployments. No previous Dask experience is required, though knowledge of Python basics and familiarity with NumPy and pandas is preferred.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/dask/dask-tutorial"&gt;https://github.com/dask/dask-tutorial&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Day 1 Lightning Talks | SciPy 2022</title><link href="https://pyvideo.org/scipy-2022/day-1-lightning-talks-scipy-2022.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Oliver Zeigermann</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/day-1-lightning-talks-scipy-2022.html</id><content type="html"></content><category term="SciPy 2022"></category></entry><entry><title>Day 2 Lightning Talks | SciPy 2022</title><link href="https://pyvideo.org/scipy-2022/day-2-lightning-talks-scipy-2022.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Oliver Zeigermann</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/day-2-lightning-talks-scipy-2022.html</id><content type="html"></content><category term="SciPy 2022"></category></entry><entry><title>Day 3 Lightning Talks | SciPy 2022</title><link href="https://pyvideo.org/scipy-2022/day-3-lightning-talks-scipy-2022.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Lalitha Krishnamoorthy</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/day-3-lightning-talks-scipy-2022.html</id><content type="html"></content><category term="SciPy 2022"></category></entry><entry><title>DeePMD-kit: A Powerful, Efficient, Free Platform for Deep Potential Model</title><link href="https://pyvideo.org/scipy-2022/deepmd-kit-a-powerful-efficient-free-platform-for-deep-potential-model.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Jinzhe Zeng</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/deepmd-kit-a-powerful-efficient-free-platform-for-deep-potential-model.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DeePMD-kit, a platform for machine learning potential models, was proposed in 2017. It is a C++/Python mixed package built upon TensorFlow and NumPy. With development by DeepModeling open-source community, DeePMD-kit has become a powerful, efficient, user-friendly, flexible, and free platform and been used by many researchers from different …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DeePMD-kit, a platform for machine learning potential models, was proposed in 2017. It is a C++/Python mixed package built upon TensorFlow and NumPy. With development by DeepModeling open-source community, DeePMD-kit has become a powerful, efficient, user-friendly, flexible, and free platform and been used by many researchers from different areas.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Developing Extensions for JupyterLab</title><link href="https://pyvideo.org/scipy-2022/developing-extensions-for-jupyterlab.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Martha Cryan</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/developing-extensions-for-jupyterlab.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;JupyterLab is a web-based user interface for scientists and developers for exploration, analysis, and visualization. JupyterLab provides a Jupyter notebook editor, code editor, code console, terminal, debugger, and more as core extensions. Users can write and distribute extensions as Python packages to add new components or customize and extend …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;JupyterLab is a web-based user interface for scientists and developers for exploration, analysis, and visualization. JupyterLab provides a Jupyter notebook editor, code editor, code console, terminal, debugger, and more as core extensions. Users can write and distribute extensions as Python packages to add new components or customize and extend the capabilities of existing components in JupyterLab. For example, users can install extensions that provide a new file viewer or editor, display data with custom visualizations inside notebooks or code consoles, or interact with external services and version control. Extensions can add items to the main menu, status bar, command palette, notebook metadata panel, activity launcher, side bars, context menus, toolbars, and keyboard shortcuts. Extensions can also provide new autocomplete results, custom themes, custom settings, and custom ipywidgets. Extensions can also provide extension points for other extensions.&lt;/p&gt;
&lt;p&gt;In this tutorial, we will guide attendees through creating basic extensions and show how extensions can interact with core components in JupyterLab. We'll use the new extension distribution system introduced in JupyterLab 3.0, which enables users to easily install extensions as Python packages. Attendees are expected to be comfortable with coding in javascript/typescript (or willing to pick it up fairly quickly). Attendees are encouraged to come with an extension idea that they’d like to work on.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/marthacryan/developing-extensions-tutorial"&gt;https://github.com/marthacryan/developing-extensions-tutorial&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Development of Accessible, Aesthetically-Pleasing Color Sequences</title><link href="https://pyvideo.org/scipy-2022/development-of-accessible-aesthetically-pleasing-color-sequences.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Matthew Petroff</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/development-of-accessible-aesthetically-pleasing-color-sequences.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Slides: &lt;a class="reference external" href="https://doi.org/10.25080/majora-212e5952-036"&gt;https://doi.org/10.25080/majora-212e5952-036&lt;/a&gt;
Paper: &lt;a class="reference external" href="https://arxiv.org/abs/2107.02270"&gt;https://arxiv.org/abs/2107.02270&lt;/a&gt;
Data &amp;amp; Code: &lt;a class="reference external" href="https://github.com/mpetroff/accessible-color-cycles"&gt;https://github.com/mpetroff/accessible-color-cycles&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Does that CSV need to be on PyPI? Probably not.</title><link href="https://pyvideo.org/scipy-2022/does-that-csv-need-to-be-on-pypi-probably-not.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>James Lamb</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/does-that-csv-need-to-be-on-pypi-probably-not.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, attendees will learn the impact of including unnecessary files in Python packages. The talk includes a brief (seriously, BRIEF) overview of Python packaging, followed by specific examples of issues which can result from larger packages. After discussing specific examples of (in the speaker's opinion) unnecessary files …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, attendees will learn the impact of including unnecessary files in Python packages. The talk includes a brief (seriously, BRIEF) overview of Python packaging, followed by specific examples of issues which can result from larger packages. After discussing specific examples of (in the speaker's opinion) unnecessary files found in some popular Python packages, the talk concludes with strategies for reducing package size and a description of how to estimate the impact of changes on package size. If you're known as &amp;quot;the pedantic one&amp;quot; on your team, this talk is for you!&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Efficient Parametrizations of Potential Energy Surfaces</title><link href="https://pyvideo.org/scipy-2022/efficient-parametrizations-of-potential-energy-surfaces.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Sebastian Bichelmaier</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/efficient-parametrizations-of-potential-energy-surfaces.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Finite temperature atomistic simulations require high accuracy dynamical models with much better performance than direct ab initio calculations. Two of those are high-order polynomial expansions and neural network force fields. We discuss high-performance implementations of both using JAX and point out the intrinsic limitations of the former. We illustrate …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Finite temperature atomistic simulations require high accuracy dynamical models with much better performance than direct ab initio calculations. Two of those are high-order polynomial expansions and neural network force fields. We discuss high-performance implementations of both using JAX and point out the intrinsic limitations of the former. We illustrate this with a Lennard-Jones solid and a successful application to the phase diagram of hafnia, a complex and interesting oxide.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Enabling Petabyte-scale Ocean Data Analytics</title><link href="https://pyvideo.org/scipy-2022/enabling-petabyte-scale-ocean-data-analytics.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Thomas Nicholas</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/enabling-petabyte-scale-ocean-data-analytics.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The largest oceanographic simulations available are petabyte-scale, presenting a huge challenge when computing even relatively simple analysis functions. Furthermore, doing vector calculus with data living on a staggered grid requires specific numerical schemes to guarantee correctness.&lt;/p&gt;
&lt;p&gt;XGCM solves both these problems - it applies common vector calculus operations in a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The largest oceanographic simulations available are petabyte-scale, presenting a huge challenge when computing even relatively simple analysis functions. Furthermore, doing vector calculus with data living on a staggered grid requires specific numerical schemes to guarantee correctness.&lt;/p&gt;
&lt;p&gt;XGCM solves both these problems - it applies common vector calculus operations in a grid-aware manner, and now uses the minimum number of dask tasks. This works by applying operations atomically as a “grid ufunc”, using a protocol which generalises numpy ufuncs to specify the input and output grids for a given computation. Using this approach in conjunction with another package, xhistogram, we computed vorticity-strain histograms in different ocean basins globally.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Eroding Coastlines: A Geospatial &amp; Computer Vision</title><link href="https://pyvideo.org/scipy-2022/eroding-coastlines-a-geospatial-computer-vision.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Mansi Shah</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/eroding-coastlines-a-geospatial-computer-vision.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Satellite data is more widely available than ever before, and it is now possible for the public to access sub-weekly and even daily imagery of the Earth's entire landmass. In this workshop, we will gain hands-on experience exploring publicly-available satellite imagery and using Python tools such as rasterio, numpy …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Satellite data is more widely available than ever before, and it is now possible for the public to access sub-weekly and even daily imagery of the Earth's entire landmass. In this workshop, we will gain hands-on experience exploring publicly-available satellite imagery and using Python tools such as rasterio, numpy, openCV, shapely, and geopandas  for geospatial data analysis and computer vision image analysis of medium- and high-resolution imagery data.  During the second half of the workshop, we will apply what we’ve learned to identify and analyze instances of coastal erosion, one of the most pressing environmental and humanitarian challenges facing our planet today. No previous experience with geospatial or computer vision Python libraries is necessary.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://go.planet.com/scipy2022repo"&gt;http://go.planet.com/scipy2022repo&lt;/a&gt;
&lt;a class="reference external" href="http://go.planet.com/scipy2022binder"&gt;http://go.planet.com/scipy2022binder&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Exploring Open Quantum Systems with QuTiP</title><link href="https://pyvideo.org/scipy-2022/exploring-open-quantum-systems-with-qutip.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Simon Cross</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/exploring-open-quantum-systems-with-qutip.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The second wave of quantum engineering is upon us. The first wave gave us lasers, semiconductors and nuclear magnetic resonance imaging. In the second, we're building new kinds of sensors and new materials, sending coherent quantum states over thousands of kilometers, and learning to control complex quantum devices (e …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The second wave of quantum engineering is upon us. The first wave gave us lasers, semiconductors and nuclear magnetic resonance imaging. In the second, we're building new kinds of sensors and new materials, sending coherent quantum states over thousands of kilometers, and learning to control complex quantum devices (e.g., &amp;quot;&amp;quot;quantum computers&amp;quot;&amp;quot;). These new devices are all &amp;quot;&amp;quot;open quantum systems&amp;quot;&amp;quot; -- i.e. quantum systems that interact with their environment.&lt;/p&gt;
&lt;p&gt;In this tutorial, we'll ignore the hype, and learn how to control four neutral atoms using QuTiP, an open source Python library for simulating open quantum systems. We'll start by looking at the description of single atoms, then at how they evolve with time and interact with other atoms, and finally how they interact with a surrounding environment. We'll combine Python code with visualizations and plots to build intuition for how these systems evolve, and hopefully attendees will leave with a deeper appreciation of what these new devices have to offer, and their limitations and the challenges involved in building them.&lt;/p&gt;
&lt;p&gt;No previous experience with quantum physics required, although there will be some recommended reading beforehand for those who are completely unfamiliar.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/hodgestar/qutip-scipy-2022"&gt;https://github.com/hodgestar/qutip-scipy-2022&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Geospatial Analysis &amp; Visualization with PyGMT</title><link href="https://pyvideo.org/scipy-2022/geospatial-analysis-visualization-with-pygmt.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Max Jones</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/geospatial-analysis-visualization-with-pygmt.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Spatial data are ubiquitous across the Earth, Ocean, Geo &amp;amp; Atmospheric Sciences. PyGMT is an open-source Python package that specializes in processing and plotting spatial data. We will provide a demonstration of the latest developments in PyGMT, including new features for sampling, projecting, filtering, and analyzing data along with enhancements …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Spatial data are ubiquitous across the Earth, Ocean, Geo &amp;amp; Atmospheric Sciences. PyGMT is an open-source Python package that specializes in processing and plotting spatial data. We will provide a demonstration of the latest developments in PyGMT, including new features for sampling, projecting, filtering, and analyzing data along with enhancements for visualizing tabular and raster datasets. We will also discuss our progress towards a more Pythonic API through simpler arguments and more informative exceptions. Lastly, we will present ways to get involved with the PyGMT community, including contributing feedback, writing documentation and/or code, and participating in PyGMT events.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>GPU Accelerated Graph Analysis in Python Using cuGraph</title><link href="https://pyvideo.org/scipy-2022/gpu-accelerated-graph-analysis-in-python-using-cugraph.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Brad Rees</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/gpu-accelerated-graph-analysis-in-python-using-cugraph.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Graph analysis is used in a wide range of applications, from computational social science (social network analysis) to fraud detection and marketing. Just like within Machine Learning (ML), being able to load and analyze data quickly is the key to getting to a solution faster. Additionally, like ML, there …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Graph analysis is used in a wide range of applications, from computational social science (social network analysis) to fraud detection and marketing. Just like within Machine Learning (ML), being able to load and analyze data quickly is the key to getting to a solution faster. Additionally, like ML, there is a lot of data prep, which we call graph ETL, that needs to be done. Join us for a talk on using RAPIDS and cuGraph to accelerate the full end-to-end graph analysis pipeline. We will dive into a COVID-19 social network example to illustrate the performance gains of using GPUs.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>GPU Development with Python 101</title><link href="https://pyvideo.org/scipy-2022/gpu-development-with-python-101.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Jacob Tomlinson</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/gpu-development-with-python-101.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing GPU code in Python is easier today than ever, and in this tutorial, I will share what I’ve learned and how you can get started with accelerating your code. You don’t need to learn C++ and you don’t need any special tooling. All you need …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing GPU code in Python is easier today than ever, and in this tutorial, I will share what I’ve learned and how you can get started with accelerating your code. You don’t need to learn C++ and you don’t need any special tooling. All you need is an NVIDIA GPU, Python and a few libraries (and we’ll provide that for the tutorial).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/jacobtomlinson/gpu-python-tutorial"&gt;https://github.com/jacobtomlinson/gpu-python-tutorial&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>How Do You Test Data Workflows</title><link href="https://pyvideo.org/scipy-2022/how-do-you-test-data-workflows.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Paul Anzel</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/how-do-you-test-data-workflows.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data workflows are unlike other software, and present a unique challenge for testing. How do you unit test a SQL query in the first place? In this presentation, I will give a number of different approaches to testing your data-handling code.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Human-Friendly, Production-Ready Data Science with Metaflow</title><link href="https://pyvideo.org/scipy-2022/human-friendly-production-ready-data-science-with-metaflow.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Savin Goyal</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/human-friendly-production-ready-data-science-with-metaflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the key questions in modern data science and machine learning, for businesses and practitioners alike, is how do you move machine learning projects from prototype to production as a repeatable process. In this talk, we present an introduction to the landscape of production-grade tools, techniques, and workflows …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the key questions in modern data science and machine learning, for businesses and practitioners alike, is how do you move machine learning projects from prototype to production as a repeatable process. In this talk, we present an introduction to the landscape of production-grade tools, techniques, and workflows that bridge the gap between laptop data science and production ML workflows. In doing so, we’ll present a widely applicable stack that provides the best possible user experience for data scientists, allowing them to focus on parts they like (modeling using their favorite off-the-shelf libraries) while providing robust built-in solutions for foundational infrastructure.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>hvPlot &amp; HoloViz</title><link href="https://pyvideo.org/scipy-2022/hvplot-holoviz.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>James Bednar</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/hvplot-holoviz.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python offers many powerful visualization tools, each with their own strengths and advantages, but few people have the time and interest to learn all the different APIs required to use these different tools. Luckily, a de-facto standard API for data plotting has emerged in the Pandas .plot() API, which …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python offers many powerful visualization tools, each with their own strengths and advantages, but few people have the time and interest to learn all the different APIs required to use these different tools. Luckily, a de-facto standard API for data plotting has emerged in the Pandas .plot() API, which is now supported by many different plotting packages.&lt;/p&gt;
&lt;p&gt;In this tutorial, you will learn how to use hvPlot, a high-level interactive plotting library that exposes the power of Bokeh, Matplotlib, Plotly, Datashader, and Cartopy using the same .plot API you may already know from using Pandas or Xarray's plotting interface. We'll also show you how to turn nearly any expression you can write with that API into a web app with plots and tables by simply substituting widgets for any parameters you want users to be able to select. Thanks to the HoloViz tools on which hvPlot is built, the resulting apps can easily handle big data (up to billions of rows on an ordinary laptop), remote data (either in Jupyter or in standalone apps), streaming data (using streaming dataframe libraries), geographical data (building on the geoscience software stack), or multidimensional data (using Xarray).&lt;/p&gt;
&lt;p&gt;hvPlot's high-level interface should be sufficient for nearly all of the common data-exploration and data-analysis tasks you want to do with Pandas or Xarray, but in keeping with the HoloViz philosophy of &amp;quot;&amp;quot;shortcuts rather than dead ends&amp;quot;&amp;quot;, we'll also show you how and when to drop down to lower-level APIs when you need to, such as when building more complex apps using Panel, doing complex graphical data calculations using Datashader, or integrating plotting and interactivity into your own libraries using Param and HoloViews. With the techniques you learn in the hands-on exercises in this tutorial, you'll get the tools and know-how to effectively explore, analyze and visualize simple or complex, small or large, and static or dynamic data easily, concisely, and reproducibly. We expect participants to have previously used some sort of plotting tool and to be comfortable with Python and at least one array-based library (Numpy, Pandas, Xarray, CuPy, cuDF, Dask, etc.).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://alisterburt.github.io/napari-workshops/Scipy-0722/intro.html"&gt;https://alisterburt.github.io/napari-workshops/Scipy-0722/intro.html&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Improving Random Sampling in Python</title><link href="https://pyvideo.org/scipy-2022/improving-random-sampling-in-python.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Pamphile Roy</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/improving-random-sampling-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NumPy random number generators and SciPy distributions are widely used to get random numbers. However, challenges might arise in the following situations: (i) sampling from non-standard distributions can be slow if a custom implementation is not available and (ii) sampling in high dimensions leads to poor convergence rates. Thanks …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NumPy random number generators and SciPy distributions are widely used to get random numbers. However, challenges might arise in the following situations: (i) sampling from non-standard distributions can be slow if a custom implementation is not available and (ii) sampling in high dimensions leads to poor convergence rates. Thanks to new developments in SciPy, there is an answer to these problems with two new submodules: scipy.stats.sampling and scipy.stats.qmc.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Infrastructure at Open Force Field: end-to-end force field development</title><link href="https://pyvideo.org/scipy-2022/infrastructure-at-open-force-field-end-to-end-force-field-development.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Matt Thompson</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/infrastructure-at-open-force-field-end-to-end-force-field-development.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Force fields are parameter sets used to model the interactions of molecules in computer simulations relevant to fields such as materials science and biophysics. The Open Force Field Initiative has built infrastructure for the fitting, distribution, and benchmarking of force fields. From curated quantum chemical calculations used for fitting …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Force fields are parameter sets used to model the interactions of molecules in computer simulations relevant to fields such as materials science and biophysics. The Open Force Field Initiative has built infrastructure for the fitting, distribution, and benchmarking of force fields. From curated quantum chemical calculations used for fitting targets to free energy calculations for benchmarking, the process of developing and evaluating a force field relies heavily on existing open source tools. This talk gives an overview of how Open Force Field has used and uses this infrastructure to develop and evaluate extensible next-generation small molecule force fields, cases in which automation has enabled rapid scaled-ups, and how this process is being applied to force fields for biopolymers like proteins.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Interactive image analysis with napari</title><link href="https://pyvideo.org/scipy-2022/interactive-image-analysis-with-napari.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Kevin Yamauchi</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/interactive-image-analysis-with-napari.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to performing interactive image analysis using the scientific python ecosystem, including scikit-image, scipy, jupyter notebook, and napari. Through a series of interactive notebooks, you will gain familiarity with image processing in python and learn to take an image processing workflow from prototype to packaged …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to performing interactive image analysis using the scientific python ecosystem, including scikit-image, scipy, jupyter notebook, and napari. Through a series of interactive notebooks, you will gain familiarity with image processing in python and learn to take an image processing workflow from prototype to packaged analysis plugin. You will be introduced to napari (a python-based image viewer) and its plugin ecosystem, perform basic image analysis tasks like segmentation and spot detection using napari and jupyter notebook, and finally will create your own napari plugin from this workflow. This tutorial is intended for those with some experience writing python scripts who have an interest in scientific image visualization and analysis. No prior experience with napari is required.&lt;/p&gt;
&lt;p&gt;We will begin with an introduction to napari's interface, its various image layer types and general usage. Next we'll dive into an application to cell biology, using the cellpose plugin to perform cell nuclei segmentation, shape measurement and spot detection on a 2D image. Finally, we'll introduce the &amp;quot;&amp;quot;npe2&amp;quot;&amp;quot; napari plugin engine and help you turn the spot detection workflow into your own napari plugin.&lt;/p&gt;
&lt;p&gt;All sections of the tutorial are accompanied by interactive activities using a Jupyter notebook. Where necessary, these activities are introduced through informational lectures covering key tools and concepts.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://alisterburt.github.io/napari-workshops/Scipy-0722/intro.html"&gt;https://alisterburt.github.io/napari-workshops/Scipy-0722/intro.html&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Introduction to Causal Modeling</title><link href="https://pyvideo.org/scipy-2022/introduction-to-causal-modeling.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Roni Kobrosly</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/introduction-to-causal-modeling.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial session is intended to give attendees a gentle introduction to applying causal thinking and causal inference to data using python. Causal data analysis is very common in many academic domains (e.g. in social psychology, epidemiology, macroeconomics, public policy research, sociology, and more) as well as in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial session is intended to give attendees a gentle introduction to applying causal thinking and causal inference to data using python. Causal data analysis is very common in many academic domains (e.g. in social psychology, epidemiology, macroeconomics, public policy research, sociology, and more) as well as in industry (all of the largest Silicon Valley tech companies employ teams of scientists who answer business questions purely with causal inference methods).&lt;/p&gt;
&lt;p&gt;The tutorial will involve a combination of presentations with open Q&amp;amp;A and hands-on exercises contained in Jupyter notebooks. This session will cover the difference between correlation and causation, the pitfalls of conducting an analysis using observational data, how causal inference can help get around these pitfalls, and examples of common, modern modeling approaches used to conduct causal inference (propensity score matching, estimating causal curves, g-computation, and double ML). After the tutorial, the attendees should have a good foundational understanding of causality and the ability to confidently explore the topic on their own. Causal inference can be a very theory-heavy topic, making it impenetrable to novices. In this tutorial, we'll aim to take a more practical perspective on causal inference, while still occasionally touching on the theory.&lt;/p&gt;
&lt;p&gt;Tutorial participants are not expected to be familiar with causal inference before attending, but we hope they have an earnest curiosity to learn about it! To get the most out of the session, the participants ought to have experience working with the common python data stack: &lt;cite&gt;matplotlib&lt;/cite&gt;, &lt;cite&gt;numpy&lt;/cite&gt;, &lt;cite&gt;pandas&lt;/cite&gt;, and &lt;cite&gt;scikit-learn&lt;/cite&gt;. Attendees should have some experience conducting classic machine learning modeling using the &lt;cite&gt;scikit-learn&lt;/cite&gt; API, although having advanced machine learning expertise is absolutely not a prerequisite. A very basic understanding of statistics would be helpful (e.g. understanding what a mean is, what confidence intervals represent).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/ronikobrosly/causal_inference_intro"&gt;https://github.com/ronikobrosly/causal_inference_intro&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Introduction to Numerical Computing With NumPy</title><link href="https://pyvideo.org/scipy-2022/introduction-to-numerical-computing-with-numpy.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Logan Thomas</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/introduction-to-numerical-computing-with-numpy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NumPy provides Python with a powerful array processing library and an elegant syntax that is well suited to expressing computational algorithms clearly and efficiently. We'll introduce basic array syntax and array indexing, review some of the available mathematical functions in NumPy, and discuss how to write your own routines …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NumPy provides Python with a powerful array processing library and an elegant syntax that is well suited to expressing computational algorithms clearly and efficiently. We'll introduce basic array syntax and array indexing, review some of the available mathematical functions in NumPy, and discuss how to write your own routines. Along the way, we'll learn just enough about Matplotlib to display results from our examples.&lt;/p&gt;
&lt;p&gt;The tutorial is intended for people new to the scientific Python ecosystem. Previous experience in Python or another programming language is useful but not required.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/enthought/Numpy-Tutorial-SciPyConf-2022/"&gt;https://github.com/enthought/Numpy-Tutorial-SciPyConf-2022/&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Introduction to Property Based Testing</title><link href="https://pyvideo.org/scipy-2022/introduction-to-property-based-testing.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Zac Hatfield-Dodds</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/introduction-to-property-based-testing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tests can be helpful: they can find bugs in new code, check for regressions in old code, and clarify precisely what the code is meant to do. On the other hand, writing tests is often tedious - and it's rare to think of an error when testing that you forgot …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tests can be helpful: they can find bugs in new code, check for regressions in old code, and clarify precisely what the code is meant to do. On the other hand, writing tests is often tedious - and it's rare to think of an error when testing that you forgot when writing the code. Even worse, as scientists we write code &lt;em&gt;because&lt;/em&gt; we don't yet know the correct answer - so how can we possibly test it?  My favorite answer is to think about the higher-level properties of your system: even without the correct answer on hand, we can check that energy was conserved, reading gives us back the data we just wrote or converted, and so on.&lt;/p&gt;
&lt;p&gt;Property-based testing &lt;em&gt;encourages and rewards&lt;/em&gt; this style of thinking!  Once you have a property or invariant in mind, it's easy to express that as a test - and then a library like Hypothesis will search for inputs that make your test fail.  Instead of testing specific input-output pairs like &lt;cite&gt;1 + 2 == 3&lt;/cite&gt;, you might claim that &lt;cite&gt;a + b == b + a&lt;/cite&gt;... and be informed that this is true for integers, but not for floats (not even &lt;em&gt;finite&lt;/em&gt; floats!). This tutorial is for people comfortable with decorators and with reading, running, and writing Python unit tests.&lt;/p&gt;
&lt;p&gt;It's structured as four blocks, each consisting of a short talk, live-coded demo, and extensive exercises:
1. Property-Based Testing 101: core concepts and the core of the Hypothesis library
2. Describe your Data: from numbers, to arrays, to recursive and more complicated things
3. Common Tests: from &amp;quot;&amp;quot;does not crash&amp;quot;&amp;quot; to &amp;quot;&amp;quot;write+read == noop&amp;quot;&amp;quot; to 'metamorphic relations'
4. Putting it into Practice: use what you've learned to find real bugs in a real project!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/rsokl/testing-tutorial"&gt;https://github.com/rsokl/testing-tutorial&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Introduction to the Qiskit Runtime</title><link href="https://pyvideo.org/scipy-2022/introduction-to-the-qiskit-runtime.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Jennifer Glick</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/introduction-to-the-qiskit-runtime.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutorial Materials: &lt;a class="reference external" href="https://github.com/jenglick/scipy22-qiskit-runtime-tutorial"&gt;https://github.com/jenglick/scipy22-qiskit-runtime-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this tutorial, users are introduced to the Qiskit Runtime, a new platform for describing workload execution at the level of programs rather than circuits.&lt;/p&gt;
&lt;p&gt;Qiskit Runtime enables more complex quantum workloads, driven by algorithms that combine classical and quantum computation in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutorial Materials: &lt;a class="reference external" href="https://github.com/jenglick/scipy22-qiskit-runtime-tutorial"&gt;https://github.com/jenglick/scipy22-qiskit-runtime-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this tutorial, users are introduced to the Qiskit Runtime, a new platform for describing workload execution at the level of programs rather than circuits.&lt;/p&gt;
&lt;p&gt;Qiskit Runtime enables more complex quantum workloads, driven by algorithms that combine classical and quantum computation in the same execution cycle.&lt;/p&gt;
&lt;p&gt;Users will see how problems ranging from machine learning to chemistry simulation can benefit from this new execution architecture.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Introduction to Workflow Orchestration with Prefect</title><link href="https://pyvideo.org/scipy-2022/introduction-to-workflow-orchestration-with-prefect.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Kevin Kho</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/introduction-to-workflow-orchestration-with-prefect.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Workflow management systems are used for scheduling and monitoring data pipelines. This includes managing task dependencies, retrying failed tasks, and sending notifications to users. This talk will show data engineers and scientists how to orchestrate their data workflows with Prefect, an open-source modern workflow management system designed with Dask …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Workflow management systems are used for scheduling and monitoring data pipelines. This includes managing task dependencies, retrying failed tasks, and sending notifications to users. This talk will show data engineers and scientists how to orchestrate their data workflows with Prefect, an open-source modern workflow management system designed with Dask natively built-in. After this talk, attendees should understand the basics of workflow orchestration and how to get started implementing it for their use cases&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Keynote: Fairness of Machine Learning in Medical Image Analysis</title><link href="https://pyvideo.org/scipy-2022/keynote-fairness-of-machine-learning-in-medical-image-analysis.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Enzo Ferrante</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/keynote-fairness-of-machine-learning-in-medical-image-analysis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Medical institutions around the world are adopting machine learning (ML) systems to assist in analyzing health data; at the same time, the research community of fairness in ML has shown that these systems can be biased, resulting in disparate performance for specific subpopulations. In this talk, we will discuss …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Medical institutions around the world are adopting machine learning (ML) systems to assist in analyzing health data; at the same time, the research community of fairness in ML has shown that these systems can be biased, resulting in disparate performance for specific subpopulations. In this talk, we will discuss the relationship between bias, ML and health systems, addressing the specific case of gender bias in X-ray classifiers for computer-assisted diagnosis.&lt;/p&gt;
</content><category term="SciPy 2022"></category><category term="Keynote"></category></entry><entry><title>Keynote: SciPy in Climate Science</title><link href="https://pyvideo.org/scipy-2022/keynote-scipy-in-climate-science.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Peter Kalmus</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/keynote-scipy-in-climate-science.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dr. Peter Kalmus is a Data Scientist at NASA's Jet Propulsion Laboratory. He is the recipient of NASA’s Early Career Achievement Medal and has over 100 peer-reviewed scientific publications. Peter started his career in astrophysics. He obtained a B.Sc. in physics from Harvard College and a Ph …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dr. Peter Kalmus is a Data Scientist at NASA's Jet Propulsion Laboratory. He is the recipient of NASA’s Early Career Achievement Medal and has over 100 peer-reviewed scientific publications. Peter started his career in astrophysics. He obtained a B.Sc. in physics from Harvard College and a Ph.D. in physics from Columbia University, and led searches for gravitational waves from magnetars and supernovae on behalf of the LIGO collaboration as a Caltech postdoc. He switched fields into climate science in 2012 due to his mounting climate concern, joining JPL as a postdoc in the now-discontinued Climate Physics group where he studied cloud and atmospheric processes and supported the AIRS team. Since being hired permanently at JPL in 2016, Peter has increasingly moved his research focus into biodiversity and ecological forecasting. He is currently the PI or Science PI on 3 ROSES projects in these areas, and he leads JPL’s Biodiversity Club. In addition, Peter continues his atmospheric science work as the PI on a new ROSES project to study changes in the severe convective thermodynamic environment in the “tornado alley” region of the US. Outside of JPL, Peter is also a well-known climate activist, the author of an award-winning book, Being the Change: Live Well and Spark a Climate Revolution, and a regular opinion contributor to The Guardian, the LA Times, and other publications.&lt;/p&gt;
</content><category term="SciPy 2022"></category><category term="Keynote"></category></entry><entry><title>Keynote: Software and Services to Fully Realize the Impact of AI...</title><link href="https://pyvideo.org/scipy-2022/keynote-software-and-services-to-fully-realize-the-impact-of-ai.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Ben Blaiszik</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/keynote-software-and-services-to-fully-realize-the-impact-of-ai.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The past six years have seen exciting developments across science and engineering as new machine learning (ML) and other artificial intelligence (AI) methods are applied, adapted, or created for specific applications. While certainly no panacea, their successes in accelerating complex simulations, predicting folded protein shapes, understanding new materials, detecting …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The past six years have seen exciting developments across science and engineering as new machine learning (ML) and other artificial intelligence (AI) methods are applied, adapted, or created for specific applications. While certainly no panacea, their successes in accelerating complex simulations, predicting folded protein shapes, understanding new materials, detecting rare physics events, predicting molecular properties, and designing molecular therapeutics, for example, have already proved transformative. Concurrently, newly upgraded experimental user facilities, nascent autonomous laboratories, and Exascale computational platforms are on the way, heralding a vast new spectrum of capabilities. Connecting the advances in ML/AI with these new capabilities and making them simple for users to access is a grand challenge for the next decade of research that promises to unlock a new era in scientific discovery and understanding.&lt;/p&gt;
&lt;p&gt;In this talk, we describe key Python software, services, and tools that our group is developing to: 1) act as a platform to facilitate creation of user applications and automations; 2) reduce friction to move, access, publish, and discover high-value datasets generated in a variety of research domains; 3) promote incorporation of both physical (e.g., robotics) and software automation into research workflows to dramatically increase efficiency and reach towards autonomous laboratories; 4) leverage AI/ML coupled with Leadership scale computing to steer  large campaigns of simulations to probe chemical and material design spaces; and 5) connect the community in new ways to tap into latent talent to accelerate scientific research.&lt;/p&gt;
&lt;p&gt;Coauthors: Ben Blaiszik, Aristana Scourtas, KJ Schmidt, Ethan Schondorf, Ben Galewsky, Ryan Chard, Raf Vescovi, Logan Ward, Kyle Chard, Nick Saint, Mark Hereld, Paul Voyles, Dane Morgan, Nicholas Schwarz, Mike Papka, Ian Foster&lt;/p&gt;
</content><category term="SciPy 2022"></category><category term="Keynote"></category></entry><entry><title>Loopy and Unloopy Programming Techniques</title><link href="https://pyvideo.org/scipy-2022/loopy-and-unloopy-programming-techniques.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Jim Pivarski</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/loopy-and-unloopy-programming-techniques.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's curious that Python is now the leading language for scientific computing, since pure Python code is not fast and slow code × big data = long wait times. However, most number-crunching in Python is performed by optimized, precompiled libraries: Python only directs the computation, steering it toward the user's intent …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's curious that Python is now the leading language for scientific computing, since pure Python code is not fast and slow code × big data = long wait times. However, most number-crunching in Python is performed by optimized, precompiled libraries: Python only directs the computation, steering it toward the user's intent. As a consequence, the most basic syntax you might learn in an introductory programming class—&lt;cite&gt;if&lt;/cite&gt;, &lt;cite&gt;for&lt;/cite&gt;, and &lt;cite&gt;while&lt;/cite&gt; loops—is not what you should use when dealing with big data. You should use &amp;quot;&amp;quot;vectorized&amp;quot;&amp;quot; expressions, like slices, broadcasting, and reducers.&lt;/p&gt;
&lt;p&gt;This tutorial is an introduction to vectorized array programming. Python beginners are welcome—unfamiliar syntax will be minimized and explained as necessary—because the focus is on _techniques_, rather than language or library features. It is a guided tour through problems with loopy and unloopy solutions, using NumPy and Awkward Array for concreteness, but the techniques can be adapted to any array-oriented setting, such as GPU programming (demo included).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/jpivarski-talks/2022-07-11-scipy-loopy-tutorial"&gt;https://github.com/jpivarski-talks/2022-07-11-scipy-loopy-tutorial&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Machine Learning for Production Workloads with Flyte</title><link href="https://pyvideo.org/scipy-2022/machine-learning-for-production-workloads-with-flyte.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Niels Bantilan</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/machine-learning-for-production-workloads-with-flyte.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MLOps encapsulates the discipline of – and infrastructure that supports – building and maintaining machine learning models in production. This talk highlights four challenges in carrying this out effectively: data quality, reproducibility, recoverability, and auditability. You’ll learn how Flyte, an open source data- and machine-learning-aware orchestration tool, is designed to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MLOps encapsulates the discipline of – and infrastructure that supports – building and maintaining machine learning models in production. This talk highlights four challenges in carrying this out effectively: data quality, reproducibility, recoverability, and auditability. You’ll learn how Flyte, an open source data- and machine-learning-aware orchestration tool, is designed to overcome these challenges and how you can apply the higher-level ideas baked into Flyte to your work!&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Maintaining Fortran in Python in Perpetuity</title><link href="https://pyvideo.org/scipy-2022/maintaining-fortran-in-python-in-perpetuity.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Rohit Goswami</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/maintaining-fortran-in-python-in-perpetuity.html</id><content type="html"></content><category term="SciPy 2022"></category></entry><entry><title>Monaco: Quantify Uncertainty &amp; Sensitivities in Computational Models with a Monte Carlo Library</title><link href="https://pyvideo.org/scipy-2022/monaco-quantify-uncertainty-sensitivities-in-computational-models-with-a-monte-carlo-library.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Scott Shambaugh</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/monaco-quantify-uncertainty-sensitivities-in-computational-models-with-a-monte-carlo-library.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Roll the dice! Quantify uncertainty and sensitivities in your existing computational models with the “monaco” Monte Carlo library. Users define input variables randomly drawn from any of SciPy's statistical distributions, run their model in parallel anywhere from 1 to millions of times, and postprocess the outputs to obtain meaningful …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Roll the dice! Quantify uncertainty and sensitivities in your existing computational models with the “monaco” Monte Carlo library. Users define input variables randomly drawn from any of SciPy's statistical distributions, run their model in parallel anywhere from 1 to millions of times, and postprocess the outputs to obtain meaningful, statistically significant conclusions. This talk will go over why you should always be running Monte Carlos, a demo of how to set up and run a sim, and a crash course in generating relevant plots and statistics.&lt;/p&gt;
&lt;p&gt;Project repo: &lt;a class="reference external" href="https://github.com/scottshambaugh/monaco"&gt;https://github.com/scottshambaugh/monaco&lt;/a&gt;
Lots of examples: &lt;a class="reference external" href="https://github.com/scottshambaugh/monaco/tree/main/examples"&gt;https://github.com/scottshambaugh/monaco/tree/main/examples&lt;/a&gt;
API Documentation: &lt;a class="reference external" href="https://monaco.readthedocs.io"&gt;https://monaco.readthedocs.io&lt;/a&gt;
Conference paper: &lt;a class="reference external" href="https://conference.scipy.org/proceedings/scipy2022/pdfs/scott_shambaugh.pdf"&gt;https://conference.scipy.org/proceedings/scipy2022/pdfs/scott_shambaugh.pdf&lt;/a&gt;
Talk slides and notebooks: &lt;a class="reference external" href="https://github.com/scottshambaugh/monaco-scipy2022"&gt;https://github.com/scottshambaugh/monaco-scipy2022&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Network Analysis Made Simple</title><link href="https://pyvideo.org/scipy-2022/network-analysis-made-simple.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Eric Ma</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/network-analysis-made-simple.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Through the use of NetworkX's API, tutorial participants will learn about the basics of graph theory and its use in applied network science. Starting with a computationally-oriented definition of a graph and its associated methods, we will build out into progressively more advanced concepts (path and structure finding, and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Through the use of NetworkX's API, tutorial participants will learn about the basics of graph theory and its use in applied network science. Starting with a computationally-oriented definition of a graph and its associated methods, we will build out into progressively more advanced concepts (path and structure finding, and graph theory's relation to linear algebra), as well as an overview of scalable alternatives to NetworkX.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://ericmjl.github.io/Network-Analysis-Made-Simple/00-preface/01-setup/"&gt;https://ericmjl.github.io/Network-Analysis-Made-Simple/00-preface/01-setup/&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Pangeo Forge: Crowdsourcing Open Data in the Cloud</title><link href="https://pyvideo.org/scipy-2022/pangeo-forge-crowdsourcing-open-data-in-the-cloud.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Ryan Abernathey</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/pangeo-forge-crowdsourcing-open-data-in-the-cloud.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pangeo Forge is an open source platform for the curation of analysis-ready, cloud-optimized scientific datasets. We are using Pangeo Forge to populate a multi-petabyte-scale open-access library of scientific data in the cloud. You will leave this talk with a clear understanding of how to access this data library, craft …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pangeo Forge is an open source platform for the curation of analysis-ready, cloud-optimized scientific datasets. We are using Pangeo Forge to populate a multi-petabyte-scale open-access library of scientific data in the cloud. You will leave this talk with a clear understanding of how to access this data library, craft your own Pangeo Forge recipe, and become a contributor to our growing “recipe box.”&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Papyri: Better Documentation for the Jupyter Scientific Ecosystem</title><link href="https://pyvideo.org/scipy-2022/papyri-better-documentation-for-the-jupyter-scientific-ecosystem.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Matthias Bussonnier</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/papyri-better-documentation-for-the-jupyter-scientific-ecosystem.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will demo and discuss the work that is being done on Papyri, a new framework to provide rich documentation in Jupyter and Terminal IPython with plots, crosslink, equations. We will describe how libraries can opt-in to this new framework while still in beta to provide …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will demo and discuss the work that is being done on Papyri, a new framework to provide rich documentation in Jupyter and Terminal IPython with plots, crosslink, equations. We will describe how libraries can opt-in to this new framework while still in beta to provide feedback, what are the trade-off of using it, the current capabilities and the one planed with current funding, as well as where this could go in the future.&lt;/p&gt;
&lt;p&gt;The current and future progress can be seen on the main repo &lt;a class="reference external" href="https://github.com/jupyter/papyri"&gt;https://github.com/jupyter/papyri&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Per Python ad astra: Interactive Astrodynamics with poliastro</title><link href="https://pyvideo.org/scipy-2022/per-python-ad-astra-interactive-astrodynamics-with-poliastro.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Juan Luis Cano Rodriguez</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/per-python-ad-astra-interactive-astrodynamics-with-poliastro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk presents poliastro, an open-source Python library for interactive Astrodynamics that features an easy-to-use API and tools for quick visualization. poliastro implements core Astrodynamics algorithms and leverages numba and Astropy.&lt;/p&gt;
&lt;p&gt;During the talk, we will describe the two-layer architecture that allows poliastro to offer an approachable API with …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk presents poliastro, an open-source Python library for interactive Astrodynamics that features an easy-to-use API and tools for quick visualization. poliastro implements core Astrodynamics algorithms and leverages numba and Astropy.&lt;/p&gt;
&lt;p&gt;During the talk, we will describe the two-layer architecture that allows poliastro to offer an approachable API with good performance, discuss the challenges we faced to validate our code, and comment on the successes and failures of the project in trying to build a rich and diverse community.&lt;/p&gt;
&lt;p&gt;Source code of poliastro is available at &lt;a class="reference external" href="https://github.com/poliastro/poliastro/"&gt;https://github.com/poliastro/poliastro/&lt;/a&gt; and documentation is online at &lt;a class="reference external" href="https://docs.poliastro.space/"&gt;https://docs.poliastro.space/&lt;/a&gt;.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Ploomber: Developing Maintainable &amp; Reproducible Data</title><link href="https://pyvideo.org/scipy-2022/ploomber-developing-maintainable-reproducible-data.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Eduardo Blancas</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/ploomber-developing-maintainable-reproducible-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Interactive environments such as Jupyter have a reputation for producing low-quality, unmaintainable code. As a result, it is common for practitioners to go through a refactoring process where the notebook's code transforms into a more modular, maintainable form, usually through scripts and functions. However, this creates friction since the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Interactive environments such as Jupyter have a reputation for producing low-quality, unmaintainable code. As a result, it is common for practitioners to go through a refactoring process where the notebook's code transforms into a more modular, maintainable form, usually through scripts and functions. However, this creates friction since the refactoring process happens every time the analysis needs changes, causing practitioners to move back and forth between their notebooks and the refactored code. This constant moving slows down the iteration process and risks reproducibility.&lt;/p&gt;
&lt;p&gt;Ploomber is an open-source framework that addresses this problem. It allows practitioners to stay in the interactive interface they are the most productive with while providing the tools to help them build maintainable and reproducible data workflows from day one. In this tutorial, Eduardo and Ido will introduce Ploomber, going from zero to testing pipelines on GitHub Actions, using Pull Requests to collaborate, parallel experiments, and execution in distributed environments like Kubernetes and SLURM.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/edublancas/scipy-2022"&gt;https://github.com/edublancas/scipy-2022&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Practical Numerical Optimization (SciPy/Estimagic/Jaxopt)</title><link href="https://pyvideo.org/scipy-2022/practical-numerical-optimization-scipyestimagicjaxopt.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Janos Gabler</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/practical-numerical-optimization-scipyestimagicjaxopt.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial equips participants with the tools and knowledge to tackle difficult optimization problems in practice. It is neither a deep-dive into the theory and math behind numerical optimization nor is it pretending that optimization is simple. During the many hands on exercises, participates work on stylized examples where …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial equips participants with the tools and knowledge to tackle difficult optimization problems in practice. It is neither a deep-dive into the theory and math behind numerical optimization nor is it pretending that optimization is simple. During the many hands on exercises, participates work on stylized examples where &amp;quot;&amp;quot;something goes wrong&amp;quot;&amp;quot;. For example, they might get a code snippet where an optimizer converges to the wrong solution or one where the optimization crashes. Their task is to identify the problem and try to find solutions using scipy.optimize, estimagic and jaxopt. This generates practical knowledge and problem solving skills that can be applied to real world problems. Before each exercise, the topics and mechanics of using the relevant functionality of the optimization libraries are introduced. The slides are heavy on code snippets and examples, and can serve as cheat-sheet during the exercise and when solving real world optimization problems at work or in research applications.&lt;/p&gt;
&lt;p&gt;The three libraries have been chosen because they complement each other. scipy.optimize serves as a simple and familiar starting point. estimagic provides a harmonized interface to a large collection of numerical optimizers from nlopt, scipy, pygmo, ipopt, tao and others. Moreover, it comes with powerful features and diagonstic tools for difficult optimization problems. Jaxopt provides differentiable optimizeres that can be vectorized and just in time compiled with JAX, wich makes it good at solving many instances of the same optimization problem in a vectorized way.&lt;/p&gt;
&lt;p&gt;The tutorial does not require previous knowledge of numerical optimization. Participants should be comfortable at defining Python functions, creating numpy arrays and doing simple calculations using Python and numpy. All exercises will be in Jupyter notebooks. Motivation and interest can always substitute for previous knowledge and individual topics can be skipped without losing track of the rest.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/OpenSourceEconomics/scipy-estimagic"&gt;https://github.com/OpenSourceEconomics/scipy-estimagic&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Pragmatic Panel: Build and Deploy Complex Data-Driven WebApps</title><link href="https://pyvideo.org/scipy-2022/pragmatic-panel-build-and-deploy-complex-data-driven-webapps.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Kim Pevey</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/pragmatic-panel-build-and-deploy-complex-data-driven-webapps.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Panel is one of the leading choices for building dashboards in Python. In this talk, we discuss the practical aspects of complex data-driven dashboards. There are tutorials and guides available which help teach new users the basics, but this talk focuses on the challenges of building more complex, industry-ready …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Panel is one of the leading choices for building dashboards in Python. In this talk, we discuss the practical aspects of complex data-driven dashboards. There are tutorials and guides available which help teach new users the basics, but this talk focuses on the challenges of building more complex, industry-ready, deployed dashboards. There are a variety of niche issues which arise when you push the limits of complexity, and we will share the solutions we have developed. We will demonstrate these solutions as we walk through the entire lifecycle from data ingestion, though exploratory analysis to deployment as a finished website.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Project Pythia: A Community Built Training Resource</title><link href="https://pyvideo.org/scipy-2022/project-pythia-a-community-built-training-resource.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Kevin Tyle</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/project-pythia-a-community-built-training-resource.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, we invite the SciPy community to use and contribute to Project Pythia (&lt;a class="reference external" href="https://projectpythia.org/"&gt;https://projectpythia.org/&lt;/a&gt;), a currently-funded NSF EarthCube project (&lt;a class="reference external" href="https://www.earthcube.org/"&gt;https://www.earthcube.org/&lt;/a&gt;). Project Pythia is a web-based, community-owned, educational resource whose aim is to help teach geoscientists of all stripes and experience levels how …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, we invite the SciPy community to use and contribute to Project Pythia (&lt;a class="reference external" href="https://projectpythia.org/"&gt;https://projectpythia.org/&lt;/a&gt;), a currently-funded NSF EarthCube project (&lt;a class="reference external" href="https://www.earthcube.org/"&gt;https://www.earthcube.org/&lt;/a&gt;). Project Pythia is a web-based, community-owned, educational resource whose aim is to help teach geoscientists of all stripes and experience levels how to make effective use of the Geoscientific Python Ecosystem for the analysis and visualization of their data. Project Pythia was inspired by, and represents the educational efforts of, the Pangeo project (&lt;a class="reference external" href="https://pangeo.io"&gt;https://pangeo.io&lt;/a&gt;).&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Pyampute: A Python Library for Data Amputation</title><link href="https://pyvideo.org/scipy-2022/pyampute-a-python-library-for-data-amputation.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Davina Zamanzadeh</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/pyampute-a-python-library-for-data-amputation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Amputation is the opposite of imputation; it is the creation of a missing data mask for complete datasets. Amputation is useful for evaluating the effect of missing values on the outcome of a statistical or machine learning model. In this talk, we present pyampute: the first open-source Python library …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Amputation is the opposite of imputation; it is the creation of a missing data mask for complete datasets. Amputation is useful for evaluating the effect of missing values on the outcome of a statistical or machine learning model. In this talk, we present pyampute: the first open-source Python library for data amputation. Our package is compatible with the scikit-learn-style fit and transform paradigm, which allows for seamless integration of amputation in a larger, more complex data processing pipeline.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>PyConf: A Framework for Efficient Configuration of Complex Workflows</title><link href="https://pyvideo.org/scipy-2022/pyconf-a-framework-for-efficient-configuration-of-complex-workflows.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Niklas Nolte</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/pyconf-a-framework-for-efficient-configuration-of-complex-workflows.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Beginning this year, the LHCb experiment at CERN’s Large Hadron Collider will process 4 TBytes of data per second in real-time. Around a dozen algorithms will reconstruct the raw detector hits into particle trajectories, followed by O(1000) selections which aggregate these trajectories into composite objects with topologies …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Beginning this year, the LHCb experiment at CERN’s Large Hadron Collider will process 4 TBytes of data per second in real-time. Around a dozen algorithms will reconstruct the raw detector hits into particle trajectories, followed by O(1000) selections which aggregate these trajectories into composite objects with topologies relevant for different physics analyses and classify them as interesting for further offline processing. We present PyConf, a functional python framework for automatically, reliably, and efficiently managing the complex data and control flow dependencies inherent in LHCb’s real-time processing. Through PyConf’s uniform and comprehensible API, physicists can express selections, debug them, and get their output without manually manipulating the data and control flow.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Pyiron: An Integrated Development Environment for Scientific Workflows</title><link href="https://pyvideo.org/scipy-2022/pyiron-an-integrated-development-environment-for-scientific-workflows.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Jan Janssen</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/pyiron-an-integrated-development-environment-for-scientific-workflows.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The pyiron IDE combines (1) interfaces to scientific simulation codes, written in Fortran, C or C++, with (2) high performance computing job schedulers and (3) efficient data storage. This combination enables scientists to up-scale their simulation protocols for the execution on the world’s largest supercomputers. At the same …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The pyiron IDE combines (1) interfaces to scientific simulation codes, written in Fortran, C or C++, with (2) high performance computing job schedulers and (3) efficient data storage. This combination enables scientists to up-scale their simulation protocols for the execution on the world’s largest supercomputers. At the same time, all this functionality is integrated in the Jupyterlab environment to simplify the rapid-prototyping of simulation protocols and increase their reproducibility. While the pyiron IDE was initially developed for computational materials science, it has since been extended into a general framework for the development of scientific workflows.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Pylira: Deconvolution of Images in the Presence of Poisson Noise</title><link href="https://pyvideo.org/scipy-2022/pylira-deconvolution-of-images-in-the-presence-of-poisson-noise.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Axel Donath</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/pylira-deconvolution-of-images-in-the-presence-of-poisson-noise.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The result of any physical and astronomical imaging observation is degraded by both the limited angular resolution of the camera or telescope and measurement noise. By using deconvolution methods the original signal can be partly restored, however this process is especially challenging in the presence of Poisson noise. We …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The result of any physical and astronomical imaging observation is degraded by both the limited angular resolution of the camera or telescope and measurement noise. By using deconvolution methods the original signal can be partly restored, however this process is especially challenging in the presence of Poisson noise. We compare existing deconvolution algorithms in the Python ecosystem and compare their performance in the low signal to noise regime against improved methods implemented in a dedicated new Python package called Pylira.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>PySCF: The Python Based Simulations of Chemistry Framework</title><link href="https://pyvideo.org/scipy-2022/pyscf-the-python-based-simulations-of-chemistry-framework.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Qiming Sun</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/pyscf-the-python-based-simulations-of-chemistry-framework.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PySCF (www.pyscf.org) is a Python package targeting at the challenge of quantum chemistry simulations. We will demonstrate how to utilize the power of heterogeneous computing, parallel computing, data-driven toolkits with PySCF in quantum chemistry research and simulations.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Python for Global Applications: Law and Diplomacy Students</title><link href="https://pyvideo.org/scipy-2022/python-for-global-applications-law-and-diplomacy-students.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Karin Knudson</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/python-for-global-applications-law-and-diplomacy-students.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Students in fields like international affairs are increasingly seeking to gain proficiency in data science skills with Python. Such students have the potential to connect data science to its societal context in a sophisticated way. For educators working with such students to support this potential, it is essential to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Students in fields like international affairs are increasingly seeking to gain proficiency in data science skills with Python. Such students have the potential to connect data science to its societal context in a sophisticated way. For educators working with such students to support this potential, it is essential to 1) welcome newcomers and center student perspectives and 2) consistently and authentically connect technical content with societal context. We present a framework for teaching Python based introductory data science skills in a highly contextualized and domain flexible environment, based on our experience teaching introductory data science to law and diplomacy students.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Python to Protect Voting Rights</title><link href="https://pyvideo.org/scipy-2022/python-to-protect-voting-rights.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Karin Knudson</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/python-to-protect-voting-rights.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An important question in some voting rights and redistricting litigation in the U.S. is whether and to what degree voting is racially polarized. We developed Python software that brings together a family of statistical methods that pair voting outcomes with demographic information to infer voting patterns. In this …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An important question in some voting rights and redistricting litigation in the U.S. is whether and to what degree voting is racially polarized. We developed Python software that brings together a family of statistical methods that pair voting outcomes with demographic information to infer voting patterns. In this talk we discuss the statistical models and our implementation using scientific Python tools (most notably PyMC3 and ArviZ) and demonstrate how the software has been applied in service of informing redistricting litigation and mapmaking over the past year.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Python vs. the Pandemic: A Case Study in High Stakes Software Development</title><link href="https://pyvideo.org/scipy-2022/python-vs-the-pandemic-a-case-study-in-high-stakes-software-development.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Cliff Kerr</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/python-vs-the-pandemic-a-case-study-in-high-stakes-software-development.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When COVID turned the world upside down in early 2020, health officials asked academic disease modelers like us for urgent guidance. Here we describe how we built Covasim (covasim.org), an agent-based COVID model, by using standard Python libraries like NumPy, Numba, and SciPy along with less common ones …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When COVID turned the world upside down in early 2020, health officials asked academic disease modelers like us for urgent guidance. Here we describe how we built Covasim (covasim.org), an agent-based COVID model, by using standard Python libraries like NumPy, Numba, and SciPy along with less common ones like Sciris (sciris.org). Covasim was created in a few weeks, an order of magnitude faster than the typical model development process, and achieves performance comparable to C++ despite being written in pure Python. It is now used by researchers and policymakers in more than a dozen countries.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Real-Time Digital Signal Processing with SciPy Signal</title><link href="https://pyvideo.org/scipy-2022/real-time-digital-signal-processing-with-scipy-signal.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Luigi Cruz</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/real-time-digital-signal-processing-with-scipy-signal.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Frequency-modulated broadcast stations are ubiquitous around the world. Each station is transmitted side-by-side within a contiguous frequency band. In this talk, we discuss the process of demodulating real-world FM stations in parallel with elemental Numpy and SciPy Signal functions. Focusing on techniques, like vectorization, buffering, and frequency-domain filters, to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Frequency-modulated broadcast stations are ubiquitous around the world. Each station is transmitted side-by-side within a contiguous frequency band. In this talk, we discuss the process of demodulating real-world FM stations in parallel with elemental Numpy and SciPy Signal functions. Focusing on techniques, like vectorization, buffering, and frequency-domain filters, to make the computation more computationally efficient to achieve real-time operation. We also discuss how to apply GPU acceleration with CuPy and cuSignal.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Scientific Python—By Maintainers, for Maintainers</title><link href="https://pyvideo.org/scipy-2022/scientific-python-by-maintainers-for-maintainers.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Pamphil Roy</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/scientific-python-by-maintainers-for-maintainers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The future of Scientific Python is here. Behind the scenes, core scientific projects have started coordinating to better unify the community. Learn more about the goals of this unification effort, opportunities that exist, and, most importantly, how to join the adventure.
- - - - - - - - - - - - - - - - - - - - - - - -
Connect with us
Website:  &lt;a class="reference external" href="https://scientific-python.org/"&gt;https://scientific-python.org/&lt;/a&gt;
Forum …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The future of Scientific Python is here. Behind the scenes, core scientific projects have started coordinating to better unify the community. Learn more about the goals of this unification effort, opportunities that exist, and, most importantly, how to join the adventure.
- - - - - - - - - - - - - - - - - - - - - - - -
Connect with us
Website:  &lt;a class="reference external" href="https://scientific-python.org/"&gt;https://scientific-python.org/&lt;/a&gt;
Forum: &lt;a class="reference external" href="https://discuss.scientific-python.org/"&gt;https://discuss.scientific-python.org/&lt;/a&gt;
Twitter: &lt;a class="reference external" href="https://twitter.com/scientific_py"&gt;https://twitter.com/scientific_py&lt;/a&gt;
YouTube: &lt;a class="reference external" href="https://www.youtube.com/ScientificPython-org"&gt;https://www.youtube.com/ScientificPython-org&lt;/a&gt;
Instagram: &lt;a class="reference external" href="https://www.instagram.com/scientific.python"&gt;https://www.instagram.com/scientific.python&lt;/a&gt;
Facebook: &lt;a class="reference external" href="https://www.facebook.com/scientific.python"&gt;https://www.facebook.com/scientific.python&lt;/a&gt;
TikTok: &lt;a class="reference external" href="https://www.tiktok.com/&amp;#64;scientific.python"&gt;https://www.tiktok.com/&amp;#64;scientific.python&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Scientific Python: From GitHub to TikTok</title><link href="https://pyvideo.org/scipy-2022/scientific-python-from-github-to-tiktok.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Juanita Gomez</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/scientific-python-from-github-to-tiktok.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Scientific Python project aims to better coordinate the ecosystem and grow the community. This talk focuses on our efforts to expand our community by generating a welcoming and friendly environment where people collaborate, build, and improve together. Come hear about our recent community building and outreach efforts, and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Scientific Python project aims to better coordinate the ecosystem and grow the community. This talk focuses on our efforts to expand our community by generating a welcoming and friendly environment where people collaborate, build, and improve together. Come hear about our recent community building and outreach efforts, and learn how you can get involved!&lt;/p&gt;
&lt;p&gt;Connect with us  - - - - - - - - - - - - - - - - - - - - - - - -
Website:  &lt;a class="reference external" href="https://scientific-python.org"&gt;https://scientific-python.org&lt;/a&gt;
Forum: &lt;a class="reference external" href="https://discuss.scientific-python.org"&gt;https://discuss.scientific-python.org&lt;/a&gt;
Twitter: &lt;a class="reference external" href="https://twitter.com/scientific_py"&gt;https://twitter.com/scientific_py&lt;/a&gt;
YouTube: &lt;a class="reference external" href="https://www.youtube.com/ScientificPython-org"&gt;https://www.youtube.com/ScientificPython-org&lt;/a&gt;
Instagram: &lt;a class="reference external" href="https://www.instagram.com/scientific.python"&gt;https://www.instagram.com/scientific.python&lt;/a&gt;
Facebook: &lt;a class="reference external" href="https://www.facebook.com/scientific.python"&gt;https://www.facebook.com/scientific.python&lt;/a&gt;
TikTok: &lt;a class="reference external" href="https://www.tiktok.com/&amp;#64;scientific.python"&gt;https://www.tiktok.com/&amp;#64;scientific.python&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>SciPy Tools Plenary Session</title><link href="https://pyvideo.org/scipy-2022/scipy-tools-plenary-session.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Martha Cryan</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/scipy-tools-plenary-session.html</id><content type="html"></content><category term="SciPy 2022"></category></entry><entry><title>SciPy Tools Plenary Session - Day 1 | SciPy 2022</title><link href="https://pyvideo.org/scipy-2022/scipy-tools-plenary-session-day-1-scipy-2022.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Zac Hatfield-Dodds</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/scipy-tools-plenary-session-day-1-scipy-2022.html</id><content type="html"></content><category term="SciPy 2022"></category></entry><entry><title>SciPy Tools Plenary Session - Day 2 | SciPy 2022</title><link href="https://pyvideo.org/scipy-2022/scipy-tools-plenary-session-day-2-scipy-2022.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Martha Cryan</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/scipy-tools-plenary-session-day-2-scipy-2022.html</id><content type="html"></content><category term="SciPy 2022"></category></entry><entry><title>SciPy Tools Plenary Session - Day 3 | SciPy 2022</title><link href="https://pyvideo.org/scipy-2022/scipy-tools-plenary-session-day-3-scipy-2022.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Wolf Vollprecht</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/scipy-tools-plenary-session-day-3-scipy-2022.html</id><content type="html"></content><category term="SciPy 2022"></category></entry><entry><title>Searching for Anomalous Subsets? All You Need is Scanning</title><link href="https://pyvideo.org/scipy-2022/searching-for-anomalous-subsets-all-you-need-is-scanning.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Tanya Akumu</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/searching-for-anomalous-subsets-all-you-need-is-scanning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Analysts and decision makers seek to understand their data at a subset level as this can reveal insights that are not apparent at global (all records) or local (single record) levels. Unfortunately, there are exponentially-many subsets to consider, and undisciplined, manual inspection covers a tiny fraction of the possibilities …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Analysts and decision makers seek to understand their data at a subset level as this can reveal insights that are not apparent at global (all records) or local (single record) levels. Unfortunately, there are exponentially-many subsets to consider, and undisciplined, manual inspection covers a tiny fraction of the possibilities. This talk will step through multiple use cases of Subset Scanning and use it to efficiently detect vulnerable/privileged subgroups and detect bias in predictive classification models at the subset level. The code is part of the Linux Foundation’s AI Fairness 360 Toolkit &lt;a class="reference external" href="https://ai-fairness-360.org/"&gt;https://ai-fairness-360.org/&lt;/a&gt;.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Sharing scientific tools from script to desktop</title><link href="https://pyvideo.org/scipy-2022/sharing-scientific-tools-from-script-to-desktop.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Jonathan Rocher</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/sharing-scientific-tools-from-script-to-desktop.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The scientific Python ecosystem has been flourishing for more than 2 decades. It is very powerful and many tools can be built leveraging it, but one remaining challenge is how to disseminate this ecosystem deeper into industries and companies to make digital transformation a reality. While jupyter notebooks have …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The scientific Python ecosystem has been flourishing for more than 2 decades. It is very powerful and many tools can be built leveraging it, but one remaining challenge is how to disseminate this ecosystem deeper into industries and companies to make digital transformation a reality. While jupyter notebooks have made it easy to share scripts amongst regular programmers, many non-programmer scientists need a simple graphical user-interface to adopt new tools, technologies and practices.&lt;/p&gt;
&lt;p&gt;Web based front-ends are certainly a way to solve this problem, but the client-server framework typically requires a shift in mental models for programmers, and may require more resources than may be readily available for small teams of scientists in early stages of their innovation process (IT, cloud services, front-end developers, security experts, …). Desktop applications can represent a powerful alternative for small user base situations, proof of concepts, or applications that involve local datasets.&lt;/p&gt;
&lt;p&gt;In this tutorial, we will teach you to migrate your script/notebook to an interactive and scalable GUI application which can be shared with users who are not comfortable with programming or command line tools. You will learn to re-architect your analysis so it can grow seamlessly into a robust, interactive GUI and even to a large analysis platform if need be. We will show the power of combining multiple powerful components of the open source Enthought Tool Suite (ETS) like TraitsUI, Chaco, and Mayavi. It is a mature, flexible and scalable GUI framework, used across academic and companies alike and across many industries and fields. By the end of the tutorial, attendees will all have built a simple interactive browser for pictures (dubbed &amp;quot;&amp;quot;pycasa&amp;quot;&amp;quot;), and learned about the main features, capabilities, and principles of ETS.&lt;/p&gt;
&lt;p&gt;Target audience:
Programmers/developers wanting to share tools/algorithms with colleagues/scientists needing to focus on science rather than code.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/jonathanrocher/ets_tutorial"&gt;https://github.com/jonathanrocher/ets_tutorial&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Spatial and Urban Data Science with PySAL</title><link href="https://pyvideo.org/scipy-2022/spatial-and-urban-data-science-with-pysal.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Elijah Knaap</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/spatial-and-urban-data-science-with-pysal.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fundamentals of Spatial Analysis
+ PySAL Overview
+ Spatial data processing
+ Choropleth mapping and geovisualization
+ Spatial weights
+ Global &amp;amp; Local spatial autocorrelation&lt;/p&gt;
&lt;p&gt;Applied Spatial Analysis: Neighborhoods
+ Clustering/Geodemographic Analysis
+ Segregation Analysis&lt;/p&gt;
&lt;p&gt;Expected level of knowledge: Intermediate&lt;/p&gt;
&lt;p&gt;Goals:
- learn fundamentals of processing geospatial data in Python
- develop skills in geovisualization and exploratory spatial …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fundamentals of Spatial Analysis
+ PySAL Overview
+ Spatial data processing
+ Choropleth mapping and geovisualization
+ Spatial weights
+ Global &amp;amp; Local spatial autocorrelation&lt;/p&gt;
&lt;p&gt;Applied Spatial Analysis: Neighborhoods
+ Clustering/Geodemographic Analysis
+ Segregation Analysis&lt;/p&gt;
&lt;p&gt;Expected level of knowledge: Intermediate&lt;/p&gt;
&lt;p&gt;Goals:
- learn fundamentals of processing geospatial data in Python
- develop skills in geovisualization and exploratory spatial data analysis
- explore applications of spatial data to urban segregation and neighborhood equity&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/sjsrey/pysal-scipy22/blob/main/README.md"&gt;https://github.com/sjsrey/pysal-scipy22/blob/main/README.md&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>The Advanced Scientific Data Format (ASDF): An Update</title><link href="https://pyvideo.org/scipy-2022/the-advanced-scientific-data-format-asdf-an-update.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Perry Greenfield</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/the-advanced-scientific-data-format-asdf-an-update.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We outline the benefits of the ASDF format and the improvements made to its standard and the Python library we have developed to support it. The format is generic to all science and very extensible, with transparent metadata and structure. It currently is being used to support data from …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We outline the benefits of the ASDF format and the improvements made to its standard and the Python library we have developed to support it. The format is generic to all science and very extensible, with transparent metadata and structure. It currently is being used to support data from the James Webb and Nancy Grace Roman Space Telescopes.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>The Geoscience Community Analysis Toolkit</title><link href="https://pyvideo.org/scipy-2022/the-geoscience-community-analysis-toolkit.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Orhan Eroglu</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/the-geoscience-community-analysis-toolkit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Geoscience Community Analysis Toolkit (GeoCAT) team develops and maintains data analysis and visualization tools for the geosciences community in the scientific Python ecosystem. In response to dealing with increasing geoscientific data sizes, GeoCAT prioritizes scalability, ensuring its implementations to be scalable from personal laptops to HPC clusters. Another …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Geoscience Community Analysis Toolkit (GeoCAT) team develops and maintains data analysis and visualization tools for the geosciences community in the scientific Python ecosystem. In response to dealing with increasing geoscientific data sizes, GeoCAT prioritizes scalability, ensuring its implementations to be scalable from personal laptops to HPC clusters. Another major goal of the GeoCAT team is to ensure community involvement throughout the whole project lifecycle, which is realized through an open development mindset by encouraging the users/contributors to get involved in any decision-making.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>The Jupyter Interactive Widget Ecosystem</title><link href="https://pyvideo.org/scipy-2022/the-jupyter-interactive-widget-ecosystem.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Bennani</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/the-jupyter-interactive-widget-ecosystem.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter widgets are powerful tools for building user interfaces with graphical controls such as sliders and text boxes inside a Jupyter notebook. Interactive widgets can also be rendered in Sphinx documentation, nbviewer, and static or interactive web pages. Jupyter widgets are also a framework that makes it easy to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter widgets are powerful tools for building user interfaces with graphical controls such as sliders and text boxes inside a Jupyter notebook. Interactive widgets can also be rendered in Sphinx documentation, nbviewer, and static or interactive web pages. Jupyter widgets are also a framework that makes it easy to build custom GUI controls. Examples of custom widget packages include libraries for interactive 2-D charting, 3-D graphics, mapping, complex controls, and more. This tutorial is accessible to anyone who has prior experience with Python and Jupyter Lab or Jupyter Notebooks.&lt;/p&gt;
&lt;p&gt;This tutorial begins with an overview of the functionalities provided by the base package:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;New features in ipywidgets 8.0&lt;/li&gt;
&lt;li&gt;The collection of interactions available in ipywidgets&lt;/li&gt;
&lt;li&gt;Styling and layouts&lt;/li&gt;
&lt;li&gt;Embedding of widgets in contexts other than the Jupyter Notebook&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will walk the audience through the main functionalities of the core package showing how it can improve their workflow for both the exploratory phase and the presentation of their work.&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/jupyter-widgets/tutorial#installation"&gt;https://github.com/jupyter-widgets/tutorial#installation&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>The Myth of the Normal Curve and What to Do About It</title><link href="https://pyvideo.org/scipy-2022/the-myth-of-the-normal-curve-and-what-to-do-about-it.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Allan Campopiano</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/the-myth-of-the-normal-curve-and-what-to-do-about-it.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;📊 Interactive notebook app:
&lt;a class="reference external" href="https://deepnote.com/workspace/allan-campopiano-4ca00e1d-f4d4-44a2-bcfe-b2a17a031bc6/project/robust-stats-simulator-7c7b8650-9f18-4df2-80be-e84ce201a2ff/%2Fnotebook.ipynb"&gt;https://deepnote.com/workspace/allan-campopiano-4ca00e1d-f4d4-44a2-bcfe-b2a17a031bc6/project/robust-stats-simulator-7c7b8650-9f18-4df2-80be-e84ce201a2ff/%2Fnotebook.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;🐍 Hypothesize (robust statistics library for Python):
&lt;a class="reference external" href="https://github.com/Alcampopiano/hypothesize"&gt;https://github.com/Alcampopiano/hypothesize&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;✍️ Proceedings manuscript:
&lt;a class="reference external" href="https://conference.scipy.org/proceedings/scipy2022/pdfs/allan_campopiano.pdf"&gt;https://conference.scipy.org/proceedings/scipy2022/pdfs/allan_campopiano.pdf&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>The (Surprising) Road to Reproducibility: Automation!</title><link href="https://pyvideo.org/scipy-2022/the-surprising-road-to-reproducibility-automation.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Prabhu Ramchandran</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/the-surprising-road-to-reproducibility-automation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Reproducible research is a great goal and ideal. Unfortunately, it remains an ideal and most numerical research papers in the best regarded journals are non-reproducible. I introduce a simple package called automan which allows my research group to fully automate the generation of all results for our research papers …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Reproducible research is a great goal and ideal. Unfortunately, it remains an ideal and most numerical research papers in the best regarded journals are non-reproducible. I introduce a simple package called automan which allows my research group to fully automate the generation of all results for our research papers. We find that the benefits of this approach are sufficiently motivating that it has become the default way of publishing research in the lab. The added benefit is that this makes our research far easier to reproduce.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Tobac: A Flexible Framework for Detection</title><link href="https://pyvideo.org/scipy-2022/tobac-a-flexible-framework-for-detection.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Robert Jackson</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/tobac-a-flexible-framework-for-detection.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;tobac is a Python package to identify, track and analyze objects in different types of gridded datasets, such as model simulations, radar volume scans, and satellite images. tobac is a modular package that includes different algorithms for feature identification, tracking, and analyses. Analysis and visualization methods provide a convenient …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;tobac is a Python package to identify, track and analyze objects in different types of gridded datasets, such as model simulations, radar volume scans, and satellite images. tobac is a modular package that includes different algorithms for feature identification, tracking, and analyses. Analysis and visualization methods provide a convenient way to use and display the tracking results.&lt;/p&gt;
&lt;p&gt;A critical mass of users, contributors, and maintainers is critical for a successful community code. The project is currently extended (Version 1.5 and 2.0 ) by several contributors to include additional workflows and algorithms using the same structure, syntax, and data formats. Version 2.0 will merge the TINT into tobac, and add more features with Xarray capabilities. tobac will serve as a modular platform for performing Lagrangian analyses and evolve into a sustainable choice for tracking and analyzing atmospheric features.&lt;/p&gt;
&lt;p&gt;Documentation:
&lt;a class="reference external" href="https://tobac.readthedocs.io/en/latest/"&gt;https://tobac.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Source code:
&lt;a class="reference external" href="https://github.com/tobac-project/tobac"&gt;https://github.com/tobac-project/tobac&lt;/a&gt;
&lt;a class="reference external" href="https://github.com/openradar/TINT"&gt;https://github.com/openradar/TINT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tutorials:
&lt;a class="reference external" href="https://github.com/tobac-project/tobac-tutorials"&gt;https://github.com/tobac-project/tobac-tutorials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Roadmap:
&lt;a class="reference external" href="https://github.com/tobac-project/tobac-roadmap"&gt;https://github.com/tobac-project/tobac-roadmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;References:
tobac &lt;a class="reference external" href="https://doi.org/10.5194/gmd-12-4551-2019"&gt;https://doi.org/10.5194/gmd-12-4551-2019&lt;/a&gt;
TINT &lt;a class="reference external" href="https://doi.org/10.1175/jamc-d-20-0119.1"&gt;https://doi.org/10.1175/jamc-d-20-0119.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Connect:
&lt;a class="reference external" href="https://groups.google.com/g/tobac"&gt;https://groups.google.com/g/tobac&lt;/a&gt;
ask for slack channel invitation&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Understanding Missing Data &amp; How to Deal with It</title><link href="https://pyvideo.org/scipy-2022/understanding-missing-data-how-to-deal-with-it.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Haw Minn Lu</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/understanding-missing-data-how-to-deal-with-it.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Missing data has become an increasingly troublesome problem. With the explosion of data, so has the amount of incomplete data. With the proliferation of data science and machine learning techniques. Complete datasets are needed as machine learning algorithms as well as many statistical estimators are not tolerant of missing …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Missing data has become an increasingly troublesome problem. With the explosion of data, so has the amount of incomplete data. With the proliferation of data science and machine learning techniques. Complete datasets are needed as machine learning algorithms as well as many statistical estimators are not tolerant of missing fields. This workshop explores the mechanisms of missingness and techniques to treat or impute missing values so that further tools can use the data.&lt;/p&gt;
&lt;p&gt;This hands on tutorial will demonstrate to the participant the three categories of missingness mechanisms. Furthermore, the participant will be shown how to determine the degree of missing data damage and how to evaluate whether the data set is still viable for the user’s purpose. The participants will apply various techniques for treating missing data including a variety of imputation techniques. By the end of the workshop, the participant should have acquired the skills to assess the degree of missing data in a data set and apply an appropriate imputation technique to  impute missing data.&lt;/p&gt;
&lt;p&gt;This tutorial is intended for participants with an intermediate level understanding of Python and basic understanding of Pandas. The majority of the tutorial uses Jupyter notebooks, so participants should be comfortable in that environment. While not necessary, a rudimentary familiarity with tensorflow and keras is helpful.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/WestHealth/scipy2022-missingness-tutorial/blob/main/README.md"&gt;https://github.com/WestHealth/scipy2022-missingness-tutorial/blob/main/README.md&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Using ASDF in Python</title><link href="https://pyvideo.org/scipy-2022/using-asdf-in-python.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Perry Greenfield</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/using-asdf-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Advanced Scientific Data Format (ASDF) is a new format developed for use with the James Webb and Nancy Grace Roman Space Telescopes. It was developed to overcome many of the limitations of the most common astronomical format called FITS. Nevertheless, it has been designed to be a generic …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Advanced Scientific Data Format (ASDF) is a new format developed for use with the James Webb and Nancy Grace Roman Space Telescopes. It was developed to overcome many of the limitations of the most common astronomical format called FITS. Nevertheless, it has been designed to be a generic format for scientific and engineering data, overcoming many of the limitations of the common scientific formats available currently. It features support for transparent metadata, a flexible and extensible structure of the metadata and data. The data may be represented either in readable or binary form. There is a schema system for ensuring that data files comply with the expected content, both in structure, and permitted values for attributes in the structure. Components of the structure can contain information used by libraries to turn those components into software objects (e.g., instances of Python classes). Extensions can be defined by local usages taking full advantage of the machinery to validate files against the schemas for such extensions. The format can support the serialization of complex mathematical functions, particularly those made out of expressions of simpler functions.&lt;/p&gt;
&lt;p&gt;This tutorial will outline advantages of the format against existing alternatives and briefly outline the details of the format internals, with some illustrative examples of use within the Python library we have developed to use it (the format itself has been designed to be language neutral). This will be followed first by Jupyter notebook-based exercises with existing files to learn how to view the structure, search for content, access data, and modify the content. Next will be lessons and exercises on creating ASDF files from scratch, and how to create new extensions to the format. We will finish by outlining near future improvements.&lt;/p&gt;
&lt;p&gt;The Tutorial is for anyone with needs to store science or engineering data, particularly if they find the existing solutions inadequate. Only knowledge of Python and numpy is required.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/asdf-format/scipy2022tutorial"&gt;https://github.com/asdf-format/scipy2022tutorial&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Using Deep Learning When Class Labels Have A Natural Order</title><link href="https://pyvideo.org/scipy-2022/using-deep-learning-when-class-labels-have-a-natural-order.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Sebastian Raschka</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/using-deep-learning-when-class-labels-have-a-natural-order.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many real-world prediction problems come with ordered labels, for example, customer satisfaction (dissatisfied, neutral, satisfied), disease severity (none, moderate, severe), and many more. Sure, we can use conventional machine learning and deep learning classifier on such problems, but you will see why that's not ideal. Moreover, you will learn …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many real-world prediction problems come with ordered labels, for example, customer satisfaction (dissatisfied, neutral, satisfied), disease severity (none, moderate, severe), and many more. Sure, we can use conventional machine learning and deep learning classifier on such problems, but you will see why that's not ideal. Moreover, you will learn how we can modify any deep neural network classifier such that it takes the ordering information into account -- it requires changing less than five lines of code!&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry></feed>