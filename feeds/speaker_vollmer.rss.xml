<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Vollmer</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 03 Jun 2022 00:00:00 +0000</lastBuildDate><item><title>Efficient computer vision on edge devices: How we guide blind people using Python</title><link>https://pyvideo.org/pycon-italia-2022/efficient-computer-vision-on-edge-devices-how-we-guide-blind-people-using-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Efficient computer vision on edge devices: How we guide blind people
using Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In real-life environments, performance and delay of algorithms matter.
biped is an AI copilot that guides blind people with limited computation
capabilities. In this talk we show how we dropped computation time by a
factor of four relying on profiling, algorithmic design, multi-threading
and Cython. biped aims to bring autonomous driving capabilities to the
human level, to safely guide blind and visually impaired people in the
street. The device acquires 3D images and then detects, tracks and
predicts trajectories of all surrounding elements, before warning the
user via spatial sounds. In the process of working on this project we
realized that for most problems that we encountered there is already an
existing algorithm that roughly fits our requirements. The majority of
the existing solutions though only work well on very powerful machines
with dedicated GPUs. This is especially true for algorithms from the
domain of Computer Vision.&lt;/p&gt;
&lt;p&gt;Making the same algorithm work on computationally limited devices, like
a Raspberry Pi, opens up a new set of interesting and non-trivial
problems. In this talk we want to explore some options to adjust new or
existing algorithms to computationally constrained environments to make
them work in the real world. We want to show some common pitfalls as
well as best practices to optimize algorithms build with Numpy, OpenCV
and Python. Furthermore we want to give a swift overview over system and
algorithmic design decisions as well as what options exist to profile
Python code.&lt;/p&gt;
&lt;p&gt;To make it easier to understand the ideas and concepts and to follow
along we will showcase some examples of our work at biped during the
presentation. By presenting some algorithms of our perception pipeline,
we can showcase some of the key aspects for the modelling and
implementation of algorithms. In particular, we present how we implement
the detection of ground in an image and how we optimized the algorithm
to go from roughly two FPS to nearly real-time. We conclude the talk
with a brief demonstration of the capabilities of our whole perception
pipeline and discuss the performance we achieved by applying the ideas
introduced in this talk.&lt;/p&gt;
&lt;p&gt;Speaker: Vollmer&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vollmer</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/efficient-computer-vision-on-edge-devices-how-we-guide-blind-people-using-python.html</guid><category>PyCon Italia 2022</category><category>cpython</category><category>multi processing</category><category>numpy</category><category>performance</category></item></channel></rss>