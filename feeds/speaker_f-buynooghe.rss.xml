<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 06 Jul 2012 00:00:00 +0000</lastBuildDate><item><title>Using sockets in Python</title><link>https://pyvideo.org/europython-2012/using-sockets-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2012] F Buynooghe - 5 JULY 2012 in &amp;quot;Track Ravioli&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sockets are a fundamental abstraction operating systems provide to
expose networking operations. Initially they look like a fairly straight
forward interface but they hide a surprising amount of complexity. Many
protocol libraries hide sockets away from the developer but it can still
be useful to know the sockets themselves. Other times directly using
sockets is just a better or simpler option. This talk will cover
practical socket programming in python, concentrating on TCP and UDP
over IP (v4 &amp;amp; v6) the basic APIs of address resolution and using sockets
will be covered. Common patterns and pitfalls will be pointed out which
should enable to you to write robust socket code with the help of tools
like StringIO and memoryview. After the basics pythonâ€™s higher level
abstractions like create_connection(), .makefile() and the io module
are covered, explaining when and how these can make life easier. Finally
a quick look at how non-blocking sockets can be used and how libraries
like asyncore/asynchat, twisted, eventlet and gevent all approach
non-blocking I/O in their own way.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">F Buynooghe</dc:creator><pubDate>Fri, 06 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-06:europython-2012/using-sockets-in-python.html</guid></item></channel></rss>