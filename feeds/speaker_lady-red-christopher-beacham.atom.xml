<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_lady-red-christopher-beacham.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-04T17:10:00+00:00</updated><entry><title>A Medieval DSL? Parsing Heraldic Blazons with Python!</title><link href="https://pyvideo.org/pycon-us-2019/a-medieval-dsl-parsing-heraldic-blazons-with-python.html" rel="alternate"></link><published>2019-05-04T17:10:00+00:00</published><updated>2019-05-04T17:10:00+00:00</updated><author><name>Lady Red / Christopher Beacham</name></author><id>tag:pyvideo.org,2019-05-04:pycon-us-2019/a-medieval-dsl-parsing-heraldic-blazons-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Medieval European Nobility was obsessed with Lineage. They created a
Heraldic System to track families, which assigned each family a unique
Coat of Arms.&lt;/p&gt;
&lt;p&gt;Any painting of the Coat of Arms was not the official version. The
official version was a &amp;quot;Blazon&amp;quot; - a precise, terse description in
heraldic language. This heraldic language reads like English, Latin,
French, and XML had a baby. It's a fully recursive language with a
formal grammar, variable assignment, positional arguments, and also,
Lions, Bears, and Pythons.&lt;/p&gt;
&lt;p&gt;Here's an example: &lt;em&gt;Sable, on a fesse or three lions gules&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In this talk, we look at parsing this Medieval &lt;em&gt;Domain Specific
Language&lt;/em&gt; with Python. Along the way, we'll learn a little history, and
the tools for parsing and writing your own DSL.&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>