<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_allan-swanepoel.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-06T00:00:00+00:00</updated><entry><title>Tachyonic: an open source DEVOPS project written in Python for the Networking community</title><link href="https://pyvideo.org/pycon-za-2017/tachyonic-an-open-source-devops-project-written-in-python-for-the-networking-community.html" rel="alternate"></link><published>2017-10-06T00:00:00+00:00</published><updated>2017-10-06T00:00:00+00:00</updated><author><name>Allan Swanepoel</name></author><id>tag:pyvideo.org,2017-10-06:pycon-za-2017/tachyonic-an-open-source-devops-project-written-in-python-for-the-networking-community.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;By: The authors of Tachyonic&lt;/p&gt;
&lt;div class="section" id="intro-10-mins"&gt;
&lt;h4&gt;Intro: (10 mins)&lt;/h4&gt;
&lt;p&gt;Meet Bob. Bob is a Network Administrator at a Service Provider. As a
well seasoned network engineer, he’s been building packet pushing
networks since the days when IP shared bandwidth with IPX, Appletalk,
DECnet etc. He is a well rounded network engineer with robust set of
networking skills. He mastered making, shaping of networks with his tool
set such as Spanning Tree, RAPS, Vlans, VXLAN and MPLS.&lt;/p&gt;
&lt;p&gt;However, Bob’s world is changing. Networks are not what they used be.
Today’s networks are growing more rapidly than ever. This means there
are more devices to manage and also more data produced by these devices
to work with. Doing things manually just don’t scale anmore. Bob has no
other option to turn to automation.&lt;/p&gt;
&lt;p&gt;In the Devops world these issues have been and are being addressed. The
Networking universe is lagging behind. Standard Bodies and Vendors have
started coming up with solutions such as Openflow and NETCONF, but there
are limits.&lt;/p&gt;
&lt;p&gt;Also, many Open source projects (most of them written in Python) and
proprietary solutions have joined the scene, which we will talk about.&lt;/p&gt;
&lt;p&gt;So Bob has options, but… none of them has all the answers. Except for
one!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="introduction-to-tachyonic-open-source-project-10-mins"&gt;
&lt;h4&gt;Introduction to Tachyonic Open Source Project (10 mins)&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why Python? ** (you probably know some of the answer already)&lt;/li&gt;
&lt;li&gt;What is Tachyonic? ** Tachyonic framework is intended to control a
large pool of services such as cloud, networking, dns, email managed
through a single dashboard. The goal here is to have a “single pane
of glass” view. Tachyonic scale is only dependent on the deployment
method used and is designed to be massively horizontally scalable.
It's all open-source and completely customizable.&lt;/li&gt;
&lt;li&gt;Modular - extensible ** All interfaces such as API endpoints and
Dashboard views are fully extensible via plugins/modules. All you
need to do is write the bit of python to meet your need, and plug it
into the Tachyonic framework. ** Components and endpoints can run
on the same Server, or different ones.&lt;/li&gt;
&lt;li&gt;API and UI ** Tachyonic comes with both a RESTful API, as well as a
UI for those who wish to use it. In fact the UI simply uses the API
in the back-end&lt;/li&gt;
&lt;li&gt;Multi-Tenancy ** With Tachyonic you get a framework that us
Multi-Tenant, and Multi-Tiered. That means you can use it to add
customers, and Customers can even be resellers that have their own
customers. Tachyonic takes care of who is allowed access to what.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-you-get-10-mins"&gt;
&lt;h4&gt;What you get (10 mins)&lt;/h4&gt;
&lt;p&gt;We have done all the hard work for you:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;User login and RBAC&lt;/li&gt;
&lt;li&gt;Separate Domains&lt;/li&gt;
&lt;li&gt;UI&lt;/li&gt;
&lt;li&gt;API&lt;/li&gt;
&lt;li&gt;WSGI Framework&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-you-need-to-code"&gt;
&lt;h4&gt;What you need to code&lt;/h4&gt;
&lt;p&gt;You may simply write the python you require, and plug it in! Single
extendable portal, restapi framework does it all!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="use-cases"&gt;
&lt;h4&gt;Use cases&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Build customer portals to provision services in addition to
integrated helpdesk and payment gateways.&lt;/li&gt;
&lt;li&gt;Build Billing and Telemetry services on top of Python using
well-known open-source projects such as Pandas for time series data.&lt;/li&gt;
&lt;li&gt;Automate deployment and monitoring of network devices&lt;/li&gt;
&lt;li&gt;With knowledge of Python and Tachyonic, you may never have to look at
a new system ever again!&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="where-can-i-get-more-info"&gt;
&lt;h4&gt;Where can i get more info?&lt;/h4&gt;
&lt;p&gt;Visit our site: &lt;a class="reference external" href="http://tachyonic.co.za/"&gt;http://tachyonic.co.za/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary></entry></feed>