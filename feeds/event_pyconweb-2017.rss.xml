<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 28 May 2017 00:00:00 +0000</lastBuildDate><item><title>28.05.2017 - Lightning Talks</title><link>https://pyvideo.org/pyconweb-2017/28052017-lightning-talks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/28052017-lightning-talks.html</guid><category>lightning talks</category></item><item><title>7 years of supporting Django, Flask, Pyramid, and friends</title><link>https://pyvideo.org/pyconweb-2017/7-years-of-supporting-django-flask-pyramid-and-friends.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The first version of PyCharm IDE was released in 2010 and since the first release, it featured a special support for Django framework. After that, the support for Flask, Pyramid, and Web2Py wasn't long in coming.
But what does it means to have to support a web framework in a popular IDE? What obstacles are on the way?
In this talk looking at the well-known Python web frameworks and templating languages from the point of view of tools developer, you will learn about their differences and peculiarities, go deep into their implementation and see some very interesting examples of Python usages.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dmitry Trofimov</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/7-years-of-supporting-django-flask-pyramid-and-friends.html</guid><category>pycharm</category></item><item><title>Building a startup with Django</title><link>https://pyvideo.org/pyconweb-2017/building-a-startup-with-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Blueshoe was founded in 2014. Since the beginning of our company we used Python and the web framework Django to build web pages and applications. With respect to technology, there have been many ups and downs in the past 2 ½ years. This is an experience report about building a startup with Django.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Schilonka</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/building-a-startup-with-django.html</guid><category>django</category></item><item><title>From Fun to Business - How Open Source Changed my Life</title><link>https://pyvideo.org/pyconweb-2017/from-fun-to-business-how-open-source-changed-my-life.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk tells the story of how the coala open source project began, how it grew within a year from ~4 to &amp;gt;300 contributors and how we are building businesses with it.&lt;/p&gt;
&lt;p&gt;Through the story you will learn how to use code analysis but also about growing an open source project and building businesses.&lt;/p&gt;
&lt;p&gt;Coala started out as a fun project. Eventually we noticed that people would find it useful. This talk tells the story of how it began, what we did and what we can learn from it. It builds upon the previous talks 'Growing an Open Source Community', 'Open Source Contribtor Automation' and 'coala - Code Analysis for .*' which have received very positive comments by listeners and gives a top level overview over what happened while still being educational in areas touching lifestyle, open source aspects, technical concepts as well as sustainability.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lasse Schuirmann</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/from-fun-to-business-how-open-source-changed-my-life.html</guid><category>coala</category></item><item><title>Google AMP for Django</title><link>https://pyvideo.org/pyconweb-2017/google-amp-for-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What actually is Google AMP, what’s its use case and should I use it? AMP could be a new kind of SEO coming up, even though it isn’t yet. Still it brings some good insights and best practices for web developers. This talk is about the technology, what’s behind it and how you can use it with Django.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Stein</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/google-amp-for-django.html</guid><category>django</category></item><item><title>Infrastructure as Python Code: Deploying your Web Services on Microsoft Azure</title><link>https://pyvideo.org/pyconweb-2017/infrastructure-as-python-code-deploying-your-web-services-on-microsoft-azure.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will give an overview on how to deploy web services on the Azure Cloud with different tools like Azure Resource Manager Templates, the Azure SDK for Python and the Azure module for Ansible and present best practices learned while moving a company into the Azure Cloud.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Hoffmann</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/infrastructure-as-python-code-deploying-your-web-services-on-microsoft-azure.html</guid></item><item><title>Oh, I found a Security Issue</title><link>https://pyvideo.org/pyconweb-2017/oh-i-found-a-security-issue.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A talk together with Florian Apolloner&lt;/p&gt;
&lt;p&gt;Ever thought about what happens when somebody finds a security issue in Django? How does one responsibly disclose the issue? What happens after that? How does the Django team work on it? What happens until a Django security release is published? What comes afterwards?
Also, Django is “reassuringly secure”. Let’s look at the history ;-)&lt;/p&gt;
&lt;p&gt;We'll give an insight on how the Django team handles security issues,
which can serve as a guideline and followed in own projects. We'll
will also review the history of Django's security issues to identify
hotspots and areas to look out for.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/oh-i-found-a-security-issue.html</guid><category>django</category><category>security</category></item><item><title>Plone, a history of Python web</title><link>https://pyvideo.org/pyconweb-2017/plone-a-history-of-python-web.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plone is one of the oldest Python web stories, so why is it still around and how does the future of Zope/Plone look like? A general overview on Plone and Zope with focus on their history and technology base, including a roadmap and the Plone security story.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Loechel</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/plone-a-history-of-python-web.html</guid><category>plone</category></item><item><title>PloneIntranet - Intranets must be simply social!</title><link>https://pyvideo.org/pyconweb-2017/ploneintranet-intranets-must-be-simply-social.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Intranets have always been the ultimate challenge for an organisation, be it from a technical point of view, from the information design, productivity wise or socially. People who love their intranet are scarce. This has to change, the focus must be on people, content and ease of use. Ploneintranet is an effort by 12 Plone companies from Europe and the US, addressing the issue that an intranet solution must be more than just the sum of its add-ons. The talk aims to give an overview on the background of PloneIntranet, where it can be used, its philosophy and how to get involved.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Pilz</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/ploneintranet-intranets-must-be-simply-social.html</guid><category>plone</category></item><item><title>Programming the Web of Things with Python and MicroPython</title><link>https://pyvideo.org/pyconweb-2017/programming-the-web-of-things-with-python-and-micropython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session you will get a gentle introduction to the ever-expanding world of small programmable devices: learn to use tiny microcontrollers to connect to sensors and talk to APIs - all using MicroPython, a subset of Python 3 for use in constrained environments.&lt;/p&gt;
&lt;p&gt;You will be introduced to the basics of physical computing and the joys (and some of the pains) of writing Python code for devices that weigh less than a piece of chewing gum but still have the power to communicate with web APIs, act as wireless access points, even host a small web server, and more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hardy Erlinger</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/programming-the-web-of-things-with-python-and-micropython.html</guid><category>iot</category><category>micropython</category></item><item><title>Rethinking the Python Web Framework</title><link>https://pyvideo.org/pyconweb-2017/rethinking-the-python-web-framework.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What if you could rethink the Python web framework? What would it be like?&lt;/p&gt;
&lt;p&gt;A few years ago, I had the opportunity to do this. The result is a web framework called Morepath. It doesn't look wildly different on the outside. I'm going to demonstrate a few ways in which it is different.&lt;/p&gt;
&lt;p&gt;If you're a user of a web framework, I want to show you use cases you may not even realize you have.&amp;nbsp;If you're a developer of a web framework, I want to offer you ideas you may not have considered.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martijn Faassen</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/rethinking-the-python-web-framework.html</guid><category>keynote</category><category>morepath</category></item><item><title>Why can't Python be as easy to deploy as PHP?</title><link>https://pyvideo.org/pyconweb-2017/why-cant-python-be-as-easy-to-deploy-as-php.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;10 years, 5 deployments and a lesson: why can't Python be as easy to deploy as PHP?&lt;/p&gt;
&lt;p&gt;They are experiences that have been replayed hundreds of thousands of times by other novice programmers, and there are some valuable lessons to be learned for us in the Python community: 'our' language may be more elegant, secure and powerful, but there's a reason why, all the same, there are more PHP programmers and more PHP on the web.&lt;/p&gt;
&lt;p&gt;It's a mistake to make PHP the butt of jokes, or worse still, to think scornfully of the legions of not-very-expert PHP programmers who have found themselves empowered by things like WordPress. They don’t deserve it, for a start, but it's harmful for us too, because it hides from us the things that have rightfully brought success to PHP and its users.&lt;/p&gt;
&lt;p&gt;I'll highlight some of the ways in which the Python community has taken note of these lessons, and recent developments that might help Python catch up with PHP's legendary successes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniele Procida</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/why-cant-python-be-as-easy-to-deploy-as-php.html</guid><category>php</category></item><item><title>27.05.2017 - Lightning Talks</title><link>https://pyvideo.org/pyconweb-2017/27052017-lightning-talks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/27052017-lightning-talks.html</guid><category>lightning talks</category></item><item><title>Because Web API Testing Should Be Easy</title><link>https://pyvideo.org/pyconweb-2017/because-web-api-testing-should-be-easy.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vilibald Wanča</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/because-web-api-testing-should-be-easy.html</guid></item><item><title>Come work with us! Get to know companies looking for Python developers</title><link>https://pyvideo.org/pyconweb-2017/come-work-with-us-get-to-know-companies-looking-for-python-developers.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/come-work-with-us-get-to-know-companies-looking-for-python-developers.html</guid></item><item><title>Conference opening</title><link>https://pyvideo.org/pyconweb-2017/conference-opening.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Caceres</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/conference-opening.html</guid><category>opening</category></item><item><title>Django and the new frontend era</title><link>https://pyvideo.org/pyconweb-2017/django-and-the-new-frontend-era.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;React, Ember, Vue - these are just some of the big beasts of the frontend world. How do they fit in a Django world? Is Django still suited for how we are now developing web apps?&lt;/p&gt;
&lt;p&gt;I work as Full stack developer so I often jump from Django to frontend frameworks like React and Vue JS. I’d like to share the way we structure Django apps in order to work well with frontend frameworks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Arminio</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/django-and-the-new-frontend-era.html</guid><category>django</category></item><item><title>Django-CMS Cascade plugin system</title><link>https://pyvideo.org/pyconweb-2017/django-cms-cascade-plugin-system.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django-CMS-Cascade, is a feature rich plugin system for Django-CMS, which is easy to extend and without adding new database models.
In this presentation I will show how to integrate this plugin system into a running Django-CMS installation and show how one can quickly create impressive websites.Then I will show how one can create his own plugins with a few lines of Python and HTML code. Furthermore I will show how to extend all plugins with common functionality, such as shared attributes, inline styles and classes, private rendering templates and content versioning.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Rief</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/django-cms-cascade-plugin-system.html</guid><category>django-cms-cascade</category></item><item><title>Efficient Python</title><link>https://pyvideo.org/pyconweb-2017/efficient-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk will cover advanced Python modules that can be used to have a fast and memory efficient code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Saloua Litayem</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/efficient-python.html</guid></item><item><title>Getting started with tornado with Sharknado</title><link>https://pyvideo.org/pyconweb-2017/getting-started-with-tornado-with-sharknado.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we'll walk through the basics of asynchronous web server programming using tornado. After reviewing the basics of async servers, step by step we'll build an application that can asynchronously gather quotes from one of the best movies of all time.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jordi Soucheiron</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/getting-started-with-tornado-with-sharknado.html</guid><category>sharknado</category></item><item><title>Real-Time Data with Django</title><link>https://pyvideo.org/pyconweb-2017/real-time-data-with-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For several years, Rachel Willmer has been searching for the perfect real-time data solution for her Django-based website, Luzme.&lt;/p&gt;
&lt;p&gt;The two most recent candidates under the microscope are Google Firebase (a paid service) and the new Django Channels (free and open source).&lt;/p&gt;
&lt;p&gt;Rachel shares her experiences of both and compares the relative advantages and disadvantages.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rachel Willmer</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/real-time-data-with-django.html</guid><category>keynote</category><category>django</category></item><item><title>Reproducible development environments with Nix</title><link>https://pyvideo.org/pyconweb-2017/reproducible-development-environments-with-nix.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Providing build and development environments for Python based projects is typically not without challenges. This talk presents how Nix - The Purely Functional Package Manager can be used to provide reproducible environments for development and deployment of Python based Web projects.&lt;/p&gt;
&lt;p&gt;Today's typical Web projects come with a bunch of challenges which make it a non-trivial task to provide reproducible development and build environments. Python based Web projects are no exception to this.&lt;/p&gt;
&lt;p&gt;Some of the common challenges:&lt;/p&gt;
&lt;p&gt;Web projects are rarely Python-only. Typically artifacts from different ecosystems are needed, often with their own tool-chain, e.g. npm, bower, grunt or webpack from the JavaScript world. These tools are needed inside of the build environment and often also inside of a developer's work environment. System dependencies are often managed in a system specific way, usually specific to the package management tool of the operating system. Development environments diverge over time if parts are managed manually. This leads to hard to diagnose issues due to subtle differences between different developer's environments. Development and production environments are hard to keep in sync which makes it hard to reproduce issues from a production environment. The talk introduces the high level concepts of Nix and how it can be applied for the case of Python based Web applications to mitigate the aforementioned challenges. It concludes with lessons learned from following this approach in various Python based web projects during the last years.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Johannes Bornhold</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/reproducible-development-environments-with-nix.html</guid><category>nix</category></item><item><title>RestrictedPython - or how to port to Python 3 without porting dependencies</title><link>https://pyvideo.org/pyconweb-2017/restrictedpython-or-how-to-port-to-python-3-without-porting-dependencies.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You want to port a python package or application to Python 3 but one of its dependencies will never run on Python 3? This was the case for RestrictedPython – see which approaches could be used to solve this problem and which one we chose.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Howitz</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/restrictedpython-or-how-to-port-to-python-3-without-porting-dependencies.html</guid><category>restrictedpython</category></item><item><title>Scientific Python Tools for Non-Scientific Uses</title><link>https://pyvideo.org/pyconweb-2017/scientific-python-tools-for-non-scientific-uses.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is an amazing programming language that is used by many different
communities. Dev-ops, web programmers, sys admins, database programmers
as well as scientists and engineers from many different fields use it daily.
But often members of one sub-community might not be familiar with the
libraries and tools another sub-community uses. Even these libraries are
originally designed for total different purposes, they can be useful for
unintended usages.&lt;/p&gt;
&lt;p&gt;This talk introduces two very use popular scientific Python tools, the Jupyter
Notebook for fast, exploratory Python programming and pandas, the amazingly
useful data analyses library. Both libraries could be called killer apps in
their fields. Come and see what they can offer and how they can simplify your
daily web-programming tasks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Müller</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/scientific-python-tools-for-non-scientific-uses.html</guid><category>jupyter notebook</category></item><item><title>Serverless, what is it good for?</title><link>https://pyvideo.org/pyconweb-2017/serverless-what-is-it-good-for.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's 2017 and 'serverless' is all the rage. What exactly is it and how can we use it? Will it save us money? Will it allow us to scale? When should we use it? How do we use it? In this talk I'll outline the who, what, when, where, why and how of serverless and when to use it to save money and time.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">J. Randall Hunt</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/serverless-what-is-it-good-for.html</guid><category>serverless</category></item><item><title>This is PyConWeb</title><link>https://pyvideo.org/pyconweb-2017/this-is-pyconweb.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The aftermovie of PyConWeb 2017 conference in Munich.&lt;/p&gt;
&lt;p&gt;Sign up on &lt;a class="reference external" href="https://pyconweb.com"&gt;https://pyconweb.com&lt;/a&gt; and be a part of it in 2018!&lt;/p&gt;
&lt;p&gt;Follow us: &lt;a class="reference external" href="http://twitter.com/pyconweb"&gt;http://twitter.com/pyconweb&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/this-is-pyconweb.html</guid><category>pyconweb</category></item><item><title>To index or not, that's not the question</title><link>https://pyvideo.org/pyconweb-2017/to-index-or-not-thats-not-the-question.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Database indexes play a key role in every database query. Hence, it's not a question that you should be able to define them through Django. While you're already kind of able to do that with &lt;cite&gt;dbindex=true&lt;/cite&gt; and &lt;cite&gt;index_together&lt;/cite&gt;, these options are rather limiting. Django 1.11 comes with a new feature to allow you to express your index requirements much more granular.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/to-index-or-not-thats-not-the-question.html</guid><category>django</category></item><item><title>TurboGears2 the Framework that scales with you</title><link>https://pyvideo.org/pyconweb-2017/turbogears2-the-framework-that-scales-with-you.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TurboGears is one of the longest running web frameworks for Python, featured on TalkPythonToMe and with configuration modes ranging from full-stack to microframework.&lt;/p&gt;
&lt;p&gt;Used by big projects like SourceForge.net and RedHat, TG2 might be the right balance between Django and Flask you were looking for.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alessandro Molina</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/turbogears2-the-framework-that-scales-with-you.html</guid><category>turbogears</category></item><item><title>URLs: In Plain View</title><link>https://pyvideo.org/pyconweb-2017/urls-in-plain-view.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The web wouldn’t be the web without URLs. Unlike most web technology, URLs are not designed primarily to connect computers to each other. URLs connect us, people, to our software. This is an approachable engineering introduction to the often-overlooked URL, its evolution, and its many moving parts.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mahmoud Hashemi</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/urls-in-plain-view.html</guid></item></channel></rss>