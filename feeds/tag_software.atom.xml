<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_software.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-10-16T00:00:00+00:00</updated><entry><title>PyGotham 2011: Art, Cultural Concern, and Computer Code</title><link href="https://pyvideo.org/pygotham-2011/pygotham-2011--art--cultural-concern--and-compute.html" rel="alternate"></link><published>2011-09-16T00:00:00+00:00</published><updated>2011-09-16T00:00:00+00:00</updated><author><name>Annina Rüst</name></author><id>tag:pyvideo.org,2011-09-16:pygotham-2011/pygotham-2011--art--cultural-concern--and-compute.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;I will talk about software as art and software and politics using some
of my own art+tech projects. This will be followed by an audience
participation segment.&lt;/p&gt;
</summary><category term="art"></category><category term="pygotham"></category><category term="pygotham2011"></category><category term="software"></category></entry><entry><title>SCons - Software bauen in Python</title><link href="https://pyvideo.org/pycon-de-2013/scons-software-bauen-in-python.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Dirk Bächle</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/scons-software-bauen-in-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Dieser Vortrag stellt SCons (www.scons.org) und seine Benutzung vor. Er
richtet sich in erster Linie an Softwareentwickler oder Betreuer von
großen Buildumgebungen, die nach Alternativen zu herkömmlichen Tools,
wie CMake oder autotools, suchen.&lt;/p&gt;
&lt;p&gt;SCons ist ein Buildsystem das vollständig in Python programmiert wird.
Die Eingabedateien zur Definition der einzelnen Buildschritte werden
ebenfalls als Pythonskripte ausgeführt. Durch diese Kombination einer
DSL (Domain Specific Language) mit der Allzwecksprache Python, lassen
sich auch komplizierte Softwareprojekte einfach spezifizieren und bauen.&lt;/p&gt;
&lt;p&gt;Das Framework das sich hinter dem Startskript verbirgt, ist auf einfache
Erweiterbarkeit und hohe Flexibilität ausgelegt.&lt;/p&gt;
&lt;p&gt;Während des Vortrags soll gezeigt werden wie man ein Projekt richtig
anfängt und make-typische Denkweisen vermeidet. Die Vorteile von SCons
und Standardfragen, z.B. zur Erweiterung des Systems für neue
Buildschritte, werden diskutiert.&lt;/p&gt;
&lt;p&gt;Am Ende soll der Zuhörer einen Eindruck von der Arbeitsweise des
Programms erhalten haben, und entscheiden können ob sich der Einsatz von
SCons für sein Softwareprojekt lohnen würde.&lt;/p&gt;
</summary><category term="building"></category><category term="build system"></category><category term="framework"></category><category term="programming"></category><category term="software"></category></entry></feed>