<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 22 Apr 2018 00:00:00 +0000</lastBuildDate><item><title>Continuous Delivery starts at your Development Environment</title><link>https://pyvideo.org/pycon-italia-2018/continuous-delivery-starts-at-your-development-environment.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Continuous Delivery is the automation of our deployment and QA, isn’t
it? The industrialized software production chain that solves all our
problems. Well, kind of. It’s more than that. Because: You still have
pain when …&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You bring new developers on board (e.g. for installing Docker and
friends, IDEs and command line tools).&lt;/li&gt;
&lt;li&gt;Your development machine behaves weird or needs an upgrade. (Can you
simply re-install it and continue working without losing a day or a
week of productivity?)&lt;/li&gt;
&lt;li&gt;You need to explain to your colleagues, or even convince them, how to
configure which of their tools?&lt;/li&gt;
&lt;li&gt;Everyone turns to you (or your admin wizard) when there are troubles
to get some tools or projects running.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talks explains how to bootstrap a super-efficient startup, SMB, or
just any development team that needs a development infrastructure.
You’ll see a demo of The Foreman, Puppet, Ansible and optionally FreeIPA
and virtualization technology, which gets you from zero to 100 in just a
few hours. This talk explains how you do infrastructure like software
development. Everything under control. Everything under version control.&lt;/p&gt;
&lt;p&gt;Come join the show, and take home the recipe that tells you how to step
up the next level of Continuous Delivery! - If you’re a beginner fear
not: this talk starts with an introduction to CI/CD and brings you up to
speed quickly.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 22 April&lt;/strong&gt; at 15:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Bittner</dc:creator><pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-22:pycon-italia-2018/continuous-delivery-starts-at-your-development-environment.html</guid><category>infrastructure</category><category>continuous-delivery</category><category>agile</category><category>ansible</category><category>puppet</category><category>free-software</category><category>FreeIPA</category><category>infrastructure-as-code</category></item><item><title>Testing Thousands of Python Projects Every Day</title><link>https://pyvideo.org/pycon-italia-2018/testing-thousands-of-python-projects-every-day.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The OpenStack Infra team runs one of the world’s largest Open Source
CI/CD systems in service of OpenStack’s early decision to mandate that
all merges only be performed by automation if and only if all tests
pass. Accomplishing this at scale involves a combination of software and
policy.&lt;/p&gt;
&lt;p&gt;Zuul is the software engine developed to handle this. It is, of course,
written in Python. (Python3 to be exact!)&lt;/p&gt;
&lt;p&gt;Zuul is not OpenStack specific. With the rise of microservices and
kubernetes, the number of multi-repo projects is increasing, as is the
need for CI systems that understand them. The most recent version of
Zuul has been reworked to make it easy for other people, communities or
organizations to harness its power regardless of any relationship with
OpenStack.&lt;/p&gt;
&lt;p&gt;We’ll talk about the things that make Zuul special - multi-repository
dependencies, optimistic branch prediction and deep Ansible integration.
And we’ll walk through how to get started with a private or a public
Zuul.&lt;/p&gt;
&lt;p&gt;There are also the parts of the equation that Zuul doesn’t cover.
Handling thousands of different python projects requires some specific
choices and tradeoffs, so we’ll discuss how we structure the projects,
dependency management and release engineering.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 09:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Monty Taylor</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:pycon-italia-2018/testing-thousands-of-python-projects-every-day.html</guid><category>OpenStack</category><category>ansible</category><category>zuul</category><category>python3</category></item><item><title>Taking care of PostgreSQL with Ansible</title><link>https://pyvideo.org/pycon-italia-2018/taking-care-of-postgresql-with-ansible.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ansible is a powerful automation tool written in Python. With its
modules already built for PostgreSQL, we can easily manage the most
advanced open source database, making sure the configuration is exact in
every detail and repeatable as many times as it is needed.&lt;/p&gt;
&lt;p&gt;In this talk we will understand how Ansible works, see some of its main
modules for system/cloud administration, and learn how it can be used to
orchestrate PostgreSQL deployments, managing all parts of the process at
ease.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;venerdì 20 aprile&lt;/strong&gt; at 16:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rubens Souza</dc:creator><pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-20:pycon-italia-2018/taking-care-of-postgresql-with-ansible.html</guid><category>ansible</category><category>postgresql</category></item><item><title>No Compromise: Use Ansible properly or stick to your scripts</title><link>https://pyvideo.org/pycon-de-2017/no-compromise-use-ansible-properly-or-stick-to-your-scripts.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Bjoern Meier&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bjoern is a software engineer at Blue Yonder GmbH since 2016 after graduating in Computer Science. More correctly you could say he is a DevOps engineer at Blue Yonder where he is developing and operating - among other things - the services for the external data interfaces, preprocessing and data storage to enable the data scientists to run their prediction models. He loves the versatility and ecosystem of python to write e.g. production web apps, data analysis tools or operational scripts. If there was more free time he would like to spent it to dive deeper into functional programming languages like elixir to have a different view on things.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What you do in Ansible should be clean an simple. What we did was not. So I will show what we did wrong but also what we have changed or still have to, to make our life easier again. But I will also show how we progressively utilize Ansible to deploy our Data Science infrastructure.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ansible should help you to orchestrate your systems, automate the deployments and set up well defined infrastructures. But if you want to make something work quickly in Ansible the chances are high that you fall back to shell/command tasks, the mother of all evil. Those tasks usually prevent you from running dry runs where you would see the upcoming changes and you prevent Ansible to shine. So, we went blindly into every deployment and hoped the best. But we wanted to see what would change, we wanted to make ansible --check work again and therefore in this talk I will show you what we did wrong and what we changed to get there.&lt;/p&gt;
&lt;p&gt;More precisely, I will show what you can do to replace the nasty shell tasks with proper modules, plugins and filters, how they are developed, tested and included in your project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Björn Meier</dc:creator><pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-25:pycon-de-2017/no-compromise-use-ansible-properly-or-stick-to-your-scripts.html</guid><category>infrasturcture</category><category>business</category><category>devops</category><category>ansible</category></item><item><title>Ansible roles, private git repos and the Ansible Galaxy tool</title><link>https://pyvideo.org/pycon-italia-2017/ansible-roles-private-git-repos-and-the-ansible-galaxy-tool.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ansible is a python tool that automates the management of an IT
infrastructure. It is easy to learn but rushing to use it with a limited
knowledge of its best practices leads to not reusable code.&lt;/p&gt;
&lt;p&gt;Creating reusable Ansible roles is a strongly encouraged practice, in
fact there is a tool designed just for this purpose: Ansible Galaxy. It
comes bundled with Ansible and its purpose is to download roles from the
Galaxy hub and other sources.&lt;/p&gt;
&lt;p&gt;This talk wants to show how we manage our Ansible roles and their
dependencies in a consistent way by means of Ansible Galaxy. It will
also offer an overview of how Ansible roles can be tested.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">serena lorenzini</dc:creator><pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-08:pycon-italia-2017/ansible-roles-private-git-repos-and-the-ansible-galaxy-tool.html</guid><category>config-ninja</category><category>continuous-integration</category><category>command-line</category><category>gitlab</category><category>ansible</category><category>best-practices</category></item><item><title>Taking care of PostgreSQL with Ansible</title><link>https://pyvideo.org/pycon-italia-2017/taking-care-of-postgresql-with-ansible.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Ansible&lt;/strong&gt; is a powerful automation tool written in &lt;strong&gt;Python&lt;/strong&gt;. With
its modules already built for &lt;strong&gt;PostgreSQL&lt;/strong&gt;, we can easily manage the
most advanced open source database, making sure the configuration is
exact in every detail and repeatable as many times as it is needed. In
this talk we will understand how &lt;strong&gt;Ansible&lt;/strong&gt; works, see some of its main
modules for system/cloud administration, and learn how it can be used to
orchestrate &lt;strong&gt;PostgreSQL&lt;/strong&gt; deployments, managing all parts of the
process at ease. A &lt;strong&gt;PostgreSQL&lt;/strong&gt; test environment configuration, using
&lt;strong&gt;Ansible&lt;/strong&gt; and &lt;strong&gt;Vagrant&lt;/strong&gt;, will be shown as an example.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rubens Souza</dc:creator><pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-08:pycon-italia-2017/taking-care-of-postgresql-with-ansible.html</guid><category>postgresql</category><category>database</category><category>devops</category><category>automation</category><category>ansible</category></item><item><title>Deploy automatizzato di un progetto Python 3/Django con Ansible</title><link>https://pyvideo.org/pycon-italia-2017/deploy-automatizzato-di-un-progetto-python-3django-con-ansible.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La mia applicazione è pronta e funziona senza problemi sulla mia
macchina con il server di sviluppo, ma non ho chiaro come portarla in un
ambiente di produzione. Ci sono parecchi servizi che permettono il
deploy con un solo click, adatti soprattutto a semplici siti, ma essi
non sono pienamente configurabili e nascondono il modo in cui il server
è effettivamente organizzato. Anche se molti usano ingegnose soluzioni
PaaS, vale ancora la pena capire come costruire da zero un ambiente di
produzione con Linux, Python 3, Django e uWSGI. Nel talk questo classico
stack verrà brevemente introdotto e si mostrerà poi come automatizzare
la configurazione e la procedura di deploy con un &lt;a class="reference external" href="https://github.com/marco-santamaria/django-%20ansible-deploy"&gt;playbook
Ansible&lt;/a&gt;
che verrà messo a disposizione. Una particolare enfasi verrà data
all’uso di variabili d’ambiente per la configurazione del progetto
seguendo l’approccio delle twelve-factor-app. Inoltre verranno spiegati
i concetti più importanti di Ansible (playbook, ruoli, template, moduli,
inventari).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Santamaria</dc:creator><pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-07:pycon-italia-2017/deploy-automatizzato-di-un-progetto-python-3django-con-ansible.html</guid><category>deploy</category><category>devops</category><category>automation</category><category>nginx</category><category>ansible</category><category>best-practices</category><category>django</category><category>uwsgi</category></item><item><title>Ansible &amp; Terraform for Django: Move Faster, break fewer things</title><link>https://pyvideo.org/pycon-se-2017/ansible-terraform-for-django-move-faster-break-fewer-things.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Intro level talk about using Ansible and Terraform together. These tools allow you to provision cloud resources such as Virtual Servers or CDN and to set up your servers with whatever software is needed. This allows to treat infrastructure as code, a cornerstone of DevOps.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ezequiel Golub</dc:creator><pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-06:pycon-se-2017/ansible-terraform-for-django-move-faster-break-fewer-things.html</guid><category>ansible</category><category>terraform</category><category>django</category></item><item><title>Ansible</title><link>https://pyvideo.org/pycon-es-2017/ansible.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ansible es un sistema de gestión de la configuración del software desarrollado en python que permite automatizar la configuración e instalación de software en ordenadores. Con este sistema es posible, a traves de ssh, instalar, configurar, cambiar ficheros, reiniciar servicios. Y al estar desarrollado en python permite a los programadores extenderlo y embeberlo con relativa facilidad.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Roberto Majadas</dc:creator><pubDate>Sat, 23 Sep 2017 15:00:00 +0200</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-es-2017/ansible.html</guid><category>ansible</category></item><item><title>Ansible modules for oVirt</title><link>https://pyvideo.org/pycon-israel-2017/ansible-modules-for-ovirt.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The oVirt project contains Python, Java and Ruby SDKs, which are auto-generated from the API specification and they are using imperative concept. On the other hand Ansible modules have to be declarative and idempotent. In this talk we will present issues we've had during the development, the lessons we've learned, and how we've made Ansible modules declarative using imperative SDK. The development of Ansible modules is done in Python, so the Python developers will gain knowledge on how Ansible modules can be developed, and what things should be considered when writing Ansible modules.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ondřej Macháček</dc:creator><pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-13:pycon-israel-2017/ansible-modules-for-ovirt.html</guid><category>ansible</category><category>ovirt</category></item><item><title>Ansible 101</title><link>https://pyvideo.org/pydx-2016/ansible-101.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyDX 2016 talk by Josh Berkus&lt;/p&gt;
&lt;p&gt;Wanna use an automation platform written in Python? Of course you do. And I say &amp;quot;automation platform&amp;quot; rather than &amp;quot;configuration management&amp;quot; because Ansible isn't just about configuration.&lt;/p&gt;
&lt;p&gt;This all-demo, no-slide talk will teach you by example how to get started with Ansible automating all the things you need automated.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Berkus</dc:creator><pubDate>Fri, 30 Dec 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-12-30:pydx-2016/ansible-101.html</guid><category>ansible</category></item><item><title>R0 DAY1-01 Openstack Swift Benchmark with Ansible - Charles Hsu (PyCon APAC 2015)</title><link>https://pyvideo.org/pycon-apac-2015/r0-day1-01-openstack-swift-benchmark-with-ansible.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Charles Hsu&lt;/p&gt;
&lt;blockquote&gt;
Using Ansible for OpenStack Swift benchmark&lt;/blockquote&gt;
&lt;p&gt;Outline is here, may be modified in a future.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduct Openstack Swift&lt;ul&gt;
&lt;li&gt;What's that?&lt;/li&gt;
&lt;li&gt;Single Node Swift (SAIO Swift) (&lt;a class="reference external" href="http://docs.openstack.org/developer/swift/development_saio.html"&gt;http://docs.openstack.org/developer/swift/development_saio.html&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Swift Cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Introduce Ansible&lt;ul&gt;
&lt;li&gt;Why&lt;/li&gt;
&lt;li&gt;Other tools (Fabric/Slatstack/Chef)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What's problems and pains&lt;ul&gt;
&lt;li&gt;Configure multiple swift nodes (swift proxy/object/container servers) without extra packages&lt;/li&gt;
&lt;li&gt;Deploy/manage multiple benchmark nodes&lt;/li&gt;
&lt;li&gt;Sweep all data in Swift nodes (Dev Cluster)&lt;/li&gt;
&lt;li&gt;Run a benchmark test&lt;/li&gt;
&lt;li&gt;Collecting benchmark result from benchmark nodes and errors from swift nodes&lt;/li&gt;
&lt;li&gt;Repeat it again, again and again&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use Ansible&lt;ul&gt;
&lt;li&gt;Define a cluster and nodes&lt;/li&gt;
&lt;li&gt;Deploy benchmark nodes&lt;/li&gt;
&lt;li&gt;Collecting and aggregate result form benchmark node&lt;/li&gt;
&lt;li&gt;Repeat&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What's next?&lt;ul&gt;
&lt;li&gt;Move it to Docker?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;About the speaker:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Twitter &amp;#64;thecharz&lt;/li&gt;
&lt;li&gt;組織/公司 SwiftStack&lt;/li&gt;
&lt;li&gt;頭銜 Techical Support Enginner&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tw.pycon.org/2015apac/zh/program/12"&gt;https://tw.pycon.org/2015apac/zh/program/12&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Charles Hsu</dc:creator><pubDate>Mon, 24 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-24:pycon-apac-2015/r0-day1-01-openstack-swift-benchmark-with-ansible.html</guid><category>ansible</category><category>openStack</category><category>swift</category></item><item><title>Ansible beyond YAML</title><link>https://pyvideo.org/pycon-us-2015/ansible-beyond-yaml.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ansible is a configuration management tool whose primary mode of
operation involve using YAML to describe deployments and operations.
However, it can do much more and be extended using python, which is what
we will explore in this talk. Among others, we will see the plugins
system for various part of the tool and how to reuse Ansible in a
script.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Scherer</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-11:pycon-us-2015/ansible-beyond-yaml.html</guid><category>ansible</category><category>yaml</category></item></channel></rss>