<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_camelot.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-07-02T00:00:00+00:00</updated><entry><title>The next iteration of your GUI</title><link href="https://pyvideo.org/europython-2013/the-next-iteration-of-your-gui.html" rel="alternate"></link><published>2013-07-02T00:00:00+00:00</published><updated>2013-07-02T00:00:00+00:00</updated><author><name>Erik Janssens</name></author><id>tag:pyvideo.org,2013-07-02:europython-2013/the-next-iteration-of-your-gui.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will show how GUI applications written as a series of
generators are fun to write, responsive, user friendly and easy to unit
test. We dive into the details of language functions of PEP 342
(Coroutines via Enhanced Generators) and PEP 380 (Syntax for Delegating
to a Subgenerator). With this knowledge refreshed, we discuss why and
how these functions can be integrated in an event loop. Then we
demonstrate how we used these functions to rewrite all the asynchronous
operations of the Camelot framework and avoided series of callbacks
transforming the code from complicated to beatiful.&lt;/p&gt;
</summary><category term="camelot"></category><category term="gui"></category><category term="coroutine"></category></entry></feed>