<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_sylvain-corlay.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-09-05T00:00:00+00:00</updated><entry><title>Data sciences in a polyglot world with xtensor and xframe</title><link href="https://pyvideo.org/euroscipy-2019/data-sciences-in-a-polyglot-world-with-xtensor-and-xframe.html" rel="alternate"></link><published>2019-09-05T00:00:00+00:00</published><updated>2019-09-05T00:00:00+00:00</updated><author><name>Sylvain Corlay</name></author><id>tag:pyvideo.org,2019-09-05:euroscipy-2019/data-sciences-in-a-polyglot-world-with-xtensor-and-xframe.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, we demonstrate how xtensor can be used to
implement numerical methods very efficiently in C++, with a high-level
numpy-style API, and expose it to Python, Julia, and R for free. The
resulting native extension operates in-place on Python, Julia, and R
infrastructures without overhead.&lt;/p&gt;
&lt;p&gt;We then dive into the xframe package, a dataframe project for the C++
programming language, exposing an API very similar to Python's xarray.&lt;/p&gt;
&lt;p&gt;Features of xtensor and xframe will be demonstrated using the xeus-cling
jupyter kernel, enabling interactive use of the C++ programming language
in the notebook.&lt;/p&gt;
&lt;p&gt;The main scientific computing programming languages have different
models the main data structures of data science such as dataframes and
n-d arrays. In this talk, we present our approach to reconcile the data
science tooling in this polyglot world.&lt;/p&gt;
</summary></entry><entry><title>Jupyter Notebooks</title><link href="https://pyvideo.org/pylondinium-2019/jupyter-notebooks.html" rel="alternate"></link><published>2019-06-15T00:00:00+00:00</published><updated>2019-06-15T00:00:00+00:00</updated><author><name>Sylvain Corlay</name></author><id>tag:pyvideo.org,2019-06-15:pylondinium-2019/jupyter-notebooks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sylvain Corlay - Jupyter Notebooks - keynote&lt;/p&gt;
</summary><category term="keynote"></category></entry><entry><title>The Jupyter Interactive Widgets Ecosystem</title><link href="https://pyvideo.org/pylondinium-2018/the-jupyter-interactive-widgets-ecosystem.html" rel="alternate"></link><published>2018-06-09T00:00:00+00:00</published><updated>2018-06-09T00:00:00+00:00</updated><author><name>Sylvain Corlay</name></author><id>tag:pyvideo.org,2018-06-09:pylondinium-2018/the-jupyter-interactive-widgets-ecosystem.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we present a general overview of the Jupyter interactive widgets framework and the main interactive visualization libraries that were built upon it. Then we dive into the latest developments by the Jupyter team, including the JupyterLab integration, the use of widgets outside of the notebook, and the support for other languages.&lt;/p&gt;
&lt;p&gt;Copyright belongs to the speaker.&lt;/p&gt;
</summary></entry><entry><title>bqplot: Seamless Interactive Visualizations and Dashboards in the Jupyter Notebook</title><link href="https://pyvideo.org/scipy-2018/bqplot-seamless-interactive-visualizations-and-dashboards-in-the-jupyter-notebook.html" rel="alternate"></link><published>2018-07-13T00:00:00+00:00</published><updated>2018-07-13T00:00:00+00:00</updated><author><name>Sylvain Corlay</name></author><id>tag:pyvideo.org,2018-07-13:scipy-2018/bqplot-seamless-interactive-visualizations-and-dashboards-in-the-jupyter-notebook.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;bqplot is a Python plotting library based on d3.js that offers its
functionality directly in the Jupyter Notebook, including selections,
interactions, and arbitrary css customizations. bqplot is built to
generate professional looking, highly interactive plots and dashboards
with minimal code. This enables the rapid generation of full fledged web
applications directly in the Notebook with just a few lines of Python
code. We will then go over bqplot's library of statistical and machine
learning focused higher level abstractions and tools which are built to
aid a Data Scientist or a Machine Learning researcher to interactively
analyze the data, and arrive at useful insights. The seamless
interactivity enables the creation of custom visualizations that allow
researchers to understand their models and data in a much richer
fashion. The talk will also cover bqplot's seamless integration with the
numerous other libraries in the Jupyter widgets ecosystem such as
ipyleaflet or ipyvolume. We will then explain how to link these widgets
together using callback functions and share a few examples of advanced
applications from various disciplines built using other open source
projects. We will wrap up by previewing the latest features we are
adding to bqplot.Presenter(s): Speaker: Sylvain Corlay, QuantStack&lt;/p&gt;
</summary></entry><entry><title>Keynote by Sylvain Corlay</title><link href="https://pyvideo.org/pyparis-2017/keynote-by-sylvain-corlay.html" rel="alternate"></link><published>2017-06-12T00:00:00+00:00</published><updated>2017-06-12T00:00:00+00:00</updated><author><name>Sylvain Corlay</name></author><id>tag:pyvideo.org,2017-06-12:pyparis-2017/keynote-by-sylvain-corlay.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyParis 2017 -  Keynote by Sylvain Corlay&lt;/p&gt;
</summary></entry><entry><title>Quantstack, contributor to Jupyter</title><link href="https://pyvideo.org/pyparis-2017/quantstack-contributor-to-jupyter.html" rel="alternate"></link><published>2017-06-12T00:00:00+00:00</published><updated>2017-06-12T00:00:00+00:00</updated><author><name>Sylvain Corlay</name></author><id>tag:pyvideo.org,2017-06-12:pyparis-2017/quantstack-contributor-to-jupyter.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quantstack, contributor to Jupyter&lt;/p&gt;
</summary></entry><entry><title>Efficient Array Computing in C++ with xtensor and Apache Arrow</title><link href="https://pyvideo.org/scipy-2017/efficient-array-computing-in-c-with-xtensor-and-apache-arrow.html" rel="alternate"></link><published>2017-07-14T00:00:00+00:00</published><updated>2017-07-14T00:00:00+00:00</updated><author><name>Sylvain Corlay</name></author><id>tag:pyvideo.org,2017-07-14:scipy-2017/efficient-array-computing-in-c-with-xtensor-and-apache-arrow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will discuss joint work between the xtensor and Apache Arrow open source projects, which can help enable the development of machine learning and other numerical computing applications. xtensor provides efficient multidimensional array computing for C++14 using expression templates, with Python bindings and NumPy interoperability. Apache Arrow provides cross-language array metadata and shared memory IO for moving tabular and tensor-like array data efficiently between compute environments.&lt;/p&gt;
</summary></entry><entry><title>The Jupyter Interactive Widget Ecosystem</title><link href="https://pyvideo.org/scipy-2017/the-jupyter-interactive-widget-ecosystem.html" rel="alternate"></link><published>2017-07-11T00:00:00+00:00</published><updated>2017-07-11T00:00:00+00:00</updated><author><name>Matt Craig</name></author><id>tag:pyvideo.org,2017-07-11:scipy-2017/the-jupyter-interactive-widget-ecosystem.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter widgets are powerful tools for building user interfaces with graphical controls such as sliders and text boxes inside a Jupyter notebook. Interactive widgets can also be rendered in Sphinx documentation, nbviewer, and static web pages. Jupyter widgets are more than a collection of controls, they also are a framework that makes it easy to build custom GUI controls. Examples of custom widget packages include libraries for interactive 2-D charting (bqplot), 3-D graphics (pythreejs, ipyvolume), mapping (ipyleaflet), and more.&lt;/p&gt;
</summary><category term="jupyter notebook"></category><category term="jupyter widgets"></category></entry><entry><title>xtensor: the lazy tensor algebra library</title><link href="https://pyvideo.org/pydata-amsterdam-2017/xtensor-the-lazy-tensor-algebra-library.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Sylvain Corlay</name></author><id>tag:pyvideo.org,2017-04-09:pydata-amsterdam-2017/xtensor-the-lazy-tensor-algebra-library.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Amsterdam 2017&lt;/p&gt;
&lt;p&gt;xtensor is a C++ template tensor algebra library supporting numpy-style broadcasting and universal functions, aiming at feature parity with numpy with a native feel. In this talk we will present the highlights of the expression system. Then we will show how xtensor can be used to create numpy-aware Python extension modules with the xtensor-python project and the xtensor-cookiecutter template.&lt;/p&gt;
&lt;p&gt;Abstract
In this presentation, we will focus on the authoring numpy-aware Python extensions with xtensor.&lt;/p&gt;
&lt;p&gt;First, we present a general overview of the xtensor expression system and its main features:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;lazy broadcasting and universal functions.&lt;/li&gt;
&lt;li&gt;an API following the idioms of the C++ standard library.&lt;/li&gt;
&lt;li&gt;tools to manipulate array expressions and build upon xtensor.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then we show how the expression-based system can be used to symbolically manipulate array expressions based on other data structures, such as a numpy arrays thanks to Python's buffer protocol, but also a database or the file system.&lt;/p&gt;
&lt;p&gt;The special case of the bindings with numpy is handled by the xtensor-python project which makes it extremely easy to author Python extension operating inplace on numpy arrays, with a modern STL-compliant API. We conclude the talk with a demonstration of the xtensor-cookiecutter template project for a Python extension defining a NumPy ufunc, and exposing other C++ functionalities.&lt;/p&gt;
&lt;p&gt;The cookiecutter produces a complete project including a documentation skeleton, unit testing and all the python packaging boilerplate.&lt;/p&gt;
</summary></entry><entry><title>Interactive Visualization in Jupyter with Bqplot and Interactive Widgets</title><link href="https://pyvideo.org/pydata-london-2016/sylvain-corlay-interactive-visualization-in-jupyter-with-bqplot-and-interactive-widgets.html" rel="alternate"></link><published>2016-05-11T00:00:00+00:00</published><updated>2016-05-11T00:00:00+00:00</updated><author><name>Sylvain Corlay</name></author><id>tag:pyvideo.org,2016-05-11:pydata-london-2016/sylvain-corlay-interactive-visualization-in-jupyter-with-bqplot-and-interactive-widgets.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData London 2016&lt;/p&gt;
&lt;p&gt;GitHub Repo: &lt;a class="reference external" href="https://github.com/SylvainCorlay/tutorial"&gt;https://github.com/SylvainCorlay/tutorial&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>