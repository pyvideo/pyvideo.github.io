<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_camilla-montonen.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-05-26T00:00:00+00:00</updated><entry><title>JupyterHub from the Ground Up with Kubernetes</title><link href="https://pyvideo.org/pydata-london-2018/jupyterhub-from-the-ground-up-with-kubernetes.html" rel="alternate"></link><published>2018-04-29T00:00:00+00:00</published><updated>2018-04-29T00:00:00+00:00</updated><author><name>Camilla Montonen</name></author><id>tag:pyvideo.org,2018-04-29:pydata-london-2018/jupyterhub-from-the-ground-up-with-kubernetes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;JupyterHub is a great way to provide a data analytics environment for a
class, a research group or a team of data scientists. In this talk, we
will go through JupyterHub: what it is and how it works and how to setup
a secure and production ready deployment on a cloud provider using
Kubernetes and Helm.&lt;/p&gt;
</summary></entry><entry><title>Deploying JupyterHub with Kubernetes</title><link href="https://pyvideo.org/pydata-amsterdam-2018/deploying-jupyterhub-with-kubernetes.html" rel="alternate"></link><published>2018-05-26T00:00:00+00:00</published><updated>2018-05-26T00:00:00+00:00</updated><author><name>Camilla Montonen</name></author><id>tag:pyvideo.org,2018-05-26:pydata-amsterdam-2018/deploying-jupyterhub-with-kubernetes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;JupyterHub is a great way to provide a data analytics environment for a class, a research group or a team of data scientists. In this talk, we will go through JupyterHub: what it is and how it works and how to setup a production ready deployment on a cloud provider using Kubernetes as the underlying infrastructure.&lt;/p&gt;
</summary></entry><entry><title>P0150n3d SVMs and Other M4ch1n3 Learning 3xpl0175</title><link href="https://pyvideo.org/pycon-uk-2017/p0150n3d-svms-and-other-m4ch1n3-learning-3xpl0175.html" rel="alternate"></link><published>2017-10-29T15:30:00+01:00</published><updated>2017-10-29T15:30:00+01:00</updated><author><name>Camilla Montonen</name></author><id>tag:pyvideo.org,2017-10-29:pycon-uk-2017/p0150n3d-svms-and-other-m4ch1n3-learning-3xpl0175.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;(For the PyData Track) It is the year 2099. NetSky Corp has been hacked by a mysterious group known as the data-y0kai. Somehow they have managed to bypass the latest-and-greatest state of the art machine learning intrusion detection system and exploited the spam filter so that every corporate email is now filled with sparkling pwnies. In this conference-talk-meets-mystery-story, we will walk through a fictional investigation into how and why the attack on NetSky Corp succeeded. While doing this, we will learn about the various vulnerabilities in popular machine learning algorithms.&lt;/p&gt;
</summary></entry><entry><title>A Tube Story: How can Python help us understand London's most important transportation network?</title><link href="https://pyvideo.org/pydata-london-2015/a-tube-story-how-can-python-help-us-understand-londons-most-important-transportation-network.html" rel="alternate"></link><published>2015-06-20T00:00:00+00:00</published><updated>2015-06-20T00:00:00+00:00</updated><author><name>Camilla Montonen</name></author><id>tag:pyvideo.org,2015-06-20:pydata-london-2015/a-tube-story-how-can-python-help-us-understand-londons-most-important-transportation-network.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;If you work in London, you have certainly experienced the joys and
frustrations of commuting on the Tube. There are the very good mornings
(lo and behold! An empty seat on the Northern Line) and then there are
the very bad mornings (there is more space in a sardine can than on the
Piccadilly). Using graph-tool, Bokeh and SimPy, we unravel some of the
fascinating features of the London Tube.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The daily commute in London is an adventure that keeps surprising, in
good ways and in bad. Some mornings things go smoothly: for once there
is an empty seat on the Northern Line and you only need to wait ten
minutes before reaching the escalator at Bank. On other days, a signal
failure at Moorgate and all Piccadilly line travellers will become
intimately acquainted with the sweet fragrance of a fellow commuter's
toothpaste. After a few months, the more or less frustrated commuter
will begin to notice some interesting patterns and ask questions. Why is
it that a suspended Circle line can wreak havoc on commuters on the
Central line? Can delays at Victoria lead to overcrowding of the Jubilee
platform at London Bridge? What is the fastest way to visit all stations
in the Tube network?&lt;/p&gt;
&lt;p&gt;The London Tube can be modelled as a graph with vertices representing
the stations and edges representing the connecting Tube lines. Using
intuition and daily experience, we can guess that there are certain
vertices in the Tube network that are vital to the overall health of the
network. Pythonic graph analysis libraries such as graph-tool and
interactive visualizations with Bokeh can corroborate that suspending
stations – for example Baker Street, which lies at the intersection of 5
Tube lines- can cause congestion even at remote stations throughout the
network.&lt;/p&gt;
&lt;p&gt;In addition to studying the static properties of the London Tube, we
will leverage the power of SimPy to create various simulations. This
will allow us to explore how the Tube network evolves when key
parameters such as commuter numbers, train speeds and the frequency of
signal failures are introduced on and off peak times.&lt;/p&gt;
&lt;p&gt;This talk is aimed at novice Python users. The attendees will hopefully
come away with a basic understanding of how to use the graph-tool
library to create graphs and store meta-information about them, how to
use Bokeh to stream information to an interactive browser visualization
and how to use SimPy to create simple simulations. While it will not be
technically challenging, it will hopefully inspire beginner Pythonistas
to seek interesting problems and apply libraries in the Python data
analysis ecosystem to pose questions about data and then figure out the
answers!&lt;/p&gt;
</summary></entry><entry><title>Simulating and visualising commuter flow through the London Underground</title><link href="https://pyvideo.org/pydata-paris-2015/simulating-and-visualising-commuter-flow-through.html" rel="alternate"></link><published>2015-04-14T00:00:00+00:00</published><updated>2015-04-14T00:00:00+00:00</updated><author><name>Camilla Montonen</name></author><id>tag:pyvideo.org,2015-04-14:pydata-paris-2015/simulating-and-visualising-commuter-flow-through.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every year the London Tube transports about 1.3 billion commuters. With
multiple intersecting lines, the daily functioning of the London Tube
network poses many interesting questions: What effects do severe delays
on the Piccadilly Line have on passengers taking the Northern Line? What
is the shortest path from station x to station y? How does overcrowding
on one station affect its neighbouring stations? These are but a few
examples of the many questions one can start to investigate using two
Python libraries: graph­tool for manipulating and analysing graphs and
bokeh for visualizing and streaming “live” data from simulations. In
this talk, I will briefly show how one can transform structures such as
the London Underground map into programmatic objects that can be
analysed and manipulated using Python. Furthermore, I will show examples
of simulations based on the publicly available data from Transport for
London and illustrate how simulations can be used to glean insight on
the large scale behaviour of a complex system. Last but not least, I
hope to illustrate how the bokeh server can be leveraged to create
“real­time” visualizations of simulations.&lt;/p&gt;
</summary></entry></feed>