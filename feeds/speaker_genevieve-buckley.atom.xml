<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Genevieve Buckley</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_genevieve-buckley.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-07-12T00:00:00+00:00</updated><subtitle></subtitle><entry><title>dask-image: distributed image processing for large data</title><link href="https://pyvideo.org/pycon-au-2020/dask-image-distributed-image-processing-for-large-data.html" rel="alternate"></link><published>2020-09-06T00:00:00+00:00</published><updated>2020-09-06T00:00:00+00:00</updated><author><name>Genevieve Buckley</name></author><id>tag:pyvideo.org,2020-09-06:/pycon-au-2020/dask-image-distributed-image-processing-for-large-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genevieve Buckley&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/KHULAN"&gt;https://2020.pycon.org.au/program/KHULAN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Image datasets are large, and becoming larger. The widely used benchmark dataset COCO (Common Objects in Context) contains 330,000 individual images. The average size of a single entry on the image database EMPIAR is over 1TB, and can easily …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genevieve Buckley&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/KHULAN"&gt;https://2020.pycon.org.au/program/KHULAN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Image datasets are large, and becoming larger. The widely used benchmark dataset COCO (Common Objects in Context) contains 330,000 individual images. The average size of a single entry on the image database EMPIAR is over 1TB, and can easily reach several terabytes.  Even where individual images are small enough to fit in-memory, many existing parallelization methods are difficult to scale seamlessly between a laptop and a supercomputing cluster. For instance, the python multiprocessing module is restricted to a single mode and can't take advantage of multiple compute nodes on a distributed supercomputing cluster.&lt;/p&gt;
&lt;p&gt;We need easy ways to work with large image data. This talk introduces dask-image, a python library for distributed image processing. The target audience are python programmers currently using numpy and scipy with large array data, where the whole dataset cannot fit in memory or is close to that limit. It's for people who want to get started with parallel processing, either because they have large single-image data, or because they want to do batch processing applying the same analysis to many smaller images (sometimes known an embarrassingly parallel problem). The specific image analysis functions provided by dask-image are of broad interest to a diverse range of analysis applications including (but not limited to) video/streaming data, computer vision, and scientific fields including astronomy, microscopy and geosciences.&lt;/p&gt;
&lt;p&gt;Specifically, this talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;An overview of the dask-image library&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Lazy image loading&lt;/li&gt;
&lt;li&gt;Image pre-processing functionality (convolutions, filters, etc.)&lt;/li&gt;
&lt;li&gt;Analysis of segmented images (distributed labeling, and measurements of those label regions)&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Mixing in your own custom analysis functions (using dask delayed, map_blocks, and map_overlap)&lt;/li&gt;
&lt;li&gt;A practical case study of a Python image processing pipeline&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dask-image is open source, released under a BSD 3-Clause license, and can be installed using conda or pip. You can find the source code at &lt;a class="reference external" href="https://github.com/dask/dask-image"&gt;https://github.com/dask/dask-image&lt;/a&gt; and the quickstart guide at &lt;a class="reference external" href="https://github.com/dask/dask-examples/blob/master/applications/image-processing.ipynb"&gt;https://github.com/dask/dask-examples/blob/master/applications/image-processing.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 13:55:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="GenevieveBuckley"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Microscopium: Interactive Exploration of Large Imaging Datasets</title><link href="https://pyvideo.org/scipy-2019/microscopium-interactive-exploration-of-large-imaging-datasets.html" rel="alternate"></link><published>2019-07-13T00:00:00+00:00</published><updated>2019-07-13T00:00:00+00:00</updated><author><name>Genevieve Buckley</name></author><id>tag:pyvideo.org,2019-07-13:/scipy-2019/microscopium-interactive-exploration-of-large-imaging-datasets.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Microscopium is an open source library and web application to explore large datasets of related images interactively. It is being developed openly at &lt;a class="reference external" href="https://github.com/microscopium/microscopium"&gt;https://github.com/microscopium/microscopium&lt;/a&gt;, and runs on a SciPy stack of NumPy, SciPy, scikit-image, scikit-learn, and Bokeh. We will show that 2D embedding of images …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Microscopium is an open source library and web application to explore large datasets of related images interactively. It is being developed openly at &lt;a class="reference external" href="https://github.com/microscopium/microscopium"&gt;https://github.com/microscopium/microscopium&lt;/a&gt;, and runs on a SciPy stack of NumPy, SciPy, scikit-image, scikit-learn, and Bokeh. We will show that 2D embedding of images according to similarity is sufficient to discover relationships between drugs and genes of interest.&lt;/p&gt;
</content><category term="SciPy 2019"></category></entry><entry><title>Scaling Science leveraging Dask for life sciences</title><link href="https://pyvideo.org/scipy-2021/scaling-science-leveraging-dask-for-life-sciences.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Genevieve Buckley</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/scaling-science-leveraging-dask-for-life-sciences.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Managing the challenges associated with big data in life sciences can be difficult. Scalable scientific computing is required to cope with the increasing demands of modern biology and neuroscience. Dask is a python library for distributed computation. In this talk, we'll look at several case studies where Dask is …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Managing the challenges associated with big data in life sciences can be difficult. Scalable scientific computing is required to cope with the increasing demands of modern biology and neuroscience. Dask is a python library for distributed computation. In this talk, we'll look at several case studies where Dask is used to scale up data processing for life sciences. It will include examples from statistical genetics, single cell analysis, and imaging visualization &amp;amp; analysis. This will give you a better understanding of how you can extend code with Dask to scale your analysis.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Dask Image - Distributed Image Processing for Large Data</title><link href="https://pyvideo.org/scipy-japan-2020/dask-image-distributed-image-processing-for-large-data.html" rel="alternate"></link><published>2020-10-30T00:00:00+00:00</published><updated>2020-10-30T00:00:00+00:00</updated><author><name>Genevieve Buckley</name></author><id>tag:pyvideo.org,2020-10-30:/scipy-japan-2020/dask-image-distributed-image-processing-for-large-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk introduces dask-image, a python library for distributed image processing. Targeted towards applications involving large array data too big to fit in memory, dask-image is built on top of numpy, scipy, and dask allowing easy scalability and portability from your laptop to the supercomputing cluster. It is of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk introduces dask-image, a python library for distributed image processing. Targeted towards applications involving large array data too big to fit in memory, dask-image is built on top of numpy, scipy, and dask allowing easy scalability and portability from your laptop to the supercomputing cluster. It is of broad interest to a diverse range of scientific fields including astronomy, geosciences, microscopy, and climate sciences. We will provide a general overview of the dask-image library, then discuss mixing and matching with your own custom functions, and present a practical case study of a python image processing pipeline.&lt;/p&gt;
&lt;p&gt;この講演では、分散画像処理のための python ライブラリである dask-image を紹介します。メモリに収まりきらないほど大きな配列データを扱うアプリケーションをターゲットにしており、dask-image は numpy, scipy, dask の上に構築されているため、ラップトップからスーパーコンピュータクラスタへの拡張性と移植性を容易にします。天文学、地球科学、顕微鏡、気候科学などの多様な科学分野に広く関心があります。dask-image ライブラリの一般的な概要を説明した後、独自のカスタム関数との混合やマッチングについて議論し、Python 画像処理パイプラインの実践的なケーススタディを紹介します。&lt;/p&gt;
</content><category term="Scipy Japan 2020"></category></entry></feed>