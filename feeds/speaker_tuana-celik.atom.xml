<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Tuana Celik</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_tuana-celik.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-05-18T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Ranking and Retrieval Techniques for Retrieval Augmented Generation with Haystack</title><link href="https://pyvideo.org/pybay-2023/Ranking_and_Retrieval_Techniques_for_Retrieval_Augmented_Generation_with_Haystack.html" rel="alternate"></link><published>2023-10-08T13:15:00+00:00</published><updated>2023-10-08T13:15:00+00:00</updated><author><name>Tuana Celik</name></author><id>tag:pyvideo.org,2023-10-08:/pybay-2023/Ranking_and_Retrieval_Techniques_for_Retrieval_Augmented_Generation_with_Haystack.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Retrieval augmented generation has proven to be quite an effective technique to achieve good results with LLMs, so that they may provide answers based on your own data.&lt;/p&gt;
&lt;p&gt;While retrieval is a key step in such applications, other step have also started to show promise for various use cases …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Retrieval augmented generation has proven to be quite an effective technique to achieve good results with LLMs, so that they may provide answers based on your own data.&lt;/p&gt;
&lt;p&gt;While retrieval is a key step in such applications, other step have also started to show promise for various use cases: Ranking.
In this session we will discuss why retrieval and ranking play important roles to build effective applications with LLMs. In particular, we will see how we can use Lost in the Middle and Diversity Rankers with Haystack, an open source LLM framework, to improve the quality of our RAG pipeline results. We will also briefly discuss the role of hybrid retrieval&lt;/p&gt;
</content><category term="PyBay 2023"></category></entry><entry><title>Building LLM-based Agents: How to develop smart NLP-driven apps with Haystack (Sponsor: deepset)</title><link href="https://pyvideo.org/pycon-us-2023/building-llm-based-agents-how-to-develop-smart-nlp-driven-apps-with-haystack-sponsor-deepset.html" rel="alternate"></link><published>2023-04-20T00:00:00+00:00</published><updated>2023-04-20T00:00:00+00:00</updated><author><name>Tuana Celik</name></author><id>tag:pyvideo.org,2023-04-20:/pycon-us-2023/building-llm-based-agents-how-to-develop-smart-nlp-driven-apps-with-haystack-sponsor-deepset.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Large Language Models (LLMs), like ChatGPT, have taken the Internet by
storm. People are amazed at how these models can generate language with
the snapshot of general world knowledge they have accumulated. However,
in many real-world use cases a snapshot of general world knowledge is
not enough. How do …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Large Language Models (LLMs), like ChatGPT, have taken the Internet by
storm. People are amazed at how these models can generate language with
the snapshot of general world knowledge they have accumulated. However,
in many real-world use cases a snapshot of general world knowledge is
not enough. How do you equip them with the relevant tools to solve a
task - like SQL, a CRM or web search? Or for a task, how do you control
which tool is used or which knowledge base is referred to? Using LLMs as
so-called “Agents” allows you to use them as a decision maker in your
application that react to all sorts of user requests. Given a user
request, the agents can create an action plan.&lt;/p&gt;
&lt;p&gt;In this talk, we will learn how to build agent-driven applications with
Haystack. We will show how to build an agent and connect it to other
tools or knowledge bases. We will illustrate the concept with practical
use cases and examples. Each step will be accompanied by code examples.
By the end of the talk, you will have seen these concepts applied in
practice, and you will be able to build an agent-driven application for
your own use case.&lt;/p&gt;
</content><category term="PyCon US 2023"></category></entry><entry><title>Everything is a graph, including LLM Applications (and that’s handy)</title><link href="https://pyvideo.org/pycon-us-2024/everything-is-a-graph-including-llm-applications-and-thats-handy.html" rel="alternate"></link><published>2024-05-18T00:00:00+00:00</published><updated>2024-05-18T00:00:00+00:00</updated><author><name>Tuana Celik</name></author><id>tag:pyvideo.org,2024-05-18:/pycon-us-2024/everything-is-a-graph-including-llm-applications-and-thats-handy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NLP applications and LLMs have incredible potential to transform the way
we live, work, and play. But NLP applications, especially at production
scale, can be confusing. In this talk, we’ll explore how thinking of NLP
applications as graphs can reduce confusion and help you build and
customize quickly …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NLP applications and LLMs have incredible potential to transform the way
we live, work, and play. But NLP applications, especially at production
scale, can be confusing. In this talk, we’ll explore how thinking of NLP
applications as graphs can reduce confusion and help you build and
customize quickly.&lt;/p&gt;
&lt;p&gt;We will first look into what makes up some of the most common NLP
applications today, such as retrieval-augmented generation (RAG), and
how each step of these applications can be represented as a node in a
graph. Then, we will see how we can incorporate branches and loops into
these applications.&lt;/p&gt;
&lt;p&gt;As a final step, we’ll see how we can build customized tooling for NLP
applications in Python.&lt;/p&gt;
&lt;p&gt;We will make use of the pipeline structure of Haystack (an open-source
LLM framework in Python) as the basis for the examples. We will cover
two working examples that use Haystack’s custom component API (nodes of
the graph) within a full pipeline:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A private Notion question-answering app&lt;/li&gt;
&lt;li&gt;A summarizer for the latest Hacker News posts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Key takeaways:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It’s useful to think of NLP applications as directed (multi-)graphs&lt;/li&gt;
&lt;li&gt;There are tools for Python developers to build their own tooling that
slots into this architecture with the use of open-source frameworks
like Haystack.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyCon US 2024"></category></entry><entry><title>Finding the needle: a deep dive into the rewriting of Haystack (Sponsor: Haystack)</title><link href="https://pyvideo.org/pycon-us-2024/finding-the-needle-a-deep-dive-into-the-rewriting-of-haystack-sponsor-haystack.html" rel="alternate"></link><published>2024-05-16T00:00:00+00:00</published><updated>2024-05-16T00:00:00+00:00</updated><author><name>Tuana Celik</name></author><id>tag:pyvideo.org,2024-05-16:/pycon-us-2024/finding-the-needle-a-deep-dive-into-the-rewriting-of-haystack-sponsor-haystack.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Haystack is an open-source framework. With Haystack you can compose
various NLP tools to build applications, with a particular focus on
Large Language Models. Haystack was built before the “ChatGPT
revolution”. Same as many others in this industry, we had to question
all the existing assumptions in order to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Haystack is an open-source framework. With Haystack you can compose
various NLP tools to build applications, with a particular focus on
Large Language Models. Haystack was built before the “ChatGPT
revolution”. Same as many others in this industry, we had to question
all the existing assumptions in order to adapt, and we had to do it
fast.&lt;/p&gt;
&lt;p&gt;In this talk, we'll explore the motivations behind the refactoring, the
challenges we faced, and the outcomes achieved through this intensive
process. From rethinking many of the original abstractions, all the way
up to growing a vibrant community of users and contributors, we’ll share
the key strategies and techniques employed during this journey.&lt;/p&gt;
&lt;p&gt;Whether you're a seasoned open-source contributor or a curious
enthusiast, this talk promises to uncover valuable insights and lessons
learned from the evolution of Haystack.&lt;/p&gt;
</content><category term="PyCon US 2024"></category></entry></feed>