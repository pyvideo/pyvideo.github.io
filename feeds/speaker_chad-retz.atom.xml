<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Chad Retz</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_chad-retz.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-04-12T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Building a distributed asyncio event loop</title><link href="https://pyvideo.org/pytexas-2025/building-a-distributed-asyncio-event-loop.html" rel="alternate"></link><published>2025-04-12T00:00:00+00:00</published><updated>2025-04-12T00:00:00+00:00</updated><author><name>Chad Retz</name></author><id>tag:pyvideo.org,2025-04-12:/pytexas-2025/building-a-distributed-asyncio-event-loop.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To support distributed, durable (i.e. resumable) asynchronous code in Temporal, a custom asyncio event loop was required. We will cover how asyncio event loops work under the hood, considerations for building a custom, deterministic one, and gotchas encountered along the way.&lt;/p&gt;
</content><category term="PyTexas 2025"></category></entry></feed>