<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_tom-goldenberg.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-12-03T00:00:00+00:00</updated><entry><title>Kedro + MLflow â€“ Reproducible and versioned data pipelines at scale</title><link href="https://pyvideo.org/pydata-la-2019/kedro-mlflow-reproducible-and-versioned-data-pipelines-at-scale.html" rel="alternate"></link><published>2019-12-03T00:00:00+00:00</published><updated>2019-12-03T00:00:00+00:00</updated><author><name>Tom Goldenberg</name></author><id>tag:pyvideo.org,2019-12-03:pydata-la-2019/kedro-mlflow-reproducible-and-versioned-data-pipelines-at-scale.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kedro is a development workflow tool open sourced by QuantumBlack, a
McKinsey company. Many data science teams have started using the library
for their pipelines but are unsure how to integrate with other model
tracking tools, such as MLflow. In this tutorial, we will give an
overview of Kedro and MLflow and demo how to leverage the best of both.&lt;/p&gt;
&lt;p&gt;The goal of this session is to demonstrate how Kedro and MLflow fit
together in a scalable AI architecture. To start, we will give an
overview of Kedro and an overview of MLflow: - What are they used for? -
What functionality do they provide? - How do they compare as tools?&lt;/p&gt;
&lt;p&gt;Next, we will walk through a demo of a Kedro project that has MLflow
integrated into it. Finally, we will go over deployment options.&lt;/p&gt;
&lt;p&gt;There will be time allocated at the end for Q&amp;amp;A.&lt;/p&gt;
</summary></entry></feed>