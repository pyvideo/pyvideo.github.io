<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 28 Oct 2016 00:00:00 +0000</lastBuildDate><item><title>API first and forgotten</title><link>https://pyvideo.org/pycon-cz-2016/api-first-and-forgotten.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;API first&amp;quot; principle seems convincing. Anyone who tried implementing
it realizes that often the problem is not to design or formally
specify the API (with Swagger or other tool). The problem is to keep
the specification, servers and clients consistent and easy to
maintain for longer. I will talk about what practices you need to
remember and which tools are worth to check.&lt;/p&gt;
&lt;p&gt;The talk will start with the basics of microservices architecture. I
will describe some mistakes we have made that turned our
microservices architecture fragile and unmanageable.&lt;/p&gt;
&lt;p&gt;I will show how we redesigned our API using Swagger and what
principles you should have in mind when doing so. I will also cover
technical problems we encountered:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;how to test that a service implements an API;&lt;/li&gt;
&lt;li&gt;how to avoid writing validation that is already specified in the swagger file;&lt;/li&gt;
&lt;li&gt;how to create clients and stub and who should maintain them.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As theory is not enough here, I will also show some tools that help,
describe in detail connexion library and show how we used it to
implement microservices integration tests &amp;#64;Growbots.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Matejczyk</dc:creator><pubDate>Fri, 28 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-28:pycon-cz-2016/api-first-and-forgotten.html</guid></item><item><title>API first and forgotten</title><link>https://pyvideo.org/pycon-pl-2016/api-first-and-forgotten.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;API first principle seems convincing. Anyone, who tried implementing it,
realises that often the problem is not to design or formally specify the
API with Swagger. The problem is to keep the specification, servers and
clients consistent and easy to maintain for longer. I will talk about
what practices you need to remember and which tools it is worth to
check.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Matejczyk</dc:creator><pubDate>Fri, 14 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-14:pycon-pl-2016/api-first-and-forgotten.html</guid></item></channel></rss>