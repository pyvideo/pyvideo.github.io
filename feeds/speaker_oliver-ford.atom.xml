<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_oliver-ford.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-06-10T00:00:00+00:00</updated><entry><title>Types: what they are, why to care, and how to use them in Python</title><link href="https://pyvideo.org/pylondinium-2018/types-what-they-are-why-to-care-and-how-to-use-them-in-python.html" rel="alternate"></link><published>2018-06-10T00:00:00+00:00</published><updated>2018-06-10T00:00:00+00:00</updated><author><name>Oliver Ford</name></author><id>tag:pyvideo.org,2018-06-10:pylondinium-2018/types-what-they-are-why-to-care-and-how-to-use-them-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Type systems are among the hottest toys in town, with a new typed language transpiling to JavaScript every week. But isn't that incompatible with Python's fast, productive, dynamic typing?&lt;/p&gt;
&lt;p&gt;In this talk, I'll introduce these things called 'types', and motivate and demonstrate their use in Python.&lt;/p&gt;
&lt;p&gt;Copyright belongs to the speaker.&lt;/p&gt;
</summary></entry></feed>