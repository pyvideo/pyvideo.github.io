<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 06 Jul 2017 00:00:00 +0000</lastBuildDate><item><title>High Performance Distributed Tensorflow</title><link>https://pyvideo.org/pydata-seattle-2017/high-performance-distributed-tensorflow.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this completely demo-based talk, Chris will demonstrate various techniques to post-process and optimize trained Tensorflow AI models to reduce deployment size and increase prediction performance.&lt;/p&gt;
&lt;p&gt;First, we'll use various techniques such as 8-bit quantization, weight-rounding, and batch-normalization folding, we will simplify the path of forward propagation and prediction.&lt;/p&gt;
&lt;p&gt;Next, we'll loadtest and compare our optimized and unoptimized models - in addition to enabling and disabling request batching.&lt;/p&gt;
&lt;p&gt;Last, we'll dive deep into Google's Tensorflow Graph Transform Tool to build custom model optimization functions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Fregly</dc:creator><pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-06:pydata-seattle-2017/high-performance-distributed-tensorflow.html</guid></item><item><title>High-Performance Distributed Tensorflow: Request Batching and Model Post-Processing Optimizations</title><link>https://pyvideo.org/pydata-london-2017/high-performance-distributed-tensorflow-request-batching-and-model-post-processing-optimizations.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Title High-Performance Distributed Tensorflow: Request Batching and Model Post-Processing Optimizations&lt;/p&gt;
&lt;p&gt;Filmed at PyData London 2017&lt;/p&gt;
&lt;p&gt;Description
In this completely demo-based talk, Chris will demonstrate various techniques to post-process and optimize trained Tensorflow AI models to reduce deployment size and increase prediction performance.&lt;/p&gt;
&lt;p&gt;Abstract
In this completely demo-based talk, Chris will demonstrate various techniques to post-process and optimize trained Tensorflow AI models to reduce deployment size and increase prediction performance.&lt;/p&gt;
&lt;p&gt;First, we'll use various techniques such as 8-bit quantization, weight-rounding, and batch-normalization folding, we will simplify the path of forward propagation and prediction.&lt;/p&gt;
&lt;p&gt;Next, we'll loadtest and compare our optimized and unoptimized models - in addition to enabling and disabling request batching.&lt;/p&gt;
&lt;p&gt;Last, we'll dive deep into Google's Tensorflow Graph Transform Tool to build custom model optimization functions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Fregly</dc:creator><pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-06:pydata-london-2017/high-performance-distributed-tensorflow-request-batching-and-model-post-processing-optimizations.html</guid></item></channel></rss>