<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 09 Jul 2014 00:00:00 +0000</lastBuildDate><item><title>Practical Experience in Teaching Numerical Methods with IPython Notebooks</title><link>https://pyvideo.org/scipy-2014/practical-experience-in-teaching-numerical-method.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;New tools like the IPython notebook can enhance both lectures and
textbooks, by making class time and individual study more interactive
through the inclusion of executable code and animations. I will demo
some materials and activities I've provided for students using the
IPython notebook. I will focus on practical issues I've faced that are
particular to this teaching approach.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Traditional university teaching is based on the use of lectures in class
and textbooks out of class. The medium (lecture or book) discourages the
natural curiosity that can lead to deeper understanding by investigating
the result of changing a parameter, or looking at the full results of a
time-dependent simulation.&lt;/p&gt;
&lt;p&gt;The IPython notebook provides a single medium in which mathematics,
explanations, executable code, and animated or interactive visualization
can be combined. Notebooks that combine all of these components can
enable new modes of student-led inquiry: the student can experiment with
modifications to the code and see the results, all without stepping away
from the mathematical explanations themselves. When notebooks are used
by students in the classroom, students can quickly share and discuss
results with the instructor or other class members. The instructor can
facilitate deeper learning by posing questions that students may answer
through writing appropriate code, during class time.&lt;/p&gt;
&lt;p&gt;For the past four years, I have taught a graduate numerical analysis
course using SAGE worksheets and IPython notebooks. I will show examples
of the notebooks I've developed and successfully used in this course. I
will describe some practical aspects of my experience, such as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Tradeoffs between using IPython and SAGE&lt;/li&gt;
&lt;li&gt;Experiences with use of cloud computing platforms&lt;/li&gt;
&lt;li&gt;Dealing with students' installation issues&lt;/li&gt;
&lt;li&gt;Quickly getting students up to speed with the Python language and
packages&lt;/li&gt;
&lt;li&gt;Testing and evaluating homework in a math course that is
programming-intensive&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David I. Ketcheson</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-09:scipy-2014/practical-experience-in-teaching-numerical-method.html</guid><category>education</category><category>ipynb</category></item><item><title>Teaching Numerical Methods with IPython Notebooks, Part 1</title><link>https://pyvideo.org/scipy-2014/teaching-numerical-methods-part-1.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This tutorial will give participants an introduction to the use of
IPython notebooks in teaching numerical methods or scientific computing,
at the level of an undergraduate or graduate university course. Prior
familiarity with notebooks is not necessary. Participants will create an
interactive notebook that explains and helps students to implement and
explore a numerical algorithm.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is targeted to those who are or soon will be teaching
numerical methods or scientific computing and are interested in using
Python as the programming language for their course. The tutorial will
be useful both to academics teaching university courses and those in
industry who run training sessions. No prior knowledge of the IPython
notebook is necessary, but participants should have some familiarity
with Python, Numpy, and Matplotlib.&lt;/p&gt;
&lt;p&gt;IPython notebooks are an excellent medium for teaching nuemrical methods
since they can include both mathematical explanations and executable
code in a single document. The tutorial will begin with an introduction
to the IPython notebook, emphasizing how to overcome aspects that can be
confusing to students. Next we will go over available free resources for&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ensuring that students have a suitable computing environment, using
either a cloud platform or a packaged distribution&lt;/li&gt;
&lt;li&gt;distributing and collecting notebooks&lt;/li&gt;
&lt;li&gt;converting notebooks to other formats that may be useful in a course&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will also review a number of excellent existing resources containing
IPython notebooks for numerical methods courses. Using these notebooks
as examples, we will discuss how to design effective notebooks for
teaching, including&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;typesetting mathematical equations and expressions using LaTeX&lt;/li&gt;
&lt;li&gt;Formatting, referencing, and layout using Markdown&lt;/li&gt;
&lt;li&gt;inserting complete or partial code snippets&lt;/li&gt;
&lt;li&gt;embedding figures and other media&lt;/li&gt;
&lt;li&gt;embedding interactive widgets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will briefly discuss different approaches to using IPython notebooks
in a course, including their use as the basis for&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;homework assignments&lt;/li&gt;
&lt;li&gt;short activities during a class session&lt;/li&gt;
&lt;li&gt;longer laboratory sessions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, participants will be asked to develop, individually or in small
groups, a notebook of their own that could be used as an assignment,
classroom exercise, or lecture.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aron Ahmadia</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-09:scipy-2014/teaching-numerical-methods-part-1.html</guid><category>ipython</category><category>numerical methods</category></item><item><title>Teaching Numerical Methods with IPython Notebooks, Part 3</title><link>https://pyvideo.org/scipy-2014/teaching-numerical-methods-part-3.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This tutorial will give participants an introduction to the use of
IPython notebooks in teaching numerical methods or scientific computing,
at the level of an undergraduate or graduate university course. Prior
familiarity with notebooks is not necessary. Participants will create an
interactive notebook that explains and helps students to implement and
explore a numerical algorithm.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is targeted to those who are or soon will be teaching
numerical methods or scientific computing and are interested in using
Python as the programming language for their course. The tutorial will
be useful both to academics teaching university courses and those in
industry who run training sessions. No prior knowledge of the IPython
notebook is necessary, but participants should have some familiarity
with Python, Numpy, and Matplotlib.&lt;/p&gt;
&lt;p&gt;IPython notebooks are an excellent medium for teaching nuemrical methods
since they can include both mathematical explanations and executable
code in a single document. The tutorial will begin with an introduction
to the IPython notebook, emphasizing how to overcome aspects that can be
confusing to students. Next we will go over available free resources for&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ensuring that students have a suitable computing environment, using
either a cloud platform or a packaged distribution&lt;/li&gt;
&lt;li&gt;distributing and collecting notebooks&lt;/li&gt;
&lt;li&gt;converting notebooks to other formats that may be useful in a course&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will also review a number of excellent existing resources containing
IPython notebooks for numerical methods courses. Using these notebooks
as examples, we will discuss how to design effective notebooks for
teaching, including&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;typesetting mathematical equations and expressions using LaTeX&lt;/li&gt;
&lt;li&gt;Formatting, referencing, and layout using Markdown&lt;/li&gt;
&lt;li&gt;inserting complete or partial code snippets&lt;/li&gt;
&lt;li&gt;embedding figures and other media&lt;/li&gt;
&lt;li&gt;embedding interactive widgets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will briefly discuss different approaches to using IPython notebooks
in a course, including their use as the basis for&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;homework assignments&lt;/li&gt;
&lt;li&gt;short activities during a class session&lt;/li&gt;
&lt;li&gt;longer laboratory sessions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, participants will be asked to develop, individually or in small
groups, a notebook of their own that could be used as an assignment,
classroom exercise, or lecture.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aron Ahmadia</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-09:scipy-2014/teaching-numerical-methods-part-3.html</guid><category>ipython</category><category>numerical methods</category></item><item><title>Teaching Numerical Methods with IPython Notebooks 2</title><link>https://pyvideo.org/scipy-2014/teaching-numerical-methods-with-ipython-notebooks.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This tutorial will give participants an introduction to the use of
IPython notebooks in teaching numerical methods or scientific computing,
at the level of an undergraduate or graduate university course. Prior
familiarity with notebooks is not necessary. Participants will create an
interactive notebook that explains and helps students to implement and
explore a numerical algorithm.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is targeted to those who are or soon will be teaching
numerical methods or scientific computing and are interested in using
Python as the programming language for their course. The tutorial will
be useful both to academics teaching university courses and those in
industry who run training sessions. No prior knowledge of the IPython
notebook is necessary, but participants should have some familiarity
with Python, Numpy, and Matplotlib.&lt;/p&gt;
&lt;p&gt;IPython notebooks are an excellent medium for teaching nuemrical methods
since they can include both mathematical explanations and executable
code in a single document. The tutorial will begin with an introduction
to the IPython notebook, emphasizing how to overcome aspects that can be
confusing to students. Next we will go over available free resources for&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ensuring that students have a suitable computing environment, using
either a cloud platform or a packaged distribution&lt;/li&gt;
&lt;li&gt;distributing and collecting notebooks&lt;/li&gt;
&lt;li&gt;converting notebooks to other formats that may be useful in a course&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will also review a number of excellent existing resources containing
IPython notebooks for numerical methods courses. Using these notebooks
as examples, we will discuss how to design effective notebooks for
teaching, including&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;typesetting mathematical equations and expressions using LaTeX&lt;/li&gt;
&lt;li&gt;Formatting, referencing, and layout using Markdown&lt;/li&gt;
&lt;li&gt;inserting complete or partial code snippets&lt;/li&gt;
&lt;li&gt;embedding figures and other media&lt;/li&gt;
&lt;li&gt;embedding interactive widgets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will briefly discuss different approaches to using IPython notebooks
in a course, including their use as the basis for&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;homework assignments&lt;/li&gt;
&lt;li&gt;short activities during a class session&lt;/li&gt;
&lt;li&gt;longer laboratory sessions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, participants will be asked to develop, individually or in small
groups, a notebook of their own that could be used as an assignment,
classroom exercise, or lecture.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aron Ahmadia</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-09:scipy-2014/teaching-numerical-methods-with-ipython-notebooks.html</guid><category>ipython</category><category>numerical methods</category></item></channel></rss>