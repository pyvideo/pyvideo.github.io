<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - David Hagen</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_david-hagen.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-07-12T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Defeat obscure file formats with Parsita</title><link href="https://pyvideo.org/scipy-2021/defeat-obscure-file-formats-with-parsita.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>David Hagen</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/defeat-obscure-file-formats-with-parsita.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scientific programmers often encounter specialized file formats. Parsing these files so they can be used in Python can be daunting if a parser does not already exist because writing parsers is difficult, error-prone, and time-consuming. Parsita is a parser combinator library for Python that makes it easy to write â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scientific programmers often encounter specialized file formats. Parsing these files so they can be used in Python can be daunting if a parser does not already exist because writing parsers is difficult, error-prone, and time-consuming. Parsita is a parser combinator library for Python that makes it easy to write a parser for a file format or even design a new file format for a domain-specific language of interest.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry></feed>