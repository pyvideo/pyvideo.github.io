<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_clsung.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-09-14T00:00:00+00:00</updated><entry><title>How the Mock library helps me developing client-side applications by clsung</title><link href="https://pyvideo.org/pycon-apac-2013-in-japan/how-the-mock-library-helps-me-developing-client-side-applications-by-clsung.html" rel="alternate"></link><published>2013-09-14T00:00:00+00:00</published><updated>2013-09-14T00:00:00+00:00</updated><author><name>clsung</name></author><id>tag:pyvideo.org,2013-09-14:pycon-apac-2013-in-japan/how-the-mock-library-helps-me-developing-client-side-applications-by-clsung.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Server-side programs are usually easily tested inside the frameworks like django, flask, etc. For client-side development, it's hard to write unit tests in isolation from other modules/classes. Mock is thus a necessary library for client-side testing. This talk will introduce when and how to write client-side test with the power of mock library.&lt;/p&gt;
</summary></entry></feed>