<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 12 Jun 2017 00:00:00 +0000</lastBuildDate><item><title>xtensor: the lazy tensor algebra library</title><link>https://pyvideo.org/pyparis-2017/xtensor-the-lazy-tensor-algebra-library.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;xtensor is a C++ template tensor algebra library supporting numpy-style
broadcasting and universal functions. In this talk we present the
highlights of the expression system, then we show how xtensor can be
used to create numpy-aware Python extension modules with the
xtensor-python project.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Johan Mabille</dc:creator><pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-12:pyparis-2017/xtensor-the-lazy-tensor-algebra-library.html</guid></item><item><title>xtensor: the lazy tensor algebra library</title><link>https://pyvideo.org/pydata-amsterdam-2017/xtensor-the-lazy-tensor-algebra-library.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Amsterdam 2017&lt;/p&gt;
&lt;p&gt;xtensor is a C++ template tensor algebra library supporting numpy-style broadcasting and universal functions, aiming at feature parity with numpy with a native feel. In this talk we will present the highlights of the expression system. Then we will show how xtensor can be used to create numpy-aware Python extension modules with the xtensor-python project and the xtensor-cookiecutter template.&lt;/p&gt;
&lt;p&gt;Abstract
In this presentation, we will focus on the authoring numpy-aware Python extensions with xtensor.&lt;/p&gt;
&lt;p&gt;First, we present a general overview of the xtensor expression system and its main features:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;lazy broadcasting and universal functions.&lt;/li&gt;
&lt;li&gt;an API following the idioms of the C++ standard library.&lt;/li&gt;
&lt;li&gt;tools to manipulate array expressions and build upon xtensor.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then we show how the expression-based system can be used to symbolically manipulate array expressions based on other data structures, such as a numpy arrays thanks to Python's buffer protocol, but also a database or the file system.&lt;/p&gt;
&lt;p&gt;The special case of the bindings with numpy is handled by the xtensor-python project which makes it extremely easy to author Python extension operating inplace on numpy arrays, with a modern STL-compliant API. We conclude the talk with a demonstration of the xtensor-cookiecutter template project for a Python extension defining a NumPy ufunc, and exposing other C++ functionalities.&lt;/p&gt;
&lt;p&gt;The cookiecutter produces a complete project including a documentation skeleton, unit testing and all the python packaging boilerplate.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sylvain Corlay</dc:creator><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-09:pydata-amsterdam-2017/xtensor-the-lazy-tensor-algebra-library.html</guid></item></channel></rss>