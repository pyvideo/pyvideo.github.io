<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 12 Jul 2019 00:00:00 +0000</lastBuildDate><item><title>Visual Diagnostics at Scale: More Informed Machine Learning with Large Datasets</title><link>https://pyvideo.org/scipy-2019/visual-diagnostics-at-scale-more-informed-machine-learning-with-large-datasets.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The hunt for the most effective machine learning model is hard enough with a modest dataset, and much more so as our data grow! As we search for the optimal combination of features, algorithm, and hyperparameters, we often use tools like histograms, heatmaps, embeddings, and other plots to make our processes more informed and effective. However, large, high-dimensional datasets can prove particularly challenging. In this talk, we'll explore a suite of visual diagnostics, investigate their strengths and weaknesses in face of increasingly big data, and consider how we can steer the machine learning process, not only purposefully but at scale!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rebecca Bilbro</dc:creator><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-12:scipy-2019/visual-diagnostics-at-scale-more-informed-machine-learning-with-large-datasets.html</guid></item><item><title>Building A Gigaword Corpus: Lessons on Data Ingestion, Management, and Processing for NLP</title><link>https://pyvideo.org/pycon-us-2017/building-a-gigaword-corpus-lessons-on-data-ingestion-management-and-processing-for-nlp.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As the applications we build are increasingly driven by text, doing data
ingestion, management, loading, and preprocessing in a robust,
organized, parallel, and memory-safe way can get tricky. This talk walks
through the highs (a custom billion-word corpus!), the lows (segfaults,
400 errors, pesky mp3s), and the new Python libraries we built to ingest
and preprocess text for machine learning.&lt;/p&gt;
&lt;p&gt;While applications like Siri, Cortana, and Alexa may still seem like
novelties, language-aware applications are rapidly becoming the new
norm. Under the hood, these applications take in text data as input,
parse it into composite parts, compute upon those composites, and then
recombine them to deliver a meaningful and tailored end result. The best
applications use language models trained on &lt;em&gt;domain-specific corpora&lt;/em&gt;
(collections of related documents containing natural language) that
reduce ambiguity and prediction space to make results more intelligible.
Here's the catch: these corpora are huge, generally consisting of at
least hundreds of gigabytes of data inside of thousands of documents,
and often more!&lt;/p&gt;
&lt;p&gt;In this talk, we'll see how working with text data is substantially
different from working with numeric data, and show that ingesting a raw
text corpus in a form that will support the construction of a data
product is no trivial task. For instance, when dealing with a text
corpus, you have to consider not only how the data comes in (e.g.
respecting rate limits, terms of use, etc.), but also where to store the
data and how to keep it organized. Because the data comes from the web,
it's often unpredictable, containing not only text but audio files, ads,
videos, and other kinds of web detritus. Since the datasets are large,
you need to anticipate potential performance problems and ensure memory
safety through streaming data loading and multiprocessing. Finally, in
anticipation of the machine learning components, you have to establish a
standardized method of transforming your raw ingested text into a corpus
that's ready for computation and modeling.&lt;/p&gt;
&lt;p&gt;In this talk, we'll explore many of the challenges we experienced along
the way and introduce two Python packages that make this work a bit
easier: &lt;a class="reference external" href="https://pypi.python.org/pypi/baleen/0.3.3"&gt;Baleen&lt;/a&gt; and
&lt;a class="reference external" href="https://github.com/bbengfort/minke"&gt;Minke&lt;/a&gt;. Baleen is a package for
ingesting formal natural language data from the discourse of
professional and amateur writers, like bloggers and news outlets, in a
categorized fashion. Minke extends Baleen with a library that performs
parallel data loading, preprocessing, normalization, and keyphrase
extraction to support machine learning on a large-scale custom corpus.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rebecca Bilbro</dc:creator><pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-19:pycon-us-2017/building-a-gigaword-corpus-lessons-on-data-ingestion-management-and-processing-for-nlp.html</guid></item><item><title>Yellowbrick: Steering Machine Learning with Visual Transformers</title><link>https://pyvideo.org/pydata-london-2017/yellowbrick-steering-machine-learning-with-visual-transformers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Filmed at PyData London 2017&lt;/p&gt;
&lt;p&gt;Description
Yellowbrick is a new library that extends Scikit-Learn's API to incorporate visualizations into machine learning. While the machine learning workflow is increasingly being automated with gridsearch, APIs, and GUIs, in practice, human intuition outperforms exhaustive search. By visualizing model selection, we can not only steer towards robust models, but also avoid common pitfalls and traps.&lt;/p&gt;
&lt;p&gt;Abstract
In machine learning, model selection is a bit more nuanced than simply picking the 'right' or 'wrong' algorithm. In practice, the workflow includes (1) selecting and/or engineering the smallest and most predictive feature set, (2) choosing a set of algorithms from a model family, and (3) tuning the algorithm hyperparameters to optimize performance. Recently, much of this workflow has been automated through grid search methods, standardized APIs, and GUI-based applications. In practice, however, human intuition and guidance can more effectively hone in on quality models than exhaustive search.&lt;/p&gt;
&lt;p&gt;This talk presents a new Python library, Yellowbrick, which extends the Scikit-Learn API with a visual transfomer (visualizer) that can incorporate visualizations of the model selection process into pipelines and modeling workflow. Yellowbrick is an open source, pure Python project that extends Scikit-Learn with visual analysis and diagnostic tools. The Yellowbrick API also wraps matplotlib to create publication-ready figures and interactive data explorations while still allowing developers fine-grain control of figures. For users, Yellowbrick can help evaluate the performance, stability, and predictive value of machine learning models, and assist in diagnosing problems throughout the machine learning workflow.&lt;/p&gt;
&lt;p&gt;In this talk, we'll explore not only what you can do with Yellowbrick, but how it works under the hood (since we're always looking for new contributors!). We'll illustrate how Yellowbrick extends the Scikit-Learn and Matplotlib APIs with a new core object: the Visualizer. Visualizers allow visual models to be fit and transformed as part of the Scikit-Learn Pipeline process - providing iterative visual diagnostics throughout the transformation of high dimensional data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rebecca Bilbro</dc:creator><pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-06:pydata-london-2017/yellowbrick-steering-machine-learning-with-visual-transformers.html</guid></item><item><title>Visual diagnostics for more informed machine learning</title><link>https://pyvideo.org/pydata-carolinas-2016/visual-diagnostics-for-more-informed-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Visualization has a critical role to play throughout the analytic
process. Where static outputs and tabular data can obscure patterns,
human visual analysis can open up insights that lead to more robust
data products. For Python programmers who dabble in machine learning,
visual diagnostics are a must-have for effective feature analysis,
model selection, and parameter tuning.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rebecca Bilbro</dc:creator><pubDate>Fri, 16 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-16:pydata-carolinas-2016/visual-diagnostics-for-more-informed-machine-learning.html</guid></item><item><title>Visual diagnostics for more informed machine learning</title><link>https://pyvideo.org/pydata-dc-2016/visual-diagnostics-for-more-informed-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Visualization has a critical role to play throughout the analytic process. Where static outputs and tabular data can obscure patterns, human visual analysis can open up insights that lead to more robust data products. For Python programmers who dabble in machine learning, visual diagnostics are a must-have for effective feature analysis, model selection, and parameter tuning.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rebecca Bilbro</dc:creator><pubDate>Sun, 09 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-09:pydata-dc-2016/visual-diagnostics-for-more-informed-machine-learning.html</guid><category>learning</category><category>machine learning</category></item><item><title>Visual Diagnostics for More Informed Machine Learning Within and Beyond Scikit-Learn</title><link>https://pyvideo.org/pycon-us-2016/visual-diagnostics-for-more-informed-machine-learning-within-and-beyond-scikit-learn-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Rebecca Bilbro&lt;/p&gt;
&lt;p&gt;Visualization has a critical role to play throughout the analytic process. Where static outputs and tabular data may render patterns opaque, human visual analysis can uncover volumes and lead to more robust programming and better data products. For Python programmers who dabble in machine learning, visual diagnostics are a must-have for effective feature analysis, model selection, and evaluation.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rebecca Bilbro</dc:creator><pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-16:pycon-us-2016/visual-diagnostics-for-more-informed-machine-learning-within-and-beyond-scikit-learn-pycon-2016.html</guid></item></channel></rss>