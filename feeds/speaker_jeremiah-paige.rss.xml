<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Jeremiah Paige</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 08 Feb 2025 00:00:00 +0000</lastBuildDate><item><title>Invisible Walls: Isolating Your Python</title><link>https://pyvideo.org/pycascades-2022/invisible-walls-isolating-your-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Stop building projects that only &amp;quot;work on my machine&amp;quot;, Learn how to isolate your python application by executing in an isolated, reproducible environment that extends beyond the code you write.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeremiah Paige</dc:creator><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-02-06:/pycascades-2022/invisible-walls-isolating-your-python.html</guid><category>PyCascades 2022</category></item><item><title>Intro to Introspection</title><link>https://pyvideo.org/pycascades-2024/intro-to-introspection.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python holds no secrets about your code; except perhaps how to access that information. in this talk you'll find out how to discover almost any information about running python code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeremiah Paige</dc:creator><pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-06:/pycascades-2024/intro-to-introspection.html</guid><category>PyCascades 2024</category></item><item><title>You are sharing your code wrong (and what to do about it)</title><link>https://pyvideo.org/pycascades-2025/you-are-sharing-your-code-wrong-and-what-to-do-about-it.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everyone who writes also distributes Python code. The only reliable way to share Python code is by packaging it, any other way hurts your consumers. Packaging can be an intimidating topic most would rather avoid but following just a few best practices of packaging can make your code much easier to share, even without going through the process of uploading to pypi.org.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeremiah Paige</dc:creator><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-08:/pycascades-2025/you-are-sharing-your-code-wrong-and-what-to-do-about-it.html</guid><category>PyCascades 2025</category></item><item><title>Intro to Introspection</title><link>https://pyvideo.org/pycon-us-2022/intro-to-introspection.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has immensely powerful capabilities to find information about objects and running code; even code you did not directly create. Through examples I will show you where that information is kept, how to retrieve it, and how to make sense of it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeremiah Paige</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-04-27:/pycon-us-2022/intro-to-introspection.html</guid><category>PyCon US 2022</category></item></channel></rss>