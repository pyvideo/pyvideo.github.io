<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Game-Development</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_game-development.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2020-07-23T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Affordable Off-The-Shelf Augmented Reality in Python</title><link href="https://pyvideo.org/europython-2013/affordable-off-the-shelf-augmented-reality-in-python.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Thomas Perl</name></author><id>tag:pyvideo.org,2013-07-04:/europython-2013/affordable-off-the-shelf-augmented-reality-in-python.html</id><content type="html"></content><category term="EuroPython 2013"></category><category term="graphics"></category><category term="sensor fusion"></category><category term="cv"></category><category term="game-development"></category><category term="opengl"></category></entry><entry><title>Programming physics games with Python and OpenGL</title><link href="https://pyvideo.org/europython-2013/programming-physics-games-with-python-and-opengl.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Daniel Pope</name></author><id>tag:pyvideo.org,2013-07-04:/europython-2013/programming-physics-games-with-python-and-opengl.html</id><content type="html"></content><category term="EuroPython 2013"></category><category term="graphics"></category><category term="physics"></category><category term="game-development"></category><category term="opengl"></category></entry><entry><title>How to Run a Corridor Track in a Remote Conference with Python</title><link href="https://pyvideo.org/europython-2020/how-to-run-a-corridor-track-in-a-remote-conference-with-python.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Nicholas Tollervey</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/how-to-run-a-corridor-track-in-a-remote-conference-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How hard can it be..? Let's find out..!&lt;/p&gt;
&lt;p&gt;One of the best aspects of any conference, and EuroPython in particular, is the corridor track. It's when you walk around the physical conference venue and bump into an old buddy, find yourself striking up a conversation with a friendly co-attendee …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How hard can it be..? Let's find out..!&lt;/p&gt;
&lt;p&gt;One of the best aspects of any conference, and EuroPython in particular, is the corridor track. It's when you walk around the physical conference venue and bump into an old buddy, find yourself striking up a conversation with a friendly co-attendee in the coffee queue, or join a huddle of welcoming folks discussing something interesting. The corridor track is where the community comes alive.&lt;/p&gt;
&lt;p&gt;How do we remotely recreate the opportunity for chance encounters, unexpected conversation and exploration of a venue and new city with friends?&lt;/p&gt;
&lt;p&gt;We already have a template for a solution: MUDs (multi-user dungeons/dimensions), back in the day, were hugely popular virtual worlds of text. I asked myself, &amp;quot;what would a MUD written in 2020 look like?&amp;quot;. Then, rather foolishly, &amp;quot;how hard can this be?&amp;quot;. Happily, I'd written a MUD in Python as a recent entry to PyWeek.&lt;/p&gt;
&lt;p&gt;This talk describes how I initially created, extended and then refined my very own MUD, written in Python using asyncio, structlog, sly, redis and other fun technology. What's more, this MUD is special because it's a programmable MUD: it's really a multi-user development platform for on-the-fly coding of interactive virtual worlds.&lt;/p&gt;
&lt;p&gt;What could possibly go wrong..? Let's find out..!&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Conferences and Meet-Ups"></category><category term="Fun and Humor"></category><category term="Game-Development"></category><category term="Python general"></category></entry><entry><title>Unreal Engine 4 e Python: Ora si Puo'</title><link href="https://pyvideo.org/pycon-italia-2017/unreal-engine-4-e-python-ora-si-puo.html" rel="alternate"></link><published>2017-04-07T00:00:00+00:00</published><updated>2017-04-07T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2017-04-07:/pycon-italia-2017/unreal-engine-4-e-python-ora-si-puo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Unreal Engine e’ la piattaforma per lo sviluppo di videogiochi tripla A
piu’ apprezzata nell’industria del settore. Da Agosto 2016 ho avuto
l’onore di integrare il supporto Python sia nel runtime che nell’editor
stesso, permettendo di sviluppare i propri giochi usando esclusivamente
Python o fare scripting …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Unreal Engine e’ la piattaforma per lo sviluppo di videogiochi tripla A
piu’ apprezzata nell’industria del settore. Da Agosto 2016 ho avuto
l’onore di integrare il supporto Python sia nel runtime che nell’editor
stesso, permettendo di sviluppare i propri giochi usando esclusivamente
Python o fare scripting dell’editor per automatizzare la pipeline di
lavoro.&lt;/p&gt;
&lt;p&gt;Il talk mostrera’ quali sono stati i passaggi salienti
dell’integrazione, come l’industria videoludica (ma anche quella
cinematografica) stanno utilizzando il plugin e quali saranno i futuri
sviluppi. Il tutto sara’ condito da un paio di demo interattive
realizzate in python.&lt;/p&gt;
</content><category term="PyCon Italia 2017"></category><category term="game-development"></category></entry><entry><title>Pygame torna a scuola</title><link href="https://pyvideo.org/pycon-italia-2018/pygame-torna-a-scuola.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Maurizio Boscaini</name></author><id>tag:pyvideo.org,2018-04-20:/pycon-italia-2018/pygame-torna-a-scuola.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python è presente da alcuni anni nella scuola italiana. Alcuni licei
scientifici e alcuni istituti tecnici lo utilizzano come linguaggio di
introduzione alla programmazione grazie alla sua immediatezza e
semplicità sintattica, utile in una fase in cui l’attenzione è
concentrata sugli algoritmi e sui fondamenti di un linguaggio …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python è presente da alcuni anni nella scuola italiana. Alcuni licei
scientifici e alcuni istituti tecnici lo utilizzano come linguaggio di
introduzione alla programmazione grazie alla sua immediatezza e
semplicità sintattica, utile in una fase in cui l’attenzione è
concentrata sugli algoritmi e sui fondamenti di un linguaggio di
programmazione.&lt;/p&gt;
&lt;p&gt;Il passo successivo potrebbe essere quello di insegnare con Python anche
il secondo livello classico della programmazione: la programmazione ad
oggetti. La programmazione di videogiochi e la libreria Pygame offrono
la possibilità di rendere questo passaggio relativamente semplice e
sicuramente interessante. Inoltre, la possibilità di affrontare
tematiche concrete e reali come quelle legate alla programmazione di
videogiochi 2D permette di capire la “logica” e l’importanza di un
approccio object oriented. In particolare, il concetto di sprite ben si
presta ad essere preso come “modello” di classe.&lt;/p&gt;
&lt;p&gt;L’intervento presenta i risultati di una sperimentazione didattica
svolta presso l’ITI Marconi di Verona. Il talk parte dalle basi della
programmazione di videogiochi 2D (game loop, immagini, suoni, double
buffering, sprite…) e dei moduli principali di Pygame per arrivare a
costruire un semplice ma non banale videogioco in stile “arcade”.&lt;/p&gt;
&lt;p&gt;Link slides:
&lt;a class="reference external" href="https://docs.google.com/presentation/d/13HSMniO6ttSIN1-NdBcjo9Kez-B7-5szl"&gt;https://docs.google.com/presentation/d/13HSMniO6ttSIN1-NdBcjo9Kez-B7-5szl&lt;/a&gt;-
gT8gYOO5U/edit?usp=sharing&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 15:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon Italia 2018"></category><category term="game-development"></category><category term="programming-paradigms"></category><category term="Python"></category><category term="libraries"></category><category term="games"></category><category term="Pedagogical learning"></category></entry><entry><title>Making Games With PPB</title><link href="https://pyvideo.org/pytexas-2019/making-games-with-ppb.html" rel="alternate"></link><published>2019-04-13T00:00:00+00:00</published><updated>2019-04-13T00:00:00+00:00</updated><author><name>Piper Thunstrom</name></author><id>tag:pyvideo.org,2019-04-13:/pytexas-2019/making-games-with-ppb.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python and video games are both used independently to learn software engineering, so Python game frameworks have an important role in the software development space. Come learn how to make games in Python so you can level up, too.&lt;/p&gt;
</content><category term="PyTexas 2019"></category><category term="game-development"></category><category term="games"></category><category term="PPB"></category></entry></feed>