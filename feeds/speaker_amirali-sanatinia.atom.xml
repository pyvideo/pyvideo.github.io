<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_amirali-sanatinia.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-05-09T00:00:00+00:00</updated><entry><title>Getting Started with Blockchains and Cryptocurrencies in Python</title><link href="https://pyvideo.org/pycon-us-2018/getting-started-with-blockchains-and-cryptocurrencies-in-python.html" rel="alternate"></link><published>2018-05-09T00:00:00+00:00</published><updated>2018-05-09T00:00:00+00:00</updated><author><name>Amirali Sanatinia</name></author><id>tag:pyvideo.org,2018-05-09:pycon-us-2018/getting-started-with-blockchains-and-cryptocurrencies-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Blockchains and cryptocurrencies are getting more popular everyday. The rise and wide adoption of cryptocurrencies such as Bitcoin has attracted a lot of attention, ranging from developers to bankers. However, many people are still not very comfortable with the ideas and concepts behind the blockchain, and workings of cryptocurrencies such as Bitcoin. Therefore, it stops them from entering and exploring the blockchain and cryptocurrency world.&lt;/p&gt;
&lt;p&gt;In this tutorial, we first explore the cryptographic ideas behind the cryptocurrencies, including hashing, public/private cryptography. This will be followed by the basics of a simplified blockchain. We cover mining, incentives, payment records, ownership, etc. Then we delve into working and playing with a private Bitcoin network, by implementing simple programs in Python to create public/private keys, accounts, and transactions. We further look into services that provide exchange rate data on cryptocurrencies and analyze the data.&lt;/p&gt;
</summary><category term="blockchain"></category><category term="cryptocurrency"></category></entry><entry><title>Applied Modern Cryptography in Python</title><link href="https://pyvideo.org/pycon-us-2017/applied-modern-cryptography-in-python.html" rel="alternate"></link><published>2017-05-18T00:00:00+00:00</published><updated>2017-05-18T00:00:00+00:00</updated><author><name>Amirali Sanatinia</name></author><id>tag:pyvideo.org,2017-05-18:pycon-us-2017/applied-modern-cryptography-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Today we use cryptography in almost everywhere. From surfing the web
over https, to working remotely over ssh. Although most developers don't
need to implement cryptography primitives, the knowledge and
understanding of these building block allows them to better deploy them
in their application. In modern crypto we have all the building block to
develop secure application. However, we see instances of insecure code
everywhere. Most of these vulnerabilities are not because of theoretic
shortcomings, but due to bad implementation or a flawed protocol design.
Cryptography is a delicate art where nuances matter, and failure to
comprehend the subtleties of these building blocks leads to critical
vulnerabilities. To add insult to injury most of the resources available
are either outdated or wrong, and inarguably, using bad crypto more
dangerous than not using it.&lt;/p&gt;
&lt;p&gt;In this tutorial we look at the basic building blocks of modern
cryptography. We will cover the encryption techniques, hashing
mechanisms, and key devastation algorithms. Furthermore we review two of
the most widely used protocol suites, SSL and PGP. We conclude by
implementing a simplified version of Pretty Good Privacy (PGP), that is
used for encryption of texts, e-mails, files, directories, and whole
disk partitions.&lt;/p&gt;
</summary></entry><entry><title>Cryptography in Python</title><link href="https://pyvideo.org/pygotham-2016/cryptography-in-python.html" rel="alternate"></link><published>2016-07-17T00:00:00+00:00</published><updated>2016-07-17T00:00:00+00:00</updated><author><name>Amirali Sanatinia</name></author><id>tag:pyvideo.org,2016-07-17:pygotham-2016/cryptography-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Today we use cryptography in almost everywhere. From surfing the web over https, to working remotely over ssh. However, many of us do not appreciate the subtleties of crypto primitives, and the lack of correct and updated resources leads to design and development of vulnerable applications. In this talk, we cover the building block of modern crypto, and how to develop secure applications in Python.&lt;/p&gt;
</summary><category term="Cryptography"></category></entry></feed>