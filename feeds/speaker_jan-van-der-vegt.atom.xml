<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jan-van-der-vegt.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-11-30T00:00:00+00:00</updated><entry><title>Common pitfalls leading to wrongly estimated model performance</title><link href="https://pyvideo.org/pydata-eindhoven-2019/common-pitfalls-leading-to-wrongly-estimated-model-performance.html" rel="alternate"></link><published>2019-11-30T00:00:00+00:00</published><updated>2019-11-30T00:00:00+00:00</updated><author><name>Jan van der Vegt</name></author><id>tag:pyvideo.org,2019-11-30:pydata-eindhoven-2019/common-pitfalls-leading-to-wrongly-estimated-model-performance.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Overfitting is something every data scientist is aware of. Using
techniques like cross validation can help detect overfitting.
Unfortunately, regular cross validation still fails detecting certain
errors. Assumptions can be violated and intricate feature engineering
can lead to target leakage. The goal of this talk is to learn more about
the experimental setup and better approaches.&lt;/p&gt;
&lt;p&gt;Overfitting is a common issue and something every data scientist is
aware of. By using techniques like cross validation, metrics can be used
to approximate the performance of a model on unseen data. Unfortunately,
regular cross validation often still fails the assumptions required for
unbiased performance estimation. Certain statistical assumptions can be
violated and intricate feature engineering can introduce obscure target
leakage that lead to biased estimations.&lt;/p&gt;
&lt;p&gt;The statistical assumptions that we will talk about are the i.i.d.
assumption and the lack of concept drift. The i.i.d. assumption means
that random samples are independent and identically distributed (i.i.d).
The lack of concept drift entails that samples are stationary if we look
at the time dimension of data collection, which means that the
relationship between the features and targets does not depend on the
implicit time.&lt;/p&gt;
&lt;p&gt;Validation schemas are meant to simulate reality as closely as possible.
We will look at the theory behind training, validation and test sets
before discussing issues with standard crossvalidation. Possible
solutions include nested crossvalidation, time window validation and
grouped validation. While the only true verification happens in
production, we will also look into approaches that minimize the risk of
missing target leakage in the validation phase.&lt;/p&gt;
&lt;p&gt;The goal of this talk is to learn more about the intuition behind proper
experimental setup, potential pitfalls to keep in mind and tools to
minimize the associated risks.&lt;/p&gt;
</summary></entry><entry><title>A walk through the isolation forest</title><link href="https://pyvideo.org/pydata-amsterdam-2019/a-walk-through-the-isolation-forest.html" rel="alternate"></link><published>2019-05-10T00:00:00+00:00</published><updated>2019-05-10T00:00:00+00:00</updated><author><name>Jan van der Vegt</name></author><id>tag:pyvideo.org,2019-05-10:pydata-amsterdam-2019/a-walk-through-the-isolation-forest.html</id><summary type="html"></summary><category term="pydata"></category></entry><entry><title>Forecasting airline passengers using designer machine learning</title><link href="https://pyvideo.org/pydata-amsterdam-2018/forecasting-airline-passengers-using-designer-machine-learning.html" rel="alternate"></link><published>2018-05-26T00:00:00+00:00</published><updated>2018-05-26T00:00:00+00:00</updated><author><name>Alexander Backus</name></author><id>tag:pyvideo.org,2018-05-26:pydata-amsterdam-2018/forecasting-airline-passengers-using-designer-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The ability to accurately forecast the amount of passengers that will board a particular flight is crucial for airline operations. But how do we design a machine learning algorithm for this use case and in what ways can we improve it? In this talk, we start with a simple linear model, evolving to increasingly complex deep learning neural network architectures.&lt;/p&gt;
</summary></entry><entry><title>Discrete Event Simulation</title><link href="https://pyvideo.org/pycon-ireland-2017/discrete-event-simulation.html" rel="alternate"></link><published>2017-10-21T00:00:00+00:00</published><updated>2017-10-21T00:00:00+00:00</updated><author><name>Jan van der Vegt</name></author><id>tag:pyvideo.org,2017-10-21:pycon-ireland-2017/discrete-event-simulation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many real-world processes that need to be modeled contain stochastic elements. A variety of mathematical tools is available to model simple processes analytically, However, when things get more complicated we need to fall back on to Monte Carlo simulations. SimPy is a package that uses generators to model discrete, time-based processes, such as queueing systems, financial markets and network protocols. By simulating a process or scenario a significant number of times, we can inspect possibilities of failure, expected utilization rates, targets aimed for in the healthcare industry and how changes we make in the decisions for our processes impact these performance indicators. In the talk, we use the running example of alien UFO factories, where we assume the role of factory manager and need to make decisions on hiring staff, the equipment that we need in our processing pipeline, the contracts with our customers and the actual location of our new factory. Some choices cost less money but are less efficient or introduce higher risks, and dependencies between the different parts of the process make it difficult to oversee the impact of our choices. After showcasing the scenario, we will add these concepts one by one in our SimPy model and link them to discrete event simulation theory. After the implementation, we can gather insights on the risks and the profits and make an informed decision on our factory. This talk is aimed at people interested in Monte Carlo simulation, stochastic optimization, Operations Research, statistics, UFOs or an innovative way of using Python generators.&lt;/p&gt;
</summary></entry></feed>