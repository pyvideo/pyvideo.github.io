<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Brendan Collins</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 27 Apr 2022 00:00:00 +0000</lastBuildDate><item><title>Who Said Wrangling Geospatial Data at Scale was Easy?</title><link>https://pyvideo.org/pycon-us-2022/who-said-wrangling-geospatial-data-at-scale-was-easy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you have ever worked with Census Data, you may be recalling nightmares of hours spent staring at data and finding it impossible to download, store, or convert to a sensible format to begin your analysis. And Census data is not even unstructured data!&lt;/p&gt;
&lt;p&gt;Geospatial Data comes in various formats - GeoJSON, Parquet, Shapefiles, GeoTIFF, etc. But what are the most efficient ways to convert the data into formats that are easy to understand, work with, transfer, and ultimately analyze? Then throw in petabytes worth of data and you hit the challenge of wrangling geospatial data at scale.&lt;/p&gt;
&lt;p&gt;This talk will walk through some of the best ways to handle geospatial data at scale, with a focus on:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The xarray-spatial library (&lt;a class="reference external" href="https://xarray-spatial.org/"&gt;https://xarray-spatial.org/&lt;/a&gt;) for raster-based spatial analysis.&lt;/li&gt;
&lt;li&gt;The RTXpy (&lt;a class="reference external" href="https://github.com/makepath/rtxpy"&gt;https://github.com/makepath/rtxpy&lt;/a&gt;) for GPU-powered spatial analysis.&lt;/li&gt;
&lt;li&gt;Microsoft Planetary Computer (&lt;a class="reference external" href="https://planetarycomputer.microsoft.com/"&gt;https://planetarycomputer.microsoft.com/&lt;/a&gt;) examples of geospatial data processing.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brendan Collins</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-04-27:/pycon-us-2022/who-said-wrangling-geospatial-data-at-scale-was-easy.html</guid><category>PyCon US 2022</category></item><item><title>Lightning Talks</title><link>https://pyvideo.org/pydata-austin-2019/lightning-talks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yurry Pakhotin</dc:creator><pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-12-07:/pydata-austin-2019/lightning-talks.html</guid><category>PyData Austin 2019</category></item><item><title>Scaling up Python for Geo with Distributed Computing</title><link>https://pyvideo.org/scipy-2021/scaling-up-python-for-geo-with-distributed-computing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For large scale Geo projects, such as Natural Resource Management and Conservation efforts, a connection between the GIS and PyData communities goes a long way. With tools like xarray-spatial, coupled with Dask and Numba, GIS professionals can exponentially increase the computing power and scalability of their work for faster results. After this Talk, you will understand how to Generally use Python libraries for Geo applications, without being a software developer: by extracting over the stuff you don't need to know and interfacing with familiar APIs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brendan Collins</dc:creator><pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-12:/scipy-2021/scaling-up-python-for-geo-with-distributed-computing.html</guid><category>SciPy 2021</category></item></channel></rss>