<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Anand Sawant</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_anand-sawant.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-01-11T18:30:00+00:00</updated><subtitle></subtitle><entry><title>What's in your AI code? Learn why every SCA tool is wrong, and how to deal with it</title><link href="https://pyvideo.org/chipy/Whats_in_your_AI_code_Learn_why_every_SCA_tool_is_wrong_and_how_to_deal_with_it.html" rel="alternate"></link><published>2024-01-11T18:30:00+00:00</published><updated>2024-01-11T18:30:00+00:00</updated><author><name>Anand Sawant</name></author><id>tag:pyvideo.org,2024-01-11:/chipy/Whats_in_your_AI_code_Learn_why_every_SCA_tool_is_wrong_and_how_to_deal_with_it.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the rise in AI, there is more focus on Python dependency management and SCA scanning. Python's dependency management system makes it easy for developers to leave dependencies out of the manifest. This means that almost every SCA tool that relies on a manifest will be wrong. We show â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the rise in AI, there is more focus on Python dependency management and SCA scanning. Python's dependency management system makes it easy for developers to leave dependencies out of the manifest. This means that almost every SCA tool that relies on a manifest will be wrong. We show how leveraging program analysis techniques one can avoid the pitfalls of these so-called phantom dependencies.&lt;/p&gt;
</content><category term="ChiPy"></category></entry></feed>