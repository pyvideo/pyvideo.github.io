<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_bestpractices.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-25T00:00:00+00:00</updated><entry><title>The BorgBackup Project</title><link href="https://pyvideo.org/pycon-de-2017/the-borgbackup-project.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Thomas Waldmann</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/the-borgbackup-project.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Thomas Waldmann&lt;/strong&gt; (&amp;#64;ThomasJWaldmann)&lt;/p&gt;
&lt;p&gt;Doing Python since 2001, Linux, FOSS.&lt;/p&gt;
&lt;p&gt;Projects: MoinMoin Wiki, nsupdate.info, bepasty, BorgBackup&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;BorgBackup is a modern, deduplicating backup software written in Python 3.4+, Cython and C.&lt;/p&gt;
&lt;p&gt;The talk will start with a quick presentation about the software and why you may want to use it for your backups.&lt;/p&gt;
&lt;p&gt;Then, I will show how we run the software project: Tools, Services, Best Practices.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Homepage: &lt;a class="reference external" href="https://www.borgbackup.org/"&gt;https://www.borgbackup.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;About the software:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Feature set&lt;/li&gt;
&lt;li&gt;Code&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;li&gt;Safety&lt;/li&gt;
&lt;li&gt;Crypto&lt;/li&gt;
&lt;li&gt;Compression&lt;/li&gt;
&lt;li&gt;Deduplication&lt;/li&gt;
&lt;li&gt;The Fork from attic-backup project (and what happened afterwards)&lt;/li&gt;
&lt;li&gt;Now and Future&lt;/li&gt;
&lt;li&gt;How you can help&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;About the project:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Github&lt;/li&gt;
&lt;li&gt;Sphinx and ReadTheDocs&lt;/li&gt;
&lt;li&gt;Asciinema&lt;/li&gt;
&lt;li&gt;Mailing list on python.org, IRC on freenode&lt;/li&gt;
&lt;li&gt;Testing: pytest, tox, travis-ci, vagrant, pyenv&lt;/li&gt;
&lt;li&gt;&amp;quot;binary&amp;quot; Releases with PyInstaller&lt;/li&gt;
&lt;li&gt;Automatic versioning: setuptools_scm&lt;/li&gt;
&lt;li&gt;Secure releasing with gpg signature&lt;/li&gt;
&lt;li&gt;Python / Cython / C - when to use what&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="bestpractices"></category><category term="crypto"></category><category term="backup"></category><category term="c"></category><category term="cython"></category><category term="python"></category><category term="borgbackup"></category></entry><entry><title>Best Practices for Impossible Deadlines</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--best-practices-for-impossible-deadlin.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Christopher Groskopf</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--best-practices-for-impossible-deadlin.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Best Practices for Impossible Deadlines&lt;/p&gt;
&lt;p&gt;Presented by Christopher Groskopf&lt;/p&gt;
&lt;p&gt;At the Chicago Tribune we develop, test, and deploy production web
applications on schedules that range from two hours to two months. This
talk will discuss the tools and techniques that allow us to make our
deadlines, including automated deployments, frameworks, just-in-time
testing, and more. Attention will be paid to
&lt;a class="reference external" href="htt%20p://github.com/newsapps/beeswithmachineguns"&gt;http://github.com/newsapps/beeswithmachineguns&lt;/a&gt;
and the problems they solve.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;On my first day at the Chicago Tribune I was given a CSV of data about
defoliant spraying in Vietnam and told to build this: Agent Orange. What
followed was one of the most stressful and difficult weeks of my life,
during which I learned an incredible amount about web development. I had
to stop thinking about databases and start thinking about serialized
JSON structures stashed on S3; stop thinking about building tools and
start thinking about mashing up tech that was never designed to be
married (in this case Simile Timeline and Google Maps); stop thinking
about idealistic development practices and start thinking about getting
a working product out the door. In short: I had to rewire my brain for
news.&lt;/p&gt;
&lt;p&gt;This talk will go in-depth on deadline-oriented strategies that I've
learned in a year of building news applications. Some of these revolve
around specific technologies, like fabric for single-keystroke
deployments or Varnish for caching, but most will be matters of
practice, like what to test when you have no time for testing or how to
avoid (yes, avoid!) database migrations.&lt;/p&gt;
&lt;p&gt;They say Django is &amp;quot;the web framework for perfectionists with
deadlines.&amp;quot; This is their Art of War.&lt;/p&gt;
&lt;p&gt;Talk outline:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An anecdote: Agent Orange&lt;/li&gt;
&lt;li&gt;We can't have nice things (or best practices)&lt;/li&gt;
&lt;li&gt;Low-hanging fruit: staging environment, git branches, PEP8.&lt;/li&gt;
&lt;li&gt;Only build it once: Iterations, interviews and stakeholders&lt;/li&gt;
&lt;li&gt;Salvage, share and steal [code]&lt;/li&gt;
&lt;li&gt;Keeping track: Be a ticketing warrior&lt;/li&gt;
&lt;li&gt;Tools improve faster than you do: iterate your stack&lt;/li&gt;
&lt;li&gt;Single-keystroke deployment (fabric)&lt;/li&gt;
&lt;li&gt;Migrations are hard: Building read-only apps&lt;/li&gt;
&lt;li&gt;Don't serve that: Using S3 for hosting&lt;/li&gt;
&lt;li&gt;Caching &amp;gt; optimization (varnish)&lt;/li&gt;
&lt;li&gt;Know your load limits (beeswithmachineguns)&lt;/li&gt;
&lt;li&gt;Configuration-as-application: application frameworks (maps, tables)&lt;/li&gt;
&lt;li&gt;Pair programming &amp;gt; functional testing &amp;gt; unit testing&lt;/li&gt;
&lt;li&gt;except UseWordpress, e: print &amp;quot;No, really&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sites that will be used as examples:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Agent Orange&lt;/li&gt;
&lt;li&gt;Burr Oak Memorial&lt;/li&gt;
&lt;li&gt;Census 2010: Cook county participation rates map&lt;/li&gt;
&lt;li&gt;Area judges and supervision rates of speeders table&lt;/li&gt;
&lt;li&gt;RedEye Homicide Tracker&lt;/li&gt;
&lt;li&gt;Chicago Tribune Elections Center&lt;/li&gt;
&lt;li&gt;2010 Illinois School Report Cards&lt;/li&gt;
&lt;li&gt;TribLocal&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="beeswithmachineguns"></category><category term="bestpractices"></category><category term="casestudy"></category><category term="pycon"></category><category term="pycon2011"></category></entry></feed>