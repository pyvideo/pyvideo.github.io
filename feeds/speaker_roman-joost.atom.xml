<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_roman-joost.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-08-04T00:00:00+00:00</updated><entry><title>Roman Joost - Get started with Zope3</title><link href="https://pyvideo.org/kiwi-pycon-2009/roman-joost---get-started-with-zope3.html" rel="alternate"></link><published>2009-11-07T00:00:00+00:00</published><updated>2009-11-07T00:00:00+00:00</updated><author><name>Roman Joost</name></author><id>tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/roman-joost---get-started-with-zope3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Get started with Zope3&lt;/p&gt;
&lt;p&gt;Presented by Roman Joost&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The talk introduces Zope 3, the main differences to Zope (2) and how to
get started.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;The Zope application server exist for nearly a decade now. One of the
biggest changes to the Zope architecture was the rewrite of the
framework and an introduction of a component architecture. Zope 3 was
born. The talk covers how developers can bootstrap a Zope 3 project
using buildout, what the differences between Zope (2) and Zope 3 is, how
views and models are created and registered, how third party
applications are used and how common pitfalls can be avoided.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</summary><category term="kiwipycon"></category><category term="kiwipycon2009"></category><category term="web"></category><category term="zope"></category><category term="zope3"></category></entry><entry><title>Roman Joost - Grok or how Zope3 reinvented itself</title><link href="https://pyvideo.org/kiwi-pycon-2009/roman-joost---grok-or-how-zope3-reinvented-itself.html" rel="alternate"></link><published>2009-11-07T00:00:00+00:00</published><updated>2009-11-07T00:00:00+00:00</updated><author><name>Roman Joost</name></author><id>tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/roman-joost---grok-or-how-zope3-reinvented-itself.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Grok or how Zope3 reinvented itself&lt;/p&gt;
&lt;p&gt;Presented by Roman Joost&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The talk introduces how to quickly and easily create web applications
with Grok, a web framework based on Zope3 (&lt;a class="reference external" href="http://grok.zope.org/"&gt;http://grok.zope.org/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Grok is a web application framework based on Zope 3 - the popular
application server. One of the main aspects of Grok is the rapid
development of web applications without losing the flexibility Zope 3
provides. The talk covers a quick introduction to Zope 3 and Grok. Based
on an example, I will provide a quick walk through on how easy it is to
create sophisticated web applications with Grok. Additionally, the talk
outlines pitfalls for newcomers and how to avoid them.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</summary><category term="grok"></category><category term="kiwipycon"></category><category term="kiwipycon2009"></category><category term="web"></category><category term="zope3"></category></entry><entry><title>Roman Joost - Interfacing with GIMP using Python</title><link href="https://pyvideo.org/kiwi-pycon-2009/roman-joost---interfacing-with-gimp-using-python.html" rel="alternate"></link><published>2009-11-07T00:00:00+00:00</published><updated>2009-11-07T00:00:00+00:00</updated><author><name>Roman Joost</name></author><id>tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/roman-joost---interfacing-with-gimp-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Interfacing with GIMP using Python&lt;/p&gt;
&lt;p&gt;Presented by Roman Joost&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The talk introduces how developers can extend and interface with the GNU
Image manipulation program using Python.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;The presentation will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a quick overview of programmatic interfaces for GIMP&lt;/li&gt;
&lt;li&gt;a quick introduction in plug-in writing for GIMP&lt;/li&gt;
&lt;li&gt;based on an example plug-in how to interface with GIMP&lt;/li&gt;
&lt;li&gt;potential pitfalls and how to avoid them&lt;/li&gt;
&lt;li&gt;based on an example how to interface with GEGL, the next image
manipulation core for GIMP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</summary><category term="gimp"></category><category term="kiwipycon"></category><category term="kiwipycon2009"></category></entry><entry><title>How your Python program behaves: a story on how to build a program slicer</title><link href="https://pyvideo.org/pycon-au-2015/how-your-python-program-behaves-a-story-on-how-t.html" rel="alternate"></link><published>2015-08-04T00:00:00+00:00</published><updated>2015-08-04T00:00:00+00:00</updated><author><name>RÃ³man Joost</name></author><id>tag:pyvideo.org,2015-08-04:pycon-au-2015/how-your-python-program-behaves-a-story-on-how-t.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Understanding the control flows in programs can be simple but
increasingly difficult once the program becomes more complex. Debugging
these programs can become problematic even worse with a meager amount of
test coverage. So what to do? Increasing test coverage can cost you
quite a lot of time and may not necessarily yield better results.&lt;/p&gt;
&lt;p&gt;Using slicing as a technique for debugging programs aids to understand
control flow better. A slice is a subset of the program which affects
the values of the point of interest, also known as a slicing criterion.
Using program slicing, reasoning about your code will become much
quicker and easier as you can safely ignore any not relevant parts of
the program.&lt;/p&gt;
&lt;p&gt;This talk is about building a slicing tool for Python and the journey to
this solution.&lt;/p&gt;
</summary></entry></feed>