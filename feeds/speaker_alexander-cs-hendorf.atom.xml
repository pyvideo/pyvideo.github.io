<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_alexander-cs-hendorf.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-10-10T00:00:00+00:00</updated><entry><title>Best Coding Practices in Jupyterlab</title><link href="https://pyvideo.org/euroscipy-2019/best-coding-practices-in-jupyterlab.html" rel="alternate"></link><published>2019-09-04T00:00:00+00:00</published><updated>2019-09-04T00:00:00+00:00</updated><author><name>Alexander CS Hendorf</name></author><id>tag:pyvideo.org,2019-09-04:euroscipy-2019/best-coding-practices-in-jupyterlab.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Jupyter notebooks are often a mess. The code produced is working for
one notebook, but it's hard to maintain or to re-use.&lt;/div&gt;
&lt;div class="line"&gt;In this talks I will present some best practices to make code more
readable, better to maintain and re-usable.&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;This will include:&lt;/div&gt;
&lt;div class="line"&gt;- versioning best practices&lt;/div&gt;
&lt;div class="line"&gt;- how to use submodules&lt;/div&gt;
&lt;div class="line"&gt;- coding methods to avoid (e.g. closures)&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Jupyter notebooks are often a mess. The code produced is working for one
notebook, but it's hard to maintain or to re-use. In this talks I will
present some best practices to make code more readable, better to
maintain and re- usable.&lt;/p&gt;
</summary></entry><entry><title>Data Literacy for Managers</title><link href="https://pyvideo.org/pydata-berlin-2019/data-literacy-for-managers.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Alexander CS Hendorf</name></author><id>tag:pyvideo.org,2019-10-10:pydata-berlin-2019/data-literacy-for-managers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Alexander CS Hendorf&lt;/p&gt;
&lt;p&gt;Track:PyData
Artificial Intelligence need to be better understood in enterprises. Close the communications gap between engineers and management. Making data litteracy  happen in your organisation.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/WUEBKT"&gt;https://de.pycon.org/program/WUEBKT&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Explaining AI to Managers üë®‚Äçüíºü§ñüë©‚Äçüíº</title><link href="https://pyvideo.org/europython-2019/explaining-ai-to-managers.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Alexander CS Hendorf</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/explaining-ai-to-managers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Artificial intelligence promises great value. The technology is mostly
understood only by few, yet still unexplainable even for experts.&lt;/div&gt;
&lt;div class="line"&gt;In this talk I'll present how to narrow the hype down to real value
explainable to everyone in your organisation - without the math.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can you downloaded at &lt;a class="reference external" href="http://bit.ly/ai-executives-data-litteracy"&gt;http://bit.ly/ai-executives-data-litteracy&lt;/a&gt;-
europython&lt;/p&gt;
</summary><category term="Analytics"></category><category term="Business"></category><category term="Deep Learning"></category><category term="Management"></category></entry><entry><title>Deep Learning with PyTorch for more Fun and Profit (Part II)</title><link href="https://pyvideo.org/pycon-de-2018/deep-learning-with-pytorch-for-more-fun-and-profit-part-ii.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Alexander CS Hendorf</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/deep-learning-with-pytorch-for-more-fun-and-profit-part-ii.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are all these great blog posts about Deep Learning describing all
that awesome stuff. - Is it all that easy? Let's check! This is part 2
of on ongoing series of adventures in Deep Learning for fun, research
and business.&lt;/p&gt;
&lt;p&gt;We'll look into: style transfer (making a picture look like painting),
speech generation (like Siri or Alexa) and text generation (writing a
story). In this talk I'll describe the whole journey: A fun ride from
the idea to the very end including all the struggles, failures and
successes. Steps, we'll cover:&lt;/p&gt;
</summary></entry><entry><title>PyComic Con</title><link href="https://pyvideo.org/pycon-de-2018/pycomic-con.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Alexander CS Hendorf</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/pycomic-con.html</id><summary type="html"></summary><category term="lightning talk"></category></entry></feed>