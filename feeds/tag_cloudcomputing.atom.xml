<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_cloudcomputing.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-12-07T00:00:00+00:00</updated><entry><title>Evaluation of Cloud Hosting Frameworks for Machine Learning Based Equipment Monitoring</title><link href="https://pyvideo.org/pydata-austin-2019/evaluation-of-cloud-hosting-frameworks-for-machine-learning-based-equipment-monitoring.html" rel="alternate"></link><published>2019-12-07T00:00:00+00:00</published><updated>2019-12-07T00:00:00+00:00</updated><author><name>Pushkar Kumar Jain</name></author><id>tag:pyvideo.org,2019-12-07:pydata-austin-2019/evaluation-of-cloud-hosting-frameworks-for-machine-learning-based-equipment-monitoring.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Machine learning based workflows for heavy asset equipment monitoring are becoming more prevalent. We will present example workflows typical in these industries developed using Python. We will then compare options for 3rd party developers like ourselves in deploying those workflows as web hosted APIs using frameworks provided by the major cloud service providers, namely GCP, Azure and AWS.&lt;/p&gt;
</summary><category term="CloudComputing"></category><category term="machine learning"></category></entry><entry><title>How software can feed the world</title><link href="https://pyvideo.org/pycon-italia-2019/how-software-can-feed-the-world.html" rel="alternate"></link><published>2019-05-04T00:00:00+00:00</published><updated>2019-05-04T00:00:00+00:00</updated><author><name>Christian Barra</name></author><id>tag:pyvideo.org,2019-05-04:pycon-italia-2019/how-software-can-feed-the-world.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Infarm is a FaaS, Farming as a Service, and whether you believe it or
not, our business is in-house farming at scale.&lt;/p&gt;
&lt;p&gt;We design and build our farms, grow vegetables and sell them, and the
backbone of our infrastructure is based on Python.&lt;/p&gt;
&lt;p&gt;More than 10 million observations recorded from our farms, rapidly
increasing given our expansion to new markets, feed our farm management
system that allows the operators, plant scientists, and supervisors to
monitor each farm in real-time.&lt;/p&gt;
&lt;p&gt;During this talk I will introduce our IoT infrastructure, how we use
Python and how we plan to improve the capabilities of our farms by
adding edge machine learning.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1785"&gt;https://python.it/feedback-1785&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Saturday 4 May&lt;/strong&gt; at 18:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="microservices"></category><category term="iot"></category><category term="CloudComputing"></category><category term="microcontroller"></category><category term="influxdb"></category><category term="raspberrypi"></category><category term="machine-learning"></category><category term="social-impact"></category><category term="python3"></category></entry><entry><title>Serverless Computing con Python e AWS: Redux</title><link href="https://pyvideo.org/pycon-italia-2018/serverless-computing-con-python-e-aws-redux.html" rel="alternate"></link><published>2018-04-22T00:00:00+00:00</published><updated>2018-04-22T00:00:00+00:00</updated><author><name>Federico Caboni</name></author><id>tag:pyvideo.org,2018-04-22:pycon-italia-2018/serverless-computing-con-python-e-aws-redux.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le innovazioni portate dal paradigma serverless sono ormai
un’alternativa concreta allo sviluppo di servizi monolitici. L’idea è
quella di poter pubblicare, nel Cloud, funzioni e pezzi di codice che
vengono invocati automaticamente al verificarsi di certi eventi, con
scalabilità orizzontale e senza doversi preoccupare della gestione dello
stack tecnologico sottostante.&lt;/p&gt;
&lt;p&gt;Nel corso di questo talk vedremo:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;la più breve introduzione al Cloud Computing del mondo;&lt;/li&gt;
&lt;li&gt;cosa sono i microservizi e come funzione il paradigma serverless;&lt;/li&gt;
&lt;li&gt;quali sono i casi d’uso che beneficiano di più da questo paradigma;&lt;/li&gt;
&lt;li&gt;come costruire un’applicazione serverless in Python con i componenti
di Amazon Web Services (Lambda, API Gateway, DynamoDB, S3…);&lt;/li&gt;
&lt;li&gt;come coordinare l’esecuzione del nostro codice Python (AWS Step
Functions);&lt;/li&gt;
&lt;li&gt;come rendere tutto ancora più semplice e ripetibile con l’uso di
framework specifici (Chalice, Serverless)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 14:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="serverless"></category><category term="microservices"></category><category term="CloudComputing"></category><category term="aws"></category><category term="Amazon"></category><category term="cloud"></category></entry><entry><title>Scaling your Data infrastructure</title><link href="https://pyvideo.org/pycon-italia-2018/scaling-your-data-infrastructure.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Christian Barra</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/scaling-your-data-infrastructure.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;This talk aims to answer a few questions:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What do you do when you need to move your model from your laptop to
production?&lt;/li&gt;
&lt;li&gt;Is &lt;tt class="docutils literal"&gt;big data == I need to use JVM&lt;/tt&gt; the right assumption?&lt;/li&gt;
&lt;li&gt;How can I put my jupyter notebook in production?&lt;/li&gt;
&lt;li&gt;How do you apply the best software engineering practices (testing and
ci for example) inside your data science process?&lt;/li&gt;
&lt;li&gt;How do you “decouple” your data scientists, developers and devops
teams?&lt;/li&gt;
&lt;li&gt;How do you guarantee the reproducibility of your models?&lt;/li&gt;
&lt;li&gt;How do you scale your training process when does not fit in memory
anymore?&lt;/li&gt;
&lt;li&gt;How do you serve your models and provide an easy rollback system?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Agenda:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The Data Science workflow&lt;/li&gt;
&lt;li&gt;Scaling is not just a matter of the size of your Data&lt;/li&gt;
&lt;li&gt;Scaling when the size of your Data matters&lt;/li&gt;
&lt;li&gt;DDS, Dockerized Data Science&lt;/li&gt;
&lt;li&gt;Cassiny&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’ll share my experience highlighting some of the challenges I faced and
the solutions I came up to answer these questions.&lt;/p&gt;
&lt;p&gt;During this presentation I will mention libraries like jupyter, atom,
scikit- learn, dask, ray, parquet, arrow and many others.&lt;/p&gt;
&lt;p&gt;The principles and best practices I will share are something that you
can apply, more or less easily, if you are running or in the process to
run a production system based on the Python stack.&lt;/p&gt;
&lt;p&gt;This talk will focus on (my) best practices to run the Python Data stack
together and I will also talk about Cassiny, an open source project I
started, that aims to simplify your life if you want to use a completely
Python based solution in your data science workflow.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 11:00 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Jupyter"></category><category term="CloudComputing"></category><category term="pydata"></category><category term="#lessonslearned"></category><category term="Big-Data"></category><category term="S3"></category><category term="Data-Scientist"></category><category term="#amicodialessia"></category><category term="java"></category><category term="docker"></category><category term="cloud"></category></entry><entry><title>Facial Analysis Techniques for Pythonista (and beyond!)</title><link href="https://pyvideo.org/pycon-italia-2017/facial-analysis-techniques-for-pythonista-and-beyond.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Alex Casalboni</name></author><id>tag:pyvideo.org,2017-04-09:pycon-italia-2017/facial-analysis-techniques-for-pythonista-and-beyond.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The ability to detect, track, and analyze faces opens up a wide range of
interesting use cases, ranging from interactive smart applications and
real- time video processing, all the way to biometric security and
augmented reality.&lt;/p&gt;
&lt;p&gt;This talk will showcase the available &lt;strong&gt;tools built by the Python
community&lt;/strong&gt; and their corresponding pros &amp;amp; cons, limitations, and
complexity. While discussing the possible scenarios and what is actually
required to &lt;strong&gt;DIY with Python&lt;/strong&gt;, I will compare such handmade solutions
with &lt;strong&gt;Cloud-based products and APIs&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;: basic understanding of Python’s data science stack
(especially numpy).&lt;/p&gt;
</summary><category term="CloudComputing"></category><category term="aws"></category><category term="scikit-learn"></category><category term="scikit-image"></category><category term="google-cloud"></category><category term="Deep-Learning"></category><category term="opencv"></category><category term="scikits"></category><category term="cv"></category><category term="Machine Learning"></category><category term="Facial-Analysis"></category><category term="dlib"></category><category term="Artificial Intelligence"></category></entry><entry><title>Serverless computing con Python e AWS</title><link href="https://pyvideo.org/pycon-italia-2017/serverless-computing-con-python-e-aws.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Federico Caboni</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/serverless-computing-con-python-e-aws.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il paradigma serverless è una delle innovazioni più recenti e
interessanti negli ultimi anni: l’idea di base è quella di poter
pubblicare, nel Cloud, funzioni e pezzi di codice che vengono invocati
automaticamente al verificarsi di certi eventi, con scalabilità
potenzialmente infinita e senza doversi preoccupare della gestione dello
stack tecnologico sottostante.&lt;/p&gt;
&lt;p&gt;Nel corso di questo talk vi mostrerò:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;la più breve introduzione al Cloud Computing del mondo;&lt;/li&gt;
&lt;li&gt;cosa sono i microservizi e come funzione il paradigma serverless;&lt;/li&gt;
&lt;li&gt;quali sono i casi d’uso che beneficiano di più da questo paradigma;&lt;/li&gt;
&lt;li&gt;come costruire un’applicazione serverless in Python con i componenti
di Amazon Web Services (Lambda, API Gateway, DynamoDB, S3…);&lt;/li&gt;
&lt;li&gt;come coordinare l’esecuzione del nostro codice Python (AWS Step
Functions);&lt;/li&gt;
&lt;li&gt;come rendere tutto ancora più semplice con l’uso di framework
specifici (Chalice, Serverless)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;e, se avanza tempo:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;il senso della vita.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="serverless"></category><category term="microservices"></category><category term="CloudComputing"></category><category term="aws"></category><category term="chalice"></category><category term="Amazon"></category><category term="cloud"></category></entry></feed>