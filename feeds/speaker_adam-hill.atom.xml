<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Adam Hill</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_adam-hill.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-06-03T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Create a full stack, reactive website in Django without JavaScript</title><link href="https://pyvideo.org/djangocon-europe-2021/create-a-full-stack-reactive-website-in-django-without-javascript.html" rel="alternate"></link><published>2021-06-03T00:00:00+00:00</published><updated>2021-06-03T00:00:00+00:00</updated><author><name>Adam Hill</name></author><id>tag:pyvideo.org,2021-06-03:/djangocon-europe-2021/create-a-full-stack-reactive-website-in-django-without-javascript.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django is a great web framework for &amp;quot;perfectionists with deadlines&amp;quot; and provides a lot of built-in functionality when building server-side websites. However, a lot has changed on the web since its inception in 2005, and now it has become somewhat common advice for modern web applications to only use …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django is a great web framework for &amp;quot;perfectionists with deadlines&amp;quot; and provides a lot of built-in functionality when building server-side websites. However, a lot has changed on the web since its inception in 2005, and now it has become somewhat common advice for modern web applications to only use it as an API backend, if at all.&lt;/p&gt;
&lt;p&gt;However, there are a few Django packages that enable building a reactive website while still utilizing all of the strengths of Django. This talk will cover the benefits of this approach, a brief overview of how other programming languages are solving this same problem, and a few Django projects which can help developers build interactive websites without writing any custom JavaScript.&lt;/p&gt;
&lt;p&gt;Repository with example code, slides, and a transcript: &lt;a class="reference external" href="https://github.com/adamghill/djangocon-eu-2021-conference-talk"&gt;https://github.com/adamghill/djangocon-eu-2021-conference-talk&lt;/a&gt;.&lt;/p&gt;
</content><category term="DjangoCon Europe 2021"></category><category term="Django"></category><category term="DjangoConEU"></category><category term="djangoconeu2021"></category></entry><entry><title>Searching for Shady Patterns: Shining a light on UK corporate ownership</title><link href="https://pyvideo.org/pydata-london-2018/searching-for-shady-patterns-shining-a-light-on-uk-corporate-ownership.html" rel="alternate"></link><published>2018-04-29T00:00:00+00:00</published><updated>2018-04-29T00:00:00+00:00</updated><author><name>Adam Hill</name></author><id>tag:pyvideo.org,2018-04-29:/pydata-london-2018/searching-for-shady-patterns-shining-a-light-on-uk-corporate-ownership.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In 2016 the UK government launched the world’s first “beneficial
ownership” register; a requirement for all UK companies to register who
controlled them. The register comprises of in excess of 4.5 million
companies and 4 million individual people. We present how we built a
graph database mapping …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In 2016 the UK government launched the world’s first “beneficial
ownership” register; a requirement for all UK companies to register who
controlled them. The register comprises of in excess of 4.5 million
companies and 4 million individual people. We present how we built a
graph database mapping the UK network of control structures using Python
and a Neo4j graph database, and the first insights.&lt;/p&gt;
</content><category term="PyData London 2018"></category></entry></feed>