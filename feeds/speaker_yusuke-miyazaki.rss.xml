<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 16 Sep 2019 00:00:00 +0000</lastBuildDate><item><title>Python ウェブアプリケーションのためのプロファイラの実装</title><link>https://pyvideo.org/pycon-jp-2019/python-uebuapurikeshiyonnotamenopurohuairanoshi-zhuang.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;01_204_Python ウェブアプリケーションのためのプロファイラの実装(Yusuke Miyazaki)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yusuke Miyazaki</dc:creator><pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-09-16:pycon-jp-2019/python-uebuapurikeshiyonnotamenopurohuairanoshi-zhuang.html</guid></item><item><title>型ヒントについて考えよう!</title><link>https://pyvideo.org/pycon-japan-2016/xing-hintonitsuitekao-eyou.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.5 に導入された型ヒント (Type Hints) は、プログラム中に型アノテーションを記述する方法を標準化し、型チェッカーなどのツールで利用できるようになっています。このセッションでは Python の型ヒントについて紹介した後、他の言語での同様の機能について紹介し、Python の型ヒントの優れているところ、劣っているところを明らかにし、今後の型ヒントの活用方法について考えます。&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0484/"&gt;PEP 484&lt;/a&gt; で標準化され、Python 3.5 から導入された型ヒント (Type Hints) は、Python プログラムの中に型アノテーションを記述する方法を標準化します。型ヒントは PEP 484 の元になった mypy などの型チェッカーで利用できますが、2016年現在あまり広く利用されているとは言い難い状況です。&lt;/p&gt;
&lt;p&gt;このセッションではまず、 Python の型ヒントが何を標準化していて、何をすることができるのか、型チェッカーの &lt;a class="reference external" href="http://mypy-lang.org/"&gt;mypy&lt;/a&gt; や IDE の &lt;a class="reference external" href="https://www.jetbrains.com/pycharm/"&gt;PyCharm&lt;/a&gt; などの例を通して紹介し、Python の型ヒントの現状を理解します。&lt;/p&gt;
&lt;p&gt;次に、Python の型ヒントの元となった漸進的型付け (Gradual Typing) の考えが導入されている、&lt;a class="reference external" href="https://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt; や &lt;a class="reference external" href="http://hacklang.org/"&gt;Hack&lt;/a&gt; などの他の言語で型アノテーションがどのように利用されているかを紹介し、Python の型ヒントが他の言語に比べて優れている部分や、劣っている部分について明らかにします。&lt;/p&gt;
&lt;p&gt;最後に、これまでの議論を踏まえて、Python の型ヒントをどのように利用していくのが良いかを、様々な視点から考えます。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yusuke Miyazaki</dc:creator><pubDate>Thu, 22 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-22:pycon-japan-2016/xing-hintonitsuitekao-eyou.html</guid></item></channel></rss>