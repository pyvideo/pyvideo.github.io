<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Helianildes Silva Ferreira</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_helianildes-silva-ferreira.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-07-27T00:00:00+00:00</updated><subtitle></subtitle><entry><title>From Fortran to Python: A Conversation Across Generations of Scientific Computing</title><link href="https://pyvideo.org/pyohio-2025/from-fortran-to-python-a-conversation-across-generations-of-scientific-computing.html" rel="alternate"></link><published>2025-07-27T00:00:00+00:00</published><updated>2025-07-27T00:00:00+00:00</updated><author><name>Rodrigo Silva Ferreira</name></author><id>tag:pyvideo.org,2025-07-27:/pyohio-2025/from-fortran-to-python-a-conversation-across-generations-of-scientific-computing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What was it like to write scientific code before personal computers,
IDEs, or instant feedback loops? In this talk, a mother and son — one
who programmed in &lt;em&gt;Fortran&lt;/em&gt; using punch cards and one who writes
&lt;em&gt;Python&lt;/em&gt; today in modern IDEs — reflect on how programming practices,
tools, and mindsets have …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What was it like to write scientific code before personal computers,
IDEs, or instant feedback loops? In this talk, a mother and son — one
who programmed in &lt;em&gt;Fortran&lt;/em&gt; using punch cards and one who writes
&lt;em&gt;Python&lt;/em&gt; today in modern IDEs — reflect on how programming practices,
tools, and mindsets have evolved across generations.&lt;/p&gt;
&lt;p&gt;Through personal stories and a short demo of a scientific simulation, we
compare the experience of coding the same computational model decades
apart. This talk is less about syntax and more about what has changed
(and what hasn’t) in how we approach problem-solving, debugging, and
scientific thinking in code.&lt;/p&gt;
&lt;p&gt;Whether you're a veteran programmer or just getting started, join us for
a thoughtful, engaging, and intergenerational exploration of scientific
computing — from punch cards to &lt;em&gt;Python&lt;/em&gt; notebooks and modern IDEs.&lt;/p&gt;
</content><category term="PyOhio 2025"></category></entry></feed>