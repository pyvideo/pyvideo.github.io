<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Florian Haas</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 04 Jun 2021 00:00:00 +0000</lastBuildDate><item><title>Putting a shell or a desktop in your Django app</title><link>https://pyvideo.org/djangocon-europe-2021/putting-a-shell-or-a-desktop-in-your-django-app.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In our City Cloud Academy (&lt;a class="reference external" href="https://academy.citycloud.com"&gt;https://academy.citycloud.com&lt;/a&gt;) learning platform, we enable learners to interact with real-world hands-on lab environments, so that they can learn complex technologies like OpenStack, Kubernetes, Terraform, Ceph, Ansible, and others. To do that, we use Apache Guacamole (&lt;a class="reference external" href="https://guacamole.apache.org/)'s"&gt;https://guacamole.apache.org/)'s&lt;/a&gt; &lt;cite&gt;guacd&lt;/cite&gt; service to provide learners with interactive shell terminals — or even full desktop environments — that run right in people's browsers, no additional software required.&lt;/p&gt;
&lt;p&gt;The Guacamole platform is normally deployed in conjunction with a Java servlet environment (&lt;a class="reference external" href="https://guacamole.apache.org/doc/gug/guacamole-architecture.html#web-application"&gt;https://guacamole.apache.org/doc/gug/guacamole-architecture.html#web-application&lt;/a&gt;) (commonly Apache Tomcat). But the Guacamole protocol is not tied to the Java language in any way, and a Python websocket proxy (pyguacamole (&lt;a class="reference external" href="https://pypi.org/project/pyguacamole/"&gt;https://pypi.org/project/pyguacamole/&lt;/a&gt;)) is readily available under an open source (MIT) license.&lt;/p&gt;
&lt;p&gt;In this talk, we discuss how we implemented a learning platform (based on Open edX (&lt;a class="reference external" href="https://open.edx.org"&gt;https://open.edx.org&lt;/a&gt;)) that deploys an ASGI service under Daphne (&lt;a class="reference external" href="https://docs.djangoproject.com/en/3.1/howto/deployment/asgi/daphne/"&gt;https://docs.djangoproject.com/en/3.1/howto/deployment/asgi/daphne/&lt;/a&gt;), uses pyguacamole to provide an asynchronous websocket connection to a Guacamole service, and thus creates a highly scalable, interactive, and immersive learning environment that helps people learn complex technology with no hardware or cloud investment at all.&lt;/p&gt;
&lt;p&gt;## Slides&lt;/p&gt;
&lt;p&gt;The slides (with full speaker notes) are up at &lt;a class="reference external" href="https://fghaas.github.io/djceu2021"&gt;https://fghaas.github.io/djceu2021&lt;/a&gt; and &lt;a class="reference external" href="https://mrtmm.github.io/djceu2021"&gt;https://mrtmm.github.io/djceu2021&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Maari Tamm</dc:creator><pubDate>Fri, 04 Jun 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-06-04:/djangocon-europe-2021/putting-a-shell-or-a-desktop-in-your-django-app.html</guid><category>DjangoCon Europe 2021</category><category>Django</category><category>DjangoConEU</category><category>djangoconeu2021</category></item><item><title>What I now know about HAproxied Django DB connections, and wish I'd known sooner</title><link>https://pyvideo.org/pycon-au-2020/what-i-now-know-about-haproxied-django-db-connections-and-wish-id-known-sooner.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Florian Haas&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/YZYTMX"&gt;https://2020.pycon.org.au/program/YZYTMX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When you’re running a Django application, the following things are all pretty commonplace:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You use MySQL or MariaDB as your Django database backend.&lt;/li&gt;
&lt;li&gt;You don’t run a single standalone MySQL/MariaDB instance, but a Galera cluster.&lt;/li&gt;
&lt;li&gt;You run asynchronous tasks in Celery.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now suppose your application doesn’t talk to your Galera cluster directly, but via HAProxy. That’s not exactly unheard of; in fact it’s an officially documented HA option for Galera. And, to complicate things further, this may be a feature of your setup that you, the application developer, don't necessarily have control over.&lt;/p&gt;
&lt;p&gt;In such a scenario, you may be dealing with very &amp;quot;interesting&amp;quot; features of HAproxy which — if you are unfamiliar with them — can throw you very nasty curveballs.&lt;/p&gt;
&lt;p&gt;Having been in the position where, together with my team, I &lt;em&gt;was&lt;/em&gt; indeed unfamiliar with some of HAProxy's/Galera's intricacies and we were thus on he receiving end of those curveballs, I am taking this opportunity to share our findings so that our pain is someone else's gain. You have multiple options at your disposal — some in your infrastructure setup, and some in your Django application code. This talk covers both those angles.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 13:55:00 2020 at Obvious&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Haas</dc:creator><pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-09-05:/pycon-au-2020/what-i-now-know-about-haproxied-django-db-connections-and-wish-id-known-sooner.html</guid><category>PyCon AU 2020</category><category>FlorianHaas</category><category>PyCon</category><category>PyConAU</category><category>PyConline</category><category>Python</category><category>pyconau</category><category>pyconau_2020</category></item></channel></rss>