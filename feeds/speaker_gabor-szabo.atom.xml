<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_gabor-szabo.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-06-03T00:00:00+00:00</updated><entry><title>Fixtures and Test Doubles in Pytest - Gabor Szabo - PyCon Israel 2019</title><link href="https://pyvideo.org/pycon-israel-2019/fixtures-and-test-doubles-in-pytest-gabor-szabo-pycon-israel-2019.html" rel="alternate"></link><published>2019-06-03T00:00:00+00:00</published><updated>2019-06-03T00:00:00+00:00</updated><author><name>Gabor Szabo</name></author><id>tag:pyvideo.org,2019-06-03:pycon-israel-2019/fixtures-and-test-doubles-in-pytest-gabor-szabo-pycon-israel-2019.html</id><summary type="html"></summary></entry><entry><title>Testing with PyTest</title><link href="https://pyvideo.org/pycon-israel-2017/testing-with-pytest.html" rel="alternate"></link><published>2017-06-12T00:00:00+00:00</published><updated>2017-06-12T00:00:00+00:00</updated><author><name>Gabor Szabo</name></author><id>tag:pyvideo.org,2017-06-12:pycon-israel-2017/testing-with-pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Write automated tests is one of the best ways to ensure high quality code and a peace of mind for both developer and her managers. In this session we'll learn how to write tests using pytest. We will start by introducing pytest and we will see how to use it to write unittest for brand new code. TDD style. Then we'll take a look at the case where you already have a lot of code without tests and consider how can we approach that problem. We'll see how to write integration tests and how to mock the rest of the world.&lt;/p&gt;
</summary></entry><entry><title>Fight or Flight? - dealing with real world applications in Python</title><link href="https://pyvideo.org/pycon-israel-2016/fight-or-flight-dealing-with-real-world-applications-in-python.html" rel="alternate"></link><published>2016-09-22T00:00:00+00:00</published><updated>2016-09-22T00:00:00+00:00</updated><author><name>Gabor Szabo</name></author><id>tag:pyvideo.org,2016-09-22:pycon-israel-2016/fight-or-flight-dealing-with-real-world-applications-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You have just landed a new job as a hero Python developer. Your first task is simple. Make a little tweak to an existing application. To your horror you discover the code is a mess written in the past 10 years by many different people who have just started their career as Python programmers. They all have already move on. They left behind the code, but it has no tests and no documentation. Oh and by the way, the company depends on the application. What do you do now? Fight or flight? In this talk you will hear about a couple of ways to fight with such a beast.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="http://il.pycon.org/2016/static/sessions/gabor-szabo.pdf"&gt;http://il.pycon.org/2016/static/sessions/gabor-szabo.pdf&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>