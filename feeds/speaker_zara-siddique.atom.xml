<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_zara-siddique.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-09-18T00:00:00+00:00</updated><entry><title>News + Networks: How the media is influencing you</title><link href="https://pyvideo.org/pycon-uk-2018/news-networks-how-the-media-is-influencing-you.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Zara Siddique</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/news-networks-how-the-media-is-influencing-you.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We live in our own bubbles with our own news preferences and biases, but
to what extent are you aware of your own?&lt;/p&gt;
&lt;p&gt;This talk will use keyword data to visualise the biggest topics in news
and how they are linked to one another. I will explain my journey to
gather this data (from web scraping with Beautiful Soup to Natural
Language Processing techniques) and then discuss what tools Python
provides for visualising this as a graph.&lt;/p&gt;
&lt;p&gt;We'll look at different news outlets and compare their graphs, helping
to identify how the media selectively reports news and can influence
society. Comparing these networks can also help us see any differences
between what we think is important and what is actually reported on.&lt;/p&gt;
</summary></entry><entry><title>How close can I get Amazon’s Alexa to Black Mirror’s Cookie</title><link href="https://pyvideo.org/pycon-uk-2017/how-close-can-i-get-amazons-alexa-to-black-mirrors-cookie.html" rel="alternate"></link><published>2017-10-28T10:30:00+01:00</published><updated>2017-10-28T10:30:00+01:00</updated><author><name>Zara Siddique</name></author><id>tag:pyvideo.org,2017-10-28:pycon-uk-2017/how-close-can-i-get-amazons-alexa-to-black-mirrors-cookie.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From Google Home to Apple’s upcoming HomePod, smart assistants are popping up left, right and centre. As technology becomes more and more embedded within our lives, and our relationship with it becomes increasingly intimate, we must stop and ask some rather uncomfortable questions.&lt;/p&gt;
&lt;p&gt;But not to worry, we’ll get to that later! This talk will begin with my attempts to tame Alexa, and how my code compares with a scene in the Black Mirror episode ‘White Christmas’. In this episode, Oona Chaplin makes a ‘cookie’ of herself in order to run her digitally controlled house. If you’ve ever watched a Black Mirror episode, you may be aware of its ability to show the dark side to our tech obsessions, and provide a bleak reflection of our world as it is now. And if you haven’t had the joy, don’t worry, I’ll introduce you to an episode!&lt;/p&gt;
&lt;p&gt;We will then dive into a (brief) discussion on the future of technologies such as Google Glass and Amazon Echo, and the consequences of our lives becoming slowly more entrenched with technologies like these.&lt;/p&gt;
</summary></entry><entry><title>Addition: well, that escalated quickly</title><link href="https://pyvideo.org/pycon-uk-2016/addition-well-that-escalated-quickly.html" rel="alternate"></link><published>2016-09-29T00:00:00+00:00</published><updated>2016-09-29T00:00:00+00:00</updated><author><name>Zara Siddique</name></author><id>tag:pyvideo.org,2016-09-29:pycon-uk-2016/addition-well-that-escalated-quickly.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Zara Siddique&lt;/p&gt;
&lt;p&gt;I'm interested in optimal addition chains. These first seemed to me like an adding game with only one rule: you can only use numbers you’ve used before, and you have to start at 1.&lt;/p&gt;
&lt;p&gt;What if I were to ask you how many additions we needed to get to 4? Well 1 + 1 = 2 and 2 + 2 = 4, which is clearly 2 equations. Now try to get to 172, and do it with as few additions as possible. This is where the problem begins.&lt;/p&gt;
&lt;p&gt;This talk will explore the various methods one can use to calculate optimal addition chains. We will look at why many intuitive solutions don’t work (no matter how hard I tried), and why there is not yet an efficient solution.&lt;/p&gt;
&lt;p&gt;The final part looks at the Scholz Conjecture, the most famous unsolved problem related to addition chains, and one way you can use Python to show whether it is true for specific numbers.&lt;/p&gt;
</summary></entry></feed>