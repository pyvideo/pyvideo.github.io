<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 05 Feb 2016 00:00:00 +0000</lastBuildDate><item><title>Armin Rigo – CFFI: Call C from Python – SPS16</title><link>https://pyvideo.org/swiss-python-summit-2016/armin-rigo-cffi-call-c-from-python-sps16.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;I will introduce CFFI, a way to call C libraries from Python. It was designed in 2012 to get away from Python's C extension modules, which require hand-written CPython-specific C code. CFFI is arguably simpler to use: you call C from Python directly, instead of going through an intermediate layer. It is not tied to CPython's internals, and works natively on two different Python implementations: CPython and PyPy. (It is also a big success, according to the download statistics.)&lt;/p&gt;
&lt;p&gt;PyPy is an alternative Python implementation, which is highly compatible with CPython but rewritten from scratch – in Python. It is much faster than the standard CPython on long-running tasks thanks to its Just-in-Time compiler. I will talk about it during the later part of the talk.&amp;quot;&lt;/p&gt;
&lt;p&gt;Talk recorded at the Swiss Python Summit on February 5th, 2016.&lt;/p&gt;
&lt;p&gt;Licensed as Creative Commons Attribution 4.0 International.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Armin Rigo</dc:creator><pubDate>Fri, 05 Feb 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-02-05:swiss-python-summit-2016/armin-rigo-cffi-call-c-from-python-sps16.html</guid></item><item><title>Chihway Chang – Coding/Decoding the Cosmos – SPS16</title><link>https://pyvideo.org/swiss-python-summit-2016/chihway-chang-codingdecoding-the-cosmos-sps16.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Coding/Decoding the Cosmos: Python Applications in Astrophysics&lt;/p&gt;
&lt;p&gt;&amp;quot;Today, Python tools are used almost everywhere in astrophysics: From modelling the images of stars and galaxies seen in modern large telescopes, to statistical analyses of the data products, to inferring the history of our Universe. I will first give a general overview of the kind of Python packages used in the field and then go in to some specific examples of application that I am involved with. These include mapping the dark matter in the Universe and flying drones to calibrate radio telescopes.&amp;quot;&lt;/p&gt;
&lt;p&gt;Talk recorded at the Swiss Python Summit on February 5th, 2016.&lt;/p&gt;
&lt;p&gt;Licensed as Creative Commons Attribution 4.0 International.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chihway Chang</dc:creator><pubDate>Fri, 05 Feb 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-02-05:swiss-python-summit-2016/chihway-chang-codingdecoding-the-cosmos-sps16.html</guid></item><item><title>Dave Halter – API Design is Hard – SPS16</title><link>https://pyvideo.org/swiss-python-summit-2016/dave-halter-api-design-is-hard-sps16.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Have you ever been really annoyed about some APIs of open source libraries? There's are good reasons to be. Most libraries are devoted to backwards compatibility and are not able to change content anymore.
Coming from writing a Python library called &amp;quot;Jedi&amp;quot;, I can feel with you. I have hated my own APIs more than enough. I have learned the hard way and want to tell you a few things I would have loved to hear years earlier!&amp;quot;&lt;/p&gt;
&lt;p&gt;Talk recorded at the Swiss Python Summit on February 5th, 2016.&lt;/p&gt;
&lt;p&gt;Licensed as Creative Commons Attribution 4.0 International.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Halter</dc:creator><pubDate>Fri, 05 Feb 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-02-05:swiss-python-summit-2016/dave-halter-api-design-is-hard-sps16.html</guid></item><item><title>Florian Bruhin – Pytest: Rapid Simple Testing – SPS16</title><link>https://pyvideo.org/swiss-python-summit-2016/florian-bruhin-pytest-rapid-simple-testing-sps16.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Pytest is a Python testing tool which eliminates boilerplate and makes testing Python code more easy and fun. In this talk, I'll give you a short introduction to Pytest, show you what it can do, and why it's so much better than unittest.py.&amp;quot;&lt;/p&gt;
&lt;p&gt;Talk recorded at the Swiss Python Summit on February 5th, 2016.&lt;/p&gt;
&lt;p&gt;Licensed as Creative Commons Attribution 4.0 International.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Bruhin</dc:creator><pubDate>Fri, 05 Feb 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-02-05:swiss-python-summit-2016/florian-bruhin-pytest-rapid-simple-testing-sps16.html</guid></item><item><title>Martin Christen – 3D Computer Graphics with Python – SPS16</title><link>https://pyvideo.org/swiss-python-summit-2016/martin-christen-3d-computer-graphics-with-python-sps16.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;In this talk several technologies around 3D graphics for Python are presented. A brief introduction to scripting Blender shows the possibilities of creating complex 3D worlds and games. The second part shows how to create low level 3D applications and how Python is used to create preprocessed 3D worlds for the webbrowser.&amp;quot;&lt;/p&gt;
&lt;p&gt;Talk recorded at the Swiss Python Summit on February 5th, 2016.&lt;/p&gt;
&lt;p&gt;Licensed as Creative Commons Attribution 4.0 International.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Christen</dc:creator><pubDate>Fri, 05 Feb 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-02-05:swiss-python-summit-2016/martin-christen-3d-computer-graphics-with-python-sps16.html</guid></item><item><title>Matthieu Amiguet – Charming Snake: Python for Live Music – SPS16</title><link>https://pyvideo.org/swiss-python-summit-2016/matthieu-amiguet-charming-snake-python-for-live-music-sps16.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;At Les Chemins de Traverse we explore ways of &amp;quot;augmenting&amp;quot; acoustical musical instruments with new possibilities offered by computers. For doing so, we need ultra-low latency real-time audio processing programs. Pretty much the typical situation where python should &lt;em&gt;not&lt;/em&gt; be used, right? Wrong. We've recently included python (with a strong use of Olivier Bélanger's wonderful pyo module) in our set of tools for realizing the musical ideas we have in mind. This talk will expose why we came to consider python as a very interesting option for our realtime audio systems and how we use it on stage, with code and sound samples.&amp;quot;&lt;/p&gt;
&lt;p&gt;Talk recorded at the Swiss Python Summit on February 5th, 2016.&lt;/p&gt;
&lt;p&gt;Licensed as Creative Commons Attribution 4.0 International.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthieu Amiguet</dc:creator><pubDate>Fri, 05 Feb 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-02-05:swiss-python-summit-2016/matthieu-amiguet-charming-snake-python-for-live-music-sps16.html</guid></item><item><title>Tom Ron – Python's Guide to the Galaxy – SPS16</title><link>https://pyvideo.org/swiss-python-summit-2016/tom-ron-pythons-guide-to-the-galaxy-sps16.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Python tricks and optimizations for beginners. Presenting few tricks which Python beginners usually don't know and can save a while both on development and on production.&amp;quot;&lt;/p&gt;
&lt;p&gt;Talk recorded at the Swiss Python Summit on February 5th, 2016.&lt;/p&gt;
&lt;p&gt;Licensed as Creative Commons Attribution 4.0 International.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Ron</dc:creator><pubDate>Fri, 05 Feb 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-02-05:swiss-python-summit-2016/tom-ron-pythons-guide-to-the-galaxy-sps16.html</guid></item></channel></rss>