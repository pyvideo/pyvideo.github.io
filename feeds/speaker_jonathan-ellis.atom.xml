<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jonathan-ellis.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-03-10T00:00:00+00:00</updated><entry><title>What every developer should know about database scalability (#21)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--what-every-developer-should-know-abou.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Jonathan Ellis</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--what-every-developer-should-know-abou.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What every developer should know about database scalability&lt;/p&gt;
&lt;p&gt;Presented by Jonathan Ellis&lt;/p&gt;
&lt;p&gt;Caching, replication, partitioning, and distributed databases: how these
can (and can't!) help you scale your data.&lt;/p&gt;
</summary><category term="caching"></category><category term="distributeddatabases"></category><category term="partitioning"></category><category term="pycon"></category><category term="pycon2010"></category><category term="replication"></category><category term="scaling"></category></entry><entry><title>What Python can learn from Java</title><link href="https://pyvideo.org/pycon-us-2012/what-python-can-learn-from-java.html" rel="alternate"></link><published>2012-03-10T00:00:00+00:00</published><updated>2012-03-10T00:00:00+00:00</updated><author><name>Jonathan Ellis</name></author><id>tag:pyvideo.org,2012-03-10:pycon-us-2012/what-python-can-learn-from-java.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Java is in some ways a bogeyman to the Python community -- the language
that parents scare their children with, the Cobol of the 21st century.
But if we look past the cesspool of JEE it turns out that Java has
quietly become an excellent systems environment, one that is still in
many ways ahead of its time.&lt;/p&gt;
</summary></entry></feed>