<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_metaprogramming.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-05-31T00:00:00+00:00</updated><entry><title>Meta Programming - Some Use Cases for Everyday Programming</title><link href="https://pyvideo.org/europython-2013/meta-programming-some-use-cases-for-everyday-programming.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Mike Müller</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/meta-programming-some-use-cases-for-everyday-programming.html</id><summary type="html"></summary><category term="debugging"></category><category term="metaprogramming"></category><category term="testing"></category><category term="principles"></category><category term="refactoring"></category><category term="application-design"></category><category term="architecture"></category><category term="validation"></category><category term="software-engineering"></category></entry><entry><title>Data model patterns with SQLAlchemy</title><link href="https://pyvideo.org/europython-2013/data-model-patterns-with-sqlalchemy.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Erik Janssens</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/data-model-patterns-with-sqlalchemy.html</id><summary type="html"></summary><category term="sql"></category><category term="sqlalchemy"></category><category term="metaprogramming"></category><category term="orm"></category><category term="database"></category></entry><entry><title>Metaprogramación Práctica</title><link href="https://pyvideo.org/pycon-es-2014/metaprogramacion-practica.html" rel="alternate"></link><published>2015-04-08T00:00:00+00:00</published><updated>2015-04-08T00:00:00+00:00</updated><author><name>Roberto Martinez</name></author><id>tag:pyvideo.org,2015-04-08:pycon-es-2014/metaprogramacion-practica.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Metaprogramar es la acción de escribir programas con la habilidad de tratarse a sí mismos o a otros programas como si fueran datos. Esto quiere decir que un programa se puede diseñar para leer, generar, analizar y/o transformar otros programas, incluso modificarse a sí mismo mientras se ejecuta. - Gracias Wikipedia ;)&lt;/p&gt;
&lt;p&gt;Durante esta charla repasaremos algunos ejemplos de nuestro día a día, con la intención de desmitificar esta práctica y de comprender los beneficios que nos aporta su buen uso.&amp;quot;&lt;/p&gt;
</summary><category term="metaprogramming"></category></entry><entry><title>What Is and What Can Be: An Exploration from `type` to Metaclasses</title><link href="https://pyvideo.org/pycon-us-2016/dustin-ingram-what-is-and-what-can-be-an-exploration-from-type-to-metaclasses-pycon-2016.html" rel="alternate"></link><published>2016-05-31T00:00:00+00:00</published><updated>2016-05-31T00:00:00+00:00</updated><author><name>Dustin Ingram</name></author><id>tag:pyvideo.org,2016-05-31:pycon-us-2016/dustin-ingram-what-is-and-what-can-be-an-exploration-from-type-to-metaclasses-pycon-2016.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dustin Ingram&lt;/p&gt;
&lt;p&gt;Most of us use &lt;cite&gt;type&lt;/cite&gt; every day, but few can say they know it well. This talk explores &lt;cite&gt;type&lt;/cite&gt; and along the way, reveals how it relates to &lt;cite&gt;object&lt;/cite&gt;, &lt;cite&gt;class&lt;/cite&gt; and more, eventually arriving at deeper understanding of metaclasses in Python.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</summary><category term="metaclasses"></category><category term="metaprogramming"></category><category term="types"></category></entry><entry><title>Python Metaprogramming (#64)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--python-metaprogramming---64.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Nicolas Lara</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--python-metaprogramming---64.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Metaprogramming&lt;/p&gt;
&lt;p&gt;Presented by Nicolas Lara&lt;/p&gt;
&lt;p&gt;Python makes a great metaprogramming languages. Metaprogramming is great
for solving problems faster, in a more generic way and providing rich
APIs. This talk explores the different options provided in python to do
metaprogramming and the right way to use them.&lt;/p&gt;
</summary><category term="metaprogramming"></category><category term="pycon"></category><category term="pycon2010"></category></entry></feed>