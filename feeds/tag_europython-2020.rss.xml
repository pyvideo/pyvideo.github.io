<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - europython-2020</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 23 Jul 2020 00:00:00 +0000</lastBuildDate><item><title>15 Things You Should Know About Spacy</title><link>https://pyvideo.org/europython-2020/15-things-you-should-know-about-spacy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Natural Language Processing to Go&lt;/p&gt;
&lt;p&gt;spaCy is a free, open-source library for advanced Natural Language Processing (NLP) in Python.
It was specifically designed for production use and it's a great tool to build applications that process text and help  to “understand” large corpuses.&lt;/p&gt;
&lt;p&gt;In this talk I'll present 15 things you should know about Spacy for the better and worse.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Hendorf</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/15-things-you-should-know-about-spacy.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Natural Language Processing</category><category>Python 3</category></item><item><title>30 Golden Rules of Deep Learning Performance</title><link>https://pyvideo.org/europython-2020/30-golden-rules-of-deep-learning-performance.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;“Watching paint dry is faster than training my deep learning model.”
“If only I had ten more GPUs, I could train my model in time.”
“I want to run my model on a cheap smartphone, but it’s probably too heavy and slow.”&lt;/p&gt;
&lt;p&gt;If this sounds like you, then you might like this talk.&lt;/p&gt;
&lt;p&gt;Exploring the landscape of training and inference, we cover a myriad of tricks that step-by-step improve the efficiency of most deep learning pipelines, reduce wasted hardware cycles, and make them cost-effective. We identify and fix inefficiencies across different parts of the pipeline, including data preparation, reading and augmentation, training, and inference.&lt;/p&gt;
&lt;p&gt;With a data-driven approach and easy-to-replicate TensorFlow examples, finely tune the knobs of your deep learning pipeline to get the best out of your hardware. And with the money you save, demand a raise!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Siddha Ganju</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/30-golden-rules-of-deep-learning-performance.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Deep Learning</category><category>Machine-Learning</category></item><item><title>A Brief History of Jupyter Notebooks</title><link>https://pyvideo.org/europython-2020/a-brief-history-of-jupyter-notebooks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Jupyter Notebook: many Python users love it, many other Python users love to hate it. But where did it come from? How did we come to have a tool that combines code execution, visualization, Markdown, and more? In this talk, we will dive into the development of the Jupyter Notebook and the older ideas that it built upon.&lt;/p&gt;
&lt;p&gt;To start, we will look at tools that popularized the “computational notebook” interface. In 1988, Mathematica introduced this interface to the scientific community. In the 90s, tools like Maple competed with Mathematica to provide the best scientific programming environment. The early 2000s saw the rise in popularity of open-source scientific tools in Python, including IPython, leading to IPython Notebook and then Jupyter.&lt;/p&gt;
&lt;p&gt;Turning to the present, we look at the expanding ecosystem beyond the Notebook. JupyterLab provides a richer programming environment. Voilà and Binder give users better options for sharing their notebooks. And increased language support has led to Jupyter being a tool not only for Julia, Python, and R, but for dozens of other languages.&lt;/p&gt;
&lt;p&gt;Finally: what is still to come? JupyerLab 2.0 promises even greater IDE-like capabilities, while IDEs increase their own Notebook support. Projects like Deepnote and CoCalc promise real-time collaboration on top of the Notebook interface. And the frustrations of working with Git are the source of a growing number of possible solutions. These efforts point us toward what the Jupyter Notebook could become.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">William Horton</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/a-brief-history-of-jupyter-notebooks.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Data Science</category><category>Ipython</category><category>Jupyter</category><category>Open-Source</category><category>Scientific Libraries (Numpy/Pandas/SciKit/...)</category></item><item><title>A deep dive and comparison of Python drivers for Cassandra and Scylla</title><link>https://pyvideo.org/europython-2020/a-deep-dive-and-comparison-of-python-drivers-for-cassandra-and-scylla.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will explain the thread-per-core data architecture of Scylla and
detail how we implemented &amp;quot;shard-awareness&amp;quot; in the Cassandra Python driver
which allows to route queries down to the right CPU!&lt;/p&gt;
&lt;p&gt;Cassandra's and Scylla's architecture and topology rely on the usage of
a consistent token ring to distribute their data evenly on the cluster.&lt;/p&gt;
&lt;p&gt;The cassandra-python driver is used widely to interact with those NoSQL
databases. It implements connection pools and token awareness allowing the
driver to route queries to the right node based on its knowledge of where the
data is.&lt;/p&gt;
&lt;p&gt;But Scylla goes one step further as it also dedicates CPUs to a smaller portion
of the data on each node (called shards). This means that &lt;strong&gt;we can route CQL
queries not only to the right node but to the right CPU&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;This talk will give implementation details on how we have done it.&lt;/p&gt;
&lt;p&gt;Talk audience requirements: having a minimal knowledge of what Cassandra and
a consistent hash ring are.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexys Jacob</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/a-deep-dive-and-comparison-of-python-drivers-for-cassandra-and-scylla.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Databases</category><category>NoSQL</category><category>Python 3</category><category>Scaling</category></item><item><title>Accessible Python education for schoolgirls using Avocados, Zombies, and Korean!</title><link>https://pyvideo.org/europython-2020/accessible-python-education-for-schoolgirls-using-avocados-zombies-and-korean.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Imagine this school scenario: an entire year group of students aged 11-12, the majority completely new to coding, undergoing 6 hours of compulsory lessons on Python for Scientific Computing.&lt;/p&gt;
&lt;p&gt;Now imagine these outcomes:
•       Students wanting to continue coding from the lessons outside of class in their own time
•       Students asking to replicate the lesson computing environment at home
•       Students disappointed for the lessons to come to an end and asking for more
•       Students struggling in Science discovering intrinsic ability in computing, bringing new enjoyment and confidence&lt;/p&gt;
&lt;p&gt;And lastly, imagine that all the students are girls!&lt;/p&gt;
&lt;p&gt;This talk will share this actual case study of a pioneering Python education initiative implemented at a secondary school for girls in London, UK for a cohort of 120 students.&lt;/p&gt;
&lt;p&gt;The audience will gain actionable insights of the factors that enabled these children to develop basic but working proficiency of a mainstream scientific data stack using typical school IT resources.&lt;/p&gt;
&lt;p&gt;Ultimately, this talk aims to increase awareness of Scientific Computing &amp;amp; Data Science as potentially effective and empowering Python education for young people.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chiin-Rui Tan</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/accessible-python-education-for-schoolgirls-using-avocados-zombies-and-korean.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Case Study</category><category>Data Science</category><category>Education</category><category>Learning</category><category>Scientific Libraries (Numpy/Pandas/SciKit/...)</category></item><item><title>Advanced Infrastructure Management in Kubernetes using Python</title><link>https://pyvideo.org/europython-2020/advanced-infrastructure-management-in-kubernetes-using-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Automate managing complex applications in a cloud native way using Operators written in Python&lt;/p&gt;
&lt;p&gt;Many of us are using Kubernetes in production. A Kubernetes Operator is a way to automate packaging, deploying, and managing of a Kubernetes Application. It is a software alternative to a human operator who has deep knowledge of how to set up, deploy, and manage a particular piece of infrastructure and what to do if it isn’t behaving correctly. Let’s see how we can automate all of this while staying in the Python ecosystem.&lt;/p&gt;
&lt;p&gt;It will be helpful to know some basic concepts of Kubernetes(Deployments, Services, Pods, Configmap etc.) and Celery(docs.celeryproject.org) to get the most out of this talk.&lt;/p&gt;
&lt;p&gt;Talk is divided into four phases.&lt;/p&gt;
&lt;p&gt;Phase I - Problems and Opportunities
We're going to see some simple examples/problems where a lot of manual effort is involved so as to connect audience to the problem.
We're going to discuss problems with configuration management, database cluster setup and introduce the focus problem of the talk which is around automating the setup of a Celery cluster.&lt;/p&gt;
&lt;p&gt;Phase II - Incrementally Approaching the Solution
We're going to incrementally approach the automation each of the manual steps involved in running a Celery cluster in Production. We're going to discuss the extension capabilities in Kubernetes using CRDs and Custom Controllers which are going to help us manage our Celery cluster automagically.&lt;/p&gt;
&lt;p&gt;Phase III - Celery Operator in action
We're going to see the code of custom controller and the whole operator in action. We create the newly defined celery resource and see how the operator works on bringing up the worker and flower deployments and handles autoscaling based on queue length.&lt;/p&gt;
&lt;p&gt;Phase IV - Conclusion and Q&amp;amp;A
We're going to talk about different use-cases and what is world doing with Operators. We'll discuss the next steps for the Celery operator and some resources to help build operators. We'll end the talk with a Q&amp;amp;A.&lt;/p&gt;
&lt;p&gt;Slides for the talk are available on - &lt;a class="reference external" href="https://bit.ly/europython20-ppt"&gt;https://bit.ly/europython20-ppt&lt;/a&gt;
Celery Operator POC I built for this talk is open source - &lt;a class="reference external" href="https://github.com/brainbreaker/Celery-Kubernetes-Operator"&gt;https://github.com/brainbreaker/Celery-Kubernetes-Operator&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gautam Prajapati</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/advanced-infrastructure-management-in-kubernetes-using-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>DevOps general</category><category>Distributed Systems</category><category>Infrastructure</category><category>Messaging and Job Queues (RabbitMQ/Redis/...)</category><category>python</category></item><item><title>An ASGI Server from scratch</title><link>https://pyvideo.org/europython-2020/an-asgi-server-from-scratch.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Echo server to a basic ASGI server in a talk&lt;/p&gt;
&lt;p&gt;I intend for this to be a fairly advanced talk that shows the steps required to go from a TCP echo server to a basic HTTP/1 ASGI server using asyncio for the IO. This is aimed at people who've read about asyncio, coroutines, etc and want to see them used in practice.&lt;/p&gt;
&lt;p&gt;This is a tutorial on how to build a HTTP/1 ASGI server using asyncio. I plan to start by building a TCP echo server and then add HTTP parsing and ASGI compliance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philip Jones</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/an-asgi-server-from-scratch.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>ASYNC / Concurreny</category><category>Web</category><category>Web Protocols</category><category>Web Servers and MicroFWs (Flask/Tornado/Nginx/...)</category></item><item><title>API-schema-based testing with schemathesis</title><link>https://pyvideo.org/europython-2020/api-schema-based-testing-with-schemathesis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Automatically generate test-cases based on your API-schemas.&lt;/p&gt;
&lt;p&gt;The goal with this talk is to introduce the audience to property-based testing for API’s using schemas to automatically generate test scenarios, enabling them to write more powerful tests faster.&lt;/p&gt;
&lt;p&gt;The talk will focus on a subset of the field of property-based testing where we focus on testing by automatically generating properties and test strategies from the API Schemas that we often already have. These tests ensure that our APIs conform to their specified schema and enables us to write a much larger amount of tests in less time.&lt;/p&gt;
&lt;p&gt;I will focus on the schemathesis library which leverages the strong hypothesis library as well as the hypothesis-JSONSchema extension strategies, and will in the future also support GraphQL via the hypothesis-graphql strategies. I’m a contributor to schemathesis and currently working on the future GraphQL support with schemathesis creator, Dmitry Dygalo.&lt;/p&gt;
&lt;p&gt;I will also compare it with its predecessor “swagger-conformance”, pure property-based testing through hypothesis, schema strategies with hypothesis-graphql and hypothesis-jsonschema, and discuss their advantages and disadvantages. I will also briefly talk about “QuickREST: Property-based Test Generation of OpenAPI-Described RESTful APIs” (&lt;a class="reference external" href="https://arxiv.org/abs/1912.09686"&gt;https://arxiv.org/abs/1912.09686&lt;/a&gt;), the research paper that’s part of the inspiration for these tools.&lt;/p&gt;
&lt;p&gt;By focusing on property-based test generation using schemas we already have, I will show that a field like property-based testing, which can seem quite daunting at first, actually can have a low barrier to entry while yielding large amounts of value in return and is useful for most common web projects today.&lt;/p&gt;
&lt;p&gt;The talk will show how formal schemas for APIs can and will continue to provide additional value outside the scope of documentation.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Hultnér</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/api-schema-based-testing-with-schemathesis.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>APIs</category><category>RESTful</category><category>Test Libraries (pytest/nose/...)</category><category>Testing</category><category>Web Servers and MicroFWs (Flask/Tornado/Nginx/...)</category></item><item><title>Attractive GUIs with PySimpleGUI</title><link>https://pyvideo.org/europython-2020/attractive-guis-with-pysimplegui.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With PySimpleGUI everyone can build powerful GUI applications without a steep learning curve.&lt;/p&gt;
&lt;p&gt;In the Python landscape, there are several high-end GUI packages. Of course, there’s tkinter which is part of the standard library. And there is wxPython and several versions of Qt. What they share is that they are very flexible but not only have a steep learning curve but also take considerable development effort to realize even a simple user interface.
At the other of the spectrum, there are several design tools that either generate code of a layout structure. In many cases, the functionality is rather limited, though.
Relatively recent, an independent open-source developer (not me) has made a product that tries to bridge the gap between these two worlds: PySimpleGUI. This package runs on top of tkinter, QT for Windows, wxPython and Remi.
In this talk, I want to show the design methodology behind this fascinating product that might change the way people look at GUIs.
I will start with live coding a simple yet not evident program that shows the basic concepts. With this, I will demonstrate the design philosophy.
PySimpleGUI can also be used to implement a user-friendly interface as opposed to command-line interfaces.
From there, I will give an overview of some more elements present in this package.
Finally, I will show a full-featured GUI program with several bells and whistles.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ruud van der Ham</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/attractive-guis-with-pysimplegui.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>General</category><category>Human-Machine-Interaction</category><category>python</category></item><item><title>Automate your tasks with Python and publish with Chat Apps</title><link>https://pyvideo.org/europython-2020/automate-your-tasks-with-python-and-publish-with-chat-apps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;That’s the way to build a Virtual Assistant for your team, the way to boost productivity.&lt;/p&gt;
&lt;p&gt;The technology is to take script written in a high-level language (Python), analyze its inputs/outputs, images or graphs display, other interactions with the user and build connectors to this script from Chat Apps like Slack, Skype, and others. Imagine that you described your skill as a script and gave it to a software robot. And from that moment it is his skill, you and your colleagues can ask him any time to run this skill and give results. As a script author, you don't think about how to connect with different Chat Apps, how to control access, how to monitor that script works fine when colleagues run it, how to save logs, how to balance load if there are too many colleagues running script and so on, our platform does all of this so the author doesn't need to think about what is that software robot, how it works, the platform will understand script by itself. The author just drop script to the platform and tell to the platform which colleagues have the right to run this script.&lt;/p&gt;
&lt;p&gt;For whom?&lt;/p&gt;
&lt;p&gt;For teams who are in charge of Servers, Applications, API's, Data Bases, Analytical reports and other information technology items.&lt;/p&gt;
&lt;p&gt;For tasks like&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;to fetch diagnostic information from multiple data sources into Chat App, gather metrics/logs and analyzing them&lt;/li&gt;
&lt;li&gt;to take an action in case of incident right from a Chat App, rerouting users requests, server rebooting, launching new instances, and many other actions&lt;/li&gt;
&lt;li&gt;to give easy access via Chat App to APIs for team members and other coleagues&lt;/li&gt;
&lt;li&gt;to provide analytical reports by the request from Chat App, reports with graphs, images, tables, files, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;These things are trivial to automate and share, you can do much more with Python, Chat App and smart script sharing platform.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Chernikov</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/automate-your-tasks-with-python-and-publish-with-chat-apps.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Best Practice</category><category>Community</category><category>Operations</category><category>Workforce</category><category>python</category></item><item><title>Automating machine learning workflow with DVC</title><link>https://pyvideo.org/europython-2020/automating-machine-learning-workflow-with-dvc.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What data scientist / ML engineer wants to do while software engineers are busy with CI/CD.&lt;/p&gt;
&lt;p&gt;As software engineers work on CI/CD process as soon as they start a new project, data scientists and ML engineers define a pipeline for data as it flows through a typical workflow. Each step of the pipeline is fed data processed from its preceding step as CI/CD process starts from code changes.&lt;/p&gt;
&lt;p&gt;&amp;quot;Pipelining ML project&amp;quot; is sometimes misleading as it implies a large project with a group of engineers working on some large systems , being considered to be hard for an individual and unnecessary for a small project. Regardless of its size, having well organized pipelines for any ML projects is essential to succeed and actually it could be done easily with utilizing a proper tool.&lt;/p&gt;
&lt;p&gt;In this talk, we will go through a machine learning workflow divided into a few steps composing a ML pipeline from data ingestion to model deployment. Each step depends on data produced by previous step, which are controlled by DVC. DVC is open-source version control system for data scientist and ML engineer helping them to organize data, models and experiments for some ML projects. The presentation will not only introduce how to use the tool but also show how to organize a ML pipeline with some examples.&lt;/p&gt;
&lt;p&gt;The goal of this talk is to motivate data scientists and ML engineer to start building machine learning pipeline with DVC. Audience might expect a guide to using DVC  for automating the pipeline. Also I will give some explanation about concepts of machine learning related techniques necessary for understanding the pipeline.&lt;/p&gt;
&lt;p&gt;This session is designed to be accessible to everyone in beginners level. Understandings of basic concepts of machine learning and version control system (preferably, Git) might be helpful but not mandatory for the audience.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hongjoo Lee</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/automating-machine-learning-workflow-with-dvc.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Big Data</category><category>Data</category><category>Data Science</category><category>Deployment/Continuous Integration and Delivery</category></item><item><title>Best practices for production-ready Docker packaging</title><link>https://pyvideo.org/europython-2020/best-practices-for-production-ready-docker-packaging.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An iterative packaging plan for your Python application&lt;/p&gt;
&lt;p&gt;You know the basics of packaging your Python application for Docker, but do you know enough to run that image in production? Bad packaging can result in security and production problems, not to mention wasted time try to debug unreproducible errors.&lt;/p&gt;
&lt;p&gt;And even if you figure out the best practices, there's still a huge number of details to get right, many of which interact with each other in unexpected ways. My personal list includes over 60 Docker packaging best practices, and it keeps growing. So where do you start? What should you do first?&lt;/p&gt;
&lt;p&gt;To help you quickly package your application in a production-ready way, this talk will give you a plan to help you prioritize and iteratively implement these best practices, by starting with the highest priority best practices (security, automation), moving on the correctness and reproducibility, and finally focusing on optimization.&lt;/p&gt;
&lt;p&gt;To make this process more concrete, along the way you'll also learn some of the techniques needed to build production-ready images:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Running as a non-root, for increased security.&lt;/li&gt;
&lt;li&gt;Debugging C crashes with faulthandler.&lt;/li&gt;
&lt;li&gt;Faster startup with pre-compiled .pycs.&lt;/li&gt;
&lt;li&gt;Smaller images by disabling pip caching.&lt;/li&gt;
&lt;li&gt;Avoiding Alpine Linux.&lt;/li&gt;
&lt;li&gt;And more!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At the end of the talk you'll also get some resources to teach you even more best practices that can't be fit in a 30-minute talk.&lt;/p&gt;
&lt;p&gt;This talk is for Python programmers who know the basics of Docker packaging, and need to run the resulting images in a production environment.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Itamar Turner-Trauring</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/best-practices-for-production-ready-docker-packaging.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Deployment/Continuous Integration and Delivery</category><category>DevOps general</category><category>Docker</category><category>Packaging</category><category>Security</category></item><item><title>Boosting simulation performance with Python</title><link>https://pyvideo.org/europython-2020/boosting-simulation-performance-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Simulating hours of robots' work in minutes&lt;/p&gt;
&lt;p&gt;Our product uses a fleet of real (not virtual) robots to perform different tasks in a fulfillment warehouse. Simulation is an essential tool in this kind of product: it allows to perform regression tests and test new features without the need for real and expensive hardware, to compare the impact of different algorithms and optimizations, to inject failures, and more.&lt;/p&gt;
&lt;p&gt;Tasks performed by physical robots take time (movement over the warehouse, box lifting, etc.), but in simulation, where virtual robots are used, there is no need to wait all that time. I will describe our implementation of the Discrete-Event Simulation approach which allows us to simulate hours of real-life in minutes.&lt;/p&gt;
&lt;p&gt;Shortening simulation time improves the development process by providing faster feedback to developers and quicker CI and testing cycles. Another powerful advantage is a more deterministic simulation - using this approach, each component in the system gets equal opportunity (CPU time) in each time tick, which is not affected by the underlying machine that the simulation is running on. Also, it is possible to simulate any date and hour easily, and by that we wouldn't panic before the &amp;quot;Y2K bug&amp;quot;.&lt;/p&gt;
&lt;p&gt;I will elaborate on some challenges we encountered: time leak of event-driven components, differences between dev and production environments and running a distributed simulation due to the transition to microservices.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eran Friedman</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/boosting-simulation-performance-with-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Architecture</category><category>Robotics</category><category>Testing</category></item><item><title>Bringing your Python script to more users!</title><link>https://pyvideo.org/europython-2020/bringing-your-python-script-to-more-users.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quick tour from CLI through GUI to Web app with image size reduction script&lt;/p&gt;
&lt;p&gt;It is wonderful to automate boring stuffs with Python.
In Japan, new introductory books are being published every month and more and more Pythonistas are working on automation.
A Python script that is useful to you may be useful to others.
So I talk about how to enable others to use your script.&lt;/p&gt;
&lt;p&gt;In this talk, I use a simple script which can reduce the width and the height of a specified image in your computer.
I assume someone who's read the introductory book can understand the script.&lt;/p&gt;
&lt;p&gt;First, I introduce Command Line Interface (CLI) to solve hardcoding in the sample script.
After implementing CLI, you don't need to edit the script.
Second, I introduce Grafical User Interface (GUI) to make the script more user-friendly.
Finally, I introduce web application so that users can the script without installation. All users have to do is connecting the Internet!&lt;/p&gt;
&lt;p&gt;The timeline is supposed to be the following:&lt;/p&gt;
&lt;p&gt;# Introduction (3min)
- self-introduction
- motivation of this talk
- sample script (pathlib, Pillow)&lt;/p&gt;
&lt;p&gt;# CLI (5min)
- problem: need to edit the script
- introduce argparse module (pass target file path from command line)
- about positional arguments and optional arguments
- check whether a path points an existing file (type parameter of add_argument())&lt;/p&gt;
&lt;p&gt;# GUI (9min)
- problem: CLI is not easy to handle than GUI
- introduce eel
- eel's elements: HTML, CSS, JavaScript
- hello world in eel
- file access in eel app
- convert sample script to eel app (user can see which image is specified as target😃)
- how to distribute&lt;/p&gt;
&lt;p&gt;# Web app (9min)
- problem: Users need to install
- introduce Web app
- server / client
- actually eel's elements are used in web app (we can recycle codes)
- introduce Flask
- hello world in flask
- static files in web app
- how to deploy (heroku)&lt;/p&gt;
&lt;p&gt;# wrap up (1min)
# Q&amp;amp;A (3min)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Takuya Futatsugi</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/bringing-your-python-script-to-more-users.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>Command-Line</category><category>Web Servers and MicroFWs (Flask/Tornado/Nginx/...)</category></item><item><title>Building quantum applications with D-Wave's Leap</title><link>https://pyvideo.org/europython-2020/building-quantum-applications-with-d-waves-leap.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Get started coding on a quantum computer using D-Wave's Python-based Leap cloud service.&lt;/p&gt;
&lt;p&gt;In the past, quantum computing was largely reserved for researchers, physicists, and scientists with direct access to physical quantum computing systems. But the game has changed, thanks to the cloud. Barriers to quantum computing are coming down quickly.&lt;/p&gt;
&lt;p&gt;Today, cloud access (like D-Wave’s Leap 2 quantum application environment) and improvements in quantum computing hardware, software, and developer tools are allowing programmers around the world to code on live quantum computers in real-time. Developers, students, and researchers around the world can now tap into the power of a quantum via their browser — quantum mechanical knowledge not required. Users and private companies have already built over 200 early applications on D-Wave’s computers in industries ranging from automotive to machine learning, aerospace, finance, and beyond. The quantum application era is here, and the growing quantum developer community is making it a reality.&lt;/p&gt;
&lt;p&gt;In this session, Alex Condello, Manager of Applications Development Technology and Tools at D-Wave Systems, will talk about the burgeoning quantum application development ecosystem, and how developers can start learning to code on a quantum computer today. This includes a walkthrough of Leap 2, D-Wave's new quantum cloud service equipped with hybrid solvers, and D-Wave's Ocean SDK. Alex will also explore some of the early applications that developers and companies have built to-date.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Condello</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/building-quantum-applications-with-d-waves-leap.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Community</category><category>Jupyter</category><category>Machine-Learning</category><category>Other Hardware</category><category>Python general</category></item><item><title>Building reproducible distributed applications at scale</title><link>https://pyvideo.org/europython-2020/building-reproducible-distributed-applications-at-scale.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Packaging in Python is hard. Packaging is particularly hard when code needs to run in a distributed computing environment where it is difficult to know what runs where and which parts of the code are available to run there.&lt;/p&gt;
&lt;p&gt;In this talk we will present different ways to ship Python code to a compute cluster, what Python's &amp;quot;pickling&amp;quot; feature has to do with this, what self contained executables are and the challenges we met when shipping Python code to a cluster with 1000s of nodes running 1000s of jobs like TensorFlow or Spark.&lt;/p&gt;
&lt;p&gt;As an example, we will show how one can run a PySpark job on top of S3 storage using PEX as a self contained executable artifact. Finally we will explain how those ideas generalize for different Jobs (like Tensorflow, Dask), different virtual environments (like Anaconda or vanilla Python virtual envs) and different distributed storage's (like S3 or HDFS).&lt;/p&gt;
&lt;p&gt;The auditor will get an overview of the challenges of Python packaging for distributed applications and see code samples that can be applied in his own project.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fabian Höring</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/building-reproducible-distributed-applications-at-scale.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Big Data</category><category>Distributed Systems</category><category>Packaging</category><category>Virtual Env</category></item><item><title>Building smarter solutions with no expertise in machine learning</title><link>https://pyvideo.org/europython-2020/building-smarter-solutions-with-no-expertise-in-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ML? API? AutoML? Python is the language of choice to solve problems with machine learning, but what can we build in only a few hours or days and without any expertise? In this session, we'll see how to benefit from existing ML models and how to create a custom model with AutoML techniques. We’ll also be active players of a live demo, so don't put your smartphone on airplane mode!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Laurent PICARD</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/building-smarter-solutions-with-no-expertise-in-machine-learning.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Computer Vision</category><category>Human-Machine-Interaction</category><category>Machine-Learning</category><category>Natural Language Processing</category><category>Public Cloud (AWS/Google/...)</category></item><item><title>Building The Perfect Personalised Menu Using Python</title><link>https://pyvideo.org/europython-2020/building-the-perfect-personalised-menu-using-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How Gousto is building an algorithm to offer personalised menus to their customers using python&lt;/p&gt;
&lt;p&gt;This talk will describe how Gousto, a leading recipe box service based in the UK, is using python to build a personalisation ecosystem. Our menu planning optimisation algorithm allows us to create the perfect mix of recipes, ensuring a variety of dish types, cuisines and ingredients. Our recommendation engine sitting on top of this can then offer each customer a personally curated menu, making sure that users have meaningful choice. All this while ensuring that we are also optimising for maximum performance from the operations point of view!&lt;/p&gt;
&lt;p&gt;To build this, we have used a range of Python packages, such as DEAP for implementing genetic algorithms, and integrations, such as the one for graph database neo4j.&lt;/p&gt;
&lt;p&gt;The talk will give an overview of our methods, our infrastructure, our results and everything that we have learnt along the way!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Irene Iriarte</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/building-the-perfect-personalised-menu-using-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Algorithms</category><category>Case Study</category><category>Data Science</category><category>E-Commerce</category><category>Machine-Learning</category></item><item><title>Can we deploy yet?</title><link>https://pyvideo.org/europython-2020/can-we-deploy-yet.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to make your code production ready&lt;/p&gt;
&lt;p&gt;What happens when your features are done, your MVP is ready and you want to deploy your first production build? What do you do then? How do you make your first production build instead of re-using your development one? is your code ready to handle real user interactions?
This talk will show a production ready checklist for your Python code; what to look for when creating a production-ready Docker image; what are the differences between development and production environments and builds.
You will see how to deal with exceptions, logs, and metrics with real-world use cases.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anastasiia Tymoshchuk</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/can-we-deploy-yet.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Architecture</category><category>Best Practice</category><category>Clean Code</category><category>Development</category><category>Documentation</category></item><item><title>Clean Architectures in Python</title><link>https://pyvideo.org/europython-2020/clean-architectures-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A practical approach to better software design&lt;/p&gt;
&lt;p&gt;Architectural considerations are often overlooked by developers or completely delegated to a framework. We should start once again discussing how applications are structured, how components are connected and how to lower coupling between different parts of a system, to avoid creating software that cannot easily be maintained or changed.&lt;/p&gt;
&lt;p&gt;The “clean architecture” model predates Robert Martin, who recently brought it back to the attention of the community, and is a way of structuring applications that leverages layers separation and internal APIs to achieve a very tidy, fully-tested, and loosely coupled system. The talk introduces the main ideas of the architecture, showing how the layers can be implemented in Python, following the content of the book “Clean Architectures in Python”. The book recently reached 11,000 downloads and many readers found it useful to start learning how to test software and how to structure an application without relying entirely on the framework.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Leonardo Giordani</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/clean-architectures-in-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Abstractions</category><category>Architecture</category><category>Clean Code</category><category>Development</category><category>TDD</category></item><item><title>Community-oriented conference status during COVID-19</title><link>https://pyvideo.org/europython-2020/community-oriented-conference-status-during-covid-19.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;what can we do during/after COVID-19&lt;/p&gt;
&lt;p&gt;due to COVID-19(Coronavirus disease 2019), we changed our life, social, and our community. most of us are engineer/organizer/designer/contributor with passion to communicate to everyone who has similar background. in COVID-19 disease, we are forced to reduce social event for keeping safe. in case from China/Korea/Malaysia.... we can see the number is decreasing and be controlled after each government announced new policy: Face masked, Social Distancing, Quarantine, and Isolation. it meant we can not go to some place to hangout like usual, of course we have a lot of SMS tools/platform/media to keep relationship with our love, but for community, we easily lost our passion. and now, I want to share some doing/status of communities in Asia or other region I knew during/after COVID-19.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Noah Chen</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/community-oriented-conference-status-during-covid-19.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Communication</category><category>Community</category><category>EuroPython</category><category>freelancing</category></item><item><title>Corona-Net</title><link>https://pyvideo.org/europython-2020/corona-net.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fighting COVID-19 with Machine Learning&lt;/p&gt;
&lt;p&gt;Identified in December 2019, the novel Coronavirus has infected 2.7 million worldwide, and claimed the lives of 0.2 million. Amidst this deadly pandemic, I started my open source project, Corona-Net, in the hopes of contributing to the global fight against the Coronavirus. Corona-Net is a 3-part project dedicated to the classification, binary segmentation and multi-class segmentation of COVID-19. I first leverage the EfficientNet model for COVID-19 diagnosis, then utilise and refine the U-Net architecture for both binary and 3-class (ground-glass, consolidation, pleural effusion) segmentation of COVID-19 symptoms, through inference on the COVID-19 CT segmentation (chest axial CT) dataset. Through Corona-Net, I aim to develop a reliable, visual-semantically balanced method for automatic COVID-19 diagnosis, as well as extend an invitation to all to collaborate and stand together against this pandemic. My PyTorch code is publicly available at &lt;a class="reference external" href="https://github.com/chinglamchoi/Corona-Net"&gt;https://github.com/chinglamchoi/Corona-Net&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ching Lam Choi</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/corona-net.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Computer Vision</category><category>Data Science</category><category>Deep Learning</category><category>Image Processing</category><category>Scientific Libraries (Numpy/Pandas/SciKit/...)</category></item><item><title>Creating an inclusive team culture in times of change</title><link>https://pyvideo.org/europython-2020/creating-an-inclusive-team-culture-in-times-of-change.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What can we do as technical leaders to make sure everyone feels accepted and build a supportive team culture during the turbulent times? This talk shares concrete steps that we can take to lead by example, and navigate our team through crisis:&lt;/p&gt;
&lt;p&gt;Prioritizing Safety &amp;amp; Self-care
Revisit our Expectations
Effective Communication
Lead Inclusive Meetings
Check our Biases&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yenny Cheung</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/creating-an-inclusive-team-culture-in-times-of-change.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Communication</category><category>Community</category><category>Diversity</category><category>Management</category></item><item><title>Creating the Next Generations of Billionaires - Part 2</title><link>https://pyvideo.org/europython-2020/creating-the-next-generations-of-billionaires-part-2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Teaching the Next Generation of Computer Trillionaires&lt;/p&gt;
&lt;p&gt;Our generation of young people in school (aged 5-18) have noticed the connection between Computer pRogramming, Technology, Success and Billionaires. On mass they are clamouring to master the skill of Computer pRogramming. It  has been dubbed the ‘4th’ R’ (computer pRogramming) along with Reading, wRiting and aRithmetic. So, governments worldwide have launched initiatives to have it taught in schools from Kindergarten to all the way to high school.&lt;/p&gt;
&lt;p&gt;So, how do we best teach and motivate the next generation in acquiring this skill?&lt;/p&gt;
&lt;p&gt;We describe a successful working model for the teaching of Computer pRogamming. We have been building upon this model for a couple of years now.  Last year at EuroPython 2019 in Basel, we spoke about this subject and this year we would like to share more findings with the Python community about what we are learning about the teaching of Computer Programming to children and young people.&lt;/p&gt;
&lt;p&gt;The talk will describe a case study whereby computer programming (Python) was introduced to a group of 110 young people from the ages of 11 to 18, in a U.K secondary school. The talk will include descriptions of the various teaching methodologies &amp;amp; the outcomes; &amp;amp; the challenges involved. The talk will conclude with helpful suggestions, on how to proceed in this area.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lil anonymous</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/creating-the-next-generations-of-billionaires-part-2.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Education</category><category>General</category><category>Python 3</category><category>Science</category><category>Teaching</category></item><item><title>Cultivating a Culture of Creativity, Collaboration, and Captainship</title><link>https://pyvideo.org/europython-2020/cultivating-a-culture-of-creativity-collaboration-and-captainship.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In my work as a consultant, coach, and organizational leader- I work with amazing companies around the world, helping them craft and implement strategies to build high-performing teams.&lt;/p&gt;
&lt;p&gt;And when I work with these teams, I notice that there are two factors that make all the difference between a good organization and one that is changing the world.&lt;/p&gt;
&lt;p&gt;The first is having a culture of collaboration – and this means collaboration across individuals, across departments, and across teams – really - it’s a culture that’s less about competition and cutthroat political systems.. And more about helping each other achieve the extraordinary.&lt;/p&gt;
&lt;p&gt;The second quality is organizations that treat and expect their employees to act like owners. Owning not just their behaviors, actions, and responsibilities, but owning outcomes and becoming a voice for the organization.&lt;/p&gt;
&lt;p&gt;No matter where your organization is at today, the good news is– there are proven strategies to create a culture of collaborative ownership at your organization and that’s what I’m going to teach you in this course.&lt;/p&gt;
&lt;p&gt;I’ll share how you can build momentum from a carefully crafted vision and goals, I’ll help you improve communication and drive ownership, I’ll help you foster creativity, and finally, I’ll help you train up leaders in your organization and help you meet more of your goals.&lt;/p&gt;
&lt;p&gt;So, if you’re ready to transform your organization. let’s go!&lt;/p&gt;
&lt;p&gt;LEARNING OBJECTIVES:&lt;/p&gt;
&lt;p&gt;Attendees will learn: How to transform a command-obey dynamic to one of creativity and innovation through opportunities for ownership. How to collaborate with opportunities for ownership through proven methods to increase connectivity and engagement in the team. How to foster captainship within your organization. How to apply the ideas of collaborative ownership specifically in individual organizations.&lt;/p&gt;
&lt;p&gt;SESSION OUTLINE: Fostering an Ownership Culture (Creativity and Innovation)- Ownership Activity -Fostering a Collaborative Culture- Collaborative Activity - Fostering Captainship Culture - Captainship activity- The Application of Collaborative Ownership for Personal and Organizational Success- Applying Collaborative Ownership to Organizations and Self Activity -Conclusion Q&amp;amp;A&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amber Vanderburg</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/cultivating-a-culture-of-creativity-collaboration-and-captainship.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Agile</category><category>Best Practice</category><category>Business</category><category>Community</category><category>DevOps general</category></item><item><title>Decade of PyCon JP: How we spread the Python community in Japan</title><link>https://pyvideo.org/europython-2020/decade-of-pycon-jp-how-we-spread-the-python-community-in-japan.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Decade of PyCon JP: How we spread the Python community in Japan&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Takanori Suzuki</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/decade-of-pycon-jp-how-we-spread-the-python-community-in-japan.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Community</category></item><item><title>Deceptive Security using Python</title><link>https://pyvideo.org/europython-2020/deceptive-security-using-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Deceiving hackers to protect your resources&lt;/p&gt;
&lt;p&gt;Imagine you are passing through an unknown street at midnight and you find that some anti-social elements are following you. To save yourself from them you start running and look for a safe place to hide. On the way, you will find a good person and requests him to help you. He hides you in his place to protect you. When these anti-social elements visit a good person’s place and enquire about you, the good person misguides them and redirects them to some other place in order to protect you. This is exactly how deception works. In this analogy, YOU are the resources to be protected, anti-social elements are the hackers who want to gain access to the resources, and a good person is a deception technique that protects the resources from hackers by making them fall in the trap.&lt;/p&gt;
&lt;p&gt;The talk begins with an introduction to deception technology, deception types, and methods, a deceptive security life cycle. In this talk, we will demonstrate the following deception tools implemented using python language:
•       WebTrap (&lt;a class="reference external" href="https://github.com/IllusiveNetworks-Labs/WebTrap"&gt;https://github.com/IllusiveNetworks-Labs/WebTrap&lt;/a&gt;): is designed to create deceptive webpages to deceive and redirect attackers away from real websites. The deceptive webpages are generated by cloning real websites, specifically their login pages.
•       DemonHunter (&lt;a class="reference external" href="https://github.com/RevengeComing/DemonHunter"&gt;https://github.com/RevengeComing/DemonHunter&lt;/a&gt;):  is a distributed low interaction honeypot with Agent/Master design
Finally, we will conclude the talk with how built a deception tool and demonstrate its working.&lt;/p&gt;
&lt;p&gt;How we implemented a deception tool in python using machine learning:
We designed a deception tool in python language using PyBRAIN package to model and mitigate XPath injection attacks for web services. It is known that XML can be used to store the data and this data can be queried using XPath query language. XPath is a query language, it has injection issues similar to SQL. To handle this issue, we proposed a solution, which uses a count-based validation technique and Long Short-Term Memory (LSTM) modular neural networks to identify and classify atypical behavior in user input. Once the atypical user input is identified, the attacker is redirected to fake resources to protect the critical data. Our experiment resulted in over 90% accuracy in the classification of input vectors.&lt;/p&gt;
&lt;p&gt;Outline
1. Introduction to deception, Deception types, Deception technology applicable methods and Deception Life cycle(08 Minutes)
2. Demonstration of WebTrap deception tool(04 Minutes)
3. Demonstration of DemonHunter deception tool(04 Minutes)
4. Discussion of our deception tool and demonstration(06 Minutes)
5. Conclusion and Questions(03 Minutes)&lt;/p&gt;
&lt;p&gt;Audience
No experience level of Python is needed. In general, anyone can attend this talk and learn about applying deception techniques and machine learning to application security.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gajendra Deshpande</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/deceptive-security-using-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>Machine-Learning</category><category>Security</category><category>python</category></item><item><title>Decision Science with Probabilistic Programming</title><link>https://pyvideo.org/europython-2020/decision-science-with-probabilistic-programming.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Make robust optimal decisions with Python!&lt;/p&gt;
&lt;p&gt;Generative Models are the Swiss Army Knife for the Decision Scientist. Generative models allow the simulation of scenarios based on different business hypotheses (Bayesian priors). With Probabilistic Programming, decision makers can simulate the impact of business drivers in times of great uncertainty.&lt;/p&gt;
&lt;p&gt;Furthermore, Probabilistic Programming Languages provide all the inference tools necessary to identify the assumptions that have most likely generated an outcome. Inference is a statistical tool that enables optimal decision-making based on models that explicitly quantify uncertainty.&lt;/p&gt;
&lt;p&gt;Generative models of key optimization parameters are necessary input to Robust Optimization and Stochastic Programming problems.
Python provides all the tools to successfully integrate Probabilitistic Programs with Robust and Stochastic Optimization and therefore cope with high uncertainty in optimization.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mattia Ferrini</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/decision-science-with-probabilistic-programming.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Data Science</category><category>Deep Learning</category><category>Functional Programming</category><category>Science</category></item><item><title>Deploy your Machine Learning Bots like a boss with CI/CD</title><link>https://pyvideo.org/europython-2020/deploy-your-machine-learning-bots-like-a-boss-with-cicd.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Gitlab Open Source tools to automate NLP models deployment&lt;/p&gt;
&lt;p&gt;Context: Today is relatively easy to create and train a conversational agent using Machine Learning Techniques, fire it up and showcase it in your computer&lt;/p&gt;
&lt;p&gt;Problem: Sharing your chatbot with the outside world is not as easy as training your models. Load Balancer, Unit Test, Integration Tests, Differential Tests ... Text Analytics and retrain the models to better serve your audience goes way beyond the simple agent that runs in the developer environment&lt;/p&gt;
&lt;p&gt;Solution: I want to show how from my experience of deploying bots to production, leveraging DevOps + DataScience skills along with an entry level knowledge of Databases, CI/CD and distributed systems you can take your prototypes to a next level, deploy, iterate  and re-train your models faster.&lt;/p&gt;
&lt;p&gt;Pre-reqs: Entry level understanding of CI/CD Pipelines, NLP, jupyterhub, Version Control, Rasa&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">William Arias</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/deploy-your-machine-learning-bots-like-a-boss-with-cicd.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Deep Learning</category><category>Deployment/Continuous Integration and Delivery</category><category>Ipython</category><category>Machine-Learning</category><category>Open-Source</category></item><item><title>Detecting and Analyzing Solar Panels in Switzerland using Aerial Imagery</title><link>https://pyvideo.org/europython-2020/detecting-and-analyzing-solar-panels-in-switzerland-using-aerial-imagery.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A novel method for detecting solar panels and its geometry on aerial imagery is presented. Deep Learning with PyTorch is being used for segmentation. The goal is to know the exact locations, dimensions and potential of every solar installation in Switzerland. It is shown how we labelled the data and how we found a solution to distinguish different solar panel types.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrian Meyer</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/detecting-and-analyzing-solar-panels-in-switzerland-using-aerial-imagery.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Deep Learning</category><category>Machine-Learning</category></item><item><title>Developing a match-making algorithm between customers and Go-Jek products!</title><link>https://pyvideo.org/europython-2020/developing-a-match-making-algorithm-between-customers-and-go-jek-products.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GoJek has millions of monthly active users in Indonesia across our 20+ products and services. A major problem we faced was targeting these customers with promos and vouchers that were relevant to them. We developed a generalized model that takes into account the transaction history of users and gives a ranked list of our services that they are most likely to use next. From here on, we are able to determine the vouchers that we can target these customers with.
In this poster, I will be presenting our process while developing the model, the challenges we faced during the time, how we used PySpark to tackle these challenges and the impact it had on our conversion rates.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gunjan Dewan</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/developing-a-match-making-algorithm-between-customers-and-go-jek-products.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Data</category><category>Data Science</category><category>Machine-Learning</category></item><item><title>Developing GraphQL API in Django using Graphene</title><link>https://pyvideo.org/europython-2020/developing-graphql-api-in-django-using-graphene.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Build GraphQL schema, queries, and mutations in Django using graphene library&lt;/p&gt;
&lt;p&gt;GraphQL technology has become popular nowadays. While developing REST APIs, there are many things that developers need to take into consideration. There are multiple endpoints and over-fetching is the main problem of REST. GraphQL offers a unique approach and architecture for developing APIs. How is that efficient?&lt;/p&gt;
&lt;p&gt;While using GraphQL, a client can request the data which is needed. It is an alternative for building APIs in place of REST. It’s a query language that can work as a medium between the frontend and backend.&lt;/p&gt;
&lt;p&gt;The journey to develop GraphQL APIs in python needs some requirements and knowledge. We will be building APIs in the Django framework using a graphene library which includes many features of GraphQL such as ObjectTypes, Queries, Mutations, etc. We will start by understanding these concepts followed by some code. This includes detailed information about the Query class, what are resolvers, and where to write business logic, how pagination can be incorporated with queries would be included. Also, it will include the information about the Mutation class, arguments needed for mutation, and what type of response can be returned on successful operations.&lt;/p&gt;
&lt;p&gt;Learning outcomes would be the understanding of code and building GraphQL APIs using graphene in a proper and structured way.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nisarg Shah</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/developing-graphql-api-in-django-using-graphene.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>APIs</category><category>Databases</category><category>Django</category><category>PostgreSQL</category><category>Python 3</category></item><item><title>Difficulties of Python code development:packages,virtualenvs and package mangers</title><link>https://pyvideo.org/europython-2020/difficulties-of-python-code-developmentpackagesvirtualenvs-and-package-mangers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Develop your code effectively with well chosen tools&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;In this presentation I will show different packages that are used in Python. I will point out differences and explain the prons and cons of using them during code development.&lt;/dt&gt;
&lt;dd&gt;After that we will jump to the topic of virtualenvs and  popular tools that are used for managing them. I will explain what is purpose of the virtualenvs in Python and why we should use them.
Finally we will focus on the most important topic without which development is not possible – package mangers. Package managers it is wide topic in Python world. There is many package mangers and  currently we have tools like pip, pipenv or poetry but it is not obvious which of them we should use in first place. Which of them are recommended to use? What are prons and cons of certain package mangers? Is there any other not well known packages mangers? How package mangers are packaging Python code? Which of the package mangers are good for data scientists? Is your package manger is resolving dependencies?
This questions can appear especially when you are beginner and just to want start working with Python. Unfortunately form the beginning you must face the problem which of the package manger you should use. In this presentation I will answer all of this questions. I will list popular package mangers and some not known. I will show differences and which of them are best for which case. Also I will explain differences between packages that are used by different packages mangers. If you are interested in code development and package mangers or you are just confused which of them you should use this presentation is definitely for you. During this presentation I will answer all questions and I will wipe out all doubts about packages, package mangers and virtualenvs.&lt;/dd&gt;
&lt;/dl&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michał Wodyński</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/difficulties-of-python-code-developmentpackagesvirtualenvs-and-package-mangers.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>Conda / conda forge</category><category>Development</category><category>Packaging</category><category>Virtual Env</category></item><item><title>Diffprivlib: Privacy-preserving machine learning with Scikit-learn</title><link>https://pyvideo.org/europython-2020/diffprivlib-privacy-preserving-machine-learning-with-scikit-learn.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Train machine learning models with differential privacy guarantees&lt;/p&gt;
&lt;p&gt;Data privacy is having an ever-increasing impact on the way data is stored, processed, accessed and utilised, as the legal and ethical effects of data protection regulations take effect around the globe. Differential privacy, considered by many to be the strongest privacy guarantee currently available, gives robust, provable guarantees on protecting privacy, and allows tasks to be completed on data with guarantees on the privacy of individuals in that data. This naturally extends to machine learning, where training datasets can contain sensitive personal information, that are vulnerable to privacy attacks on trained models.
By using differential privacy in the training process, a machine learning model can be trained to accurately represent the dataset at large, but without inadvertently revealing sensitive information about an individual. Diffprivlib is the first library of its kind to leverage the power of differential privacy with scikit-learn and numpy to give data scientists and researchers access to the tools to train accurate, portable models with robust, provable privacy guarantees built-in.
In this talk, we will introduce attendees to the idea of differential privacy, why it is necessary in today's world, and how diffprivlib can be seamlessly integrated within existing scripts to protect your trained models from privacy vulnerabilities. Attendees will be expected to have a basic understanding of sklearn (i.e., how to initialise, fit and predict a model). No knowledge of data privacy or differential privacy will be assumed or required.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Naoise Holohan</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/diffprivlib-privacy-preserving-machine-learning-with-scikit-learn.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Data Privacy</category><category>Data Protection</category><category>Machine-Learning</category><category>Open-Source</category><category>Scientific Libraries (Numpy/Pandas/SciKit/...)</category></item><item><title>Digital Transformation in the fight against Coronavirus</title><link>https://pyvideo.org/europython-2020/digital-transformation-in-the-fight-against-coronavirus.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;COVID-19: An experience of the Comptroller General of the State of Goiás&lt;/p&gt;
&lt;p&gt;The Corona Virus - COVID-19 pandemic caused a significant impact on public services. In particular, it brought a massive digitalization of services that were offered in person. In addition, there was a great deal of pressure on official channels, whether to seek a service or to report a fact. Qualified and official information becomes an element in combating the pandemic. Knowing where to look for information, reporting a fact or getting a qualified response are essential steps to maximize the efficiency of the citizen's decision-making process, especially in a scenario of such uncertainty. The State has a fundamental role, whether as an inducer, executor or provider of the means necessary for information and decision-making to be effective at that time.
Connected by the growing demand, the State of Goiás, through the State's Comptroller General, published a series of technological tools with the objective of bringing information to the citizen, promoting social control and improving public policies to fight the Coronavirus.
This document seeks to show how technological tools were adopted and implemented in terms of transforming the ombudsman channels in the State of Goiás through the State's Comptroller General in actions to combat the Coronavirus pandemic. The document seeks to show how the transformation of the ombudsman channels occurred through machine learning techniques and data visualization.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bruno Ferreira</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/digital-transformation-in-the-fight-against-coronavirus.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>PyPi</category><category>PyPy</category><category>Python Skills</category><category>Python general</category><category>R</category></item><item><title>Django Clone From Scratch With Flask</title><link>https://pyvideo.org/europython-2020/django-clone-from-scratch-with-flask.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to effectively mimick most of Django features with Flask, apps included.&lt;/p&gt;
&lt;p&gt;With Python, when thinking of web frameworks, two that come into mind are Django and Flask. Instead of having to choose one of the two, this session shows how you can engineer Flask to achieve a simili-Django app. It's a dive into the internal components of Django and the idea behind. The session covers different Flask development patterns to finally finish with an app that's functionally similar to Django with some extra features in for free. It also lists some caveats identified with such a pattern. This session requires attendees to know Flask and having used Django for building at least one project. At the very least it assumes the knowledge of models, views, controller, templates and migrations. It discusses along the way the educational and pedagogical aspect of learning web frameworks and proposes a syllabus. It discusses the benefits of learning Flask and the necessity of learning the two as a Pythonista. Django is the go-to framework for web development and it's no surprise that most freelancing jobs require Django. Flask is appreciated for the flexibility it gives. The session also touches about how we can better promote Flask through education. The session finishes with the hurdles identified when getting started with web development in Python, pulled from personal teaching experience.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Abdur-Rahmaan Janhangeer</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/django-clone-from-scratch-with-flask.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Web Servers and MicroFWs (Flask/Tornado/Nginx/...)</category></item><item><title>Django Testing on Steroid: pytest + Hypothesis</title><link>https://pyvideo.org/europython-2020/django-testing-on-steroid-pytest-hypothesis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Generate hundred of test with few lines of code&lt;/p&gt;
&lt;p&gt;The talk should hopefully provided value to all listeners, regardless of their knowledge level, but preferably you have some knowledge of pytest test parametrization&lt;/p&gt;
&lt;p&gt;We'll use a simple Django project, setup initial tests using pytest with some parallelization in the opening part and afterwards start extending them with Hypothesis. We'll go over the details, how you can use them to detect edge cases, extend test coverage and if time allows it how you can use them to test django models.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bojan Miletic</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/django-testing-on-steroid-pytest-hypothesis.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Django</category><category>TDD</category><category>Test Libraries (pytest/nose/...)</category><category>Testing</category></item><item><title>Docker and Python: making them play nicely and securely for Data Science and ML</title><link>https://pyvideo.org/europython-2020/docker-and-python-making-them-play-nicely-and-securely-for-data-science-and-ml.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Docker has become a standard tool for developers around the world to deploy applications in a reproducible and robust manner. The existence of Docker and Docker compose have reduced the time needed to set up new software and implementing complex technology stacks for our applications. Now, six years after the initial release of Docker, we can say with confidence that containers and containers orchestration have become some of the defaults in the current technology stacks.&lt;/p&gt;
&lt;p&gt;There are thousands of tutorials and getting started documents for those wanting to adopt Docker for apps deployment. However, if you are a Data Scientist, a researcher or someone working on scientific computing wanting to adopt Docker, the story is quite different. There are very few tutorials (in comparison to app/web) and documents focused on Docker best practices for DS and scientific computing. If you are working on DS, ML or scientific computing, this talk is for you. We'll cover best practices when building Docker containers for data-intensive applications, from optimising your image build, to ensuring your containers are secure and efficient deployment workflows. We will talk about the most common problems faced while using Docker with data intensive applications and how you can overcome most of them. Finally I'll give some practical and useful tips for you to improve your Docker workflows and practises.&lt;/p&gt;
&lt;p&gt;Attendees will leave the talk feeling confident about adopting Docker across a range of DS, ML and research projects.&lt;/p&gt;
&lt;p&gt;Who and Why (audience)
This talk is designed for folks working in data-intensive environments (i.e. Machine Learning, Data Science, research and scientific computing) and that are either using Docker or want to learn more about how to use Docker in these environments. Attendees will leave the talk feeling confident about adopting Docker in their workflows as well as have acquired several best practices and guidelines to do this robustly.
Introduction (5 minutes)
About me
When is Docker the right choice?
Docker for all Python users: introduction to Docker in Machine Learning (ML), Data Science (DS) and research contexts
The usual culprits
Optimising for data-oriented application (10 minutes)
Creating a data-oriented Docker image - how is this different from an app/web image?
Choosing the right base image - set yourself for success
Dependencies, volumes and code best practices
Security and performance (10 minutes)
Finding vulnerabilities in your images
Image consistency and reproducibility
Optimising image building - cache and image size considerations
Do not reinvent the wheel - automate! (10 minutes)
Consider tools to assist with Dockerfile generation - e.g. repo2docker, dokta
Creating templates for projects
Automating image build and publishing - e.g. GitHub actions
Automated deployment strategies - going from local to deploying your containerised application
Conclusions (5 minutes)
Top 10 best practices when working with Docker and Python for DS/ML and research
Additional resources
Thanks and getting in touch&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tania Allard</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/docker-and-python-making-them-play-nicely-and-securely-for-data-science-and-ml.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Conda / conda forge</category><category>Data Science</category><category>Deep Learning</category><category>Machine-Learning</category><category>Scientific Libraries (Numpy/Pandas/SciKit/...)</category></item><item><title>Durable Functions: A More Durable Azure Function</title><link>https://pyvideo.org/europython-2020/durable-functions-a-more-durable-azure-function.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless functions-as-a-service lets you run event-triggered code without having to explicitly provision or manage infrastructure. While they are powerful, they also have limitations. In this talk, we’ll discuss how Durable Functions can overcome the limitation by extending Azure Functions to let you write stateful functions in a serverless compute environment.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joseph Song</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/durable-functions-a-more-durable-azure-function.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Infrastructure</category><category>serverless</category></item><item><title>Effective Code Reviews</title><link>https://pyvideo.org/europython-2020/effective-code-reviews.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The edge between hard skills and soft skills&lt;/p&gt;
&lt;p&gt;Does your company uses code review? In this talk I will demonstrate why it should start using them immediately, share the many benefits and situations we've gone through, besides good practices that should be used for effective code reviews, that add quality to the product/service that is being delivered.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vinicius Gubiani Ferreira</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/effective-code-reviews.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Agile</category><category>Best Practice</category><category>Clean Code</category><category>Code Analysis</category><category>Communication</category></item><item><title>Elegant Exception Handling</title><link>https://pyvideo.org/europython-2020/elegant-exception-handling.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Error handling is hard. Regardless of the approach you take, it usually means littering your application with checks and validations that greatly reduce code readability. So how can we tackle exceptions?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eyal Trabelsi</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/elegant-exception-handling.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Python Skills</category><category>Python general</category><category>python</category></item><item><title>Ensuring data integrity with asynchronous programming in a cloud IoT core</title><link>https://pyvideo.org/europython-2020/ensuring-data-integrity-with-asynchronous-programming-in-a-cloud-iot-core.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python3.6, AsyncIO, Flask, RabbitMQ. A simple and powerful combination for IoT data integrity.&lt;/p&gt;
&lt;p&gt;Undoubtedly this will be the decade of low-cost and high-performance cloud IoT core development.
All cloud IoT solutions will have to meet the same two fundamental requirements: Performance and Data Integrity. Having said that,  AsyncIO comes to mind.
While researching similar topics on cloud IoT solutions, we noticed that the vast majority of such solutions primarily includes performance. In this discussion we would like to demonstrate how you can ensure that a low-cost, fast developed cloud IoT core can ensure that its data is not corrupted and is accurate  for the user.
Technically speaking, it is very interesting to analyze how a bucket of async/await tasks can handle (consume or even produce) messages from or to message queues, interact with other (even non pythonic) modules inside the core, manage socket connections and many other functionalities that make Python3.6+ the heart of any IoT core. Note that it is equally important to check imported data with periodic tasks, acquire statistics from devices and sanitize database data in order to ensure data integrity.
Our goal: Firstly, to encourage new developers to get involved with cloud IoT cores and use Python and AsyncIO as the heart of their core. Secondly, as new developers we would like to show our logic and our prefered python libraries and techniques in order to receive feedback from more experienced developers.
We are a team of software engineers located in Athens, Greece working for a fast growing startup in San Francisco (&lt;a class="reference external" href="https://www.veturilo.io"&gt;https://www.veturilo.io&lt;/a&gt;). We have developed our own cloud IoT core for a vehicle fleet management SaaS.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Theofanis Petkos</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/ensuring-data-integrity-with-asynchronous-programming-in-a-cloud-iot-core.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>ASYNC / Concurreny</category><category>Internet of Things (IoT)</category><category>Python 3</category><category>Software Design</category><category>Use Case</category></item><item><title>EuroPython 2020 - Closing Session</title><link>https://pyvideo.org/europython-2020/europython-2020-closing-session.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Closing Session&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various Speakers</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/europython-2020-closing-session.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category></item><item><title>EuroPython 2020 - Lightning Talks 07/23</title><link>https://pyvideo.org/europython-2020/europython-2020-lightning-talks-0723.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks 1&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various Speakers</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/europython-2020-lightning-talks-0723.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category></item><item><title>EuroPython 2020 - Lightning Talks 07/24</title><link>https://pyvideo.org/europython-2020/europython-2020-lightning-talks-0724.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks 2&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various Speakers</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/europython-2020-lightning-talks-0724.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category></item><item><title>Europython 2020 - Opening Session</title><link>https://pyvideo.org/europython-2020/europython-2020-opening-session.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Opening Session&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various Speakers</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/europython-2020-opening-session.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category></item><item><title>EuroPython 2021: Help us build the next edition!</title><link>https://pyvideo.org/europython-2020/europython-2021-help-us-build-the-next-edition.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We need help with organizing and running EuroPython 2021.&lt;/p&gt;
&lt;p&gt;In this session, we will explain how the EuroPython workgroup model works and where you could help.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc-Andre Lemburg</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/europython-2021-help-us-build-the-next-edition.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Community</category><category>EuroPython</category><category>EuroPython Society (EPS)</category></item><item><title>Everything You Know About MongoDB is Wrong!</title><link>https://pyvideo.org/europython-2020/everything-you-know-about-mongodb-is-wrong.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;(Probably)&lt;/p&gt;
&lt;p&gt;MongoDB is webscale, right? It's a JSON database, it's eventually consistent, and you use map-reduce to query it. Oh, and it's insecure.&lt;/p&gt;
&lt;p&gt;Let me clear up some things: MongoDB is an ACID-compliant database with transactions, schemas &amp;amp; relationships. It includes a powerful aggregation query language; map-reduce has been deprecated for some time now. MongoDB doesn't speak or store JSON, and nowadays it comes with pretty good security defaults (we think).&lt;/p&gt;
&lt;p&gt;There are many myths around about MongoDB - what it is, how it works, and what it does wrong. Like any database product, you need to know its capabilities and how to get the best out of it. On top of this, the product has changed a lot over the years, but lots of information out there hasn't caught up.&lt;/p&gt;
&lt;p&gt;I'll cover 8 myths around MongoDB, explain how they're wrong, why the myth originated in the first place (some of them weren't originally myths).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What exactly is MongoDB?&lt;/li&gt;
&lt;li&gt;What is the current release of MongoDB?&lt;/li&gt;
&lt;li&gt;MongoDB is not a JSON database.&lt;/li&gt;
&lt;li&gt;MongoDB has transactions.&lt;/li&gt;
&lt;li&gt;MongoDB allows relationships.&lt;/li&gt;
&lt;li&gt;You should only consider sharding if you must.&lt;/li&gt;
&lt;li&gt;MongoDB is secure.&lt;/li&gt;
&lt;li&gt;MongoDB stores your data reliably.&lt;/li&gt;
&lt;li&gt;MongoDB is a big product, with lots to learn.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Along the way, I'll explain some of MongoDB's best-kept secrets, and provide practical tips and tricks for using it. The audience will leave with a good idea of what MongoDB is, what it isn't, and how to best develop with it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Smith</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/everything-you-know-about-mongodb-is-wrong.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Big Data</category><category>Data</category><category>Databases</category><category>Development</category><category>MongoDB</category></item><item><title>Extending HTTP for fun and non-profit</title><link>https://pyvideo.org/europython-2020/extending-http-for-fun-and-non-profit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;My journey into the IETF HTTP workgroup&lt;/p&gt;
&lt;p&gt;Writing API guidelines is a best practice for standardizing APIs produced by thousands of service provider, but what happens when those rules are not backed by internet standards?&lt;/p&gt;
&lt;p&gt;This talk proposes an iterative strategy for identify and standardize inside IETF key features of your API guidelines.
The steps includes feature landscaping, stakeholder identification and engagement, prototyping and writing an actual internet-draft.&lt;/p&gt;
&lt;p&gt;The strategy is shown using two examples:
- rewriting of &lt;cite&gt;Digest&lt;/cite&gt; header RFC3230 adding clarifications useful for implementors;
- proposing new &lt;cite&gt;RateLimit&lt;/cite&gt; headers and engage with implementors (Microsoft, Red Hat, Kong, ..).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Roberto Polli</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/extending-http-for-fun-and-non-profit.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>APIs</category><category>Best Practice</category><category>Case Study</category><category>Community</category><category>HTTP</category></item><item><title>Extending Python with Rust</title><link>https://pyvideo.org/europython-2020/extending-python-with-rust.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction and a hands-on demo of writing Python extension in Rust&lt;/p&gt;
&lt;p&gt;Rust is a rising star of the programming language world. I'd like to discuss it from a Python developer perspective. Obviously, Rust is not a replacement for Python, but in case you're seeking better performance it may be a good idea to build an extension. This is safer and arguably easier to do in Rust than in C.
In this talk we will take a look at existing crates that provide interface to Python and see how easy it is to use them.
Then we go through the demo and see it in action.
Run some benchmarks against pure Python and also Cython.
Write a Dockerfile to build it all together.
Discuss CI/CD for mixed Rust/Python projects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mikhail Medvedev</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/extending-python-with-rust.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>All Other Programming Languages</category><category>Compiler and Interpreters</category><category>Deployment/Continuous Integration and Delivery</category><category>Docker</category><category>Rust</category></item><item><title>Find a new job - Sponsor Presentations</title><link>https://pyvideo.org/europython-2020/find-a-new-job-sponsor-presentations.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Recruiting Session&lt;/p&gt;
&lt;p&gt;Many of our sponsor are looking to hire more developers and EuroPython is the perfect place to reach out to many of them.&lt;/p&gt;
&lt;p&gt;In this session, the sponsors will present themselves in short intros and you can then approach them directly in their sponsor virtual rooms (chat and Zoom) to discuss their offerings in more detail.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc-Andre Lemburg</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/find-a-new-job-sponsor-presentations.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Business</category><category>Development</category><category>Job Hunting</category><category>Python Skills</category><category>Workforce</category></item><item><title>Flasync Await</title><link>https://pyvideo.org/europython-2020/flasync-await.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Async is all the rage, mostly because it simplifies waiting for an operation that takes some time to finish. Python went all in on asyncio by changing the language to support it (async/await) iIn this microservices era where many of the applications we develop consume several 3rd party API services, async is the fast track to success. In this talk, I’ll demonstrate the benefits of going async for a web application, justify choosing Sanic over other web frameworks like aiohttp. I’ll do so by transforming a Flask backed application to a Sanic backed application. Finally, I’ll provide tips &amp;amp; tricks from my experience on measuring, monitoring and testing async code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Bordeynik</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/flasync-await.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>ASYNC / Concurreny</category><category>Abstractions</category><category>Best Practice</category><category>Web</category></item><item><title>Full Stack Type Safety</title><link>https://pyvideo.org/europython-2020/full-stack-type-safety.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Beyond PEP-484 – ensure type consistency between layers&lt;/p&gt;
&lt;p&gt;The introduction of PEP-484 gave us an option to enforce the internal type consistency of our Python applications. Our web projects, however, consist of multiple layers, with the Python app taking the role of an HTTP backend. What options do we have to ensure consistency across our stack?
In this talk, we will see some technologies that we can employ to enforce the contract between the layers of our stack. Especially between the frontend and backend. We will demo, how this can be achieved with REST/Swagger and with GraphQL. As both the Graphene library and the open API support for django-rest-framework are both a work-in-progress, we would check, what is possible, and what is still lacking. We will also discuss various approaches to the design: backend first, auto-generating backend from the spec, and TDD, with their advantages and disadvantages.
The topic would be discussed on a simple web application. We would try to play some realistic scenarios, where a careless developer breaks the contract to see how such a mistake can be spotted in the CI phase of the development cycle.
Basic knowledge of Django and JavaScript is required to understand the talk. Some familiarity with TypeScript and ReactJS would also be helpful. However, I plan to explain the code to the listeners that didn’t have prior exposure to these technologies.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Pyżalski</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/full-stack-type-safety.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>APIs</category><category>Django</category><category>JavaScript</category><category>Type-Hinting</category><category>Web Protocols</category></item><item><title>Growing a Python Community at an Enterprise Scale</title><link>https://pyvideo.org/europython-2020/growing-a-python-community-at-an-enterprise-scale.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk will showcase how the Python community started and took off in Bloomberg, and how it can serve as a model that can be used within other companies as well. This includes details on how Bloomberg's Python community got started and grew to the place that it is today, as well as tips from its leaders personal experiences.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mario Corchero</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/growing-a-python-community-at-an-enterprise-scale.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Community</category></item><item><title>gRPC Python, C Extensions, and AsyncIO</title><link>https://pyvideo.org/europython-2020/grpc-python-c-extensions-and-asyncio.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to make AsyncIO work with the gRPC Core&lt;/p&gt;
&lt;p&gt;Goal - Encourage Python developers to understand C extensions by sharing gRPC Python’s practice, and advocate the adoption of AsyncIO.&lt;/p&gt;
&lt;p&gt;Prerequisite
- Understand thread vs. process;
- Interested in asynchronous programming.&lt;/p&gt;
&lt;p&gt;gRPC Brief
- What’s gRPC Core? And what is gRPC Python?&lt;/p&gt;
&lt;p&gt;Cython To The Rescue
- Why we picked Cython among all other available tools (e.g., pybind11, ctypes)
- Debuggability: pdb &amp;amp; gdb&lt;/p&gt;
&lt;p&gt;The GIL Friction
- How to delegate work to C extension
- How to make multithreading work&lt;/p&gt;
&lt;p&gt;AsyncIO Topic
- Not blocking the loop, the main headache.
- Non-blocking I/O solution 1: replacing C libraries’ I/O operations
- Non-blocking I/O solution 2: dedicated background poller thread
- Performance improvement (10k -&amp;gt; 20k for client, 4k -&amp;gt; 16k for server)&lt;/p&gt;
&lt;p&gt;Migration to AsyncIO
- Tolerate multithreading and AsyncIO in the same application
- Make both API co-existable in the same application&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lidi Zheng</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/grpc-python-c-extensions-and-asyncio.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>ASYNC / Concurreny</category><category>CPython</category><category>Cython</category><category>Performance</category></item><item><title>Guido van Rossum Q&amp;A</title><link>https://pyvideo.org/europython-2020/guido-van-rossum-qa.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Q&amp;amp;A session with Guido van Rossum, Creator of Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guido van Rossum</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/guido-van-rossum-qa.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Python general</category></item><item><title>Honey, There Is a Python in My Android Phone!</title><link>https://pyvideo.org/europython-2020/honey-there-is-a-python-in-my-android-phone.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This project was initiated during my Christmas vacation, inspired by Android Barcode Scanner as I was looking on the solution that I could catalogue my books by scanning the ISBN using android phone.
This quick solution did save me enormous amount of time in cataloguing my books. Intriguing by the design of APIs that can interact with android intents, I decided to dig further to understand how the APIs works. In concept, there is an RPC call between android app and python interpreter within the app that acts as a bridge, which allows python APIs to trigger Android intents, upon calling related APIs. For example, using the code snippet above, when Python GPS API is executed, the API will send request to Android GPS intent via the RPC call. Once Android intent receives the request, it will grab the GPS data, and passes the GPS data back to Python GPS API through the same channel.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Ing Wei Tang</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/honey-there-is-a-python-in-my-android-phone.html</guid><category>EuroPython 2020</category><category>conference</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>python</category><category>Gadgets</category><category>General</category><category>Python 3</category></item><item><title>How to Avoid Becoming a 10x Engineer</title><link>https://pyvideo.org/europython-2020/how-to-avoid-becoming-a-10x-engineer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why you should ignore advice by random internet people, by a random internet person&lt;/p&gt;
&lt;p&gt;The internet has never failed at being, among other things, a giant treasure of unsolicited advice by random people on all sorts of things, programming being no exception. Wanna become a better coder? Learn to maximize your WPM (c). Never look at documentation because that's just embarrassing. And for crying out loud, change your screen background to black!&lt;/p&gt;
&lt;p&gt;So there you are, a fairly okay programmer, looking for ways to become better at coding. How do you achieve that? Well I'm no 10x engineer myself (thank goodness), but I do believe that there's a handful of things we can safely rule out.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ivana Kellyerova</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/how-to-avoid-becoming-a-10x-engineer.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Best Practice</category><category>Programming</category><category>The Answer to Life the Universe and Everything Else</category></item><item><title>How to be Pythonic? Design a Query Language in Python</title><link>https://pyvideo.org/europython-2020/how-to-be-pythonic-design-a-query-language-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Query language is an important part of a database system, it is how people manage their data and how they can make the data useful to them. Starting from the 70s, the world is full of relational databases and SQL was the way to make queries. However, SQL is valuable to an injection attack. Lots of efforts are being used to stop those attacks and it made workflow become less efficient.&lt;/p&gt;
&lt;p&gt;We don’t want to make the same mistake. That’s why using a Python query language is good. Having the Python community in our mind, we created WOQLpy, an open-source query language that lets users build queries in Python, instead of JSON-LD which is the native query language for our TerminusDB database. Now users can store data with a knowledge graph and make graph data visualization with Python.&lt;/p&gt;
&lt;p&gt;In the first part of the talk, we will talk about what challenges we have when creating a query language in Python, the method we use, the idea and theory behind, and how WOQLpy work. This part will include a quick live demo of using WOQLpy so audiences can have an impression on how to make a query and get the task done, that is, getting a meaningful graph visualization form the source CSVs. The process of how to create a database and schema, loading the data form many CSVs, making a query and visualization, will be demonstrated using just one python script.&lt;/p&gt;
&lt;p&gt;In the second part of the talk, we want to stimulate a discussion of what is a good design in Python and what is not. This part will be more interactive with the audiences, as we want to hear from you all, what would be the best for Pythonistas. By first suggesting some possible design, we will use a live voting system to gather opinions. This part of the talk will extend to the Q &amp;amp; A sessions to allow further discussions.&lt;/p&gt;
&lt;p&gt;This talk is for Pythonista at all levels who are interested in starting to design a package in Python, no matter if the audience has published a python library or not. By attending this talk, audiences will learn about how to design a Python package that will be useful to Pythonistas and hopefully encourage more people to publish open-source packages online.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cheuk Ho</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/how-to-be-pythonic-design-a-query-language-in-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>APIs</category><category>Databases</category><category>Graph Databases</category><category>Open-Source</category><category>Programming</category></item><item><title>How to Run a Corridor Track in a Remote Conference with Python</title><link>https://pyvideo.org/europython-2020/how-to-run-a-corridor-track-in-a-remote-conference-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How hard can it be..? Let's find out..!&lt;/p&gt;
&lt;p&gt;One of the best aspects of any conference, and EuroPython in particular, is the corridor track. It's when you walk around the physical conference venue and bump into an old buddy, find yourself striking up a conversation with a friendly co-attendee in the coffee queue, or join a huddle of welcoming folks discussing something interesting. The corridor track is where the community comes alive.&lt;/p&gt;
&lt;p&gt;How do we remotely recreate the opportunity for chance encounters, unexpected conversation and exploration of a venue and new city with friends?&lt;/p&gt;
&lt;p&gt;We already have a template for a solution: MUDs (multi-user dungeons/dimensions), back in the day, were hugely popular virtual worlds of text. I asked myself, &amp;quot;what would a MUD written in 2020 look like?&amp;quot;. Then, rather foolishly, &amp;quot;how hard can this be?&amp;quot;. Happily, I'd written a MUD in Python as a recent entry to PyWeek.&lt;/p&gt;
&lt;p&gt;This talk describes how I initially created, extended and then refined my very own MUD, written in Python using asyncio, structlog, sly, redis and other fun technology. What's more, this MUD is special because it's a programmable MUD: it's really a multi-user development platform for on-the-fly coding of interactive virtual worlds.&lt;/p&gt;
&lt;p&gt;What could possibly go wrong..? Let's find out..!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicholas Tollervey</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/how-to-run-a-corridor-track-in-a-remote-conference-with-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Conferences and Meet-Ups</category><category>Fun and Humor</category><category>Game-Development</category><category>Python general</category></item><item><title>How to sort anything</title><link>https://pyvideo.org/europython-2020/how-to-sort-anything.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Keeping your data organized with &amp;quot;sorted&amp;quot; and custom functions&lt;/p&gt;
&lt;p&gt;Sorting is one of those things that we take for granted in Python. The built-in &amp;quot;sorted&amp;quot; function knows how to sort any iterable of objects that are themselves sortable.&lt;/p&gt;
&lt;p&gt;But hiding behind that simple description is a great deal of depth. In this talk, I'll go deep into what it means to sort, and how we can sort any collection of Python data.  We'll see how you can use custom functions to sort built-in data structures in new and interesting ways.  And we'll see how you can design your own custom classes such that they will sort in just the way you want.&lt;/p&gt;
&lt;p&gt;After watching this talk, you'll have a better understanding of sorting, built-in data structures, function objects, and how &amp;quot;magic methods&amp;quot; affect the our Python classes.  Moreover, you'll be able to write clearer, shorter, and more easily understood code.&lt;/p&gt;
&lt;p&gt;Topics I'll address in this talk:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;sorted&amp;quot; and Timsort&lt;/li&gt;
&lt;li&gt;Sorting a list of simple structures&lt;/li&gt;
&lt;li&gt;Reversing the direction with &amp;quot;reverse&amp;quot;&lt;/li&gt;
&lt;li&gt;Custom sorting with &amp;quot;key&amp;quot;&lt;/li&gt;
&lt;li&gt;Stable sort&lt;/li&gt;
&lt;li&gt;Sorting a list of dicts&lt;/li&gt;
&lt;li&gt;Using &amp;quot;lambda&amp;quot;&lt;/li&gt;
&lt;li&gt;Using operator.itemgetter&lt;/li&gt;
&lt;li&gt;Sorting a list of named tuples&lt;/li&gt;
&lt;li&gt;Sorting a list of objects&lt;/li&gt;
&lt;li&gt;Making your object sortable&lt;/li&gt;
&lt;li&gt;The functools.total_ordering decorator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is an intermediate-level talk; I'll assume that anyone attending knows how to write functions, classes, and methods.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Reuven Lerner</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/how-to-sort-anything.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Data</category><category>Development</category><category>Functional Programming</category></item><item><title>How to write multi-paradigm code</title><link>https://pyvideo.org/europython-2020/how-to-write-multi-paradigm-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;... without making a mess&lt;/p&gt;
&lt;p&gt;Python is a powerful multi-paradigm language which combines elements of object-orientation and functional programming. Both concepts can be really powerful if used right. But what if you use them together? It can be pragmatic and very efficient, but things can also get messy really quickly.&lt;/p&gt;
&lt;p&gt;This talk explores peaceful co-existence of oo-classes and pure functions in the same code base. The focus is on identifying the right tool for the right job and bringing together the best of both. The main topics are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Code Structure&lt;/li&gt;
&lt;li&gt;Data Structures&lt;/li&gt;
&lt;li&gt;State Handling&lt;/li&gt;
&lt;li&gt;Multiple implementations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Prerequisites:
There are no formal prerequisites for this course, although it is recommended that participants have a strong background in Python and its code structuring mechanisms, as well as a deep understanding of at least one of the paradigms of OOP and FP.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Elias Mistler</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/how-to-write-multi-paradigm-code.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Abstractions</category><category>Architecture</category><category>Best Practice</category><category>Clean Code</category><category>Functional Programming</category></item><item><title>HTTP/3 – Why should I care?</title><link>https://pyvideo.org/europython-2020/http3-why-should-i-care.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Internet foundations reworked.&lt;/p&gt;
&lt;p&gt;HTTP is the foundation of the current web, and HTTP/3 is the upcoming major version of it. The new version is built on top of the QUIC transport protocol, originally developed in Google.&lt;/p&gt;
&lt;p&gt;HTTP/3 can change the Internet as we know it today. Since its beginning in the 90s, HTTP transfers data over TCP to ensure reliable connections between clients and servers. QUIC is a TCP alternative, reimplemented on top of unreliable and connectionless UDP.&lt;/p&gt;
&lt;p&gt;Proprietary Google implementation of QUIC is deployed worldwide and supported by Chrome browsers. Future HTTP/3 will be hopefully standardized by IETF soon, but many diverse implementations are available already today.&lt;/p&gt;
&lt;p&gt;HTTP/3 improves performance and increases privacy. The switch from TCP to QUIC allows us to address the inherent limitations of previous HTTP versions. The QUIC protocol is completely encrypted, including traffic control headers, which are visible in TCP.&lt;/p&gt;
&lt;p&gt;This talk introduces HTTP/3 and the underlaying QUIC protocol. It shows both advantages and disadvantages of the new technology, and it describes the landscape of the current implementations and suggests what you can try today.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miloslav Pojman</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/http3-why-should-i-care.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>HTTP</category><category>Internet</category><category>Privacy</category><category>Web</category><category>Web Protocols</category></item><item><title>Interactive Mapmaking with Python</title><link>https://pyvideo.org/europython-2020/interactive-mapmaking-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducing Geopatra for quickly creating amazing interactive maps with dataframes&lt;/p&gt;
&lt;p&gt;GeoDataframes are awesome for working with GIS data in Python as it provides the goodness of pandas for geographic data but So let's use them to create some cool interactive maps&lt;/p&gt;
&lt;p&gt;This talk introduces Geopatra, an open-source mapping library that can be used to quickly map geodataframes with libraries like folium, kepler.gl, plotly, etc. Currently interactive mapping with geodataframes is not very straighforward for beginners and requires you to understand the interfaces exposed by different mapping libraries.
geopatra attempts to abstract all the complexities and tries to provide a unified framework for mapping geodataframes&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Introduction (2 mins)&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Who am I?&lt;/li&gt;
&lt;li&gt;Setting the expectations&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Working with Geodataframes (5 mins)&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Reading Spatial data as a GeoDataframe&lt;/li&gt;
&lt;li&gt;The awesomeness of GeoDataframes (An overview of some of the amazing things you can do with a single line of code eg: Spatial joins, Manipulations, and transformations)&lt;/li&gt;
&lt;li&gt;Now that we have established our love for geopandas lets map geodataframes&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Let the Mapmaking begin (10 mins)&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Basic Non Interactive maps with Geopandas and Matplotlib&lt;/li&gt;
&lt;li&gt;Creating basic interactive maps with Folium, Plotly &amp;amp; Kepler (GeoJSONPlots, Clustermaps, Heatmaps, H3gridmaps)&lt;/li&gt;
&lt;li&gt;The number of steps vs the number of necessary steps&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Enter Geopatra (10 mins)&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The need for Geopatra (Could it be any Easier and Faster)&lt;/li&gt;
&lt;li&gt;Wrapping up popular mapmaking libraries for GeoDataframes&lt;/li&gt;
&lt;li&gt;Create interactive maps with just a single line&lt;/li&gt;
&lt;li&gt;Future work and Discussion :)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sangarshanan Veeraraghavan</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/interactive-mapmaking-with-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>GEO and GIS</category><category>Open-Source</category><category>Visualization</category></item><item><title>IoTPy: Python + Streams + Agents for Streaming Applications</title><link>https://pyvideo.org/europython-2020/iotpy-python-streams-agents-for-streaming-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ingest and analyze streams of data generated by sensors, social media an other sources.&lt;/p&gt;
&lt;p&gt;Sensors, social media, news feeds, webcams and other sources generate streams of data which are analyzed to control actuators, generate alerts, and feed displays. These applications process streams on onboard computers, such as the Raspberry Pi, connected directly to sensors, and send summarized information to the cloud for further processing. These applications have two characteristics: (1) Concurrency: The applications are concurrent using multiple threads to connect to sensors and actuators, shared memory across multiple processes on multicore machines and message passing for distributed systems spanning multiple computers. (2) Data Analysis: The applications use programs from a variety of libraries including those for signal processing, machine learning and natural language processing.&lt;/p&gt;
&lt;p&gt;Developers of streaming applications can use open-source software to deal with both characteristics. Concurrency: multiprocessing.Array can be used to construct shared-memory multiprocessing Python programs in multicore computers, and frameworks such as APMQ and Kafka can be used to build distributed applications. Data Analysis: A vast collection of open-source Python libraries can be used to analyze data in streams. Developers of streaming applications encounter an impedance mismatch between the software libraries that address these two characteristics. The next paragraph describes the mismatch and how IoTPy addresses it.&lt;/p&gt;
&lt;p&gt;Programs in most software libraries apply a function to data, get results, and terminate execution. By contrast, streaming applications are perpetual processes that analyze endless streams of data. IoTPy helps developers: (1) build non-terminating streaming applications by harnessing conventional terminating programs from Python’s huge base of libraries and (2) create multithreaded, multicore and distributed Python applications by simply connecting streams to each other.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.AssembleSoftware.com"&gt;https://www.AssembleSoftware.com&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kanianthra Chandy</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/iotpy-python-streams-agents-for-streaming-applications.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Distributed Systems</category><category>Internet of Things (IoT)</category><category>Messaging and Job Queues (RabbitMQ/Redis/...)</category><category>Scientific Libraries (Numpy/Pandas/SciKit/...)</category><category>Sensors</category></item><item><title>IPython: The Productivity Booster</title><link>https://pyvideo.org/europython-2020/ipython-the-productivity-booster.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn to be productive with IPython&lt;/p&gt;
&lt;p&gt;IPython seems like a fancy Python shell. Why do we need it when we have PyCharm, VSCode, and other IDEs?&lt;/p&gt;
&lt;p&gt;In this talk you'll learn how to use the power of IPython for rapid development and how you can integrate it with existing tools. We'll cover magic commands, calling external process, usage of extended history, async/await and more.&lt;/p&gt;
&lt;p&gt;You'll also learn on some popular extension and cool configuration hacks (such as &lt;cite&gt;%autoreload 2&lt;/cite&gt;)&lt;/p&gt;
&lt;p&gt;Since Jupyter is based on IPython, you'll be able to use all of what you
learned in Jupyter Lab/Notebooks as well.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miki Tebeka</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/ipython-the-productivity-booster.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Development</category><category>Ipython</category></item><item><title>Lessons from the Trenches: rewriting and re-releasing virtualenv</title><link>https://pyvideo.org/europython-2020/lessons-from-the-trenches-rewriting-and-re-releasing-virtualenv.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;virtualenv is a tool that builds virtual environments for Python. It was first created in September 2007 and lived most of its life being a single file project with an increasing amount of (scary) workarounds within. It managed to grow until it was 2,700 lines of code. Maintaining this project became increasingly more troublesome, to the point where, we had more than 500 open issues at one point. In July 2019, I started working from scratch on a rewrite, with the goal of not just increasing the project's maintainability, but also to make it faster and add some new features that were just impossible or too hard to do in the existing code base. Fast forward six months to January 2020, when we released the first beta, with the first full release coming out on 10th February. It took a bit more than a month to squash all the open bugs tickets, but April started without any remaining open bug tickets. This talk will cover the lessons I've learned while on this journey.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bernat Gabor</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/lessons-from-the-trenches-rewriting-and-re-releasing-virtualenv.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Packaging</category><category>Virtual Env</category><category>python</category></item><item><title>Live-coding a music synthesizer</title><link>https://pyvideo.org/europython-2020/live-coding-a-music-synthesizer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is going to be a fun live-coding session using NumPy and SoundDevice. The goal of this talk is to make the computer produce realistic-sounding instrument sounds, using nothing but math.&lt;/p&gt;
&lt;p&gt;All the code will be written live and we'll hear the audio that it produces.&lt;/p&gt;
&lt;p&gt;We’ll start with creating a simple sound using a sine wave. We’ll gradually make it sound more like a real instrument, learning a little
bit about music theory on the way. We’ll add features one-by-one until by the end of the talk, we’ll hear our synthesizer play a piece
of classical music.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ram Rachum</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/live-coding-a-music-synthesizer.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Agile</category><category>Algorithms</category><category>Fun and Humor</category><category>Physics</category><category>PyPy</category></item><item><title>Machine Learning for Everyone</title><link>https://pyvideo.org/europython-2020/machine-learning-for-everyone.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Machine learning (ML) is becoming an essential technology for our day to day life. Stop taking ML as a threat and learn it today as not learning it is a HUGE LOSS! Get started today with ML in Aaron's remarkable 45-mins talk. We will begin by talking about the paradigm of ML, then taking a deep dive into Neural Networks and building a Neural Network from scratch with Keras and TensorFlow (the hottest machine learning framework). You'll master the magic of neural networks that are powering incredible advances both in AI, self-driving cars, and much more! Finally, we will finish off by talking about Reinforcement learning and how it is empowering YouTube suggestions along with tips-and-tricks from a specialist plus a grand finale mind-blowing demo. Ready to master the paradigm of ML? Let's get started.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aaron Ma</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/machine-learning-for-everyone.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>Deep Learning</category><category>General</category><category>Machine-Learning</category></item><item><title>Making Pandas Fly</title><link>https://pyvideo.org/europython-2020/making-pandas-fly.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Process bigger-than-RAM data using Pandas, Dask and Vaex&lt;/p&gt;
&lt;p&gt;Larger datasets can't fit into RAM - suddenly you can't use Pandas any more - but we need to analyse that data! First we'll review techniques to compress our data (maybe cutting our DataFrame RAM usage in half!) so we can process more rows using regular Pandas. Next we'll look at clever ways to make common operations run faster on DataFrames including dropping down to numpy, compiling with Numba and running multi-core. Finally for still-larger datasets we'll review Dask on Pandas and the new Vaex competitor solution. You'll leave with new techniques to make your DataFrames smaller and ideas for processing your data faster.
This talk is inspired by Ian's work updating his O'Reilly book High Performance Python to the 2nd edition for 2020. With over 10 years of evolution the Pandas DataFrame library has gained a huge amount of functionality and it is used by millions of Pythonistas - but the most obvious way to solve a task isn't always the fastest or most RAM efficient. This talk will help any Pandas user (beginner or beyond) process more data faster, making them more effective at their jobs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ian Ozsvald</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/making-pandas-fly.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Big Data</category><category>Data Science</category><category>Multi-Processing</category><category>Performance</category><category>Scientific Libraries (Numpy/Pandas/SciKit/...)</category></item><item><title>Mastering a data pipeline with Python: 6 years of learned lessons from mistakes</title><link>https://pyvideo.org/europython-2020/mastering-a-data-pipeline-with-python-6-years-of-learned-lessons-from-mistakes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building data pipelines are a consolidated task, there are a vast number of tools that automate and help developers to create data pipelines with few clicks on the cloud. It might solve non-complex or well-defined standard problems. This presentation is a demystification of years of experience and painful mistakes using Python as a core to create reliable data pipelines and manage insanely amount of valuable data. Let's cover how each piece fits into this puzzle: data acquisition, ingestion, transformation, storage, workflow management and serving. Also, we'll walk through best practices and possible issues. We'll cover PySpark vs Dask and Pandas, Airflow, and Apache Arrow as a new approach.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robson Junior</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/mastering-a-data-pipeline-with-python-6-years-of-learned-lessons-from-mistakes.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>Big Data</category><category>Case Study</category><category>Data Science</category><category>Open-Source</category></item><item><title>Meditations on First Deployment: A Practical Guide to Responsible Development</title><link>https://pyvideo.org/europython-2020/meditations-on-first-deployment-a-practical-guide-to-responsible-development.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Keynote&lt;/p&gt;
&lt;p&gt;As the impact of software increasingly reaches farther and wider, our professional responsibility as developers becomes more critical to society. The production systems we design, build and maintain often bring inherent adversities with complex technical, societal and even ethical challenges. The skillsets required to tackle these challenges require us to go beyond the algorithms, and require cross-functional collaboration that often goes beyond a single developer. In this talk we introduce intuitive and practical insights from a few of the core ethics themes in software including Privacy, Equity, Trust and Transparency. We cover their importance, the growing societal challenges, and how organisations such as The Institute for Ethical AI, The Linux Foundation, the Association for Computer Machinery, NumFocus, the IEEE and the Python Software Foundation are contributing to these critical themes through standards, policy advise and open source software initiatives. We finally will wrap up the talk with practical steps that any individual can take to get involved and contribute to some of these great open initiatives, and contribute to these critical ongoing discussions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alejandro Saucedo</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/meditations-on-first-deployment-a-practical-guide-to-responsible-development.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Ethics</category><category>Machine-Learning</category></item><item><title>Migrating codebases with millions of modules from Python 2 to Python 3</title><link>https://pyvideo.org/europython-2020/migrating-codebases-with-millions-of-modules-from-python-2-to-python-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This has been mitigated with tooling and education, but for the most part it requires human action and decision. While most codebases have somewhere between tens and thousands of Python modules, some companies may maintain a codebase with millions of modules. This presentation covers techniques and tooling that Google created to enable the developers to scope their migration needs, plan the work required, execute effectively at scale and collaborate across teams/dependencies.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Francisco Passos</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/migrating-codebases-with-millions-of-modules-from-python-2-to-python-3.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Best Practice</category><category>Python 2</category><category>Python 3</category></item><item><title>Morning Announcements 07/24</title><link>https://pyvideo.org/europython-2020/morning-announcements-0724.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Morning Annoucements&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various Speakers</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/morning-announcements-0724.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category></item><item><title>NLPeasy - a Workflow to Analyse, Enrich, and Explore Textual Data</title><link>https://pyvideo.org/europython-2020/nlpeasy-a-workflow-to-analyse-enrich-and-explore-textual-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Use pre-trained NLP-models, ingest into Elastic Search, and enjoy auto-generated Kibana dashboards!&lt;/p&gt;
&lt;p&gt;Ever wanted to try out NLP methods but it felt it too cumbersome to set up a workflow for textual data? How to enrich your data based on textual features and explore the results?&lt;/p&gt;
&lt;p&gt;NLPeasy (&lt;a class="reference external" href="https://github.com/d-one/NLPeasy"&gt;https://github.com/d-one/NLPeasy&lt;/a&gt;) does that: Enrich the data using well-known pre-trained models (Word embeddings, Sentiment Analysics, POS, Dependency Parsing). Then start the Elastic Stack on your Docker. Set-up indices and ingest it in bulk. And finally generate Kibana dashboards to explore the results.&lt;/p&gt;
&lt;p&gt;Complicated? Not at all! Just do it in a simple Jupyter Notebook.&lt;/p&gt;
&lt;p&gt;In this presentation we will give an architecture overview of the different components and demonstrate the capabilities of this Python package.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philipp Thomann</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/nlpeasy-a-workflow-to-analyse-enrich-and-explore-textual-data.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Data Science</category><category>Elastic Search</category><category>Machine-Learning</category><category>Natural Language Processing</category></item><item><title>Object Internals</title><link>https://pyvideo.org/europython-2020/object-internals.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Memory address in Python&lt;/p&gt;
&lt;p&gt;This talk is intended to explain to participants what is happening under the hood when they are playing around with different python built-in data structures. Explain the concepts such that they are not surprised by the behavior of Python.&lt;/p&gt;
&lt;p&gt;Pre-requisites:
Anyone who knows built-in python data structures like List, Dictionaries, set, etc.&lt;/p&gt;
&lt;p&gt;Curiosity questions that the talk answers:
1. What happens to the memory address when * operator is used?
2. When does python create a new object in memory?
3. What does it refer to the mutability and immutability of objects in Python?
4. If the outer object is immutable but the reference objects are mutable. Can the elements be added?
5. What is the difference at the memory level when we refer to deep copy and shallow copy in lists?
6. Operations like List.sort and sorted in python? What to use, when to use? What happens at the memory level?
7. What is the difference between is vs ==? When should it be used?
8. Lots and lots of interesting examples.
9. How do we determine the memory reference id associated with the object?
10. Meaning of assigning a value to a variable in Python.&lt;/p&gt;
&lt;p&gt;The existing slides use screenshots. But, I'll be including more interesting examples and would replace the screenshots with GIFs. So, that folks get a feeling of live coding and remain interested in the presentation. Along with the visual representation of what is happening at the memory level.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mridu Bhatnagar</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/object-internals.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Data-Structures</category><category>Development</category><category>Python 3</category></item><item><title>Overcoming access control in web APIs</title><link>https://pyvideo.org/europython-2020/overcoming-access-control-in-web-apis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to address security concerns using Sanic&lt;/p&gt;
&lt;p&gt;Great, you've developed a great web API. Awesome, you are about to deploy it. But, how do you secure it and manage access?&lt;/p&gt;
&lt;p&gt;Learn about different approaches to securing a web API whether it is meant for third-party integrations or driving a modern single-page application. Not all APIs are the same, so we will explore different considerations to make when crafting a solution to handle token-based authentication, and scoping to define access levels.&lt;/p&gt;
&lt;p&gt;As one of the core developers of the async web framework Sanic, I will primarily focus on authentication and authorization tools inside Sanic to showcase how to address these issues. However, the concepts should be broadly applicable enough to take back and apply to any web API. The goal is to learn the hot spots, and identify strategies to overcome them.&lt;/p&gt;
&lt;p&gt;Core take aways will include:
- how to implement various JWT strategies;
- best practices for storing JWTs on a browser; and
- controlling access privileges using structured scopes.&lt;/p&gt;
&lt;p&gt;Time permitting, we will even discuss some tools to be used to help ease the anxiety and make security more approachable.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Hopkins</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/overcoming-access-control-in-web-apis.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>APIs</category><category>Authentication</category><category>Best Practice</category><category>RESTful</category><category>Web</category></item><item><title>Painless Machine Learning in Production</title><link>https://pyvideo.org/europython-2020/painless-machine-learning-in-production.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Developing machine learning models is easy; training, deploying, monitoring, scaling, and maintaining them in an automated fashion - all while maintaining your sanity - is hard.&lt;/p&gt;
&lt;p&gt;In this session, I'll discuss the infrastructure and tooling my small team of data science practitioners and engineers is using to manage and orchestrate the machine learning model lifecycle, including pitfalls we've encountered along the way. Particular attention will be paid to where we've opted to use off-the-shelf solutions versus developing our own, the importance of developer ergonomics, and how to maximally empower data scientists to get their work into production without the need for a dedicated MLOps team.&lt;/p&gt;
&lt;p&gt;The talk will cover our ML stack as it exists in production today, and will touch on our application of a number of technologies and techniques, including:
- AWS SageMaker
- Airflow
- Docker
- Cookiecutter
- Property-based testing
- Jsonschema
- Linting
- Slack integration
- Model artifacts and diagnostics
- Automated deployments and rollbacks
- Healthchecks
- Autoscaling
- DBT&lt;/p&gt;
&lt;p&gt;At the end of the session, attendees should expect to leave with new insights that they can apply immediately to their own ML systems and infrastructure, as well as a better understanding of how to minimize engineering and ops overhead, in the real world, across data science teams of any size and composition.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chase Stevens</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/painless-machine-learning-in-production.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Case Study</category><category>Data Science</category><category>DevOps general</category><category>Infrastructure</category><category>Machine-Learning</category></item><item><title>Painting with GANs: Challenges and Technicalities of Neural Style Transfer</title><link>https://pyvideo.org/europython-2020/painting-with-gans-challenges-and-technicalities-of-neural-style-transfer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building Artistic Artefacts using Generative Networks&lt;/p&gt;
&lt;p&gt;A lot of advancements are happening in the field of Deep Learning and Generative Adversarial Networks are one of them. We have seen GANs being applied for photo editing and in-painting, generating new image datasets and realistic photographs, increasing resolution of images (Super Resolution), and many more things. Some people have also exploited GANs for generating fake content. All the above-mentioned examples are result of a technique where the focus is to generate uncommon yet original samples from scratch. However, these examples have very less commercial applications and GANs are capable of doing much more. The focus of this talk is a technique called &amp;quot;Neural Style Transfer (NST)&amp;quot; which has numerous commercial applications in the gaming world, fashion/design industry, mobile applications, and many more fields. Challenges and technicalities of NSTs will be covered in great detail. We will teach the machines on how to paint images and utilize Style Transfer networks to generate artistic artefacts.&lt;/p&gt;
&lt;p&gt;The flow of the talk will be as follows:
~ Self Introduction [1 minute]
~ A Succinct Prelude to GANs [10 minutes]
~ Understanding Style Transfer [5 minutes]
~ Learning about Neural Style Transfer Networks [5 minutes]
~ Loss Functions: Content, Style, Total Variantion [10 minutes]
~ Code Walkthrough and Result Analysis [5 minutes]
~ Challenges and Applications [5 minutes]
~ Questions and Answers Session [3-4 minutes]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anmol Krishan Sachdeva</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/painting-with-gans-challenges-and-technicalities-of-neural-style-transfer.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Computer Vision</category><category>Deep Learning</category><category>Generative Adversarial Networks</category><category>Image Processing</category><category>Machine-Learning</category></item><item><title>Paolo Melchiorre - A pythonic full-text search</title><link>https://pyvideo.org/europython-2020/paolo-melchiorre-a-pythonic-full-text-search.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A full-text search on a website is the best way to make its contents easily accessible to users because it returns better results and is in fact used in online search engines or social networks.
The implementation of full-text search can be complex and many adopt the strategy of using dedicated search engines in addition to the database, but in most cases this strategy turns out to be a big problem of architecture and performance.
In this talk we'll see a pythonic way to implement full-text search on a website using only Django and PostgreSQL, taking advantage of all the innovations introduced in latest years, and we'll analyse the problems of using additional search engines with examples deriving from my experience (e.g. djangoproject.com or readthedocs.org).
Through this talk you can learn how to add a full-text search on your website, if it's based on Django and PostgreSQL, or you can learn how to update the search function of your website if you use other search engines.
More info on &lt;a class="reference external" href="https://www.paulox.net/2020/07/23/europython-2020/"&gt;https://www.paulox.net/2020/07/23/europython-2020/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paolo Melchiorre</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/paolo-melchiorre-a-pythonic-full-text-search.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Django</category><category>PostgreSQL</category></item><item><title>Pluggable Architecture</title><link>https://pyvideo.org/europython-2020/pluggable-architecture.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Extend functionality without touching existing code&lt;/p&gt;
&lt;p&gt;Applications and libraries with a pluggable architecture allow developers to add custom functionality. Plugins can customize user interfaces, create new workflows, and interface with legacy systems. Designing a plugin is often difficult - documentation is sparse, outdated, or non-existent. You end up diving into a unfamiliar codebase to figure out what to do.&lt;/p&gt;
&lt;p&gt;This talk examines Pluggable Architecture by creating a custom plugin system: we will design an interface, think about where to hook in custom behavior, and discuss testing techniques. Understanding these principles will enable us to write custom plugins for third-party libraries. Extend the functionality of your favourite library without touching existing code!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aly Sivji</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/pluggable-architecture.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Abstractions</category><category>Architecture</category><category>Development</category><category>Software Design</category><category>System Architecture</category></item><item><title>Practical Optimisations for Pandas</title><link>https://pyvideo.org/europython-2020/practical-optimisations-for-pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing performant pandas code is not an easy task, in this talk I will explain how to find the bottlenecks and how to write proper code with computational efficiency, and memory optimisation in mind.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eyal Trabelsi</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/practical-optimisations-for-pandas.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Best Practice</category><category>Data</category><category>Data Science</category></item><item><title>Probabilistic Forecasting with DeepAR and AWS SageMaker</title><link>https://pyvideo.org/europython-2020/probabilistic-forecasting-with-deepar-and-aws-sagemaker.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In time series forecasting we are interested in how the time series is going to continue in the future. This is of high importance in areas like forecasting energy production from renewable resources, forecasting demand of customers or the price of products. Many forecasting algorithms provide only the prediction. However, oftentimes we are also interested in the likelihood of the prediction and how much it may vary. This is what probabilistic forecasting is for. With every forecast, we also obtain an upper and lower bound with certain probabilities. For a long time, probabilistic forecasting was limited to traditional techniques like ARIMA. DeepAR is an algorithm that allows us to combine Deep Learning techniques with probabilistic forecasting. Additionally, in contrast to training a model for each time series individually, DeepAR suggests training one large forecasting model for all related time series. The algorithm was developed by Amazon and is also provided in AWS SageMaker.
In this talk, we will understand the theoretical basics of DeepAR, have a look at a practical time series example and will demonstrate an implementation. In the end, you will be prepared to get started with your own forecasts.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicolas Kuhaupt</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/probabilistic-forecasting-with-deepar-and-aws-sagemaker.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Data Science</category><category>Deep Learning</category><category>Machine-Learning</category><category>Predictions</category><category>Public Cloud (AWS/Google/...)</category></item><item><title>pyRT - Computer Graphics in Jupyter Notebooks for Fun and Teaching</title><link>https://pyvideo.org/europython-2020/pyrt-computer-graphics-in-jupyter-notebooks-for-fun-and-teaching.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Image Generation using Pure Python&lt;/p&gt;
&lt;p&gt;PyRT (pronounced pirate) is a raytracer/image generator for Python 3.5 and higher. This project is mainly done with the following in mind:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ray tracing in the Jupyter notebook&lt;/li&gt;
&lt;li&gt;Teaching computer graphics and ray tracing&lt;/li&gt;
&lt;li&gt;Exploring ray tracing concepts for geo data using Python.&lt;/li&gt;
&lt;li&gt;Rendering geo data, including large point clouds.&lt;/li&gt;
&lt;li&gt;Implementing new algorithms for rendering large 3D city models.&lt;/li&gt;
&lt;li&gt;Creating 3D-Maps from OpenStreetMap data&lt;/li&gt;
&lt;li&gt;Server-side rendering / cloud based rendering&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this talk I will present the project and show some examples. I will show how useful it is to create quick 2D animations, such as visualization of different sorting algorithms and I how to create fractals and other graphics. A certain focus is also on geodata therefore I will show how to create a live EarthQuake map using pyRT.
In the last part I will show to use pyRT to create 3D renderings.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Christen</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/pyrt-computer-graphics-in-jupyter-notebooks-for-fun-and-teaching.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>3D</category><category>Education</category><category>GEO and GIS</category><category>Teaching</category><category>Virtualization</category></item><item><title>Python Emergency Remote Teaching</title><link>https://pyvideo.org/europython-2020/python-emergency-remote-teaching.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Online Python programming course offered in response to a COVID-19 pandemic lockdown&lt;/p&gt;
&lt;p&gt;During the pandemic lockdown of COVID-19, we found a very different context from the usual: a) students with much more time available for learning b) many students who did not have a personal computer and could only access classes by cell phone c) difficulty to realistically assess learning. In this lecture we will present the real experiences in a traditional programming course given during the Covid-19 pandemic.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fernando Masanori Ashikaga</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/python-emergency-remote-teaching.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>Case Study</category><category>Community</category><category>Education</category></item><item><title>Python in Prison: how open source can change a criminal justice system</title><link>https://pyvideo.org/europython-2020/python-in-prison-how-open-source-can-change-a-criminal-justice-system.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The United States has the highest incarceration rate in the world, with over 2.2 million people behind bars in our prisons, jails, juvenile facilities, and detention centers.&lt;/p&gt;
&lt;p&gt;The system is racist and ineffective, but how do we change something so big and so economically entrenched, especially as software engineers?&lt;/p&gt;
&lt;p&gt;Let’s look at how Python classes in US prisons are transforming rehabilitation and re-entry, and talk about what we can do as individuals and as an open source community to dismantle an unjust system.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica McKellar</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/python-in-prison-how-open-source-can-change-a-criminal-justice-system.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Python 3</category><category>Teaching</category></item><item><title>Python Memory Management 101</title><link>https://pyvideo.org/europython-2020/python-memory-management-101.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Deeping in Garbage collector&lt;/p&gt;
&lt;p&gt;I will review the main mechanims&amp;nbsp;for memory allocation and how the garbage collector works in conjunction with the memory manager for reference counting of the python objects.Finally, I will comment the best practices for memory managment&amp;nbsp;such as writing efficient code.&lt;/p&gt;
&lt;p&gt;These could be the main talking points:
-Introduccition&amp;nbsp;to memory management
-Garbage collector and reference counting with python
-Review the gc module for configuring the python garbage collector
-Best practices for memory managment&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">J.M. Ortega</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/python-memory-management-101.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Best Practice</category><category>Development</category><category>Management</category><category>Python Skills</category></item><item><title>Python Table Manners: Cut the Cookie Gracefully</title><link>https://pyvideo.org/europython-2020/python-table-manners-cut-the-cookie-gracefully.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A Guideline Toward Cleaner Code&lt;/p&gt;
&lt;p&gt;### Goals
I expect the audiences to gain knowledge of the tools I mention and the primary usage of them. The tools will cover various aspects of software engineering (e.g., dependencies, testing, security, etc.). Also, I'll purpose how I combine all these tools in my development workflow as a sample for how the audiences can integrate these tools into their workflow.&lt;/p&gt;
&lt;p&gt;### Outline for 30 minutes
* Dependency Management (4 min)
* Testing - Don't let your customer debug for you (4 min)
* Style Check and auto-fix (4 min)
* Task Management - No more repetitive typing (3 min)
* pre-commit - Prevent committing bad code into codebase (3 min)
* commitizen-tool - How good commit message can help (4 min)
* Security (3 min)
* Cookiecutter - Wrap up all the tools (3 min)
* Q &amp;amp; A (2 min)&lt;/p&gt;
&lt;p&gt;### Outline for 45 minutes
* Dependency Management (5 min)
* Testing - Don't let your customer debug for you (5 min)
* Style Check and auto-fix (5 min)
* Task Management - No more repetitive typing (5 min)
* pre-commit - Prevent committing bad code into codebase (5 min)
* commitizen-tool - How good commit message can help (5 min)
* Security (5 min)
* Continuous Integration - Assemble all the trivial steps (5 min)
* Cookiecutter - Wrap up all the tools (3 min)
* Q &amp;amp; A (2 min)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wei Lee</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/python-table-manners-cut-the-cookie-gracefully.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Best Practice</category><category>General</category><category>Programming</category><category>Tooling</category></item><item><title>Radio Astronomy with Python</title><link>https://pyvideo.org/europython-2020/radio-astronomy-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gaussian Processes and Neural Networks applied to photometric redshift reconstruction&lt;/p&gt;
&lt;p&gt;Looking at higher redshifts is equivalent to looking back in time: they improve the studies of cosmology, expanding our knowledge of the universe. It allows us to study various physical phenomena like the power spectrum of galaxies which describes the distribution of galaxies on a range of scales, galaxy clustering, and large scales, the detection of the Baryon Acoustic Oscillation feature.
As a result,  a significant amount of work has been done to increase the efficiency and accuracy of the process via new algorithms and optimization of existing ones.
Astronomical datasets are undergoing a rapid growth in size and complexity as past, ongoing and future surveys produce massive multi-temporal and multi-wavelength datasets, with huge information to be extracted and analyzed.
The alternative to a full spectroscopic survey is to obtain multi-color images of the sky and perform photometric redshift estimates for the galaxies we have available.
When dealing with this problem, there are two main approaches: model-driven data analysis (template fitting methods) and data-driven analysis, which can use machine learning methods.
To solve this problem, we use data-driven analysis, more specifically GPz (which uses Gaussian processes)  and  ANNz2 (which mainly uses neural networks), both python software.&lt;/p&gt;
&lt;p&gt;Prerequisites: machine learning and basic math knowledge&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Priscila Gutierres</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/radio-astronomy-with-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Big Data</category><category>Data</category><category>Machine-Learning</category><category>Physics</category></item><item><title>Ray: A System for High-performance, Distributed Python Applications</title><link>https://pyvideo.org/europython-2020/ray-a-system-for-high-performance-distributed-python-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scale your applications from a laptop to a cluster with ease&lt;/p&gt;
&lt;p&gt;Ray (&lt;a class="reference external" href="http://ray.io"&gt;http://ray.io&lt;/a&gt;) is an open-source, distributed framework from U.C. Berkeley’s RISELab that easily scales Python applications from a laptop to a cluster. While broadly applicable, it was developed to solve the unique performance challenges of ML/AI systems, such as the heterogeneous task scheduling and state management required for hyperparameter tuning and model training, running simulations when training reinforcement learning (RL) models, and model serving. Ray is now used in many production deployments.&lt;/p&gt;
&lt;p&gt;I'll explain the problems that Ray solves for cluster-wide scaling of general Python applications and for specific examples, like RL workloads. Ray’s features include rapid scheduling and execution of “tasks” and management of distributed state, such as model parameters during training. I'll compare Ray to other libraries for distributed Python.&lt;/p&gt;
&lt;p&gt;This talk is for you if you need to scale your Python applications to a cluster and you want a robust, yet easy-to-use API to do it. You don't need to be a distributed systems expert to use Ray. You'll learn when to use Ray versus alternatives, how it’s used in several open source systems, and how to use it in your projects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dean Wampler</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/ray-a-system-for-high-performance-distributed-python-applications.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Architecture</category><category>Data</category><category>Deep Learning</category><category>Distributed Systems</category><category>Microservices</category></item><item><title>Real Time Stream Processing for Machine Learning at Massive Scale</title><link>https://pyvideo.org/europython-2020/real-time-stream-processing-for-machine-learning-at-massive-scale.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Processing Massively Parallel Stream of Data with Python (+ Kafka, SKlearn, SpaCy and Seldon)&lt;/p&gt;
&lt;p&gt;This talk will provide a practical insight on how to build scalable data streaming machine learning pipelines to process large datasets in real time using Python and popular frameworks such as Kafka, SpaCy and Seldon.&lt;/p&gt;
&lt;p&gt;We will be covering a case study performing automated content moderation on Reddit comments in real time. Our dataset will consist of 200k reddit comments from /r/science, 50,000 of which have been removed by moderators. We will be handling the stream data in a Kubernetes cluster, and the stream processing will be handled using the stream processing library Kafka. We will be running the end-to-end pipeline in Kubernetes with various components legeraging SKLearn, SpaCy and Seldon.&lt;/p&gt;
&lt;p&gt;We will then dive into fundamental concepts on stream processing such as windows, watermarking and checkponting, and we will show how to use each of these frameworks to build complex data streaming pipelines that can perform real time processing at scale by building, deploying and monitoring a machine learning model which will process production incoming data..&lt;/p&gt;
&lt;p&gt;Finally we will show best practices when using these frameworks, as well as a high level overview of tools that can be used for monitoring in-depth.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alejandro Saucedo</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/real-time-stream-processing-for-machine-learning-at-massive-scale.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>ASYNC / Concurreny</category><category>Best Practice</category><category>Big Data</category><category>Distributed Systems</category><category>Scientific Libraries (Numpy/Pandas/SciKit/...)</category></item><item><title>Reduce hardware costs in Internet of Things using Python</title><link>https://pyvideo.org/europython-2020/reduce-hardware-costs-in-internet-of-things-using-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An electronics teacher's perspective&lt;/p&gt;
&lt;p&gt;I guide students in developing systems which are real world and need less hardware. This is possible in 2 steps. One,reduce collecting data which is already available online. Two, compute on cloud instead on the hardware.&lt;/p&gt;
&lt;p&gt;Cloud computing and Web services have opened a plethora of ways which were science fiction for electronics academia. Python packages such as requests, beautifulsoup and pyserial automate electronics at the grassroot level pushing  all complexities to the cloud.&lt;/p&gt;
&lt;p&gt;This talk is about how I motivate students to use python for tasks which otherwise would require complex setup and costly hardware. I will present case studies of accessing websites (ethically per se!) of Indian Meteorological Department and Indian Railways for Internet of Things.
Ready to return to a classroom session? Login for More!!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vijay Sajjanar</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/reduce-hardware-costs-in-internet-of-things-using-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>Case Study</category><category>Data</category><category>Internet of Things</category><category>Web Crawling</category></item><item><title>Resurrecting a django project in python 2.7 for 3.8</title><link>https://pyvideo.org/europython-2020/resurrecting-a-django-project-in-python-27-for-38.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pitfalls and euphoria updating my GeoDjango 1.11 PhD project to Django 3.0&lt;/p&gt;
&lt;p&gt;Goals:&lt;/p&gt;
&lt;p&gt;Describe the process I went though to return to and finish the code I wrote for my PhD modelling the geographic growth and decline of a Bulletin Board Systems (BBS) community called FidoNet. I had to leave the project for 2 major surgeries and finally returned to finish, validate the results and present a paper at the Sunbelt conference in Paris.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Griffith S Rees</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/resurrecting-a-django-project-in-python-27-for-38.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Django</category><category>GEO and GIS</category><category>Git</category><category>Testing</category><category>legacy-code</category></item><item><title>Roadmap to an Open Source Artificial Pancreas &amp; Diabetes monitoring with Flask</title><link>https://pyvideo.org/europython-2020/roadmap-to-an-open-source-artificial-pancreas-diabetes-monitoring-with-flask.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nightscout + Python + Voice + SMS - Using tech for good!&lt;/p&gt;
&lt;p&gt;Open Source has crossed frontiers and is widely used to solve problems in the health &amp;amp; science fields. In this talk we’ll learn about the many moving parts of continuous glucose monitoring for type 1 Diabetes as part of the open-source artificial pancreas project and building a notifier for the most used OSS continuous glucose monitoring dashboard: Nightscout.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Diana Rodriguez Manrique</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/roadmap-to-an-open-source-artificial-pancreas-diabetes-monitoring-with-flask.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>Communication</category><category>DIY</category><category>Development</category><category>Open-Source</category></item><item><title>Running EuroPython 2020 as an online conference</title><link>https://pyvideo.org/europython-2020/running-europython-2020-as-an-online-conference.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Challenges we faced switching to an online event due to COVID-19&lt;/p&gt;
&lt;p&gt;We had been planning the EuroPython 2020 conference in Dublin, Ireland ever since late in 2019, when we ran the CFP. In March, it became apparent that the COVID-19 crisis would not be over by July 2020 and so we had to make a hard decision to either drop the event for 2020 or go online.&lt;/p&gt;
&lt;p&gt;Since we wanted to support the community even in difficult times, we decided to go for the online version -- even though this would be much less engaging than the in-person event.&lt;/p&gt;
&lt;p&gt;For the past months, we have been creating a concept for the conference from scratch. The talk will present our approach, how it came to be and which challenges we faced. The concept should be usable by other conference as well.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc-Andre Lemburg</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/running-europython-2020-as-an-online-conference.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Community</category><category>EuroPython</category><category>EuroPython Society (EPS)</category><category>The Answer to Life the Universe and Everything Else</category></item><item><title>Running Unit Test on Top of Serverless Service</title><link>https://pyvideo.org/europython-2020/running-unit-test-on-top-of-serverless-service.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Increase your parallelization by 50x&lt;/p&gt;
&lt;p&gt;I will share on how to utilize serverless architecture for a less common scenario - unit testing.
As part of the talk, we will also discuss different approaches to parallelizing unit test suite execution.
Attendees will also learns on cost-benefit analysis related to increasing developer productivity.&lt;/p&gt;
&lt;p&gt;Outline:
- Introduction
- Different approaches to parallelizing unit test execution with pro &amp;amp; cons
- What we learned (gotcha) when implementing serverless as a unit test runner
- Cost-Benefit Analysis and usage report,
- Q&amp;amp;A&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adinata Thayib</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/running-unit-test-on-top-of-serverless-service.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Case Study</category><category>Multi-Processing</category><category>Public Cloud (AWS/Google/...)</category><category>Test Libraries (pytest/nose/...)</category><category>Tooling</category></item><item><title>ScanAPI</title><link>https://pyvideo.org/europython-2020/scanapi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Automated Integration Testing and Live Documentation for your API&lt;/p&gt;
&lt;p&gt;In the current IT scenario, the use of APIs is, without question, widely vast, popular, and significant. It seems at least prudent to ensure they are working properly, as expected. To guarantee the quality of the data that is being consumed or used. To ensure that communication between services is occurring as expected. To ensure the system does, in fact, what it should do.&lt;/p&gt;
&lt;p&gt;ScanAPI is an open-source library that was created to solve all these points. ScanAPI provides an easy way to create integration tests for REST APIs via configuration files.&lt;/p&gt;
&lt;p&gt;The three main reasons that led me to the creation of this library were:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;To be a firefighter in a scenario where most of the reported bugs were directly related to some API contract being broken or some endpoint having a behavior different from that expected by the consumer.&lt;/li&gt;
&lt;li&gt;To need to deal with APIs with outdated or mistaken documentation.&lt;/li&gt;
&lt;li&gt;To need to debug an endpoint in the middle of a &amp;quot;chain&amp;quot; of other endpoints. Where I needed to recreate a state that depends on the action of other endpoints.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Given a fictitious example: debug an endpoint to reserve seats on an airplane, which depends directly on the previous call of an endpoint for user registration.&lt;/p&gt;
&lt;p&gt;The ScanAPI is open-source and written in Python. However, it can be used in APIs created in any other programming language, since the tests provided by it are integration tests.&lt;/p&gt;
&lt;p&gt;With ScanAPI you can:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use environment variables&lt;/li&gt;
&lt;li&gt;Create variables&lt;/li&gt;
&lt;li&gt;Chaining requests - making a request from a result of previous responses&lt;/li&gt;
&lt;li&gt;Hide sensitive information of the requests and responses in the generated report&lt;/li&gt;
&lt;li&gt;Write Python code - if you want, it's not necessary :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Topics I intend to address in this talk:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Motivation to create the library&lt;/li&gt;
&lt;li&gt;What problems the library solves&lt;/li&gt;
&lt;li&gt;How to test an API using a ScanAPI&lt;/li&gt;
&lt;li&gt;Show the documentation generated by ScanAPI&lt;/li&gt;
&lt;li&gt;An overview of how it is implemented&lt;/li&gt;
&lt;li&gt;Where it is currently being used&lt;/li&gt;
&lt;li&gt;Next steps&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Project Link: &lt;a class="reference external" href="https://github.com/scanapi/scanapi"&gt;https://github.com/scanapi/scanapi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Prerequisites:
- Python
- REST APIs
- Integration tests&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Camila Maia</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/scanapi.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>APIs</category><category>Open-Source</category><category>RESTful</category><category>Test Libraries (pytest/nose/...)</category><category>Testing</category></item><item><title>Serverless 2.0 with Cloudstate.io-stateful functions with Python</title><link>https://pyvideo.org/europython-2020/serverless-20-with-cloudstateio-stateful-functions-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Imagine billions of functions, with in-memory state, distributed across a Kubernetes cluster!&lt;/p&gt;
&lt;p&gt;Serverless is revolutionary and will dominate the future of Cloud. Function-as-a-Service (FaaS) however—with its stateless and short-lived functions is only the first step.&lt;/p&gt;
&lt;p&gt;What’s needed is a next-generation Serverless platform and programming model for general-purpose application development in the new world of real-time data and event-driven systems. What is missing is ways to manage distributed state in a scalable and available fashion, support for long-lived virtual stateful services, ways to physically co-locate data and processing, and options for choosing the right data consistency model for the job.&lt;/p&gt;
&lt;p&gt;This talk will discuss the challenges, requirements, and introduce you to our proposed solution: Cloudstate—an Open Source project building the next generation Stateful Serverless, running on Kubernetes, Akka, gRPC, Knative, and GraalVM, with polyglot support for Python, Java, Go, JavaScript, Swift, Scala, Python, Kotlin, and more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sean Walsh</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/serverless-20-with-cloudstateio-stateful-functions-with-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Cross-Platform-Development</category><category>Development</category><category>Distributed Systems</category><category>Public Cloud (AWS/Google/...)</category></item><item><title>Sharing Reproducible Python Environments with Binder</title><link>https://pyvideo.org/europython-2020/sharing-reproducible-python-environments-with-binder.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As reproducibility gains traction in the data science and research communities, the need to package code, data and the computational environment is growing.&lt;/p&gt;
&lt;p&gt;There are many tools that address different aspects of this type of packaging, such as Jupyter Notebooks for literate programming, Docker for containerising and porting computational environments, and so on. But they represent barriers to reproducibility as each one requires time and effort to learn.&lt;/p&gt;
&lt;p&gt;Project Binder integrates Notebooks and Docker for generating reproducible computational analyses and combines them with a web-based interface and cloud orchestration engines. This means that analysts do not have to worry about all the moving parts so long as they have followed basic software best practices: their code is version controlled and they've captured the dependencies the analysis needs to run. Binder then hosts the compute in the cloud and makes it easily shareable by providing a unique URL to the code repository, without imposing additional overheads on the analyst.&lt;/p&gt;
&lt;p&gt;During this talk, Sarah will introduce Binder (the service), BinderHub (the technological infrastructure) and mybinder.org (a public instance of a Binder service, free for anyone to use) and demonstrate how it can be used to share Python environments and analyses.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sarah Gibson</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/sharing-reproducible-python-environments-with-binder.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Best Practice</category><category>Data Science</category><category>Jupyter</category><category>Open-Source</category><category>Public Cloud (AWS/Google/...)</category></item><item><title>Simulation of logistic systems in Python with salabim</title><link>https://pyvideo.org/europython-2020/simulation-of-logistic-systems-in-python-with-salabim.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Salabim can help to model complex logistic systems, like warehouses, ports, supply chains, hospitals&lt;/p&gt;
&lt;p&gt;Discrete event simulation is a very powerful technique in many fields, like transport, warehousing, hospitals, manufacturing and logistics.
There are several commercial packages that provide high end GUIs to design a system and to animate the operations. These  packages are neary always close source and are very expensive (think USD 10-20 K per user). Often implementing complex algorithms is cumbersome.
On the other end of the spectrum are open source packages that use existing program languages. Python is particularly interesting because of the vast number of (scientific) packages, like machine learning, statistics and databases.
In te Python landscape there is SimPy, that is rather limited in functionality. In this poster I will present my discrete even simulation package called salabim. Salabim uses coroutines via generators and makes it very easy to model complex systems. The package offers advanced real time (2D) animation, monitoring and statistical sampling.
I will show some applications and how a simple model is built up.&lt;/p&gt;
&lt;p&gt;Ruud van der Ham, core developer salabim&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ruud van der Ham</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/simulation-of-logistic-systems-in-python-with-salabim.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Algorithms</category><category>Engineering</category><category>Robotics</category><category>Use Case</category><category>Visualization</category></item></channel></rss>