<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_martijn-pieters.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-09-16T00:00:00+00:00</updated><entry><title>Concurrent asyncio and sanity</title><link href="https://pyvideo.org/pycon-uk-2019/concurrent-asyncio-and-sanity.html" rel="alternate"></link><published>2019-09-16T00:00:00+00:00</published><updated>2019-09-16T00:00:00+00:00</updated><author><name>Martijn Pieters</name></author><id>tag:pyvideo.org,2019-09-16:pycon-uk-2019/concurrent-asyncio-and-sanity.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you find programming with asyncio daunting? Are you wondering how you'd build a real-world network-connected service with this and not die trying? In this talk I want to share some best practices and tips to help you create reliable, maintainable applications using concurrency.&lt;/p&gt;
</summary><category term="asyncio"></category><category term="concurrency"></category><category term="scalability"></category></entry><entry><title>How not to make a mockery of it</title><link href="https://pyvideo.org/pycon-uk-2018/how-not-to-make-a-mockery-of-it.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Martijn Pieters</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/how-not-to-make-a-mockery-of-it.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Make the most of unittest.mock when testing&lt;/p&gt;
&lt;p&gt;The Python standard library comes with a great tool for helping you
write isolated unit tests: unittest.mock. But, as evident from Stack
Overflow questions on the subject, many people struggle to understand
how to use the library correctly. This talk will help you understand how
to use unitest.mock effectively, with the help of a few problems
inspired by those Stack Overflow posts.&lt;/p&gt;
&lt;p&gt;This talk is aimed at people that already know how to write unittests,
but want to know how to get the most out of unittest.mock.&lt;/p&gt;
</summary></entry></feed>