<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Andrea Giardini</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_andrea-giardini.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-06-03T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Standardising MLOps in a start-up with Dagster and PyTorch</title><link href="https://pyvideo.org/pycon-italia-2022/standardising-mlops-in-a-start-up-with-dagster-and-pytorch.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Andrea Giardini</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/standardising-mlops-in-a-start-up-with-dagster-and-pytorch.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;standardising MLOps in a start-up: an example using Dagster and PyTorch
- PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Good processes and toolings allow companies to adapt and strive with
changing business requirements and short development cycles. Using
Dagster, a new workflow engine, and PyTorch, we found the perfect match
to guarantee reliable deployments …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;standardising MLOps in a start-up: an example using Dagster and PyTorch
- PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Good processes and toolings allow companies to adapt and strive with
changing business requirements and short development cycles. Using
Dagster, a new workflow engine, and PyTorch, we found the perfect match
to guarantee reliable deployments with fast-changing models. Join us and
find out how! Extending a deep learning model beyond your dataset to
make it available to multiple use-cases and stakeholders requires a
structured workflow. Finding the proper workflow and tooling depends on
your use case, but what happens when your use case is dynamic?&lt;/p&gt;
&lt;p&gt;In a start-up, changing business requirements are standard, so change
the inputs, outputs, and model types: the pipeline may be outdated by
the time you have put a “model in production”.&lt;/p&gt;
&lt;p&gt;With this talk, we want to show a pipeline based on Dagster, deployed on
Kubernetes, and PyTorch, that adds little overhead when making models
available to colleagues and projects with minimal requirements, making
it flexible to handle very customized workflows if needed.&lt;/p&gt;
&lt;p&gt;Speakers: Andrea Giardini, Lorenzo Riches&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="deep learning"></category><category term="deployment/continuous integration"></category><category term="machine learning"></category></entry></feed>