<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 02 Oct 2015 00:00:00 +0000</lastBuildDate><item><title>Python in Debian and Ubuntu</title><link>https://pyvideo.org/pycon-za-2013/python-in-debian-and-ubuntu.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stefano Rivera</dc:creator><pubDate>Thu, 03 Oct 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-10-03:pycon-za-2013/python-in-debian-and-ubuntu.html</guid><category>pyconza</category><category>pyconza2013</category></item><item><title>Python in Debian &amp; Ubuntu</title><link>https://pyvideo.org/pycon-za-2014/python-in-debian-ubuntu.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk is aimed at people who maintain Python libraries and also
users of Debian packaged libraries. (Wherever I say Debian in this
abstract, it applies to Ubuntu too). The talk should explain a bit about
how and why libraries are packaged in Debian, and how to help maintain
(or contribute) packages you care about. We'll cover a bit of history of
the Python stacks in Debian and how packaged modules are provided, and
who does the work. For context, we'll take a quick detour into Debian
packaging in general, and the Debian project's lifecycle. Debian
recently gained a new Python packaging tool, pybuild. This finally makes
it easy to package the same library for Python 2, 3, and even PyPy. So,
we'll have a look at what it does, and some example packaging.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stefano Rivera</dc:creator><pubDate>Fri, 03 Oct 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-10-03:pycon-za-2014/python-in-debian-ubuntu.html</guid><category>pyconza</category><category>pyconza2014</category></item><item><title>The Road to Continuous Deployment</title><link>https://pyvideo.org/pycon-za-2015/the-road-to-continuous-deploys.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How do we get work from a developer's laptop to a production server? How
do we do this repeatedly? How do we avoid releasing bad patches? How do
we get changes out as fast as possible? And what happens to requests
during a deploy? If you want continuous deployment, you have to solve
these problems.&lt;/p&gt;
&lt;p&gt;How do you handle configuration, so that the same code can run in
multiple environment? From a developers laptop, to QA environments, to
production. What about the quirks of each machine in production?&lt;/p&gt;
&lt;p&gt;This talk will look at the path Yola took, with Jenkins, yoconfigurator,
yodeploy. It's by no means a complete solution, but it's good enough
that I rarely find myself working on it, these days.&lt;/p&gt;
&lt;p&gt;We will cover the pros and cons of each path one can take. The whole
platform architecture is really affected by this. We can talk about:
Bare hardware, virtualization, containerization, build systems, linux
distributions packages, language package ecosystems, configuration
management systems, notifications, secret distribution, and much more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stefano Rivera</dc:creator><pubDate>Fri, 02 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-02:pycon-za-2015/the-road-to-continuous-deploys.html</guid><category>Room 215</category></item><item><title>Thursday Lightning Talks</title><link>https://pyvideo.org/pycon-za-2015/thursday-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/DiaE9GCJ0nM?t=0h0m0s"&gt;(0:00:00)&lt;/a&gt; &lt;strong&gt;Racy interrupt handling&lt;/strong&gt; by Bruce Merry&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/DiaE9GCJ0nM?t=0h6m0s"&gt;(0:06:00)&lt;/a&gt; &lt;strong&gt;Vulture in Python&lt;/strong&gt; by Philip Sterne&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/DiaE9GCJ0nM?t=0h11m9s"&gt;(0:11:09)&lt;/a&gt; &lt;strong&gt;Edx&lt;/strong&gt; by Carl Dawson&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/DiaE9GCJ0nM?t=0h17m39s"&gt;(0:17:39)&lt;/a&gt; &lt;strong&gt;AST linting&lt;/strong&gt; by Bryn Divey&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/DiaE9GCJ0nM?t=0h24m33s"&gt;(0:24:33)&lt;/a&gt; &lt;strong&gt;Numpy in Anger!&lt;/strong&gt; by Laura Richter&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/DiaE9GCJ0nM?t=0h29m28s"&gt;(0:29:28)&lt;/a&gt; &lt;strong&gt;How to screw up loading CSVs in Python&lt;/strong&gt; by James Saunders&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/DiaE9GCJ0nM?t=0h33m34s"&gt;(0:33:34)&lt;/a&gt; &lt;strong&gt;PyQuery&lt;/strong&gt; by Nicholas Spagnoletti&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/DiaE9GCJ0nM?t=0h37m27s"&gt;(0:37:27)&lt;/a&gt; &lt;strong&gt;Debian Python moves kicking and screaming to Git&lt;/strong&gt; by Stefano Rivera&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bruce Merry</dc:creator><pubDate>Thu, 01 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-01:pycon-za-2015/thursday-lightning-talks.html</guid><category>lightning talks</category><category>Room 215</category></item></channel></rss>