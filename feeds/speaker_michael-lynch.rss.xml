<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 04 Oct 2019 00:00:00 +0000</lastBuildDate><item><title>Why Good Developers Write Bad Tests</title><link>https://pyvideo.org/pygotham-2019/why-good-developers-write-bad-tests.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most developers still approach tests with the same old techniques they use
for production code. But test code is not like other code. To write it well,
we need to reexamine the principles and goals that define our best
practices.&lt;/p&gt;
&lt;p&gt;In this talk, I'll discuss:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What separates good tests from bad ones&lt;/li&gt;
&lt;li&gt;Why you should think twice before refactoring test functions&lt;/li&gt;
&lt;li&gt;How to identify anti-patterns in tests that hide bugs&lt;/li&gt;
&lt;li&gt;Why your test names are probably too short&lt;/li&gt;
&lt;li&gt;Why you should embrace magic numbers&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Lynch</dc:creator><pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-04:pygotham-2019/why-good-developers-write-bad-tests.html</guid></item><item><title>Why Good Developers Write Bad Tests</title><link>https://pyvideo.org/pytexas-2019/why-good-developers-write-bad-tests.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many skilled developers write beautiful code but horrendous tests. Worse, they're oblivious to the problem because their code seems to follow best practices. Come to this talk to find out why refactoring degrades readability, magic numbers are your friends, and DRY means DO repeat yourself.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Lynch</dc:creator><pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-04-14:pytexas-2019/why-good-developers-write-bad-tests.html</guid><category>testing</category></item><item><title>How to Do Code Reviews Like a Human</title><link>https://pyvideo.org/pygotham-2018/how-to-do-code-reviews-like-a-human.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are code reviews a source of tension on your team? Do they lead to
conflict, bikeshedding, or wasted time?&lt;/p&gt;
&lt;p&gt;Most of the discussion we hear about code reviews is technical. We focus
myopically on minimizing cost and maximizing bug discoveries. But reviews
are as much a social exercise as a technical one. They’re an opportunity for
teammates to share knowledge and bond through collaboration. That can’t
happen if people are strangling each other over where to place the curly
braces.&lt;/p&gt;
&lt;p&gt;In this talk, you’ll learn practical techniques your team can use to improve
communication and minimize conflict during code reviews. I’ll talk about:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Reducing human effort of reviews through automation&lt;/li&gt;
&lt;li&gt;Increasing your team’s review velocity&lt;/li&gt;
&lt;li&gt;Giving sincere praise&lt;/li&gt;
&lt;li&gt;Framing discussions for constructive debate&lt;/li&gt;
&lt;li&gt;Mitigating stalemates&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Lynch</dc:creator><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-06:pygotham-2018/how-to-do-code-reviews-like-a-human.html</guid></item></channel></rss>