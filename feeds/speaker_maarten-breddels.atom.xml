<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Maarten Breddels</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_maarten-breddels.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-08-14T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Dashboarding with Jupyter notebooks, voila and widgets</title><link href="https://pyvideo.org/euroscipy-2019/dashboarding-with-jupyter-notebooks-voila-and-widgets.html" rel="alternate"></link><published>2019-09-04T00:00:00+00:00</published><updated>2019-09-04T00:00:00+00:00</updated><author><name>Maarten Breddels</name></author><id>tag:pyvideo.org,2019-09-04:/euroscipy-2019/dashboarding-with-jupyter-notebooks-voila-and-widgets.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Sharing the result of a Jupyter notebook is currently not an easy
path. With voila we are changing this. Voila is a small but important
ingredient in the Jupyter ecosystem. Voila can execute notebooks,
keeping the kernel connected but does not allow for arbitrary code
execution, making it safe …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Sharing the result of a Jupyter notebook is currently not an easy
path. With voila we are changing this. Voila is a small but important
ingredient in the Jupyter ecosystem. Voila can execute notebooks,
keeping the kernel connected but does not allow for arbitrary code
execution, making it safe to share your notebooks with others.&lt;/div&gt;
&lt;div class="line"&gt;With new libraries built on top of Jupyter widgets/ipywidgets
(ipymaterialui and ipyvuetify) we allow beautiful modern React and Vue
components to enter the Jupyter notebook. Using voila we can integrate
the ipywidgets seamlessly into modern React and Vue pages, to build
modern dashboards directly from a Jupyter notebook.&lt;/div&gt;
&lt;div class="line"&gt;I will give a live example on how to transform a Jupyter notebook into
a fully functional single page application with a modern (Material
Design) look.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Turn your Jupyter notebook into a beautiful modern React or Vue based
dashboard using voila and Jupyter widgets.&lt;/p&gt;
</content><category term="EuroSciPy 2019"></category></entry><entry><title>Modern Data Science: A new approach to DataFrames and pipelines</title><link href="https://pyvideo.org/euroscipy-2019/modern-data-science-a-new-approach-to-dataframes-and-pipelines.html" rel="alternate"></link><published>2019-09-04T00:00:00+00:00</published><updated>2019-09-04T00:00:00+00:00</updated><author><name>Jovan Veljanoski</name></author><id>tag:pyvideo.org,2019-09-04:/euroscipy-2019/modern-data-science-a-new-approach-to-dataframes-and-pipelines.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working with datasets comprising millions or billions of samples is an
increasingly common task, one that is typically tackled with distributed
computing. Nodes in high-performance computing clusters have enough RAM
to run intensive and well-tested data analysis workflows. More often
than not, however, this is preceded by the scientific …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working with datasets comprising millions or billions of samples is an
increasingly common task, one that is typically tackled with distributed
computing. Nodes in high-performance computing clusters have enough RAM
to run intensive and well-tested data analysis workflows. More often
than not, however, this is preceded by the scientific process of
cleaning, filtering, grouping, and other transformations of the data,
through continuous visualizations and correlation analysis. In today’s
work environments, many data scientists prefer to do this on their
laptops or workstations, as to more effectively use their time and not
to rely on spotty internet connection to access their remote data and
computation resources. Modern laptops have sufficiently fast I/O SSD
storage, but upgrading RAM is expensive or impossible.&lt;/p&gt;
&lt;p&gt;Applying the combined benefits of computational graphs, which are common
in neural network libraries, with delayed (a.k.a lazy) evaluations to a
DataFrame library enables efficient memory and CPU usage. Together with
memory-mapped storage (Apache Arrow, hdf5) and out-of-core algorithms,
we can process considerably larger data sets with fewer resources. As an
added bonus, the computational graphs ‘remember’ all operations applied
to a DataFrame, meaning that data processing pipelines can be generated
automatically.&lt;/p&gt;
&lt;p&gt;In this talk, we will demonstrate Vaex, an open-source DataFrame library
that embodies these concepts. Using data from the New York City
YellowCab taxi service comprising 1.1 billion samples and taking up over
170 GB on disk, we will showcase how one can conduct an exploratory data
analysis, complete with filtering, grouping, calculations of statistics
and interactive visualisations on a single laptop in real time. Finally
we will show an example of how one can automatically build a machine
learning pipeline as a by-product of the exploratory data analysis using
the computational graphs in Vaex.&lt;/p&gt;
&lt;p&gt;We will demonstrate how to explore and analyse massive datasets (&amp;gt;150GB)
on a laptop with the Vaex library in Python. Using computational graphs,
efficient algorithms and storage (Apache Arrow / hdf5) Vaex can easily
handle up to a billion rows.&lt;/p&gt;
</content><category term="EuroSciPy 2019"></category></entry><entry><title>Solara: A Pure Python, React-style Framework for Scaling Your Data Apps</title><link href="https://pyvideo.org/euroscipy-2023/solara-a-pure-python-react-style-framework-for-scaling-your-data-apps.html" rel="alternate"></link><published>2023-08-14T00:00:00+00:00</published><updated>2023-08-14T00:00:00+00:00</updated><author><name>Maarten Breddels</name></author><id>tag:pyvideo.org,2023-08-14:/euroscipy-2023/solara-a-pure-python-react-style-framework-for-scaling-your-data-apps.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Solara is a pure Python web framework designed to scale complex applications. Leveraging a React-like API, Solara offers the scalability, component-based coding, and simple state management that have made React a standard for large web applications. Solara uses a pure Python implementation of React, Reacton, to create ipywidgets-based applications …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Solara is a pure Python web framework designed to scale complex applications. Leveraging a React-like API, Solara offers the scalability, component-based coding, and simple state management that have made React a standard for large web applications. Solara uses a pure Python implementation of React, Reacton, to create ipywidgets-based applications that work both in the Jupyter Notebook environment and as standalone web apps with frameworks like FastAPI. This talk will explore the design principles of Solara, illustrate its potential with case studies and live examples, and provide resources for attendees to incorporate Solara into their own projects. Whether you're a researcher developing interactive visualizations or a data scientist building complex web applications, Solara provides a Python-centric solution for scaling your projects effectively.&lt;/p&gt;
</content><category term="EuroSciPy 2023"></category></entry><entry><title>A Billion Stars in the Jupyter Notebook - Maarten Breddels</title><link href="https://pyvideo.org/jupytercon-2017/a-billion-stars-in-the-jupyter-notebook-maarten-breddels.html" rel="alternate"></link><published>2017-08-24T00:00:00+00:00</published><updated>2017-08-24T00:00:00+00:00</updated><author><name>Maarten Breddels</name></author><id>tag:pyvideo.org,2017-08-24:/jupytercon-2017/a-billion-stars-in-the-jupyter-notebook-maarten-breddels.html</id><content type="html"></content><category term="JupyterCon 2017"></category></entry><entry><title>Jupyter widgets- Maarten Breddels (Maarten Breddels), Sylvain Corlay (QuantStack)</title><link href="https://pyvideo.org/jupytercon-2018/jupyter-widgets-maarten-breddels-maarten-breddels-sylvain-corlay-quantstack.html" rel="alternate"></link><published>2018-08-21T00:00:00+00:00</published><updated>2018-08-21T00:00:00+00:00</updated><author><name>Maarten Breddels</name></author><id>tag:pyvideo.org,2018-08-21:/jupytercon-2018/jupyter-widgets-maarten-breddels-maarten-breddels-sylvain-corlay-quantstack.html</id><content type="html"></content><category term="JupyterCon 2018"></category></entry><entry><title>A billion stars in the Jupyter Notebook</title><link href="https://pyvideo.org/pydata-amsterdam-2017/a-billion-stars-in-the-jupyter-notebook.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Maarten Breddels</name></author><id>tag:pyvideo.org,2017-04-09:/pydata-amsterdam-2017/a-billion-stars-in-the-jupyter-notebook.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Amsterdam 2017&lt;/p&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/maartenbreddels/ipyvolume"&gt;https://github.com/maartenbreddels/ipyvolume&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I will present two Python packages: Vaex enables calculating statistics for a billion samples per second on a regular N-dimensional grid. Using a new Python package, ipyvolume, that enabled volume rendering and glyph rendering, this allows one to interactively visualise …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Amsterdam 2017&lt;/p&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/maartenbreddels/ipyvolume"&gt;https://github.com/maartenbreddels/ipyvolume&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I will present two Python packages: Vaex enables calculating statistics for a billion samples per second on a regular N-dimensional grid. Using a new Python package, ipyvolume, that enabled volume rendering and glyph rendering, this allows one to interactively visualise and explore these billion sample tables for high dimensional spaces.&lt;/p&gt;
&lt;p&gt;With large astronomical catalogues (＞1 billion) already available, we are preparing for methods to visualize and explore these large datasets. Instead of using cluttered scatter plots, these data volumes require different visualization techniques, in the form of binned statistics, e.g. histograms, density maps, and volume rendering in 3d. The calculation of statistics on N-dimensional grids is handled by Python library called vaex, which I will introduce. It can process at least a billion stars/samples per second, to produce for instance the mean of a quantity on a regular grid. This statistics can be calculated for any mathematical expression on the data (numpy style) and can be on the full dataset or subsets, specified by queries/selections, .&lt;/p&gt;
&lt;p&gt;However, to visualize higher dimensional data in the notebook interactively, no proper solution existed. This led to the development of ipyvolume, which can render 3d volumes and up to a million glyphs (scatter plots and quiver) in the (Jupyter) notebook as a widget. With the browser as a platform, and the release of ipywidgets 6.0, these 3d plots can also be embedded in static html files and renders on nbviewer. This allows for sharing with colleagues, paperless office (render on your tablet), outreach, press release material, etc. Full screen stereo rendering allows for a virtual reality experience using your phone and Google Cardboard, a minor investment compared to other VR head mountables. Overlaying 3d quiver plots on a 3d volume rendering allows visualizing a 6d space.&lt;/p&gt;
&lt;p&gt;Vaex and ipyvolume can be used together to explore and visualize any large tabular data set, or separately to calculate statistics, and render 3d plots in the notebook and outside.&lt;/p&gt;
</content><category term="PyData Amsterdam 2017"></category></entry><entry><title>A new approach to DataFrames and pipelines</title><link href="https://pyvideo.org/pydata-london-2019/a-new-approach-to-dataframes-and-pipelines.html" rel="alternate"></link><published>2019-07-13T00:00:00+00:00</published><updated>2019-07-13T00:00:00+00:00</updated><author><name>Maarten Breddels</name></author><id>tag:pyvideo.org,2019-07-13:/pydata-london-2019/a-new-approach-to-dataframes-and-pipelines.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern Data Science: A new approach to DataFrames and pipelines
Maarten Breddels, Jovan Veljanoski
Audience level:&lt;/p&gt;
&lt;p&gt;We show how to deal with massive datasets using small resources using the Python Vaex DataFrame library. Using computational graphs, efficient algorithms and storage (Apache Arrow / hdf5) Vaex can easily handle up to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern Data Science: A new approach to DataFrames and pipelines
Maarten Breddels, Jovan Veljanoski
Audience level:&lt;/p&gt;
&lt;p&gt;We show how to deal with massive datasets using small resources using the Python Vaex DataFrame library. Using computational graphs, efficient algorithms and storage (Apache Arrow / hdf5) Vaex can easily handle up to a billion rows, even on your laptop. As a bonus, Vaex can automatically generate a Machine Learning pipeline using the graph structure build-up internally in the DataFrame.&lt;/p&gt;
</content><category term="PyData London 2019"></category></entry><entry><title>Vaex: Out of Core Dataframes for Python</title><link href="https://pyvideo.org/pyparis-2018/vaex-out-of-core-dataframes-for-python.html" rel="alternate"></link><published>2018-11-14T00:00:00+00:00</published><updated>2018-11-14T00:00:00+00:00</updated><author><name>Maarten Breddels</name></author><id>tag:pyvideo.org,2018-11-14:/pyparis-2018/vaex-out-of-core-dataframes-for-python.html</id><content type="html"></content><category term="PyParis 2018"></category></entry><entry><title>Interactive 3d Visualization in Jupyter</title><link href="https://pyvideo.org/scipy-2018/interactive-3d-visualization-in-jupyter.html" rel="alternate"></link><published>2018-07-13T00:00:00+00:00</published><updated>2018-07-13T00:00:00+00:00</updated><author><name>Maarten Breddels</name></author><id>tag:pyvideo.org,2018-07-13:/scipy-2018/interactive-3d-visualization-in-jupyter.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will present ipyvolume, which is a 3d plotting library for the Jupyter
notebook. Being an Jupyter widget, it plays well together with existing
libraries (bqplot, threejs, ipywidgets), and can even be used outside
the notebook for e.g.: outreach, press material or supplementary
material for scientific papers. Ipyvolume …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will present ipyvolume, which is a 3d plotting library for the Jupyter
notebook. Being an Jupyter widget, it plays well together with existing
libraries (bqplot, threejs, ipywidgets), and can even be used outside
the notebook for e.g.: outreach, press material or supplementary
material for scientific papers. Ipyvolume support transitions and
animations and uses WebGL to get the best performance.Presenter(s):
Speaker: Maarten Breddels, Kapteyn Astronomical Institute, University of
Groningen&lt;/p&gt;
</content><category term="SciPy 2018"></category></entry><entry><title>Dashboarding with Jupyter Notebooks, Voila and Widgets</title><link href="https://pyvideo.org/scipy-2019/dashboarding-with-jupyter-notebooks-voila-and-widgets.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Maarten Breddels</name></author><id>tag:pyvideo.org,2019-07-11:/scipy-2019/dashboarding-with-jupyter-notebooks-voila-and-widgets.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Turn your Jupyter notebook into a beautiful modern React or Vue based dashboard using voila and Jupyter widgets&lt;/p&gt;
</content><category term="SciPy 2019"></category></entry><entry><title>Vaex: Out of Core Dataframes for Python</title><link href="https://pyvideo.org/scipy-2019/vaex-out-of-core-dataframes-for-python.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Maarten Breddels</name></author><id>tag:pyvideo.org,2019-07-11:/scipy-2019/vaex-out-of-core-dataframes-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vaex is a Python library with a DataFrame API that works efficiently with big (~1 billion rows) tabular datasets. Using an expression system and memory mapping, all operations can be performed lazily and in chunks, while using a familiar DataFrame API and regular numpy expressions, enabling data cleansing, on …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vaex is a Python library with a DataFrame API that works efficiently with big (~1 billion rows) tabular datasets. Using an expression system and memory mapping, all operations can be performed lazily and in chunks, while using a familiar DataFrame API and regular numpy expressions, enabling data cleansing, on the fly computations and visualizations for massive datasets on even laptops.&lt;/p&gt;
</content><category term="SciPy 2019"></category></entry><entry><title>The Jupyter Interactive Widget Ecosystem</title><link href="https://pyvideo.org/scipy-2019/the-jupyter-interactive-widget-ecosystem.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Maarten Breddels</name></author><id>tag:pyvideo.org,2019-07-10:/scipy-2019/the-jupyter-interactive-widget-ecosystem.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to using widgets in Jupyter and JupyterLab to provide a rich interface for interactive data visualization.&lt;/p&gt;
</content><category term="SciPy 2019"></category><category term="tutorial"></category></entry><entry><title>Remote DataFrames and Interactive Exploration of Big Astronomical Datasets with Vaex</title><link href="https://pyvideo.org/scipy-2020/remote-dataframes-and-interactive-exploration-of-big-astronomical-datasets-with-vaex.html" rel="alternate"></link><published>2020-07-08T00:00:00+00:00</published><updated>2020-07-08T00:00:00+00:00</updated><author><name>Maarten Breddels</name></author><id>tag:pyvideo.org,2020-07-08:/scipy-2020/remote-dataframes-and-interactive-exploration-of-big-astronomical-datasets-with-vaex.html</id><content type="html"></content><category term="SciPy 2020"></category></entry></feed>