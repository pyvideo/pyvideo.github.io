<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_leonid-vasilyev.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-11-05T00:00:00+00:00</updated><entry><title>Building Hermetic Python Packages with Bazel @ Dropbox</title><link href="https://pyvideo.org/pycon-ireland-2016/building-hermetic-python-packages-with-bazel-dropbox.html" rel="alternate"></link><published>2016-11-05T00:00:00+00:00</published><updated>2016-11-05T00:00:00+00:00</updated><author><name>Leonid Vasilyev</name></author><id>tag:pyvideo.org,2016-11-05:pycon-ireland-2016/building-hermetic-python-packages-with-bazel-dropbox.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, I’d like to talk about Dropbox’s Python code
repository, how we build and package it, so it can be safely deployed
to production.&lt;/p&gt;
&lt;p&gt;Specifically I’d like to focus on the issues we had with dependency
management and how Bazel build system, which was open-sourced by
Google early last year, helped us deal with it.&lt;/p&gt;
&lt;p&gt;Also, I’m going to cover lessons-learned and what plumbing was done in
order to make Bazel work for Dropbox in development, test and
production environment.&lt;/p&gt;
&lt;p&gt;Key take-aways for attendees:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An approach to introducing dependency management system into existing codebase&lt;/li&gt;
&lt;li&gt;Better understanding of how Bazel works in real-world&lt;/li&gt;
&lt;/ul&gt;
</summary></entry></feed>