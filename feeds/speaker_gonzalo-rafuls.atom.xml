<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_gonzalo-rafuls.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-07-13T00:00:00+00:00</updated><entry><title>Dockerized pytests</title><link href="https://pyvideo.org/europython-2017/dockerized-pytests.html" rel="alternate"></link><published>2017-07-13T00:00:00+00:00</published><updated>2017-07-13T00:00:00+00:00</updated><author><name>Gonzalo Rafuls</name></author><id>tag:pyvideo.org,2017-07-13:europython-2017/dockerized-pytests.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When working with pytest and custom plugins things can get eery when
trying to mimic your Jenkins environment for debugging your tests
locally, specially across your team and their workspaces.&lt;/p&gt;
&lt;p&gt;In this talk will go through the challenges faced to containerize a
wild pytest environment.&lt;/p&gt;
&lt;p&gt;Topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Running Pytest on Jenkins jobs&lt;/li&gt;
&lt;li&gt;Pytest custom plugins&lt;/li&gt;
&lt;li&gt;Challenges for locally debugging/replicating a Jenkins job/pytest run&lt;/li&gt;
&lt;li&gt;Dockerizing pytest and it's dependencies&lt;/li&gt;
&lt;/ul&gt;
</summary></entry></feed>