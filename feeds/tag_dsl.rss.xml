<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 29 Sep 2012 00:00:00 +0000</lastBuildDate><item><title>Fantastic DSL in Python - PythonでつくるDSLのテクニック -</title><link>https://pyvideo.org/pycon-japan-2012/fantastic-dsl-in-python-pythondetsukurudslnotekunitsuku-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;いろんな書き方をあえて許容しないPythonの文法は、コードの可読性を大きく高めますが、一方で文法の強制力が強いために柔軟性にはやや欠けます。 特にDSL (Domain Specific Language) を設計するうえでは、自由な書き方が制限されるというPythonの性質上、様々な困難が生じます。
本発表では、筆者が過去に作成したプロダクト (Oktest, Tenjin, Benchmarker, Kook, etc) の経験をもとに、PythonでDSLを設計するうえでの問題点と解決策を、豊富な具体例を使って紹介します。
Python’s code is very readable because Python doesn’t allow users to write code in various ways. But as the other side, there is less “syntax freedom” due to Python’s nature. This will be large restriction when you design DSL (Domain Specific Language) in Python.
In this session, I’ll show you problems and solutions about DSL design in Python which were happened through development of my products (Oktest, Tenjin, Benchmarker, Kook, etc).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">桑田 誠</dc:creator><pubDate>Sun, 16 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-16:pycon-japan-2012/fantastic-dsl-in-python-pythondetsukurudslnotekunitsuku-.html</guid><category>dsl</category></item><item><title>Enaml: Pythonic, toolkit independent, declarative UIs - Part 2</title><link>https://pyvideo.org/pycon-india-2012/enaml-pythonic-toolkit-independent-declarative-uis-part-2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Enaml is a DSL for writing platform independent, declarative UIs. In a model-view-controller world, Enaml makes it very easy to develop the view and controller. Typically, the model is built with Traits, but it's model is framework agnostic and provides hooks for using custom model frameworks.
The DSL is a strict superset of Python and provides a simple Pythonic syntax for declaring a UI that binds and reacts to changes in the models. Enaml is dynamically executed and it lets you bind to arbitrary Python expressions. It uses a constraint based layout system which makes it possible to have layouts that are not typically possible with traditional UI toolkits. Enaml also supports asynchronous UIs which allow one to have multiple UIs connecting to the same model running in the same process or out of process. This, in theory, opens up the possibility for a web-based UI to be used to control a model.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Puneeth Chaganti</dc:creator><pubDate>Sat, 29 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-29:pycon-india-2012/enaml-pythonic-toolkit-independent-declarative-uis-part-2.html</guid><category>enaml</category><category>dsl</category></item><item><title>Enaml: Pythonic, toolkit independent, declarative UIs - Part 3</title><link>https://pyvideo.org/pycon-india-2012/enaml-pythonic-toolkit-independent-declarative-uis-part-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Enaml is a DSL for writing platform independent, declarative UIs. In a model-view-controller world, Enaml makes it very easy to develop the view and controller. Typically, the model is built with Traits, but it's model is framework agnostic and provides hooks for using custom model frameworks.
The DSL is a strict superset of Python and provides a simple Pythonic syntax for declaring a UI that binds and reacts to changes in the models. Enaml is dynamically executed and it lets you bind to arbitrary Python expressions. It uses a constraint based layout system which makes it possible to have layouts that are not typically possible with traditional UI toolkits. Enaml also supports asynchronous UIs which allow one to have multiple UIs connecting to the same model running in the same process or out of process. This, in theory, opens up the possibility for a web-based UI to be used to control a model.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Puneeth Chaganti</dc:creator><pubDate>Sat, 29 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-29:pycon-india-2012/enaml-pythonic-toolkit-independent-declarative-uis-part-3.html</guid><category>enaml</category><category>dsl</category></item><item><title>Powerful building blocks for application development in Python - 1/3</title><link>https://pyvideo.org/pycon-india-2012/powerful-building-blocks-for-application-development-in-python-13.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Enthought has contributed several powerful open source packages to the Python community. Some of these packages are bundled together to form “The Enthought Tool Suite” or ETS. While ETS is best known in scientific computing circles, these tools are general purpose and can be used for a variety of applications In this talk we provide an overview of ETS. We provide an overview of the functionality and benefits of using some of the core ETS packages namely, Traits, TraitsUI, Chaco, Mayavi and Envisage. We will provide examples of these packages and highlight the benefits of using the ETS.
Enthought is also working on a new Pythonic, toolkit-independent, declarative DSL to build GUIs called Enaml. We will take a sneak peek at some of Enaml’s features.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Prabhu Ramachandran</dc:creator><pubDate>Sat, 29 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-29:pycon-india-2012/powerful-building-blocks-for-application-development-in-python-13.html</guid><category>enthought</category><category>ets</category><category>dsl</category><category>enaml</category></item><item><title>Powerful building blocks for application development in Python - 2/3</title><link>https://pyvideo.org/pycon-india-2012/powerful-building-blocks-for-application-development-in-python-23.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Enthought has contributed several powerful open source packages to the Python community. Some of these packages are bundled together to form “The Enthought Tool Suite” or ETS. While ETS is best known in scientific computing circles, these tools are general purpose and can be used for a variety of applications In this talk we provide an overview of ETS. We provide an overview of the functionality and benefits of using some of the core ETS packages namely, Traits, TraitsUI, Chaco, Mayavi and Envisage. We will provide examples of these packages and highlight the benefits of using the ETS.
Enthought is also working on a new Pythonic, toolkit-independent, declarative DSL to build GUIs called Enaml. We will take a sneak peek at some of Enaml’s features.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Prabhu Ramachandran</dc:creator><pubDate>Sat, 29 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-29:pycon-india-2012/powerful-building-blocks-for-application-development-in-python-23.html</guid><category>enthought</category><category>ets</category><category>dsl</category><category>enaml</category></item><item><title>Powerful building blocks for application development in Python - 3/3</title><link>https://pyvideo.org/pycon-india-2012/powerful-building-blocks-for-application-development-in-python-33.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Enthought has contributed several powerful open source packages to the Python community. Some of these packages are bundled together to form “The Enthought Tool Suite” or ETS. While ETS is best known in scientific computing circles, these tools are general purpose and can be used for a variety of applications In this talk we provide an overview of ETS. We provide an overview of the functionality and benefits of using some of the core ETS packages namely, Traits, TraitsUI, Chaco, Mayavi and Envisage. We will provide examples of these packages and highlight the benefits of using the ETS.
Enthought is also working on a new Pythonic, toolkit-independent, declarative DSL to build GUIs called Enaml. We will take a sneak peek at some of Enaml’s features.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Prabhu Ramachandran</dc:creator><pubDate>Sat, 29 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-29:pycon-india-2012/powerful-building-blocks-for-application-development-in-python-33.html</guid><category>enthought</category><category>ets</category><category>dsl</category><category>enaml</category></item><item><title>Implementing Domain Specific Languages In Python</title><link>https://pyvideo.org/pycon-us-2010/pycon-2010--implementing-domain-specific-language.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Implementing Domain Specific Languages In Python&lt;/p&gt;
&lt;p&gt;Presented by Sean Jensen-Grey&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What are DSLs? Internal/External&lt;/li&gt;
&lt;li&gt;Why DSLs?&lt;/li&gt;
&lt;li&gt;How can they be expressed in Python?&lt;/li&gt;
&lt;li&gt;Mini Language Design&lt;/li&gt;
&lt;li&gt;Implementing External DSLs&lt;/li&gt;
&lt;li&gt;Web / AI / Enterprise&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;li&gt;Documenting&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Students should have their own computer with Python 2.6 installed&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sean Jensen-Grey</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--implementing-domain-specific-language.html</guid><category>dsl</category><category>pycon</category><category>pycon2010</category><category>tutorial</category></item></channel></rss>