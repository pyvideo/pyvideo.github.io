<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_cameron-macleod.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-08-05T00:00:00+00:00</updated><entry><title>Implementación de un Identificador de Sonido en Python</title><link href="https://pyvideo.org/europython-2016/implementacion-de-un-identificador-de-sonido-en-python.html" rel="alternate"></link><published>2016-08-05T00:00:00+00:00</published><updated>2016-08-05T00:00:00+00:00</updated><author><name>Cameron Macleod</name></author><id>tag:pyvideo.org,2016-08-05:europython-2016/implementacion-de-un-identificador-de-sonido-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cameron Macleod - Implementación de un Identificador de Sonido en Python
[EuroPython 2016]
[19 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/implementacion-de-un-identificador-de-sonido-en-python"&gt;https://ep2016.europython.eu//conference/talks/implementacion-de-un-identificador-de-sonido-en-python&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;El tema que nos ocupa es como implementar un identificador de sonido
tipo Shazam usando técnicas DSP. Los puntos a seguir serán,
implementación, retos y pasos adicionales. El proyecto que nos ocupa
se encuentra todavía en proceso de desarrollo (el código [subido en
GitHub][1]) y fue inspirado después la conferencia, [Over-the-Air
Audio Identification][2] en FOSDEM 2016.&lt;/p&gt;
&lt;p&gt;[1]: &lt;a class="reference external" href="https://github.com/notexactlyawe/abracadabra"&gt;https://github.com/notexactlyawe/abracadabra&lt;/a&gt;
[2]: &lt;a class="reference external" href="https://fosdem.org/2016/schedule/event/audio_identification/"&gt;https://fosdem.org/2016/schedule/event/audio_identification/&lt;/a&gt;&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;El tema que nos ocupa es como implementar un identificador de sonido
tipo Shazam usando técnicas DSP con ayuda de unas fantásticas
bibliotecas. Los puntos a seguir serán, implementación, retos y pasos
adicionales. El proyecto que nos ocupa se encuentra todavía en proceso
de desarrollo (el código [subido en GitHub][1]) y fue inspirado
después la conferencia, [Over-the-Air Audio Identification][2] en
FOSDEM 2016.&lt;/p&gt;
&lt;p&gt;La estructura básica del proyecto consiste en un clasificador y un
reconocedor. El clasificador toma huellas del sonido y las procesa en
una forma investigable para el reconocedor que usa estas huellas para
la identificación y búsqueda de archivos almacenados con el fin de
encontrar la semejanza mas probable. El reconocedor estará expuesto en
un entorno API.&lt;/p&gt;
&lt;p&gt;La conferencia intentará introducir el área de DSP a la audiencia y
los conceptos que están detrás aplicaciones como Shazam. Explicaré
todos las nociones incluidas en una manera sencilla.&lt;/p&gt;
&lt;p&gt;[1]: &lt;a class="reference external" href="https://github.com/notexactlyawe/abracadabra"&gt;https://github.com/notexactlyawe/abracadabra&lt;/a&gt;
[2]: &lt;a class="reference external" href="https://fosdem.org/2016/schedule/event/audio_identification/"&gt;https://fosdem.org/2016/schedule/event/audio_identification/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Implementing a Sound Identifier in Python</title><link href="https://pyvideo.org/europython-2016/implementing-a-sound-identifier-in-python.html" rel="alternate"></link><published>2016-07-28T00:00:00+00:00</published><updated>2016-07-28T00:00:00+00:00</updated><author><name>Cameron Macleod</name></author><id>tag:pyvideo.org,2016-07-28:europython-2016/implementing-a-sound-identifier-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cameron Macleod - Implementing a Sound Identifier in Python
[EuroPython 2016]
[18 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/implementing-a-sound-identifier-in-python"&gt;https://ep2016.europython.eu//conference/talks/implementing-a-sound-identifier-in-python&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The talk will go over implementing a Shazam-style sound recogniser
using DSP techniques and some fantastic libraries. It will cover
implementation, challenges and further steps. The project is still a
work in progress and the code is &lt;a class="reference external" href="https://github.com/notexactlyawe/abracadabra"&gt;available on GitHub&lt;/a&gt;. It was
inspired by the &lt;a class="reference external" href="https://fosdem.org/2016/schedule/event/audio_identification/"&gt;Over-the-Air Audio Identification talk&lt;/a&gt; at FOSDEM
2016.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;The talk will go over the journey of implementing a Shazam-style sound
recogniser using DSP techniques and some fantastic libraries. It will
cover implementation, challenges and further steps. The project is
still a work in progress at the time of proposal and the code is
&lt;a class="reference external" href="https://github.com/notexactlyawe/abracadabra"&gt;available on GitHub&lt;/a&gt;. It was inspired by the &lt;a class="reference external" href="https://fosdem.org/2016/schedule/event/audio_identification/"&gt;Over-the-Air Audio Identification talk&lt;/a&gt; at FOSDEM 2016.&lt;/p&gt;
&lt;p&gt;The basic structure of the project consists a classifier that
fingerprints audio and stores it in a searchable form and a recogniser
that fingerprints a smaller chunk of audio and then searches the
stored records to find the most suitable fit for it. The recogniser
will be exposed as an API to allow for different front-ends.&lt;/p&gt;
&lt;p&gt;I will aim to introduce both the field of DSP and concepts behind
applications like Shazam in a simple easy-to-understand manner. The
audience will not need any prior experience in anything except Python.&lt;/p&gt;
</summary></entry></feed>