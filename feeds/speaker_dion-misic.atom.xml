<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_dion-misic.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-08-25T00:00:00+00:00</updated><entry><title>A Beginner's Guide to WebSockets</title><link href="https://pyvideo.org/pycon-au-2018/a-beginners-guide-to-websockets.html" rel="alternate"></link><published>2018-08-25T00:00:00+00:00</published><updated>2018-08-25T00:00:00+00:00</updated><author><name>Dion Misic</name></author><id>tag:pyvideo.org,2018-08-25:pycon-au-2018/a-beginners-guide-to-websockets.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A gentle introduction to the web-socket protocol, how it works, it's intended usage and a number of examples where it can be used with Python and it's popular web frameworks - topped off with a rapid demonstration of the speed and ease of which it can be implemented with Python.&lt;/p&gt;
</summary></entry><entry><title>Wordsmiths - Operational Transformation in Python</title><link href="https://pyvideo.org/pycon-au-2017/wordsmiths-operational-transformation-in-python.html" rel="alternate"></link><published>2017-08-05T00:00:00+00:00</published><updated>2017-08-05T00:00:00+00:00</updated><author><name>Dion Misic</name></author><id>tag:pyvideo.org,2017-08-05:pycon-au-2017/wordsmiths-operational-transformation-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wordsmiths is an open-source project written by Dion Misic in Python to understand and pave a path toward an improved understanding of Operational Transformation, the algorithm behind collaborative editing in Google Docs. The project is built on the Flask micro-framework and uses Python to perform Operational Transformation so multiple users can collaborate on a shared document in real time in high latency environments such as the web.&lt;/p&gt;
&lt;p&gt;The model-view-controller architecture of Flask allows web applications to be manageable, dynamic and scalable - all desirable features for publishing a collaborative system with Operational Transformation to the web. Subsequently, the simplicity of Python and Flask allow the algorithms documentation to be simpler and easier to comprehend for people who are new to the topic. The limitations of using Python is that technologies such as Javascript and Ajax need to be implemented in addition to open communication between the server and the client; as Python is a server scripting language.&lt;/p&gt;
&lt;p&gt;As a high school student, this project has allowed me to implement complex algorithms, measure their algorithmic efficiency, create relational databases and explore new programming paradigms which can be used in real-world applications outside the confines of school. Despite having no prior knowledge of web development, this project has allowed me to understand web development in greater depth and how a client and server can work together to manipulate and store data. I will share my experiences with Python, the shortcomings of Python and how I managed to develop my project using Flask.&lt;/p&gt;
</summary></entry></feed>