<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_sam-agnew.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-10-05T00:00:00+00:00</updated><entry><title>Generating Nintendo Music Over the Phone with Magenta</title><link href="https://pyvideo.org/pygotham-2019/generating-nintendo-music-over-the-phone-with-magenta.html" rel="alternate"></link><published>2019-10-05T00:00:00+00:00</published><updated>2019-10-05T00:00:00+00:00</updated><author><name>Sam Agnew</name></author><id>tag:pyvideo.org,2019-10-05:pygotham-2019/generating-nintendo-music-over-the-phone-with-magenta.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this live coded quest we will walk through how to generate music with
Magenta using a neural network trained on the soundtracks from classic
Nintendo games, and create a Flask application which uses the Twilio API to
provide a phone number people can call to listen to this music in real time.&lt;/p&gt;
</summary></entry><entry><title>Tracking the International Space Station in Django with Redis-Queue and RQ Scheduler</title><link href="https://pyvideo.org/pygotham-2018/tracking-the-international-space-station-in-django-with-redis-queue-and-rq-scheduler.html" rel="alternate"></link><published>2018-10-05T00:00:00+00:00</published><updated>2018-10-05T00:00:00+00:00</updated><author><name>Sam Agnew</name></author><id>tag:pyvideo.org,2018-10-05:pygotham-2018/tracking-the-international-space-station-in-django-with-redis-queue-and-rq-scheduler.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The international space station (ISS) is an orbital outpost circling high above our heads. Given a location on Earth (latitude, longitude) the ISS Open Notify API will compute the next &lt;cite&gt;n&lt;/cite&gt; number of times that the ISS will be overhead. I will cover step by step how to build a web application that notifies users via text message when the ISS is passing over them.&lt;/p&gt;
&lt;p&gt;In this session, attendees will learn how to:
- Access and interpret data from the [ISS Open Notify API](&lt;a class="reference external" href="http://open-notify.org/Open-Notify-API/ISS-Pass-Times/"&gt;http://open-notify.org/Open-Notify-API/ISS-Pass-Times/&lt;/a&gt;) on the exact timing on when the ISS will next pass a given geolocation.
- Use Redis Queue as a lightweight alternative to Celery for executing asynchronous tasks.
- Use RQ Scheduler to schedule tasks to be performed at a specific datetime.
- Integrate RQ and RQ Scheduler into a Django web application.
- Respond to webhook requests with Django.
- Access client-side geolocation data using JavaScript.
- Send text message notifications using the Twilio SMS API.&lt;/p&gt;
&lt;p&gt;In the Django app built during this talk, Redis will be used to store subscriber information such as a user's phone number and geolocation. RQ and RQ Scheduler will be used to execute a function that sends a text message notification using the Twilio API at a given datetime.&lt;/p&gt;
&lt;p&gt;At the end of my talk, I will send a text message containing the code I wrote, and a walkthrough on how to get it running to all of the audience members who interacted with the live-coded web application from my session.&lt;/p&gt;
</summary></entry><entry><title>Keynote: Hacking a gameboy with Python</title><link href="https://pyvideo.org/python-brasil-2016/keynote-hacking-a-gameboy-with-python.html" rel="alternate"></link><published>2016-10-16T00:00:00+00:00</published><updated>2016-10-16T00:00:00+00:00</updated><author><name>Sam Agnew</name></author><id>tag:pyvideo.org,2016-10-16:python-brasil-2016/keynote-hacking-a-gameboy-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Keynote Sam - Hacking a gameboy with Python&lt;/p&gt;
</summary></entry><entry><title>Hacking Classic Nintendo Games with Python</title><link href="https://pyvideo.org/pycon-us-2017/hacking-classic-nintendo-games-with-python.html" rel="alternate"></link><published>2017-05-21T00:00:00+00:00</published><updated>2017-05-21T00:00:00+00:00</updated><author><name>Sam Agnew</name></author><id>tag:pyvideo.org,2017-05-21:pycon-us-2017/hacking-classic-nintendo-games-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you feel like using your superpowers as a developer to bring the
games of your childhood into the future with the power of the Internet?
In this live coded journey, we'll build an SMS powered &amp;quot;Game Genie&amp;quot;
allowing the audience to send text messages to manipulate the Nintendo
games being played in real time. This will involve working with Flask,
the Twilio API, the FCEUX NES emulator and how to bridge them with quick
Lua scripts.&lt;/p&gt;
</summary></entry></feed>