<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_guillotina.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-05-21T12:45:00+02:00</updated><entry><title>Guillotina - An Async REST Resource DB to manage millions of objects</title><link href="https://pyvideo.org/pydata-barcelona-2017/guillotina-an-async-rest-resource-db-to-manage-millions-of-objects.html" rel="alternate"></link><published>2017-05-21T12:45:00+02:00</published><updated>2017-05-21T12:45:00+02:00</updated><author><name>Ramon Navarro Bosch</name></author><id>tag:pyvideo.org,2017-05-21:pydata-barcelona-2017/guillotina-an-async-rest-resource-db-to-manage-millions-of-objects.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Guillotina is a new framework designed to be horizontal scalable, build on top of aiohttp and offering a Resource REST API to store, read and query object oriented datasets with millions of elements. Based on JSON schema types allows to define a Traversal API with strong security and granularity. With an abstracted storage layer its possible to provide support for Couch, Cassandra and Postgres.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;One of the most common problems on my daily basis data management is a way to store and secure objects with information in a transactional scalable infrastructure. Having an async API that holds security, triggers and transactional operations allows to provide an interface for managing the data that will be processed by the machine learning engines on batch operations. Including async queues of operations allows to provide model inference on the objects on real time operations on objects on the stack.&lt;/p&gt;
&lt;p&gt;After 15 years on Plone/Zope framework we started to design a new concept using all the lessons learned on content management to provide a CRUD storage layer for big data objects.&lt;/p&gt;
</summary><category term="guillotina"></category></entry></feed>