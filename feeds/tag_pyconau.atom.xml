<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_pyconau.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2010-06-26T00:00:00+00:00</updated><entry><title>PyConAU 2010: An Introduction to Processing</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--an-introduction-to-processing.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Clinton J Roy</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--an-introduction-to-processing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An Introduction to Processing&lt;/p&gt;
&lt;p&gt;Presented by Clinton J Roy (University of Queensland)&lt;/p&gt;
&lt;p&gt;Processing is an Open Source language designed to make interactive
graphics and animation programming easier than traditional GUI toolkits.
Processing is used to prototype systems and create interactive data
visualisations.&lt;/p&gt;
&lt;p&gt;[NOTES: Missing first 2 minutes of audio, then camera microphone for
first section.]&lt;/p&gt;
</summary><category term="gui"></category><category term="multimedia"></category><category term="processing"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: App Engine 101</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--app-engine-101.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Brian K Quinlan</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--app-engine-101.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;App Engine 101&lt;/p&gt;
&lt;p&gt;Presented by Brian K Quinlan (Google)&lt;/p&gt;
&lt;p&gt;App Engine lets you run your Python web applications on Google's
infrastructure.&lt;/p&gt;
&lt;p&gt;This tutorial will provide an overview on how to create, configure and
deploy applications on App Engine using a simple (but useful!) example
application.&lt;/p&gt;
</summary><category term="appengine"></category><category term="gae"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="tutorial"></category><category term="web"></category></entry><entry><title>PyConAU 2010: Building the Wave Robots API: Behind the Scenes</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--building-the-wave-robots-api--behin.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Pamela S Fox</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--building-the-wave-robots-api--behin.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building the Wave Robots API: Behind the Scenes&lt;/p&gt;
&lt;p&gt;Presented by Pamela S Fox (Google)&lt;/p&gt;
&lt;p&gt;The Google Wave robots protocol involves JSON-RPC messages that are sent
between the Wave server and the robot, communicating events to process
and operations to perform. The Python Robots API abstracts on top of
that JSON-RPC service, allowing developers to interact with waves using
event callbacks, python classes, and chained functions. In this talk,
we'll explain the JSON- RPC protocol, talk about how we designed the API
to sit on top of that protocol, and show how developers can use the API.&lt;/p&gt;
</summary><category term="apis"></category><category term="json"></category><category term="jsonrpc"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="web"></category></entry><entry><title>PyConAU 2010: Displaying Australian datasets with Django</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--displaying-australian-datasets-with.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Malcolm Tredinnick</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--displaying-australian-datasets-with.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Displaying Australian datasets with Django&lt;/p&gt;
&lt;p&gt;Presented by Malcolm Tredinnick&lt;/p&gt;
&lt;p&gt;The last 18 months or so in Australia have seen an increased number of
government and public sector organisations releasing datasets to the
public under reasonable reuse terms (often Creative Commons license).
This talk will take a couple of those local real-world datasets and
create a minimal website for remixing them, using Django as the
underlying framework. The goals are to provide a short walk through the
process of importing and extracting such data in practice, show how to
incorporate Django's GIS features into an application, as well as
highlighting that real world is messy and so is the data it produces.
Working with datasets for journalism or research purposes, or simply
fun, requires a certain attention to detail.&lt;/p&gt;
&lt;p&gt;Basic knowledge of Django is assumed, although the GIS components will
be introduced carefully as they are less familiar to many developers.&lt;/p&gt;
</summary><category term="datasets"></category><category term="gis"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Don't Break It: Continuous Integration &amp; Deployment</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--don--39-t-break-it--continuous-inte.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Benno Rice</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--don--39-t-break-it--continuous-inte.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Don't Break It: Continuous Integration &amp;amp; Deployment&lt;/p&gt;
&lt;p&gt;Presented by Benno Rice&lt;/p&gt;
&lt;p&gt;So you've developed your application, it appears to work and you may
even have some tests to back that up. Now what?&lt;/p&gt;
&lt;p&gt;One part of software development that tends to receive not nearly enough
attention is the process of deploying, supporting and maintaining your
code in production. This demonstration will give an overview of using
tools such as Hudson, nose, stdeb and freshen to automate the testing,
packaging, deployment and verification of production software.&lt;/p&gt;
</summary><category term="agile"></category><category term="architecture"></category><category term="packaging"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="testing"></category></entry><entry><title>PyConAU 2010: Esky: keep your frozen apps fresh</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--esky--keep-your-frozen-apps-fresh.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Ryan F Kelly</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--esky--keep-your-frozen-apps-fresh.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Esky: keep your frozen apps fresh&lt;/p&gt;
&lt;p&gt;Presented by Ryan F Kelly&lt;/p&gt;
&lt;p&gt;Esky (&lt;a class="reference external" href="http://pypi.python.org/pypi/esky/"&gt;http://pypi.python.org/pypi/esky/&lt;/a&gt;) is an auto-update framework for
frozen Python applications, designed to be simple to use while
guaranteeing the safety of your app in case of failed or partial
updates. It provides easy support for differential updates and is
compatible with py2exe, py2app, cx-freeze and bbfreeze.&lt;/p&gt;
&lt;p&gt;This talk will give an overview of esky's features, and show how to
extend an existing frozen application with auto-update support.&lt;/p&gt;
</summary><category term="esky"></category><category term="packaging"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Fast Engineering Computation in with Boost::Python and Numarray</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--fast-engineering-computation-in-wit.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Filip Zalio</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--fast-engineering-computation-in-wit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fast Engineering Computation in with Boost::Python and Numarray&lt;/p&gt;
&lt;p&gt;Presented by Filip Zalio (NEC Australia)&lt;/p&gt;
&lt;p&gt;In the 3G Mobile Research and Development Division in NEC Australia
(www.nec.com.au) we have been using Python based environment since 2005.
We run digital signal processing simulations of 3G and 4G mobile phone
radio links. Our simulations are CPU-bound, where efficient and fast
interfacing between C++ and Python is one of the keys to the growing
success of Python within NEC. In this short presentation, we describe
our current framework which achieves the fast processing.&lt;/p&gt;
</summary><category term="casestudy"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Genropy - a framework for creating complex applications deployed on the web</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--genropy---a-framework-for-creating-.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Jeff B Edwards</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--genropy---a-framework-for-creating-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genropy - A framework for creating complex applications deployed on the
web&lt;/p&gt;
&lt;p&gt;Presented by Jeff B Edwards (Goodsoftware)&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://blog.genropy.org/"&gt;Genropy&lt;/a&gt; is the python implementation of
Genro, and is an application framework quite different from the standard
(django, cherrypy, turbogears), for building powerful database
applications deployed from the browser. Many differences and advantages
between this framework and traditional python application frameworks are
explained. Genropy is a suitable for creating complex 'applications' as
opposed to 'sites'. The differentiation is that an application is
something an operator uses all day, has trained users, that have to
'squeeze' all the power from it available. Conversely, a 'site' is
basically public and not necessarily powerful as a user spends a
relatively small amount of time on it. Genropy is the framework for
creation applications. It is used for attendee registration and sales in
pycon italy, the larger national conference in Europe (Florence, Italy).&lt;/p&gt;
&lt;p&gt;This session will demonstrate how to create a simple application (3
tables) and demonstrate the ease and power of using python for the model
view and controller on the client. It demonstrates how one api- being
the genro Bag - is used to create the model, to map the sql to objects,
to create the GUI and communicate all data. So all of it can be done in
python instead of having to use many different technologies and
languages.&lt;/p&gt;
&lt;p&gt;Jeff Edwards from Goodsoftware is strategic partner of Sofwell who is
the author of Genropy.&lt;/p&gt;
</summary><category term="databases"></category><category term="gui"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="web"></category></entry><entry><title>PyConAU 2010: Getting started with Apache/mod_wsgi</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--getting-started-with-apache-mod-wsg.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Graham Dumpleton</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--getting-started-with-apache-mod-wsg.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Getting started with Apache/mod_wsgi&lt;/p&gt;
&lt;p&gt;Presented by Graham Dumpleton&lt;/p&gt;
&lt;p&gt;An introduction to using Apache/mod_wsgi to host Python web
applications supporting the Python Web Server Gateway Interface (WSGI).&lt;/p&gt;
</summary><category term="mod_wsgi"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="virtualenv"></category><category term="wsgi"></category></entry><entry><title>PyConAU 2010: GLAMkit: a harder, better, faster, stronger way to write reusable Django code</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--glamkit--a-harder--better--faster--.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Dr. Greg Turner</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--glamkit--a-harder--better--faster--.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GLAMkit: a harder, better, faster, stronger way to write reusable Django
code&lt;/p&gt;
&lt;p&gt;Presented by Dr. Greg Turner (the Interaction Consortium)&lt;/p&gt;
&lt;p&gt;As part of our web development work for Galleries, Libraries, Archives
and Museums (the so-called GLAM sector), we have open-sourced the common
tools and design patterns that we have developed as a web framework
called GLAMkit (&lt;a class="reference external" href="http://glamkit.org/"&gt;http://glamkit.org/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;GLAMkit is based on Django, and is inspired by its design philosophy of
several apps which implement specific features. However, by looking at
the successes and challenges faced by other CMSes and collections of
apps such as Pinax, we have taken the philosophy a stage futher.&lt;/p&gt;
&lt;p&gt;Rather than being a collection of Django apps, we have constructed
GLAMkit as a collection of optional and reusable Django 'toolkits' for
implementing common features. We leave the implementation details - the
things that Django already does brilliantly - to the application
developers themselves.&lt;/p&gt;
&lt;p&gt;In this talk, we will present the history of GLAMkit's development, with
particular focus on how our approach to reusability came about, and some
examples of that approach.&lt;/p&gt;
</summary><category term="advocacy"></category><category term="architecture"></category><category term="community"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="web"></category></entry><entry><title>PyConAU 2010: Hard Real-time Python, or, Giant Robots of Doom</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--hard-real-time-python--or--giant-ro.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Simon Wittber</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--hard-real-time-python--or--giant-ro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hard Real-time Python, or, Giant Robots of Doom&lt;/p&gt;
&lt;p&gt;Presented by Simon Wittber (Different Methods Pty Ltd)&lt;/p&gt;
&lt;p&gt;Can you use Python to control a pair of 30 tonne robots as they spin at
72 kilometres per hour? Can you use Python to provide realtime collision
avoidance and fly-by-wire control?&lt;/p&gt;
&lt;p&gt;Yes, you can. See how Perth based engineering company Transmin Pty Ltd
(www.transmin.com.au) used Python to deliver a safety-crticial robotic
control system in record time.&lt;/p&gt;
&lt;p&gt;[NOTE: Missing first 2.5 minutes of talk, then camera audio for first
section]&lt;/p&gt;
</summary><category term="casestudy"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="robots"></category></entry><entry><title>PyConAU 2010: Introducing Python to a Java shop</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--introducing-python-to-a-java-shop.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Juergen Brendel</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--introducing-python-to-a-java-shop.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducing Python to a Java shop&lt;/p&gt;
&lt;p&gt;Presented by Juergen Brendel (MuleSoft)&lt;/p&gt;
&lt;p&gt;There is a time and place for everything: For some applications Python
is perfect, for others a language like Java and its entire ecosystem is
more ideal. In this talk we see how Python was introduced to a Java shop
as a vehicle for rapid and dynamic prototyping of a new project. The
talk then explains how Jython/Java integration was used to translate
this project step by step from Python to Java. Going beyond the advocacy
focus, the talk then shows the interfaces to call Java from Python and
vice versa and illustrates those with examples. Furthermore, unit
testing of Java classes via test cases written in Python is also touched
upon.&lt;/p&gt;
</summary><category term="advocacy"></category><category term="jython"></category><category term="prototyping"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Keynote: Mark Pesce; "How Not To Be Seen"</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--keynote--mark-pesce---quot-how-not-.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Mark Pesce</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--keynote--mark-pesce---quot-how-not-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyConAU 2010 KeyNote&lt;/p&gt;
&lt;p&gt;Presented by Mark Pesce&lt;/p&gt;
&lt;p&gt;Although Mark Pesce does know Python, he doesn't consider himself any
sort of expert so he won't be talking about Python, except to whinge
that his friends pick on him for choosing a language which uses
whitespace as syntax. Try as he might, he can't get his friends to see
the logic of this - even though they always pretty-print their own code,
in whatever language they write. Go figure. So, Mark will not be talking
about that. What will Mark be talking about? Well, um, err... (sound of
shuffling papers) ...oh, yeah, here it is: 'Mark Pesce will be talking
about stuff. And things. And how great it all is. No, really. You'll
see. Promise.' ? Mark is best-known as the co-inventor of VRML, and as
panelist/judge on ABC's &amp;quot;The New Inventors&amp;quot;. The author of five books
and numerous articles, he has a monthly column in NETT magazine, is a
frequent contributor to ABC Unleashed, and is a sought-after commentator
on both radio and television. Since 2006, Pesce has held an Honorary
Appointment in the Digital Cultures Program at the University of Sydney.&lt;/p&gt;
&lt;p&gt;[NOTES: ~10 secs lost audio at start]&lt;/p&gt;
</summary><category term="keynote"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Keynote: Nick Hodge; "IronPython &amp; The Quest for the Holy Grail"</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--keynote--nick-hodge---quot-ironpyth.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Nick Hodge</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--keynote--nick-hodge---quot-ironpyth.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Keynote: Nick Hodge, &amp;quot;IronPython &amp;amp; The Quest for the Holy Grail&amp;quot;&lt;/p&gt;
&lt;p&gt;Presented by Nick Hodge&lt;/p&gt;
&lt;p&gt;Language interoperability is one of the Holy Grails of programming
languages. Choose your language, choose your framework and freely
exchange objects and methods.&lt;/p&gt;
&lt;p&gt;Is this Anarcho-syndicalism of application architecture? Are the serfs
in the fields of development teams rebelling against the rightful King
of the Realm?&lt;/p&gt;
&lt;p&gt;Is the Dynamic Language Runtime from Microsoft merely a French castle in
the Kingdom of England?&lt;/p&gt;
&lt;p&gt;How does this all fit with the open source Knights of Ni that lurk in
the thickest of forests?&lt;/p&gt;
&lt;p&gt;And the so-called Holy Hand Grenade of Antioch, Ruby, really a weapon of
mass destruction?&lt;/p&gt;
&lt;p&gt;Find out in Nick Hodge's keynote.&lt;/p&gt;
&lt;p&gt;A Professional Geek at Microsoft in Australia, Nick spends his time with
open source communities showing off Microsoft open source cool and shiny
toys. Prior to Microsoft, Nick spent many a weekend over 3 years
building an internal sales management tool using Python, Excel and SAP
to counter-act the evilness of being a sales manager. Please do not ask
about these dark times in polite conversations. More info about Nick may
or may not be found at &lt;a class="reference external" href="http://www.nickhodge.com/"&gt;http://www.nickhodge.com/&lt;/a&gt;.&lt;/p&gt;
</summary><category term="keynote"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Lightning talks - Saturday</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--lightning-talks---saturday.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Amy Maree</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--lightning-talks---saturday.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks - Saturday&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 - Amy Maree: Talking about OLPC XO, Python and Pippy.&lt;/li&gt;
&lt;li&gt;05:55 - Jurgen Brendel: Jython and writing performance critical parts
in Java.&lt;/li&gt;
&lt;li&gt;09:50 - Dave Claridge: Embedding Python and robots that play soccer.&lt;/li&gt;
&lt;li&gt;15:10 - Paul Dyson: inflect.py&lt;/li&gt;
&lt;li&gt;20:20 - Richard Jones: cocos2d, a python game library&lt;/li&gt;
&lt;li&gt;25:40 - Brian Quinlan: Why you probably don't want to work for Google&lt;/li&gt;
&lt;li&gt;30:50 - Nick Coghlan: Running Python scripts.&lt;/li&gt;
&lt;li&gt;34:55 - Philip: How to introduce Python to a large organization&lt;/li&gt;
&lt;li&gt;38:55 - Ryan Kelly: with hacks: re-usable tools for with-statement
hackery&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PMC curator notes: Paul Dyson's demo at 18:28 is great.&lt;/p&gt;
&lt;p&gt;If anyone know's Philip's last name (and/or if we spelled his first name
wrong, too), let us know in the comments.&lt;/p&gt;
</summary><category term="lightning talks"></category><category term="cocos2d"></category><category term="google"></category><category term="hacks"></category><category term="inflect.py"></category><category term="jython"></category><category term="olpc"></category><category term="pippy"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="robots"></category><category term="scripts"></category><category term="with"></category></entry><entry><title>PyConAU 2010: Lightning talks - Sunday</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--lightning-talks---sunday.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--lightning-talks---sunday.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks - Sunday&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 - Benno Rice: SOAP and SSL Certificate Authentication&lt;/li&gt;
&lt;li&gt;02:50 - Brian Quinlan: Python Puzzlers&lt;/li&gt;
&lt;li&gt;08:30 - Malti Marquarding: ASKAP Computing: Project Overview&lt;/li&gt;
&lt;li&gt;14:25 - Brian Quinlan: Python Puzzlers (2)&lt;/li&gt;
&lt;li&gt;20:05 - Peter Lovett: Python is Good&lt;/li&gt;
&lt;li&gt;24:25 - Dylan Jay: &lt;a class="reference external" href="http://sypy.org/"&gt;SyPy (Sydney Python)&lt;/a&gt;,
&lt;a class="reference external" href="http://bfg.repoze.org/"&gt;repoze.BFG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;30:45 - Ryan Kelly: &amp;#64;inline (or:
&lt;a class="reference external" href="http://github.com/rfk/promise/"&gt;promise&lt;/a&gt; gets pushy)&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="lightning talks"></category><category term="promise"></category><category term="puzzlers"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="repoze.bfg"></category><category term="soap"></category><category term="ssl"></category><category term="sypy"></category></entry><entry><title>PyConAU 2010: Making your Python code fast</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--making-your-python-code-fast.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Andrew Bennetts</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--making-your-python-code-fast.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making your Python code fast&lt;/p&gt;
&lt;p&gt;Presented by Andrew Bennetts (Canonical)&lt;/p&gt;
&lt;p&gt;Before you can make your program faster you need to understand why it
slow. Andrew will show you some tools and techniques for investigating
and analysing your program's performance.&lt;/p&gt;
</summary><category term="optimisation"></category><category term="performance"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Multiple, Heterogeneous Models in Pylons</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--multiple--heterogeneous-models-in-p.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Nick Seidenman</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--multiple--heterogeneous-models-in-p.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Multiple, Heterogeneous Models in Pylons&lt;/p&gt;
&lt;p&gt;Presented by Nick Seidenman (WEHI)&lt;/p&gt;
&lt;p&gt;There is a fair amount of sparse, disjoint information available on how
to use multiple, possibly diverse databases within a single Pylons app.
This talk seeks to present a coherent guideline, derived from lessons
learned, on how to use several different data stores (sqlite,
postgresql, mysql, flat files) simultaneously within the same pylons
project.&lt;/p&gt;
</summary><category term="databases"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="pylons"></category></entry><entry><title>PyConAU 2010: Need for Speed</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--need-for-speed.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Dr. Graeme Cross</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--need-for-speed.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Need for Speed&lt;/p&gt;
&lt;p&gt;Presented by Dr. Graeme Cross&lt;/p&gt;
&lt;p&gt;&amp;quot;Bottlenecks occur in surprising places, so don't try to second guess
and put in a speed hack until you have proven that's where the
bottleneck is.&amp;quot; (Rob Pike)&lt;/p&gt;
&lt;p&gt;Python is a great balance of productivity, expressiveness and
performance, but there are times when it would nice to have a Python
application run faster. This is particularly true for large scale data
processing, numerical work, controlling real world devices, and
animation.&lt;/p&gt;
&lt;p&gt;Using some real-world examples, this talk covers tools and techniques
that allow you to systematically understand where the bottlenecks are in
your code and then how to effectively optimise your code, without having
to resort to writing modules in C/C++.&lt;/p&gt;
</summary><category term="language"></category><category term="optimisation"></category><category term="profiling"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Plone for Python Developers</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--plone-for-python-developers.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Dylan Jay</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--plone-for-python-developers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plone for Python Developers&lt;/p&gt;
&lt;p&gt;Presented by Dylan Jay (PretaWeb)&lt;/p&gt;
&lt;p&gt;Plone is one of the top four open source CMSes in the world and is pure
python. Plone is in demand for security, simple UI and extreme
flexibility. This talk will concentrate on helping web programers with
several common customisations of Plone, including content type creation,
themeing and template customizations and how the re-architecture using
ZTK makes this easy.&lt;/p&gt;
</summary><category term="cms"></category><category term="plone"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="web"></category><category term="zope"></category></entry><entry><title>PyConAU 2010: Python Goes to the Movies</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--python-goes-to-the-movies.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Mark J Streatfield</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--python-goes-to-the-movies.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Goes to the Movies&lt;/p&gt;
&lt;p&gt;Presented by Mark J Streatfield (Dr. D. Studios.)&lt;/p&gt;
&lt;p&gt;As Hollywood continues to churn out blockbuster films such as Avatar,
the technology used to produce the eye popping visual effects is
increasingly becoming the nomenclature of the everyday movie-goer. While
attention is often paid to the headline techniques such as motion
capture and complex physics simulation, few realise that the majority of
the work is underpinned by a foundation of Python. This talk introduces
the application of Python in the visual effects industry.&lt;/p&gt;
</summary><category term="casestudy"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Python in Video Games and Multimedia Projects</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--python-in-video-games-and-multimedi.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Chris McCormick</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--python-in-video-games-and-multimedi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python in Video Games and Multimedia Projects&lt;/p&gt;
&lt;p&gt;Presented by Mr. Chris McCormick&lt;/p&gt;
&lt;p&gt;This talk will cover several real-world uses of Python in cross platform
video game and multimedia projects, and the tips, tricks, and techniques
I learned along the way whilst working on those projects. I'll speak
about the issues involved in cross platform desktop dev with wxPython,
interfacing with multimedia programs using subprocess, spreading load
with multiprocessing, developing for the web on small devices with
Django, and when and how to write custom network servers using asyncore.&lt;/p&gt;
</summary><category term="games"></category><category term="handheld"></category><category term="multimedia"></category><category term="network"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="web"></category></entry><entry><title>PyConAU 2010: State Of Python</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--state-of-python.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Richard Jones</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--state-of-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;State Of Python&lt;/p&gt;
&lt;p&gt;Presented by Richard Jones&lt;/p&gt;
&lt;p&gt;This talk will present a whirlwind update of the state of Python as of
June 2010. It will cover the evolution of the language itself, its
variants, versions and veracity. It will cover the state of packaging,
distributing and pypi.&lt;/p&gt;
</summary><category term="advocacy"></category><category term="core"></category><category term="language"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: The future is soon!</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--the-future-is-soon.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Brian K Quinlan</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--the-future-is-soon.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The future is soon!&lt;/p&gt;
&lt;p&gt;Presented by Brian K Quinlan (Google)&lt;/p&gt;
&lt;p&gt;This talk introduces PEP 3148, a proposed library that makes it easier
to build concurrent applications or modify existing application to
exploit opportunities for parallelism.&lt;/p&gt;
</summary><category term="concurrency"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Using Python for Natural Language Generation and Analysis</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--using-python-for-natural-language-g.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Tennessee J Leeuwenburg</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--using-python-for-natural-language-g.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Python for Natural Language Generation and Analysis&lt;/p&gt;
&lt;p&gt;Presented by Tennessee J Leeuwenburg (Australian Government Bureau of
Meteorology)&lt;/p&gt;
&lt;p&gt;Python is used within the Bureau of Meteorology to automatically
generate weather forecast text based on numerical data. In addition, the
development team has also used Python to introspect the forecast
language and statistics used in the past. NTLK is an open-source
language processing toolkit which can be used for visualising language
patterns. This presentation will talk about some of the techniques used
for automatically describing datasets and also how NTLK can be used to
discover information about language uses and requirements in an
organisation.&lt;/p&gt;
</summary><category term="language"></category><category term="nltk"></category><category term="parsing"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Using Python in a scientific real-time data collection network</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--using-python-in-a-scientific-real-t.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Dr. Paul Dyson</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--using-python-in-a-scientific-real-t.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Python in a scientific real-time data collection network&lt;/p&gt;
&lt;p&gt;Presented by Dr. Paul Dyson (Bureau of Meteorology)&lt;/p&gt;
&lt;p&gt;Python is being increasingly used within the Solar and Terrestrial
Radiation Network at the Bureau of Meteorology. This Network consists of
ten ground stations across Australasia that track the sun, measuring the
irradiance of the sun and sky. This talk will outline the work of the
Network, the changes resulting from the introduction of Python in 2005,
and advantages and some difficulties of using Python.&lt;/p&gt;
</summary><category term="casestudy"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="science"></category></entry><entry><title>PyConAU 2010: Virtualisation Used in Development</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--virtualisation-used-in-development.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Andrew Boag</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--virtualisation-used-in-development.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Virtualisation Used in Development&lt;/p&gt;
&lt;p&gt;Presented by Andrew Boag (Catalyst IT)&lt;/p&gt;
&lt;p&gt;Some thoughts on why it makes sense to do your development inside some
sort of virtual container. There are real pluses for the grass-level
developement process, whether you have a large or small infrastructure.&lt;/p&gt;
</summary><category term="databases"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="virtualisation"></category></entry><entry><title>PyConAU 2010: What's eating my memory?</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--what--39-s-eating-my-memory.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Andrew Bennetts</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--what--39-s-eating-my-memory.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What's eating my memory?&lt;/p&gt;
&lt;p&gt;Presented by Andrew Bennetts (Canonical)&lt;/p&gt;
&lt;p&gt;Ever wondered why your Python process has consumed 2 gigabytes of memory
overnight? Ever torn out your hair trying to find out why? Andrew will
show you some tools and techniques that can help you investigate.&lt;/p&gt;
</summary><category term="memory"></category><category term="optimisation"></category><category term="performance"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: What's new in Django 1.2</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--what--39-s-new-in-django-1-2.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Russell Keith-Magee</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--what--39-s-new-in-django-1-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What's new in Django 1.2&lt;/p&gt;
&lt;p&gt;Presented by Dr. Russell Keith-Magee (Django Project)&lt;/p&gt;
&lt;p&gt;Django 1.2 added a number of major, long anticipated features to Django.
This talk will give an overview of these new features (both large and
small), as well as giving a look into what the future may hold for
Django.&lt;/p&gt;
</summary><category term="pyconau"></category><category term="pyconau2010"></category><category term="web"></category></entry><entry><title>PyConAU 2010: whoops I deployed again - new ways to get your app in the cloud</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--whoops-i-deployed-again---new-ways-.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Dylan Jay</name></author><id>tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--whoops-i-deployed-again---new-ways-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;whoops I deployed again - new ways to get your app in the cloud&lt;/p&gt;
&lt;p&gt;Presented by Dylan Jay (PretaWeb)&lt;/p&gt;
&lt;p&gt;A overview of new tools for deploying python based applications to
servers including cloud inferstructure such as Amazon Ec2.&lt;/p&gt;
&lt;p&gt;The talk will cover Ian Bicking's Silver Lining, zc.buildout, Fabric and
hostout. This talk will focus on how to get your first web app hosted
easily.&lt;/p&gt;
</summary><category term="deployment"></category><category term="hostout"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="silverlining"></category><category term="web"></category><category term="wsgi"></category><category term="zc.buildout"></category></entry></feed>