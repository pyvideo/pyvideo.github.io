<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - pyconau</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_pyconau.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2020-09-06T00:00:00+00:00</updated><subtitle></subtitle><entry><title>PyConAU 2010: An Introduction to Processing</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--an-introduction-to-processing.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Clinton Roy</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--an-introduction-to-processing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An Introduction to Processing&lt;/p&gt;
&lt;p&gt;Presented by Clinton J Roy (University of Queensland)&lt;/p&gt;
&lt;p&gt;Processing is an Open Source language designed to make interactive
graphics and animation programming easier than traditional GUI toolkits.
Processing is used to prototype systems and create interactive data
visualisations.&lt;/p&gt;
&lt;p&gt;[NOTES: Missing first 2 minutes of audio …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An Introduction to Processing&lt;/p&gt;
&lt;p&gt;Presented by Clinton J Roy (University of Queensland)&lt;/p&gt;
&lt;p&gt;Processing is an Open Source language designed to make interactive
graphics and animation programming easier than traditional GUI toolkits.
Processing is used to prototype systems and create interactive data
visualisations.&lt;/p&gt;
&lt;p&gt;[NOTES: Missing first 2 minutes of audio, then camera microphone for
first section.]&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="gui"></category><category term="multimedia"></category><category term="processing"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: App Engine 101</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--app-engine-101.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Brian Quinlan</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--app-engine-101.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;App Engine 101&lt;/p&gt;
&lt;p&gt;Presented by Brian K Quinlan (Google)&lt;/p&gt;
&lt;p&gt;App Engine lets you run your Python web applications on Google's
infrastructure.&lt;/p&gt;
&lt;p&gt;This tutorial will provide an overview on how to create, configure and
deploy applications on App Engine using a simple (but useful!) example
application.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="appengine"></category><category term="gae"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="tutorial"></category><category term="web"></category></entry><entry><title>PyConAU 2010: Building the Wave Robots API: Behind the Scenes</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--building-the-wave-robots-api--behin.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Pamela S Fox</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--building-the-wave-robots-api--behin.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building the Wave Robots API: Behind the Scenes&lt;/p&gt;
&lt;p&gt;Presented by Pamela S Fox (Google)&lt;/p&gt;
&lt;p&gt;The Google Wave robots protocol involves JSON-RPC messages that are sent
between the Wave server and the robot, communicating events to process
and operations to perform. The Python Robots API abstracts on top of
that …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building the Wave Robots API: Behind the Scenes&lt;/p&gt;
&lt;p&gt;Presented by Pamela S Fox (Google)&lt;/p&gt;
&lt;p&gt;The Google Wave robots protocol involves JSON-RPC messages that are sent
between the Wave server and the robot, communicating events to process
and operations to perform. The Python Robots API abstracts on top of
that JSON-RPC service, allowing developers to interact with waves using
event callbacks, python classes, and chained functions. In this talk,
we'll explain the JSON- RPC protocol, talk about how we designed the API
to sit on top of that protocol, and show how developers can use the API.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="apis"></category><category term="json"></category><category term="jsonrpc"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="web"></category></entry><entry><title>PyConAU 2010: Displaying Australian datasets with Django</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--displaying-australian-datasets-with.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Malcolm Tredinnick</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--displaying-australian-datasets-with.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Displaying Australian datasets with Django&lt;/p&gt;
&lt;p&gt;Presented by Malcolm Tredinnick&lt;/p&gt;
&lt;p&gt;The last 18 months or so in Australia have seen an increased number of
government and public sector organisations releasing datasets to the
public under reasonable reuse terms (often Creative Commons license).
This talk will take a couple of those …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Displaying Australian datasets with Django&lt;/p&gt;
&lt;p&gt;Presented by Malcolm Tredinnick&lt;/p&gt;
&lt;p&gt;The last 18 months or so in Australia have seen an increased number of
government and public sector organisations releasing datasets to the
public under reasonable reuse terms (often Creative Commons license).
This talk will take a couple of those local real-world datasets and
create a minimal website for remixing them, using Django as the
underlying framework. The goals are to provide a short walk through the
process of importing and extracting such data in practice, show how to
incorporate Django's GIS features into an application, as well as
highlighting that real world is messy and so is the data it produces.
Working with datasets for journalism or research purposes, or simply
fun, requires a certain attention to detail.&lt;/p&gt;
&lt;p&gt;Basic knowledge of Django is assumed, although the GIS components will
be introduced carefully as they are less familiar to many developers.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="datasets"></category><category term="gis"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Don't Break It: Continuous Integration &amp; Deployment</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--don--39-t-break-it--continuous-inte.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Benno Rice</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--don--39-t-break-it--continuous-inte.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Don't Break It: Continuous Integration &amp;amp; Deployment&lt;/p&gt;
&lt;p&gt;Presented by Benno Rice&lt;/p&gt;
&lt;p&gt;So you've developed your application, it appears to work and you may
even have some tests to back that up. Now what?&lt;/p&gt;
&lt;p&gt;One part of software development that tends to receive not nearly enough
attention is the process of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Don't Break It: Continuous Integration &amp;amp; Deployment&lt;/p&gt;
&lt;p&gt;Presented by Benno Rice&lt;/p&gt;
&lt;p&gt;So you've developed your application, it appears to work and you may
even have some tests to back that up. Now what?&lt;/p&gt;
&lt;p&gt;One part of software development that tends to receive not nearly enough
attention is the process of deploying, supporting and maintaining your
code in production. This demonstration will give an overview of using
tools such as Hudson, nose, stdeb and freshen to automate the testing,
packaging, deployment and verification of production software.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="agile"></category><category term="architecture"></category><category term="packaging"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="testing"></category></entry><entry><title>PyConAU 2010: Esky: keep your frozen apps fresh</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--esky--keep-your-frozen-apps-fresh.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Ryan F Kelly</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--esky--keep-your-frozen-apps-fresh.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Esky: keep your frozen apps fresh&lt;/p&gt;
&lt;p&gt;Presented by Ryan F Kelly&lt;/p&gt;
&lt;p&gt;Esky (&lt;a class="reference external" href="http://pypi.python.org/pypi/esky/"&gt;http://pypi.python.org/pypi/esky/&lt;/a&gt;) is an auto-update framework for
frozen Python applications, designed to be simple to use while
guaranteeing the safety of your app in case of failed or partial
updates. It provides easy …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Esky: keep your frozen apps fresh&lt;/p&gt;
&lt;p&gt;Presented by Ryan F Kelly&lt;/p&gt;
&lt;p&gt;Esky (&lt;a class="reference external" href="http://pypi.python.org/pypi/esky/"&gt;http://pypi.python.org/pypi/esky/&lt;/a&gt;) is an auto-update framework for
frozen Python applications, designed to be simple to use while
guaranteeing the safety of your app in case of failed or partial
updates. It provides easy support for differential updates and is
compatible with py2exe, py2app, cx-freeze and bbfreeze.&lt;/p&gt;
&lt;p&gt;This talk will give an overview of esky's features, and show how to
extend an existing frozen application with auto-update support.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="esky"></category><category term="packaging"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Fast Engineering Computation in with Boost::Python and Numarray</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--fast-engineering-computation-in-wit.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Filip Zalio</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--fast-engineering-computation-in-wit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fast Engineering Computation in with Boost::Python and Numarray&lt;/p&gt;
&lt;p&gt;Presented by Filip Zalio (NEC Australia)&lt;/p&gt;
&lt;p&gt;In the 3G Mobile Research and Development Division in NEC Australia
(www.nec.com.au) we have been using Python based environment since 2005.
We run digital signal processing simulations of 3G and 4G …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fast Engineering Computation in with Boost::Python and Numarray&lt;/p&gt;
&lt;p&gt;Presented by Filip Zalio (NEC Australia)&lt;/p&gt;
&lt;p&gt;In the 3G Mobile Research and Development Division in NEC Australia
(www.nec.com.au) we have been using Python based environment since 2005.
We run digital signal processing simulations of 3G and 4G mobile phone
radio links. Our simulations are CPU-bound, where efficient and fast
interfacing between C++ and Python is one of the keys to the growing
success of Python within NEC. In this short presentation, we describe
our current framework which achieves the fast processing.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="casestudy"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Genropy - a framework for creating complex applications deployed on the web</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--genropy---a-framework-for-creating-.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Jeff B Edwards</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--genropy---a-framework-for-creating-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genropy - A framework for creating complex applications deployed on the
web&lt;/p&gt;
&lt;p&gt;Presented by Jeff B Edwards (Goodsoftware)&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://blog.genropy.org/"&gt;Genropy&lt;/a&gt; is the python implementation of
Genro, and is an application framework quite different from the standard
(django, cherrypy, turbogears), for building powerful database
applications deployed from the browser. Many differences and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genropy - A framework for creating complex applications deployed on the
web&lt;/p&gt;
&lt;p&gt;Presented by Jeff B Edwards (Goodsoftware)&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://blog.genropy.org/"&gt;Genropy&lt;/a&gt; is the python implementation of
Genro, and is an application framework quite different from the standard
(django, cherrypy, turbogears), for building powerful database
applications deployed from the browser. Many differences and advantages
between this framework and traditional python application frameworks are
explained. Genropy is a suitable for creating complex 'applications' as
opposed to 'sites'. The differentiation is that an application is
something an operator uses all day, has trained users, that have to
'squeeze' all the power from it available. Conversely, a 'site' is
basically public and not necessarily powerful as a user spends a
relatively small amount of time on it. Genropy is the framework for
creation applications. It is used for attendee registration and sales in
pycon italy, the larger national conference in Europe (Florence, Italy).&lt;/p&gt;
&lt;p&gt;This session will demonstrate how to create a simple application (3
tables) and demonstrate the ease and power of using python for the model
view and controller on the client. It demonstrates how one api- being
the genro Bag - is used to create the model, to map the sql to objects,
to create the GUI and communicate all data. So all of it can be done in
python instead of having to use many different technologies and
languages.&lt;/p&gt;
&lt;p&gt;Jeff Edwards from Goodsoftware is strategic partner of Sofwell who is
the author of Genropy.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="databases"></category><category term="gui"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="web"></category></entry><entry><title>PyConAU 2010: Getting started with Apache/mod_wsgi</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--getting-started-with-apache-mod-wsg.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Graham Dumpleton</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--getting-started-with-apache-mod-wsg.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Getting started with Apache/mod_wsgi&lt;/p&gt;
&lt;p&gt;Presented by Graham Dumpleton&lt;/p&gt;
&lt;p&gt;An introduction to using Apache/mod_wsgi to host Python web
applications supporting the Python Web Server Gateway Interface (WSGI).&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="mod_wsgi"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="virtualenv"></category><category term="wsgi"></category></entry><entry><title>PyConAU 2010: GLAMkit: a harder, better, faster, stronger way to write reusable Django code</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--glamkit--a-harder--better--faster--.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Dr. Greg Turner</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--glamkit--a-harder--better--faster--.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GLAMkit: a harder, better, faster, stronger way to write reusable Django
code&lt;/p&gt;
&lt;p&gt;Presented by Dr. Greg Turner (the Interaction Consortium)&lt;/p&gt;
&lt;p&gt;As part of our web development work for Galleries, Libraries, Archives
and Museums (the so-called GLAM sector), we have open-sourced the common
tools and design patterns that we have …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GLAMkit: a harder, better, faster, stronger way to write reusable Django
code&lt;/p&gt;
&lt;p&gt;Presented by Dr. Greg Turner (the Interaction Consortium)&lt;/p&gt;
&lt;p&gt;As part of our web development work for Galleries, Libraries, Archives
and Museums (the so-called GLAM sector), we have open-sourced the common
tools and design patterns that we have developed as a web framework
called GLAMkit (&lt;a class="reference external" href="http://glamkit.org/"&gt;http://glamkit.org/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;GLAMkit is based on Django, and is inspired by its design philosophy of
several apps which implement specific features. However, by looking at
the successes and challenges faced by other CMSes and collections of
apps such as Pinax, we have taken the philosophy a stage futher.&lt;/p&gt;
&lt;p&gt;Rather than being a collection of Django apps, we have constructed
GLAMkit as a collection of optional and reusable Django 'toolkits' for
implementing common features. We leave the implementation details - the
things that Django already does brilliantly - to the application
developers themselves.&lt;/p&gt;
&lt;p&gt;In this talk, we will present the history of GLAMkit's development, with
particular focus on how our approach to reusability came about, and some
examples of that approach.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="advocacy"></category><category term="architecture"></category><category term="community"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="web"></category></entry><entry><title>PyConAU 2010: Hard Real-time Python, or, Giant Robots of Doom</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--hard-real-time-python--or--giant-ro.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Simon Wittber</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--hard-real-time-python--or--giant-ro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hard Real-time Python, or, Giant Robots of Doom&lt;/p&gt;
&lt;p&gt;Presented by Simon Wittber (Different Methods Pty Ltd)&lt;/p&gt;
&lt;p&gt;Can you use Python to control a pair of 30 tonne robots as they spin at
72 kilometres per hour? Can you use Python to provide realtime collision
avoidance and fly-by-wire control?&lt;/p&gt;
&lt;p&gt;Yes …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hard Real-time Python, or, Giant Robots of Doom&lt;/p&gt;
&lt;p&gt;Presented by Simon Wittber (Different Methods Pty Ltd)&lt;/p&gt;
&lt;p&gt;Can you use Python to control a pair of 30 tonne robots as they spin at
72 kilometres per hour? Can you use Python to provide realtime collision
avoidance and fly-by-wire control?&lt;/p&gt;
&lt;p&gt;Yes, you can. See how Perth based engineering company Transmin Pty Ltd
(www.transmin.com.au) used Python to deliver a safety-crticial robotic
control system in record time.&lt;/p&gt;
&lt;p&gt;[NOTE: Missing first 2.5 minutes of talk, then camera audio for first
section]&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="casestudy"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="robots"></category></entry><entry><title>PyConAU 2010: Introducing Python to a Java shop</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--introducing-python-to-a-java-shop.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Juergen Brendel</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--introducing-python-to-a-java-shop.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducing Python to a Java shop&lt;/p&gt;
&lt;p&gt;Presented by Juergen Brendel (MuleSoft)&lt;/p&gt;
&lt;p&gt;There is a time and place for everything: For some applications Python
is perfect, for others a language like Java and its entire ecosystem is
more ideal. In this talk we see how Python was introduced to a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducing Python to a Java shop&lt;/p&gt;
&lt;p&gt;Presented by Juergen Brendel (MuleSoft)&lt;/p&gt;
&lt;p&gt;There is a time and place for everything: For some applications Python
is perfect, for others a language like Java and its entire ecosystem is
more ideal. In this talk we see how Python was introduced to a Java shop
as a vehicle for rapid and dynamic prototyping of a new project. The
talk then explains how Jython/Java integration was used to translate
this project step by step from Python to Java. Going beyond the advocacy
focus, the talk then shows the interfaces to call Java from Python and
vice versa and illustrates those with examples. Furthermore, unit
testing of Java classes via test cases written in Python is also touched
upon.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="advocacy"></category><category term="jython"></category><category term="prototyping"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Keynote: Mark Pesce; "How Not To Be Seen"</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--keynote--mark-pesce---quot-how-not-.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Mark Pesce</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--keynote--mark-pesce---quot-how-not-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyConAU 2010 KeyNote&lt;/p&gt;
&lt;p&gt;Presented by Mark Pesce&lt;/p&gt;
&lt;p&gt;Although Mark Pesce does know Python, he doesn't consider himself any
sort of expert so he won't be talking about Python, except to whinge
that his friends pick on him for choosing a language which uses
whitespace as syntax. Try as he …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyConAU 2010 KeyNote&lt;/p&gt;
&lt;p&gt;Presented by Mark Pesce&lt;/p&gt;
&lt;p&gt;Although Mark Pesce does know Python, he doesn't consider himself any
sort of expert so he won't be talking about Python, except to whinge
that his friends pick on him for choosing a language which uses
whitespace as syntax. Try as he might, he can't get his friends to see
the logic of this - even though they always pretty-print their own code,
in whatever language they write. Go figure. So, Mark will not be talking
about that. What will Mark be talking about? Well, um, err... (sound of
shuffling papers) ...oh, yeah, here it is: 'Mark Pesce will be talking
about stuff. And things. And how great it all is. No, really. You'll
see. Promise.' ? Mark is best-known as the co-inventor of VRML, and as
panelist/judge on ABC's &amp;quot;The New Inventors&amp;quot;. The author of five books
and numerous articles, he has a monthly column in NETT magazine, is a
frequent contributor to ABC Unleashed, and is a sought-after commentator
on both radio and television. Since 2006, Pesce has held an Honorary
Appointment in the Digital Cultures Program at the University of Sydney.&lt;/p&gt;
&lt;p&gt;[NOTES: ~10 secs lost audio at start]&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="keynote"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Keynote: Nick Hodge; "IronPython &amp; The Quest for the Holy Grail"</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--keynote--nick-hodge---quot-ironpyth.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Nick Hodge</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--keynote--nick-hodge---quot-ironpyth.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Keynote: Nick Hodge, &amp;quot;IronPython &amp;amp; The Quest for the Holy Grail&amp;quot;&lt;/p&gt;
&lt;p&gt;Presented by Nick Hodge&lt;/p&gt;
&lt;p&gt;Language interoperability is one of the Holy Grails of programming
languages. Choose your language, choose your framework and freely
exchange objects and methods.&lt;/p&gt;
&lt;p&gt;Is this Anarcho-syndicalism of application architecture? Are the serfs
in the fields …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Keynote: Nick Hodge, &amp;quot;IronPython &amp;amp; The Quest for the Holy Grail&amp;quot;&lt;/p&gt;
&lt;p&gt;Presented by Nick Hodge&lt;/p&gt;
&lt;p&gt;Language interoperability is one of the Holy Grails of programming
languages. Choose your language, choose your framework and freely
exchange objects and methods.&lt;/p&gt;
&lt;p&gt;Is this Anarcho-syndicalism of application architecture? Are the serfs
in the fields of development teams rebelling against the rightful King
of the Realm?&lt;/p&gt;
&lt;p&gt;Is the Dynamic Language Runtime from Microsoft merely a French castle in
the Kingdom of England?&lt;/p&gt;
&lt;p&gt;How does this all fit with the open source Knights of Ni that lurk in
the thickest of forests?&lt;/p&gt;
&lt;p&gt;And the so-called Holy Hand Grenade of Antioch, Ruby, really a weapon of
mass destruction?&lt;/p&gt;
&lt;p&gt;Find out in Nick Hodge's keynote.&lt;/p&gt;
&lt;p&gt;A Professional Geek at Microsoft in Australia, Nick spends his time with
open source communities showing off Microsoft open source cool and shiny
toys. Prior to Microsoft, Nick spent many a weekend over 3 years
building an internal sales management tool using Python, Excel and SAP
to counter-act the evilness of being a sales manager. Please do not ask
about these dark times in polite conversations. More info about Nick may
or may not be found at &lt;a class="reference external" href="http://www.nickhodge.com/"&gt;http://www.nickhodge.com/&lt;/a&gt;.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="keynote"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Lightning talks - Saturday</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--lightning-talks---saturday.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Amy Maree</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--lightning-talks---saturday.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks - Saturday&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 - Amy Maree: Talking about OLPC XO, Python and Pippy.&lt;/li&gt;
&lt;li&gt;05:55 - Jurgen Brendel: Jython and writing performance critical parts
in Java.&lt;/li&gt;
&lt;li&gt;09:50 - Dave Claridge: Embedding Python and robots that play soccer.&lt;/li&gt;
&lt;li&gt;15:10 - Paul Dyson: inflect.py&lt;/li&gt;
&lt;li&gt;20:20 - Richard Jones: cocos2d, a …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks - Saturday&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 - Amy Maree: Talking about OLPC XO, Python and Pippy.&lt;/li&gt;
&lt;li&gt;05:55 - Jurgen Brendel: Jython and writing performance critical parts
in Java.&lt;/li&gt;
&lt;li&gt;09:50 - Dave Claridge: Embedding Python and robots that play soccer.&lt;/li&gt;
&lt;li&gt;15:10 - Paul Dyson: inflect.py&lt;/li&gt;
&lt;li&gt;20:20 - Richard Jones: cocos2d, a python game library&lt;/li&gt;
&lt;li&gt;25:40 - Brian Quinlan: Why you probably don't want to work for Google&lt;/li&gt;
&lt;li&gt;30:50 - Nick Coghlan: Running Python scripts.&lt;/li&gt;
&lt;li&gt;34:55 - Philip: How to introduce Python to a large organization&lt;/li&gt;
&lt;li&gt;38:55 - Ryan Kelly: with hacks: re-usable tools for with-statement
hackery&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PMC curator notes: Paul Dyson's demo at 18:28 is great.&lt;/p&gt;
&lt;p&gt;If anyone know's Philip's last name (and/or if we spelled his first name
wrong, too), let us know in the comments.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="lightning talks"></category><category term="cocos2d"></category><category term="google"></category><category term="hacks"></category><category term="inflect.py"></category><category term="jython"></category><category term="olpc"></category><category term="pippy"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="robots"></category><category term="scripts"></category><category term="with"></category></entry><entry><title>PyConAU 2010: Lightning talks - Sunday</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--lightning-talks---sunday.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--lightning-talks---sunday.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks - Sunday&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 - Benno Rice: SOAP and SSL Certificate Authentication&lt;/li&gt;
&lt;li&gt;02:50 - Brian Quinlan: Python Puzzlers&lt;/li&gt;
&lt;li&gt;08:30 - Malti Marquarding: ASKAP Computing: Project Overview&lt;/li&gt;
&lt;li&gt;14:25 - Brian Quinlan: Python Puzzlers (2)&lt;/li&gt;
&lt;li&gt;20:05 - Peter Lovett: Python is Good&lt;/li&gt;
&lt;li&gt;24:25 - Dylan Jay: &lt;a class="reference external" href="http://sypy.org/"&gt;SyPy (Sydney Python)&lt;/a&gt;,
&lt;a class="reference external" href="http://bfg.repoze.org/"&gt;repoze.BFG …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks - Sunday&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 - Benno Rice: SOAP and SSL Certificate Authentication&lt;/li&gt;
&lt;li&gt;02:50 - Brian Quinlan: Python Puzzlers&lt;/li&gt;
&lt;li&gt;08:30 - Malti Marquarding: ASKAP Computing: Project Overview&lt;/li&gt;
&lt;li&gt;14:25 - Brian Quinlan: Python Puzzlers (2)&lt;/li&gt;
&lt;li&gt;20:05 - Peter Lovett: Python is Good&lt;/li&gt;
&lt;li&gt;24:25 - Dylan Jay: &lt;a class="reference external" href="http://sypy.org/"&gt;SyPy (Sydney Python)&lt;/a&gt;,
&lt;a class="reference external" href="http://bfg.repoze.org/"&gt;repoze.BFG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;30:45 - Ryan Kelly: &amp;#64;inline (or:
&lt;a class="reference external" href="http://github.com/rfk/promise/"&gt;promise&lt;/a&gt; gets pushy)&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyCon AU 2010"></category><category term="lightning talks"></category><category term="promise"></category><category term="puzzlers"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="repoze.bfg"></category><category term="soap"></category><category term="ssl"></category><category term="sypy"></category></entry><entry><title>PyConAU 2010: Making your Python code fast</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--making-your-python-code-fast.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Andrew Bennetts</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--making-your-python-code-fast.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making your Python code fast&lt;/p&gt;
&lt;p&gt;Presented by Andrew Bennetts (Canonical)&lt;/p&gt;
&lt;p&gt;Before you can make your program faster you need to understand why it
slow. Andrew will show you some tools and techniques for investigating
and analysing your program's performance.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="optimisation"></category><category term="performance"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Multiple, Heterogeneous Models in Pylons</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--multiple--heterogeneous-models-in-p.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Nick Seidenman</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--multiple--heterogeneous-models-in-p.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Multiple, Heterogeneous Models in Pylons&lt;/p&gt;
&lt;p&gt;Presented by Nick Seidenman (WEHI)&lt;/p&gt;
&lt;p&gt;There is a fair amount of sparse, disjoint information available on how
to use multiple, possibly diverse databases within a single Pylons app.
This talk seeks to present a coherent guideline, derived from lessons
learned, on how to use …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Multiple, Heterogeneous Models in Pylons&lt;/p&gt;
&lt;p&gt;Presented by Nick Seidenman (WEHI)&lt;/p&gt;
&lt;p&gt;There is a fair amount of sparse, disjoint information available on how
to use multiple, possibly diverse databases within a single Pylons app.
This talk seeks to present a coherent guideline, derived from lessons
learned, on how to use several different data stores (sqlite,
postgresql, mysql, flat files) simultaneously within the same pylons
project.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="databases"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="pylons"></category></entry><entry><title>PyConAU 2010: Need for Speed</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--need-for-speed.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Dr. Graeme Cross</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--need-for-speed.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Need for Speed&lt;/p&gt;
&lt;p&gt;Presented by Dr. Graeme Cross&lt;/p&gt;
&lt;p&gt;&amp;quot;Bottlenecks occur in surprising places, so don't try to second guess
and put in a speed hack until you have proven that's where the
bottleneck is.&amp;quot; (Rob Pike)&lt;/p&gt;
&lt;p&gt;Python is a great balance of productivity, expressiveness and
performance, but there are …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Need for Speed&lt;/p&gt;
&lt;p&gt;Presented by Dr. Graeme Cross&lt;/p&gt;
&lt;p&gt;&amp;quot;Bottlenecks occur in surprising places, so don't try to second guess
and put in a speed hack until you have proven that's where the
bottleneck is.&amp;quot; (Rob Pike)&lt;/p&gt;
&lt;p&gt;Python is a great balance of productivity, expressiveness and
performance, but there are times when it would nice to have a Python
application run faster. This is particularly true for large scale data
processing, numerical work, controlling real world devices, and
animation.&lt;/p&gt;
&lt;p&gt;Using some real-world examples, this talk covers tools and techniques
that allow you to systematically understand where the bottlenecks are in
your code and then how to effectively optimise your code, without having
to resort to writing modules in C/C++.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="language"></category><category term="optimisation"></category><category term="profiling"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Plone for Python Developers</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--plone-for-python-developers.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Dylan Jay</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--plone-for-python-developers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plone for Python Developers&lt;/p&gt;
&lt;p&gt;Presented by Dylan Jay (PretaWeb)&lt;/p&gt;
&lt;p&gt;Plone is one of the top four open source CMSes in the world and is pure
python. Plone is in demand for security, simple UI and extreme
flexibility. This talk will concentrate on helping web programers with
several common customisations …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plone for Python Developers&lt;/p&gt;
&lt;p&gt;Presented by Dylan Jay (PretaWeb)&lt;/p&gt;
&lt;p&gt;Plone is one of the top four open source CMSes in the world and is pure
python. Plone is in demand for security, simple UI and extreme
flexibility. This talk will concentrate on helping web programers with
several common customisations of Plone, including content type creation,
themeing and template customizations and how the re-architecture using
ZTK makes this easy.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="cms"></category><category term="plone"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="web"></category><category term="zope"></category></entry><entry><title>PyConAU 2010: Python Goes to the Movies</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--python-goes-to-the-movies.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Mark J Streatfield</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--python-goes-to-the-movies.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Goes to the Movies&lt;/p&gt;
&lt;p&gt;Presented by Mark J Streatfield (Dr. D. Studios.)&lt;/p&gt;
&lt;p&gt;As Hollywood continues to churn out blockbuster films such as Avatar,
the technology used to produce the eye popping visual effects is
increasingly becoming the nomenclature of the everyday movie-goer. While
attention is often paid to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Goes to the Movies&lt;/p&gt;
&lt;p&gt;Presented by Mark J Streatfield (Dr. D. Studios.)&lt;/p&gt;
&lt;p&gt;As Hollywood continues to churn out blockbuster films such as Avatar,
the technology used to produce the eye popping visual effects is
increasingly becoming the nomenclature of the everyday movie-goer. While
attention is often paid to the headline techniques such as motion
capture and complex physics simulation, few realise that the majority of
the work is underpinned by a foundation of Python. This talk introduces
the application of Python in the visual effects industry.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="casestudy"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Python in Video Games and Multimedia Projects</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--python-in-video-games-and-multimedi.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Chris McCormick</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--python-in-video-games-and-multimedi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python in Video Games and Multimedia Projects&lt;/p&gt;
&lt;p&gt;Presented by Mr. Chris McCormick&lt;/p&gt;
&lt;p&gt;This talk will cover several real-world uses of Python in cross platform
video game and multimedia projects, and the tips, tricks, and techniques
I learned along the way whilst working on those projects. I'll speak
about the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python in Video Games and Multimedia Projects&lt;/p&gt;
&lt;p&gt;Presented by Mr. Chris McCormick&lt;/p&gt;
&lt;p&gt;This talk will cover several real-world uses of Python in cross platform
video game and multimedia projects, and the tips, tricks, and techniques
I learned along the way whilst working on those projects. I'll speak
about the issues involved in cross platform desktop dev with wxPython,
interfacing with multimedia programs using subprocess, spreading load
with multiprocessing, developing for the web on small devices with
Django, and when and how to write custom network servers using asyncore.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="games"></category><category term="handheld"></category><category term="multimedia"></category><category term="network"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="web"></category></entry><entry><title>PyConAU 2010: State Of Python</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--state-of-python.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Richard Jones</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--state-of-python.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;State Of Python&lt;/p&gt;
&lt;p&gt;Presented by Richard Jones&lt;/p&gt;
&lt;p&gt;This talk will present a whirlwind update of the state of Python as of
June 2010. It will cover the evolution of the language itself, its
variants, versions and veracity. It will cover the state of packaging,
distributing and pypi.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="advocacy"></category><category term="core"></category><category term="language"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: The future is soon!</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--the-future-is-soon.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Brian Quinlan</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--the-future-is-soon.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The future is soon!&lt;/p&gt;
&lt;p&gt;Presented by Brian K Quinlan (Google)&lt;/p&gt;
&lt;p&gt;This talk introduces PEP 3148, a proposed library that makes it easier
to build concurrent applications or modify existing application to
exploit opportunities for parallelism.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="concurrency"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Using Python for Natural Language Generation and Analysis</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--using-python-for-natural-language-g.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Tennessee J Leeuwenburg</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--using-python-for-natural-language-g.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Python for Natural Language Generation and Analysis&lt;/p&gt;
&lt;p&gt;Presented by Tennessee J Leeuwenburg (Australian Government Bureau of
Meteorology)&lt;/p&gt;
&lt;p&gt;Python is used within the Bureau of Meteorology to automatically
generate weather forecast text based on numerical data. In addition, the
development team has also used Python to introspect the forecast …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Python for Natural Language Generation and Analysis&lt;/p&gt;
&lt;p&gt;Presented by Tennessee J Leeuwenburg (Australian Government Bureau of
Meteorology)&lt;/p&gt;
&lt;p&gt;Python is used within the Bureau of Meteorology to automatically
generate weather forecast text based on numerical data. In addition, the
development team has also used Python to introspect the forecast
language and statistics used in the past. NTLK is an open-source
language processing toolkit which can be used for visualising language
patterns. This presentation will talk about some of the techniques used
for automatically describing datasets and also how NTLK can be used to
discover information about language uses and requirements in an
organisation.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="language"></category><category term="nltk"></category><category term="parsing"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: Using Python in a scientific real-time data collection network</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--using-python-in-a-scientific-real-t.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Dr. Paul Dyson</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--using-python-in-a-scientific-real-t.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Python in a scientific real-time data collection network&lt;/p&gt;
&lt;p&gt;Presented by Dr. Paul Dyson (Bureau of Meteorology)&lt;/p&gt;
&lt;p&gt;Python is being increasingly used within the Solar and Terrestrial
Radiation Network at the Bureau of Meteorology. This Network consists of
ten ground stations across Australasia that track the sun, measuring the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Python in a scientific real-time data collection network&lt;/p&gt;
&lt;p&gt;Presented by Dr. Paul Dyson (Bureau of Meteorology)&lt;/p&gt;
&lt;p&gt;Python is being increasingly used within the Solar and Terrestrial
Radiation Network at the Bureau of Meteorology. This Network consists of
ten ground stations across Australasia that track the sun, measuring the
irradiance of the sun and sky. This talk will outline the work of the
Network, the changes resulting from the introduction of Python in 2005,
and advantages and some difficulties of using Python.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="casestudy"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="science"></category></entry><entry><title>PyConAU 2010: Virtualisation Used in Development</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--virtualisation-used-in-development.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Andrew Boag</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--virtualisation-used-in-development.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Virtualisation Used in Development&lt;/p&gt;
&lt;p&gt;Presented by Andrew Boag (Catalyst IT)&lt;/p&gt;
&lt;p&gt;Some thoughts on why it makes sense to do your development inside some
sort of virtual container. There are real pluses for the grass-level
developement process, whether you have a large or small infrastructure.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="databases"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="virtualisation"></category></entry><entry><title>PyConAU 2010: What's eating my memory?</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--what--39-s-eating-my-memory.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Andrew Bennetts</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--what--39-s-eating-my-memory.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What's eating my memory?&lt;/p&gt;
&lt;p&gt;Presented by Andrew Bennetts (Canonical)&lt;/p&gt;
&lt;p&gt;Ever wondered why your Python process has consumed 2 gigabytes of memory
overnight? Ever torn out your hair trying to find out why? Andrew will
show you some tools and techniques that can help you investigate.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="memory"></category><category term="optimisation"></category><category term="performance"></category><category term="pyconau"></category><category term="pyconau2010"></category></entry><entry><title>PyConAU 2010: What's new in Django 1.2</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--what--39-s-new-in-django-1-2.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Russell Keith-Magee</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--what--39-s-new-in-django-1-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What's new in Django 1.2&lt;/p&gt;
&lt;p&gt;Presented by Dr. Russell Keith-Magee (Django Project)&lt;/p&gt;
&lt;p&gt;Django 1.2 added a number of major, long anticipated features to Django.
This talk will give an overview of these new features (both large and
small), as well as giving a look into what the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What's new in Django 1.2&lt;/p&gt;
&lt;p&gt;Presented by Dr. Russell Keith-Magee (Django Project)&lt;/p&gt;
&lt;p&gt;Django 1.2 added a number of major, long anticipated features to Django.
This talk will give an overview of these new features (both large and
small), as well as giving a look into what the future may hold for
Django.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="web"></category></entry><entry><title>PyConAU 2010: whoops I deployed again - new ways to get your app in the cloud</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--whoops-i-deployed-again---new-ways-.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Dylan Jay</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--whoops-i-deployed-again---new-ways-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;whoops I deployed again - new ways to get your app in the cloud&lt;/p&gt;
&lt;p&gt;Presented by Dylan Jay (PretaWeb)&lt;/p&gt;
&lt;p&gt;A overview of new tools for deploying python based applications to
servers including cloud inferstructure such as Amazon Ec2.&lt;/p&gt;
&lt;p&gt;The talk will cover Ian Bicking's Silver Lining, zc.buildout, Fabric and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;whoops I deployed again - new ways to get your app in the cloud&lt;/p&gt;
&lt;p&gt;Presented by Dylan Jay (PretaWeb)&lt;/p&gt;
&lt;p&gt;A overview of new tools for deploying python based applications to
servers including cloud inferstructure such as Amazon Ec2.&lt;/p&gt;
&lt;p&gt;The talk will cover Ian Bicking's Silver Lining, zc.buildout, Fabric and
hostout. This talk will focus on how to get your first web app hosted
easily.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="deployment"></category><category term="hostout"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="silverlining"></category><category term="web"></category><category term="wsgi"></category><category term="zc.buildout"></category></entry><entry><title>dask-image: distributed image processing for large data</title><link href="https://pyvideo.org/pycon-au-2020/dask-image-distributed-image-processing-for-large-data.html" rel="alternate"></link><published>2020-09-06T00:00:00+00:00</published><updated>2020-09-06T00:00:00+00:00</updated><author><name>Genevieve Buckley</name></author><id>tag:pyvideo.org,2020-09-06:/pycon-au-2020/dask-image-distributed-image-processing-for-large-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genevieve Buckley&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/KHULAN"&gt;https://2020.pycon.org.au/program/KHULAN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Image datasets are large, and becoming larger. The widely used benchmark dataset COCO (Common Objects in Context) contains 330,000 individual images. The average size of a single entry on the image database EMPIAR is over 1TB, and can easily …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genevieve Buckley&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/KHULAN"&gt;https://2020.pycon.org.au/program/KHULAN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Image datasets are large, and becoming larger. The widely used benchmark dataset COCO (Common Objects in Context) contains 330,000 individual images. The average size of a single entry on the image database EMPIAR is over 1TB, and can easily reach several terabytes.  Even where individual images are small enough to fit in-memory, many existing parallelization methods are difficult to scale seamlessly between a laptop and a supercomputing cluster. For instance, the python multiprocessing module is restricted to a single mode and can't take advantage of multiple compute nodes on a distributed supercomputing cluster.&lt;/p&gt;
&lt;p&gt;We need easy ways to work with large image data. This talk introduces dask-image, a python library for distributed image processing. The target audience are python programmers currently using numpy and scipy with large array data, where the whole dataset cannot fit in memory or is close to that limit. It's for people who want to get started with parallel processing, either because they have large single-image data, or because they want to do batch processing applying the same analysis to many smaller images (sometimes known an embarrassingly parallel problem). The specific image analysis functions provided by dask-image are of broad interest to a diverse range of analysis applications including (but not limited to) video/streaming data, computer vision, and scientific fields including astronomy, microscopy and geosciences.&lt;/p&gt;
&lt;p&gt;Specifically, this talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;An overview of the dask-image library&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Lazy image loading&lt;/li&gt;
&lt;li&gt;Image pre-processing functionality (convolutions, filters, etc.)&lt;/li&gt;
&lt;li&gt;Analysis of segmented images (distributed labeling, and measurements of those label regions)&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Mixing in your own custom analysis functions (using dask delayed, map_blocks, and map_overlap)&lt;/li&gt;
&lt;li&gt;A practical case study of a Python image processing pipeline&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dask-image is open source, released under a BSD 3-Clause license, and can be installed using conda or pip. You can find the source code at &lt;a class="reference external" href="https://github.com/dask/dask-image"&gt;https://github.com/dask/dask-image&lt;/a&gt; and the quickstart guide at &lt;a class="reference external" href="https://github.com/dask/dask-examples/blob/master/applications/image-processing.ipynb"&gt;https://github.com/dask/dask-examples/blob/master/applications/image-processing.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 13:55:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="GenevieveBuckley"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>dask-image: distributed image processing for large data</title><link href="https://pyvideo.org/pycon-au-2020/dask-image-distributed-image-processing-for-large-data.html" rel="alternate"></link><published>2020-09-06T00:00:00+00:00</published><updated>2020-09-06T00:00:00+00:00</updated><author><name>Genevieve Buckley</name></author><id>tag:pyvideo.org,2020-09-06:/pycon-au-2020/dask-image-distributed-image-processing-for-large-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genevieve Buckley&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/KHULAN"&gt;https://2020.pycon.org.au/program/KHULAN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Image datasets are large, and becoming larger. The widely used benchmark dataset COCO (Common Objects in Context) contains 330,000 individual images. The average size of a single entry on the image database EMPIAR is over 1TB, and can easily …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genevieve Buckley&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/KHULAN"&gt;https://2020.pycon.org.au/program/KHULAN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Image datasets are large, and becoming larger. The widely used benchmark dataset COCO (Common Objects in Context) contains 330,000 individual images. The average size of a single entry on the image database EMPIAR is over 1TB, and can easily reach several terabytes.  Even where individual images are small enough to fit in-memory, many existing parallelization methods are difficult to scale seamlessly between a laptop and a supercomputing cluster. For instance, the python multiprocessing module is restricted to a single mode and can't take advantage of multiple compute nodes on a distributed supercomputing cluster.&lt;/p&gt;
&lt;p&gt;We need easy ways to work with large image data. This talk introduces dask-image, a python library for distributed image processing. The target audience are python programmers currently using numpy and scipy with large array data, where the whole dataset cannot fit in memory or is close to that limit. It's for people who want to get started with parallel processing, either because they have large single-image data, or because they want to do batch processing applying the same analysis to many smaller images (sometimes known an embarrassingly parallel problem). The specific image analysis functions provided by dask-image are of broad interest to a diverse range of analysis applications including (but not limited to) video/streaming data, computer vision, and scientific fields including astronomy, microscopy and geosciences.&lt;/p&gt;
&lt;p&gt;Specifically, this talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;An overview of the dask-image library&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Lazy image loading&lt;/li&gt;
&lt;li&gt;Image pre-processing functionality (convolutions, filters, etc.)&lt;/li&gt;
&lt;li&gt;Analysis of segmented images (distributed labeling, and measurements of those label regions)&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Mixing in your own custom analysis functions (using dask delayed, map_blocks, and map_overlap)&lt;/li&gt;
&lt;li&gt;A practical case study of a Python image processing pipeline&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dask-image is open source, released under a BSD 3-Clause license, and can be installed using conda or pip. You can find the source code at &lt;a class="reference external" href="https://github.com/dask/dask-image"&gt;https://github.com/dask/dask-image&lt;/a&gt; and the quickstart guide at &lt;a class="reference external" href="https://github.com/dask/dask-examples/blob/master/applications/image-processing.ipynb"&gt;https://github.com/dask/dask-examples/blob/master/applications/image-processing.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 13:55:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="GenevieveBuckley"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>DevOps for Data Science? - automate the boring stuff and leverage the OSS ecosystem</title><link href="https://pyvideo.org/pycon-au-2020/devops-for-data-science-automate-the-boring-stuff-and-leverage-the-oss-ecosystem.html" rel="alternate"></link><published>2020-09-06T00:00:00+00:00</published><updated>2020-09-06T00:00:00+00:00</updated><author><name>Dr.Tania Allard</name></author><id>tag:pyvideo.org,2020-09-06:/pycon-au-2020/devops-for-data-science-automate-the-boring-stuff-and-leverage-the-oss-ecosystem.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dr. Tania Allard&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/WMMVSQ"&gt;https://2020.pycon.org.au/program/WMMVSQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Does your work (either research, non-profit or industry-based) depend on Machine learning, Data Science or data-intensive analyses? Have you ever wished you could automate some of the boring stuff while adding extra robustness to your workflows so that you …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dr. Tania Allard&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/WMMVSQ"&gt;https://2020.pycon.org.au/program/WMMVSQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Does your work (either research, non-profit or industry-based) depend on Machine learning, Data Science or data-intensive analyses? Have you ever wished you could automate some of the boring stuff while adding extra robustness to your workflows so that you and your team can have greater confidence and work more efficiently?&lt;/p&gt;
&lt;p&gt;In this talk, I will present the concept of MLOps (kind of DevOps for ML scenarios, also referred to as DataOps or AIOps) and how adopting these practices can improve your team's workflows. You will learn how to automate some tasks within the ML lifecycle: from data transformation to model training, testing and validation, and deployment — making your workflows not only more seamless but your entire work more reproducible, reliable, and robust.
You do not need to be a DevOps engineer to benefit from these practices, but you can indeed leverage existing open-source tools and platforms to improve your Data Science workflows.
For completeness, I'll show a live end to end example, integrating MLOps practices for Machine Learning - from data processing to model training, validation and deployment. I will highlight the essential tips and tricks for each of the involved stages. You will leave the talk with practical recommendations and examples to get you started on adopting MLOps practices.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 16:35:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="Dr.TaniaAllard"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>DevOps for Data Science? - automate the boring stuff and leverage the OSS ecosystem</title><link href="https://pyvideo.org/pycon-au-2020/devops-for-data-science-automate-the-boring-stuff-and-leverage-the-oss-ecosystem.html" rel="alternate"></link><published>2020-09-06T00:00:00+00:00</published><updated>2020-09-06T00:00:00+00:00</updated><author><name>Dr.Tania Allard</name></author><id>tag:pyvideo.org,2020-09-06:/pycon-au-2020/devops-for-data-science-automate-the-boring-stuff-and-leverage-the-oss-ecosystem.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dr. Tania Allard&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/WMMVSQ"&gt;https://2020.pycon.org.au/program/WMMVSQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Does your work (either research, non-profit or industry-based) depend on Machine learning, Data Science or data-intensive analyses? Have you ever wished you could automate some of the boring stuff while adding extra robustness to your workflows so that you …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dr. Tania Allard&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/WMMVSQ"&gt;https://2020.pycon.org.au/program/WMMVSQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Does your work (either research, non-profit or industry-based) depend on Machine learning, Data Science or data-intensive analyses? Have you ever wished you could automate some of the boring stuff while adding extra robustness to your workflows so that you and your team can have greater confidence and work more efficiently?&lt;/p&gt;
&lt;p&gt;In this talk, I will present the concept of MLOps (kind of DevOps for ML scenarios, also referred to as DataOps or AIOps) and how adopting these practices can improve your team's workflows. You will learn how to automate some tasks within the ML lifecycle: from data transformation to model training, testing and validation, and deployment — making your workflows not only more seamless but your entire work more reproducible, reliable, and robust.
You do not need to be a DevOps engineer to benefit from these practices, but you can indeed leverage existing open-source tools and platforms to improve your Data Science workflows.
For completeness, I'll show a live end to end example, integrating MLOps practices for Machine Learning - from data processing to model training, validation and deployment. I will highlight the essential tips and tricks for each of the involved stages. You will leave the talk with practical recommendations and examples to get you started on adopting MLOps practices.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 16:35:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="Dr.TaniaAllard"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Extracting data from Excel with Python</title><link href="https://pyvideo.org/pycon-au-2020/extracting-data-from-excel-with-python.html" rel="alternate"></link><published>2020-09-06T00:00:00+00:00</published><updated>2020-09-06T00:00:00+00:00</updated><author><name>samuel oranyeli</name></author><id>tag:pyvideo.org,2020-09-06:/pycon-au-2020/extracting-data-from-excel-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;samuel oranyeli&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/FAEAH3"&gt;https://2020.pycon.org.au/program/FAEAH3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;How do you read data from Excel? How do you read data that has meaningful formats(rows or cells are colour coded)? Or pivot tables that need to be in tidy format? Or data with hierarchical formatting ? This talk will …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;samuel oranyeli&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/FAEAH3"&gt;https://2020.pycon.org.au/program/FAEAH3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;How do you read data from Excel? How do you read data that has meaningful formats(rows or cells are colour coded)? Or pivot tables that need to be in tidy format? Or data with hierarchical formatting ? This talk will show how to use Pandas, Openpyxl, and some other make-life-easy tools to extract data from Excel into Python in a tidy form and proceed to the next phase of our data analysis.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 13:20:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category><category term="samueloranyeli"></category></entry><entry><title>Extracting data from Excel with Python</title><link href="https://pyvideo.org/pycon-au-2020/extracting-data-from-excel-with-python.html" rel="alternate"></link><published>2020-09-06T00:00:00+00:00</published><updated>2020-09-06T00:00:00+00:00</updated><author><name>samuel oranyeli</name></author><id>tag:pyvideo.org,2020-09-06:/pycon-au-2020/extracting-data-from-excel-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;samuel oranyeli&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/FAEAH3"&gt;https://2020.pycon.org.au/program/FAEAH3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;How do you read data from Excel? How do you read data that has meaningful formats(rows or cells are colour coded)? Or pivot tables that need to be in tidy format? Or data with hierarchical formatting ? This talk will …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;samuel oranyeli&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/FAEAH3"&gt;https://2020.pycon.org.au/program/FAEAH3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;How do you read data from Excel? How do you read data that has meaningful formats(rows or cells are colour coded)? Or pivot tables that need to be in tidy format? Or data with hierarchical formatting ? This talk will show how to use Pandas, Openpyxl, and some other make-life-easy tools to extract data from Excel into Python in a tidy form and proceed to the next phase of our data analysis.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 13:20:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category><category term="samueloranyeli"></category></entry><entry><title>Technosolutionism and human rights</title><link href="https://pyvideo.org/pycon-au-2020/technosolutionism-and-human-rights.html" rel="alternate"></link><published>2020-09-06T00:00:00+00:00</published><updated>2020-09-06T00:00:00+00:00</updated><author><name>Lucie Krahulcova</name></author><id>tag:pyvideo.org,2020-09-06:/pycon-au-2020/technosolutionism-and-human-rights.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lucie Krahulcova&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/XWQNFM"&gt;https://2020.pycon.org.au/program/XWQNFM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Technosolutionism proves that we need a multidisciplinary approach to tech design. In this session we will use the latest examples of the COVID19 apps to illustrate how a solution can be technically perfect while being perfectly inappropriate as a solution …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lucie Krahulcova&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/XWQNFM"&gt;https://2020.pycon.org.au/program/XWQNFM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Technosolutionism proves that we need a multidisciplinary approach to tech design. In this session we will use the latest examples of the COVID19 apps to illustrate how a solution can be technically perfect while being perfectly inappropriate as a solution to a given problem. We will work backwards from the location/data sharing/API changes which were happily adopted for covid apps to illustrate how/when those sorts of opportunities can be seized by governments and malicious third parties. We will cover the ways in which every dataset aggregated and generated is likely to be appropriated and abused. Why does that happen? How can we prevent that at the design stages? I will lean on my extensive history in the field to pull together examples where policy and agencies have grabbed at opportunities like this to seize additional power, and use it to highlight the urgency of addressing this issue as we go through the everyday. We can change the chaotic technosolutionism that happens by being better informed and better prepared to do our jobs with a critical eye.&lt;/p&gt;
&lt;p&gt;The session should leave the audience with a broader understanding of the challenges posed by one-stop-shop-technosolutionism and the essential questions that we as participants in the tech space have a responsibility for baking into our thinking and decision making.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 09:15:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="LucieKrahulcova"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Technosolutionism and human rights</title><link href="https://pyvideo.org/pycon-au-2020/technosolutionism-and-human-rights.html" rel="alternate"></link><published>2020-09-06T00:00:00+00:00</published><updated>2020-09-06T00:00:00+00:00</updated><author><name>Lucie Krahulcova</name></author><id>tag:pyvideo.org,2020-09-06:/pycon-au-2020/technosolutionism-and-human-rights.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lucie Krahulcova&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/XWQNFM"&gt;https://2020.pycon.org.au/program/XWQNFM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Technosolutionism proves that we need a multidisciplinary approach to tech design. In this session we will use the latest examples of the COVID19 apps to illustrate how a solution can be technically perfect while being perfectly inappropriate as a solution …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lucie Krahulcova&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/XWQNFM"&gt;https://2020.pycon.org.au/program/XWQNFM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Technosolutionism proves that we need a multidisciplinary approach to tech design. In this session we will use the latest examples of the COVID19 apps to illustrate how a solution can be technically perfect while being perfectly inappropriate as a solution to a given problem. We will work backwards from the location/data sharing/API changes which were happily adopted for covid apps to illustrate how/when those sorts of opportunities can be seized by governments and malicious third parties. We will cover the ways in which every dataset aggregated and generated is likely to be appropriated and abused. Why does that happen? How can we prevent that at the design stages? I will lean on my extensive history in the field to pull together examples where policy and agencies have grabbed at opportunities like this to seize additional power, and use it to highlight the urgency of addressing this issue as we go through the everyday. We can change the chaotic technosolutionism that happens by being better informed and better prepared to do our jobs with a critical eye.&lt;/p&gt;
&lt;p&gt;The session should leave the audience with a broader understanding of the challenges posed by one-stop-shop-technosolutionism and the essential questions that we as participants in the tech space have a responsibility for baking into our thinking and decision making.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 09:15:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="LucieKrahulcova"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Why the float did it NaN?</title><link href="https://pyvideo.org/pycon-au-2020/why-the-float-did-it-nan.html" rel="alternate"></link><published>2020-09-06T00:00:00+00:00</published><updated>2020-09-06T00:00:00+00:00</updated><author><name>Jakub Nabaglo</name></author><id>tag:pyvideo.org,2020-09-06:/pycon-au-2020/why-the-float-did-it-nan.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jakub Nabaglo&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/RTT87N"&gt;https://2020.pycon.org.au/program/RTT87N&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Floating point numbers are designed to be magic. For most mundane tasks, your calculations ‘just work’, and you are not supposed to think too much about it.&lt;/p&gt;
&lt;p&gt;From time to time though, the magic stops working. The maths that’s …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jakub Nabaglo&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/RTT87N"&gt;https://2020.pycon.org.au/program/RTT87N&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Floating point numbers are designed to be magic. For most mundane tasks, your calculations ‘just work’, and you are not supposed to think too much about it.&lt;/p&gt;
&lt;p&gt;From time to time though, the magic stops working. The maths that’s correct on a sheet of paper no longer gives the right results when done on a computer. Results of NaN or Inf, division by zero errors, and inaccurate answers have caused great frustration to many.&lt;/p&gt;
&lt;p&gt;To see why this happens, we will look under the hood of floating point numbers. Their structure in memory, and how it affects the accuracy of different operations. This is particularly relevant to data science, which entails lots of number crunching.&lt;/p&gt;
&lt;p&gt;We will see why subtraction is sometimes dangerous, why you should avoid multiplying probabilities, and why you should never invert a matrix. We will explore the tools Python, NumPy, and SciPy give us to avoid these pitfalls, such as LU decomposition and the LogAddExp trick.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 12:45:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="JakubNabaglo"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Why the float did it NaN?</title><link href="https://pyvideo.org/pycon-au-2020/why-the-float-did-it-nan.html" rel="alternate"></link><published>2020-09-06T00:00:00+00:00</published><updated>2020-09-06T00:00:00+00:00</updated><author><name>Jakub Nabaglo</name></author><id>tag:pyvideo.org,2020-09-06:/pycon-au-2020/why-the-float-did-it-nan.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jakub Nabaglo&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/RTT87N"&gt;https://2020.pycon.org.au/program/RTT87N&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Floating point numbers are designed to be magic. For most mundane tasks, your calculations ‘just work’, and you are not supposed to think too much about it.&lt;/p&gt;
&lt;p&gt;From time to time though, the magic stops working. The maths that’s …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jakub Nabaglo&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/RTT87N"&gt;https://2020.pycon.org.au/program/RTT87N&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Floating point numbers are designed to be magic. For most mundane tasks, your calculations ‘just work’, and you are not supposed to think too much about it.&lt;/p&gt;
&lt;p&gt;From time to time though, the magic stops working. The maths that’s correct on a sheet of paper no longer gives the right results when done on a computer. Results of NaN or Inf, division by zero errors, and inaccurate answers have caused great frustration to many.&lt;/p&gt;
&lt;p&gt;To see why this happens, we will look under the hood of floating point numbers. Their structure in memory, and how it affects the accuracy of different operations. This is particularly relevant to data science, which entails lots of number crunching.&lt;/p&gt;
&lt;p&gt;We will see why subtraction is sometimes dangerous, why you should avoid multiplying probabilities, and why you should never invert a matrix. We will explore the tools Python, NumPy, and SciPy give us to avoid these pitfalls, such as LU decomposition and the LogAddExp trick.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 12:45:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="JakubNabaglo"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>3 ways to test S3 in Python</title><link href="https://pyvideo.org/pycon-au-2020/3-ways-to-test-s3-in-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Sanjay Siddhanti</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/3-ways-to-test-s3-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sanjay Siddhanti&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/VXXUWE"&gt;https://2020.pycon.org.au/program/VXXUWE&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Benefits of testing code that uses S3&lt;/li&gt;
&lt;li&gt;In-depth code examples of three ways to test S3:&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Mock out the S3 API responses using botocore stubs&lt;/li&gt;
&lt;li&gt;Mock the S3 API using moto&lt;/li&gt;
&lt;li&gt;Spin up a LocalStack S3 instance and test against …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sanjay Siddhanti&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/VXXUWE"&gt;https://2020.pycon.org.au/program/VXXUWE&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Benefits of testing code that uses S3&lt;/li&gt;
&lt;li&gt;In-depth code examples of three ways to test S3:&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Mock out the S3 API responses using botocore stubs&lt;/li&gt;
&lt;li&gt;Mock the S3 API using moto&lt;/li&gt;
&lt;li&gt;Spin up a LocalStack S3 instance and test against that&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 16:00:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="SanjaySiddhanti"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>3 ways to test S3 in Python</title><link href="https://pyvideo.org/pycon-au-2020/3-ways-to-test-s3-in-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Sanjay Siddhanti</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/3-ways-to-test-s3-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sanjay Siddhanti&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/VXXUWE"&gt;https://2020.pycon.org.au/program/VXXUWE&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Benefits of testing code that uses S3&lt;/li&gt;
&lt;li&gt;In-depth code examples of three ways to test S3:&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Mock out the S3 API responses using botocore stubs&lt;/li&gt;
&lt;li&gt;Mock the S3 API using moto&lt;/li&gt;
&lt;li&gt;Spin up a LocalStack S3 instance and test against …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sanjay Siddhanti&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/VXXUWE"&gt;https://2020.pycon.org.au/program/VXXUWE&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Benefits of testing code that uses S3&lt;/li&gt;
&lt;li&gt;In-depth code examples of three ways to test S3:&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Mock out the S3 API responses using botocore stubs&lt;/li&gt;
&lt;li&gt;Mock the S3 API using moto&lt;/li&gt;
&lt;li&gt;Spin up a LocalStack S3 instance and test against that&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 16:00:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="SanjaySiddhanti"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>A Reflection on Software Testing</title><link href="https://pyvideo.org/pycon-au-2020/a-reflection-on-software-testing.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Richard Jones</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/a-reflection-on-software-testing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Richard Jones&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/MXZVY8"&gt;https://2020.pycon.org.au/program/MXZVY8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an opinionated talk about issues I have observed during my career around software testing, including our conversations about it, but also the many materials produced describing how it should be done. One of my inspirations for this talk …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Richard Jones&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/MXZVY8"&gt;https://2020.pycon.org.au/program/MXZVY8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an opinionated talk about issues I have observed during my career around software testing, including our conversations about it, but also the many materials produced describing how it should be done. One of my inspirations for this talk is the realisation that in some ways we have lost our way with testing, losing sight of some of the very early wisdom.&lt;/p&gt;
&lt;p&gt;I will talk about some of those conversations we have, the language we use, but I will also present some advice, with concrete examples, of how we all might improve how we approach and implement testing.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 13:00:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="RichardJones"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>A Reflection on Software Testing</title><link href="https://pyvideo.org/pycon-au-2020/a-reflection-on-software-testing.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Richard Jones</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/a-reflection-on-software-testing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Richard Jones&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/MXZVY8"&gt;https://2020.pycon.org.au/program/MXZVY8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an opinionated talk about issues I have observed during my career around software testing, including our conversations about it, but also the many materials produced describing how it should be done. One of my inspirations for this talk …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Richard Jones&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/MXZVY8"&gt;https://2020.pycon.org.au/program/MXZVY8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an opinionated talk about issues I have observed during my career around software testing, including our conversations about it, but also the many materials produced describing how it should be done. One of my inspirations for this talk is the realisation that in some ways we have lost our way with testing, losing sight of some of the very early wisdom.&lt;/p&gt;
&lt;p&gt;I will talk about some of those conversations we have, the language we use, but I will also present some advice, with concrete examples, of how we all might improve how we approach and implement testing.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 13:00:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="RichardJones"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>A sack full of angry snakes: Taming your python dependencies with Nix</title><link href="https://pyvideo.org/pycon-au-2020/a-sack-full-of-angry-snakes-taming-your-python-dependencies-with-nix.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Thomas Woolford</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/a-sack-full-of-angry-snakes-taming-your-python-dependencies-with-nix.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thomas Woolford&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/USWEYZ"&gt;https://2020.pycon.org.au/program/USWEYZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Scientists, Researchers and Software Engineering projects should be paying attention to the reproducibility of their results. The best way to guarantee that the project you build today will be the same when built next week is to exactly specify your …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thomas Woolford&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/USWEYZ"&gt;https://2020.pycon.org.au/program/USWEYZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Scientists, Researchers and Software Engineering projects should be paying attention to the reproducibility of their results. The best way to guarantee that the project you build today will be the same when built next week is to exactly specify your dependency tree.&lt;/p&gt;
&lt;p&gt;Imperative package management approaches (such as apt/pip/conda) provide few assurances that the package version you get today is the same version you'll get tomorrow, or that installing packages in a different order won't change the versions resolved. The problem gets even harder when you want to integrate with native extensions that rely on platform libraries and the ephemeral contents of /usr/share/.&lt;/p&gt;
&lt;p&gt;In this talk I'll discuss how Nix package manager can provide a complete dependency management solution for python projects on Linux and Mac. Nix can install and track exact, reproducible versions of python packages and their transitive dependencies including platform libraries, down to the compiler version that created them. No more guessing why your teammate can trigger a bug that you can't reproduce.&lt;/p&gt;
&lt;p&gt;Nix can use this dependency info to quickly get new teammates up and running with a full development environment, no worries about the setup instructions being out of date or incompatible with their chosen OS flavor. Finally, Nix can build your project in a sealed build environment that prevents your project sneakily including files that haven't been declared as dependencies. You can then confidently deploy these builds as minimal docker images, VM images, or directly via nix package caches.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 13:20:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="ThomasWoolford"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>A sack full of angry snakes: Taming your python dependencies with Nix</title><link href="https://pyvideo.org/pycon-au-2020/a-sack-full-of-angry-snakes-taming-your-python-dependencies-with-nix.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Thomas Woolford</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/a-sack-full-of-angry-snakes-taming-your-python-dependencies-with-nix.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thomas Woolford&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/USWEYZ"&gt;https://2020.pycon.org.au/program/USWEYZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Scientists, Researchers and Software Engineering projects should be paying attention to the reproducibility of their results. The best way to guarantee that the project you build today will be the same when built next week is to exactly specify your …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thomas Woolford&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/USWEYZ"&gt;https://2020.pycon.org.au/program/USWEYZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Scientists, Researchers and Software Engineering projects should be paying attention to the reproducibility of their results. The best way to guarantee that the project you build today will be the same when built next week is to exactly specify your dependency tree.&lt;/p&gt;
&lt;p&gt;Imperative package management approaches (such as apt/pip/conda) provide few assurances that the package version you get today is the same version you'll get tomorrow, or that installing packages in a different order won't change the versions resolved. The problem gets even harder when you want to integrate with native extensions that rely on platform libraries and the ephemeral contents of /usr/share/.&lt;/p&gt;
&lt;p&gt;In this talk I'll discuss how Nix package manager can provide a complete dependency management solution for python projects on Linux and Mac. Nix can install and track exact, reproducible versions of python packages and their transitive dependencies including platform libraries, down to the compiler version that created them. No more guessing why your teammate can trigger a bug that you can't reproduce.&lt;/p&gt;
&lt;p&gt;Nix can use this dependency info to quickly get new teammates up and running with a full development environment, no worries about the setup instructions being out of date or incompatible with their chosen OS flavor. Finally, Nix can build your project in a sealed build environment that prevents your project sneakily including files that haven't been declared as dependencies. You can then confidently deploy these builds as minimal docker images, VM images, or directly via nix package caches.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 13:20:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="ThomasWoolford"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>A website controlled Lego Robot using the Raspberry Pi</title><link href="https://pyvideo.org/pycon-au-2020/a-website-controlled-lego-robot-using-the-raspberry-pi.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Brad Nielsen</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/a-website-controlled-lego-robot-using-the-raspberry-pi.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Brad Nielsen&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/TVFCVP"&gt;https://2020.pycon.org.au/program/TVFCVP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 11:00:00 2020 at Floperator&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="BradNielsen"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>A website controlled Lego Robot using the Raspberry Pi</title><link href="https://pyvideo.org/pycon-au-2020/a-website-controlled-lego-robot-using-the-raspberry-pi.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Brad Nielsen</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/a-website-controlled-lego-robot-using-the-raspberry-pi.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Brad Nielsen&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/TVFCVP"&gt;https://2020.pycon.org.au/program/TVFCVP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 11:00:00 2020 at Floperator&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="BradNielsen"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>All Hands on Deck – Handling Security Issues</title><link href="https://pyvideo.org/pycon-au-2020/all-hands-on-deck-handling-security-issues.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Markus Holtermann</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/all-hands-on-deck-handling-security-issues.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Markus Holtermann&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/U9GBBD"&gt;https://2020.pycon.org.au/program/U9GBBD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We live in a world of technology and engineering where almost everything around us requires software. Unfortunately, the software we use or build has bugs. While most bugs can &amp;quot;just&amp;quot; be fixed, there are these other types of bugs, called …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Markus Holtermann&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/U9GBBD"&gt;https://2020.pycon.org.au/program/U9GBBD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We live in a world of technology and engineering where almost everything around us requires software. Unfortunately, the software we use or build has bugs. While most bugs can &amp;quot;just&amp;quot; be fixed, there are these other types of bugs, called vulnerabilities. Vulnerabilities can be found in our own infrastructure, on customers' infrastructure, or — worse — around user data.&lt;/p&gt;
&lt;p&gt;Sadly, we see reports of leaked personal data on a daily basis. And when it comes to the companies who just had data leaked, it is astounding how rattled and unprepared they are for the situation. In fact, a lot of companies are puzzled when someone external approaches them about a possible security issue publicly. They don't know how to react and often react in the worst possible way: denial. But it is also about issues that are found from within the company. Issues that may not directly affect personal information. There is more to do than telling customers there is a security release of some software.&lt;/p&gt;
&lt;p&gt;IT security is a sheer endless topic to talk about. It is a mindset and a company culture that must be lived by each and everyone within a company. In this talk, I will point out what roles individual departments play. Because there are more questions to be answered than “how and when are customers informed about an issue and a corresponding solution”. Are details about the issue released, and if so, when, and will the details be released publicly or only to customers? How will a public outcry about an issue on social media be dealt with? Is the social media team equipped to handle the masses? Will the sales and marketing teams be able to handle a hesitant customers base? What legal implications does the issue have? Who coordinates, makes decisions, and stays on top all of these moving parts?&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 14:30:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="MarkusHoltermann"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>All Hands on Deck – Handling Security Issues</title><link href="https://pyvideo.org/pycon-au-2020/all-hands-on-deck-handling-security-issues.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Markus Holtermann</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/all-hands-on-deck-handling-security-issues.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Markus Holtermann&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/U9GBBD"&gt;https://2020.pycon.org.au/program/U9GBBD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We live in a world of technology and engineering where almost everything around us requires software. Unfortunately, the software we use or build has bugs. While most bugs can &amp;quot;just&amp;quot; be fixed, there are these other types of bugs, called …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Markus Holtermann&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/U9GBBD"&gt;https://2020.pycon.org.au/program/U9GBBD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We live in a world of technology and engineering where almost everything around us requires software. Unfortunately, the software we use or build has bugs. While most bugs can &amp;quot;just&amp;quot; be fixed, there are these other types of bugs, called vulnerabilities. Vulnerabilities can be found in our own infrastructure, on customers' infrastructure, or — worse — around user data.&lt;/p&gt;
&lt;p&gt;Sadly, we see reports of leaked personal data on a daily basis. And when it comes to the companies who just had data leaked, it is astounding how rattled and unprepared they are for the situation. In fact, a lot of companies are puzzled when someone external approaches them about a possible security issue publicly. They don't know how to react and often react in the worst possible way: denial. But it is also about issues that are found from within the company. Issues that may not directly affect personal information. There is more to do than telling customers there is a security release of some software.&lt;/p&gt;
&lt;p&gt;IT security is a sheer endless topic to talk about. It is a mindset and a company culture that must be lived by each and everyone within a company. In this talk, I will point out what roles individual departments play. Because there are more questions to be answered than “how and when are customers informed about an issue and a corresponding solution”. Are details about the issue released, and if so, when, and will the details be released publicly or only to customers? How will a public outcry about an issue on social media be dealt with? Is the social media team equipped to handle the masses? Will the sales and marketing teams be able to handle a hesitant customers base? What legal implications does the issue have? Who coordinates, makes decisions, and stays on top all of these moving parts?&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 14:30:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="MarkusHoltermann"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>At The Root : Wagtail + Gatsby + GitPod</title><link href="https://pyvideo.org/pycon-au-2020/at-the-root-wagtail-gatsby-gitpod.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Dawn Wages</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/at-the-root-wagtail-gatsby-gitpod.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dawn Wages&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/KBXD9E"&gt;https://2020.pycon.org.au/program/KBXD9E&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Exploring if a GatsbyJS progressive web app generator frontend with a headless Wagtail backend could be a solution for small-sized clients and personal projects when I want to &amp;quot;whip something up&amp;quot; quickly without sacrificing design, performance/hosting costs, user or …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dawn Wages&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/KBXD9E"&gt;https://2020.pycon.org.au/program/KBXD9E&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Exploring if a GatsbyJS progressive web app generator frontend with a headless Wagtail backend could be a solution for small-sized clients and personal projects when I want to &amp;quot;whip something up&amp;quot; quickly without sacrificing design, performance/hosting costs, user or site editor experience (Can I have it all)? Gatsby (&lt;a class="reference external" href="https://www.gatsbyjs.org/"&gt;https://www.gatsbyjs.org/&lt;/a&gt;) is a open source framework based on React. Wagtail (&lt;a class="reference external" href="https://wagtail.io/"&gt;https://wagtail.io/&lt;/a&gt;) is a Django CMS with LOTS of cool features for content creators, and &amp;quot;plays nicely with everything else in your tech stack&amp;quot; (source: Wagtail) because its built on and easily integrates with all uses of Python.&lt;/p&gt;
&lt;p&gt;Why? Not only do I enjoy the new and shiny things as a consultant, both Wagtail and GatsbyJS are established frameworks and active communities that put considerable effort in providing a great product with a smooth developer experience. We enjoy the benefits of Django / Wagtail CMS, with a incredibly fast pre-fetched progressive web app with GatsbyJS. The goal is nice, fast and fun.&lt;/p&gt;
&lt;p&gt;I am approaching this talk by walking through how I started out with minimal experience with GatsbyJS or GraphQL, and moderate experience with React and headless Wagtail to creating and deploying (Netlify) this app. I am not an expert in either technology, but was able to quickly navigate getting started as well as identify lots of resources in both communities to build out in a more complex experience.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 10:25:00 2020 at Floperator&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="DawnWages"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>At The Root : Wagtail + Gatsby + GitPod</title><link href="https://pyvideo.org/pycon-au-2020/at-the-root-wagtail-gatsby-gitpod.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Dawn Wages</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/at-the-root-wagtail-gatsby-gitpod.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dawn Wages&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/KBXD9E"&gt;https://2020.pycon.org.au/program/KBXD9E&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Exploring if a GatsbyJS progressive web app generator frontend with a headless Wagtail backend could be a solution for small-sized clients and personal projects when I want to &amp;quot;whip something up&amp;quot; quickly without sacrificing design, performance/hosting costs, user or …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dawn Wages&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/KBXD9E"&gt;https://2020.pycon.org.au/program/KBXD9E&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Exploring if a GatsbyJS progressive web app generator frontend with a headless Wagtail backend could be a solution for small-sized clients and personal projects when I want to &amp;quot;whip something up&amp;quot; quickly without sacrificing design, performance/hosting costs, user or site editor experience (Can I have it all)? Gatsby (&lt;a class="reference external" href="https://www.gatsbyjs.org/"&gt;https://www.gatsbyjs.org/&lt;/a&gt;) is a open source framework based on React. Wagtail (&lt;a class="reference external" href="https://wagtail.io/"&gt;https://wagtail.io/&lt;/a&gt;) is a Django CMS with LOTS of cool features for content creators, and &amp;quot;plays nicely with everything else in your tech stack&amp;quot; (source: Wagtail) because its built on and easily integrates with all uses of Python.&lt;/p&gt;
&lt;p&gt;Why? Not only do I enjoy the new and shiny things as a consultant, both Wagtail and GatsbyJS are established frameworks and active communities that put considerable effort in providing a great product with a smooth developer experience. We enjoy the benefits of Django / Wagtail CMS, with a incredibly fast pre-fetched progressive web app with GatsbyJS. The goal is nice, fast and fun.&lt;/p&gt;
&lt;p&gt;I am approaching this talk by walking through how I started out with minimal experience with GatsbyJS or GraphQL, and moderate experience with React and headless Wagtail to creating and deploying (Netlify) this app. I am not an expert in either technology, but was able to quickly navigate getting started as well as identify lots of resources in both communities to build out in a more complex experience.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 10:25:00 2020 at Floperator&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="DawnWages"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Biometric Unsecurity</title><link href="https://pyvideo.org/pycon-au-2020/biometric-unsecurity.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Carina C. Zona</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/biometric-unsecurity.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Carina C. Zona&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/9L3NTY"&gt;https://2020.pycon.org.au/program/9L3NTY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Examples are drawn from a globally geographically diverse range of areas.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 10:25:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="CarinaC.Zona"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Biometric Unsecurity</title><link href="https://pyvideo.org/pycon-au-2020/biometric-unsecurity.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Carina C. Zona</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/biometric-unsecurity.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Carina C. Zona&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/9L3NTY"&gt;https://2020.pycon.org.au/program/9L3NTY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Examples are drawn from a globally geographically diverse range of areas.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 10:25:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="CarinaC.Zona"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Build your own data warehouse for personal analytics with SQLite and Datasette</title><link href="https://pyvideo.org/pycon-au-2020/build-your-own-data-warehouse-for-personal-analytics-with-sqlite-and-datasette.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/build-your-own-data-warehouse-for-personal-analytics-with-sqlite-and-datasette.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Simon Willison&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/73UK8X"&gt;https://2020.pycon.org.au/program/73UK8X&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Many data enthusiasts dream of analyzing their own personal data, but few find time to build their own pipeline for it. This talk will show you how to get started with personal analytics with the highest possible return on your …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Simon Willison&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/73UK8X"&gt;https://2020.pycon.org.au/program/73UK8X&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Many data enthusiasts dream of analyzing their own personal data, but few find time to build their own pipeline for it. This talk will show you how to get started with personal analytics with the highest possible return on your invested effort.&lt;/p&gt;
&lt;p&gt;SQLite is the ideal tool for building a personal data analysis pipeline: it's free, fast and widely supported. Each database is a single file on disk, so you don't need to set up a database server to start using it. Tools that import data into SQLite can be written in any programming language, and its JSON support means it can even ingest data that may not fit neatly in a standard relational database table.&lt;/p&gt;
&lt;p&gt;Datasette is a Python application that provides an interface over SQLite. It lets you bookmark and queries in your browser and export the results as JSON and CSV. The Datasette plugin ecosystem has over 30 plugins that extend Datasette in different ways, adding visualization tools, alternative export formats and more.&lt;/p&gt;
&lt;p&gt;I'll show how to combine SQLite, Datasette and some simple Python scripts to ingest personal data from multiple different sources and build a personal data warehouse for your digital life. Data sources will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Twitter&lt;/li&gt;
&lt;li&gt;Facebook&lt;/li&gt;
&lt;li&gt;Apple Photos&lt;/li&gt;
&lt;li&gt;LinkedIn&lt;/li&gt;
&lt;li&gt;Google (via Google Takeout)&lt;/li&gt;
&lt;li&gt;Foursquare / Swarm&lt;/li&gt;
&lt;li&gt;GitHub&lt;/li&gt;
&lt;li&gt;Apple Health&lt;/li&gt;
&lt;li&gt;23AndMe&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Techniques that work for an individual can work for organizations too. I'll finish by showing how this approach to working with data can scale up to solving professional problems in addition to personal analytics.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 16:00:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="SimonWillison"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Build your own data warehouse for personal analytics with SQLite and Datasette</title><link href="https://pyvideo.org/pycon-au-2020/build-your-own-data-warehouse-for-personal-analytics-with-sqlite-and-datasette.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/build-your-own-data-warehouse-for-personal-analytics-with-sqlite-and-datasette.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Simon Willison&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/73UK8X"&gt;https://2020.pycon.org.au/program/73UK8X&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Many data enthusiasts dream of analyzing their own personal data, but few find time to build their own pipeline for it. This talk will show you how to get started with personal analytics with the highest possible return on your …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Simon Willison&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/73UK8X"&gt;https://2020.pycon.org.au/program/73UK8X&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Many data enthusiasts dream of analyzing their own personal data, but few find time to build their own pipeline for it. This talk will show you how to get started with personal analytics with the highest possible return on your invested effort.&lt;/p&gt;
&lt;p&gt;SQLite is the ideal tool for building a personal data analysis pipeline: it's free, fast and widely supported. Each database is a single file on disk, so you don't need to set up a database server to start using it. Tools that import data into SQLite can be written in any programming language, and its JSON support means it can even ingest data that may not fit neatly in a standard relational database table.&lt;/p&gt;
&lt;p&gt;Datasette is a Python application that provides an interface over SQLite. It lets you bookmark and queries in your browser and export the results as JSON and CSV. The Datasette plugin ecosystem has over 30 plugins that extend Datasette in different ways, adding visualization tools, alternative export formats and more.&lt;/p&gt;
&lt;p&gt;I'll show how to combine SQLite, Datasette and some simple Python scripts to ingest personal data from multiple different sources and build a personal data warehouse for your digital life. Data sources will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Twitter&lt;/li&gt;
&lt;li&gt;Facebook&lt;/li&gt;
&lt;li&gt;Apple Photos&lt;/li&gt;
&lt;li&gt;LinkedIn&lt;/li&gt;
&lt;li&gt;Google (via Google Takeout)&lt;/li&gt;
&lt;li&gt;Foursquare / Swarm&lt;/li&gt;
&lt;li&gt;GitHub&lt;/li&gt;
&lt;li&gt;Apple Health&lt;/li&gt;
&lt;li&gt;23AndMe&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Techniques that work for an individual can work for organizations too. I'll finish by showing how this approach to working with data can scale up to solving professional problems in addition to personal analytics.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 16:00:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="SimonWillison"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Can you keep a secret?</title><link href="https://pyvideo.org/pycon-au-2020/can-you-keep-a-secret.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Aaron Bassett</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/can-you-keep-a-secret.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Aaron Bassett&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/UKBKTR"&gt;https://2020.pycon.org.au/program/UKBKTR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We've all been guilty of hard-coding secrets at some point. It's just a quick hack, and you'll definitely go back and tidy it up later. But then you forget, and it's all too easy to &lt;cite&gt;git push&lt;/cite&gt; your API keys …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Aaron Bassett&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/UKBKTR"&gt;https://2020.pycon.org.au/program/UKBKTR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We've all been guilty of hard-coding secrets at some point. It's just a quick hack, and you'll definitely go back and tidy it up later. But then you forget, and it's all too easy to &lt;cite&gt;git push&lt;/cite&gt; your API keys to GitHub.&lt;/p&gt;
&lt;p&gt;This easy to make mistake could end up [costing you thousands of dollars](&lt;a class="reference external" href="https://dev.to/juanmanuelramallo/i-was-billed-for-14k-usd-on-amazon-web-services-17fn"&gt;https://dev.to/juanmanuelramallo/i-was-billed-for-14k-usd-on-amazon-web-services-17fn&lt;/a&gt;), and with the [median time to discovery for a secret key leaked to GitHub being 20 seconds](&lt;a class="reference external" href="https://www.ndss-symposium.org/wp-content/uploads/2019/02/ndss2019_04B-3_Meli_paper.pdf"&gt;https://www.ndss-symposium.org/wp-content/uploads/2019/02/ndss2019_04B-3_Meli_paper.pdf&lt;/a&gt;) you could end up compromised before you have a chance to correct your error.&lt;/p&gt;
&lt;p&gt;In this talk, we'll look at techniques that you can use personally and within your development teams to properly store, share, and manage your secrets, as easily as possible, and most importantly without disrupting your workflow.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 12:45:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="AaronBassett"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Can you keep a secret?</title><link href="https://pyvideo.org/pycon-au-2020/can-you-keep-a-secret.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Aaron Bassett</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/can-you-keep-a-secret.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Aaron Bassett&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/UKBKTR"&gt;https://2020.pycon.org.au/program/UKBKTR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We've all been guilty of hard-coding secrets at some point. It's just a quick hack, and you'll definitely go back and tidy it up later. But then you forget, and it's all too easy to &lt;cite&gt;git push&lt;/cite&gt; your API keys …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Aaron Bassett&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/UKBKTR"&gt;https://2020.pycon.org.au/program/UKBKTR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We've all been guilty of hard-coding secrets at some point. It's just a quick hack, and you'll definitely go back and tidy it up later. But then you forget, and it's all too easy to &lt;cite&gt;git push&lt;/cite&gt; your API keys to GitHub.&lt;/p&gt;
&lt;p&gt;This easy to make mistake could end up [costing you thousands of dollars](&lt;a class="reference external" href="https://dev.to/juanmanuelramallo/i-was-billed-for-14k-usd-on-amazon-web-services-17fn"&gt;https://dev.to/juanmanuelramallo/i-was-billed-for-14k-usd-on-amazon-web-services-17fn&lt;/a&gt;), and with the [median time to discovery for a secret key leaked to GitHub being 20 seconds](&lt;a class="reference external" href="https://www.ndss-symposium.org/wp-content/uploads/2019/02/ndss2019_04B-3_Meli_paper.pdf"&gt;https://www.ndss-symposium.org/wp-content/uploads/2019/02/ndss2019_04B-3_Meli_paper.pdf&lt;/a&gt;) you could end up compromised before you have a chance to correct your error.&lt;/p&gt;
&lt;p&gt;In this talk, we'll look at techniques that you can use personally and within your development teams to properly store, share, and manage your secrets, as easily as possible, and most importantly without disrupting your workflow.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 12:45:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="AaronBassett"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Cracking open the COVIDSafe</title><link href="https://pyvideo.org/pycon-au-2020/cracking-open-the-covidsafe.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Yaakov Smith</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/cracking-open-the-covidsafe.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Yaakov Smith&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/URD9ER"&gt;https://2020.pycon.org.au/program/URD9ER&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As health authorities raced against the clock to restrict the spread of the Novel Coronavirus, bringing cities to a standstill, software developers too were racing to build a technological innovation. Their solution was ⁎✧˚₊ an app ༚⁎✧⁺  that would mystically allow you …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Yaakov Smith&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/URD9ER"&gt;https://2020.pycon.org.au/program/URD9ER&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As health authorities raced against the clock to restrict the spread of the Novel Coronavirus, bringing cities to a standstill, software developers too were racing to build a technological innovation. Their solution was ⁎✧˚₊ an app ༚⁎✧⁺  that would mystically allow you once again to go to the footy, hang out in pubs, return to work, and re-open the economy.&lt;/p&gt;
&lt;p&gt;With the Australian Government running an unprecedented campaign to get as many people as possible to download their particular app, what this app actually does is still widely misunderstood. Furthermore, the app is somehow supposed to be safe and protect your privacy, whilst still being useful enough to track you and provide that information to medical contact tracers. How can that even work?&lt;/p&gt;
&lt;p&gt;In this talk we will:
‹ul›
‹li›discover what contact-tracing is and why it is vital to curb the spread of the coronavirus‹/li›
‹li›explore how technology can be used to assist in the contact-tracing process‹/li›
‹li›analyze the COVIDSafe mobile apps for iOS and Android,‹/li›
‹li›discuss why you should, or shouldn’t, install COVIDSafe, and how contact-tracing apps try to balance personal security and privacy with the health needs of the greater community‹/li›
‹/ul›&lt;/p&gt;
&lt;p&gt;Those who attend this talk will learn about bluetooth-assisted contact tracing, exposure notification, and the shiny new new COVID-19 settings on their mobile phone&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 09:50:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="YaakovSmith"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Cracking open the COVIDSafe</title><link href="https://pyvideo.org/pycon-au-2020/cracking-open-the-covidsafe.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Yaakov Smith</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/cracking-open-the-covidsafe.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Yaakov Smith&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/URD9ER"&gt;https://2020.pycon.org.au/program/URD9ER&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As health authorities raced against the clock to restrict the spread of the Novel Coronavirus, bringing cities to a standstill, software developers too were racing to build a technological innovation. Their solution was ⁎✧˚₊ an app ༚⁎✧⁺  that would mystically allow you …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Yaakov Smith&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/URD9ER"&gt;https://2020.pycon.org.au/program/URD9ER&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As health authorities raced against the clock to restrict the spread of the Novel Coronavirus, bringing cities to a standstill, software developers too were racing to build a technological innovation. Their solution was ⁎✧˚₊ an app ༚⁎✧⁺  that would mystically allow you once again to go to the footy, hang out in pubs, return to work, and re-open the economy.&lt;/p&gt;
&lt;p&gt;With the Australian Government running an unprecedented campaign to get as many people as possible to download their particular app, what this app actually does is still widely misunderstood. Furthermore, the app is somehow supposed to be safe and protect your privacy, whilst still being useful enough to track you and provide that information to medical contact tracers. How can that even work?&lt;/p&gt;
&lt;p&gt;In this talk we will:
‹ul›
‹li›discover what contact-tracing is and why it is vital to curb the spread of the coronavirus‹/li›
‹li›explore how technology can be used to assist in the contact-tracing process‹/li›
‹li›analyze the COVIDSafe mobile apps for iOS and Android,‹/li›
‹li›discuss why you should, or shouldn’t, install COVIDSafe, and how contact-tracing apps try to balance personal security and privacy with the health needs of the greater community‹/li›
‹/ul›&lt;/p&gt;
&lt;p&gt;Those who attend this talk will learn about bluetooth-assisted contact tracing, exposure notification, and the shiny new new COVID-19 settings on their mobile phone&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 09:50:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="YaakovSmith"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Deceptive Security using Python</title><link href="https://pyvideo.org/pycon-au-2020/deceptive-security-using-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Gajendra Deshpande</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/deceptive-security-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gajendra Deshpande&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/GGGTVY"&gt;https://2020.pycon.org.au/program/GGGTVY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Imagine you are passing through an unknown street at midnight and you find that some anti-social elements are following you. To save yourself from them you start running and look for a safe place to hide yourself. On the way …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gajendra Deshpande&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/GGGTVY"&gt;https://2020.pycon.org.au/program/GGGTVY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Imagine you are passing through an unknown street at midnight and you find that some anti-social elements are following you. To save yourself from them you start running and look for a safe place to hide yourself. On the way, you will find a good person and request the person to help you. The person hides you in the secure place to protect you. When these anti-social elements visit a good person’s place and enquire about you, the good person misguides them and redirects them to some other place in order to protect you. This is exactly how deception works. In this analogy, YOU are the resources to be protected, anti-social elements are the hackers who want to gain access to the resources, and a good person is a deception technique that protects the resources from hackers by making them fall in the trap.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How we implemented deception tool in python using machine learning&lt;/strong&gt;
We designed a deception tool in python language using PyBRAIN package to model and mitigate XPath injection attacks for web services. It is known that XML can be used to store the data and this data can be queried using XPath query language. XPath as a query language, it has injection issues similar to SQL. To handle this issue, we proposed a solution, which uses count-based validation technique and Long Short-Term Memory (LSTM) modular neural networks to identify and classify atypical behavior in user input. Once the atypical user input is identified, the attacker is redirected to fake resources to protect the critical data. Our experiment resulted in over 90% accuracy in classification of input vectors.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 13:20:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="GajendraDeshpande"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Deceptive Security using Python</title><link href="https://pyvideo.org/pycon-au-2020/deceptive-security-using-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Gajendra Deshpande</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/deceptive-security-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gajendra Deshpande&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/GGGTVY"&gt;https://2020.pycon.org.au/program/GGGTVY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Imagine you are passing through an unknown street at midnight and you find that some anti-social elements are following you. To save yourself from them you start running and look for a safe place to hide yourself. On the way …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gajendra Deshpande&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/GGGTVY"&gt;https://2020.pycon.org.au/program/GGGTVY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Imagine you are passing through an unknown street at midnight and you find that some anti-social elements are following you. To save yourself from them you start running and look for a safe place to hide yourself. On the way, you will find a good person and request the person to help you. The person hides you in the secure place to protect you. When these anti-social elements visit a good person’s place and enquire about you, the good person misguides them and redirects them to some other place in order to protect you. This is exactly how deception works. In this analogy, YOU are the resources to be protected, anti-social elements are the hackers who want to gain access to the resources, and a good person is a deception technique that protects the resources from hackers by making them fall in the trap.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How we implemented deception tool in python using machine learning&lt;/strong&gt;
We designed a deception tool in python language using PyBRAIN package to model and mitigate XPath injection attacks for web services. It is known that XML can be used to store the data and this data can be queried using XPath query language. XPath as a query language, it has injection issues similar to SQL. To handle this issue, we proposed a solution, which uses count-based validation technique and Long Short-Term Memory (LSTM) modular neural networks to identify and classify atypical behavior in user input. Once the atypical user input is identified, the attacker is redirected to fake resources to protect the critical data. Our experiment resulted in over 90% accuracy in classification of input vectors.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 13:20:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="GajendraDeshpande"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Decoding: programming beyond text files</title><link href="https://pyvideo.org/pycon-au-2020/decoding-programming-beyond-text-files.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Nick Moore</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/decoding-programming-beyond-text-files.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nick Moore&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/LYRJGY"&gt;https://2020.pycon.org.au/program/LYRJGY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We'll explore the history of typewriters and find homoiconicity where you might not
be expecting it.&lt;/p&gt;
&lt;p&gt;We'll talk about structured data and explore the early visions of hypertext.&lt;/p&gt;
&lt;p&gt;We'll look at some specific examples of unusual programming environments
and consider …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nick Moore&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/LYRJGY"&gt;https://2020.pycon.org.au/program/LYRJGY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We'll explore the history of typewriters and find homoiconicity where you might not
be expecting it.&lt;/p&gt;
&lt;p&gt;We'll talk about structured data and explore the early visions of hypertext.&lt;/p&gt;
&lt;p&gt;We'll look at some specific examples of unusual programming environments
and consider how a fresh look at these ideas can be applied to modern development.&lt;/p&gt;
&lt;p&gt;And finally we'll consider what a difference this could make to the work of programming.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 16:00:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="NickMoore"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Decoding: programming beyond text files</title><link href="https://pyvideo.org/pycon-au-2020/decoding-programming-beyond-text-files.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Nick Moore</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/decoding-programming-beyond-text-files.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nick Moore&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/LYRJGY"&gt;https://2020.pycon.org.au/program/LYRJGY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We'll explore the history of typewriters and find homoiconicity where you might not
be expecting it.&lt;/p&gt;
&lt;p&gt;We'll talk about structured data and explore the early visions of hypertext.&lt;/p&gt;
&lt;p&gt;We'll look at some specific examples of unusual programming environments
and consider …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nick Moore&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/LYRJGY"&gt;https://2020.pycon.org.au/program/LYRJGY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We'll explore the history of typewriters and find homoiconicity where you might not
be expecting it.&lt;/p&gt;
&lt;p&gt;We'll talk about structured data and explore the early visions of hypertext.&lt;/p&gt;
&lt;p&gt;We'll look at some specific examples of unusual programming environments
and consider how a fresh look at these ideas can be applied to modern development.&lt;/p&gt;
&lt;p&gt;And finally we'll consider what a difference this could make to the work of programming.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 16:00:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="NickMoore"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Engineers to Data-Scientists with Python</title><link href="https://pyvideo.org/pycon-au-2020/engineers-to-data-scientists-with-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>James Schulte</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/engineers-to-data-scientists-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;James Schulte&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/BAC9R3"&gt;https://2020.pycon.org.au/program/BAC9R3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This talk centers around an early stage start-up reaching the scale-up phase of growth and having to move from an ad-hoc collection of MATLAB scripts to a functioning Python analysis pipeline. All while transforming a team of mechanical engineers into …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;James Schulte&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/BAC9R3"&gt;https://2020.pycon.org.au/program/BAC9R3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This talk centers around an early stage start-up reaching the scale-up phase of growth and having to move from an ad-hoc collection of MATLAB scripts to a functioning Python analysis pipeline. All while transforming a team of mechanical engineers into a functioning software engineering and data-science team.&lt;/p&gt;
&lt;p&gt;I will paint a picture of the work we do, and how the product was first created - including the wild selection of technologies, before talking about some of the challenges faced in migrating a large monolithic product to a modular codebase. I’ll discuss some the advantages and pitfalls of using Python, and how we trained non-software engineers to produce quality code.&lt;/p&gt;
&lt;p&gt;The talk has something for everyone, whether you’re a tech-lead responsible for training &amp;amp; developing your team, a business leader in a scaling startup, or a junior engineer thinking about how to improve.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 11:00:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="JamesSchulte"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Engineers to Data-Scientists with Python</title><link href="https://pyvideo.org/pycon-au-2020/engineers-to-data-scientists-with-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>James Schulte</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/engineers-to-data-scientists-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;James Schulte&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/BAC9R3"&gt;https://2020.pycon.org.au/program/BAC9R3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This talk centers around an early stage start-up reaching the scale-up phase of growth and having to move from an ad-hoc collection of MATLAB scripts to a functioning Python analysis pipeline. All while transforming a team of mechanical engineers into …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;James Schulte&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/BAC9R3"&gt;https://2020.pycon.org.au/program/BAC9R3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This talk centers around an early stage start-up reaching the scale-up phase of growth and having to move from an ad-hoc collection of MATLAB scripts to a functioning Python analysis pipeline. All while transforming a team of mechanical engineers into a functioning software engineering and data-science team.&lt;/p&gt;
&lt;p&gt;I will paint a picture of the work we do, and how the product was first created - including the wild selection of technologies, before talking about some of the challenges faced in migrating a large monolithic product to a modular codebase. I’ll discuss some the advantages and pitfalls of using Python, and how we trained non-software engineers to produce quality code.&lt;/p&gt;
&lt;p&gt;The talk has something for everyone, whether you’re a tech-lead responsible for training &amp;amp; developing your team, a business leader in a scaling startup, or a junior engineer thinking about how to improve.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 11:00:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="JamesSchulte"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Ensemble-X: Your personal strataGEM to build Ensembled Deep Learning Models for Medical Imaging</title><link href="https://pyvideo.org/pycon-au-2020/ensemble-x-your-personal-stratagem-to-build-ensembled-deep-learning-models-for-medical-imaging.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Alankrita Tewari</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/ensemble-x-your-personal-stratagem-to-build-ensembled-deep-learning-models-for-medical-imaging.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dipam Paul, Alankrita Tewari&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/DUGUZZ"&gt;https://2020.pycon.org.au/program/DUGUZZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Almost every individual today in the field of Data Science would know about the concept of Ensemble Learning in ML (ideally, the last chapter we read in the Machine Learning pedagogy). However, it is to also note that …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dipam Paul, Alankrita Tewari&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/DUGUZZ"&gt;https://2020.pycon.org.au/program/DUGUZZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Almost every individual today in the field of Data Science would know about the concept of Ensemble Learning in ML (ideally, the last chapter we read in the Machine Learning pedagogy). However, it is to also note that very few literatures exists to ensemble Deep Neural Architectures. Therefore, this is where we step forward and propose an approach to solve (almost) any medical imaging problem with the means of our Ensemble approach. Our approach does not just &amp;quot;solve&amp;quot; medical imaging problems but help practitioners to build unique and seamless architectures that almost never goes wrong (at least, not on your good days).&lt;/p&gt;
&lt;p&gt;Why use an Ensemble at all?&lt;/p&gt;
&lt;p&gt;In this section, I will try to anticipate the common notions one would have while reading this proposal and try to address the same in advance.&lt;/p&gt;
&lt;p&gt;Of course, there are brilliant pre-trained architectures available and building up a custom CNN architecture takes seconds today, right? Then, why take the extra headache of combining architectures after all?&lt;/p&gt;
&lt;p&gt;I wanted to give you a solid reason why then I thought I'll give you three:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Attaining state-of-the-art accuracy:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To elucidate on this, let's recall a very famous (or, infamous) chapter from our old books on Elementary Statistics that is - Central Limit Theorem. This theorem gives us two very important implications:&lt;/p&gt;
&lt;p&gt;There are two big implications of the Central Limit theorem:&lt;/p&gt;
&lt;p&gt;Ensembles of many random processes/variables converge to Gaussian distributions. That’s why normal distributions are everywhere.
When adding together random numbers, the variance of the sum is the sum of the variances of those numbers.
Which, in the essence of Machine/Deep Learning, translates to the fact that when we combine n (number of) architectures together then the combined architecture let's say, x will at all times produce better performance or results on standard metrics that every individual model in the n-cluster of models.&lt;/p&gt;
&lt;p&gt;A slight limitation:&lt;/p&gt;
&lt;p&gt;Central Limit Theorem also states that no matter how many models one tries to Ensemble one can never reach the accuracy of 1 (or, 100).&lt;/p&gt;
&lt;p&gt;But that's alright, I believe. We don't need to attain a full 100% accuracy to prove the reliability of a model, do we?&lt;/p&gt;
&lt;p&gt;Furthermore, we have proven this hypothesis of ours of attaining state-of-the-art accuracy in our published works with regards to the same. Kindly, refer.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Model Diversity:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is arguably the most important contribution of ours out of all three which gives an indication of the reliability of our approach. Our experiments (which are also included in our papers) also goes on to show how well the architecture performs on external unseen examples - images which are not even part of the dataset.&lt;/p&gt;
&lt;p&gt;Why is this important?&lt;/p&gt;
&lt;p&gt;Elementary. We are dealing with Medical data where there is a plethora of possibilities, complications and unique cases. Hence, we can NEVER be too sure. Therefore, this was one of the most instrumental steps we had to set in motion in order to know if it's actually working or not.&lt;/p&gt;
&lt;p&gt;Future tangible implementation scope: Mobile App or Web App to be used in Clinics and Hospitals.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Tackling the problem of Model Over-fitting:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this contribution, we try to mitigate the problem of over-fitting to the greatest extent possible WITHOUT employing techniques such as Cross-Validation. The reason behind taking the entire dataset at once is very simple: Let's say you are dealing with a Binary-Class data with a huge class imbalance problem. Cross-Validation will not let you manually select the number of images that goes into each split that you make from each individual classes. It is also important to mention that the randomisation process ain't so bad altogether however, there's always room for improvements and alternate doors can also lead to better destinations.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 13:00:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="AlankritaTewari"></category><category term="DipamPaul"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Ensemble-X: Your personal strataGEM to build Ensembled Deep Learning Models for Medical Imaging</title><link href="https://pyvideo.org/pycon-au-2020/ensemble-x-your-personal-stratagem-to-build-ensembled-deep-learning-models-for-medical-imaging.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Alankrita Tewari</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/ensemble-x-your-personal-stratagem-to-build-ensembled-deep-learning-models-for-medical-imaging.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dipam Paul, Alankrita Tewari&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/DUGUZZ"&gt;https://2020.pycon.org.au/program/DUGUZZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Almost every individual today in the field of Data Science would know about the concept of Ensemble Learning in ML (ideally, the last chapter we read in the Machine Learning pedagogy). However, it is to also note that …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dipam Paul, Alankrita Tewari&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/DUGUZZ"&gt;https://2020.pycon.org.au/program/DUGUZZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Almost every individual today in the field of Data Science would know about the concept of Ensemble Learning in ML (ideally, the last chapter we read in the Machine Learning pedagogy). However, it is to also note that very few literatures exists to ensemble Deep Neural Architectures. Therefore, this is where we step forward and propose an approach to solve (almost) any medical imaging problem with the means of our Ensemble approach. Our approach does not just &amp;quot;solve&amp;quot; medical imaging problems but help practitioners to build unique and seamless architectures that almost never goes wrong (at least, not on your good days).&lt;/p&gt;
&lt;p&gt;Why use an Ensemble at all?&lt;/p&gt;
&lt;p&gt;In this section, I will try to anticipate the common notions one would have while reading this proposal and try to address the same in advance.&lt;/p&gt;
&lt;p&gt;Of course, there are brilliant pre-trained architectures available and building up a custom CNN architecture takes seconds today, right? Then, why take the extra headache of combining architectures after all?&lt;/p&gt;
&lt;p&gt;I wanted to give you a solid reason why then I thought I'll give you three:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Attaining state-of-the-art accuracy:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To elucidate on this, let's recall a very famous (or, infamous) chapter from our old books on Elementary Statistics that is - Central Limit Theorem. This theorem gives us two very important implications:&lt;/p&gt;
&lt;p&gt;There are two big implications of the Central Limit theorem:&lt;/p&gt;
&lt;p&gt;Ensembles of many random processes/variables converge to Gaussian distributions. That’s why normal distributions are everywhere.
When adding together random numbers, the variance of the sum is the sum of the variances of those numbers.
Which, in the essence of Machine/Deep Learning, translates to the fact that when we combine n (number of) architectures together then the combined architecture let's say, x will at all times produce better performance or results on standard metrics that every individual model in the n-cluster of models.&lt;/p&gt;
&lt;p&gt;A slight limitation:&lt;/p&gt;
&lt;p&gt;Central Limit Theorem also states that no matter how many models one tries to Ensemble one can never reach the accuracy of 1 (or, 100).&lt;/p&gt;
&lt;p&gt;But that's alright, I believe. We don't need to attain a full 100% accuracy to prove the reliability of a model, do we?&lt;/p&gt;
&lt;p&gt;Furthermore, we have proven this hypothesis of ours of attaining state-of-the-art accuracy in our published works with regards to the same. Kindly, refer.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Model Diversity:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is arguably the most important contribution of ours out of all three which gives an indication of the reliability of our approach. Our experiments (which are also included in our papers) also goes on to show how well the architecture performs on external unseen examples - images which are not even part of the dataset.&lt;/p&gt;
&lt;p&gt;Why is this important?&lt;/p&gt;
&lt;p&gt;Elementary. We are dealing with Medical data where there is a plethora of possibilities, complications and unique cases. Hence, we can NEVER be too sure. Therefore, this was one of the most instrumental steps we had to set in motion in order to know if it's actually working or not.&lt;/p&gt;
&lt;p&gt;Future tangible implementation scope: Mobile App or Web App to be used in Clinics and Hospitals.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Tackling the problem of Model Over-fitting:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this contribution, we try to mitigate the problem of over-fitting to the greatest extent possible WITHOUT employing techniques such as Cross-Validation. The reason behind taking the entire dataset at once is very simple: Let's say you are dealing with a Binary-Class data with a huge class imbalance problem. Cross-Validation will not let you manually select the number of images that goes into each split that you make from each individual classes. It is also important to mention that the randomisation process ain't so bad altogether however, there's always room for improvements and alternate doors can also lead to better destinations.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 13:00:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="AlankritaTewari"></category><category term="DipamPaul"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Ensuring Black voices matter: Why your voice assistant is racist, and what we can do about it</title><link href="https://pyvideo.org/pycon-au-2020/ensuring-black-voices-matter-why-your-voice-assistant-is-racist-and-what-we-can-do-about-it.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Kathy Reid</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/ensuring-black-voices-matter-why-your-voice-assistant-is-racist-and-what-we-can-do-about-it.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kathy Reid&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/99XMUR"&gt;https://2020.pycon.org.au/program/99XMUR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;By 2025, there will be over 8 million voice assistants in the world. They are found on your mobile phone, in your home, in your car, and over time, will be embedded in many cyber-physical systems across the world. At …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kathy Reid&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/99XMUR"&gt;https://2020.pycon.org.au/program/99XMUR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;By 2025, there will be over 8 million voice assistants in the world. They are found on your mobile phone, in your home, in your car, and over time, will be embedded in many cyber-physical systems across the world. At the same time, there are over 7000 languages spoken in the world - &amp;quot;living languages&amp;quot;.&lt;/p&gt;
&lt;p&gt;But voice assistants support just a fraction of these languages. Moreover, accents and diversity within a spoken language are not well handled by voice assistants. For example, African American voices are much less likely to be correctly recognised by the speech recognition algorithms used within voice assistants. And as we start to interact with systems using voice, we have a human desire to listen to voices we resonate with. Voices like us. For many people, there are no synthesised voices that reflect their heritage, language, and gender expression.&lt;/p&gt;
&lt;p&gt;There are several techno-social reasons behind this state of affairs.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The intent of a commercial voice assistant is to make money. This drives technical development in certain ways, such as certain languages being seen as more lucrative than others, irrespective of the number of speakers of that language. For example, there is more voice assistant support for Icelandic, a language spoken by 314,000 people, than there is for Kiswahili, a language spoken by over 100,000,000 people in Eastern Africa. Why? Money.&lt;/li&gt;
&lt;li&gt;The big tech companies behind voice assistants have typically poor gender and racial diversity in their talent pool. Diversity in developers leads to diversity in development.&lt;/li&gt;
&lt;li&gt;The data used for training speech recognition and speech synthesis models often has racial and gender biases. These can stem from both selection bias, but also broader systemic issues of inequality, such as the use of voice assistant technology to gather data - and the affordability of both that technology and its pre-requisites, such as internet access.&lt;/li&gt;
&lt;li&gt;Many languages are considered &amp;quot;low resource languages&amp;quot;. This means they often don't have written transcriptions, which are needed to train machine learning models. Those creating transcriptions often face the &amp;quot;transcription bottleneck&amp;quot; - a workflow impediment that means the creation of resources consumes significant labour time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many established and emerging open source tools - many in Python - and movements that individually are addressing aspects of this broader techno-social system. &lt;strong&gt;Together&lt;/strong&gt;, they can effect change so that everyone, everywhere can be afforded the benefits of voice technology.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub%5Fconfirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub%5Fconfirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 14:05:00 2020 at Floperator&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="KathyReid"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Ensuring Black voices matter: Why your voice assistant is racist, and what we can do about it</title><link href="https://pyvideo.org/pycon-au-2020/ensuring-black-voices-matter-why-your-voice-assistant-is-racist-and-what-we-can-do-about-it.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Kathy Reid</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/ensuring-black-voices-matter-why-your-voice-assistant-is-racist-and-what-we-can-do-about-it.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kathy Reid&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/99XMUR"&gt;https://2020.pycon.org.au/program/99XMUR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;By 2025, there will be over 8 million voice assistants in the world. They are found on your mobile phone, in your home, in your car, and over time, will be embedded in many cyber-physical systems across the world. At …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kathy Reid&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/99XMUR"&gt;https://2020.pycon.org.au/program/99XMUR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;By 2025, there will be over 8 million voice assistants in the world. They are found on your mobile phone, in your home, in your car, and over time, will be embedded in many cyber-physical systems across the world. At the same time, there are over 7000 languages spoken in the world - &amp;quot;living languages&amp;quot;.&lt;/p&gt;
&lt;p&gt;But voice assistants support just a fraction of these languages. Moreover, accents and diversity within a spoken language are not well handled by voice assistants. For example, African American voices are much less likely to be correctly recognised by the speech recognition algorithms used within voice assistants. And as we start to interact with systems using voice, we have a human desire to listen to voices we resonate with. Voices like us. For many people, there are no synthesised voices that reflect their heritage, language, and gender expression.&lt;/p&gt;
&lt;p&gt;There are several techno-social reasons behind this state of affairs.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The intent of a commercial voice assistant is to make money. This drives technical development in certain ways, such as certain languages being seen as more lucrative than others, irrespective of the number of speakers of that language. For example, there is more voice assistant support for Icelandic, a language spoken by 314,000 people, than there is for Kiswahili, a language spoken by over 100,000,000 people in Eastern Africa. Why? Money.&lt;/li&gt;
&lt;li&gt;The big tech companies behind voice assistants have typically poor gender and racial diversity in their talent pool. Diversity in developers leads to diversity in development.&lt;/li&gt;
&lt;li&gt;The data used for training speech recognition and speech synthesis models often has racial and gender biases. These can stem from both selection bias, but also broader systemic issues of inequality, such as the use of voice assistant technology to gather data - and the affordability of both that technology and its pre-requisites, such as internet access.&lt;/li&gt;
&lt;li&gt;Many languages are considered &amp;quot;low resource languages&amp;quot;. This means they often don't have written transcriptions, which are needed to train machine learning models. Those creating transcriptions often face the &amp;quot;transcription bottleneck&amp;quot; - a workflow impediment that means the creation of resources consumes significant labour time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many established and emerging open source tools - many in Python - and movements that individually are addressing aspects of this broader techno-social system. &lt;strong&gt;Together&lt;/strong&gt;, they can effect change so that everyone, everywhere can be afforded the benefits of voice technology.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub%5Fconfirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub%5Fconfirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 14:05:00 2020 at Floperator&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="KathyReid"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>geospatial data and analysis is :exploding_head:</title><link href="https://pyvideo.org/pycon-au-2020/geospatial-data-and-analysis-is-exploding_head.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Gala</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/geospatial-data-and-analysis-is-exploding_head.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gala&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/QJTSEP"&gt;https://2020.pycon.org.au/program/QJTSEP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is my top level summary:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;its hard for everyone, you are not alone.&lt;/li&gt;
&lt;li&gt;snacks:
- points, lines and polygons
- projections (scream quietly into the void)
- WKT
- file types
- &amp;quot;simple&amp;quot; calculations&lt;/li&gt;
&lt;li&gt;pantry:
- libraries
- useful stuff on the internet
- quick wins
- other software …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gala&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/QJTSEP"&gt;https://2020.pycon.org.au/program/QJTSEP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is my top level summary:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;its hard for everyone, you are not alone.&lt;/li&gt;
&lt;li&gt;snacks:
- points, lines and polygons
- projections (scream quietly into the void)
- WKT
- file types
- &amp;quot;simple&amp;quot; calculations&lt;/li&gt;
&lt;li&gt;pantry:
- libraries
- useful stuff on the internet
- quick wins
- other software
- debugging&lt;/li&gt;
&lt;li&gt;dinner:
- interesting problems
- other fun things&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub%5Fconfirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub%5Fconfirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 09:50:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="Gala"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>geospatial data and analysis is :exploding_head:</title><link href="https://pyvideo.org/pycon-au-2020/geospatial-data-and-analysis-is-exploding_head.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Gala</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/geospatial-data-and-analysis-is-exploding_head.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gala&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/QJTSEP"&gt;https://2020.pycon.org.au/program/QJTSEP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is my top level summary:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;its hard for everyone, you are not alone.&lt;/li&gt;
&lt;li&gt;snacks:
- points, lines and polygons
- projections (scream quietly into the void)
- WKT
- file types
- &amp;quot;simple&amp;quot; calculations&lt;/li&gt;
&lt;li&gt;pantry:
- libraries
- useful stuff on the internet
- quick wins
- other software …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gala&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/QJTSEP"&gt;https://2020.pycon.org.au/program/QJTSEP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is my top level summary:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;its hard for everyone, you are not alone.&lt;/li&gt;
&lt;li&gt;snacks:
- points, lines and polygons
- projections (scream quietly into the void)
- WKT
- file types
- &amp;quot;simple&amp;quot; calculations&lt;/li&gt;
&lt;li&gt;pantry:
- libraries
- useful stuff on the internet
- quick wins
- other software
- debugging&lt;/li&gt;
&lt;li&gt;dinner:
- interesting problems
- other fun things&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub%5Fconfirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub%5Fconfirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 09:50:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="Gala"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Getting Over the Boring Stuff Quicker - Building a Semi-Automated Speech Audio Annotation Tool</title><link href="https://pyvideo.org/pycon-au-2020/getting-over-the-boring-stuff-quicker-building-a-semi-automated-speech-audio-annotation-tool.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Xin Liang</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/getting-over-the-boring-stuff-quicker-building-a-semi-automated-speech-audio-annotation-tool.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Xin Liang&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/MQWLLM"&gt;https://2020.pycon.org.au/program/MQWLLM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 11:35:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="XinLiang"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Getting Over the Boring Stuff Quicker - Building a Semi-Automated Speech Audio Annotation Tool</title><link href="https://pyvideo.org/pycon-au-2020/getting-over-the-boring-stuff-quicker-building-a-semi-automated-speech-audio-annotation-tool.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Xin Liang</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/getting-over-the-boring-stuff-quicker-building-a-semi-automated-speech-audio-annotation-tool.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Xin Liang&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/MQWLLM"&gt;https://2020.pycon.org.au/program/MQWLLM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 11:35:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="XinLiang"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>GitHub Actions &amp; Python</title><link href="https://pyvideo.org/pycon-au-2020/github-actions-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Jack McKew</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/github-actions-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jack McKew&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/MRUT7W"&gt;https://2020.pycon.org.au/program/MRUT7W&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Actions are free-to-use, plug &amp;amp; play blocks of continuous integration / continuous delivery (CICD).&lt;/p&gt;
&lt;p&gt;This talk will go into how GitHub actions help me maintain my open source Python packages (Pandas_Alive), and how I released my own GitHub Actions for automating …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jack McKew&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/MRUT7W"&gt;https://2020.pycon.org.au/program/MRUT7W&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Actions are free-to-use, plug &amp;amp; play blocks of continuous integration / continuous delivery (CICD).&lt;/p&gt;
&lt;p&gt;This talk will go into how GitHub actions help me maintain my open source Python packages (Pandas_Alive), and how I released my own GitHub Actions for automating the packaging of Python code to executables with PyInstaller.&lt;/p&gt;
&lt;p&gt;Tutorial blog posts I've written:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://jackmckew.dev/github-actions-for-cicd.html"&gt;https://jackmckew.dev/github-actions-for-cicd.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://jackmckew.dev/how-to-make-github-actions.html"&gt;https://jackmckew.dev/how-to-make-github-actions.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Actions I've released:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/marketplace/actions/pyinstaller-windows"&gt;https://github.com/marketplace/actions/pyinstaller-windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/marketplace/actions/pyinstaller-linux"&gt;https://github.com/marketplace/actions/pyinstaller-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/marketplace/actions/python-interrogate-check"&gt;https://github.com/marketplace/actions/python-interrogate-check&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Open source Python projects that GitHub actions help me maintain:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/JackMcKew/pandas_alive"&gt;https://github.com/JackMcKew/pandas_alive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This talk has a brief mention of animated graphs to do with the COVID-19 pandemic.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 11:35:00 2020 at Floperator&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="JackMcKew"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>GitHub Actions &amp; Python</title><link href="https://pyvideo.org/pycon-au-2020/github-actions-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Jack McKew</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/github-actions-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jack McKew&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/MRUT7W"&gt;https://2020.pycon.org.au/program/MRUT7W&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Actions are free-to-use, plug &amp;amp; play blocks of continuous integration / continuous delivery (CICD).&lt;/p&gt;
&lt;p&gt;This talk will go into how GitHub actions help me maintain my open source Python packages (Pandas_Alive), and how I released my own GitHub Actions for automating …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jack McKew&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/MRUT7W"&gt;https://2020.pycon.org.au/program/MRUT7W&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Actions are free-to-use, plug &amp;amp; play blocks of continuous integration / continuous delivery (CICD).&lt;/p&gt;
&lt;p&gt;This talk will go into how GitHub actions help me maintain my open source Python packages (Pandas_Alive), and how I released my own GitHub Actions for automating the packaging of Python code to executables with PyInstaller.&lt;/p&gt;
&lt;p&gt;Tutorial blog posts I've written:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://jackmckew.dev/github-actions-for-cicd.html"&gt;https://jackmckew.dev/github-actions-for-cicd.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://jackmckew.dev/how-to-make-github-actions.html"&gt;https://jackmckew.dev/how-to-make-github-actions.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Actions I've released:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/marketplace/actions/pyinstaller-windows"&gt;https://github.com/marketplace/actions/pyinstaller-windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/marketplace/actions/pyinstaller-linux"&gt;https://github.com/marketplace/actions/pyinstaller-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/marketplace/actions/python-interrogate-check"&gt;https://github.com/marketplace/actions/python-interrogate-check&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Open source Python projects that GitHub actions help me maintain:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/JackMcKew/pandas_alive"&gt;https://github.com/JackMcKew/pandas_alive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This talk has a brief mention of animated graphs to do with the COVID-19 pandemic.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 11:35:00 2020 at Floperator&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="JackMcKew"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Graph Databases will change your (freakin') life</title><link href="https://pyvideo.org/pycon-au-2020/graph-databases-will-change-your-freakin-life.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Elena Williams</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/graph-databases-will-change-your-freakin-life.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Elena Williams&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/A878CA"&gt;https://2020.pycon.org.au/program/A878CA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Relational and NoSQL DBs have ruled the roost for a couple of decades now, but in real life there's more to data than just tables or key-pairs. Graph DBMS technology has been coming along for the last decade-or-so and is …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Elena Williams&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/A878CA"&gt;https://2020.pycon.org.au/program/A878CA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Relational and NoSQL DBs have ruled the roost for a couple of decades now, but in real life there's more to data than just tables or key-pairs. Graph DBMS technology has been coming along for the last decade-or-so and is now quite mature. Everyone wants one, just ask a Fortune 500 company.&lt;/p&gt;
&lt;p&gt;I mean: why have a table when you can have a knowledge graph? Why not be able to whip up a recommendations engine (or indeed a fraud detector) in a few minutes?&lt;/p&gt;
&lt;p&gt;Graph databases store data in Graphs -- that is NOT chart-visualisation nor syntax standard on API layers (NOT a GraphQL talk), but per the paper written by the mathematician Euler in 1736: those data structures which are &amp;quot;nodes&amp;quot; connected by &amp;quot;relationships&amp;quot;.&lt;/p&gt;
&lt;p&gt;This talk will be a primer on what this all means, how they work and when they're a good idea to use. There will also be a demonstration and discussion about how to kick off with graph DBs driven by python, specifically for people who are familiar with conventional databases, but have never used Graph databases before, but might be curious.&lt;/p&gt;
&lt;p&gt;See code sample: &lt;a class="reference external" href="https://github.com/elena/graph-fun"&gt;https://github.com/elena/graph-fun&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 14:05:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="ElenaWilliams"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Graph Databases will change your (freakin') life</title><link href="https://pyvideo.org/pycon-au-2020/graph-databases-will-change-your-freakin-life.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Elena Williams</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/graph-databases-will-change-your-freakin-life.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Elena Williams&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/A878CA"&gt;https://2020.pycon.org.au/program/A878CA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Relational and NoSQL DBs have ruled the roost for a couple of decades now, but in real life there's more to data than just tables or key-pairs. Graph DBMS technology has been coming along for the last decade-or-so and is …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Elena Williams&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/A878CA"&gt;https://2020.pycon.org.au/program/A878CA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Relational and NoSQL DBs have ruled the roost for a couple of decades now, but in real life there's more to data than just tables or key-pairs. Graph DBMS technology has been coming along for the last decade-or-so and is now quite mature. Everyone wants one, just ask a Fortune 500 company.&lt;/p&gt;
&lt;p&gt;I mean: why have a table when you can have a knowledge graph? Why not be able to whip up a recommendations engine (or indeed a fraud detector) in a few minutes?&lt;/p&gt;
&lt;p&gt;Graph databases store data in Graphs -- that is NOT chart-visualisation nor syntax standard on API layers (NOT a GraphQL talk), but per the paper written by the mathematician Euler in 1736: those data structures which are &amp;quot;nodes&amp;quot; connected by &amp;quot;relationships&amp;quot;.&lt;/p&gt;
&lt;p&gt;This talk will be a primer on what this all means, how they work and when they're a good idea to use. There will also be a demonstration and discussion about how to kick off with graph DBs driven by python, specifically for people who are familiar with conventional databases, but have never used Graph databases before, but might be curious.&lt;/p&gt;
&lt;p&gt;See code sample: &lt;a class="reference external" href="https://github.com/elena/graph-fun"&gt;https://github.com/elena/graph-fun&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 14:05:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="ElenaWilliams"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Hacking Playable Ads: What REALLY are they?</title><link href="https://pyvideo.org/pycon-au-2020/hacking-playable-ads-what-really-are-they.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Evan Kohilas</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/hacking-playable-ads-what-really-are-they.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Evan Kohilas&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/8TA7ZA"&gt;https://2020.pycon.org.au/program/8TA7ZA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Have you ever clicked the &lt;em&gt;FREE GEMS&lt;/em&gt; button and been served an ad, only to find you're now trialing a game?&lt;/p&gt;
&lt;p&gt;What are they? Are they running code?
If they are, can we hijack them?
If we can't, can we …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Evan Kohilas&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/8TA7ZA"&gt;https://2020.pycon.org.au/program/8TA7ZA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Have you ever clicked the &lt;em&gt;FREE GEMS&lt;/em&gt; button and been served an ad, only to find you're now trialing a game?&lt;/p&gt;
&lt;p&gt;What are they? Are they running code?
If they are, can we hijack them?
If we can't, can we bypass, or even replace them?&lt;/p&gt;
&lt;p&gt;And more importantly, what are they actually doing?
Are you really playing a game? Or are they bitcoin miners in disguise?&lt;/p&gt;
&lt;p&gt;Come along and join my adventurous curiosity as we learn to man in the middle these ads and discover what they're really about!&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 13:55:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="EvanKohilas"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Hacking Playable Ads: What REALLY are they?</title><link href="https://pyvideo.org/pycon-au-2020/hacking-playable-ads-what-really-are-they.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Evan Kohilas</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/hacking-playable-ads-what-really-are-they.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Evan Kohilas&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/8TA7ZA"&gt;https://2020.pycon.org.au/program/8TA7ZA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Have you ever clicked the &lt;em&gt;FREE GEMS&lt;/em&gt; button and been served an ad, only to find you're now trialing a game?&lt;/p&gt;
&lt;p&gt;What are they? Are they running code?
If they are, can we hijack them?
If we can't, can we …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Evan Kohilas&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/8TA7ZA"&gt;https://2020.pycon.org.au/program/8TA7ZA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Have you ever clicked the &lt;em&gt;FREE GEMS&lt;/em&gt; button and been served an ad, only to find you're now trialing a game?&lt;/p&gt;
&lt;p&gt;What are they? Are they running code?
If they are, can we hijack them?
If we can't, can we bypass, or even replace them?&lt;/p&gt;
&lt;p&gt;And more importantly, what are they actually doing?
Are you really playing a game? Or are they bitcoin miners in disguise?&lt;/p&gt;
&lt;p&gt;Come along and join my adventurous curiosity as we learn to man in the middle these ads and discover what they're really about!&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 13:55:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="EvanKohilas"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>How a major museum runs on Python</title><link href="https://pyvideo.org/pycon-au-2020/how-a-major-museum-runs-on-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Greg Turner</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/how-a-major-museum-runs-on-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Greg Turner, Ali Haberfield, Simon Loffler&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/UKZXNT"&gt;https://2020.pycon.org.au/program/UKZXNT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ACMI, the Australian Centre for the Moving Image, is the most visited museum of the moving image in the world. In 2019 we closed our doors, to reshape our Federation Square building in order to become …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Greg Turner, Ali Haberfield, Simon Loffler&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/UKZXNT"&gt;https://2020.pycon.org.au/program/UKZXNT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ACMI, the Australian Centre for the Moving Image, is the most visited museum of the moving image in the world. In 2019 we closed our doors, to reshape our Federation Square building in order to become more public-facing, and to house a major new permanent exhibition, The Story of the Moving Image.&lt;/p&gt;
&lt;p&gt;As you might imagine, we have a &lt;em&gt;lot&lt;/em&gt; of moving image to show, and a lot of fascinating objects to tell people about, all of which can be overwhelming to some audiences. That's why we designed and built a system called The Lens. Every visitor to the museum can pick up a Lens, which they use to collect objects and media to watch and explore in their own time. The Lens depends on a network of hundreds of Raspberry Pi devices to display media and interact with visitors, all running Opensourced Python code. All these devices need to be robust and maintainable in order to survive the 10-year lifespan of the exhibition.&lt;/p&gt;
&lt;p&gt;In this talk, we'll give you a tour of the technology at ACMI, including our Internet-of-Things fleet and management tools, and XOS, the eXperience Operating System, which provides content and configuration to the devices.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 16:35:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="AliHaberfield"></category><category term="GregTurner"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="SimonLoffler"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>How a major museum runs on Python</title><link href="https://pyvideo.org/pycon-au-2020/how-a-major-museum-runs-on-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Greg Turner</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/how-a-major-museum-runs-on-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Greg Turner, Ali Haberfield, Simon Loffler&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/UKZXNT"&gt;https://2020.pycon.org.au/program/UKZXNT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ACMI, the Australian Centre for the Moving Image, is the most visited museum of the moving image in the world. In 2019 we closed our doors, to reshape our Federation Square building in order to become …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Greg Turner, Ali Haberfield, Simon Loffler&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/UKZXNT"&gt;https://2020.pycon.org.au/program/UKZXNT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ACMI, the Australian Centre for the Moving Image, is the most visited museum of the moving image in the world. In 2019 we closed our doors, to reshape our Federation Square building in order to become more public-facing, and to house a major new permanent exhibition, The Story of the Moving Image.&lt;/p&gt;
&lt;p&gt;As you might imagine, we have a &lt;em&gt;lot&lt;/em&gt; of moving image to show, and a lot of fascinating objects to tell people about, all of which can be overwhelming to some audiences. That's why we designed and built a system called The Lens. Every visitor to the museum can pick up a Lens, which they use to collect objects and media to watch and explore in their own time. The Lens depends on a network of hundreds of Raspberry Pi devices to display media and interact with visitors, all running Opensourced Python code. All these devices need to be robust and maintainable in order to survive the 10-year lifespan of the exhibition.&lt;/p&gt;
&lt;p&gt;In this talk, we'll give you a tour of the technology at ACMI, including our Internet-of-Things fleet and management tools, and XOS, the eXperience Operating System, which provides content and configuration to the devices.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 16:35:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="AliHaberfield"></category><category term="GregTurner"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="SimonLoffler"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>How learning python helped me teach C in tertiary education</title><link href="https://pyvideo.org/pycon-au-2020/how-learning-python-helped-me-teach-c-in-tertiary-education.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Shrey Somaiya</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/how-learning-python-helped-me-teach-c-in-tertiary-education.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Shrey Somaiya&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/73HFNJ"&gt;https://2020.pycon.org.au/program/73HFNJ&lt;/a&gt;&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;This talk is simply one about my experience of learning C from a python background&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;what python features helped me understand C better (control flow, algorithm and problem breakdown design, functions, etc)&lt;/li&gt;
&lt;li&gt;what C features helped me understand python better …&lt;/li&gt;&lt;/ul&gt;&lt;/dd&gt;&lt;/dl&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Shrey Somaiya&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/73HFNJ"&gt;https://2020.pycon.org.au/program/73HFNJ&lt;/a&gt;&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;This talk is simply one about my experience of learning C from a python background&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;what python features helped me understand C better (control flow, algorithm and problem breakdown design, functions, etc)&lt;/li&gt;
&lt;li&gt;what C features helped me understand python better (ie pointers in C helped me understand python lists, etc)&lt;/li&gt;
&lt;li&gt;how I use my python knowledge to teach C at University&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 10:25:00 2020 at Floperator&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="ShreySomaiya"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>How learning python helped me teach C in tertiary education</title><link href="https://pyvideo.org/pycon-au-2020/how-learning-python-helped-me-teach-c-in-tertiary-education.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Shrey Somaiya</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/how-learning-python-helped-me-teach-c-in-tertiary-education.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Shrey Somaiya&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/73HFNJ"&gt;https://2020.pycon.org.au/program/73HFNJ&lt;/a&gt;&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;This talk is simply one about my experience of learning C from a python background&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;what python features helped me understand C better (control flow, algorithm and problem breakdown design, functions, etc)&lt;/li&gt;
&lt;li&gt;what C features helped me understand python better …&lt;/li&gt;&lt;/ul&gt;&lt;/dd&gt;&lt;/dl&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Shrey Somaiya&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/73HFNJ"&gt;https://2020.pycon.org.au/program/73HFNJ&lt;/a&gt;&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;This talk is simply one about my experience of learning C from a python background&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;what python features helped me understand C better (control flow, algorithm and problem breakdown design, functions, etc)&lt;/li&gt;
&lt;li&gt;what C features helped me understand python better (ie pointers in C helped me understand python lists, etc)&lt;/li&gt;
&lt;li&gt;how I use my python knowledge to teach C at University&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 10:25:00 2020 at Floperator&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="ShreySomaiya"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>I don't need friends, I can build my own</title><link href="https://pyvideo.org/pycon-au-2020/i-dont-need-friends-i-can-build-my-own.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Sarah Levins</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/i-dont-need-friends-i-can-build-my-own.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sarah Levins&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/E9AXJE"&gt;https://2020.pycon.org.au/program/E9AXJE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chatbots have become commonplace in our lives. These days, you may find they are largely used as a form of customer service. But how does it make us feel when we know we’re talking to a program? A poor …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sarah Levins&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/E9AXJE"&gt;https://2020.pycon.org.au/program/E9AXJE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chatbots have become commonplace in our lives. These days, you may find they are largely used as a form of customer service. But how does it make us feel when we know we’re talking to a program? A poor interaction can sour the user’s experience and put them off using a product.&lt;/p&gt;
&lt;p&gt;There is an art to making programmed responses feel natural. It’s not just about replying to our questions with the correct answer. Chatbots need to be programmed with the same abilities humans have to communicate. They need to be able to listen, understand and remember. This gives them the context of the conversation. So where do you start?&lt;/p&gt;
&lt;p&gt;In this talk i’ll cover some of the core concepts behind how web chatbots work, strategies used to train them to feel more human, and some Python tools that you can use to start building your own.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 11:00:00 2020 at Floperator&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="SarahLevins"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>I don't need friends, I can build my own</title><link href="https://pyvideo.org/pycon-au-2020/i-dont-need-friends-i-can-build-my-own.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Sarah Levins</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/i-dont-need-friends-i-can-build-my-own.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sarah Levins&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/E9AXJE"&gt;https://2020.pycon.org.au/program/E9AXJE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chatbots have become commonplace in our lives. These days, you may find they are largely used as a form of customer service. But how does it make us feel when we know we’re talking to a program? A poor …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sarah Levins&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/E9AXJE"&gt;https://2020.pycon.org.au/program/E9AXJE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chatbots have become commonplace in our lives. These days, you may find they are largely used as a form of customer service. But how does it make us feel when we know we’re talking to a program? A poor interaction can sour the user’s experience and put them off using a product.&lt;/p&gt;
&lt;p&gt;There is an art to making programmed responses feel natural. It’s not just about replying to our questions with the correct answer. Chatbots need to be programmed with the same abilities humans have to communicate. They need to be able to listen, understand and remember. This gives them the context of the conversation. So where do you start?&lt;/p&gt;
&lt;p&gt;In this talk i’ll cover some of the core concepts behind how web chatbots work, strategies used to train them to feel more human, and some Python tools that you can use to start building your own.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 11:00:00 2020 at Floperator&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="SarahLevins"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Interactive Mapmaking with Python</title><link href="https://pyvideo.org/pycon-au-2020/interactive-mapmaking-with-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Sangarshanan</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/interactive-mapmaking-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sangarshanan&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/DVV7W8"&gt;https://2020.pycon.org.au/program/DVV7W8&lt;/a&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Introduction (2 mins)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Who am I?&lt;/li&gt;
&lt;li&gt;Setting the expectations&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Working with Geodataframes (5 mins)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Reading Spatial data as a GeoDataframe&lt;/li&gt;
&lt;li&gt;The awesomeness of GeoDataframes (An overview of some of the amazing things you can do with a single line of code …&lt;/li&gt;&lt;/ul&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sangarshanan&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/DVV7W8"&gt;https://2020.pycon.org.au/program/DVV7W8&lt;/a&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Introduction (2 mins)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Who am I?&lt;/li&gt;
&lt;li&gt;Setting the expectations&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Working with Geodataframes (5 mins)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Reading Spatial data as a GeoDataframe&lt;/li&gt;
&lt;li&gt;The awesomeness of GeoDataframes (An overview of some of the amazing things you can do with a single line of code eg: Spatial joins, Manipulations and transformations)&lt;/li&gt;
&lt;li&gt;Now that we has established our love for geopandas lets map geodataframes&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Let the Mapmaking begin (10 mins)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Basic Non-Interactive maps with Geopandas and Matplotlib&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Creating basic interactive maps with Folium, Plotly &amp;amp; Kepler (GeoJSONPlots, Clustermaps, Heatmaps, H3gridmaps)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Conforming geodataframes to a format accepted by these libraries (usually JSON or a list of lists)&lt;/li&gt;
&lt;li&gt;Setting the right parameters for different plots&lt;/li&gt;
&lt;li&gt;Jazzing up the maps with additional layers, custom styles, tooltips, popups, colors etc&lt;/li&gt;
&lt;li&gt;Spatiotemporal Maps with Kepler.gl + Jupyter for handling huge datasets with ease&lt;/li&gt;
&lt;li&gt;Can we make it any easier ?&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Why can't making interactive maps be as easy as gdf.folium.plot()?&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Enter Geopatra (8 mins)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;The need for Geopatra (Could it be any Easier and Faster)&lt;/li&gt;
&lt;li&gt;Wrapping up popular mapmaking libraries for GeoDataframes&lt;/li&gt;
&lt;li&gt;Create interactive maps with just a single line&lt;/li&gt;
&lt;li&gt;Future work and Discussion :)&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/Sangarshanan/geopatra"&gt;https://github.com/Sangarshanan/geopatra&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 17:10:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="Sangarshanan"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Interactive Mapmaking with Python</title><link href="https://pyvideo.org/pycon-au-2020/interactive-mapmaking-with-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Sangarshanan</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/interactive-mapmaking-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sangarshanan&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/DVV7W8"&gt;https://2020.pycon.org.au/program/DVV7W8&lt;/a&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Introduction (2 mins)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Who am I?&lt;/li&gt;
&lt;li&gt;Setting the expectations&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Working with Geodataframes (5 mins)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Reading Spatial data as a GeoDataframe&lt;/li&gt;
&lt;li&gt;The awesomeness of GeoDataframes (An overview of some of the amazing things you can do with a single line of code …&lt;/li&gt;&lt;/ul&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sangarshanan&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/DVV7W8"&gt;https://2020.pycon.org.au/program/DVV7W8&lt;/a&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Introduction (2 mins)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Who am I?&lt;/li&gt;
&lt;li&gt;Setting the expectations&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Working with Geodataframes (5 mins)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Reading Spatial data as a GeoDataframe&lt;/li&gt;
&lt;li&gt;The awesomeness of GeoDataframes (An overview of some of the amazing things you can do with a single line of code eg: Spatial joins, Manipulations and transformations)&lt;/li&gt;
&lt;li&gt;Now that we has established our love for geopandas lets map geodataframes&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Let the Mapmaking begin (10 mins)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Basic Non-Interactive maps with Geopandas and Matplotlib&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Creating basic interactive maps with Folium, Plotly &amp;amp; Kepler (GeoJSONPlots, Clustermaps, Heatmaps, H3gridmaps)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Conforming geodataframes to a format accepted by these libraries (usually JSON or a list of lists)&lt;/li&gt;
&lt;li&gt;Setting the right parameters for different plots&lt;/li&gt;
&lt;li&gt;Jazzing up the maps with additional layers, custom styles, tooltips, popups, colors etc&lt;/li&gt;
&lt;li&gt;Spatiotemporal Maps with Kepler.gl + Jupyter for handling huge datasets with ease&lt;/li&gt;
&lt;li&gt;Can we make it any easier ?&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Why can't making interactive maps be as easy as gdf.folium.plot()?&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Enter Geopatra (8 mins)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;The need for Geopatra (Could it be any Easier and Faster)&lt;/li&gt;
&lt;li&gt;Wrapping up popular mapmaking libraries for GeoDataframes&lt;/li&gt;
&lt;li&gt;Create interactive maps with just a single line&lt;/li&gt;
&lt;li&gt;Future work and Discussion :)&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/Sangarshanan/geopatra"&gt;https://github.com/Sangarshanan/geopatra&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 17:10:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="Sangarshanan"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Introducing Lambda Calculus with Python</title><link href="https://pyvideo.org/pycon-au-2020/introducing-lambda-calculus-with-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Indranil Ghosh</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/introducing-lambda-calculus-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Indranil Ghosh&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/AL8WB3"&gt;https://2020.pycon.org.au/program/AL8WB3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We will be focusing on untyped lambda calculus and start by the simple definition of a function, that can be implemented with Python lambda. We will then discuss the concepts of &lt;strong&gt;abstraction&lt;/strong&gt; and &lt;strong&gt;application&lt;/strong&gt; in lambda calculus and then move …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Indranil Ghosh&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/AL8WB3"&gt;https://2020.pycon.org.au/program/AL8WB3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We will be focusing on untyped lambda calculus and start by the simple definition of a function, that can be implemented with Python lambda. We will then discuss the concepts of &lt;strong&gt;abstraction&lt;/strong&gt; and &lt;strong&gt;application&lt;/strong&gt; in lambda calculus and then move on to understand what a &lt;strong&gt;substitution&lt;/strong&gt; is and how can these be implemented in Python. We will finally study some combinators which are the basic building blocks of combinatory logic, before ending with encoding datatypes in lambda calculus and implementing the same with Python lambda. Datatypes we will be discussing are:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Boolean values like TRUE and FALSE&lt;/li&gt;
&lt;li&gt;Logical operators like AND, OR and NOT&lt;/li&gt;
&lt;li&gt;Church Numerals&lt;/li&gt;
&lt;li&gt;Predicates&lt;/li&gt;
&lt;li&gt;Recursions&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 14:40:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="IndranilGhosh"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Introducing Lambda Calculus with Python</title><link href="https://pyvideo.org/pycon-au-2020/introducing-lambda-calculus-with-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Indranil Ghosh</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/introducing-lambda-calculus-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Indranil Ghosh&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/AL8WB3"&gt;https://2020.pycon.org.au/program/AL8WB3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We will be focusing on untyped lambda calculus and start by the simple definition of a function, that can be implemented with Python lambda. We will then discuss the concepts of &lt;strong&gt;abstraction&lt;/strong&gt; and &lt;strong&gt;application&lt;/strong&gt; in lambda calculus and then move …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Indranil Ghosh&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/AL8WB3"&gt;https://2020.pycon.org.au/program/AL8WB3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We will be focusing on untyped lambda calculus and start by the simple definition of a function, that can be implemented with Python lambda. We will then discuss the concepts of &lt;strong&gt;abstraction&lt;/strong&gt; and &lt;strong&gt;application&lt;/strong&gt; in lambda calculus and then move on to understand what a &lt;strong&gt;substitution&lt;/strong&gt; is and how can these be implemented in Python. We will finally study some combinators which are the basic building blocks of combinatory logic, before ending with encoding datatypes in lambda calculus and implementing the same with Python lambda. Datatypes we will be discussing are:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Boolean values like TRUE and FALSE&lt;/li&gt;
&lt;li&gt;Logical operators like AND, OR and NOT&lt;/li&gt;
&lt;li&gt;Church Numerals&lt;/li&gt;
&lt;li&gt;Predicates&lt;/li&gt;
&lt;li&gt;Recursions&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 14:40:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="IndranilGhosh"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Journey into the Deep World of Web Development</title><link href="https://pyvideo.org/pycon-au-2020/journey-into-the-deep-world-of-web-development.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Andrew Kim</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/journey-into-the-deep-world-of-web-development.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Andrew Kim&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/RMY7LZ"&gt;https://2020.pycon.org.au/program/RMY7LZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Are you from a non-tech industry but want to learn web development? Have you tried doing the official Django tutorial and had no idea what was going on?&lt;/p&gt;
&lt;p&gt;This talk is a story about how I learnt Django and Python …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Andrew Kim&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/RMY7LZ"&gt;https://2020.pycon.org.au/program/RMY7LZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Are you from a non-tech industry but want to learn web development? Have you tried doing the official Django tutorial and had no idea what was going on?&lt;/p&gt;
&lt;p&gt;This talk is a story about how I learnt Django and Python coming from a non-tech industry, during the COVID-19 pandemic. I will cover tips for beginners on how best to get started with Django and Python.&lt;/p&gt;
&lt;p&gt;I will be sharing about mistakes that I made, resources that I found useful, and how I created connections both online and offline.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 16:00:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="AndrewKim"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Journey into the Deep World of Web Development</title><link href="https://pyvideo.org/pycon-au-2020/journey-into-the-deep-world-of-web-development.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Andrew Kim</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/journey-into-the-deep-world-of-web-development.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Andrew Kim&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/RMY7LZ"&gt;https://2020.pycon.org.au/program/RMY7LZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Are you from a non-tech industry but want to learn web development? Have you tried doing the official Django tutorial and had no idea what was going on?&lt;/p&gt;
&lt;p&gt;This talk is a story about how I learnt Django and Python …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Andrew Kim&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/RMY7LZ"&gt;https://2020.pycon.org.au/program/RMY7LZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Are you from a non-tech industry but want to learn web development? Have you tried doing the official Django tutorial and had no idea what was going on?&lt;/p&gt;
&lt;p&gt;This talk is a story about how I learnt Django and Python coming from a non-tech industry, during the COVID-19 pandemic. I will cover tips for beginners on how best to get started with Django and Python.&lt;/p&gt;
&lt;p&gt;I will be sharing about mistakes that I made, resources that I found useful, and how I created connections both online and offline.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 16:00:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="AndrewKim"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Making Codebases Easier to Learn and Maintain</title><link href="https://pyvideo.org/pycon-au-2020/making-codebases-easier-to-learn-and-maintain.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Tennessee Leeuwenburg</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/making-codebases-easier-to-learn-and-maintain.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tennessee Leeuwenburg&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/AT33MZ"&gt;https://2020.pycon.org.au/program/AT33MZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Learning a new codebase, returning to an old one, or exploring a new part of a system can sometimes be harder than it needs to be. This talk outlines tips and tricks for writing code that is both easier to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tennessee Leeuwenburg&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/AT33MZ"&gt;https://2020.pycon.org.au/program/AT33MZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Learning a new codebase, returning to an old one, or exploring a new part of a system can sometimes be harder than it needs to be. This talk outlines tips and tricks for writing code that is both easier to maintain and easier for other people to learn.&lt;/p&gt;
&lt;p&gt;Topics covered will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Documentation: both written and in-code&lt;/li&gt;
&lt;li&gt;Structure: how to organise code for readability and easy re-use&lt;/li&gt;
&lt;li&gt;Expression: how to improve comprehensibility of code&lt;/li&gt;
&lt;li&gt;Tests: how to maximise their usefulness&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 14:05:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="TennesseeLeeuwenburg"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Making Codebases Easier to Learn and Maintain</title><link href="https://pyvideo.org/pycon-au-2020/making-codebases-easier-to-learn-and-maintain.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Tennessee Leeuwenburg</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/making-codebases-easier-to-learn-and-maintain.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tennessee Leeuwenburg&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/AT33MZ"&gt;https://2020.pycon.org.au/program/AT33MZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Learning a new codebase, returning to an old one, or exploring a new part of a system can sometimes be harder than it needs to be. This talk outlines tips and tricks for writing code that is both easier to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tennessee Leeuwenburg&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/AT33MZ"&gt;https://2020.pycon.org.au/program/AT33MZ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Learning a new codebase, returning to an old one, or exploring a new part of a system can sometimes be harder than it needs to be. This talk outlines tips and tricks for writing code that is both easier to maintain and easier for other people to learn.&lt;/p&gt;
&lt;p&gt;Topics covered will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Documentation: both written and in-code&lt;/li&gt;
&lt;li&gt;Structure: how to organise code for readability and easy re-use&lt;/li&gt;
&lt;li&gt;Expression: how to improve comprehensibility of code&lt;/li&gt;
&lt;li&gt;Tests: how to maximise their usefulness&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 14:05:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="TennesseeLeeuwenburg"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Model Selection with Python: An Introduction to Hyper Parameter Tuning</title><link href="https://pyvideo.org/pycon-au-2020/model-selection-with-python-an-introduction-to-hyper-parameter-tuning.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Patrick Robotham</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/model-selection-with-python-an-introduction-to-hyper-parameter-tuning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Patrick Robotham&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/LYBU8S"&gt;https://2020.pycon.org.au/program/LYBU8S&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The world of machine learning is like a restaurant that presents an incredibly complex menu. There are so many choices for modelling algorithms and settings that it's hard to keep up.  This talk discusses strategies for handling these choices in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Patrick Robotham&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/LYBU8S"&gt;https://2020.pycon.org.au/program/LYBU8S&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The world of machine learning is like a restaurant that presents an incredibly complex menu. There are so many choices for modelling algorithms and settings that it's hard to keep up.  This talk discusses strategies for handling these choices in a principled, simple manner.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 14:30:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PatrickRobotham"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Model Selection with Python: An Introduction to Hyper Parameter Tuning</title><link href="https://pyvideo.org/pycon-au-2020/model-selection-with-python-an-introduction-to-hyper-parameter-tuning.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Patrick Robotham</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/model-selection-with-python-an-introduction-to-hyper-parameter-tuning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Patrick Robotham&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/LYBU8S"&gt;https://2020.pycon.org.au/program/LYBU8S&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The world of machine learning is like a restaurant that presents an incredibly complex menu. There are so many choices for modelling algorithms and settings that it's hard to keep up.  This talk discusses strategies for handling these choices in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Patrick Robotham&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/LYBU8S"&gt;https://2020.pycon.org.au/program/LYBU8S&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The world of machine learning is like a restaurant that presents an incredibly complex menu. There are so many choices for modelling algorithms and settings that it's hard to keep up.  This talk discusses strategies for handling these choices in a principled, simple manner.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 14:30:00 2020 at Curlyboi&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PatrickRobotham"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Of Django, PostgreSQL schemas, and your multi-million dollar idea</title><link href="https://pyvideo.org/pycon-au-2020/of-django-postgresql-schemas-and-your-multi-million-dollar-idea.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Lorenzo Peña</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/of-django-postgresql-schemas-and-your-multi-million-dollar-idea.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lorenzo Peña&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/CRSJXF"&gt;https://2020.pycon.org.au/program/CRSJXF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Although rough for the world, 2020 is proving a good year (and decade start) for Django. Boring batteries-included frameworks and established monolith makers are shining again, in a world where the hype-enchantment of JavaScript and micro-everything is starting to wear …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lorenzo Peña&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/CRSJXF"&gt;https://2020.pycon.org.au/program/CRSJXF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Although rough for the world, 2020 is proving a good year (and decade start) for Django. Boring batteries-included frameworks and established monolith makers are shining again, in a world where the hype-enchantment of JavaScript and micro-everything is starting to wear off and fall into a more mature position of tradeoffs. After 15 years of life, Django continues to prove solid, battle tested, and very capable of major undertakings in the web arena.&lt;/p&gt;
&lt;p&gt;Over the last decade, the competence of the framework has extended to the SaaS world, through a number of packages that have emerged as viable options for making Django multi-tenant. PostgreSQL concept of _schemas_ has opened a new exploration space for multi-tenancy, by combining the power of RDBMS native isolation with the reduced costs of managing a single database.&lt;/p&gt;
&lt;p&gt;However, nothing comes for free. The ease of using PostgreSQL schemas for multi-tenancy in Django comes at the expense of some challenges that must be overcome in the short, medium, and long term, if the project seeks to survive while gracefully escaling to success.&lt;/p&gt;
&lt;p&gt;In this talk we will cover the major challenges of doing multi-tenancy in Django through PostgreSQL schemas. You will learn the pros and cons of the approach as you move from tutorial-grade projects to massive multi-tenant behemoths. By the end, you will be able to answer whether or not this is going to be a feasible approach for your next multi-million dollar idea.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 17:45:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="LorenzoPeña"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Of Django, PostgreSQL schemas, and your multi-million dollar idea</title><link href="https://pyvideo.org/pycon-au-2020/of-django-postgresql-schemas-and-your-multi-million-dollar-idea.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Lorenzo Peña</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/of-django-postgresql-schemas-and-your-multi-million-dollar-idea.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lorenzo Peña&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/CRSJXF"&gt;https://2020.pycon.org.au/program/CRSJXF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Although rough for the world, 2020 is proving a good year (and decade start) for Django. Boring batteries-included frameworks and established monolith makers are shining again, in a world where the hype-enchantment of JavaScript and micro-everything is starting to wear …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lorenzo Peña&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/CRSJXF"&gt;https://2020.pycon.org.au/program/CRSJXF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Although rough for the world, 2020 is proving a good year (and decade start) for Django. Boring batteries-included frameworks and established monolith makers are shining again, in a world where the hype-enchantment of JavaScript and micro-everything is starting to wear off and fall into a more mature position of tradeoffs. After 15 years of life, Django continues to prove solid, battle tested, and very capable of major undertakings in the web arena.&lt;/p&gt;
&lt;p&gt;Over the last decade, the competence of the framework has extended to the SaaS world, through a number of packages that have emerged as viable options for making Django multi-tenant. PostgreSQL concept of _schemas_ has opened a new exploration space for multi-tenancy, by combining the power of RDBMS native isolation with the reduced costs of managing a single database.&lt;/p&gt;
&lt;p&gt;However, nothing comes for free. The ease of using PostgreSQL schemas for multi-tenancy in Django comes at the expense of some challenges that must be overcome in the short, medium, and long term, if the project seeks to survive while gracefully escaling to success.&lt;/p&gt;
&lt;p&gt;In this talk we will cover the major challenges of doing multi-tenancy in Django through PostgreSQL schemas. You will learn the pros and cons of the approach as you move from tutorial-grade projects to massive multi-tenant behemoths. By the end, you will be able to answer whether or not this is going to be a feasible approach for your next multi-million dollar idea.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 17:45:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="LorenzoPeña"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Oh no! I think my project is outgrowing my Jupyter notebook. How do I survive?</title><link href="https://pyvideo.org/pycon-au-2020/oh-no-i-think-my-project-is-outgrowing-my-jupyter-notebook-how-do-i-survive.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Lydia Peabody</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/oh-no-i-think-my-project-is-outgrowing-my-jupyter-notebook-how-do-i-survive.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lydia Peabody&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/BAAES3"&gt;https://2020.pycon.org.au/program/BAAES3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An example-focused discussion of the pitfalls and strengths of interactive Python notebooks. Topics up for discussion:
Namespace pollution - what is it and why do I care?
Speed - when might my notebook be holding me back?
Pretty pictures - are there times …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lydia Peabody&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/BAAES3"&gt;https://2020.pycon.org.au/program/BAAES3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An example-focused discussion of the pitfalls and strengths of interactive Python notebooks. Topics up for discussion:
Namespace pollution - what is it and why do I care?
Speed - when might my notebook be holding me back?
Pretty pictures - are there times when even for visuals I might skip the notebook?
Transitions - I’m so comfortable using my notebook. How do I change in useful ways without grinding to a halt?
Functional combinations - can there be a happy middle ground between notebooks and scripts?&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 11:00:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="LydiaPeabody"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Oh no! I think my project is outgrowing my Jupyter notebook. How do I survive?</title><link href="https://pyvideo.org/pycon-au-2020/oh-no-i-think-my-project-is-outgrowing-my-jupyter-notebook-how-do-i-survive.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Lydia Peabody</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/oh-no-i-think-my-project-is-outgrowing-my-jupyter-notebook-how-do-i-survive.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lydia Peabody&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/BAAES3"&gt;https://2020.pycon.org.au/program/BAAES3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An example-focused discussion of the pitfalls and strengths of interactive Python notebooks. Topics up for discussion:
Namespace pollution - what is it and why do I care?
Speed - when might my notebook be holding me back?
Pretty pictures - are there times …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lydia Peabody&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/BAAES3"&gt;https://2020.pycon.org.au/program/BAAES3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An example-focused discussion of the pitfalls and strengths of interactive Python notebooks. Topics up for discussion:
Namespace pollution - what is it and why do I care?
Speed - when might my notebook be holding me back?
Pretty pictures - are there times when even for visuals I might skip the notebook?
Transitions - I’m so comfortable using my notebook. How do I change in useful ways without grinding to a halt?
Functional combinations - can there be a happy middle ground between notebooks and scripts?&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 11:00:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="LydiaPeabody"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry></feed>