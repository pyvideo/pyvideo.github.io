<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_andrej-warkentin.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-07-07T00:00:00+00:00</updated><entry><title>How to scare a fish (school)</title><link href="https://pyvideo.org/pydata-berlin-2018/how-to-scare-a-fish-school.html" rel="alternate"></link><published>2018-07-07T00:00:00+00:00</published><updated>2018-07-07T00:00:00+00:00</updated><author><name>Andrej Warkentin</name></author><id>tag:pyvideo.org,2018-07-07:pydata-berlin-2018/how-to-scare-a-fish-school.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Did you ever try to scare a fish by tapping on the glass of an aquarium?
What happens in the fish brain if you do that? What would happen in a
fish school? In my project I tried to answer these questions via
computational modelling and I will tell you how packages such as numba,
pypet, and matplotlib allowed me to efficiently simulate the model and
visualize results in a reproducible way.&lt;/p&gt;
</summary></entry><entry><title>Visualizing FragDenStaat.de</title><link href="https://pyvideo.org/pydata-berlin-2016/visualizing-fragdenstaatde.html" rel="alternate"></link><published>2016-06-01T00:00:00+00:00</published><updated>2016-06-01T00:00:00+00:00</updated><author><name>Andrej Warkentin</name></author><id>tag:pyvideo.org,2016-06-01:pydata-berlin-2016/visualizing-fragdenstaatde.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Berlin 2016&lt;/p&gt;
&lt;p&gt;FragDenStaat.de is a website that helps people to make freedom of information requests in Germany. Starting in 2011, they collected over 12000 of these requests. Using pandas and matplotlib, I tried to bring life into this interesting data set.&lt;/p&gt;
&lt;p&gt;Motivation&lt;/p&gt;
&lt;p&gt;FragDenStaat.de offers an API with which you can scrape more than 12000 public freedom of information requests. Each request contains information about: when it was sent, to which public body and to which jurisdiction it was sent, how long it took the public body to complete the request, whether the request was successful and if not, why so. Visualizing all these aspects of the data set might lead to new insights about this transparency process.&lt;/p&gt;
&lt;p&gt;Data preparation&lt;/p&gt;
&lt;p&gt;How I scraped the data set and organized it using pandas.&lt;/p&gt;
&lt;p&gt;Data visualization&lt;/p&gt;
&lt;p&gt;How I visualized the data set using pandas and matplotlib.&lt;/p&gt;
&lt;p&gt;Visualizations&lt;/p&gt;
&lt;p&gt;The results of my work so far.&lt;/p&gt;
&lt;p&gt;Materials available here: &lt;a class="reference external" href="https://github.com/awakenting/fds-statistics"&gt;https://github.com/awakenting/fds-statistics&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>