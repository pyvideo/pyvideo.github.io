<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ian-lewis.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-09-21T00:00:00+00:00</updated><entry><title>Django Lessons Learned @BeProud</title><link href="https://pyvideo.org/pycon-japan-2012/django-lessons-learned-beproud.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>イアン ルイス</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/django-lessons-learned-beproud.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;3年以上Djangoを使って開発をしてきたBeProudで、 経験したこと、勉強になったことを共有&lt;/p&gt;
</summary><category term="django"></category></entry><entry><title>Webフレームワークパネル</title><link href="https://pyvideo.org/pycon-japan-2012/webhuremuwakupaneru.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>Yoshifumi Yamaguchi</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/webhuremuwakupaneru.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;去年好評だったパネルディスカッションを今年も行います。
今年はFlaskの作者であり基調講演を行うArmin Ronacherを初めとした各フレームワークの第一人者を迎え、 Flask, Django, Pyramid, Google App Engine の利点と欠点を赤裸々に討論して頂きます。
この討論を聴いて頂ければ、状況に応じたwebフレームワークの選択が出来るようになるはずです。&lt;/p&gt;
</summary><category term="panel"></category><category term="framework"></category><category term="flask"></category><category term="django"></category><category term="pyramid"></category><category term="googleappengine"></category></entry><entry><title>Building a Scalable Python gRPC Service using Kubernetes</title><link href="https://pyvideo.org/pycon-korea-2015/building-a-scalable-python-grpc-service-using-kubernetes.html" rel="alternate"></link><published>2015-08-30T00:00:00+00:00</published><updated>2015-08-30T00:00:00+00:00</updated><author><name>Ian Lewis</name></author><id>tag:pyvideo.org,2015-08-30:pycon-korea-2015/building-a-scalable-python-grpc-service-using-kubernetes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;gRPC is a new high performance, open source, general RPC framework that
uses the HTTP/2 standard. The gRPC framework allows you to create small
scalable services that fit well into a service oriented architecture.
Kubernetes is a cluster manager that allows you to create services that
can be scaled easily. Service oriented architecture is a key part of how
many companies, like Google, operate their infrastructure to provide
robust, and highly available services that operate at a consistently
high level of performance for end users.&lt;/p&gt;
&lt;p&gt;In this talk I will talk about how to use Python to create a scalable
gRPC service and then how to actually manage and scale it using the
Kubernetes cluster manager. Using Python allows you to make use of the
extensive set of Python libraries publicly available. Python is a
flexible language that can be very efficient when tuned properly.&lt;/p&gt;
</summary></entry><entry><title>Deep Learning with Python &amp; TensorFlow</title><link href="https://pyvideo.org/pycon-japan-2016/deep-learning-with-python-tensorflow.html" rel="alternate"></link><published>2016-09-21T00:00:00+00:00</published><updated>2016-09-21T00:00:00+00:00</updated><author><name>Ian Lewis</name></author><id>tag:pyvideo.org,2016-09-21:pycon-japan-2016/deep-learning-with-python-tensorflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TensorFlow is a new Open Source framework created at Google for building Deep Learning applications. I will discuss how it compares to other Python machine learning libraries like Theano or Chainer. Finally, I will discuss how trained TensorFlow models could be deployed into a production system using TensorFlow Serve.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Python has lots of scientific, data analysis, and machine learning libraries. But there are many problems. Which do you use? How do they compare to each other? How can you use a model that has been trained in your production application?&lt;/p&gt;
&lt;p&gt;TensorFlow is a new Open Source framework created at Google for building Deep Learning applications. Tensorflow allows you to construct easy to understand data flow graphs which form a mathematical and logical pipeline. Creating data flow graphs allow easier visualization of complicated algorithms as well as running the training operations over multiple hardware GPUs.&lt;/p&gt;
&lt;p&gt;Tensorflow data flow graphs and operations are written in Python. In this talk I will discuss how you can use TensorFlow to create Deep Learning applications. I will discuss how it compares to other Python machine learning libraries like Theano or Chainer. Finally, I will discuss how trained TensorFlow models could be deployed into a production system using TensorFlow Serve.&lt;/p&gt;
</summary><category term="tensorflow"></category><category term="deep learning"></category></entry><entry><title>Deep Learning with Python &amp; TensorFlow</title><link href="https://pyvideo.org/pycon-apac-2016/deep-learning-with-python-tensorflow.html" rel="alternate"></link><published>2016-08-26T00:00:00+00:00</published><updated>2016-08-26T00:00:00+00:00</updated><author><name>Ian Lewis</name></author><id>tag:pyvideo.org,2016-08-26:pycon-apac-2016/deep-learning-with-python-tensorflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;발표자: Ian Lewis / ianlewis
슬라이드: &lt;a class="reference external" href="https://github.com/pythonkr/pyconapac-2016-files/raw/master/20160813-103-17-IanLewis.pdf"&gt;https://github.com/pythonkr/pyconapac-2016-files/raw/master/20160813-103-17-IanLewis.pdf&lt;/a&gt;&lt;/p&gt;
</summary><category term="deep learning"></category><category term="tensorflow"></category></entry><entry><title>Deep Learning with Python &amp; TensorFlow</title><link href="https://pyvideo.org/europython-2016/deep-learning-with-python-tensorflow.html" rel="alternate"></link><published>2016-08-05T00:00:00+00:00</published><updated>2016-08-05T00:00:00+00:00</updated><author><name>Ian Lewis</name></author><id>tag:pyvideo.org,2016-08-05:europython-2016/deep-learning-with-python-tensorflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ian Lewis - Deep Learning with Python &amp;amp; TensorFlow
[EuroPython 2016]
[22 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/deep-learning-with-python-tensorflow"&gt;https://ep2016.europython.eu//conference/talks/deep-learning-with-python-tensorflow&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Python has lots of scientific, data analysis, and machine learning
libraries. But there are many problems when starting out on a machine
learning project. Which library do you use? How do they compare to
each other? How can you use a model that has been trained in your
production app? In this talk I will discuss how you can use TensorFlow
to create Deep Learning applications. I will discuss how it compares
to other Python machine learning libraries, and how to deploy into
production.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Python has lots of scientific, data analysis, and machine learning
libraries. But there are many problems when starting out on a machine
learning project. Which library do you use? How do they compare to
each other? How can you use a model that has been trained in your
production application?&lt;/p&gt;
&lt;p&gt;TensorFlow is a new Open-Source framework created at Google for
building Deep Learning applications. Tensorflow allows you to
construct easy to understand data flow graphs in Python which form a
mathematical and logical pipeline. Creating data flow graphs allow
easier visualization of complicated algorithms as well as running the
training operations over multiple hardware GPUs in parallel.&lt;/p&gt;
&lt;p&gt;In this talk I will discuss how you can use TensorFlow to create Deep
Learning applications. I will discuss how it compares to other Python
machine learning libraries like Theano or Chainer. Finally, I will
discuss how trained TensorFlow models could be deployed into a
production system using TensorFlow Serve.&lt;/p&gt;
</summary><category term="tensorflow"></category><category term="deep learning"></category></entry><entry><title>R0 DAY2-02 Building a Scalable Python gRPC Service using Kubernetes - Ian Lewis (PyCon APAC 2015)</title><link href="https://pyvideo.org/pycon-apac-2015/r0-day2-02-building-a-scalable-python-grpc-service.html" rel="alternate"></link><published>2015-08-24T00:00:00+00:00</published><updated>2015-08-24T00:00:00+00:00</updated><author><name>Ian Lewis</name></author><id>tag:pyvideo.org,2015-08-24:pycon-apac-2015/r0-day2-02-building-a-scalable-python-grpc-service.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Ian Lewis&lt;/p&gt;
&lt;p&gt;gRPC and Kubernetes are two new technologies that make it easy to manage robust, highly available web services that talk to each other using a fast, flexible protocol. Python is well suited to building the logic for these kind of services. Python is a flexible language that can be highly efficient when tuned properly and allows you to make use of the extensive set of Python libraries that are publicly available.&lt;/p&gt;
&lt;p&gt;In this talk I will talk about how to combine these technologies and use Python to create a scalable gRPC service and then how to actually manage and scale it using the Kubernetes cluster manager.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Ian Lewis is a Developer Advocate working at Google on the Google Cloud Platform Team in Tokyo Japan. He is an long time Python user and enthusiast. He developed the IT events service connpass.com using Python and Django, and continues to promote Python.&lt;/p&gt;
&lt;p&gt;Ian is a founder, and Vice Chair of the Board, for the PyCon JP management team. Ian helps with managing the website, and media relations (Twitter, Facebook, online magazine articles, etc.) for the conference.&lt;/p&gt;
&lt;p&gt;個人網頁連結 &lt;a class="reference external" href="http://www.ianlewis.org/"&gt;http://www.ianlewis.org/&lt;/a&gt;
Twitter &amp;#64;IanMLewis
組織/公司 Google Inc.
頭銜 Developer Advocate&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tw.pycon.org/2015apac/zh/program/65"&gt;https://tw.pycon.org/2015apac/zh/program/65&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>