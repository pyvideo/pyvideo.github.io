<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_advanced.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-10-08T00:00:00+00:00</updated><entry><title>Beyond Bag of Words A Practitioner's Guide to Advanced NLP</title><link href="https://pyvideo.org/pydata-dc-2016/beyond-bag-of-words-a-practitioners-guide-to-advanced-nlp.html" rel="alternate"></link><published>2016-10-08T00:00:00+00:00</published><updated>2016-10-08T00:00:00+00:00</updated><author><name>Ariel M'ndange-Pfupfu</name></author><id>tag:pyvideo.org,2016-10-08:pydata-dc-2016/beyond-bag-of-words-a-practitioners-guide-to-advanced-nlp.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;We offer a foundation in building intelligent business applications using machine learning, walking you through all the steps to prototyping and production—data cleaning, feature engineering, model building and evaluation, and deployment—and diving into an application for anomaly detection and a personalized recommendation engine. All concepts will be presented with example code in Python.&lt;/p&gt;
</summary><category term="advanced"></category></entry><entry><title>statsmodels</title><link href="https://pyvideo.org/scipy-2012/statsmodels.html" rel="alternate"></link><published>2012-07-17T00:00:00+00:00</published><updated>2012-07-17T00:00:00+00:00</updated><author><name>Skipper Seabold</name></author><id>tag:pyvideo.org,2012-07-17:scipy-2012/statsmodels.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will give users an overview of the capabilities of
statsmodels, including how to conduct exploratory data analysis, fit
statistical models, and check that the modeling assumptions are met.&lt;/p&gt;
&lt;p&gt;The use of Python in data analysis and statistics is growing rapidly. It
is not uncommon now for researchers to conduct data cleaning steps in
Python and then move to some other software to estimate statistical
models. Statsmodels, however, is a Python module that attempts to bridge
this gap and allow users to estimate statistical models, perform
statistical tests, and conduct data exploration in Python. Researchers
across fields such as economics and the social sciences to finance and
engineering may find that statsmodels meets their needs for statistical
computing and data analysis in Python.&lt;/p&gt;
&lt;p&gt;All examples in this tutorial will use real data. Attendees are expected
to have some familiarity with statistical methods.&lt;/p&gt;
&lt;p&gt;With this knowledge attendees will be ready to jump in and use Python
for applied statistical analysis and will have an idea how they can
extend statsmodels for their own needs.&lt;/p&gt;
</summary><category term="advanced"></category></entry><entry><title>Time Series Data Analysis with pandas</title><link href="https://pyvideo.org/scipy-2012/time-series-data-analysis-with-pandas.html" rel="alternate"></link><published>2012-07-17T00:00:00+00:00</published><updated>2012-07-17T00:00:00+00:00</updated><author><name>Wes McKinney</name></author><id>tag:pyvideo.org,2012-07-17:scipy-2012/time-series-data-analysis-with-pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial, I'll give a brief overview of pandas basics for new
users, then dive into the nuts of bolts of manipulating time series data
in memory. This includes such common topics date arithmetic, alignment
and join / merge methods, resampling and frequency conversion, time zone
handling, moving window functions like moving mean and standard
deviation. A strong focus will be placed on working with large time
series efficiently using array manipulations. I'll also illustrate
visualization tools for slicing and dicing time series to make
informative plots. There will be several example data sets taken from
finance, economics, ecology, web analytics, or other areas.&lt;/p&gt;
&lt;p&gt;The target audience for the tutorial includes individuals who already
work regularly with time series data and are looking to acquire
additional skills and knowledge as well as users with an interest in
data analysis who are new to time series. You will be expected to be
comfortable with general purpose Python programming and have a modest
amount of experience using NumPy. Prior experience with the basics of
pandas's data structures will also be helpful.&lt;/p&gt;
</summary><category term="advanced"></category></entry><entry><title>Advanced Matplotlib</title><link href="https://pyvideo.org/scipy-2012/advanced-matplotlib.html" rel="alternate"></link><published>2012-07-16T00:00:00+00:00</published><updated>2012-07-16T00:00:00+00:00</updated><author><name>Ryan May</name></author><id>tag:pyvideo.org,2012-07-16:scipy-2012/advanced-matplotlib.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Matplotlib is one of the main plotting libraries in use within the
scientific Python community. This tutorial covers advanced features of
the Matplotlib library, including many recent additions: laying out
axes, animation support, Basemap (for plotting on maps), and other
tweaks for creating aesthetic plots. The goal of this tutorial is to
expose attendees to several of the chief sub- packages within
Matplotlib, helping to ensure that users maximize the use of the full
capabilities of the library. Additionally, the attendees will be run
through a 'grab-bag' of tweaks for plots that help to increase the
aesthetic appeal of created figures. Attendees should be familiar with
creating basic plots in Matplotlib as well as basic use of NumPy for
manipulating data.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://github.com/dopplershift%20/Python-Tutorials"&gt;iPython notebooks used in the
tutorial&lt;/a&gt;&lt;/p&gt;
</summary><category term="advanced"></category><category term="matplotlib"></category><category term="tutorial"></category></entry><entry><title>scikit-learn</title><link href="https://pyvideo.org/scipy-2012/scikit-learn.html" rel="alternate"></link><published>2012-07-16T00:00:00+00:00</published><updated>2012-07-16T00:00:00+00:00</updated><author><name>Jake Vanderplas</name></author><id>tag:pyvideo.org,2012-07-16:scipy-2012/scikit-learn.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Machine Learning has been getting a lot of buzz lately, and many
software libraries have been created which implement these routines.
scikit-learn is a python package built on numpy and scipy which
implements a wide variety of machine learning algorithms, useful for
everything from facial recognition to optical character recognition to
automated classification of astronomical images. This tutorial will
begin with a crash course in machine learning and introduce participants
to several of the most common learning techniques for classification,
regression, and visualization. Building on this background, we will
explore several applications of these techniques to scientific data --
in particular, galaxy, star, and quasar data from the Sloan Digital Sky
Survey -- and learn some basic astrophysics along the way. From these
examples, tutorial participants will gain knowledge and experience
needed to successfully solve a variety of machine learning and
statistical data mining problems with python.&lt;/p&gt;
</summary><category term="advanced"></category></entry><entry><title>PyCon 2010:Advanced SQL Alchemy</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010-advanced-sql-alchemy.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Michael Bayer</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010-advanced-sql-alchemy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Advanced SQLAlchemy&lt;/p&gt;
&lt;p&gt;Presented by Michael Bayer&lt;/p&gt;
&lt;p&gt;SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the
full power of SQL while remaining easy to use for the basics, and is
flexible enough to work with existing database schemas as well as fresh
designs. SQLAlchemy is used in production by leading Python web
frameworks Pylons and TurboGears as well as many other web and non-web
developers.&lt;/p&gt;
&lt;p&gt;This tutorial discusses current data mapping techniques, advanced Query
techniques, Session/transaction usage, and maximizing schema usage with
SQLAlchemy's event model.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Python experience: intermediate. You should already have some hands-on
experience with Python and be comfortable reading modern Python code.&lt;/p&gt;
&lt;p&gt;SQL experience: intermediate. We will use subselects and outer joins as
part of the SQL layer.&lt;/p&gt;
&lt;p&gt;ORM experience: prior experience with SQLAlchemy is recommended.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;p&gt;Declarative Mapping&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Initial configuration&lt;/li&gt;
&lt;li&gt;Basic mapping&lt;/li&gt;
&lt;li&gt;Building a many-to-many relation&lt;/li&gt;
&lt;li&gt;Using late-evaluated configuration arguments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Advanced queries&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Selecting objects, selecting columns&lt;/li&gt;
&lt;li&gt;Thinking generatively&lt;/li&gt;
&lt;li&gt;Joining like a Pro&lt;/li&gt;
&lt;li&gt;Power Eager Loading&lt;/li&gt;
&lt;li&gt;Selecting from Anything&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Session Techniques&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Transaction lifecycle&lt;/li&gt;
&lt;li&gt;Scoping objects in and out of caches using merge()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inheritance Mapping&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Single Table Inheritance&lt;/li&gt;
&lt;li&gt;Joined Table Inheritance&lt;/li&gt;
&lt;li&gt;High Level/Low Level Joined Queries&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Extending SQL&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Creating new SQL constructs&lt;/li&gt;
&lt;li&gt;Creating new DDL constructs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Extending the ORM&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Using SessionExtension to populate denormalized views&lt;/li&gt;
&lt;li&gt;Subclassing Query to Suit Your Needs&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="advanced"></category><category term="pycon"></category><category term="pycon2010"></category><category term="sqlalchemy"></category><category term="tutorial"></category></entry></feed>