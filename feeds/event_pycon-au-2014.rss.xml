<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 11 Aug 2014 00:00:00 +0000</lastBuildDate><item><title>(Benford's) Law and Order (Fraud) by Rhys Elsmore</title><link>https://pyvideo.org/pycon-au-2014/benfords-law-and-order-fraud-by-rhys-elsmore.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;On the internet, fraudulent and abusive behavior is considered
especially heinous. At Heroku, the dedicated detectives who investigate
these vicious felonies are members of an elite squad armed with large
amounts of data and spare CPU cycles. These are their stories.&amp;quot;&lt;/p&gt;
&lt;p&gt;Bad behavior can wreak havoc on your web application. It might be
mass-signups, fraudulent orders, spammy posts, right up to automated
bots designed to work around restrictions you have set in place; this
can cost you time, resources, and lots of money. All is not lost though.
Despite the ongoing efforts of abusers, their activity still leaves
fingerprints and clues, which you can use to your advantage.&lt;/p&gt;
&lt;p&gt;This talk is a 101 introduction to some of the methods which you can use
to separate good from bad users using a combination of data mining,
statistics, and some some basic machine learning. Basically, I want to
get you thinking like an internet detective.&lt;/p&gt;
&lt;p&gt;Some of the topics I will be covering include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Collecting and preparing data sources.&lt;/li&gt;
&lt;li&gt;Effective methods for classifying existing users.&lt;/li&gt;
&lt;li&gt;Feature extracting; what works and what doesn't.&lt;/li&gt;
&lt;li&gt;Analyzing user-provided data to profile your users, and weed out the
bad operators.&lt;/li&gt;
&lt;li&gt;Determining a user's intentions by looking at their access patterns.&lt;/li&gt;
&lt;li&gt;Making use of 'outliers' to find suspicious users and transactions.&lt;/li&gt;
&lt;li&gt;Stopping bad users before they can wreak havoc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As this is a 101 topic I will provide some basic examples, as well as
links to more in-depth resources for further reading. I would recommend
this talk to developers of web applications, especially those with a
large number of users, the ability to process credit cards, or with a
'free' offering. Attendees should have a basic understanding of topics
such as SQL, Pandas, and some basic understanding of mathematics and
statistics, although this is not essential as I will be providing links
to further reading.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rhys Elsmore</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/benfords-law-and-order-fraud-by-rhys-elsmore.html</guid></item><item><title>Building Better Web APIs by HawkOwl</title><link>https://pyvideo.org/pycon-au-2014/building-better-web-apis-by-hawkowl.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web APIs are how much of the modern web speaks - services speaking HTTP
and JSON are ubiquitous, and nearly everything from your phone to your
TV interacts with one of them. We'll go over how APIs are structured and
versioned, why you should validate your data, and why you should have
them in the first place -- and what other best practices are when
creating them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amber Brown ("HawkOwl")</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/building-better-web-apis-by-hawkowl.html</guid></item><item><title>Caching: A trip down the rabbit hole by Tom Eastman</title><link>https://pyvideo.org/pycon-au-2014/caching-a-trip-down-the-rabbit-hole-by-tom-eastm.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The question: How do I make my website fast?&lt;/p&gt;
&lt;p&gt;If that sounds like a loaded question to you: good, we're on the same
page.&lt;/p&gt;
&lt;p&gt;In this talk I will give you a full overview of one of the most powerful
and headache-inducing tools in the web-developer's kit: caching.&lt;/p&gt;
&lt;p&gt;This is a talk for all experience levels, from beginner to seriously
brain-melty. The code and scenarios we'll be exploring are within the
context of a Django project, but the principles are applicable to all of
web development.&lt;/p&gt;
&lt;p&gt;We'll begin our journey in the light, warm land of web browser caches:
learning how you can make your users' web browsers do all the work for
you. Making your site feel rocket-fast and responsive with little more
than some finely crafted HTTP response headers.&lt;/p&gt;
&lt;p&gt;From there, we'll begin our descent into the underworld of server-level
caching, using reverse-proxies such as Varnish or Nginx that shield the
application code from having to do any work. What they do, how they can
help, and more important -- when do they &lt;em&gt;not&lt;/em&gt; help, and when do you
have to go deeper.&lt;/p&gt;
&lt;p&gt;Finally we'll explore the dark art of application-level caching. Whether
it's caching whole responses, partial responses, preventing repetitive
SQL queries or expensive API response serialization calls. And, if our
brains haven't exploded yet, we might throw in some asynchronous
cached-view-generation just for good measure.&lt;/p&gt;
&lt;p&gt;Whether you're a hobbyist or a grizzled veteran, you should come out of
this talk with a few new tricks up your sleeve for making all your sites
do more with less work.&lt;/p&gt;
&lt;p&gt;Expect references from -- depending on mood -- Alice in Wonderland, The
Matrix, or Dante Alighieri's &amp;quot;Inferno&amp;quot;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Eastman</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/caching-a-trip-down-the-rabbit-hole-by-tom-eastm.html</guid></item><item><title>Clustering of high-content screen images to discover off-target phenotypes by Juan Nunez-Iglesias</title><link>https://pyvideo.org/pycon-au-2014/clustering-of-high-content-screen-images-to-disco.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Nunez-Iglesias</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/clustering-of-high-content-screen-images-to-disco.html</guid></item><item><title>Continuous Integration Testing for Your Database Migrations by Joshua Hesketh</title><link>https://pyvideo.org/pycon-au-2014/continuous-integration-testing-for-your-database.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is a talk about how OpenStack does database migration continuous
integration, and how other projects might be able to learn from what
we've done.&lt;/p&gt;
&lt;p&gt;OpenStack is an interesting project in that it runs in a variety of
different scale scenarios. There are very small deployments of only a
few machines, and large public clouds with thousands of machines. The
OpenStack project takes Continuous Integration (CI) very seriously, and
runs a suite of unit and integration tests on all proposed patches.&lt;/p&gt;
&lt;p&gt;One thing we weren't very good at testing though, was database upgrades.
We have unit tests for many of them, but we don't know how these
upgrades affect real users in the field. As a response, we worked on
adding database migration testing to our CI environment. This new test
infrastructure is open source
(&lt;a class="reference external" href="https://github.com/stackforge/turbo-hipster"&gt;https://github.com/stackforge/turbo-hipster&lt;/a&gt;), and extensible. It
currently runs tests on smaller databases, as well as a largish real
user database. It has already caught two significant performance
problems in database migrations.&lt;/p&gt;
&lt;p&gt;This talk will cover how we built the test infrastructure (in python!).
It will cover what we've learned from the 12 months of running it - time
that we'll have had by the conference day. It will tell a story about
some of the bugs we've found and how we fixed them. ..&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joshua Hesketh</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/continuous-integration-testing-for-your-database.html</guid></item><item><title>devpi: Your One Stop Cheese Shop by Richard Jones</title><link>https://pyvideo.org/pycon-au-2014/devpi-your-one-stop-cheese-shop-by-richard-jones.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern Python developers depend on a large number of 3rd party packages.
This in turn introduces a problem: how to manage those packages for
rapid, reliable deployment in a world where the central repository -
PyPi (the Cheese Shop) - is out of their control. Additionally, private
packages may be developed which need to seamlessly be integrated into
the deployment systems.&lt;/p&gt;
&lt;p&gt;In this talk I will present devpi, a PyPI (Cheese Shop) server and
packaging/testing/release tool. I will cover its reasons for existing,
its many capabilities and configuration for some common scenarios.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Jones</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/devpi-your-one-stop-cheese-shop-by-richard-jones.html</guid></item><item><title>Grug make fire! Grug make wheel! by Russell Keith-Magee</title><link>https://pyvideo.org/pycon-au-2014/grug-make-fire-grug-make-wheel-by-russell-keith.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In prehistoric times, Python developers were faced with a confusing
landscape of tools and conflicting advice when they wanted to package
their Python modules for public release. As a result of all the
distutils/distribute/setuptools changes over the last 5 years, there's
lots of confusion about what you should do when preparing a package for
distribution - and even some confusion about what the purpose of
packaging is in the first place.&lt;/p&gt;
&lt;p&gt;After a mammoth effort from a number of volunteers in the community,
over several years, this situation is changing. It's taken a while, but
the Python community has invented the wheel!&lt;/p&gt;
&lt;p&gt;In this talk, we'll look at the process that has led to the development
of the wheel format. But more importantly, we'll look at the steps you
need to take when packaging a module of Python code for others to use,
and get it on the Python Package Index (PyPI).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Russell Keith-Magee</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/grug-make-fire-grug-make-wheel-by-russell-keith.html</guid></item><item><title>How do debug tool bars for web applications work? by Graham Dumpleton</title><link>https://pyvideo.org/pycon-au-2014/how-do-debug-tool-bars-for-web-applications-work.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When your production web application breaks, working out what went wrong
can be hard. Information from log messages and details of any Python
exceptions which occurred, along with other application performance data
can help to identify the issue, but not always. Often you will need to
fall back to a development or test environment and hope you can
replicate the problem and then debug the issue from there.&lt;/p&gt;
&lt;p&gt;The purpose of this talk is to dive in and look at one class of tools
that can be used in helping debug web applications. Specifically, it
will look at web application tools such as the Django debug tool bar.&lt;/p&gt;
&lt;p&gt;Rather than simply look at how you might use such a tool though, this
talk will look at how these debug tool bars are actually implemented,
how they hook into your web application, how they capture the
information that they do, as well as how they can be extended to add new
functionality.&lt;/p&gt;
&lt;p&gt;The limitations on these tools as far as performance overhead, security
of data etc, which nearly aways lead to them only being recommended for
development environments, will also be discussed.&lt;/p&gt;
&lt;p&gt;At the same time though, this notion that they are only suitable for
development environments will also be challenged by looking at how a
tool such as the New Relic Python agent, which implements application
performance monitoring, overcomes such limitations to provide a
production grade solution.&lt;/p&gt;
&lt;p&gt;Are there lessons to be learnt from how the New Relic Python agent works
which could drive improvements to existing web application debug tool
bars? Could the New Relic Python agent itself be used as a base for a
new generation of debug tool bars which combine an ability to debug a
web application, even in a production environment, with the ability to
monitor the performance of the web application over time?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Dumpleton</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/how-do-debug-tool-bars-for-web-applications-work.html</guid></item><item><title>Multiplying really really big matrices by Paul Leopardi</title><link>https://pyvideo.org/pycon-au-2014/multiplying-really-really-big-matrices-by-paul-le.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Leopardi</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/multiplying-really-really-big-matrices-by-paul-le.html</guid></item><item><title>OpenStack MiniConf: Changing the world with ZeroVM and Swift by Jakub Krajcovic</title><link>https://pyvideo.org/pycon-au-2014/openstack-miniconf-changing-the-world-with-zerov.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jakub Krajcovic</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/openstack-miniconf-changing-the-world-with-zerov.html</guid></item><item><title>OpenStack Miniconf: Deploy into an OpenStack cloud using Solum by Angus Salkeld</title><link>https://pyvideo.org/pycon-au-2014/openstack-miniconf-deploy-into-an-openstack-clou.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Angus Salkeld</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/openstack-miniconf-deploy-into-an-openstack-clou.html</guid></item><item><title>OpenStack MiniConf: Large Scale Identification of Race Conditions by Joseph Gordon (HP)</title><link>https://pyvideo.org/pycon-au-2014/openstack-miniconf-large-scale-identification-of.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joseph Gordon</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/openstack-miniconf-large-scale-identification-of.html</guid></item><item><title>OpenStack MiniConf: Python Build Reasonableness and Semantic Versioning by Robert Collins (HP)</title><link>https://pyvideo.org/pycon-au-2014/openstack-miniconf-python-build-reasonableness-a.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Collins</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/openstack-miniconf-python-build-reasonableness-a.html</guid></item><item><title>OpenStack security by Grant Murphy (Red Hat)</title><link>https://pyvideo.org/pycon-au-2014/openstack-security-by-grant-murphy-red-hat.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Grant Murphy</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/openstack-security-by-grant-murphy-red-hat.html</guid></item><item><title>Pandas 101 by Lex Hider</title><link>https://pyvideo.org/pycon-au-2014/pandas-101-by-lex-hider.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lex Hider</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/pandas-101-by-lex-hider.html</guid></item><item><title>Science MiniConf: Lost in High-dimensional Space? Python to the Rescue! by Jay Larson</title><link>https://pyvideo.org/pycon-au-2014/science-miniconf-lost-in-high-dimensional-space.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jay Larson</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/science-miniconf-lost-in-high-dimensional-space.html</guid></item><item><title>Science MiniConf: Monte Carlo Business Case Analysis with pandas by Arthur Street</title><link>https://pyvideo.org/pycon-au-2014/science-miniconf-monte-carlo-business-case-analy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is increasingly becoming a standard tool in scientific computing.
Could it also have a role in the CFO's office?&lt;/p&gt;
&lt;p&gt;CFOs regularly need to analyse the impact of different projects or
business cases, and they almost universally do this using spreadsheets.
Spreadsheets have many advantages - they have a low barrier to entry and
are easy for most people to understand. However as they get more
complicated, disadvantages start to appear; in particular, they can be
inflexible and highly error-prone.&lt;/p&gt;
&lt;p&gt;In this talk I will explain how business case analysis can be done using
python and pandas. The python version has several advantages over
spreadsheets: it is more flexible as the business structure changes;
formulas only need to be changed in a single place, reducing the chance
of error; and report-ready plots are quick to produce. I'll go through a
way of structuring the problem for some simple business logic, and ways
to visualise the results.&lt;/p&gt;
&lt;p&gt;The example I’ll discuss is made more interesting and useful by being
“Monte Carlo” analysis. Traditional business case analysis takes single
point estimates of sales, costs and prices, and calculates a single
profit forecast. Everybody knows the profit will not turn out to be
exactly equal to the forecast. But it is not clear what the range of
profits might be, or how likely a loss is. &amp;quot;Monte Carlo&amp;quot; analysis solves
this problem by allowing ranges or distributions on the assumptions; the
forecast is then a range of outcomes.&lt;/p&gt;
&lt;p&gt;In short, I’ll demonstrate how you can use pandas to analyse high-impact
business decisions, and dodge many of the problems of using
spreadsheets.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Arthur Street</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/science-miniconf-monte-carlo-business-case-analy.html</guid></item><item><title>Science MiniConf: Python for Bioinformatics by Clare Sloggett</title><link>https://pyvideo.org/pycon-au-2014/science-miniconf-python-for-bioinformatics-by-cl.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Clare Sloggett</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/science-miniconf-python-for-bioinformatics-by-cl.html</guid></item><item><title>Science MiniConf: Python, Pyramid, and Embedded Devices by Justin Clacherty</title><link>https://pyvideo.org/pycon-au-2014/science-miniconf-python-pyramid-and-embedded-d.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Justin Clacherty</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/science-miniconf-python-pyramid-and-embedded-d.html</guid></item><item><title>Science Miniconf: Welcome</title><link>https://pyvideo.org/pycon-au-2014/science-miniconf-welcome-by-graeme-cross.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Welcome to the Science and Data miniconf. It focuses on how Python can
be best used in the science and research fields.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ed Schofield</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/science-miniconf-welcome-by-graeme-cross.html</guid></item><item><title>Seeing with Python by Mark Rees</title><link>https://pyvideo.org/pycon-au-2014/seeing-with-python-by-mark-rees.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In 2013 I purchased a Ninja Block (&lt;a class="reference external" href="http://ninjablocks.com/"&gt;http://ninjablocks.com/&lt;/a&gt;) and wanted
to add a camera based sensor to it. So began my adventures in computer
vision using python. The talk will discuss the various libraries
(including PyOpenCV &amp;amp; SimpleCV ) available for python to perform CV
tasks like motion detection, object tracking &amp;amp; facial recognition. As my
goals for the camera sensor underwent &amp;quot;feature creep&amp;quot; the project
required it's own dedicated processing power, so a BeagleBone Black &amp;amp;
later a Raspberry Pi were purchased and the project became a IoT device.
I will also share my experiences with developing python CV solutions ARM
based computers. If the demo gods are willing, code examples will be
demonstrated.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Rees</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/seeing-with-python-by-mark-rees.html</guid></item><item><title>Software Carpentry in Australia: current activity and future directions by Damien Irving</title><link>https://pyvideo.org/pycon-au-2014/software-carpentry-in-australia-current-activity.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Software Carpentry is a volunteer organisation that teaches basic
software skills to researchers in science, engineering and medicine.
Supported by the Mozilla Science Lab, it runs two-day bootcamps all over
the world, provides open access material for self-paced instruction, and
runs a training program for aspiring instructors. The core two-day
curriculum includes the Unix shell (and how to automate repetitive
tasks); Python or R (and how to grow a program in a modular, testable
way); Git and GitHub (and how to track and share work efficiently); and
SQL (and the difference between structured and unstructured data).&lt;/p&gt;
&lt;p&gt;While the organisation has been around for over a decade, it had a
breakout year in 2013. The number of qualified instructors swelled to
over 100 and collectively they ran over 100 events for over 4300
researchers in a dozen countries. To kick things off in Australia, the
founder of Software Carpentry (Dr. Greg Wilson) visited Sydney and
Melbourne in February 2013 to host the first ever bootcamps outside of
Europe and North America. Since that visit five local instructors have
been trained up and have delivered an additional ten bootcamps around
the country.&lt;/p&gt;
&lt;p&gt;This presentation will review the first year of Software Carpentry
activities in Australia, with a particular focus on the key lessons
learned in teaching computational best practices to the research
community. Future plans and directions will also be outlined, including
an overview of an innovative new project called the Research Bazaar.
Coordinated out of The University of Melbourne, this project has started
offering regular bootcamps to researchers in the Melbourne area and
looks set to inspire widespread institutional support for bootcamp
delivery. The Software Carpentry teaching materials are also undergoing
rapid development, with work on an advanced curriculum and new lessons
on “data carpentry” already underway. There are very few examples of
open, collaborative lesson development in the education sector, so the
application of routine software development practices in this space
(e.g. version control, pull requests, and the progressive release of new
versions) is somewhat ground breaking.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damien Irving</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/software-carpentry-in-australia-current-activity.html</guid></item><item><title>Sounds good! by Sebastian Beswick</title><link>https://pyvideo.org/pycon-au-2014/sounds-good-by-sebastian-beswick.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you know if it’s worth upgrading your Spotify account to stream songs
at 320kb/s?&lt;/p&gt;
&lt;p&gt;An understanding of the fundamentals of computer sound is essential for
the well-rounded IT professional. Audio is a field that is teeming with
jargon, but it doesn’t have to be so scary! In this session we’ll go
back to basics and take a look at the core components of sound,
including how we (as humans) perceive sounds, and how we can represent
them within a computer. By the end of this session, you'll know enough
to go home and create your own simple synthesiser!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Beswick</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/sounds-good-by-sebastian-beswick.html</guid></item><item><title>Tempest: OpenStack Integrated Testing by Matthew Treinish (HP)</title><link>https://pyvideo.org/pycon-au-2014/tempest-openstack-integrated-testing-by-matthew.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthew Treinish</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/tempest-openstack-integrated-testing-by-matthew.html</guid></item><item><title>The Curse of the Django Podcast by Elena Williams</title><link>https://pyvideo.org/pycon-au-2014/the-curse-of-the-django-podcast-by-elena-williams.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Django community is full of amazing, enthusiastic and multi-talented
individuals who love to take on exciting new extra-curricular projects
in their massive amounts of spare time.&lt;/p&gt;
&lt;p&gt;A Django podcast is an excellent example of this kind of project and it
is one that has been taken up no less than 5 times so far.&lt;/p&gt;
&lt;p&gt;I am the latest to take up this torch.&lt;/p&gt;
&lt;p&gt;This has so far been an amazing, educational, exhilarating experience: I
have had the honour of gathering the thoughts of some of the best,
brightest and most prolific in our community. It's been a load of work
but also a load of fun.&lt;/p&gt;
&lt;p&gt;Come hear the story of how this has happened, and come to learn how you
can be part of the greater Django information and communication
machinery.&lt;/p&gt;
&lt;p&gt;PyCon Australia is the national conference for users of the Python
Programming Language. In August 2014, we're heading to Brisbane to bring
together students, enthusiasts, and professionals with a love of Python
from around Australia, and all around the World.&lt;/p&gt;
&lt;p&gt;August 1-5, Brisbane, Queensland, Australia&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Elena Williams</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/the-curse-of-the-django-podcast-by-elena-williams.html</guid></item><item><title>Deploy to Android: Adventures of a Hobbyist by Brendan Scott</title><link>https://pyvideo.org/pycon-au-2014/deploy-to-android-adventures-of-a-hobbyist-by-br.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing a program in Python targeting the Android environment is well
within your reach with the use of third party kits such as Kivy and the
Pygame Subset for Android.&lt;/p&gt;
&lt;p&gt;Kivy is an &amp;quot;Open source Python library for rapid development of
applications&amp;quot; and comes with tools which allow Kivy based programs to be
packaged as Android apks for deployment to Android devices. In this
session I will give an overview of the Kivy development and deployment
process. I will also draw inspiration from my successes and failures in
developing Python programs with Kivy to highlight Kivy's strengths,
weaknesses and idiosyncracies. Code examples will be kept to a minimum,
with a focus on illustrating the capabilities of the Kivy library and
explaining how its parts work together.&lt;/p&gt;
&lt;p&gt;I will also reserve some time to discuss the Pygame Subset for Android
and how it can be used to deploy Pygame based games to Android devices.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brendan Scott</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/deploy-to-android-adventures-of-a-hobbyist-by-br.html</guid><category>kivy</category></item><item><title>Django Miniconf: Closing Keynote by Tony Morris</title><link>https://pyvideo.org/pycon-au-2014/django-miniconf-closing-keynote-by-tony-morris.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tony Morris</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/django-miniconf-closing-keynote-by-tony-morris.html</guid></item><item><title>Django MiniConf: Django Transactions: Past, Present, and Future by Christophe Pettus</title><link>https://pyvideo.org/pycon-au-2014/django-miniconf-django-transactions-past-prese.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christophe Pettus</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/django-miniconf-django-transactions-past-prese.html</guid></item><item><title>Django MiniConf: Writing Reusable Django Apps by Jacob Haslehurst</title><link>https://pyvideo.org/pycon-au-2014/django-miniconf-writing-reusable-django-apps-by.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Haslehurst</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/django-miniconf-writing-reusable-django-apps-by.html</guid></item><item><title>Graphs, Networks and Python: The Power of Interconnection by Lachlan Blackhall</title><link>https://pyvideo.org/pycon-au-2014/graphs-networks-and-python-the-power-of-interc.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Graph and network structures are everywhere and can be found in social,
biological and technological networks that impact us on a daily basis.
Understanding, and exploiting, graphical structures creates
opportunities for obtaining new analytic insights, implementing new
computational paradigms, and better defining the relationship between
objects of any sort.&lt;/p&gt;
&lt;p&gt;Python provides access to these graph and network structures using the
fantastic NetworkX library (&lt;a class="reference external" href="http://networkx.github.io/"&gt;http://networkx.github.io/&lt;/a&gt;) . In this
presentation we will give an introduction to the NetworkX library,
showing how easy it is to build and exploit simple graphical and network
structures.&lt;/p&gt;
&lt;p&gt;From that starting point we will then discuss a number of more
complicated, real world examples of how the NetworkX library can be used
to: - Analyse social networks to extract valuable information about
people / entities within those networks. - Implement reconfigurable
processing pipelines (something we refer to as computational graphs) for
data capture, processing and analytics. - Easily track the relationship
between Python objects in a variety of other interesting and useful
scenarios.&lt;/p&gt;
&lt;p&gt;This presentation will be targeted at intermediate developers and no
prior experience with graphs, networks or NetworkX is required. This
presentation will offer an easy introduction to the world of networks
and graphs in Python and will illustrate real world uses of this
powerful and useful paradigm.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lachlan Blackhall</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/graphs-networks-and-python-the-power-of-interc.html</guid></item><item><title>Learning to program is hard, and how to fix that by Jackson Gatenby</title><link>https://pyvideo.org/pycon-au-2014/learning-to-program-is-hard-and-how-to-fix-that.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are a lot of hurdles to overcome when learning your first
programming language - What does this error mean? What's the difference
between a for loop and a while loop? How does pass-by-reference
evaluation work? What are classes? How do I even begin to turn this task
into a working program?&lt;/p&gt;
&lt;p&gt;Python is widely used as a language for learning to program, and for
good reasons, but there are still plenty of ways that students can get
stuck, both in learning the language, and in learning more abstract
programming concepts.&lt;/p&gt;
&lt;p&gt;This talk will present a number of challenges frequently faced by
beginner students in a university course which teaches students Python
from the ground up, and how the course material was redesigned both to
make it easier for students to learn, but also to ensure that students
encountered all of the necessary challenges so that they'd have
something to learn.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jackson Gatenby</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/learning-to-program-is-hard-and-how-to-fix-that.html</guid></item><item><title>Lesser known data structures by Tim McNamara</title><link>https://pyvideo.org/pycon-au-2014/lesser-known-data-structures-by-tim-mcnamara.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is graced with flexible, easy to use data structures that are at
your fingertips every time you start a command prompt. Lists,
dictionaries and tuples are our friends. However, sometimes you want
more than what they can give.&lt;/p&gt;
&lt;p&gt;While subclassing is a great approach, often what you want has already
been written. Most often, it’ll be waiting for you within the standard
library. This talk will be a tour of some of what awaits you. Don’t be
the next person to recreate an ordered dictionary.&lt;/p&gt;
&lt;p&gt;Within the collections module, as well as other places within the
standard library, you’ll find lots of functionality. Using these data
structures can lead to simpler, more robust code.&lt;/p&gt;
&lt;p&gt;As well as explaining how to use some of the data structures that we
encounter, we’ll also be checking through open source code to see how
they are used in the real world. This will give us insight into how
other programmers are using them. Hopefully&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim McNamara</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/lesser-known-data-structures-by-tim-mcnamara.html</guid></item><item><title>Lightning talks</title><link>https://pyvideo.org/pycon-au-2014/lightning-talks-9.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/lightning-talks-9.html</guid><category>lightning talks</category></item><item><title>PyBots! or how to learn to stop worrying and love coding by Anna Gerber</title><link>https://pyvideo.org/pycon-au-2014/pybots-or-how-to-learn-to-stop-worrying-and-love.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, Anna will argue how physical computing — building
interactive systems such as robots that sense and act upon, or respond
to the physical world — provides an ideal application space for teaching
and learning programming concepts and problem solving; that appeals to a
diverse audience; and that can provide a positive introduction to the
world of open source software and hardware.&lt;/p&gt;
&lt;p&gt;Drawing on her experiences teaching introductory programming with
Arduino-based robots, Anna will step through a tutorial demonstrating
how to develop a mobile PyBot - a robot programmed using Python and the
Firmata protocol, and will provide tips to help you or the apprentice
coders in your life to take the first steps towards a lifetime of loving
to code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anna Gerber</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/pybots-or-how-to-learn-to-stop-worrying-and-love.html</guid></item><item><title>Record linkage: Join for real life by Rhydwyn Mcguire</title><link>https://pyvideo.org/pycon-au-2014/record-linkage-join-for-real-life-by-rhydwyn-mcg.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In an ideal world, you can join on candidate keys, names are never
misspelt, people never move house, and I have a pony. I don’t have a
pony. But we do have record linkage.&lt;/p&gt;
&lt;p&gt;Record linkage (also known as data linkage or fuzzy record matching) is
a naive Bayes algorithm which matches data about individuals across
databases or within a single database, by constructing the probabilities
that two records apply to the same individual or to different
individuals.&lt;/p&gt;
&lt;p&gt;In this talk I will discuss the techniques of record linkage in Python,
the usefulness and the limitations of linkage, and the effect that this
technique is having on healthcare research in particular.&lt;/p&gt;
&lt;p&gt;Healthcare/epidemiology studies often require data from more than one
source, and individuals frequently have multiple interactions with a
data set without a unique identifier. The outcomes of these studies are
only as good as the record linkage which underlies them, so the ways in
which record linkage is done can have a direct impact on our ability to
understand, prevent and treat serious medical conditions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rhydwyn Mcguire</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/record-linkage-join-for-real-life-by-rhydwyn-mcg.html</guid></item><item><title>Running Django on Docker: a workflow and code</title><link>https://pyvideo.org/pycon-au-2014/running-django-on-docker-a-workflow-and-code-by.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Docker (&lt;a class="reference external" href="http://docker.io"&gt;http://docker.io&lt;/a&gt;) is the hot-new-thing out there for running
your application in development and in production. Here at Infoxchange,
we are extremely excited about how Docker allows a build-once,
run-anywhere approach to moving applications from testing through to
production. We are one of the first organisations to be using Docker in
production on high-SLA applications.&lt;/p&gt;
&lt;p&gt;In this talk we will present:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a quick intro to Docker and how it solves our problems at
Infoxchange;&lt;/li&gt;
&lt;li&gt;our interface for hosting applications on Docker (&amp;quot;pallet&amp;quot;);&lt;/li&gt;
&lt;li&gt;how to build and develop a Python app on Docker;&lt;/li&gt;
&lt;li&gt;Infoxchange's Django settings module for the pallet interface;&lt;/li&gt;
&lt;li&gt;Forklift (&lt;a class="reference external" href="https://github.com/infoxchange/docker-forklift"&gt;https://github.com/infoxchange/docker-forklift&lt;/a&gt;), a tool
we've developed for running and developing apps that use the pallet
interface, in and out of a Docker container; and&lt;/li&gt;
&lt;li&gt;Extending forklift for your services.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If time permits we will try and cover the additional bonus topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How to host your legacy mod_python application on Apache inside
Docker with minimal changes; and&lt;/li&gt;
&lt;li&gt;Using Forklift to do automated full-stack integration testing of apps
by spinning up containers of other apps (which we do in a container
that is testing the built app that is running in a container that is
our CI server... inception is possible).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The talk will be presented by Danielle Madeley and Alexey Kotlyarov.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexey Kotlyarov</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/running-django-on-docker-a-workflow-and-code-by.html</guid></item><item><title>Software Component Architectures and circuits? by James Mills</title><link>https://pyvideo.org/pycon-au-2014/software-component-architectures-and-circuits-by.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Asynchronous Frameworks are plentiful in the Python Community.
There is Twisted, gevent, Tornado, asynccore and now with Python 3.4,
asyncio. circuits is not yet another Asynchronous Framework (although it
does support Async I/O) but a strong well defined Component Architecture
for building complex software with changing requirements. If you have
ever developed with Zope or Kamaelia you will be familiar with the
&amp;quot;Component&amp;quot; concept. circuits offers a unique perspective on Component
Architectures and offers a novel way to design, implement and deploy
complex software.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Mills</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/software-component-architectures-and-circuits-by.html</guid></item><item><title>Try A Little Randomness by Larry Hastings</title><link>https://pyvideo.org/pycon-au-2014/try-a-little-randomness-by-larry-hastings.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is all about random numbers--What are they? What different
kinds are there? What are they useful for? And why are computers really
bad at them? Come learn all about random numbers, both the good and the
bad.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Larry Hastings</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/try-a-little-randomness-by-larry-hastings.html</guid></item><item><title>Verification: Truth in Statistics by Tennessee Leeuwenburg</title><link>https://pyvideo.org/pycon-au-2014/verification-truth-in-statistics-by-tennessee-le.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Come to this talk if you want to learn a few basic techniques for
putting numerical data in context. If you've ever predicted anything, or
tried to work out whether some number was &amp;quot;good enough&amp;quot;, you'll probably
get something out of this presentation. All techniques and tools
demonstrated using Python.&lt;/p&gt;
&lt;p&gt;Every day, decisions both big and small are made on the basis of the
information published by the Bureau of Meteorology. These include simple
decisions such as taking an umbrella or planning a barbecue. Our
forecasts also inform Australia's emergency services on where extreme
weather events may have occurred, to help with planning and preparation.&lt;/p&gt;
&lt;p&gt;Understanding and communicating our strengths and weaknesses is very
important, both as an organisation and also internally within the
Environment and Research division. This presentation will focus on the
statistical methods and systems used to evaluate the objective,
scientific performance of our forecast systems. The name for this area
of study is &amp;quot;Verification&amp;quot;. While the concepts have come from the
research environment, they are widely applicable and can help anyone who
is assessing the performance of any system.&lt;/p&gt;
&lt;p&gt;This presentation will include: -- An overview of the major ideas of
verification -- How to create a 'skill score' -- The application of
these concepts to thunderstorm forecasting -- How to use Python tools
for verification analyses -- Tips on how to apply these ideas easily in
other contexts&lt;/p&gt;
&lt;p&gt;Obtaining relevant thunderstorm observational data can be particularly
challenging, particularly pertaining to severe and damaging aspects:
lightning, hail, heavy rain and very strong wind gusts. In order achieve
a stronger footing, some new methods of analysis are under development.
It is necessary to establish the scientific validity of the verification
metrics at the same time as constructing the systems to support the data
analysis.&lt;/p&gt;
&lt;p&gt;A prototype web-based tool written in Python (and under active
development by the presenter) will be demonstrated. This tool can run
locally to provide an enhanced lab environment for assessing case study
data, or be set up as a server for continuous monitoring and reporting.&lt;/p&gt;
&lt;p&gt;No pre-existing knowledge of Python or statistics is assumed. The talk
will include several technical aspects, such as working at different
computing scales, usability and user experience, working with
statistical algorithms, data visualisation for both web and journal
publications, and the architectural challenges of a complex application.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tennessee J Leeuwenburg</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/verification-truth-in-statistics-by-tennessee-le.html</guid></item><item><title>What in the World is Asyncio? by Josh Bartlett</title><link>https://pyvideo.org/pycon-au-2014/what-in-the-world-is-asyncio-by-josh-bartlett.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python 3.4 standard library contains a new module called &amp;quot;asyncio&amp;quot;
(formerly &amp;quot;tulip&amp;quot;), which allows you to write single-threaded
asynchronous code based on PEP 3156. This presentation will begin with
an outline of what asyncio provides and how to use it, highlighting the
kinds of use cases that it was designed for. The presentation will then
go through a number of example use cases and within the context of these
use cases, will compare asyncio with Twisted, one of the existing
libraries for asynchronous programming. Finally, the presentation will
touch on the question of interoperability between asyncio and libraries
like Twisted, Pyramid and gevent.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Bartlett</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/what-in-the-world-is-asyncio-by-josh-bartlett.html</guid></item><item><title>Command line programs for busy developers by Aaron Iles</title><link>https://pyvideo.org/pycon-au-2014/command-line-programs-for-busy-developers-by-aaro.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Command line interface tools are the new web framework. In addition to
the Python standard library's getopt, optparse and argparse there is a
bewildering array of packages available on the Python Packaging Index.
Packages like Click, Cliff, Docopt, Invoke all provide different
mechanics for creating command line applications. When all you want to
do is expose a command line and get back to creating functionality, it’s
hard to know which alternative to reach for.&lt;/p&gt;
&lt;p&gt;This presentation will have two parts, the first half will be a brief
survey of popular modules. Strengths, weaknesses and design philosophies
will be compared by creating command line processing for the same
example program.&lt;/p&gt;
&lt;p&gt;The second half will go into more depth on a specific package, Begins.
This package was authored by the presenter to minimise the disruption
developers experience when breaking flow to implement command line
processing. The audience will be shown how a single line of code can
create a complex command line interface. It will also be shown how a
handful of decorators from the Begins API can eliminate boilerplate code
and create powerful, complex applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aaron Iles</dc:creator><pubDate>Thu, 07 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-07:pycon-au-2014/command-line-programs-for-busy-developers-by-aaro.html</guid></item><item><title>Descriptors: attribute access redefined by Fraser Tweedale</title><link>https://pyvideo.org/pycon-au-2014/descriptors-attribute-access-redefined-by-fraser.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Descriptors are a powerful feature of Python that can be used to augment
or replace traditional attribute access with arbitrary behaviours. Such
versatility makes the descriptor protocol a valuable tool for any Python
programmer, yet although most of us have used descriptors, fewer have
implemented one.&lt;/p&gt;
&lt;p&gt;This presentation will explain the use cases that motivate descriptors
and how other features in Python fall short. We will then look at some
of the descriptors that the audience may already have used (even if they
didn't know they were using descriptors!) This will be followed with an
explanation of the descriptor protocol and some implementation and usage
examples.&lt;/p&gt;
&lt;p&gt;I will discuss some of the finer details of descriptor implementation
and will conclude with a look at Elk - a declarative object system
authored by the presenter and inspired by Perl's Moose - and the
descriptors that power it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fraser Tweedale</dc:creator><pubDate>Thu, 07 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-07:pycon-au-2014/descriptors-attribute-access-redefined-by-fraser.html</guid></item><item><title>Django MiniConf: How to be helped; or, Why is FunkyBob angry with me?</title><link>https://pyvideo.org/pycon-au-2014/django-miniconf-how-to-be-helped-by-curtis-malon.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Curtis Maloney</dc:creator><pubDate>Thu, 07 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-07:pycon-au-2014/django-miniconf-how-to-be-helped-by-curtis-malon.html</guid></item><item><title>Django MiniConf: Lightning talks</title><link>https://pyvideo.org/pycon-au-2014/django-miniconf-lightning-talks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Thu, 07 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-07:pycon-au-2014/django-miniconf-lightning-talks.html</guid><category>lightning talks</category></item><item><title>How (not) to upgrade a platform by Edward Schofield</title><link>https://pyvideo.org/pycon-au-2014/how-not-to-upgrade-a-platform-by-edward-schofie.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Guido admitted in his PyCon 2014 keynote that he will never again
conduct a language transition like that from Python 2 to Python 3. The
vast majority of Python code written in 2014 is still a &lt;tt class="docutils literal"&gt;SyntaxError&lt;/tt&gt;
on the latest version of Python. Some people have been wondering: will
Python 3 ever take off?&lt;/p&gt;
&lt;p&gt;We have done some data mining from PyPI to reveal what progress the
community has made so far toward migrating the long tail of packages
towards Python 3 and which packages are most critical in the dependency
graph of unported packages. We extrapolate from current growth rates
about when (if ever) Python 3 support will reach a tipping point after
which more new code will be written in Python 3 than Python 2.&lt;/p&gt;
&lt;p&gt;We then share our perspective on mistakes made in the Python 3
transition and lessons that we can all learn from. The lessons apply to
migrating any interface -- a language, a codebase, or a web API.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Edward Schofield</dc:creator><pubDate>Thu, 07 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-07:pycon-au-2014/how-not-to-upgrade-a-platform-by-edward-schofie.html</guid></item><item><title>Lightning talks</title><link>https://pyvideo.org/pycon-au-2014/lightning-talks-8.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Thu, 07 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-07:pycon-au-2014/lightning-talks-8.html</guid><category>lightning talks</category></item><item><title>Serialization formats aren't toys by Tom Eastman</title><link>https://pyvideo.org/pycon-au-2014/serialization-formats-arent-toys-by-tom-eastman.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you have an API?&lt;/p&gt;
&lt;p&gt;Do you accept input from users? Do you accept it in XML? What about
YAML? Or maybe JSON? How safe are you?&lt;/p&gt;
&lt;p&gt;Are you sure?&lt;/p&gt;
&lt;p&gt;It’s not in the OWASP Top 10, but you don’t have to look far to hear
stories of security vulnerabilities involving deserialization of user
input. Why do they keep happening?&lt;/p&gt;
&lt;p&gt;In this talk I’ll go over what the threat is, how you are making
yourself vulnerable and how to mitigate the problem. I’ll cover the
features (not bugs, features) of formats like XML, YAML, and JSON that
make them surprisingly dangerous, and how to protect your code from
them.&lt;/p&gt;
&lt;p&gt;Because here’s the thing: If you are using, say, a compliant, properly
implemented XML parser to parse your XML, you are NOT safe. Possibly
quite the opposite.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Eastman</dc:creator><pubDate>Thu, 07 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-07:pycon-au-2014/serialization-formats-arent-toys-by-tom-eastman.html</guid></item><item><title>The Quest for the Pocket-Sized Python by Christopher Neugebauer</title><link>https://pyvideo.org/pycon-au-2014/the-quest-for-the-pocket-sized-python-by-christop.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python's already a language of choice for developers on the web, in
science, and on the desktop. In the meantime, the world of Mobile
computing has exploded in the last couple of years, and developers
targetting Android, iOS, and other Mobile platforms are writing their
apps in Java, Objective-C, JavaScript... but definitely not Python.&lt;/p&gt;
&lt;p&gt;But Python's a great language for solving the sort of problems that are
posed in Mobile development time -- speedy development cycles, 20 years
worth of libraries for solving many tasks that you throw at it, and a
ready-made community to help developers. So why aren't we using Python?&lt;/p&gt;
&lt;p&gt;This talk surveys the current landscape of Python on the major Mobile
platforms, and ways you can start targeting Mobile platforms with your
Python code. We'll look at considerations for Mobile web development,
the state of Python-based mobile toolkits, and progress towards
Python-coded native UIs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Neugebauer</dc:creator><pubDate>Thu, 07 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-07:pycon-au-2014/the-quest-for-the-pocket-sized-python-by-christop.html</guid></item><item><title>What is OpenStack? by Michael Still</title><link>https://pyvideo.org/pycon-au-2014/what-is-openstack-by-michael-still.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenStack is one of the biggest python projects ever, and is hiring
plenty of interesting python people to work on Open Source, which is
cool. Yet, many people tell me that they don't really understand what
OpenStack is. Let's fix that once and for all.&lt;/p&gt;
&lt;p&gt;25 minutes isn't a long time, so what I'll provide is an overview of the
various components of OpenStack and how they tie together. We'll cover
what bits might be of interest to your average python hacker, as well as
the general problems we're trying to solve. I secretly hope this will
enthuse people to come and hack on OpenStack, but its also cool if
audience members walk away from the talk deciding that OpenStack is not
of interest to them -- so long as they now understand vaguely what
OpenStack is, then we're cool.&lt;/p&gt;
&lt;p&gt;I'll also try and cover how the OpenStack Foundation and code governance
model works, but it might require talking really fast. We shall see!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Still</dc:creator><pubDate>Thu, 07 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-07:pycon-au-2014/what-is-openstack-by-michael-still.html</guid></item><item><title>Accessibility: Myths and Delusions by Katie Cunningham</title><link>https://pyvideo.org/pycon-au-2014/accessibility-myths-and-delusions-by-katie-cunni.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Cunningham</dc:creator><pubDate>Tue, 05 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-05:pycon-au-2014/accessibility-myths-and-delusions-by-katie-cunni.html</guid></item><item><title>Python For Every Child In Australia by Dr James R. Curran</title><link>https://pyvideo.org/pycon-au-2014/python-for-every-child-in-australia-by-dr-james-r.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr James R. Curran</dc:creator><pubDate>Tue, 05 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-05:pycon-au-2014/python-for-every-child-in-australia-by-dr-james-r.html</guid></item></channel></rss>