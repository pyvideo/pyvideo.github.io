<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_christopher-grebs.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-05-24T00:00:00+00:00</updated><entry><title>Slow Food Digests Better - or how to maintain a 8.5 year old Python project without</title><link href="https://pyvideo.org/djangocon-europe-2018/slow-food-digests-better-or-how-to-maintain-a-85-year-old-python-project-without.html" rel="alternate"></link><published>2018-05-24T00:00:00+00:00</published><updated>2018-05-24T00:00:00+00:00</updated><author><name>Christopher Grebs</name></author><id>tag:pyvideo.org,2018-05-24:djangocon-europe-2018/slow-food-digests-better-or-how-to-maintain-a-85-year-old-python-project-without.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;AMO - &lt;a class="reference external" href="https://addons.mozilla.org/"&gt;https://addons.mozilla.org/&lt;/a&gt; was originally written as a PHP web application, ported to Python / Django 1.1 in 2010, more or less maintained over time and only recently got much more traction because of Firefox Quantum and Mozilla's move to WebExtensions.&lt;/p&gt;
&lt;p&gt;The talk will show our approach to maintaining very old code, handling refactoring, adding new features as well as feature/code removal while slowly upgrading our way to a Python 3 and Django 2.0 ecosystem and why we chose that approach over a rewrite.&lt;/p&gt;
&lt;p&gt;Christopher Grebs&lt;/p&gt;
</summary></entry></feed>