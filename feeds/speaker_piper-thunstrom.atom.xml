<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Piper Thunstrom</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_piper-thunstrom.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-04-06T00:00:00+00:00</updated><subtitle></subtitle><entry><title>"Making Games With PPB" - Piper Thunstrom (PyCascades 2021)</title><link href="https://pyvideo.org/pycascades-2021/making-games-with-ppb-piper-thunstrom-pycascades-2021.html" rel="alternate"></link><published>2021-02-20T00:00:00+00:00</published><updated>2021-02-20T00:00:00+00:00</updated><author><name>Piper Thunstrom</name></author><id>tag:pyvideo.org,2021-02-20:/pycascades-2021/making-games-with-ppb-piper-thunstrom-pycascades-2021.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all know Python is a great learning language and a lot of software engineers got their start into software engineering by building or modding games. The combination of these factors makes Python games an important keystone in our community, even if very few of us end up making …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all know Python is a great learning language and a lot of software engineers got their start into software engineering by building or modding games. The combination of these factors makes Python games an important keystone in our community, even if very few of us end up making video games as a living.&lt;/p&gt;
&lt;p&gt;In this talk, we’ll cover some high level concepts you’ll need to understand games, like events, event loops, and state modeling. Then we’ll cover the constraints and expectations of PursuedPyBear, Python’s newest game framework. Then we’ll discuss a summary its extensibility features.&lt;/p&gt;
&lt;p&gt;At the end, viewers should be prepared to make a game in PursuedPyBear and have a selection of resources for how to improve their knowledge and skill set with video games.&lt;/p&gt;
&lt;p&gt;After three amazing in-person conferences, this time we're moving PyCascades online.&lt;/p&gt;
&lt;p&gt;PyCascades is a regional PyCon in the Pacific Northwest, celebrating the west coast Python developer and user community. Our organizing team includes members of the Vancouver, Seattle, and Portland Python user groups.&lt;/p&gt;
&lt;p&gt;Videos are released as CC BY-NC-SA 4.0.&lt;/p&gt;
&lt;p&gt;Produced by Next Day Video Australia: &lt;a class="reference external" href="https://nextdayvideo.com.au"&gt;https://nextdayvideo.com.au&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#pycascades #pycon #python #conference&lt;/p&gt;
&lt;p&gt;Sat Feb 20 14:35:00 2021 at Prerecorded Talks&lt;/p&gt;
</content><category term="PyCascades 2021"></category><category term="#pycascades#pycon#python#conference"></category><category term="pycascades"></category><category term="pycascades2021"></category></entry><entry><title>Types, In My Python?!</title><link href="https://pyvideo.org/pycascades-2024/types-in-my-python.html" rel="alternate"></link><published>2024-04-06T00:00:00+00:00</published><updated>2024-04-06T00:00:00+00:00</updated><author><name>Piper Thunstrom</name></author><id>tag:pyvideo.org,2024-04-06:/pycascades-2024/types-in-my-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's more likely than you think!&lt;/p&gt;
&lt;p&gt;Types, In My Python? is an analysis of Python's unique relationship to typing systems.&lt;/p&gt;
&lt;p&gt;I will start by examining Python's strange dual nature:&lt;/p&gt;
&lt;p&gt;A dynamically typed scripting language that more or less works as expected.&lt;/p&gt;
&lt;p&gt;A strongly typed language with strict limits on …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's more likely than you think!&lt;/p&gt;
&lt;p&gt;Types, In My Python? is an analysis of Python's unique relationship to typing systems.&lt;/p&gt;
&lt;p&gt;I will start by examining Python's strange dual nature:&lt;/p&gt;
&lt;p&gt;A dynamically typed scripting language that more or less works as expected.&lt;/p&gt;
&lt;p&gt;A strongly typed language with strict limits on what you can do with an object,&lt;/p&gt;
&lt;p&gt;and now able to statically analyze your usages to make sure you're doing things right.&lt;/p&gt;
&lt;p&gt;Following that, I will examine some of the concepts we talk about as a community in more detail.&lt;/p&gt;
&lt;p&gt;What do we mean by &amp;quot;duck typing&amp;quot;, and how does it apply in light of Python's dual nature?&lt;/p&gt;
&lt;p&gt;Why is it static analysis, and not static typing?&lt;/p&gt;
&lt;p&gt;To end, I will make a proposal regarding the best method to use both sides of Python's type system.&lt;/p&gt;
&lt;p&gt;The goal is to accelerate your development and reduce tedium.&lt;/p&gt;
&lt;p&gt;Is there a happy middle ground between strict static typing and a dynamic free-for-all?&lt;/p&gt;
</content><category term="PyCascades 2024"></category></entry><entry><title>Introduction to the Pygame Library</title><link href="https://pyvideo.org/pygotham-2015/introduction-to-the-pygame-library.html" rel="alternate"></link><published>2015-08-15T00:00:00+00:00</published><updated>2015-08-15T00:00:00+00:00</updated><author><name>Piper Thunstrom</name></author><id>tag:pyvideo.org,2015-08-15:/pygotham-2015/introduction-to-the-pygame-library.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn the critical building blocks of the Pygame Library, see how they
fit together, then talk about some Python specific design patterns.&lt;/p&gt;
</content><category term="PyGotham 2015"></category></entry><entry><title>Making Games</title><link href="https://pyvideo.org/pygotham-2016/making-games.html" rel="alternate"></link><published>2016-07-16T00:00:00+00:00</published><updated>2016-07-16T00:00:00+00:00</updated><author><name>Piper Thunstrom</name></author><id>tag:pyvideo.org,2016-07-16:/pygotham-2016/making-games.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From your first 'while True:' to your first framework.&lt;/p&gt;
</content><category term="PyGotham 2016"></category><category term="Games"></category></entry><entry><title>Monkey Patching My Life: Being a Trans Python Developer</title><link href="https://pyvideo.org/pygotham-2017/monkey-patching-my-life-being-a-trans-python-developer.html" rel="alternate"></link><published>2017-10-06T00:00:00+00:00</published><updated>2017-10-06T00:00:00+00:00</updated><author><name>Piper Thunstrom</name></author><id>tag:pyvideo.org,2017-10-06:/pygotham-2017/monkey-patching-my-life-being-a-trans-python-developer.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Transition is remarkably like monkey patching a very complex legacy system: From changing identifiers to modifying our behavior, to interacting with interfaces that aren't quite sure how to deal with the modifications.&lt;/p&gt;
&lt;p&gt;This talk will cover my experiences transitioning quite publicly in the New York City area Python community …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Transition is remarkably like monkey patching a very complex legacy system: From changing identifiers to modifying our behavior, to interacting with interfaces that aren't quite sure how to deal with the modifications.&lt;/p&gt;
&lt;p&gt;This talk will cover my experiences transitioning quite publicly in the New York City area Python community and how those interactions can inform how we design systems: both social and software.&lt;/p&gt;
</content><category term="PyGotham 2017"></category></entry><entry><title>Sunday Lightning Talks</title><link href="https://pyvideo.org/pyohio-2018/sunday-lightning-talks.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Dave Forgac</name></author><id>tag:pyvideo.org,2018-07-29:/pyohio-2018/sunday-lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dave Forgac&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pyohio.org/2018/schedule/presentation/64/"&gt;https://pyohio.org/2018/schedule/presentation/64/&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Extending Python w/ C/C++ - Devyn Spillane&lt;/li&gt;
&lt;li&gt;Even More Significant Whitespace - Tom Fetherston&lt;/li&gt;
&lt;li&gt;Don't Hire Rockstars, Train Idols - Kojo Idrissa&lt;/li&gt;
&lt;li&gt;I Want a Descriptor in my Dataclass - Rick Teachey&lt;/li&gt;
&lt;li&gt;Saving An Animation in Matplotlib - Brandon Rhodes&lt;/li&gt;
&lt;li&gt;fuzzywuzzy String Matching - Ann …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dave Forgac&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pyohio.org/2018/schedule/presentation/64/"&gt;https://pyohio.org/2018/schedule/presentation/64/&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Extending Python w/ C/C++ - Devyn Spillane&lt;/li&gt;
&lt;li&gt;Even More Significant Whitespace - Tom Fetherston&lt;/li&gt;
&lt;li&gt;Don't Hire Rockstars, Train Idols - Kojo Idrissa&lt;/li&gt;
&lt;li&gt;I Want a Descriptor in my Dataclass - Rick Teachey&lt;/li&gt;
&lt;li&gt;Saving An Animation in Matplotlib - Brandon Rhodes&lt;/li&gt;
&lt;li&gt;fuzzywuzzy String Matching - Ann Elliott&lt;/li&gt;
&lt;li&gt;PPB: 15 Lines to Takeoff - Piper Thunstrom&lt;/li&gt;
&lt;li&gt;Get Setup with setup.cfg - Andrew Kubera&lt;/li&gt;
&lt;li&gt;Wagtail – Vince Salvino&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyOhio 2018"></category></entry><entry><title>Making Games With PPB</title><link href="https://pyvideo.org/pytexas-2019/making-games-with-ppb.html" rel="alternate"></link><published>2019-04-13T00:00:00+00:00</published><updated>2019-04-13T00:00:00+00:00</updated><author><name>Piper Thunstrom</name></author><id>tag:pyvideo.org,2019-04-13:/pytexas-2019/making-games-with-ppb.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python and video games are both used independently to learn software engineering, so Python game frameworks have an important role in the software development space. Come learn how to make games in Python so you can level up, too.&lt;/p&gt;
</content><category term="PyTexas 2019"></category><category term="game-development"></category><category term="games"></category><category term="PPB"></category></entry></feed>