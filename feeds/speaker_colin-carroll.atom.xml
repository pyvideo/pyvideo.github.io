<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_colin-carroll.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-11-05T00:00:00+00:00</updated><entry><title>Building a maintainable plotting library</title><link href="https://pyvideo.org/pydata-new-york-city-2019/building-a-maintainable-plotting-library.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Colin Carroll</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/building-a-maintainable-plotting-library.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fluid data visualization needs to be aware of the explicit and implicit structure of the data you want to visualize. Whether you are working on a personal project, or want to have a consistent set of figures for your company or lab, we will share tips on how to build a custom library using matplotlib that is easy to use, easy to maintain, easy to extend, and customized to your use case.&lt;/p&gt;
</summary></entry><entry><title>Intro to Bayesian Model Evaluation, Visualization, &amp; Comparison Using ArviZ</title><link href="https://pyvideo.org/scipy-2019/intro-to-bayesian-model-evaluation-visualization-comparison-using-arviz.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Colin Carroll</name></author><id>tag:pyvideo.org,2019-07-11:scipy-2019/intro-to-bayesian-model-evaluation-visualization-comparison-using-arviz.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial we will build your expertise in handling, diagnosing, and understanding Bayesian models. It is intended for Bayesian modelers that know how to fit models, but desire further understanding on model criticism and visualization techniques. We will cover how to work with model data, how to evaluate model fit and how to communicate results. Attendees learn how to 1. Evaluate and visualize models 2. Understand plots commonly encountered in Bayesian contexts Bayesian modeling expertise is not required. Knowledge of python syntax and Numpy/Pandas are helpful to complete activities in this tutorial. Even without coding experience attendees may find value in learning how to interpret Bayesian model diagnoses and visualizations created by others.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Fighting Gerrymandering with PyMC3</title><link href="https://pyvideo.org/pycon-us-2018/fighting-gerrymandering-with-pymc3.html" rel="alternate"></link><published>2018-05-12T00:00:00+00:00</published><updated>2018-05-12T00:00:00+00:00</updated><author><name>Colin Carroll</name></author><id>tag:pyvideo.org,2018-05-12:pycon-us-2018/fighting-gerrymandering-with-pymc3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the end of 2017, there were seven states with ongoing redistricting litigation.  We will discuss a statistical model that the United States Supreme Court declared to be appropriate in cases of racial gerrymandering, and show how it can be implemented and used with the library &lt;cite&gt;PyMC3&lt;/cite&gt;.  We will also discuss what the model tells us about racial gerrymandering in North Carolina.&lt;/p&gt;
</summary><category term="pymc3"></category></entry></feed>