<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Chris May</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 16 May 2025 00:00:00 +0000</lastBuildDate><item><title>HTML-ivating your Django web app's experience with HTMX, AlpineJS, and streaming HTML.</title><link>https://pyvideo.org/djangocon-us-2023/html-ivating-your-django-web-apps-experience-with-htmx-alpinejs-and-streaming-html.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The rise of SPAs has brought many benefits, but it has also introduced complexity and performance overheads that can be overwhelming. As Django developers, we know the power and elegance of the Django framework, and we believe it can deliver a better user experience without the need for heavy JavaScript frameworks.&lt;/p&gt;
&lt;p&gt;In this talk, we will dive into the concepts of HTMX, a lightweight library that allows us to update parts of the HTML directly from the server, and AlpineJS, a minimal JavaScript framework for enhancing interactivity. We will explore how these tools can be integrated seamlessly with Django to create modern web apps with enhanced user experiences.&lt;/p&gt;
&lt;p&gt;Additionally, we'll see how Django 4.2's &lt;cite&gt;StreamingHttpResponse&lt;/cite&gt; lays the foundation for better experiences of views that require slow queries, microservice calls, or APIs.&lt;/p&gt;
&lt;p&gt;### Key points:
1. Understanding the limitations of JavaScript-heavy SPAs:
- Increased complexity and maintenance overhead
- Slower initial load times and performance implications
2. Introduction to HTMX: Learn how to leverage HTMX to update parts of the HTML directly from the server, eliminating the need for heavy JavaScript frameworks.
3. Enhancing Interactivity with AlpineJS: Discover how to add lightweight JavaScript interactions to your Django app using AlpineJS, improving the user experience without sacrificing simplicity.
4. Streaming HTML for Performance: Explore how to stream HTML to deliver a fast and interactive experience, even in slow network connections or large datasets.
5. Case Study: Dive into a real-world example of a web app that leveraged streaming HTML to achieve impressive user experiences.&lt;/p&gt;
&lt;p&gt;By the end of this talk, attendees will be inspired to leverage HTMX, AlpineJS, and streaming HTML to create modern web applications with exceptional user experiences. They will gain insights into the benefits and trade-offs of this approach compared to JavaScript-heavy SPAs and leave with practical tips and best practices for implementing these techniques in their Django projects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris May</dc:creator><pubDate>Mon, 16 Oct 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-10-16:/djangocon-us-2023/html-ivating-your-django-web-apps-experience-with-htmx-alpinejs-and-streaming-html.html</guid><category>DjangoCon US 2023</category></item><item><title>Choosing Wisely: SPA vs. HTMX for Your Next Web Project</title><link>https://pyvideo.org/djangocon-us-2024/choosing-wisely-spa-vs-htmx-for-your-next-web-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As web developers, we want to select the right architecture pattern for our projects. Web applications are inherently complex, and your choice will affect how you manage that complexity.&lt;/p&gt;
&lt;p&gt;Choosing a SPA pattern offers rich user experiences with rich interactivity and navigational transitions, but it also introduces complexity in state management, development cost, maintenance, security, and performance.&lt;/p&gt;
&lt;p&gt;On the other hand, server-rendered applications have been around for decades and have, until recently, struggled to match the user experience of SPAs. However, thanks to the evolution of browser standards and a crop of lightweight JavaScript frameworks, server-rendered apps have caught up and are once again a compelling option.&lt;/p&gt;
&lt;p&gt;In this talk, we'll delve into the factors influencing the choice between SPAs and server-rendered apps. We'll discuss considerations such as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;State Management&lt;/strong&gt;: Your choices affect how you'll need to manage the state of today's data-rich apps.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User Experience Requirements&lt;/strong&gt;: Assess the application's level of interactivity and real-time updates and how well each pattern performs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance and Scalability&lt;/strong&gt;: Understanding the impact of page load times, network latency, server resources, and client resources on the application's performance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Project Constraints&lt;/strong&gt;: Consider time, budget, and infrastructure limitations that may influence the choice of architecture pattern.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Development Team Expertise&lt;/strong&gt;: Evaluating the team's familiarity with JavaScript frameworks and server-side rendering.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Through practical examples and case studies, we'll demonstrate how to evaluate these factors and select the most appropriate architecture pattern for a given project. Whether you're building a content-driven website, a real-time collaboration platform, or an enterprise application, this talk will provide valuable insights to help you choose between SPAs and server-rendered apps to deliver the best possible user and developer experience.&lt;/p&gt;
&lt;p&gt;## Key Points&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Understand state management in today's data-rich applications.&lt;/li&gt;
&lt;li&gt;Explain how the microservice pattern affects pattern choice.&lt;/li&gt;
&lt;li&gt;Practical guidelines and decision-making frameworks for choosing between SPAs, HTMX, and AlpineJS based on real-world scenarios.&lt;/li&gt;
&lt;li&gt;Case studies and examples illustrating the application of each architecture pattern in different types of web applications.&lt;/li&gt;
&lt;li&gt;Tips and best practices for optimizing performance, maintaining code quality, and ensuring scalability.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By the end of this talk, attendees can confidently choose when to use a SPA or server-rendered pattern based on their project's needs and constraints. They will identify the trade-offs between complexity, performance, and user experience, enabling them to deliver high-quality web applications efficiently and effectively.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris May</dc:creator><pubDate>Mon, 23 Sep 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-09-23:/djangocon-us-2024/choosing-wisely-spa-vs-htmx-for-your-next-web-project.html</guid><category>DjangoCon US 2024</category></item><item><title>Death to the spinner: event sourcing for reactive web apps</title><link>https://pyvideo.org/flaskcon-2025/death-to-the-spinner-event-sourcing-for-reactive-web-apps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Chris May shows how to use Flask, SSE, and Datastar to build a reactive UI with introspectable data, all with Jinja templates and a single codebase.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris May</dc:creator><pubDate>Fri, 16 May 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-05-16:/flaskcon-2025/death-to-the-spinner-event-sourcing-for-reactive-web-apps.html</guid><category>FlaskCon 2025</category><category>Flask</category><category>FlaskCon</category><category>SSE</category><category>Datastar</category><category>Reactive UI</category><category>Jinja</category><category>Python</category></item><item><title>Lightning Talks - Day 1</title><link>https://pyvideo.org/pycon-us-2022/lightning-talks-day-1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are a ~ 5 minutes long, on any topic of interest to other Python people. It doesn't have to be about something that you wrote, it can be something that you learned, or a technique you think other people will be interested in.&lt;/p&gt;
&lt;p&gt;Speakers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:50 - Sameer Wagh - Data Science without Data?&lt;/li&gt;
&lt;li&gt;2:25 - Cheuk Ting Ho - Cultural Shock - My 1st&lt;/li&gt;
&lt;li&gt;7:25 - ≈Åukasz Langa - COVARIANCE/CONTRAVARIENCE&lt;/li&gt;
&lt;li&gt;11:45 - Seth M Larson - Truststore: OS trust stores in Python&lt;/li&gt;
&lt;li&gt;15:50 - Pablo Galindo - Memray: hardcore memory profiling&lt;/li&gt;
&lt;li&gt;20:17 - Graham Waters -The grief cycle, data security breaches, how we could code the future of America and the world&lt;/li&gt;
&lt;li&gt;24:17 - Mason Egger - What is Synthetic Data&lt;/li&gt;
&lt;li&gt;29:55 - Sophia Yang - Holoviz&lt;/li&gt;
&lt;li&gt;34:00 - Shiray Lamba - Robyn; The fastest rust based python webframework server&lt;/li&gt;
&lt;li&gt;39:00 - Chris May - Three steps to elegant code&lt;/li&gt;
&lt;li&gt;43:50 - Chris Ariza - Getting to 100% coverage&lt;/li&gt;
&lt;li&gt;49:15 - Indra - Jupyter ML model to production ML as a service&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sameer Wagh</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-04-27:/pycon-us-2022/lightning-talks-day-1.html</guid><category>PyCon US 2022</category><category>lightning talks</category></item><item><title>Improving code without losing your mind</title><link>https://pyvideo.org/pytexas-2023/improving-code-without-losing-your-mind.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Improving code without losing your mind&amp;quot;
Do you find it harder to work with parts of your project? Do you shy away from working with aspects of your code? When showing people what you're working on, do you feel the need to explain why it got that way?&lt;/p&gt;
&lt;p&gt;As our projects grow, they usually become harder to maintain. This happens when we focus too much on adding new features. As a result, our code becomes hard to change or understand.&lt;/p&gt;
&lt;p&gt;This talk will give you a tool you can use to unwind that code, making it easier to change and understand, not to mention giving you more satisfaction.
Speaker: Chris May&lt;/p&gt;
&lt;p&gt;Chris May is a co-founder of the Python user group in Richmond, Virginia, PyRVA, and had a great career in web and python development, most recently as a Senior Full-Stack Engineer at Markel.&lt;/p&gt;
&lt;p&gt;Seeing his impact on his coworkers and PyRVA members, Chris decided to step away from his full-time job to teach python to others through group training, coaching, and authoring resources.&lt;/p&gt;
&lt;p&gt;With his infectious zest for life and Python, Chris is excited to help you become a better Python developer.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris May</dc:creator><pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-04-01:/pytexas-2023/improving-code-without-losing-your-mind.html</guid><category>PyTexas 2023</category></item></channel></rss>