<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_tomas-kubina.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-03-10T00:00:00+00:00</updated><entry><title>Automated network OS testing</title><link href="https://pyvideo.org/pycon-sk-2018/automated-network-os-testing.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Tomáš Kubina</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/automated-network-os-testing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Our target was to automate recurring testing done to secure stability
of software deployed for Orange BS international networks (JunOS,
CISCO IOS).&lt;/div&gt;
&lt;div class="line"&gt;Target is to make this automation as reliable as manual tests,
user-friendly, faster, so people can focus on more complex test and
simple and mid-simple test to be executed during nights/weekends and
be able to run them more frequently.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We have an lab network and decided to use NAPALM framework (library that
implements a set of functions to interact with different router vendor
devices using a unified API) as it supports all types of devices that we
need to test. There is support for configuring devices, but mainly for
retrieving operational state of devices, that is key for our testing.&lt;/p&gt;
&lt;p&gt;As a result of several months work we have now basic environment for
testing thanks to NAPALM, but for our need we had to extend it with
several functions for parsing operational data. These functions are
covering different areas as IS-IS, LDP, BFD, BGP, PIM, MPLS TE and help
us to properly check overall status of the box. As I work for OBS these
functions are Service Provider oriented. Our goal is to publish them
either as part of NAPALM official package or external extension. So also
others can benefit from the work that was done as part our project.&lt;/p&gt;
</summary><category term="NAPALM"></category><category term="PyCon SK"></category><category term="Python"></category></entry></feed>