<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jeff-elmore.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-03-15T00:00:00+00:00</updated><entry><title>Parsing sentences with the OTHER natural language tool: LinkGrammar</title><link href="https://pyvideo.org/pycon-us-2012/parsing-sentences-with-the-other-natural-language.html" rel="alternate"></link><published>2012-03-11T00:00:00+00:00</published><updated>2012-03-11T00:00:00+00:00</updated><author><name>Jeff Elmore</name></author><id>tag:pyvideo.org,2012-03-11:pycon-us-2012/parsing-sentences-with-the-other-natural-language.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Many of you are probably familiar with NLTK, the wonderful Natural
Language Toolkit for Python. You may not be familiar with Linkgrammar,
which is a sentence parsing system created at Carnegie Melon university.
Linkgrammar is quite robust and works &amp;quot;out of the box&amp;quot; in a way that
NLTK does not for sentence parsing.&lt;/p&gt;
</summary></entry><entry><title>Measuring and modeling the complexity of children's books</title><link href="https://pyvideo.org/pycon-us-2013/measuring-and-modeling-the-complexity-of-children.html" rel="alternate"></link><published>2013-03-15T00:00:00+00:00</published><updated>2013-03-15T00:00:00+00:00</updated><author><name>Jeff Elmore</name></author><id>tag:pyvideo.org,2013-03-15:pycon-us-2013/measuring-and-modeling-the-complexity-of-children.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Researchers have been modeling text difficulty for over 50 years. A
variety of models have been developed, but few have focused on books for
emerging readers (Grades K-2). We used Python for nearly every aspect of
the project including collecting data from reading educators, analyzing
text features and psychometric data, and creating a predictive model.
Tools used include scipy, scikit-learn, pandas, and extensive use of the
IPython Notebook which is demonstrated in the talk.&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>