<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Braxton Cuneo</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 08 Jul 2024 00:00:00 +0000</lastBuildDate><item><title>Injecting Python Functions into a Template-Driven CUDA C++ Framework</title><link>https://pyvideo.org/scipy-2024/injecting-python-functions-into-a-template-driven-cuda-c-framework.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Non-Python codebases that use metaprogramming present significant challenges to cross-language development. These challenges are further compounded with the inclusion of GPU processing. While common methods of Python/GPU interoperation are covered by popular Python frameworks, these frameworks do not trivialize this use case.&lt;/p&gt;
&lt;p&gt;In this talk, we will discuss the process of integrating a Python code for Monte Carlo particle transport (MCDC) (&lt;a class="reference external" href="https://github.com/CEMeNT-PSAAP/MCDC"&gt;https://github.com/CEMeNT-PSAAP/MCDC&lt;/a&gt;) with a template-based CUDA C++ framework which applies inversion of control (Harmonize) (&lt;a class="reference external" href="https://github.com/CEMeNT-PSAAP/harmonize"&gt;https://github.com/CEMeNT-PSAAP/harmonize&lt;/a&gt;). We will discuss managing the complexity of cross-language dependency injection, relevant implementation strategies, and pitfalls to avoid.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Braxton Cuneo</dc:creator><pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-07-08:/scipy-2024/injecting-python-functions-into-a-template-driven-cuda-c-framework.html</guid><category>SciPy 2024</category></item></channel></rss>