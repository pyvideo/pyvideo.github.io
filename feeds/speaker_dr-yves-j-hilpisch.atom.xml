<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_dr-yves-j-hilpisch.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-07-26T00:00:00+00:00</updated><entry><title>Interactive Analysis of (Large) Financial Data Sets</title><link href="https://pyvideo.org/pydata-berlin-2014/interactive-analysis-of-large-financial-data-se.html" rel="alternate"></link><published>2014-07-26T00:00:00+00:00</published><updated>2014-07-26T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2014-07-26:pydata-berlin-2014/interactive-analysis-of-large-financial-data-se.html</id><summary type="html"></summary></entry><entry><title>Derivatives Analytics with Python &amp; Numpy</title><link href="https://pyvideo.org/europython-2011/derivatives-analytics-with-python-numpy.html" rel="alternate"></link><published>2011-07-24T00:00:00+00:00</published><updated>2011-07-24T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2011-07-24:europython-2011/derivatives-analytics-with-python-numpy.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Yves Hilpisch - 24 June 2011 in &amp;quot;Track Ravioli &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In financial engineering and derivatives analytics, C/C++/Java/VBA and
other languages are still dominating. Visixion has developed with
&lt;a class="reference external" href="http://www.dexision.com"&gt;DEXISION&lt;/a&gt; the first full fledged
derivatives analytics suite with Python as core language.&lt;/p&gt;
&lt;p&gt;DEXISION is an On Demand application that is completely Open Source
based (LAMP). For derivatives valuation, it uses Monte Carlo simulation
- an approach known to be computationally demanding. However, Numpy
provides the performance and functionality needed to implement financial
simulation algorithms in a fast and compact manner.&lt;/p&gt;
&lt;p&gt;The talk illustrates the architecture of our analytics suite and
demonstrates how to implement fast and compact simulation algorithms
with Python and Numpy. The talk shows that the Python/Numpy combination
reaches sufficient speed for productive financial applications -
something still widely doubted.&lt;/p&gt;
&lt;p&gt;[No prerequisites.]&lt;/p&gt;
</summary><category term="architecture"></category><category term="engineering"></category><category term="numpy"></category><category term="performance"></category><category term="simulation"></category></entry><entry><title>Fast Data Mining with Pytables and pandas</title><link href="https://pyvideo.org/europython-2012/fast-data-mining-with-pytables-and-pandas.html" rel="alternate"></link><published>2012-07-06T00:00:00+00:00</published><updated>2012-07-06T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2012-07-06:europython-2012/fast-data-mining-with-pytables-and-pandas.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2012] Y Hipisch - 5 JULY 2012 in &amp;quot;Track Tagliatelle&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In a number of industries, like financial services or utilities, it is
important to analyze huge sets of data in an efficient and fast manner.
Typical solutions that are based on SQL databases or follow some kind of
data warehouse approach are generally quite expensive and demand for
huge computing power. Using the Python libraries PyTables and pandas
brings high performance data mining to your desktop computer or even
notebook. The talk illustrates how to beneficially apply these libraries
in the context of financial time series and other data sets. It is also
illustrated how you can implement fast calculations on data sets which
do not fit into the memory of your computer. In addition, the talk
provides a number of examples for the visualization of your data mining
efforts.&lt;/p&gt;
</summary></entry><entry><title>Performance Python for Numerical Algorithms</title><link href="https://pyvideo.org/europython-2014/performance-python-for-numerical-algorithms.html" rel="alternate"></link><published>2014-07-23T00:00:00+00:00</published><updated>2014-07-23T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2014-07-23:europython-2014/performance-python-for-numerical-algorithms.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk is about several approaches to implement high performing
numerical algorithms and applications in Python. It introduces into
approaches like vectorization, multi-threading, parallelization
(CPU/GPU), dynamic compiling, high throughput IO operations. The
approach is a practical one in that every approach is illustrated by
specific Python examples.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is about several approaches to implement high performing
numerical algorithms and applications in Python. It introduces into
approaches like multi-threading, parallelization (CPU/GPU), dynamic
compiling, high throughput IO operations.&lt;/p&gt;
&lt;p&gt;The approach is a practical one in that every approach is illustrated by
specific Python examples.&lt;/p&gt;
&lt;p&gt;The talk uses, among others, the following libraries:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;NumPy&lt;/li&gt;
&lt;li&gt;numexpr&lt;/li&gt;
&lt;li&gt;IPython.Parallel&lt;/li&gt;
&lt;li&gt;Numba&lt;/li&gt;
&lt;li&gt;NumbaPro&lt;/li&gt;
&lt;li&gt;PyTables&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Automatisierung von numerischer Forschung mit Python</title><link href="https://pyvideo.org/pycon-de-2011/automatisierung-von-numerischer-forschung-mit-pyt.html" rel="alternate"></link><published>2011-10-06T00:00:00+00:00</published><updated>2011-10-06T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2011-10-06:pycon-de-2011/automatisierung-von-numerischer-forschung-mit-pyt.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python bietet sich an, rechenintensive Simulationen z.B. in Physik oder
in der Finanzmarktforschung umzusetzen. Solche Simulationen generieren
eine Masse an Daten, die es zu verwalten und aufzubereiten gilt. Der
Vortrag veranschaulicht den Einsatz von Python 1) zum Aufsetzen einer
Simulationsstudie, 2) der Speicherung von Daten mittels PyTables und 3)
der automatischen Generierung von Latex-Code.&lt;/p&gt;
</summary></entry><entry><title>Rapid Financial Engineering mit Python</title><link href="https://pyvideo.org/pycon-de-2011/rapid-financial-engineering-mit-python.html" rel="alternate"></link><published>2011-10-06T00:00:00+00:00</published><updated>2011-10-06T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2011-10-06:pycon-de-2011/rapid-financial-engineering-mit-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Bisher wenig verbreitet in der Praxis ist der Einsatz von Python zur
Entwicklung von rechenintensiven Finanzanwendungen, z.B. zur Bewertung
von Finanzderivaten -- hier dominieren u.a. C, C++, JAVA. Denn i.d.R.
wird die Performance von Python bezweifelt. Der Vortag illustriert,
weshalb Python jedoch die ideale Sprache für ein &amp;quot;Rapid Financial
Engineering&amp;quot; ist.&lt;/p&gt;
</summary></entry><entry><title>DEXISION -- Moderne Finanztheorie und -praxis mit Python</title><link href="https://pyvideo.org/pycon-de-2012/dexision-moderne-finanztheorie-und-praxis-mit.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/dexision-moderne-finanztheorie-und-praxis-mit.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;DEXISION ist eine kommerzielle Bewertungslösung für Finanzderivate. Sie
wurde durch die Visixion GmbH im Wesentlichen auf Basis von Python
entwickelt. Der Vortrag zeigt, wie moderne, Web-basierte Finanzlösungen
mittels Python zu implementieren sind. Aspekte wie Effizienz in der
Entwicklung, Performance, Erweiterbarkeit, Wartbarkeit und Sicherheit
sind dabei von besonderer Bedeutung.&lt;/p&gt;
&lt;p&gt;Die Architektur von DEXISION fußt auf einem LAMP-Stack und es kommen
dabei nur Open Source-Komponenten zum Einsatz. Unseres Wissens nach ist
DEXISION nach wie vor die einzige kommerzielle Finanzlösung dieser Art,
die in allen Bereichn -- auch bei rechenintensiven Simulationsaufgaben
-- voll auf Python setzt.&lt;/p&gt;
</summary><category term="bewertung von derivaten"></category><category term="dexision"></category><category term="finanzen"></category><category term="on demand"></category><category term="scientific python"></category><category term="simulation"></category></entry><entry><title>Effiziente Datenanalyse mit pandas</title><link href="https://pyvideo.org/pycon-de-2012/effiziente-datenanalyse-mit-pandas.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/effiziente-datenanalyse-mit-pandas.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Datenanalyse ist eine der Kernaufgaben moderner Technologie. pandas
(vgl. &lt;a class="reference external" href="http://pandas.pydata.org"&gt;http://pandas.pydata.org&lt;/a&gt;) ist eine leistungsstarke
Python-Bibliothek, die die Möglichkeiten zur Datenanalyse mit
Python/NumPy/SciPy in viele Richtungen erweitert. Der Fokus liegt dabei
auf Convenience und Performance.&lt;/p&gt;
&lt;p&gt;Python in Kombination mit pandas macht Datenanalyse im Unternehmens- und
Forscheralltag effizient und kann z.T. sogar komplexe und
kostenintensive Business Intelligence-Lösungen ersetzen. Besondere
Stärken zeigen sich im Zeitreihenmanagement, was für viele Branchen und
Unternehmen eine immer höhere Bedeutung erlangt (z.B. Finanzbranche,
Energieversorger).&lt;/p&gt;
&lt;p&gt;Mit pandas werden die guten Datenanalysefähigkeiten von einer typischen
Python-Installation mit NumPy, SciPy etc. in vielerlei Hinsicht
erweitert, indem z.B. viele Eigenschaften und Features der statistischen
Sprache R in die Python-Welt portiert werden. Es ist dabei kein Ersatz
für Standard- Bibliotheken wie NumPy, sondern eine nützliche Erweiterung
mit viel &amp;quot;eingebauter Intelligenz&amp;quot; für die Datenanalyse.&lt;/p&gt;
</summary><category term="datenanalyse"></category><category term="pandas"></category><category term="zeitreihen"></category></entry><entry><title>Continuum Data Analytics Stack</title><link href="https://pyvideo.org/pycon-de-2013/continuum-data-analytics-stack.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/continuum-data-analytics-stack.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Continuum Analytics bietet mit Anaconda Accelerate eine kommerzielle,
skalierbare und unternehmenstaugliche Python-Distribution. Diese basiert
auf der beliebten Open Source Distribution Anaconda.&lt;/p&gt;
&lt;p&gt;Gegenüber der freien Distribution verfügt Accelerate über Bibliotheken
wie NumbaPro oder IOPro, die eine nachhaltige Beschleunigung von
typischen Data Analytics Aufgaben mit Python erlauben.&lt;/p&gt;
&lt;p&gt;Bokeh, eine Open Source Bibliothek, etabliert einen neuen Standard für
die interaktive, Web-basierte Visualisierung von großen Datenmengen.&lt;/p&gt;
&lt;p&gt;Der Talk illustriert die Leistungsfähigkeit des &amp;quot;Continuum Data
Analytics Stack&amp;quot; an Hand einer Reihe von praxisnahen Beispielen, z.B.
aus dem Finanzumfeld, und gewährt auch einen Einblick in aktuelle sowie
geplante Entwicklungen und Erweiterungen.&lt;/p&gt;
</summary><category term="data analytics"></category><category term="financial analytics"></category><category term="python"></category><category term="visualization"></category></entry><entry><title>Interaktive Datenanalyse und Visualisierung mit Python, pandas &amp; Co.</title><link href="https://pyvideo.org/pycon-de-2013/interaktive-datenanalyse-und-visualisierung-mit-p.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/interaktive-datenanalyse-und-visualisierung-mit-p.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python hat sich als ernste Alternative für die effiziente und
hochperformante Analyse auch von großen Datenmengen etabliert. Der
Vortrag stellt die wesentlichen Python-basierten Tools für die
interaktive Datenanalyse und Visualisierung vor und veranschaulicht
diese an Hand von praxisnahen Beispielen.&lt;/p&gt;
&lt;p&gt;Der Vortag nutzt IPython Notebooks um die Interaktivität in Echzeit zu
veranschaulichen.&lt;/p&gt;
</summary><category term="data analytics"></category><category term="visualisierung"></category></entry><entry><title>Wissenschaftliches Publizieren mit Python</title><link href="https://pyvideo.org/pycon-de-2013/wissenschaftliches-publizieren-mit-python.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/wissenschaftliches-publizieren-mit-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python hat sich als eine der bedeutendsten Programmiersprachen in vielen
Bereichen der Wissenschaft etabliert. Jüngere Entwicklungen im Bereich
des Publizierens machen die Nutzung von Python noch attraktiver. So ist
es heute recht einfach möglich ausführbaren Python-Code in
Dokument-Sourcen zu integrieren und die Ergebnisse dieses Codes direkt
in das Dokument zu importieren (z.B. Formeln, Berechnungen,
Abbildungen).&lt;/p&gt;
&lt;p&gt;Der Vortrag skizziert Tools wie IPython Notebook, Sphinx (inkl. IPython
Extension) oder auch PythonTEX. Er zeigt auch, wie einfach Open Research
mit Hilfe dieser Tools zu realisieren ist.&lt;/p&gt;
</summary><category term="latex"></category><category term="publizieren"></category><category term="python"></category><category term="wissenschaft"></category></entry></feed>