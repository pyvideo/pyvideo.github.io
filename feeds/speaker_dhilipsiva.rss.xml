<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - dhilipsiva</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 04 Jun 2021 00:00:00 +0000</lastBuildDate><item><title>Build, deploy and scale Django, GraphQL and SPA</title><link>https://pyvideo.org/djangocon-europe-2021/build-deploy-and-scale-django-graphql-and-spa.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;After building, deploying and scaling a dozen on products with the Django + GraphQL + SPA (React) setup, we have come to understand what works and what does not. In this talk, I will share our findings on how to do the same.&lt;/p&gt;
&lt;p&gt;I will be using a simplified StackOverflow clone for demonstration. First, I will introduce Python-Graphene (and few other related libraries), the library that is used to build GraphQL endpoints. Then the talk will focus on how to structure your Django GraphQL project. Share the toolchain (a few management command scripts) that are handy to export your constants &amp;amp; GraphQL schemas to be used with your SPA. Integrating with an SPA (React for demo purpose) Auth, API calls.&lt;/p&gt;
&lt;p&gt;Then I will talk about how you go about deploying your API using 2 different strategies:
1. Docker compose / swarm (Vendor independent, non-production workloads)
2. AWS Fargate (Vendor dependant, production workloads, serverless containers)&lt;/p&gt;
&lt;p&gt;And a cost-effective and highly scale-able deployment strategy for your SPA (using AWS S3, CloudFront and ACM).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dhilipsiva</dc:creator><pubDate>Fri, 04 Jun 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-06-04:/djangocon-europe-2021/build-deploy-and-scale-django-graphql-and-spa.html</guid><category>DjangoCon Europe 2021</category><category>Django</category><category>DjangoConEU</category><category>djangoconeu2021</category></item></channel></rss>