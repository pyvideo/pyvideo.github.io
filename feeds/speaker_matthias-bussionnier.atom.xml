<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_matthias-bussionnier.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-10-22T00:00:00+00:00</updated><entry><title>IPython Protocol, Kernals and new features</title><link href="https://pyvideo.org/euroscipy-2014/ipython-protocol-kernals-and-new-features.html" rel="alternate"></link><published>2014-10-22T00:00:00+00:00</published><updated>2014-10-22T00:00:00+00:00</updated><author><name>Matthias Bussionnier</name></author><id>tag:pyvideo.org,2014-10-22:euroscipy-2014/ipython-protocol-kernals-and-new-features.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A key idea behind IPython is decoupling code execution from user
interfaces. IPython relies on a documented protocol, which can be
implemented by different frontends and different kernels. By
implementing it, frontends and kernels gain the ability to communicate
regardless of which language they're written in. The IPython project
maintains three different frontends, while there are multiple third
party frontends and kernels already in use.&lt;/p&gt;
&lt;p&gt;We will show some important features that such a protocol permits, by
demonstrating some of our alternative frontends, as well as kernels that
people have written in languages such as Julia and R. Our presentation
will also feature interactive widgets, a new feature in IPython 2.0, and
preview the upcoming features that will allow a single notebook server
to start different types of kernel.&lt;/p&gt;
&lt;p&gt;This will demonstrate that the IPython Notebook is the perfect polyglot
tool for scientific computation workflows.&lt;/p&gt;
</summary></entry></feed>