<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_models.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-10-09T00:00:00+00:00</updated><entry><title>Dev Ops meets Data Science Taking models from prototype to production with Docker</title><link href="https://pyvideo.org/pydata-dc-2016/dev-ops-meets-data-science-taking-models-from-prototype-to-production-with-docker.html" rel="alternate"></link><published>2016-10-09T00:00:00+00:00</published><updated>2016-10-09T00:00:00+00:00</updated><author><name>Andy Terrel</name></author><id>tag:pyvideo.org,2016-10-09:pydata-dc-2016/dev-ops-meets-data-science-taking-models-from-prototype-to-production-with-docker.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;We present the evolution of a model to a production API that can scale to large e-commerce needs. On the journey we discuss metrics of success and how to use the Kubernetes cluster manager and associated tools for deploy. In addition to the use of these tools we highlight how to make use of the cluster management system for further testing and experimentation with your models.&lt;/p&gt;
&lt;p&gt;The chasm between data science and dev ops is often wide and impenetrable, but the two fields have more in common than meets the eye. Every data scientist will be able to lean in and help their career by investing in a basic understanding the basic principles of dev ops. In this talk I present the notions of service level indicators, objectives, and agreements. I cover the rigorous monitoring and testing of services. Finally we demonstrate how to build a basic data science workflow and push to production level APIs with Docker and Kubernetes.&lt;/p&gt;
&lt;p&gt;Kubernetes is an opinionated container cluster manager with an easy to use, robust interface. It can be use on very small and very large clusters. Docker is a container system that allows one to build code in an isolated environment. Paired with a container manager such as Kubernetes we are able to manage millions of instances as needed for a production deployment. These tools are two of many different options but are considered among the best open source solutions available.&lt;/p&gt;
</summary><category term="Data"></category><category term="data science"></category><category term="docker"></category><category term="models"></category><category term="science"></category></entry><entry><title>Building Serverless Machine Learning Models in the Cloud</title><link href="https://pyvideo.org/pydata-dc-2016/building-serverless-machine-learning-models-in-the-cloud.html" rel="alternate"></link><published>2016-10-08T00:00:00+00:00</published><updated>2016-10-08T00:00:00+00:00</updated><author><name>Alex Casalboni</name></author><id>tag:pyvideo.org,2016-10-08:pydata-dc-2016/building-serverless-machine-learning-models-in-the-cloud.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Youâ€™ll learn how to efficiently design and train machine learning models in Python and deploy them to the cloud. This process reduces the development &amp;amp; operational efforts required to make your prototypes production-ready.&lt;/p&gt;
&lt;p&gt;We will describe the main challenges faced by data scientists involved in deploying machine learning models into real production environments with specific references, examples of Python libraries, and multi-model systems requiring advanced features such as A/B testing and high scalability &amp;amp; availability.&lt;/p&gt;
&lt;p&gt;While discussing the advantages and limitations of multiple deployment strategies in the cloud, we will focus on serverless computing (i.e. AWS Lambda) as a solution for simplifying your development &amp;amp; deployment workflows.&lt;/p&gt;
</summary><category term="Cloud"></category><category term="learning"></category><category term="machine learning"></category><category term="models"></category><category term="serverless"></category></entry><entry><title>Pomegranate: fast and flexible probabilistic models in python</title><link href="https://pyvideo.org/pydata-chicago-2016/pomegranate-fast-and-flexible-probabilistic-models-in-python.html" rel="alternate"></link><published>2016-08-26T00:00:00+00:00</published><updated>2016-08-26T00:00:00+00:00</updated><author><name>Jacob Schreiber</name></author><id>tag:pyvideo.org,2016-08-26:pydata-chicago-2016/pomegranate-fast-and-flexible-probabilistic-models-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://www.slideshare.net/secret/cxZTghInOlIeOs"&gt;http://www.slideshare.net/secret/cxZTghInOlIeOs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;pomegranate is a python module for probabilistic modelling focusing on both ease of use and speed, beating out competitors, including scikit-learn, in benchmarks. In this talk I will describe how to use pomegranate to simply create sophisticated hidden Markov models, Bayesian Networks, General Mixture Models (and more!) and benchmark their implementations to other python packages.&lt;/p&gt;
</summary><category term="models"></category></entry><entry><title>Lightning Talks - Wednesday morning</title><link href="https://pyvideo.org/djangocon-us-2011/djangocon-2011--lightning-talks---wednesday-morni.html" rel="alternate"></link><published>2011-09-05T00:00:00+00:00</published><updated>2011-09-05T00:00:00+00:00</updated><author><name>Steve Ivy</name></author><id>tag:pyvideo.org,2011-09-05:djangocon-us-2011/djangocon-2011--lightning-talks---wednesday-morni.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks - Wednesday morning&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 - Steve Ivy: &lt;a class="reference external" href="http://pushcode.wallrazer.com/"&gt;Pushcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;05:00 - Jacob Kaplan-Moss: Brief history of Django model syntax&lt;/li&gt;
&lt;li&gt;14:20 - Gabriel Grant: Why the big backpack? Well, I have
t-shirts.... &lt;a class="reference external" href="http://dotcloud.com/"&gt;DotCloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;16:20 - ?: Prezi &lt;a class="reference external" href="http://prezi.com/"&gt;Prezi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="lightning talks"></category><category term="djangocon"></category><category term="djangocon2011"></category><category term="dotcloud"></category><category term="models"></category><category term="prezi"></category><category term="pushcode"></category></entry><entry><title>Models and Migrations and Schemas - oh my!</title><link href="https://pyvideo.org/djangocon-us-2012/models-and-migrations-and-schemas-oh-my.html" rel="alternate"></link><published>2012-09-06T00:00:00+00:00</published><updated>2012-09-06T00:00:00+00:00</updated><author><name>Andrew Godwin</name></author><id>tag:pyvideo.org,2012-09-06:djangocon-us-2012/models-and-migrations-and-schemas-oh-my.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A look at the past, current and future of schemas, migrations and
Django, and what it means for both website developers and ops staff.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django has a long and varied history of dealing with changing schema
requirements - from the early projects like django-evolution and the two
aborted attempts to provide migrations in Django itself, through to
projects like South and now looking ahead to a more integrated solution
with Django itself once more.&lt;/p&gt;
&lt;p&gt;This talk will cover some of that history - helpful to get some kind of
context when it comes to current developments - as well as exploring
some of the common problems a migration system (and its users)
encounter, and how those lessons and ideas are being used to help
improve Django itself to better support schema migrations.&lt;/p&gt;
</summary><category term="django"></category><category term="models"></category></entry></feed>