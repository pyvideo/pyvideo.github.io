<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Eric Ma</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 08 Jul 2024 00:00:00 +0000</lastBuildDate><item><title>How to formulate a (science) problem and analyze it using Python code</title><link>https://pyvideo.org/pycon-us-2014/how-to-formulate-a-science-problem-and-analyze.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Are you interested in doing analysis but don't know where to start? This
tutorial is for you. Python packages &amp;amp; tools (IPython, scikit-learn,
NetworkX) are powerful for performing data analysis. However, little is
said about formulating the questions and tying these tools together to
provide a holistic view of the data. This tutorial will provide you with
an introduction on how this can be done.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Fri, 11 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-11:/pycon-us-2014/how-to-formulate-a-science-problem-and-analyze.html</guid><category>PyCon US 2014</category></item><item><title>Practical Graph/Network Analysis Made Simple</title><link>https://pyvideo.org/pycon-us-2015/practical-graphnetwork-analysis-made-simple.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wondered about how those data scientists at Facebook and
LinkedIn make friend recommendations? Or how epidemiologists track down
patient zero in an outbreak? If so, then this tutorial is for you. Here,
we will explore a bike sharing data set as a way to understand the kinds
of problems that can be solved using graph analytics.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Thu, 09 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-09:/pycon-us-2015/practical-graphnetwork-analysis-made-simple.html</guid><category>PyCon US 2015</category></item><item><title>Network Analysis Made Simple: Part II</title><link>https://pyvideo.org/pycon-us-2018/network-analysis-made-simple-part-ii.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Daenerys or Jon Snow? Diffusion of news through Twitter? JFK, ORD or ATL, do these codes look familiar? In this tutorial we build up on the fundamentals of Part 1 tutorial and look at various applications of network analysis to real world datasets like the US Airport Dataset, Game of Thrones character co-occurrence network, and foray into diffusion processes on networks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mridul Seth</dc:creator><pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-12:/pycon-us-2018/network-analysis-made-simple-part-ii.html</guid><category>PyCon US 2018</category></item><item><title>Network Analysis Made Simple: Part I</title><link>https://pyvideo.org/pycon-us-2018/network-analysis-made-simple-part-i.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wondered about how those data scientists at Facebook and LinkedIn make friend recommendations? Or how epidemiologists track down patient zero in an outbreak? If so, then this tutorial is for you. In this tutorial, which is Part I of a two-part series, we will use a variety of datasets to help you understand the fundamentals of network thinking, with a particular focus on constructing, summarizing, and visualizing complex networks. With this tutorial, you will be well equipped to explore advanced topics (dynamics on graphs, evolving graphs, and network propagation methods) in Part II.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-10:/pycon-us-2018/network-analysis-made-simple-part-i.html</guid><category>PyCon US 2018</category></item><item><title>Beyond Two Groups: Generalized Bayesian A/B[/C/D/E...] Testing</title><link>https://pyvideo.org/pycon-us-2019/beyond-two-groups-generalized-bayesian-abcde-testing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bayesian A/B testing has gained much popularity over the years. It
seems, however, that the examples stop at two groups. This begs the
questions: should we not be able to do more than simple two-group,
case/control comparisons? Is there a special procedure that's necessary,
or is there a natural extension of commonly-used Bayesian methods?&lt;/p&gt;
&lt;p&gt;In this talk, I will use life-like, simulated examples, inspired from
work and from meeting others at conferences, to show how to generalize
A/B testing beyond the rigid assumptions commonly highlighted.
Specifically, I will show two examples, one involving Bayesian
estimation on click data on a website, and another on 4-parameter
dose-response curves.&lt;/p&gt;
&lt;p&gt;There will be plenty of code from the modern PyData stack, involving the
use of PyMC3, pandas, holoviews, and more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Sat, 04 May 2019 11:30:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-04:/pycon-us-2019/beyond-two-groups-generalized-bayesian-abcde-testing.html</guid><category>PyCon US 2019</category><category>talk</category></item><item><title>Bayesian Data Science by Simulation</title><link>https://pyvideo.org/pycon-us-2019/bayesian-data-science-by-simulation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an Introduction to Bayesian data science through the
lens of simulation or hacker statistics. We will become familiar with
many common probability distributions through i) matching them to
real-world stories &amp;amp; ii) simulating them. We will work with
joint/conditional probabilities, Bayes Theorem, prior/posterior
distributions and likelihoods, while seeing their applications in
real-world data analyses. We’ll see the utility of Bayesian inference in
parameter estimation and comparing groups and we’ll wrap up with a dive
into the wonderful world of probabilistic programming.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Wed, 01 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:/pycon-us-2019/bayesian-data-science-by-simulation.html</guid><category>PyCon US 2019</category><category>tutorial</category></item><item><title>Network Analysis Made Simple</title><link>https://pyvideo.org/pycon-us-2019/network-analysis-made-simple.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wondered about how those data scientists at Facebook and
LinkedIn make friend recommendations? Or how epidemiologists track down
patient zero in an outbreak? If so, then this tutorial is for you. In
this tutorial we will use a variety of datasets to help you understand
the fundamentals of network thinking, with a particular focus on
constructing, summarizing, and visualizing complex networks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mridul Seth</dc:creator><pubDate>Wed, 01 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:/pycon-us-2019/network-analysis-made-simple.html</guid><category>PyCon US 2019</category><category>tutorial</category></item><item><title>Magical NumPy with JAX</title><link>https://pyvideo.org/pycon-us-2021/magical-numpy-with-jax.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The greatest contribution of the age the decade in which deep learning exploded was not these big models, but a generalized toolkit to train any model by gradient descent. We're now in an era where differential computing can give you the toolkit to train models of any kind. Does a Pythonista well-versed in the PyData stack have to learn an entirely new toolkit, a new array library to have access to this power?&lt;/p&gt;
&lt;p&gt;This tutorial's answer is as follows: If you can write NumPy code, then with JAX, differential computing is at your fingertips with no need to learn a new array library! In this tutorial, you will learn how to use the NumPy-compatible JAX API to write performant numerical models of the world and train them using gradient-based optimization. Along the way, you will write loopy numerical code without loops, think in data cubes, get your functional programming muscles trained up, generate random numbers completely deterministically (no, this is not an oxymoron!), and preview how to mix neural networks and probabilistic models together... leveraging everything you know about NumPy plus some nearly-learned JAX magic sprinkled in!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-05-14:/pycon-us-2021/magical-numpy-with-jax.html</guid><category>PyCon US 2021</category></item><item><title>Network Analysis Made Simple</title><link>https://pyvideo.org/pycon-us-2022/network-analysis-made-simple.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wondered about how data scientists at Facebook and LinkedIn make friend recommendations? Or how epidemiologists track down patient zero in an outbreak? If so, then this tutorial is for you. In this tutorial, we will use a variety of datasets to help you understand the fundamentals of network thinking, with a particular focus on constructing, summarizing, visualizing, and using complex networks to solve problems.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-04-27:/pycon-us-2022/network-analysis-made-simple.html</guid><category>PyCon US 2022</category><category>tutorial</category></item><item><title>Network Science and Statistics - Fundamentals and Applications</title><link>https://pyvideo.org/scipy-2017/network-science-and-statistics-fundamentals-and-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are audio issues with this video that cannot be fixed. We recommend listening to the tutorial without headphones to minimize the buzzing sound.
Tutorial information may be found at &lt;a class="reference external" href="https://scipy2017.scipy.org/ehome/220975/493423/"&gt;https://scipy2017.scipy.org/ehome/220975/493423/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this tutorial, we will cover the fundamentals and practical aspects of network science and how it can be used to solve problems in science and society! Outline:&lt;/p&gt;
&lt;p&gt;Part 1: Introduction (30 min)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Networks of all kinds: biological, transportation.&lt;/li&gt;
&lt;li&gt;Representation of networks, NetworkX data structures&lt;/li&gt;
&lt;li&gt;Basic quick-and-dirty visualizations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Part 2: Hubs and Paths (40 min)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Finding important nodes; applications&lt;/li&gt;
&lt;li&gt;Pathfinding algorithms and their applications&lt;/li&gt;
&lt;li&gt;Hands-on: implementing path-finding algorithms&lt;/li&gt;
&lt;li&gt;Visualize degree and betweenness centrality distributions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Part 3: Cliques, Triangles &amp;amp; Structures (40 min)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Definition of cliques&lt;/li&gt;
&lt;li&gt;Triangles as the simplest complex clique, applications&lt;/li&gt;
&lt;li&gt;Using path-finding algorithms to find structures in a graph.&lt;/li&gt;
&lt;li&gt;Open triangles as recommender systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Part 4: Bipartite Graphs (30 min)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Definition of bipartite graphs, applications&lt;/li&gt;
&lt;li&gt;Constructing bipartite graphs in NetworkX.&lt;/li&gt;
&lt;li&gt;Summary statistics of bipartite graphs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Part 5: Advanced Network Visualizations &amp;amp; Concepts (40 min)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Basic concepts in rational layouts: node positioning, node colouring.&lt;/li&gt;
&lt;li&gt;Plots: Circos, Arc, Hive, Matrix, Flow plots&lt;/li&gt;
&lt;li&gt;Handling large graphs using matrices.&lt;/li&gt;
&lt;li&gt;Graph diffs and their application to analysis of time-variant, evolving graphs.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-05:/scipy-2017/network-science-and-statistics-fundamentals-and-applications.html</guid><category>SciPy 2017</category><category>tutorial</category></item><item><title>Bayesian Data Science Two Ways: Simulation and Probabilistic Programming</title><link>https://pyvideo.org/scipy-2018/bayesian-data-science-two-ways-simulation-and-probabilistic-programming.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial, Hugo and Eric will build participants’ knowledge of Bayesian inference, workflows and decision making under uncertainty. We will start with the basics of probability via simulation and analysis of real-world datasets, building up to an understanding of Bayes’ theorem. We will then introduce the use of probabilistic programming to do statistical modelling. Throughout this tutorial, we will use a mixture of instructional time and hands-on time. During instructional time, we will use a variety of datasets to anchor our instruction; during hands-on time, which immediately follow instructional time, our participants will apply the concepts learned to the Darwin’s finches dataset, which will permeate the entire tutorial. For maximal benefit, participants are expected to have experience writing for-loops and working with numpy arrays. The necessary syntax will be introduced during the tutorial, but familiarity will help. No knowledge of statistics is necessary. However, the most important and beneficial prerequisite is a will to learn new things. If you have this quality, you'll definitely get something out of this tutorial!&lt;/p&gt;
&lt;p&gt;Prerequisite skills: NumPy, Pandas, matplotlib&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:/scipy-2018/bayesian-data-science-two-ways-simulation-and-probabilistic-programming.html</guid><category>SciPy 2018</category><category>tutorial</category></item><item><title>Network Analysis Made Simple: Network Fundamentals</title><link>https://pyvideo.org/scipy-2018/network-analysis-made-simple-network-fundamentals.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is for Pythonistas who want to understand relationship
problems - as in, data problems that involve relationships between
entities. Participants should already have a grasp of for loops and
basic Python data structures (lists, tuples and dictionaries). By the
end of the tutorial, participants will have learned how to use the
NetworkX package in the Jupyter environment, and will become comfortable
in visualizing large networks using Circos plots. Other plots will be
introduced as well. It will also form the grounding knowledge for Part
II of the tutorial. Prerequisite skills: Pandas, matplotlibPresenter(s):
Speaker: Eric Ma, Novartis Institutes for Biomedical Research Speaker:
Mridul Seth, BITS Pilani KK Birla Goa Campus&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:/scipy-2018/network-analysis-made-simple-network-fundamentals.html</guid><category>SciPy 2018</category></item><item><title>pyjanitor: Clean APIs for Cleaning Data</title><link>https://pyvideo.org/scipy-2019/pyjanitor-clean-apis-for-cleaning-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data cleaning with the &lt;cite&gt;pandas&lt;/cite&gt; API can sometimes be confusing. I will describe team efforts on &lt;cite&gt;pyjanitor&lt;/cite&gt;, to create a cleaner API for data cleaning, focusing on readability and expressivity. &lt;cite&gt;pyjanitor&lt;/cite&gt; is a port of the R &lt;cite&gt;janitor&lt;/cite&gt; package, and provides a cleaner, verb-based method-chaining API to pandas users. I will explain &lt;cite&gt;pyjanitor&lt;/cite&gt;'s history and design, and provide a suite of examples coded in Jupyter notebooks on how to use &lt;cite&gt;pyjanitor&lt;/cite&gt;'s data cleaning functions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Sat, 13 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-13:/scipy-2019/pyjanitor-clean-apis-for-cleaning-data.html</guid><category>SciPy 2019</category></item><item><title>Bayesian Data Science: Probabilistic Programming</title><link>https://pyvideo.org/scipy-2019/bayesian-data-science-probabilistic-programming.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will introduce you to the wonderful world of Bayesian data science through the lens of probabilistic programming. In the first hour of the tutorial, we will begin reintroduce the key concept of probability distributions via hacker statistics, hands-on simulation and telling stories of the data-generation processes. We will also cover the basics joint and conditional probability, and Bayes' rule and Bayesian inference. In the latter 2/3 of the tutorial, we will use a series of models to build your familiarity with PyMC3, showcasing how to perform the foundational inference tasks of group comparison and arbitrary curve regression. By the end of this tutorial, you will be equipped with a solid grounding in Bayesian inference, able to write arbitrary models, and have experienced basic model checking workflow.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hugo Browne Anderson</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:/scipy-2019/bayesian-data-science-probabilistic-programming.html</guid><category>SciPy 2019</category><category>tutorial</category></item><item><title>Deep Learning Fundamentals: Forward Model, Differentiable Loss Function &amp; Optimization Routine</title><link>https://pyvideo.org/scipy-2019/deep-learning-fundamentals-forward-model-differentiable-loss-function-optimization-routine.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Does deep learning feel like a mystical topic with a myriad of jargon? If so, then this tutorial is for you. We will dive deeply into the foundational ideas that power any deep learning model: a model specification, a differentiable loss function, and an optimization routine. To make the core and ancillary ideas concrete, we will be writing our own NumPy-based implementations of the relevant models and algorithms. By the end of the tutorial, your mastery of the foundational ideas should set you free to use any framework to write any arbitrary model that you want.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:/scipy-2019/deep-learning-fundamentals-forward-model-differentiable-loss-function-optimization-routine.html</guid><category>SciPy 2019</category><category>tutorial</category></item><item><title>Network Analysis Made Simple</title><link>https://pyvideo.org/scipy-2019/network-analysis-made-simple.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wondered about how those data scientists at Facebook and LinkedIn make friend recommendations? Or how epidemiologists track down patient zero in an outbreak? If so, then this tutorial is for you. In this tutorial, we will use a variety of datasets to help you understand the fundamentals of network thinking, with a particular focus on constructing, summarizing, and visualizing complex networks. Finally, at the end of the tutorial, allow yourself to be entertained and hopefully also enlightened by the link between applied network science and linear algebra!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:/scipy-2019/network-analysis-made-simple.html</guid><category>SciPy 2019</category><category>tutorial</category></item><item><title>Bayesian Data Science by Simulation</title><link>https://pyvideo.org/scipy-2022/bayesian-data-science-by-simulation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a foundational tutorial in statistics and Bayesian inference, the intended audience is Pythonistas who are interested in gaining a foundational knowledge of probability theory and the basics of parameter estimation.&lt;/p&gt;
&lt;p&gt;After attending this tutorial, participants will have a solid foundation of probability viewed through the lens of computational simulation and see how probability distributions can be matched to real-world data generating processes. Participants will also understand how to use &lt;cite&gt;numpy.random&lt;/cite&gt; to simulate draws from a probability distribution, use those simulations to calculate summary statistics, and use those summary statistics in testing hypotheses against data in a Bayesian fashion. Participants will also be given an introductory taste of a probabilistic programming language.&lt;/p&gt;
&lt;p&gt;Knowledge of &lt;cite&gt;numpy&lt;/cite&gt;, &lt;cite&gt;matplotlib&lt;/cite&gt;, and Python are prerequisites for this tutorial, in addition to curiosity and an excitement to learn new things!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/ericmjl/bayesian-stats-modelling-tutorial"&gt;https://github.com/ericmjl/bayesian-stats-modelling-tutorial&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hugo Bowne Anderson</dc:creator><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-07-11:/scipy-2022/bayesian-data-science-by-simulation.html</guid><category>SciPy 2022</category></item><item><title>Network Analysis Made Simple</title><link>https://pyvideo.org/scipy-2022/network-analysis-made-simple.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Through the use of NetworkX's API, tutorial participants will learn about the basics of graph theory and its use in applied network science. Starting with a computationally-oriented definition of a graph and its associated methods, we will build out into progressively more advanced concepts (path and structure finding, and graph theory's relation to linear algebra), as well as an overview of scalable alternatives to NetworkX.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://ericmjl.github.io/Network-Analysis-Made-Simple/00-preface/01-setup/"&gt;https://ericmjl.github.io/Network-Analysis-Made-Simple/00-preface/01-setup/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-07-11:/scipy-2022/network-analysis-made-simple.html</guid><category>SciPy 2022</category></item><item><title>How to foster an open source culture within your data science team</title><link>https://pyvideo.org/scipy-2024/how-to-foster-an-open-source-culture-within-your-data-science-team.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I will discuss how one can foster a culture of open source contributions at one's company. Based on my successes and failures as a data scientist working in the biotech space, I will describe two key ideas (fostering internal open source and articulating value to key senior leadership) as being on the critical path to generating buy-in within the organization.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-07-08:/scipy-2024/how-to-foster-an-open-source-culture-within-your-data-science-team.html</guid><category>SciPy 2024</category></item><item><title>LlamaBot: a Pythonic interface to Large Language Models</title><link>https://pyvideo.org/scipy-2024/llamabot-a-pythonic-interface-to-large-language-models.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I will present LlamaBot, a Pythonic and modular set of components to build command line and backend tools that leverage large language models (LLMs). During this talk, I will showcase the core design philosophy, internal architecture and dependencies, and live demo command-line applications built using LlamaBot that use both open source and API-access-only LLMs. Finally, I will conclude with a roadmap for LlamaBot development, and an invitation to contribute and shape its development during the Sprints.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-07-08:/scipy-2024/llamabot-a-pythonic-interface-to-large-language-models.html</guid><category>SciPy 2024</category></item></channel></rss>