<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pyohio-2013.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-07-28T00:00:00+00:00</updated><entry><title>Atypes, Btypes and Ctypes</title><link href="https://pyvideo.org/pyohio-2013/atypes-btypes-and-ctypes.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Ben Timby</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/atypes-btypes-and-ctypes.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Ctypes is a great way to bring the depth and breadth of C libraries into
Python. Whether trying not to reinvent the wheel, squeezing a bit more
performance out of your code or needing to interoperate with C software,
ctypes could be exactly what you need.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Develop Games with Panda3D and Python</title><link href="https://pyvideo.org/pyohio-2013/develop-games-with-panda3d-and-python-0.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Peter Carswell</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/develop-games-with-panda3d-and-python-0.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In the brief amount of time available, this tutorial will take a simple
game concept and implement a multi-player game. Game development with
Panda3D will consist of writing a Python program that controls the
Panda3D library. Computer lab projects will provide hands-on experience
investigating the various components of a network game.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>diesel: Simple and Scalable Network Applications</title><link href="https://pyvideo.org/pyohio-2013/diesel-simple-and-scalable-network-applications.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Christian Wyglendowski</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/diesel-simple-and-scalable-network-applications.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;An introduction to writing client and server applications using the
diesel network programming framework.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Django Powered Mobile Apps</title><link href="https://pyvideo.org/pyohio-2013/django-powered-mobile-apps.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Tim Kuehlhorn</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/django-powered-mobile-apps.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Django is a great platform for developing the infrastructure for mobile
apps. This talk will cover API design, prototyping, and writing
excellent documentation.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Gittle: Pure Python Git</title><link href="https://pyvideo.org/pyohio-2013/gittle-pure-python-git.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Aaron O'Mullan</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/gittle-pure-python-git.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A talk about implementing the git protocol entirely in Python by
building on top of Dulwich and then building a higher level library
called gittle which basically is &amp;quot;git for humans&amp;quot;.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Hardware Design in Python</title><link href="https://pyvideo.org/pyohio-2013/hardware-design-in-python.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Christopher Felton</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/hardware-design-in-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will review the MyHDL package and digital hardware design at
the RTL level with Python.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Keeping library compatible with Python 2.6-3.4 using python-systemd as example</title><link href="https://pyvideo.org/pyohio-2013/keeping-library-compatible-with-python-26-34-u.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Zbigniew JÄ™drzejewski-Szmek</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/keeping-library-compatible-with-python-26-34-u.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;How hard is it to port a library to python 3? How much work is it going
forward? Based on two examples (a pure Python, and a C-extension-based
library), I want to show how in my experience the work required is
modest, without significant impact on old code. At the same time,
keeping Python2 compatibility constrains development under Python 3
because only the common subset of features can be used.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>My Adventures with Mock</title><link href="https://pyvideo.org/pyohio-2013/my-adventures-with-mock.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Brad Montgomery</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/my-adventures-with-mock.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Mock is a powerful testing library. Unfortunately, there seems to be a
trend of confusion and distress among those who are just getting started
with Mock. This talk will highlight my experience learning Mock, and
will list a few of the patterns that I've seen emerge during my quest
for 100% test coverage.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Python + FUSE</title><link href="https://pyvideo.org/pyohio-2013/python-fuse.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Zach Wick</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/python-fuse.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;FUSE allows you to fake a filesystem in your userspace without mucking
around in the kernel. This allows you to do things like showing remote
cloud-based backup products as local filesystems. This talk explores
such an implementation for mounting a Copy.com account as a local
filesystem, and addresses some of the common gotchas to help you
implement a FUSE layer for your preferred service.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Saturday Morning BreakfastSerial: Hacking Arduinos in Python</title><link href="https://pyvideo.org/pyohio-2013/saturday-morning-breakfastserial-hacking-arduino.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Swift</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/saturday-morning-breakfastserial-hacking-arduino.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Normally when you want to hack on a sweet hardware project, you bust out
your Arduino and start coding in what may as well be C. We as Python
developers know that sucks! Introducing BreakfastSerial, a framework
that makes it super simple to interact with Arduinos using just Python.
In this session, you'll learn the basics, see some fun demos, and become
a hardware-hacking pro in no time flat.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Simple Games for Beginners</title><link href="https://pyvideo.org/pyohio-2013/simple-games-for-beginners.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Greg Lindstrom</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/simple-games-for-beginners.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;We will build one or two simple games. Along the way we will talk about
program structure, loops, conditionals, and other concepts you will use
in larger programs. If you are new to programming, this class is for
you! Bring your laptop with Python 2 or 3 installed and play along as we
build games together.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Sunday Lightning Talks</title><link href="https://pyvideo.org/pyohio-2013/sunday-lightning-talks-0.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/sunday-lightning-talks-0.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Lightning Talks&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;0:00:00 Catherine Devlin - Midwest Python Workshop for woman and their
friends.&lt;/p&gt;
&lt;p&gt;0:04:25 Christian Wyglendowski - PALM: Protobufs Are Lightweight
Messages&lt;/p&gt;
&lt;p&gt;0:08:23 Larry Hastings - Get with the Grain of the Pickle&lt;/p&gt;
&lt;p&gt;0:12:40 Michael Yanovich - Don't Ask Me About It License&lt;/p&gt;
&lt;p&gt;0:17:24 Ron DuPlain - Lazy Pandas&lt;/p&gt;
&lt;p&gt;0:22:47 Raymond Chandler III - SpkrBar.com&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Super Advanced Python</title><link href="https://pyvideo.org/pyohio-2013/super-advanced-python.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Raymond Chandler III</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/super-advanced-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this tutorial we will touch on some of the more complex features of
the Python programming language including, functional tools(filter map
reduce), itertools, metaclasses, decorators and more.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>The IPython Notebook Revolution</title><link href="https://pyvideo.org/pyohio-2013/the-ipython-notebook-revolution.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Catherine Devlin</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/the-ipython-notebook-revolution.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;If you think of IPython as simply an enhanced version of the live Python
prompt, you are in need of re-education. No matter what you do with
Python, applying the IPython Notebook imaginatively will revolutionize
the way you do it.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>A Text Adventure in Python</title><link href="https://pyvideo.org/pyohio-2013/a-text-adventure-in-python.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Jeffrey Armstrong</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/a-text-adventure-in-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Ever want to write interactive fiction using your favorite language?
Using only the Python standard library, one can write a modestly
functional text adventure from scratch. This interactive talk will
quickly walk through the process, touching a number of standard library
modules, from command lines to string handling to data storage, that can
help bring a game to life.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>APIs made for mobile networks</title><link href="https://pyvideo.org/pyohio-2013/apis-made-for-mobile-networks.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Chris Ridenour</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/apis-made-for-mobile-networks.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Python and web development communities have gotten pretty good at
writing REST APIs for browsers and desktop clients. But porting that to
the high-latency wild-west of mobile networks requires a paradigm shift.
Learn how you can speed up your mobile API using proven technologies -
and avoid writing your own protocol!&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Arbitrage on Amazon: Exploiting the Textbook Trade-ins with Python</title><link href="https://pyvideo.org/pyohio-2013/arbitrage-on-amazon-exploiting-the-textbook-trad.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Brandon Lorenz</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/arbitrage-on-amazon-exploiting-the-textbook-trad.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Amazon introduced the ability to trade-in previously owned textbooks in
exchange for Amazon gift cards. With an opportunity to &amp;quot;buy low-sell
high&amp;quot;, Brandon leveraged Python to automate many facets of simple
workflows and operate at scale. This talk focuses how to enslave the
Machine and put it to work for you with a full teardown of Brandon's
automated Amazon adventure for fun and profit.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Better Mapping with Shapely</title><link href="https://pyvideo.org/pyohio-2013/better-mapping-with-shapely.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Alison Alvarez</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/better-mapping-with-shapely.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will be about using the Python package Shapely, its features,
and how to use them to build better maps and data visualizations.&lt;/p&gt;
&lt;p&gt;This talk will be accesible to anyone who understands basic geometry and
how to read a map.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Code Reading Python</title><link href="https://pyvideo.org/pyohio-2013/code-reading-python.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Thomas Fetherston</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/code-reading-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;You know enough Python now to write small programs, but you want to be
able to write bigger ones. A good step towards that is studying existing
programs, and open source provides lots to learn from. You may even want
to choose one so you can contribute to it.&lt;/p&gt;
&lt;p&gt;Reading code is an acquired skill, we will explore ways to do that
effectively.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Flasky Goodness</title><link href="https://pyvideo.org/pyohio-2013/flasky-goodness.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Kenneth Reitz</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/flasky-goodness.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk dives into Service-Oriented Architecture and why Django isn't
always the best tool for the job. We'll overview the Flask web
framework, and how it can be a great fit for distributed applications.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Fundamentals of Python Debugging</title><link href="https://pyvideo.org/pyohio-2013/fundamentals-of-python-debugging.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Chris Calloway</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/fundamentals-of-python-debugging.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Find out how to use Python's built-in debugging facilities.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Introduction to SQLAlchemy and Alembic Migrations</title><link href="https://pyvideo.org/pyohio-2013/introduction-to-sqlalchemy-and-alembic-migrations.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Jason Myers</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/introduction-to-sqlalchemy-and-alembic-migrations.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this talk, we'll examine how to use SQLAlchemy ORM and Core in both
simple queries and query builder type applications. Next, we'll explore
Alembic database migrations and how we can use them to handle database
changes.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>PyOhio 2013 Keynote: Sine Qua Nons</title><link href="https://pyvideo.org/pyohio-2013/keynote-4.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Brandon Rhodes</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/keynote-4.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;What are the key features of a modern dynamic language like Python that
let a programmer make progress even against difficult problems, even on
days when things are not going well? Starting simple and then ramping up
to complex, Brandon takes us from how beginners can use a Python
dictionary to pair up matching data, to how to use ctypes to work around
limitations in the built-in Python SSL module, as he takes us through
the tools and approaches that for a Python programmer are all part of a
day's work â€” the features without which we would not be as productive.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Kivy - Creating Desktop and Mobile Apps with Python</title><link href="https://pyvideo.org/pyohio-2013/kivy-creating-desktop-and-mobile-apps-with-pyth.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Ben Rousch</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/kivy-creating-desktop-and-mobile-apps-with-pyth.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn to create cross-platform apps with Kivy, a multitouch desktop and
mobile GUI framework for Python.&lt;/p&gt;
</summary><category term="kivy"></category><category term="tutorial"></category></entry><entry><title>Large scale network analysis w/ python and igraph</title><link href="https://pyvideo.org/pyohio-2013/large-scale-network-analysis-w-python-and-igraph.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Timothy Wilson</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/large-scale-network-analysis-w-python-and-igraph.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Networks are a convenient way to model messy problems. I will talk about
my 2.5 year sideproject, my ambitious attempt to map and model the
nuance and beautiful complexity of the twittersphere.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Model-View-Controller &amp; Pygame</title><link href="https://pyvideo.org/pyohio-2013/model-view-controller-pygame.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Jay Shaffstall</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/model-view-controller-pygame.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The presentation starts by introducing the Model-View-Controller (MVC)
architecture. Weâ€™ll develop a complete MVC program with two separate
views, a text based view and a Pygame based view. If youâ€™re experienced
with Python but new to MVC, come prepared to code! If youâ€™re new to
Python, you can follow along with the concepts and get the source code
to the example after the conference.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>ORM vs SQL Roundup</title><link href="https://pyvideo.org/pyohio-2013/orm-vs-sql-roundup.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Michael Robellard</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/orm-vs-sql-roundup.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;We will be discussing pros and cons of various Python ORMs vs. using
straight SQL. The goal will be to help developers decide the right
decision next time they have to decide what to do for database access
for their app.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Pika and Queues</title><link href="https://pyvideo.org/pyohio-2013/pika-and-queues.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Matthew Lauber</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/pika-and-queues.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In a world of distributed programming and asynchronous web apps, a
dedicated message passing service is useful. Enter the Asynchronous
Message Queue Protocol(AMQP) and Pika python library. With RabbitMQ as
our AMQP provider, we will explore the use of Pika to setup a workqueue
between two services, distribute tasks between workers, setup a PubSub
service, and improve responsiveness of websites.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Playing with PyEphem</title><link href="https://pyvideo.org/pyohio-2013/playing-with-pyephem.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Ann Elliott</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/playing-with-pyephem.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;PyEphem is a powerful astronomy library. This talk covers some simple
things you can do with PyEphem that relate to your everyday life, such
as matching your sleep cycle to the sunrise and seeing what the moon is
up to tonight. This will also include plotting data about the sky using
matplotlib.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Porting Half a Million Lines to Python 3</title><link href="https://pyvideo.org/pyohio-2013/porting-half-a-million-lines-to-python-3.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Nathan Yergler</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/porting-half-a-million-lines-to-python-3.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Eventbrite is a successful online ticketing site, built on half a
million lines of Python, dating to before 2007. Python 3 shipped four
years ago, and we're excited about all of its improvements. But what's
it like to port 6 years and half a million lines to Python 3.3? Join me
to learn about why we want to port, what the initial porting experiment
revealed, and what the trouble areas are.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Python 101</title><link href="https://pyvideo.org/pyohio-2013/python-101.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Michael Yanovich</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/python-101.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Are you new to Python? Want a crash course to learn how to &amp;quot;get started&amp;quot;
in this wonderful language? Never programmed before and looking to
start? This is the class for you!&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Saturday Lightning Talks</title><link href="https://pyvideo.org/pyohio-2013/saturday-lightning-talks-0.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Ron DuPlain</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/saturday-lightning-talks-0.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;PyOhio 2013 Saturday Lightning Talks&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;(00:00) Gears&lt;/p&gt;
&lt;p&gt;(0:04:43) Ron DuPlain - Use Werkzeug's web-based interactive debugger
with Tornado.&lt;/p&gt;
&lt;p&gt;(0:09:54) Chad Whitacre - &lt;a class="reference external" href="https://www.gittip.com"&gt;https://www.gittip.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(0:14:56) Larry Hastings - Two Clever Uses Of... XOR!&lt;/p&gt;
&lt;p&gt;(0:17:52) Joe Shaw - Woven photo service &lt;a class="reference external" href="http://woventheapp.com"&gt;http://woventheapp.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(0:23:30) Ann Elliott - pySerial on Raspberry Pi&lt;/p&gt;
&lt;p&gt;(0:29:38) Christopher Felton - Binary Hello World&lt;/p&gt;
&lt;p&gt;(0:33:22) Eric Welch - EqPy&lt;/p&gt;
&lt;p&gt;(0:38:51) Brad Montgomery - Julython&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Shiny, Let's Be Bad Guys: Exploiting and Mitigating the Top 10 Web App Vulnerabilities - Part 1</title><link href="https://pyvideo.org/pyohio-2013/shiny-lets-be-bad-guys-exploiting-and-mitigati-0.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>David Stanek</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/shiny-lets-be-bad-guys-exploiting-and-mitigati-0.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Internet is a dangerous place, filled with evildoers out to attack
your code for fun or profit, so it's not enough to just ship your
awesome new web app--you have to take the security of your application,
your users, and your data seriously. You'll get into the mindset of the
bad guys as we discuss, exploit, and mitigate the most common web app
security flaws in a controlled environment.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Shiny, Let's Be Bad Guys: Exploiting and Mitigating the Top 10 Web App Vulnerabilities - Part 2</title><link href="https://pyvideo.org/pyohio-2013/shiny-lets-be-bad-guys-exploiting-and-mitigati-1.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>David Stanek</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/shiny-lets-be-bad-guys-exploiting-and-mitigati-1.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Internet is a dangerous place, filled with evildoers out to attack
your code for fun or profit, so it's not enough to just ship your
awesome new web app--you have to take the security of your application,
your users, and your data seriously. You'll get into the mindset of the
bad guys as we discuss, exploit, and mitigate the most common web app
security flaws in a controlled environment.&lt;/p&gt;
</summary><category term="tutorial"></category></entry></feed>