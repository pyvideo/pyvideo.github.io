<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Sebastian Raschka</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 15 May 2024 00:00:00 +0000</lastBuildDate><item><title>The Fundamentals of Modern Deep Learning with PyTorch</title><link>https://pyvideo.org/pycon-us-2024/the-fundamentals-of-modern-deep-learning-with-pytorch.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is aimed at Python programmers new to PyTorch and deep
learning. However, even more experienced deep learning practitioners and
PyTorch users may be exposed to new concepts and ideas when exploring
other open source libraries to extend PyTorch.&lt;/p&gt;
&lt;p&gt;Throughout this 3.5-hour tutorial session, attendees will learn how to
use PyTorch to train neural networks for image and text classification.
We will discuss the individual strengths and weaknesses of deep learning
and contrast it with traditional machine learning.&lt;/p&gt;
&lt;p&gt;We will be going over the PyTorch library in detail, exploring it as a
tensor library, automatic differentiation library, and library for
implementing deep neural networks so that you get a solid grasp of how
PyTorch is structured.&lt;/p&gt;
&lt;p&gt;After getting a firm grasp of the PyTorch API, we will introduce
additional open source libraries, such as PyTorch Lightning, to
familiarize attendees with the modern open source stack for deep
learning to take advantage of mixed-precision techniques and multi-GPU
training.&lt;/p&gt;
&lt;p&gt;Note that all model code in this tutorial can be run on a laptop
computer, but attendees will also be introduced to using free GPU
options for this tutorial via Google Colab and Lightning to get the full
benefits of the GPU training sections.&lt;/p&gt;
&lt;p&gt;The tutorial materials and additional information will be uploaded in
advance on GitHub at &lt;a class="reference external" href="https://github.com/rasbt/pycon2024"&gt;https://github.com/rasbt/pycon2024&lt;/a&gt;, which also
contains a Discussion Forum for questions before the event.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Raschka</dc:creator><pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-05-15:/pycon-us-2024/the-fundamentals-of-modern-deep-learning-with-pytorch.html</guid><category>PyCon US 2024</category></item><item><title>Learning scikit learn - An Introduction to Machine Learning in Python</title><link>https://pyvideo.org/pydata-chicago-2016/learning-scikit-learn-an-introduction-to-machine-learning-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;This tutorial provides you with a comprehensive introduction to machine learning in Python using the popular scikit-learn library. We will learn how to tackle common problems in predictive modeling and clustering analysis that can be used in real-world problems, in business and in research applications. And we will implement certain algorithms as scratch as well, to internalize the inner workings&lt;/p&gt;
&lt;p&gt;This tutorial will teach you the basics of scikit-learn. We will learn how to leverage powerful algorithms from the two main domains of machine learning: supervised and unsupervised learning. In this talk, I will give you a brief overview of the basic concepts of classification and regression analysis, how to build powerful predictive models from labeled data. Furthermore, we will go over the basics of clustering analysis to discover hidden structures in unlabeled data. Although it's not a requirement for attending this tutorial, I highly recommend you to check out the accompanying GitHub repository at &lt;a class="reference external" href="https://github.com/rasbt/pydata-chicago2016-ml-tutorial"&gt;https://github.com/rasbt/pydata-chicago2016-ml-tutorial&lt;/a&gt; 1-2 days before the tutorial. During the session, we will not only talk about scikit-learn, but we will also go over some live code examples and code simple machine-learning algorithms from scratch to get the knack of scikit-learn's API.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Raschka</dc:creator><pubDate>Fri, 26 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-26:/pydata-chicago-2016/learning-scikit-learn-an-introduction-to-machine-learning-in-python.html</guid><category>PyData Chicago 2016</category><category>learning</category><category>machine learning</category><category>scikit</category></item><item><title>Lightning Talks 2017-07-12</title><link>https://pyvideo.org/scipy-2017/lightning-talks-2017-07-12.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks 2017-07-12&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="12%" /&gt;
&lt;col width="23%" /&gt;
&lt;col width="65%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head" rowspan="2"&gt;Start&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Speakers&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Subject&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;1:30&lt;/td&gt;
&lt;td rowspan="4"&gt;Aaron Meurer&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Doctr&lt;/strong&gt;
- We built a better tool to push from TravisCI to
GitHub Pages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;6:30&lt;/td&gt;
&lt;td rowspan="4"&gt;Daniel Chen&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;SciPy 2017 Notes&lt;/strong&gt;
- A github repo (scipy_2017_notes) of links and
tutorial information from this conference.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;7:15&lt;/td&gt;
&lt;td rowspan="4"&gt;Allen Downey&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Physical Modeling in Python&lt;/strong&gt;
- tinyurl,.com/modsimpy; writing a book and am looking
for simple models to teach students.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;8:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Oliver Zeigermann&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;How do Convolutional Neural Networks &amp;quot;See&amp;quot;&lt;/strong&gt;
- Techniques to visualize feature detection in the
Insight neural network.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;14:30&lt;/td&gt;
&lt;td rowspan="5"&gt;Sebastian Raschka&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Screenlamp&lt;/strong&gt;
- We made Hypothosis pipeline builder for experimental
biologists, with database filtering steps.  Based on
BioPandas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;20:00&lt;/td&gt;
&lt;td rowspan="4"&gt;Theodore Lindsay
and Floris van
Breugel&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;FigureFirst&lt;/strong&gt;
- Make it easy to use MatPlotLib and Inkscape to build
beautiful scientific figures.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;26:00&lt;/td&gt;
&lt;td rowspan="3"&gt;Pamela Wu&lt;/td&gt;
&lt;td rowspan="3"&gt;&lt;strong&gt;SynthPy:  Real Answers for Fake Data&lt;/strong&gt;
-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;31:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Nick Murphy&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;PlasmaPy&lt;/strong&gt;
- Beginning a community developed Python package for
plasma physics.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;34:00&lt;/td&gt;
&lt;td rowspan="5"&gt;Scott Collis&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Py-ART&lt;/strong&gt;
- Python ARM Radar Toolkit, exposing world of radar
meteorology to SciPy stack.  Taking comments on our
roadmap.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;36:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Bill Spotz&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Using Jupyter to make Citations&lt;/strong&gt;
- The journey of using Jupyter notebooks to add real
citations.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;42:15&lt;/td&gt;
&lt;td rowspan="5"&gt;Jose Felipe&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Test support in Jupyter/Ipython through cell&lt;/strong&gt;
&lt;strong&gt;magics&lt;/strong&gt;
- Starting with iPython/Unittests, make unittesting in
cells&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;47:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Scott Cole&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Burrito Data Analytics&lt;/strong&gt;
- Specialized Visualization and data collection
profiles in the quest for better burittos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aaron Meurer</dc:creator><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-12:/scipy-2017/lightning-talks-2017-07-12.html</guid><category>SciPy 2017</category><category>lightning talks</category></item><item><title>Using Deep Learning When Class Labels Have A Natural Order</title><link>https://pyvideo.org/scipy-2022/using-deep-learning-when-class-labels-have-a-natural-order.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many real-world prediction problems come with ordered labels, for example, customer satisfaction (dissatisfied, neutral, satisfied), disease severity (none, moderate, severe), and many more. Sure, we can use conventional machine learning and deep learning classifier on such problems, but you will see why that's not ideal. Moreover, you will learn how we can modify any deep neural network classifier such that it takes the ordering information into account -- it requires changing less than five lines of code!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Raschka</dc:creator><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-07-11:/scipy-2022/using-deep-learning-when-class-labels-have-a-natural-order.html</guid><category>SciPy 2022</category></item></channel></rss>