<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Scott Irwin</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_scott-irwin.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-09-16T00:00:00+00:00</updated><subtitle></subtitle><entry><title>PyScript and my journey to the Web</title><link href="https://pyvideo.org/pycon-uk-2022/pyscript-and-my-journey-to-the-web.html" rel="alternate"></link><published>2022-09-16T00:00:00+00:00</published><updated>2022-09-16T00:00:00+00:00</updated><author><name>Scott Irwin</name></author><id>tag:pyvideo.org,2022-09-16:/pycon-uk-2022/pyscript-and-my-journey-to-the-web.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While PyScript is not yet ready for production use, it has provided an opportunity for a back-end Python developer like me to learn more about front-end web development. This talk chronicles how I used PyScript in my journey to better understand how to build web applications in Python!&lt;/p&gt;
&lt;p&gt;This …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While PyScript is not yet ready for production use, it has provided an opportunity for a back-end Python developer like me to learn more about front-end web development. This talk chronicles how I used PyScript in my journey to better understand how to build web applications in Python!&lt;/p&gt;
&lt;p&gt;This talk chronicles how I used Python to journey from web ‘noob’ to something greater.&lt;/p&gt;
&lt;p&gt;While I’ve been using Python to develop back-end services for several years, I had not previously developed any web applications. PyScript presented an excellent opportunity for me to leverage my existing Python knowledge to help fill this gap in my skills.&lt;/p&gt;
&lt;p&gt;PyScript is a framework that enables developers to create Python applications in the browser using HTML's interface and the power of Pyodide, WebAssembly (WASM), and other modern web technologies. It was announced by Peter Wang during his recent keynote at PyCon US 2022. While it is classed as “very alpha” and not yet suitable for production, it has proven to be a useful tool for exploration and learning.&lt;/p&gt;
</content><category term="PyCon UK 2022"></category></entry><entry><title>Dataclasses are here. Now what?</title><link href="https://pyvideo.org/pygotham-2018/dataclasses-are-here-now-what.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Scott Irwin</name></author><id>tag:pyvideo.org,2018-10-06:/pygotham-2018/dataclasses-are-here-now-what.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The PEP 557 dataclasses module is one of the new features added in Python 3.7 and are a decorator which generates the boiler-plate code needed by a data container class. In addition to providing access to stored data values by name, they provide a easy mechanism for including …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The PEP 557 dataclasses module is one of the new features added in Python 3.7 and are a decorator which generates the boiler-plate code needed by a data container class. In addition to providing access to stored data values by name, they provide a easy mechanism for including additional features such as default values and customized ordering.&lt;/p&gt;
&lt;p&gt;In this talk we will explore dataclasses from a data container perspective by asking several questions.
- How should one use dataclasses?
- What functionality do dataclasses provide?
- How do these features compare to existing data structures in the standard library like NamedTuple, and dict?
- What about the third-party package attrs?
- What are some additional features of dataclasses?
- When might one want to use dataclasses?&lt;/p&gt;
</content><category term="PyGotham 2018"></category></entry><entry><title>Dunder methods are special</title><link href="https://pyvideo.org/pylondinium-2019/dunder-methods-are-special.html" rel="alternate"></link><published>2019-06-15T00:00:00+00:00</published><updated>2019-06-15T00:00:00+00:00</updated><author><name>Scott Irwin</name></author><id>tag:pyvideo.org,2019-06-15:/pylondinium-2019/dunder-methods-are-special.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Special methods are those methods on a type which are called implicitly by Python to execute a certain operation (e.g., addition). These methods have distinctive names which start and end with double underscores (aka dunder).&lt;/p&gt;
&lt;p&gt;Dunder methods are a language feature which allows developers to implement custom types …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Special methods are those methods on a type which are called implicitly by Python to execute a certain operation (e.g., addition). These methods have distinctive names which start and end with double underscores (aka dunder).&lt;/p&gt;
&lt;p&gt;Dunder methods are a language feature which allows developers to implement custom types which have the same features and expressiveness as the Python standard types.&lt;/p&gt;
&lt;p&gt;It is impossible to discuss all of the various dunder methods in a single 25-minute talk, so we will focus on a selected subset of dunder methods. We will discuss how and why you would implement them and in which situations Python will implicitly call them.&lt;/p&gt;
</content><category term="PyLondinium 2019"></category></entry></feed>