<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 25 Oct 2017 00:00:00 +0000</lastBuildDate><item><title>batou - a multi-(component|environment|platform|.*) deployment tool</title><link>https://pyvideo.org/europython-2013/batou-a-multi-componentenvironmentplatform-deployment-tool.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;batou is a service deployment utility inspired by tools like Puppet,
Fabric, and other modern tools. It made a short appearance in a
lightning talk and at the sprints during EP 2012.&lt;/p&gt;
&lt;p&gt;The talk gives an overview and demonstrates with practical examples how
we deploy web applications with many complex components:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;modelling service components with Python&lt;/li&gt;
&lt;li&gt;multiple environments&lt;/li&gt;
&lt;li&gt;multiple platforms&lt;/li&gt;
&lt;li&gt;development environments&lt;/li&gt;
&lt;li&gt;convergent behaviour&lt;/li&gt;
&lt;li&gt;remote deployments&lt;/li&gt;
&lt;li&gt;secrets management (database passwords, SSL certificates, …)&lt;/li&gt;
&lt;li&gt;no additional run-time dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will show how the real-life requirements in our projects led us to
develop a general model that integrates existing practices without
building a huge stack of technologies.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Theune</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/batou-a-multi-componentenvironmentplatform-deployment-tool.html</guid><category>fabric</category><category>hosting</category><category>deploy</category><category>devops</category><category>integration</category><category>service-orchestration</category><category>deployment</category><category>best-practices</category><category>webapp</category><category>servers</category></item><item><title>An Admin's Cornucopia - Python Is More Than Just A Better Bash</title><link>https://pyvideo.org/pycon-de-2017/an-admins-cornucopia-python-is-more-than-just-a-better-bash.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Christian Theune&lt;/strong&gt; (&amp;#64;theuni)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python's versatility is known to admins - in this talk I'd like to show how it fits for many small and big challenges I meet regularly: from tiny scripts to large systems. Also, I'll show how using the languages' advanced and/or newer features makes scripts more compact and robust.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DRAFT Unfortunately I got sick just a few days before the CFP date, so hopefully you can live with a draft description for now. I'll be happy to update this during or after the review as needed.&lt;/p&gt;
&lt;p&gt;I'd like to give a hands-on approach for how to use Python in a mixed environment where you may be writing very small standalone scripts, small integration programs and/or larger systems. As an admin bash is always a very close friend and one quickly uses it and then ends up with large scripts that should never have seen the day of light. Also, admins nowadays might be writing larger software bases that are actual software projects and the lines between &amp;quot;ops&amp;quot; and &amp;quot;devs&amp;quot; are - on purpose - more and more blurry. However, there are some differences in &amp;quot;application development&amp;quot; and &amp;quot;system development&amp;quot;. Those are more of a mindset issue, however, and Python as a technology fits in both situations quite well and allows one to transition between those modes rather seamlessly.&lt;/p&gt;
&lt;p&gt;I'll be reviewing specific pieces of code from our infrastructure, ranging from smaller scripts to subsystems to a full-born Pyramid application that we use for inventory management. All of those will use different versions of Python, different libraries and different approaches how to solve certain problems. I will likely show how not to do things as well.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Theune</dc:creator><pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-25:pycon-de-2017/an-admins-cornucopia-python-is-more-than-just-a-better-bash.html</guid><category>python</category><category>devops</category></item><item><title>Cynefin: why do things break and why is it hard to fix them?</title><link>https://pyvideo.org/pycon-de-2016/cynefin-why-do-things-break-and-why-is-it-hard-to-fix-them.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I'll review things that broke for me in the last year: Python utilities I maintain, customer software, and infrastructure. I'll introduce and use the Cynefin framework to reflect upon those incidents and to select appropriate strategies to fix things.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Theune</dc:creator><pubDate>Sun, 30 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-30:pycon-de-2016/cynefin-why-do-things-break-and-why-is-it-hard-to-fix-them.html</guid></item><item><title>What i learned from big web app deployments</title><link>https://pyvideo.org/europython-2012/what-i-learned-from-big-web-app-deployments.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2012] Christian Theune - 3 JULY 2012 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The requirements and expectations towards deployment and operations are
advancing at an incredible pace. Especially the DevOps community
encourages and demonstrates how system administrators can leverage
methods from other areas of expertise to achieve classical goals: fewer
outages, more flexibility, lower cost, higher security standards,
improved reproducability and overall increased quality. The hosting of
complex, traffic-intensive web applications nowadays requires a solid
and flexible infrastructure: you need to take care of all the homework
first before going into the nitty gritty details of your specific
application. My talk shall demonstrate the aspects we meet on the
infrastructure and service level when deploying and operating complex
services. I’ll show-case how we approach the problems we face to prepare
for an ever-improving future. As many people and companies are
experimenting with different approaches today, I’d love to spawn a
separate discussion, maybe in an open space, to talk about why you do
something different from us and what your experiences are. The topics
will specifically include: infrastructure versus service, data center
operations, make-or-buy, automation, virtualisation, monitoring, help
desk, SLAs, deployment checklist, staging, secrets, HTTP/S termination,
load balancing, reporting As you can see, the talk’s topics are mainly
focused on methods and lines of thought. However, if you’re interest in
tools - I will also mention the following on a varying level of detail:
puppet,&lt;/p&gt;
&lt;pre class="literal-block"&gt;
haproxy, nginx, apache, varnish, supervisor, cron, Linux, DELL, ProCurve, KVM, Nagios, RT, fabric, zc.buildout, batou
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Theune</dc:creator><pubDate>Wed, 04 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-04:europython-2012/what-i-learned-from-big-web-app-deployments.html</guid></item><item><title>Deployment und Betrieb - die Stiefkinder der Entwicklung</title><link>https://pyvideo.org/pycon-de-2011/deployment-und-betrieb-die-stiefkinder-der-entw.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Erfahrungsbericht darübe welche Aufgaben in Deployment und Betrieb von
(Python)(Web)Anwendungen häufig zu kurz kommen, was man dagegen tun kann
und in Zukunft tun könnte.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Theune</dc:creator><pubDate>Fri, 07 Oct 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-10-07:pycon-de-2011/deployment-und-betrieb-die-stiefkinder-der-entw.html</guid></item><item><title>Python Community im deutschsprachigen Raum</title><link>https://pyvideo.org/pycon-de-2011/python-community-im-deutschsprachigen-raum.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Die Python Community im deutschsprachigen Raum ist bisher recht
zersplittert aufgetreten. Wir wollen einen Weg vorschlagen, wie sich
dies ändern läßt.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Theune</dc:creator><pubDate>Thu, 06 Oct 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-10-06:pycon-de-2011/python-community-im-deutschsprachigen-raum.html</guid></item><item><title>Python-Web-Sprints</title><link>https://pyvideo.org/pycon-de-2012/python-web-sprints.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Seit April 2011 finden regelmäßig dreitägige Sprints zu verschiedenen
Themen rund um Python-Web Anwendungen statt. Dabei geht es meist nicht
um die schnelle Implementierung spezifischer Features sondern um
grundlegende, von den Beteiligten mitgetragene Konzepte. Meist wird auch
nicht an einzelnen Komponenten, sondern an einer Toolchain zur Lösung
konkreter Probleme gearbeitet. Schließlich werden die Ergebnisse in
einer Anwenderdokumentation festgehalten.&lt;/p&gt;
&lt;p&gt;Die Initiatoren des Sprints, Christian Theune und Veit Schiele, stellen
das Konzept der Sprint-Reihe vor und gehen auch die Ergebnisse der
bisherigen Sprints ein. Die Themen der bisherigen Sprints waren:
PyPI-Mirroring und Performance-Optimierungen, Sicherheit und Datenschutz
bei Web-Anwendungen sowie Betrieb und Deployment von
Python-Webanwendungen.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Theune</dc:creator><pubDate>Thu, 01 Nov 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-11-01:pycon-de-2012/python-web-sprints.html</guid><category>sprint</category><category>web-anwendungen</category></item><item><title>batou - multi-(host component environment version platform) deployment</title><link>https://pyvideo.org/pycon-de-2012/batou-multi-host-component-environment-vers.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Batou ist ein Open-Source Werkzeug um mit Python das Deployment von
komplexen Anwendungen zu beschreiben und zu automatisieren.&lt;/p&gt;
&lt;p&gt;Das Konzept besteht darin eine passende allgemeine Modellsprache in Form
einer API zu definieren. Dabei stehen Wiederverwendung, Toleranz
gegenüber unbekannten Zuständen und Ausdrucksstärke im Vordergrund.&lt;/p&gt;
&lt;p&gt;Der Vortrag zeigt den Werdegang und unsere Motivation zur Entwicklung
von batou auf und zeigt die konzeptionellen Stärken anhand praktischer
Beispiele.&lt;/p&gt;
&lt;p&gt;Wir haben in den letzten Jahren eine Reihe großer und kleiner Projekte
beim Deployment betreut.&lt;/p&gt;
&lt;p&gt;Im Rahmen unserer Plattform &amp;quot;gocept.net&amp;quot; bereiten wir unsere Erfahrungen
in Dokumentation und offenen Werkzeugen auf und haben daher batou
entwickelt.&lt;/p&gt;
&lt;p&gt;batou ist sowohl in Python geschrieben und nutzt Python um Deployment-
Strukturen zu beschreiben.&lt;/p&gt;
&lt;p&gt;Wir möchten Batou gerne vorstellen um unsere Erfahrungen weiterzugeben
und (auch auf den Sprints) anzuregen sich mit dem Werkzeug
auseinanderzusetzen, Feedback zu bekommen, und daran weiterzuarbeiten.&lt;/p&gt;
&lt;p&gt;Beispiel-Code des Werkzeugs:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://code.gocep%20t.com/hg/public/batou/file/920e606b2959"&gt;https://code.gocept.com/hg/public/batou/file/920e606b2959&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Beispiel einer Deployment-Beschreibung:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://bitbucket.org/ctheune/sprin%20tsite"&gt;https://bitbucket.org/ctheune/sprintsite&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Theune</dc:creator><pubDate>Wed, 31 Oct 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-10-31:pycon-de-2012/batou-multi-host-component-environment-vers.html</guid><category>deployment</category></item><item><title>batou - multi(component|host|environment|.*) deployment</title><link>https://pyvideo.org/pycon-de-2013/batou-multicomponenthostenvironment-depl.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;batou ist ein Werkzeug um das Deployment für server-basierte Anwendungen
zu automatisieren.&lt;/p&gt;
&lt;p&gt;Es basiert auf vielen Ideen von Puppet, Fabric und anderen Werkzeugen,
bietet aber einen spezifische Modellierungsansatz, der das Konzept von
&amp;quot;Konvergenz&amp;quot; einfach umsetzbar macht.&lt;/p&gt;
&lt;p&gt;In dem Vortrag möchte ich erläutern warum Deployments zu automatisieren
schwierig ist, was &amp;quot;Konvergenz&amp;quot; dazu beitragen kann um es einfach zu
machen, und wie das in Batou ganz praktisch aussieht.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Theune</dc:creator><pubDate>Thu, 17 Oct 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-10-17:pycon-de-2013/batou-multicomponenthostenvironment-depl.html</guid><category>administration</category><category>deployment</category><category>konvergenz</category></item></channel></rss>