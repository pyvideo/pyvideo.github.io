<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 12 Oct 2018 00:00:00 +0000</lastBuildDate><item><title>Batteries Included</title><link>https://pyvideo.org/pycon-za-2018/batteries-included.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a “batteries included” language, but how many batteries are
you using today? It’s so easy to install and import a third-party
package that we end up forgetting how vast and valuable the Python
Standard Library is. In this talk I’ll be exploring the default Python
ecosystem, the one that does not need a pip install to be used. From
collections to bisect, everyone from with any Python knowledge is
welcome to have some fun and learn about the tools you already have in
your toolbelt.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonatas Baldin</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/batteries-included.html</guid></item><item><title>Bayesian Analysis in Python: A Starter Kit</title><link>https://pyvideo.org/pycon-za-2018/bayesian-analysis-in-python-a-starter-kit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bayesian techniques present a compelling alternative to the frequentist
view of statistics, providing a flexible approach to extracting a swathe
of meaningful information from your data. The learning curve is somewhat
steep, but the benefits of adding Bayesian techniques to your tool suite
are enormous!&lt;/p&gt;
&lt;p&gt;What are the bare essentials that you need to know to start applying
Bayesian techniques? This talk will provide an entry level discussion
covering the following topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What can Bayes do for me? (A brief introduction to Bayesian methods)&lt;/li&gt;
&lt;li&gt;Understanding Markov Chain Monte Carlo. (MCMC is what happens behind
the scenes)&lt;/li&gt;
&lt;li&gt;What is Stan? (Writing models in Stan)&lt;/li&gt;
&lt;li&gt;Using Stan in Python. (The PyStan package)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The talk will be peppered with useful tips for dealing with the initial
challenges of using Stan with Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Collier</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/bayesian-analysis-in-python-a-starter-kit.html</guid></item><item><title>Building Rest API with Django Rest Framework</title><link>https://pyvideo.org/pycon-za-2018/building-rest-api-with-django-rest-framework.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most of web applications provide an rest API to connect with other
application that need to access a specific information and django rest
framework is a powerful way for django developers to create robust rest
API, I'll demonstrate the process of creating a complex API using django
rest framework.&lt;/p&gt;
&lt;p&gt;This talk is intended for beginner who have some familiar with python
and want a web framework to create rest API to connect with a mobile
application.&lt;/p&gt;
&lt;p&gt;Content which will be covered are as follows:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;HTTP methods&lt;/li&gt;
&lt;li&gt;Django Models&lt;/li&gt;
&lt;li&gt;Request &amp;amp; Response&lt;/li&gt;
&lt;li&gt;Status Codes&lt;/li&gt;
&lt;li&gt;Serializers&lt;/li&gt;
&lt;li&gt;Viewsets and Routers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Some experience with Django&lt;/li&gt;
&lt;li&gt;Basic python concepts&lt;/li&gt;
&lt;li&gt;Knowledge about HTTP and web development&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jose Machava</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/building-rest-api-with-django-rest-framework.html</guid></item><item><title>Custom metadata plugins for Calibre: cataloguing an old paper library</title><link>https://pyvideo.org/pycon-za-2018/custom-metadata-plugins-for-calibre-cataloguing-an-old-paper-library.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Calibre is a cross-platform program for managing an e-book library:
organising the books, annotating them with metadata, converting them
between different formats and moving them between devices. Its
organisation and metadata functionality can also be used to catalogue a
collection of paper books.&lt;/p&gt;
&lt;p&gt;By default, Calibre fetches its metadata from a few large, popular
online sources which focus on recently published English-language books,
and often have little to no information about older editions or books in
other languages. However, there are many user-created custom metadata
plugins which make it possible to integrate Calibre with more
specialised book databases. Calibre is written in Python, and so are the
plugins!&lt;/p&gt;
&lt;p&gt;In this talk I will give an overview of how to find resources to help
you start writing your own plugin, and describe how I forked and
re-wrote a plugin for downloading metadata from the Internet Speculative
Fiction Database.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrianna Pińska</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/custom-metadata-plugins-for-calibre-cataloguing-an-old-paper-library.html</guid></item><item><title>Developing good ORMs is HARD!</title><link>https://pyvideo.org/pycon-za-2018/developing-good-orms-is-hard.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As with many people, I was looking for an ORM for &lt;tt class="docutils literal"&gt;asyncio&lt;/tt&gt; Python.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Whilst &lt;tt class="docutils literal"&gt;asyncio&lt;/tt&gt; is a great framework for I/O bound applications,
there isn't any mature, recommendable ORMs for it.&lt;/div&gt;
&lt;div class="line"&gt;Many attempts to wrap an existing sync Python ORM (such as peewee or
sqlAlchemy) by having them run in a separate thread, and then dealing
with synchronising between the event loop and threads got abandoned,
due to a myriad of problems, including performance, correctness and
blocking.&lt;/div&gt;
&lt;div class="line"&gt;Other ORMs were abandoned before they worked, or had so many layers of
abstraction that I feared to touch it.&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Then I came across &lt;a class="reference external" href="http://tortoise-orm.readthedocs.io/"&gt;Tortoise
ORM&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;It had a simple design. (Inspired by the Django ORM syntax)&lt;/div&gt;
&lt;div class="line"&gt;It actually worked when I tried it out.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;So I decided to jump in, and help with development.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;In this talk I'll talk about my experience of being on a development
team on an ORM.&lt;/div&gt;
&lt;div class="line"&gt;There is a reason there are so few successful ORM projects out there.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Developing good ORMs are &lt;strong&gt;HARD&lt;/strong&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nickolas Grigoriadis</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/developing-good-orms-is-hard.html</guid></item><item><title>Dimensionality reduction - squeezing out the good stuff with PCA</title><link>https://pyvideo.org/pycon-za-2018/dimensionality-reduction-squeezing-out-the-good-stuff-with-pca.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data is often high-dimensional - millions of pixels, frequencies,
categories. A lot of this detail is unnecessary for data analysis - but
how much exactly? This talk will discuss the ideas and techniques of
dimensionality reduction, provide useful mathematical intuition about
how it's done, and show you how Netflix uses it to lead you from binge
to binge.&lt;/p&gt;
&lt;p&gt;In this session, we'll start by remembering what data really is and what
it stands for. Data is a structured set of numbers, and these numbers
typically (hopefully!) hold some information. This will lead us
naturally to the concept of a &lt;em&gt;high-dimensional dataspace&lt;/em&gt; , the
mystical realm in which data lives. It turns out that data in this space
displays an extremely useful 'selection bias' - &lt;strong&gt;*a datapoint can be
known by the company it keeps*&lt;/strong&gt;. This is one of the basic ideas behind
&lt;strong&gt;k-means clustering&lt;/strong&gt; , which we will briefly discuss.&lt;/p&gt;
&lt;p&gt;We'll then talk about the &lt;em&gt;informative-ness&lt;/em&gt; of certain dimensions of
the data space over others. This lays the mathematical foundation for
the technique of &lt;strong&gt;Principal Component Analysis&lt;/strong&gt; (PCA), which we will
run on the Netflix movie dataset using &lt;em&gt;scikit-learn&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;We will also touch upon &lt;strong&gt;tSNE&lt;/strong&gt; , another popular
dimensionality-reduction algorithms.&lt;/p&gt;
&lt;p&gt;I will be using &lt;em&gt;scikit-learn&lt;/em&gt; for processing and &lt;em&gt;matplotlib&lt;/em&gt; for
visualization. The purpose of this session is to introduce
dimensionality- reduction to those who do not know it, and to provide
useful guiding intuitions to those who do. We'll also discuss some
seminal use-cases, with tips and warnings for your own applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aabir Abubaker Kar</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/dimensionality-reduction-squeezing-out-the-good-stuff-with-pca.html</guid></item><item><title>Fast random number generation in Python and NumPy</title><link>https://pyvideo.org/pycon-za-2018/fast-random-number-generation-in-python-and-numpy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A fast Random Number Generator (RNG) is key to doing Monte Carlo
simulations, efficiently initialising machine learning models, shuffling
long sequences of numbers and many tasks in scientific computing.
CPython and NumPy use implementations of the Mersenne Twister RNG and
rejection sampling to generate random numbers in an interval. The NumPy
implementation trades more samples for cheaper division by a power of
two. The implementation is very efficient when the random interval is a
power of two, but on average generate many more samples compared to the
GNU C or Java algorithms. The Python RNG uses an algorithm similar to
GNU C.&lt;/p&gt;
&lt;p&gt;A recent paper by Daniel Lemire (&lt;a class="reference external" href="https://arxiv.org/abs/1805.10941"&gt;https://arxiv.org/abs/1805.10941&lt;/a&gt;)
discusses an efficient division light method to generate uniform random
numbers in an interval. This method is apparently used in the Go
language. On 64-bit platforms there are also fast alternative RNGs that
perform comparatively on statistical examinations passing tests like
BigCrush. The splitmix64 (part of the standard Java API) and lehmer64
RNGs, for example, require approximately 1.5 cycles to generate 32
random bits (without using SIMD) while the 32-bit Mersenne Twister
requires approximately 10 cycles per 32 bits.&lt;/p&gt;
&lt;p&gt;This talk will discuss the inclusion of Lemire's method in NumPy as an
alternative to the current rejection sampling implementation. My
implementation results in a 2x - 3x improvement in the performance of
generating a sequence of random numbers. Using splitmix64 or lehmer64
RNGs in NumPy instead of the Mersenne Twister results in a further 2x
performance improvement.&lt;/p&gt;
&lt;p&gt;The random module in Python does not do the rejection sampling in C like
NumPy does. Much of the time to get a random number is therefore spent
in the Python code. This talk will also discuss a fast random Python
module that implements Lemire's method instead of the current rejection
sampling, provides alternative RNGs and moves more of the code into C.&lt;/p&gt;
&lt;p&gt;I'm considering doing pull requests for both the NumPy modification and
the Python fast random module and will present a detailed analysis of
the proposed modifications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bernardt Duvenhage</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/fast-random-number-generation-in-python-and-numpy.html</guid></item><item><title>From Zero to kind of a hero: Getting your Python side project ready for deployment</title><link>https://pyvideo.org/pycon-za-2018/from-zero-to-kind-of-a-hero-getting-your-python-side-project-ready-for-deployment.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One evening, my little sister asked me for help with her homework at
9pm. She had already asked her classmates on a WhatsApp group, but
nobody was able to help as all her peers had the same limited resources
available to them. This gave me the idea for Buza (Zulu for “ask”), a
platform for high school learners to ask questions that could be
answered by volunteer university students in their free time.&lt;/p&gt;
&lt;p&gt;Buza is the first side project of mine that I’ve ever truly wanted to
deploy. After months of coding and adding loads of features, I finally
reached out to a senior developer to help me deploy my truck of
features. The first thing she said was “A lot of this code will have to
be replaced with production-ready code”. These are words you never want
to hear.&lt;/p&gt;
&lt;p&gt;University Computer Science equipped me with the ability to write code
to solve problems, but in industry extra skills were required to build
production-ready software. This talk will share the valuable lessons I
learned from getting this Django web app production-ready. This will
start with how to c &lt;strong&gt;hoose the right tools, framework, environment for
your project&lt;/strong&gt;. I will also cover how to set up &lt;strong&gt;testing and continuous
integration for your project&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;What I will cover (Zero to Hero):&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;No code is the best code&lt;/li&gt;
&lt;li&gt;Framework: DJango&lt;/li&gt;
&lt;li&gt;Environment: Pipenv&lt;/li&gt;
&lt;li&gt;Static Tests: Flake8, Mypy (checks types), isort(sorts imports)&lt;/li&gt;
&lt;li&gt;Test Driven Development&lt;/li&gt;
&lt;li&gt;Automated testing: Tox and Travis&lt;/li&gt;
&lt;li&gt;Code Coverage&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sewagodimo Matlapeng</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/from-zero-to-kind-of-a-hero-getting-your-python-side-project-ready-for-deployment.html</guid></item><item><title>Guide to choose right deep Learning framework for your AI project</title><link>https://pyvideo.org/pycon-za-2018/guide-to-choose-right-deep-learning-framework-for-your-ai-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As world rolling around Artificial Intelligence (AI), demand for the
AI-based product seen exponential growth, so the AI research. Deep
learning algorithms and techniques are widely used for research and
development of these products. Good news is that year by year Deep
Learning has seen its glory in the release of many open source
frameworks which ease the pain to develop and implement these
algorithms.&lt;/p&gt;
&lt;p&gt;As there are many deep learning frameworks out there and it can lead to
confusion as to which one is better for your task. And choosing a deep
learning framework for an AI project is as important as choosing a
programming language to code product, Data science project coupled with
the right deep learning framework has truly amplified the overall
productivity.&lt;/p&gt;
&lt;p&gt;In this talk, I will discuss the common points which help developers to
understand which framework will be the perfect fit for solving given
business challenges. Also, we will look into some of the most widely
used frameworks and comparing with standard benchmarks.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Following deep learning/machine learning frameworks will be discussed:&lt;/div&gt;
&lt;div class="line"&gt;1. &lt;strong&gt;Tensorflow&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;2. &lt;strong&gt;PyTorch&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;3. &lt;strong&gt;Chainer&lt;/strong&gt; and/or &lt;strong&gt;MXNET&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Key Highlight of this talk:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;define key points to judge any deep learning framework.&lt;/li&gt;
&lt;li&gt;hardware dependencies.&lt;/li&gt;
&lt;li&gt;anatomy of widely used open source frameworks.&lt;/li&gt;
&lt;li&gt;comparison of above-mentioned frameworks as per defined key points.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Who is the audience?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Anyone who inspired to code deep learning algorithms.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience Level&lt;/strong&gt; : Beginner to Intermediate&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rishikesh</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/guide-to-choose-right-deep-learning-framework-for-your-ai-project.html</guid></item><item><title>Insight into Customer Segmentation</title><link>https://pyvideo.org/pycon-za-2018/insight-into-customer-segmentation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In retail, understanding your customer is all, and when you do not have
a brick and mortar storefront to attract new shoppers, it is even more
important to get insight into the array of visitors who frequent your
site. You need an idea of who they are, what they want and how to
attract them. This is a universal truth of all businesses and the
lessons learned here could be easily applied to other industries.&lt;/p&gt;
&lt;p&gt;Enter data science and the ability to segment your customers. What is
customer segmentation? What types of segmentation are there? What models
could you use? How do you do it? What is it good for? Having done it a
few times, first for Superbalist, then for the Spree customers during
the Superbalist/Spree merger, I might have a few tricks and tips to
share.&lt;/p&gt;
&lt;p&gt;The talk will look at a high-level overview of clustering, then
deep-dive into the code a bit before coming up at the end with a few use
cases and conclusions. I'll discuss a few potential model algorithms we
investigated, but focus mostly on the K-Means clustering model.&lt;/p&gt;
&lt;p&gt;If you have some data science experience it would be helpful, but the
talk should provide interesting information for everyone. The talk aims
to leave you with a solid idea of how to build a customer segmentation
model of your own. Come discover the joys of classification models with
me!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cornelia van der Walt</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/insight-into-customer-segmentation.html</guid></item><item><title>My Journey into Artificial Intelligence</title><link>https://pyvideo.org/pycon-za-2018/my-journey-into-artificial-intelligence.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The buzzword in recent times has been AI, what is AI? how can I learn
AI? What is the usefulness of AI? How would it impact my business? Why
should I learn AI? The questions just keep coming. This talk is supposed
to present in practical terms how a young African girl got her start in
AI, the journey so far, where she is now, and the possibilities of a
future in AI.&lt;/p&gt;
&lt;p&gt;It will also explain in details, the resources and materials she
utilized in her learning with Python being the most resourceful, it will
explain python's many functionalities and tools which she has found and
used, most especially in it's application to data science and artificial
intelligence, projects she has worked on, of which an image classifier
was one of them. She would also talk about the mistakes she made, the
successes she attained, the lessons she learned and finally the BIG
PICTURE of her AI dream.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Blessing Malumi</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/my-journey-into-artificial-intelligence.html</guid></item><item><title>Parallel Programming with (Py)OpenCL for Fun and Profit</title><link>https://pyvideo.org/pycon-za-2018/parallel-programming-with-pyopencl-for-fun-and-profit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="section" id="overview"&gt;
&lt;h4&gt;Overview&lt;/h4&gt;
&lt;p&gt;It's never been easier to use all manner of interesting computing
devices such as multicore CPUs, GPUs and FPGAs using
&lt;a class="reference external" href="https://www.khronos.org/opencl/"&gt;OpenCL&lt;/a&gt;, an open heterogeneous
computing standard, supported by major hardware vendors:
&lt;a class="reference external" href="https://software.intel.com/en-us/articles/opencl-drivers"&gt;Intel&lt;/a&gt;,
&lt;a class="reference external" href="https://developer.nvidia.com/opencl"&gt;NVIDIA&lt;/a&gt;,
&lt;a class="reference external" href="https://www.amd.com/en-%20us/solutions/professional/hpc/opencl"&gt;AMD&lt;/a&gt;,
&lt;a class="reference external" href="https://developer.arm.com/graphics/resources/tutorials/opencl-%20tutorials"&gt;ARM&lt;/a&gt;,
etc. And it's never been easier to use OpenCL via the excellent Python
bindings, &lt;a class="reference external" href="https://documen.tician.de/pyopencl/"&gt;PyOpenCL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this talk, I will introduce the basics of the OpenCL programming and
runtime APIs, using examples run in Jupyter notebooks on a variety of
devices. I will also help identify the situations where it makes sense
to accelerate portions of a codebase.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="audience"&gt;
&lt;h4&gt;Audience&lt;/h4&gt;
&lt;p&gt;This talk is aimed at anyone who loves the expressiveness of Python, but
has bumped into its performance limitations. I assume no background in
HPC and/or heterogeneous computing, and will be using simple, yet
hopefully relevant examples such as fundamental linear algebra and
analysis applications.&lt;/p&gt;
&lt;p&gt;By the end of the talk, provided it isn't a post-lunch slot, the
audience should be ready to identify the hotspots in their code, and
start accelerating using the CPUs, GPUs and FPGAs in their laptops and
favourite public clouds such as AWS, Azure and GCE.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gordon Inggs</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/parallel-programming-with-pyopencl-for-fun-and-profit.html</guid></item><item><title>Python as a tool to boost productivity in (electronic) product and system development.</title><link>https://pyvideo.org/pycon-za-2018/python-as-a-tool-to-boost-productivity-in-electronic-product-and-system-development.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The general take away from this talk will be to motivate the use of
Python not only as the implementation language to develop your
application, but also to use Python to develop your own automation tools
that fit your development process. By doing this, you will be able to
implement faster, more accurate, have a better tested result and along
the way derive many benefits that you won’t foresee when you start.&lt;/p&gt;
&lt;p&gt;Although my talk will speak from an embedded engineering point of view
and not an IT or web development point of view, I belief the principles
applies generally. Over many years and through the life cycle of many
products I have evolved a development methodology that uses Python as
the language of choice to develop my own tools for code generation (for
‘C’ and Python), software and firmware test automation, systems
compliance testing and hardware manufacturing test automation.&lt;/p&gt;
&lt;p&gt;My process is that I start a project by defining XML object definitions
for all instances of configuration, data or communication objects. From
the XML, on the embedded firmware side, I generate ‘C’ structures,
enum’s and prototype function bodies to use in my coding. On the PC or
server side, I generate Python data object definitions from the XML.
These are imported into Python programs that are written to operate on
the object definitions, giving me free reuse of all the interfacing,
testing, visualization etc. code that I have developed in the past.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Johan Hartman</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/python-as-a-tool-to-boost-productivity-in-electronic-product-and-system-development.html</guid></item><item><title>Python Community Development in East Africa</title><link>https://pyvideo.org/pycon-za-2018/python-community-development-in-east-africa.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk is about the growth of the python user community in East
Africa, streamlining the role Afrodjango initiative is playing in
building and empowering people with Python software development skills
in the region.&lt;/p&gt;
&lt;p&gt;Our audience is python community developers and accelerators of python
programs. we want the above mentioned participants to learn about our
activities and how we are helping expand the python user community
across the region. we will be covering the growth and expansion of the
python community in East Africa.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Linus Wamanya</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/python-community-development-in-east-africa.html</guid></item><item><title>Sanic: Async Python (uvloop) with a familiar flask like feel.</title><link>https://pyvideo.org/pycon-za-2018/sanic-async-python-uvloop-with-a-familiar-flask-like-feel.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sanic is born from an article &lt;a class="reference external" href="https://magic.io/blog/uvloop-blazing-fast"&gt;https://magic.io/blog/uvloop-blazing-fast&lt;/a&gt;-
python-networking/ and the premise that async/await syntax should be
combined with a familiar flask like feel.&lt;/p&gt;
&lt;p&gt;The blazing speed of uvloop is combined with a familiar flask-like API
to create a framework with less blocking code and faster response times.&lt;/p&gt;
&lt;p&gt;This talk will cover the specifics of Sanic as well as my real world
exercise of building a insurance API with expensive blocking network
calls to legacy (and slow) insurance APIs and services.&lt;/p&gt;
&lt;p&gt;Also I might have forgotten to mention the web framework has a mascot
from the meme for sanic:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Sanic go.......................fast
                 ▄▄▄▄▄
        ▀▀▀██████▄▄▄       _______________
      ▄▄▄▄▄  █████████▄  /                 \
     ▀▀▀▀█████▌ ▀▐▄ ▀▐█ |   Gotta go fast!  |
   ▀▀█████▄▄ ▀██████▄██ | _________________/
   ▀▄▄▄▄▄  ▀▀█▄▀█════█▀ |/
        ▀▀▀▄  ▀▀███ ▀       ▄▄
     ▄███▀▀██▄████████▄ ▄▀▀▀▀▀▀█▌
   ██▀▄▄▄██▀▄███▀ ▀▀████      ▄██
▄▀▀▀▄██▄▀▀▌████▒▒▒▒▒▒███     ▌▄▄▀
▌    ▐▀████▐███▒▒▒▒▒▐██▌
▀▄▄▄▄▀   ▀▀████▒▒▒▒▄██▀
          ▀▀█████████▀
        ▄▄██▀██████▀█
      ▄██▀     ▀▀▀  █
     ▄█             ▐▌
 ▄▄▄▄█▌              ▀█▄▄▄▄▀▀▄
▌     ▐                ▀▀▄▄▄▀
 ▀▀▄▄▀
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christo Goosen</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/sanic-async-python-uvloop-with-a-familiar-flask-like-feel.html</guid></item><item><title>So What's the Story?</title><link>https://pyvideo.org/pycon-za-2018/so-whats-the-story.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the context of business, however, translating black-box-magic into
something more accessible for business-users to engage with is tricky.
While this speaks to a larger problem of upskilling and making education
more accessible, one method of translation is through story telling.&lt;/p&gt;
&lt;p&gt;I learn best when an &lt;strong&gt;idea is relatable, simple, and colourful&lt;/strong&gt;. This
talk is going to look at how to convey complex ideas simply. I'm going
to be covering two sections:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;That's So Random (Forests)!&lt;/li&gt;
&lt;li&gt;You Gotta (Neural) Network to Get Work&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I'll run through the high level concepts and methodologies, and then
show the work/code that was done to create a random forest, and a neural
network. Note: this will cover how I built the RF, and NN using Python
via Jupyter Notebook.&lt;/p&gt;
&lt;p&gt;This session is for anyone who uses/wants to use ML to solve problems
but struggles with translating the black-box-magic. It's going to be an
engaging, and slightly animated, talk with the intention of reinforcing
concepts and showcasing different ways of explaining them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kerryn Gammie</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/so-whats-the-story.html</guid></item><item><title>Thursday Lightning Talks</title><link>https://pyvideo.org/pycon-za-2018/thursday-lightning-talks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/thursday-lightning-talks.html</guid></item><item><title>Two approaches to python web services</title><link>https://pyvideo.org/pycon-za-2018/two-approaches-to-python-web-services.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We discuss two different approaches to building web services using
Python. The first and more traditional approach uses Flask to build a
web service, while the second approach builds a web service using only
native Python 2.7 libraries without dependencies on any additional
software.&lt;/p&gt;
&lt;p&gt;The talk starts by discussing web services in general before moving onto
the different environments our services run in, and what they will be
used for. We will briefly cover the code used, but the focus will be on
the reason why we need two different approaches and we will compare the
risks and benefits of using these two contrasting methods.&lt;/p&gt;
&lt;p&gt;We hope the talk will inspire people to experiment even further with web
services, or at least give them insight into new ways they could use web
services.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kenneth Goldswain</dc:creator><pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-12:pycon-za-2018/two-approaches-to-python-web-services.html</guid></item><item><title>A Brief Introduction to PyGame Zero</title><link>https://pyvideo.org/pycon-za-2018/a-brief-introduction-to-pygame-zero.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyGame Zero is designed to be a boilerplate free wrapper around PyGame,
avoiding the need to manage the PyGame event loop and simplifying the
API significantly.&lt;/p&gt;
&lt;p&gt;PyGame Zero is designed as an educational tool, but it does not
compromise on the ability to create complex games and so it also serves
as a nice general purpose introduction to writing graphical games in
python.&lt;/p&gt;
&lt;p&gt;In this talk, I will give a brief introduction to PyGame Zero,
demonstrating it's core functionality and delve into some of the more
advanced features it provides.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Neil Muller</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/a-brief-introduction-to-pygame-zero.html</guid></item><item><title>An introduction to concurrent programming with asyncio</title><link>https://pyvideo.org/pycon-za-2018/an-introduction-to-concurrent-programming-with-asyncio.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Concurrent programming is useful any time one needs to deal with
multiple concurrent tasks: a server answering requests from multiple
clients, a client scraping data from multiple servers, a workflow
manager running external processes in a pipeline, and more.&lt;/p&gt;
&lt;p&gt;While there are many concurrent programming frameworks for Python, there
is one that is included out of the box: asyncio. I will introduce the
framework and explain the syntax and APIs. Perhaps more importantly, I
will offer practical tips on development with asyncio, such as exception
handling, testing, debugging, and integration with existing code.&lt;/p&gt;
&lt;p&gt;Attendees will come away with an understanding of why they will want to
use asyncio instead of multi-threading, an understanding of the basic
concepts, and knowledge of some additional libraries that will help them
be productive with asyncio.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bruce Merry</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/an-introduction-to-concurrent-programming-with-asyncio.html</guid></item><item><title>Bring Django Girls Workshop to Mozambique.</title><link>https://pyvideo.org/pycon-za-2018/bring-django-girls-workshop-to-mozambique.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In Mozambique, as well as in other African countries, ICT is still seen
as being exclusively for boys. Social norms do not teach women to choose
coding or others ICT areas.&lt;/p&gt;
&lt;p&gt;Bringing Django Girls Workshop to Maputo was meant to teach girls more
than how to code and create amazing blogs, we also wanted to use it as a
platform to create opportunities that would empower them and promoting
the diversity in technology.&lt;/p&gt;
&lt;p&gt;Today we have started to hold small and informal meetings to teach girls
and boys how to program in python. Some of the girls who have
participated in Django Girls Maputo workshops have continued to learn
more and develop their skills. We hope to have more girls learn how to
code in python so they can also share their experiences.&lt;/p&gt;
&lt;p&gt;Our talk will cover the importance of how bringing Django Girls
community to our girls in Mozambique and how powerful it was, is and it
will be to bring them to demonstrate their abilities, skills and belief
in their capabilities.&lt;/p&gt;
&lt;p&gt;The message we intend to cover to the audience is that Django Girls is
not only for a some women, but it's for all women that we can reach, so
that we can encouraging more women to strive for programming careers
benefits the tech community at large and also is a way to give them
tools and show them the way that they can empower themselves and
contribute in technological development, so that better the societies
they are situated in.&lt;/p&gt;
&lt;p&gt;One of the most amazing feedbacks that we got was: &amp;quot;In this event it is
possible to realize that anyone is capable of developing technological
tools. Django Girls has come to say that women are capable of
programming, coding and creating technological solutions&amp;quot;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cecilia Tivir</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/bring-django-girls-workshop-to-mozambique.html</guid></item><item><title>Deploying and Managing Python with Kubernetes</title><link>https://pyvideo.org/pycon-za-2018/deploying-and-managing-python-with-kubernetes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Because of the benefits of containers, python applications have been
containerized recently. Containers have magically changed the way we
deploy and manage python applications allowing us to build, develop,
test, and even deploy python applications on a single system with no
upgrade downtimes.&lt;/p&gt;
&lt;p&gt;Kubernetes is the missing layer that gives us the ability to manage many
containers by providing features that enable containers to scale, talk
to each other and work in harmony.&lt;/p&gt;
&lt;p&gt;This talk will focus on how python developers can leverage Kubernetes to
manage any sort of python application on Kubernetes from simple to
complex applications.&lt;/p&gt;
&lt;p&gt;The talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The basics of Kubernetes.&lt;/li&gt;
&lt;li&gt;The basics of containerizing python applications.&lt;/li&gt;
&lt;li&gt;How to run and deploy simple, web and deep learning python pipelines
on Kubernetes.&lt;/li&gt;
&lt;li&gt;How to manage or work with Kubernetes using the Kubernetes python
client.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk will cover in summary the topics I talk about in my upcoming
book &amp;quot;Deploying and Managing Python with Kubernetes&amp;quot; published by Apress
sometime this year.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joannah Nanjekye</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/deploying-and-managing-python-with-kubernetes.html</guid></item><item><title>Distributed microservices in the real world</title><link>https://pyvideo.org/pycon-za-2018/distributed-microservices-in-the-real-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is intended for anyone interested in deploying microservices
in their environment. It examines what is involved in developing,
deploying and maintaining a distributed microservices architecture.
Moving from a monolithic architecture to a services oriented
architecture has many benefits and tradeoffs that need to be addressed.&lt;/p&gt;
&lt;p&gt;One has to consider whether to go with an off the shelf solution or
build your own. When does it make sense to do the latter? Tasks like
monitoring and debugging is more difficult with the added complexity
that is inherent with a distributed system.&lt;/p&gt;
&lt;p&gt;This first part of the talk reviews what needs to be considered when
deciding to build applications on a distributed microservices
architecture. Topics that will be covered include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why choose a microservices architecture, and when not to?&lt;/li&gt;
&lt;li&gt;Objectives of a distributed services architecture&lt;ul&gt;
&lt;li&gt;Service presence&lt;/li&gt;
&lt;li&gt;Heartbeating&lt;/li&gt;
&lt;li&gt;Logging&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;li&gt;Reliability&lt;/li&gt;
&lt;li&gt;Performance and Scalability&lt;/li&gt;
&lt;li&gt;Monitoring&lt;/li&gt;
&lt;li&gt;Troubleshooting&lt;/li&gt;
&lt;li&gt;Message contracts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The second part of the talk delves into the micorservices framework
built and used by CareerJunction. It is an in house framework written in
Python 3 (3.5+) which uses asyncio for nonblocking I/O and ZeroMQ as a
concurrency networking library.&lt;/p&gt;
&lt;p&gt;In simple terms, the framework implements a reliable service-oriented
request- reply dialog between a set of client applications, a set of
brokers and a set of worker applications.&lt;/p&gt;
&lt;p&gt;The features of the framework include those discussed in the first part
of the talk and will be showcased by coding and deploying a service.
Above and beyond that, the following topics will be covered:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Conceptual architecture&lt;/li&gt;
&lt;li&gt;Architecture goals&lt;/li&gt;
&lt;li&gt;Coding a service&lt;ul&gt;
&lt;li&gt;Creating and running a service&lt;/li&gt;
&lt;li&gt;Message contract parameters&lt;/li&gt;
&lt;li&gt;Exposing services via HTTP&lt;/li&gt;
&lt;li&gt;Scheduled Jobs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The last part of the talk examines the lessons learnt over the past few
years, what to avoid and the benefits it brought not only to the IT
team, but to the business as a whole. Topics that will be covered
include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;IT benefits&lt;/li&gt;
&lt;li&gt;Business benefits&lt;/li&gt;
&lt;li&gt;What to avoid?&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Imraan Parker</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/distributed-microservices-in-the-real-world.html</guid></item><item><title>Elementary, my dear Python</title><link>https://pyvideo.org/pycon-za-2018/elementary-my-dear-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sherlock is a diagnostics framework used to assess fleet health within
Oracle Public Cloud. It is developed in Python, and operates within a
restricted Python environment, but has been designed to overcome the
challenges of our enterprise environment.&lt;/p&gt;
&lt;p&gt;This talk will provide an overview of the restricted Python environment
in which Sherlock operates and discuss how Sherlock has leveraged
features of Python to maintain its independence. It will highlight the
design challenges that were faced to ensure that the framework could be
robust and lightweight. As part of the talk, I will showcase how we've
utilised Python's strengths to provide a framework which easily allows
developers from vastly different teams to write diagnostic scripts to
easily asses service health across a global fleet.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erin Versfeld</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/elementary-my-dear-python.html</guid></item><item><title>Friday Lightning Talks</title><link>https://pyvideo.org/pycon-za-2018/friday-lightning-talks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/friday-lightning-talks.html</guid></item><item><title>From Idea to Product: Customer Profiling in Apache Zeppelin with PySpark</title><link>https://pyvideo.org/pycon-za-2018/from-idea-to-product-customer-profiling-in-apache-zeppelin-with-pyspark.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Zeppelin is a web based notebook which enables interactive data
analytics on big data. Data can easily be ingested from a variety of
databases and analysis can be performed in Python and Pyspark.
Visualisations can be built and displayed together with the code, using
Zeppelin’s built in tool Helium, or Python specific tools such as
Matplotlib and Bokeh. The web based interface facilitates easy sharing
of results, and collaboration on projects.&lt;/p&gt;
&lt;p&gt;Developing in Zeppelin has changed the way we approach model
development. We are able to take a project from an idea to a product all
within one tool using the following process:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Come up with an idea. Write some notes in a Zeppelin notebook
describing how we would like the idea implemented.&lt;/li&gt;
&lt;li&gt;Slowly start fleshing out the idea, with real code, until the
solution is built. This is great to demo, as the code is in bite size
chunks, and visualisations can be added directly in.&lt;/li&gt;
&lt;li&gt;Take the code into production. It can be scheduled it to run directly
in Zeppelin with a cron scheduler, or from a tool such as Nifi.
Interactive visualisations can be embedded in a web-based frontend.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This talk is aimed at data scientists, particularly those working with
big data. We will demonstrate how we have built a catalogue of
subscriber attributes based on customer mobile usage and purchase
behavior using Zeppelin and Pyspark. These attributes can be used to
profile subscribers, and are the starting point for indivisualised
customer engagement. Anyone who attends this talk will get an
introduction to Zeppelin and Pyspark and an overview of what can be
achieved with these tools.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sarah Sprich</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/from-idea-to-product-customer-profiling-in-apache-zeppelin-with-pyspark.html</guid></item><item><title>How to deploy your Python Web App on Google Cloud Platform</title><link>https://pyvideo.org/pycon-za-2018/how-to-deploy-your-python-web-app-on-google-cloud-platform.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The goal of this talk is to give a basic understanding of how you can
configure and deploy your Python web app on various Google Cloud
Platform services.&lt;/p&gt;
&lt;p&gt;We will start by demonstrating how to setup and deploy a Python web app
on both Standard and Flexible Google App Engine platforms. After that,
we will show how to provision a Linux VM on Google Cloud to run a python
web app. We will then explore how to package our Python web app into a
docker image and deploy the same on Google Kubernetes Engine (GKE).
Finally, we will explore Google Cloud Functions and how to write a
serverless app in Python.&lt;/p&gt;
&lt;p&gt;The audience for this talk is generally Python web developers and devops
engineers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Mwai</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/how-to-deploy-your-python-web-app-on-google-cloud-platform.html</guid></item><item><title>Jupyter Notebooks for Data Science</title><link>https://pyvideo.org/pycon-za-2018/jupyter-notebooks-for-data-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is intended for beginner and intermediate data scientists/
analysts/ engineers, although I hope that even experienced data
scientists can gain something from the talk.&lt;/p&gt;
&lt;p&gt;The talk will focus on using Jupyter notebooks in data science
applications. I will discuss the basics of how to get it up and running
and the common features like using markup and code in the same notebook,
I will highlight the advantages of working in a notebook rather than a
traditional IDE. I will also discuss other features like using code
snippets, autocomplete, linting and creating a table of contents.
Inserting images and videos into a notebook along side your code can be
a handy way of learning something new. I will end the talk with a look
into jupyterlab.&lt;/p&gt;
&lt;p&gt;Attendees of this course will gain an understanding and appreciation of
the quick prototyping that is afforded to you when using Jupyter
notebooks in your data science pipeline. Especially when it comes to
exploratory data analysis. I want to be able to showcase all the common
features of Jupyter notebooks but also some less known ones, so that
there everyone attending the talk will learn something.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ari Ramkilowan</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/jupyter-notebooks-for-data-science.html</guid></item><item><title>Machine Learning in Real Life</title><link>https://pyvideo.org/pycon-za-2018/machine-learning-in-real-life.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thanks to the openness of the machine learning community, any developer with an interest in machine learning these days, can get up a model to recognise characters or generate Trump-like tweets in a couple of hours. But what happens when we need to train a model to do a customer facing task, that we trust enough to deploy to a production system? And how do we get that model into production and maintain it once it is there?&lt;/p&gt;
&lt;p&gt;My talk aims to share some of the struggles, trade-offs and strategies from the trenches of training and building the infrastructure for a complex deep learning model for production use.&lt;/p&gt;
&lt;p&gt;The talk is aimed at tech leads and developers who are interested in machine learning and are working on training their own models that they'd like to deploy&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jade Abbott</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/machine-learning-in-real-life.html</guid></item><item><title>Playing with Python's internals</title><link>https://pyvideo.org/pycon-za-2018/playing-with-pythons-internals.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will look at two of my libraries which stretch the limits of
what's possible with Python:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/alexmojaki/birdseye"&gt;birdseye&lt;/a&gt;, a debugger
that records the value of every expression for easy viewing, and&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/alexmojaki/sorcery"&gt;sorcery&lt;/a&gt;, a framework for
writing magical functions which know the context in which they are
called.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;They work by inspecting and manipulating Python's inner workings:
execution frames, code objects, and most importantly the Abstract Syntax
Tree (AST). I will give an overview of these concepts and explain how
some parts of the libraries work.&lt;/p&gt;
&lt;p&gt;This is for people interested in peeking under the hood of Python from
within Python, i.e. no C and no messing with the interpreter.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Hall</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/playing-with-pythons-internals.html</guid></item><item><title>Python as a tool for e-health systems</title><link>https://pyvideo.org/pycon-za-2018/python-as-a-tool-for-e-health-systems.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;E-health has proven to have many benefits including reduced errors in
medical diagnosis. A number of machine learning (ML) techniques have
been applied in medical diagnosis, each having its benefits and
disadvantages. With its powerful pre-built libraries, Python is great
for implementing machine learning in the medical field, where many
people do not have an Artificial Intelligence background.&lt;/p&gt;
&lt;p&gt;This talk will focus on applying ML on medical datasets using
Scikit-learn, a Python module that comes packed with various machine
learning algorithms. It will be structured as follows:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An introduction to e-health.&lt;/li&gt;
&lt;li&gt;Types of medical data.&lt;/li&gt;
&lt;li&gt;Some Benchmark algorithms used in medical diagnosis: Decision trees,
K-Nearest Neighbours, Naive Bayes and Support Vector Machines.&lt;/li&gt;
&lt;li&gt;How to implement benchmark algorithms using Scikit-learn.&lt;/li&gt;
&lt;li&gt;Performance evaluation metrics used in e-health.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk is aimed at people interested in real-life applications of
machine learning using Python. Although centered around ML in medicine,
the acquired skills can be extended to other fields.&lt;/p&gt;
&lt;p&gt;About the speaker: Diana Pholo is a PhD student and lecturer in the
department of Computer Systems Engineering, at the Tshwane University of
Technology.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Diana Pholo</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/python-as-a-tool-for-e-health-systems.html</guid></item><item><title>Python on Azure</title><link>https://pyvideo.org/pycon-za-2018/python-on-azure.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a general purpose programming language which has broad usage areas from web applications to data science. Microsoft Azure is an ever-expanding set of cloud services to help your organization meet your business challenges. It’s the freedom to build, manage, and deploy applications on a massive, global network using your favorite tools and frameworks. In this session you will learn about Azure tools and services for Python developers and data scientists and learn how to build and deploy Python apps in Azure, with a range of apps and data services.&lt;/p&gt;
&lt;p&gt;This talk will provide a high level introduction to the wide range of Azure tools, app and data services for Python developers and data scientist, and will conclude with a demonstration of end to end application lifecycle management of a Python app using Azure services and open source Microsoft tools.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toros Gökkurt</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/python-on-azure.html</guid></item><item><title>Reproducible Data Science with Docker</title><link>https://pyvideo.org/pycon-za-2018/reproducible-data-science-with-docker.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Collaboration is a major part of doing Data Science. This means Data
Scientists are always sharing their work with their colleagues whether
to continue in the Data Science process or for review. One problem that
is mostly faced in this process is the &amp;quot;It works on my machine&amp;quot; problem.&lt;/p&gt;
&lt;p&gt;Docker is a tool that is used to package and run applications with all
their dependencies in an isolated environment.&lt;/p&gt;
&lt;p&gt;In this talk, I'll use Python to analyse some data in jupyter notebooks
and show how Docker can be used to ensure reproducibility of that
analysis in a different environment.&lt;/p&gt;
&lt;p&gt;This talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The basics of the data science workflow&lt;/li&gt;
&lt;li&gt;The basics of Docker&lt;/li&gt;
&lt;li&gt;A demonstration of sharing and reproducing data analysis work in a
jupyter notebook.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Ackon</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/reproducible-data-science-with-docker.html</guid></item><item><title>Teach kids (7-17) to code with python &amp; CoderDojo</title><link>https://pyvideo.org/pycon-za-2018/teach-kids-7-17-to-code-with-python-coderdojo.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For the last 6 years (since pycon 2012) David's had a weekly class
teaching kids to code. See what the first steps look like, get involved
in a dojo!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Campey</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/teach-kids-7-17-to-code-with-python-coderdojo.html</guid></item><item><title>Test your Docker images with Python</title><link>https://pyvideo.org/pycon-za-2018/test-your-docker-images-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As more and more software is packaged in Docker images, it has become
increasingly important that the Dockerfiles and scripts that these
images are built from are correct. If Docker images are built and
deployed as part of an automated pipeline, it is also important that
they continue to work as expected when changes are made upstream.&lt;/p&gt;
&lt;p&gt;Start testing your Docker images without relying on Bash scripts! We’ll
cover why we decided to write a testing library and how to use it. We’ll
also talk about some of the test fixtures we developed for common
infrastructure such as RabbitMQ and PostgreSQL. Finally, we’ll explore
some of the limitations and workarounds of creating a test environment
of Docker containers.&lt;/p&gt;
&lt;p&gt;Some of the best tools for working with Docker are already written in
Python, for example, docker-compose. Bringing together the Python
ecosystems around Docker and test frameworks, we created a new Python
library called Seaworthy. Seaworthy can be used to verify that a Docker
image works as expected in an isolated environment. It provides rich
tools for asserting on processes, logs, and HTTP requests.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jamie Hewland</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/test-your-docker-images-with-python.html</guid></item><item><title>Testing in the wild</title><link>https://pyvideo.org/pycon-za-2018/testing-in-the-wild.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This talk is aimed at anyone interested in testing real code with real
deadlines. In this talk Test Driven Development (TDD) will be explored
along with alternatives to TDD. By the end of this talk participants
will have a greater understanding of how to apply one of the tools of
testing in the real world and how to ensure they have time in the
development cycle to test their code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Questions covered&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Almost everyone talks about TDD these days. TDD is taken as the thing to
aim for and the one thing you must do as a developer. But does TDD
actually work when you are out of the classroom context and in the real
world? Are there alternatives to TDD that are better to use? How do you
begin to test legacy code so that you can change it safely? What about
that new feature that marketing wants ASAP and you have to quickly pull
a rabbit out the hat for? How should one ensure that this new code is
added rapidly but with good tests? These and many other questions will
be briefly explored in this talk.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools used&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This talk will focus on unit testing and will use &lt;a class="reference external" href="https://pypi.org/project/nose/"&gt;Python
nose&lt;/a&gt; as the test runner. Python nose
extends &lt;a class="reference external" href="https://docs.python.org/2/library/unittest.html"&gt;unittest&lt;/a&gt;
and makes it easier to setup, discover and run tests with Python. Some
brief examples of tests will be shown using Python 2.7 but the broader
concepts apply equally well to Python 3.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Heather Williams</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/testing-in-the-wild.html</guid></item><item><title>The Developer's Guide to Data Science</title><link>https://pyvideo.org/pycon-za-2018/the-developers-guide-to-data-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The myth of data science holds that you need an army of machine learning
PHDs to be able to implement anything impactful with data science. In
this talk I will attempt to dispel this myth and show how software
developers can skip getting the machine learning PHD and start building
awesome software with Data Science and Machine Learning today.&lt;/p&gt;
&lt;p&gt;I believe developers are well situated to implement data science
projects as they possess the understanding of how the product works, how
users like to interact with the product and their opinions are already
valued within the business.&lt;/p&gt;
&lt;p&gt;To help developers level up their data science skills, I’ll discuss the
core concepts behind the most prevalent methods in data science, how the
data science process works, how to think like a data scientist, which
frameworks and programming languages to choose (surprise Python!) and
how to measure and communicate the value-add of data science projects to
the business.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;About the speaker: Helge Reikeras is a Data Scientist at Offerzen with
over 6 years experience in practical data science and has also worked as
a software developer at various points in his career.&lt;/em&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Helge Reikeras</dc:creator><pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-11:pycon-za-2018/the-developers-guide-to-data-science.html</guid></item></channel></rss>