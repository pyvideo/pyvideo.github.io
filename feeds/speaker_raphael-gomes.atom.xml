<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Raphaël Gomès</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_raphael-gomes.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-02-18T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Booster Python avec Rust : le cas de Mercurial</title><link href="https://pyvideo.org/pycon-fr-2019/booster-python-avec-rust-le-cas-de-mercurial.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Raphaël Gomès</name></author><id>tag:pyvideo.org,2019-11-02:/pycon-fr-2019/booster-python-avec-rust-le-cas-de-mercurial.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Historiquement, le gestionnaire de version Mercurial utilise des modules en C pour améliorer ses performance lorsque Python ne suffit plus. L'année dernière, des contributeurs ont commencé à utiliser des modules en Rust comme une alternative plus sécuritaire, plus agréable et mieux outillée que C afin de compléter la base …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Historiquement, le gestionnaire de version Mercurial utilise des modules en C pour améliorer ses performance lorsque Python ne suffit plus. L'année dernière, des contributeurs ont commencé à utiliser des modules en Rust comme une alternative plus sécuritaire, plus agréable et mieux outillée que C afin de compléter la base Python de Mercurial.&lt;/p&gt;
&lt;p&gt;Depuis fin 2018, Octobus a le plus grand nombre de contributions Rust dans Mercurial. Nous avons découvert des problèmes liés l'interaction de ces deux langages et trouvé des solutions qui n'avaient jusque-là  - à notre connaissance -  jamais été publiées sur Internet.&lt;/p&gt;
&lt;p&gt;Au programme :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Une vue d'ensemble de l'intégration de Rust à Python&lt;/li&gt;
&lt;li&gt;Les points positifs et négatifs de notre solution et les alternatives&lt;/li&gt;
&lt;li&gt;Des chiffres comparatifs de performance&lt;/li&gt;
&lt;li&gt;Une porte ouverte à la curiosité quant aux détails excessivement techniques.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyCon FR 2019"></category></entry><entry><title>« Fixed bugs » n’est peut-être pas le meilleur message de commit</title><link href="https://pyvideo.org/pycon-fr-2023/fixed-bugs-nest-peut-etre-pas-le-meilleur-message-de-commit.html" rel="alternate"></link><published>2023-02-18T00:00:00+00:00</published><updated>2023-02-18T00:00:00+00:00</updated><author><name>Raphaël Gomès</name></author><id>tag:pyvideo.org,2023-02-18:/pycon-fr-2023/fixed-bugs-nest-peut-etre-pas-le-meilleur-message-de-commit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Si vos commits font tous 3000 lignes, vos messages 3 mots, votre historique ressemble à des spaghetti et que la question &amp;quot;qui a introduit cette ligne et pourquoi ?&amp;quot; vous fait peur, il y a quelque chose pour vous ! Sinon, invitez vos collègues qui n'ont pas autant de sagesse, ça …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Si vos commits font tous 3000 lignes, vos messages 3 mots, votre historique ressemble à des spaghetti et que la question &amp;quot;qui a introduit cette ligne et pourquoi ?&amp;quot; vous fait peur, il y a quelque chose pour vous ! Sinon, invitez vos collègues qui n'ont pas autant de sagesse, ça vous fera toujours gagner du temps.&lt;/p&gt;
&lt;p&gt;Cette présentation essayera de vous convaincre de l'énorme utilité de maintenir et naviguer dans un historique propre, peu importe l'outil que vous utilisez, le projet sur lequel vous travaillez ou le langage dans lequel vous écrivez.&lt;/p&gt;
</content><category term="PyCon FR 2023"></category></entry></feed>