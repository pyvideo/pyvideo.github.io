<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 11 Aug 2014 00:00:00 +0000</lastBuildDate><item><title>PyPy - is it ready for production?</title><link>https://pyvideo.org/pycon-au-2012/pypy-is-it-ready-for-production.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;I have followed the development of PyPy since 2004 and played with
various releases to see what the PyPy team had achieved. It wasn't until
the release of PyPy 1.18 that I actually ran some existing production
python code under it. The perc&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I have followed the development of PyPy since 2004 and played with
various releases to see what the PyPy team had achieved. It wasn't until
the release of PyPy 1.18 that I actually ran some existing production
python code under it. The perceived performance improvement of this
exercise inspired me to implement a more scientific method for comparing
the runtime performance of CPython and PyPy running various Python
production code sets that we use in the company I work for. This
presentation will discuss the results of this comparison and the
positives and negatives with utilising PyPy in production.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Rees</dc:creator><pubDate>Wed, 22 Aug 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-08-22:pycon-au-2012/pypy-is-it-ready-for-production.html</guid><category>pypy</category></item><item><title>Seeing with Python by Mark Rees</title><link>https://pyvideo.org/pycon-au-2014/seeing-with-python-by-mark-rees.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In 2013 I purchased a Ninja Block (&lt;a class="reference external" href="http://ninjablocks.com/"&gt;http://ninjablocks.com/&lt;/a&gt;) and wanted
to add a camera based sensor to it. So began my adventures in computer
vision using python. The talk will discuss the various libraries
(including PyOpenCV &amp;amp; SimpleCV ) available for python to perform CV
tasks like motion detection, object tracking &amp;amp; facial recognition. As my
goals for the camera sensor underwent &amp;quot;feature creep&amp;quot; the project
required it's own dedicated processing power, so a BeagleBone Black &amp;amp;
later a Raspberry Pi were purchased and the project became a IoT device.
I will also share my experiences with developing python CV solutions ARM
based computers. If the demo gods are willing, code examples will be
demonstrated.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Rees</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/seeing-with-python-by-mark-rees.html</guid></item></channel></rss>