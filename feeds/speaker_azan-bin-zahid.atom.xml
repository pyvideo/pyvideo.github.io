<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Azan Bin Zahid</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_azan-bin-zahid.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-07-30T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Paginated APIs x Python</title><link href="https://pyvideo.org/pyohio-2022/paginated-apis-x-python.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Azan Bin Zahid</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/paginated-apis-x-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While working with making requests to external RESTful APIs using
Python, we can use just one line to get data. What if the endpoints are
paginated and have limitations as well? Developers may find it hard to
code for paginated results, store them and/or add throttling between
consecutive â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While working with making requests to external RESTful APIs using
Python, we can use just one line to get data. What if the endpoints are
paginated and have limitations as well? Developers may find it hard to
code for paginated results, store them and/or add throttling between
consecutive requests.&lt;/p&gt;
&lt;p&gt;This talk will cover some useful and robust ways to deal efficiently
with range paginated APIs patterns using Python.&lt;/p&gt;
&lt;p&gt;Read more: &lt;a class="reference external" href="https://github.com/azanbinzahid/paginated-apis-pyohio-2022"&gt;https://github.com/azanbinzahid/paginated-apis-pyohio-2022&lt;/a&gt;&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry></feed>