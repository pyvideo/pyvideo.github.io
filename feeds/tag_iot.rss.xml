<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 25 Aug 2019 00:00:00 +0000</lastBuildDate><item><title>Build and hack your own IoT with MQTT</title><link>https://pyvideo.org/kiwi-pycon-2019/build-and-hack-your-own-iot-with-mqtt.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Connecting the things in the Internet of Things (IoT) is hard. This talk will introduce MQTT - a messaging protocol which makes it easier to exchange information between disparate devices. You'll be equipped to build your own IoT system and hack it to find some of its weaknesses.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Agnetha Korevaar</dc:creator><pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-25:kiwi-pycon-2019/build-and-hack-your-own-iot-with-mqtt.html</guid><category>iot</category><category>internet of things</category><category>MQTT</category></item><item><title>Primeros pasos con MicroPython</title><link>https://pyvideo.org/pyday-nea-2019/primeros-pasos-con-micropython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Conocer cuales son los pasos necesarios para trabajar con MicroPython y como hacerlo. Pequeña demo de como entrar en el mundo IoT con MicroPython&lt;/p&gt;
&lt;p&gt;Charla dada en el PyDay NEA 2019, Resistencia, Chaco, Argentina, UTN FRRE, French y Ayacucho, el 29/06/2019&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://eventos.python.org.ar/events/pydaynea2019/activity/186/"&gt;https://eventos.python.org.ar/events/pydaynea2019/activity/186/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guillermo Sampallo</dc:creator><pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-06-29:pyday-nea-2019/primeros-pasos-con-micropython.html</guid><category>esp8266</category><category>iot</category><category>micropython</category><category>pyar</category><category>pydaynea</category><category>python</category><category>pythonargentina</category><category>utn</category></item><item><title>Introduzione a Zerynth: Python per Microcontrollori e Applicazioni IoT</title><link>https://pyvideo.org/pycon-italia-2019/introduzione-a-zerynth-python-per-microcontrollori-e-applicazioni-iot.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Durante il talk verrà presentato Zerynth
(&lt;a class="reference external" href="https://www.zerynth.com/"&gt;www.zerynth.com&lt;/a&gt;), un software per la
programmazione di &lt;strong&gt;microcontrollori&lt;/strong&gt; in &lt;strong&gt;Python&lt;/strong&gt; e la realizzazione
di applicazioni &lt;strong&gt;IoT&lt;/strong&gt; e per l’ &lt;strong&gt;Industria 4.0&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I principali argomenti trattati saranno:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Perchè utilizzare Zerynth (e quindi Python) per programmare
dispositivi IoT.&lt;/li&gt;
&lt;li&gt;Differenza tra Zerynth e il Python tradizionale.&lt;/li&gt;
&lt;li&gt;Differenza tra Zerynth ed altre piattaforme di programmazione
&lt;strong&gt;“embedded”&lt;/strong&gt; come &lt;strong&gt;Raspberry Pi&lt;/strong&gt; , &lt;strong&gt;Micropython&lt;/strong&gt; e &lt;strong&gt;Arduino&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Panoramica delle schede elettroniche supportate e dei servizi
&lt;strong&gt;Cloud&lt;/strong&gt; compatibili. In particolare verrà presentata la board
&lt;a class="reference external" href="http://4zerobox.com/"&gt;4zerobox&lt;/a&gt;, una delle schede elettroniche
ufficialmente supportate da Zerynth, mostrandone le caratteristiche
principali e le applicazioni in &lt;strong&gt;campo industriale&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Target ideale&lt;/strong&gt; : sviluppatori Python, professionisti dell’IoT,
designers, studenti e insegnanti, makers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Per approfondire&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;La suite di sviluppo Zerynth è composta da:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Zerynth Studio&lt;/strong&gt; , un IDE professionale per la programmazione in
Python su schede elettroniche a microcontrollore. Zerynth Studio è
free e cross-platform. Scaricabile da qui:
&lt;a class="reference external" href="https://www.zerynth.com/zerynth-studio/"&gt;https://www.zerynth.com/zerynth-studio/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zerynth Virtual Machine&lt;/strong&gt; , un sistema operativo real-time
multithreaded che fornisce una reale indipendenza dall’hardware e che
permette il riutilizzo del codice su qualsiasi architettura MCU.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zerynth App&lt;/strong&gt; , una App generica per smartphone con cui
visualizzare i dati e/o controllare i dispositivi programmati con
Zerynth.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1488"&gt;https://python.it/feedback-1488&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 09:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luigi Francesco Cerfeda</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-italia-2019/introduzione-a-zerynth-python-per-microcontrollori-e-applicazioni-iot.html</guid><category>micropython</category><category>iot</category><category>embedded</category><category>industry applications</category><category>microcontroller</category><category>aws</category><category>InternetOfThings</category><category>InternetDelleCose</category><category>industry4.0</category><category>google-cloud</category></item><item><title>How software can feed the world</title><link>https://pyvideo.org/pycon-italia-2019/how-software-can-feed-the-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Infarm is a FaaS, Farming as a Service, and whether you believe it or
not, our business is in-house farming at scale.&lt;/p&gt;
&lt;p&gt;We design and build our farms, grow vegetables and sell them, and the
backbone of our infrastructure is based on Python.&lt;/p&gt;
&lt;p&gt;More than 10 million observations recorded from our farms, rapidly
increasing given our expansion to new markets, feed our farm management
system that allows the operators, plant scientists, and supervisors to
monitor each farm in real-time.&lt;/p&gt;
&lt;p&gt;During this talk I will introduce our IoT infrastructure, how we use
Python and how we plan to improve the capabilities of our farms by
adding edge machine learning.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1785"&gt;https://python.it/feedback-1785&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Saturday 4 May&lt;/strong&gt; at 18:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Barra</dc:creator><pubDate>Sat, 04 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-04:pycon-italia-2019/how-software-can-feed-the-world.html</guid><category>microservices</category><category>iot</category><category>CloudComputing</category><category>microcontroller</category><category>influxdb</category><category>raspberrypi</category><category>machine-learning</category><category>social-impact</category><category>python3</category></item><item><title>IoT con Python: si può fare! dall'ESP8266 alla casa domotica</title><link>https://pyvideo.org/pycon-italia-2018/iot-con-python-si-puo-fare-dallesp8266-alla-casa-domotica.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Se anche tu negli ultimi tempi hai sentito l’irrefrenabile bisogno di
accendere le luci della tua casa mentre sei in vacanza o di guardare
cosa fanno i tuoi animaletti quando non ci sei, ma non ti accontenti…
allora questo talk fa per te!&lt;/p&gt;
&lt;p&gt;Vi farò vedere come è possibile avere uno stack completo di sviluppo per
la domotica completamente in python, dalla programmazione dei sensori
attraverso gli economici ESP 8266 e suoi derivati ai sistemi di gestione
complessi.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 17:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lelio Campanile</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:pycon-italia-2018/iot-con-python-si-puo-fare-dallesp8266-alla-casa-domotica.html</guid><category>micropython</category><category>iot</category><category>Python</category><category>practice</category><category>automation</category><category>raspberrypi</category></item><item><title>Introduzione a Zerynth: Python per Microcontrollori e Applicazioni IoT</title><link>https://pyvideo.org/pycon-italia-2018/introduzione-a-zerynth-python-per-microcontrollori-e-applicazioni-iot.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Durante il talk verrà presentato Zerynth
(&lt;a class="reference external" href="https://www.zerynth.com/"&gt;www.zerynth.com&lt;/a&gt;), un software per la
programmazione di &lt;strong&gt;microcontrollori&lt;/strong&gt; in &lt;strong&gt;Python&lt;/strong&gt; e la realizzazione
di applicazioni &lt;strong&gt;IoT&lt;/strong&gt; e per l’ &lt;strong&gt;Industria 4.0&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I principali argomenti trattati saranno:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Perchè utilizzare Zerynth (e quindi Python) per programmare
dispositivi IoT.&lt;/li&gt;
&lt;li&gt;Differenza tra Zerynth e il Python tradizionale.&lt;/li&gt;
&lt;li&gt;Differenza tra Zerynth ed altre piattaforme di programmazione
&lt;strong&gt;“embedded”&lt;/strong&gt; come &lt;strong&gt;Raspberry Pi&lt;/strong&gt; , &lt;strong&gt;Micropython&lt;/strong&gt; e &lt;strong&gt;Arduino&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Panoramica delle schede elettroniche supportate e dei servizi
&lt;strong&gt;Cloud&lt;/strong&gt; compatibili. In particolare verrà presentata la board
&lt;a class="reference external" href="http://4zerobox.com/"&gt;4zerobox&lt;/a&gt;, una delle schede elettroniche
ufficialmente supportate da Zerynth, mostrandone le caratteristiche
principali e le applicazioni in &lt;strong&gt;campo industriale&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Target ideale&lt;/strong&gt; : sviluppatori Python, professionisti dell’IoT,
designers, studenti e insegnanti, makers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Per approfondire&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;La suite di sviluppo Zerynth è composta da:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Zerynth Studio&lt;/strong&gt; , un IDE professionale per la programmazione in
Python su schede elettroniche a microcontrollore. Zerynth Studio è
free e cross-platform. Scaricabile da qui:
&lt;a class="reference external" href="https://www.zerynth.com/zerynth-studio/"&gt;https://www.zerynth.com/zerynth-studio/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zerynth Virtual Machine&lt;/strong&gt; , un sistema operativo real-time
multithreaded che fornisce una reale indipendenza dall’hardware e che
permette il riutilizzo del codice su qualsiasi architettura MCU.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zerynth App&lt;/strong&gt; , una App generica per smartphone con cui
visualizzare i dati e/o controllare i dispositivi programmati con
Zerynth.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;in __on &lt;strong&gt;venerdì 20 aprile&lt;/strong&gt; at 15:15 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luigi Francesco Cerfeda</dc:creator><pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-20:pycon-italia-2018/introduzione-a-zerynth-python-per-microcontrollori-e-applicazioni-iot.html</guid><category>micropython</category><category>iot</category><category>embedded</category><category>industry applications</category><category>microcontroller</category><category>aws</category><category>InternetOfThings</category><category>InternetDelleCose</category><category>industry4.0</category><category>google-cloud</category></item><item><title>Can you please pass the data? IoT communication with MicroPython</title><link>https://pyvideo.org/pycascades-2018/can-you-please-pass-the-data-iot-communication-with-micropython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Come learn a bit about Micropython, a specialized version of Python for micro controllers, and how you can use it to pass messages among IoT devices. Using the concepts and code presented this talk will include a live demo of a connected temperature sensor (somewhat like the NEST). Beginner friendly!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sev Leonard</dc:creator><pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-01-23:pycascades-2018/can-you-please-pass-the-data-iot-communication-with-micropython.html</guid><category>iot</category><category>micropython</category></item><item><title>Continuous Delivery for Iot with Python and Iottly</title><link>https://pyvideo.org/pycon-italia-2017/continuous-delivery-for-iot-with-python-and-iottly.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We know, continuous delivery is one of the current buzzwords (much like
IoT was a couple of years ago). But think of an industrial IoT project
connecting thousands of remote and inaccessible devices which should be
kept secure and updated over time. Now, imagine you can just write
Python code for your devices, test it over-the-internet both locally in
the lab, and in a real test environment simply by pushing your code to
specific branches and finally just pushing to master to update the
entire fleet.&lt;/p&gt;
&lt;p&gt;During the talk we will use Iottly to showcase this continuous delivery
pattern for the internet of things, with live code and connected devices
(Raspberry Pi).&lt;/p&gt;
&lt;p&gt;Iottly is a Development and Management Cloud Service for IoT Projects,
built by TomorrowData. Iottly is written in Python and is open source
(github). It features a Python sandbox for the devices, an online editor
to program the devices over-the-internet, and the integration with git
as the base for continuous delivery.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stefano Terna</dc:creator><pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-07:pycon-italia-2017/continuous-delivery-for-iot-with-python-and-iottly.html</guid><category>raspberrypi</category><category>git</category><category>continuous-delivery</category><category>iot</category><category>over-the-air firmware upgrade</category><category>InternetOfThings</category><category>InternetDelleCose</category><category>github</category><category>IDE</category></item><item><title>Programming the Web of Things with Python and MicroPython</title><link>https://pyvideo.org/pyconweb-2017/programming-the-web-of-things-with-python-and-micropython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session you will get a gentle introduction to the ever-expanding world of small programmable devices: learn to use tiny microcontrollers to connect to sensors and talk to APIs - all using MicroPython, a subset of Python 3 for use in constrained environments.&lt;/p&gt;
&lt;p&gt;You will be introduced to the basics of physical computing and the joys (and some of the pains) of writing Python code for devices that weigh less than a piece of chewing gum but still have the power to communicate with web APIs, act as wireless access points, even host a small web server, and more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hardy Erlinger</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/programming-the-web-of-things-with-python-and-micropython.html</guid><category>iot</category><category>micropython</category></item><item><title>Python and IoT: From Chips and Bits to Data Science</title><link>https://pyvideo.org/pydata-seattle-2017/python-and-iot-from-chips-and-bits-to-data-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will take you through the design of a smart lighting system, including sensor hardware and software (based around MicroPython), data analysis (using NumPy, Pandas, and Jupyter), and lighting control (using Hidden Markov Models via Hmmlearn). From the talk, you should get a sense of how the hardware, software, and math fit together to create a solution.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ever want to know what is behind the &amp;quot;Internet of Things&amp;quot; hype? I wanted to as well, so I embarked on a side project to learn more. This talk is the story of my journey, using, of course, my favorite programming language, Python.&lt;/p&gt;
&lt;p&gt;In this talk, I will take you through my project, a lighting replay system. The application monitors the light levels in several rooms of a residence and then replays a similar pattern when the house is unoccupied. The goal is to make the house look occupied, with a lighting pattern that is different every day, but looks realistic. It accounts for the different patterns found in each individual room as well as seasonal factors (e.g. changing sunrise/sunset times). The full source code for the application is available on github &lt;a class="reference external" href="https://github.com/mpi-sws-rse/thingflow-examples/tree/master/lighting_replay_app"&gt;https://github.com/mpi-sws-rse/thingflow-examples/tree/master/lighting_replay_app&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Fischer</dc:creator><pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-06:pydata-seattle-2017/python-and-iot-from-chips-and-bits-to-data-science.html</guid><category>iot</category><category>micropython</category></item><item><title>From SCADA to IoT with Python</title><link>https://pyvideo.org/scipyla-2016/from-scada-to-iot-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Palestrante: Nahuel Defossé&lt;/p&gt;
&lt;p&gt;Resumo:&lt;/p&gt;
&lt;p&gt;This talk will describe a SCADA system build with Python with an home brew protocol called Mara for a power substation as part of a research and development project in UNPJSB of Trelew city.&lt;/p&gt;
&lt;p&gt;We will describe some of the challenges faced during its development and how they were overcome. Specially non functional requirements such as reliability and low latency (MQTT, AMQP and STOMP).&lt;/p&gt;
&lt;p&gt;Finally we will cover how we're iterating over its architecture to provide a more suitable solution for IoT field and how we're using Python at lower levels PlatformIO and how we plan to integrate CIAA (Argentine Open Industrial Computer).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nahuel Defossé</dc:creator><pubDate>Sat, 25 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-25:scipyla-2016/from-scada-to-iot-with-python.html</guid><category>SCADA</category><category>IoT</category><category>CIIA</category></item></channel></rss>