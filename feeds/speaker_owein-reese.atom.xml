<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_owein-reese.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-05T00:00:00+00:00</updated><entry><title>Pushing the Bounds with Descriptors</title><link href="https://pyvideo.org/pygotham-2018/pushing-the-bounds-with-descriptors.html" rel="alternate"></link><published>2018-10-05T00:00:00+00:00</published><updated>2018-10-05T00:00:00+00:00</updated><author><name>Owein Reese</name></author><id>tag:pyvideo.org,2018-10-05:pygotham-2018/pushing-the-bounds-with-descriptors.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The problem with most online tutorials is that they lack depth, often involving trivially simple examples. In the case of descriptors, the issue is compounded by the complexity of interface exposed by the protocol itself. Here, simplified examples are chosen so that other issues can be discussed such as the avoidance or management of global state. This deprives the audience of a deep exploration of the rich dynamics descriptors lend to the object oriented nature of Python.&lt;/p&gt;
&lt;p&gt;In this talk, we'll go beyond basic &amp;#64;property templates. Building along a central theme, a solution will evolve to handle more demanding needs. As the approach changes, we'll discuss encapsulating behavior, immutable and partially persistent data structures, and then delve into the interplay between multi-level, dependent object hierarchies.&lt;/p&gt;
&lt;p&gt;The goal of all this? To expand the realm of possibilities in your own pattern library and enrich the tool set you bring with you to new problems.&lt;/p&gt;
</summary></entry></feed>