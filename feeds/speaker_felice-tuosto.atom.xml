<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_felice-tuosto.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-04-08T00:00:00+00:00</updated><entry><title>Machine Learning con Python: algoritmi NILM e real-time processing</title><link href="https://pyvideo.org/pycon-italia-2017/machine-learning-con-python-algoritmi-nilm-e-real-time-processing.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Felice Tuosto</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/machine-learning-con-python-algoritmi-nilm-e-real-time-processing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le tecniche di Machine Learning sono sempre più pervasive nelle
applicazioni analitiche odierne. In questo talk l’attenzione verte sul
problema del &lt;strong&gt;NILM&lt;/strong&gt; (Not Intrusive Load Monitoring) per cui
l’obiettivo è la disaggregazione real-time dei consumi di energia
elettrica. Gli algoritmi, permettono di riconoscere in realtime i
dispositivi attivi in base alle sole caratteristiche del segnale
aggregato.&lt;/p&gt;
&lt;p&gt;L’obiettivo del talk è dimostrare come sia possibile implementare
rapidamente un prototipo hardware e software grazie alle potenzialità di
Arduino e Python rispettivamente.&lt;/p&gt;
&lt;p&gt;Con degli &lt;em&gt;esempi hardware e software pratici&lt;/em&gt; (4 devices collegati ad
una multipresa), verrà dimostrata la capacità di Arduino di acquisire le
misura di corrente elettrica e la capacità di Python di riconoscere i
dispositivi attivi. Verranno fornite informazioni sulle logiche alla
base di tali algoritmi, con riferimento all’ecosistema Python e alle
relative librerie utilizzate.&lt;/p&gt;
&lt;p&gt;Per la comprensione del talk non sono necessari particolari requisiti se
non una conoscenza di base di programmazione in Python e di Machine
Learning.&lt;/p&gt;
</summary><category term="signal-processing"></category><category term="arduino"></category><category term="nilm"></category><category term="machine-learning"></category><category term="realtime"></category></entry><entry><title>Machine Learning con Python: previsione in real-time della richiesta di energia elettrica</title><link href="https://pyvideo.org/pycon-italia-2017/machine-learning-con-python-previsione-in-real-time-della-richiesta-di-energia-elettrica.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Felice Tuosto</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/machine-learning-con-python-previsione-in-real-time-della-richiesta-di-energia-elettrica.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nel talk si parlerà di come attraverso il linguaggio Python sia
possibile risolvere un problema reale e complesso relativamente alla
trasmissione di energia elettrica. Verrà spiegato il progetto
&lt;strong&gt;RealtimeLoadForecast&lt;/strong&gt; che è stato sviluppato per un importante TSO
(Transmission System Operator). Si tratta di sistema predittivo che
permette di fornire in tempo reale ogni 15 minuti ed entro 5 minuti, le
previsioni delle serie storiche dei consumi di energia elettrica
relativi a circa 500 nodi elettrici.&lt;/p&gt;
&lt;p&gt;Si parlerà dei passi che occorre seguire per ottenere da un semplice
prototipo, un sistema &lt;em&gt;ingegnerizzato&lt;/em&gt; che lavori in tempo reale e di
come sono state utilizzate le librerie di Python per l’acquisizione,
manipolazione e processamento dei dati elettrici ed ambientali.&lt;/p&gt;
&lt;p&gt;Saranno descritte alcune tecniche algoritmiche e di Machine Learning per
ottenere dei modelli predittivi capaci di fornire previsioni accurate ma
con tempi di risposta sfidanti.&lt;/p&gt;
&lt;p&gt;Verrà mostrato un &lt;em&gt;esempio concreto&lt;/em&gt; di implementazione di un algoritmo
predittivo basato sulla libreria Deep Learning &lt;strong&gt;Keras&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Per la comprensione del talk non sono necessari particolari requisiti se
non una conoscenza di base di programmazione in Python e di Machine
Learning.&lt;/p&gt;
</summary><category term="Forecasting"></category><category term="Genetic Algorithms"></category><category term="Keras"></category><category term="Data Mining"></category><category term="programming-paradigms"></category><category term="scikit-learn"></category><category term="bigdata"></category><category term="scalability"></category><category term="Deep-Learning"></category><category term="threading"></category><category term="realtime"></category><category term="Data-Scientist"></category><category term="database"></category><category term="machine-learning"></category><category term="mysql"></category><category term="signal-processing"></category><category term="LoadForecasting"></category><category term="cassandra"></category></entry><entry><title>Word Embedding: come codificare il linguaggio naturale per algoritmi di previsione e classificazione</title><link href="https://pyvideo.org/pycon-italia-2017/word-embedding-come-codificare-il-linguaggio-naturale-per-algoritmi-di-previsione-e-classificazione.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Felice Tuosto</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/word-embedding-come-codificare-il-linguaggio-naturale-per-algoritmi-di-previsione-e-classificazione.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Da qualche anno si parla sempre più insistentemente di &lt;em&gt;Word Embedding&lt;/em&gt;,
identificando così quell’insieme di tecniche che tentano di modellare il
linguaggio umano creando una mappatura delle parole nel campo
vettoriale. Come spesso accade per ambiti in rapido sviluppo, si è
assistito alla nascita di diversi approcci algoritmici tra i quali a
volte è difficile districarsi. Da questo punto di vista un linguaggio di
propotipazione rapida come Python consente l’implementazione e
l’utilizzo di una serie di librerie al fine di scegliere di volta in
volta quelle che meglio modellano il problema in esame. Il talk mostra
la potenzialità del word embedding entrando nel merito di due
applicazioni reali relative a due contesti lontani fra loro, quali
quelli della pubblica amministrazione e del privato. In ambito PA viene
mostrato come, analizzando le descrizioni progettuali presentate da un
insieme di aziende ad un importante istituto italiano, è possibile
prevedere l’esito delle rispettive richieste di finanziamento,
consentendo di aumentare in modo sostanziale il numero degli
investimenti. Nella seconda parte ci spostiamo invece nel privato e
mostriamo come codificare un’informazione naturalmente non strutturata,
come la descrizione di un intervento in una officina meccanica,
rendendola così gestibile al pari di quella strutturata.&lt;/p&gt;
</summary><category term="word_embedding"></category><category term="embedding"></category><category term="text_mining"></category></entry></feed>