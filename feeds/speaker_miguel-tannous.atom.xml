<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Miguel Tannous</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_miguel-tannous.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-07T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Scraping Data from Websites</title><link href="https://pyvideo.org/florida-pycon-2017/scraping-data-from-websites.html" rel="alternate"></link><published>2017-10-07T00:00:00+00:00</published><updated>2017-10-07T00:00:00+00:00</updated><author><name>Miguel Tannous</name></author><id>tag:pyvideo.org,2017-10-07:/florida-pycon-2017/scraping-data-from-websites.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I am going to show you how to scrape data from websites
using the module BeautifulSoup. This talk assumes you know some basic
python syntax and data modeling tools. After this talk you should be
able to parse the data on a website and store whatever …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I am going to show you how to scrape data from websites
using the module BeautifulSoup. This talk assumes you know some basic
python syntax and data modeling tools. After this talk you should be
able to parse the data on a website and store whatever you need.&lt;/p&gt;
&lt;p&gt;There are different ways that we can scrape data from a website,
throughout the process we will take care not to overburden the website
and not scrape anything forbidden by the web server. We are going to use
a public library for python called “Beautiful Soup”, this is a really
good tool when we want to take some information from a site. With this
we also are going to mention how can we store this data into a CSV and
Json file.&lt;/p&gt;
</content><category term="Florida PyCon 2017"></category></entry></feed>