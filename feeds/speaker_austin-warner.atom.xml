<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Austin Warner</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_austin-warner.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-07-27T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Introducing Labrea: How Embracing Declarative, Functional Programming Can Lead You Out of the Tar Pit</title><link href="https://pyvideo.org/pyohio-2025/introducing-labrea-how-embracing-declarative-functional-programming-can-lead-you-out-of-the-tar-pit.html" rel="alternate"></link><published>2025-07-27T00:00:00+00:00</published><updated>2025-07-27T00:00:00+00:00</updated><author><name>Austin Warner</name></author><id>tag:pyvideo.org,2025-07-27:/pyohio-2025/introducing-labrea-how-embracing-declarative-functional-programming-can-lead-you-out-of-the-tar-pit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a multi-paradigm language, Python gives its users the freedom to
solve problems in a vast number of ways. However, this freedom comes
with a cost: we must resist the urge to use quick, unsustainable
approaches in order to avoid the plague that is software complexity. For
many real …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a multi-paradigm language, Python gives its users the freedom to
solve problems in a vast number of ways. However, this freedom comes
with a cost: we must resist the urge to use quick, unsustainable
approaches in order to avoid the plague that is software complexity. For
many real world problems, using familiar techniques like mutable state
and imperative programming make it easier to complete the task while
yielding a more complex codebase. In many cases, functional programming
offers a way to write simpler code, but the difficulty of committing to
it makes it impractical or unappealing to developers.&lt;/p&gt;
&lt;p&gt;Inspired by the 2006 paper &lt;a class="reference external" href="https://curtclifton.net/papers/MoseleyMarks06a.pdf"&gt;Out of the Tar
Pit&lt;/a&gt;, and the
2011 talk &lt;a class="reference external" href="https://www.youtube.com/watch?v=SxdOUGdseq4"&gt;Simple Made
Easy&lt;/a&gt; by Rich Hickey,
&lt;a class="reference external" href="https://github.com/8451/labrea"&gt;Labrea&lt;/a&gt; is a Python framework that
seeks to make the happy path one that results in a simpler codebase that
is functional, declarative, and composable. Learn about how Labrea
allowed developers at 84.51º (Kroger) to pull the company's most
complicated coupon recommender system out of the slow death march of
software complexity, and how it might help you.&lt;/p&gt;
</content><category term="PyOhio 2025"></category></entry></feed>