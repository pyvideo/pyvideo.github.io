<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_greg-detre.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-02-23T00:00:00+00:00</updated><entry><title>Writing a simple backend framework for 1-line AB tests in Django</title><link href="https://pyvideo.org/pydata-london-2014/writing-a-simple-backend-framework-for-1-line-ab-tests-in-django.html" rel="alternate"></link><published>2014-02-23T00:00:00+00:00</published><updated>2014-02-23T00:00:00+00:00</updated><author><name>Greg Detre</name></author><id>tag:pyvideo.org,2014-02-23:pydata-london-2014/writing-a-simple-backend-framework-for-1-line-ab-tests-in-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making product decisions is hard - often, we take one step forward, but
two steps back. We need to become scientists about our own product - run
an AB test comparing two versions and measure which works better. We'll
talk through a simple but effective backend AB testing framework in
Python (using Django as an example), along with some of the issues,
gotchas and best practices of running AB tests in production.&lt;/p&gt;
</summary></entry></feed>