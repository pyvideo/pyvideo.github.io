<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_david-fisher.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-05-20T00:00:00+00:00</updated><entry><title>Dec 2016 BayPiggies Talk at LinkedIn: Introducing Type Annotations for Python</title><link href="https://pyvideo.org/bay-piggies/dec-2016-baypiggies-talk-at-linkedin-introducing-type-annotations-for-python.html" rel="alternate"></link><published>2016-12-15T00:00:00+00:00</published><updated>2016-12-15T00:00:00+00:00</updated><author><name>Guido van Rossum</name></author><id>tag:pyvideo.org,2016-12-15:bay-piggies/dec-2016-baypiggies-talk-at-linkedin-introducing-type-annotations-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speakers: Guido Van Rossum, Greg Price, and David Fisher&lt;/p&gt;
&lt;p&gt;Dropbox has several million lines of production code written in Python 2.7. As a first step towards migrating to Python 3, as well as to generally make our code more navigable, we are annotating our code with type annotations using the PEP 484 standard and type-checking the annotated code with mypy. In this talk we will discuss lessons learned and show how you too can start type-checking your legacy Python 2.7 code, one file at a time. We will also describe some of the many improvements we’ve made to mypy in the process, as well as some other tools that come in handy.&lt;/p&gt;
&lt;p&gt;Mypy is an open-source type-checker for Python. It was originally created by one of the speakers, Jukka Lehtosalo, in support of his PhD thesis, before he joined Dropbox. Mypy supports the PEP 484 standard for gradual typing in Python. It supports Python 3.2 and higher, as well as Python 2.7 (using function signatures in type comments, per a recent update to PEP 484).&lt;/p&gt;
</summary></entry><entry><title>Static Types for Python</title><link href="https://pyvideo.org/pycon-us-2017/static-types-for-python.html" rel="alternate"></link><published>2017-05-20T00:00:00+00:00</published><updated>2017-05-20T00:00:00+00:00</updated><author><name>Jukka Lehtosalo</name></author><id>tag:pyvideo.org,2017-05-20:pycon-us-2017/static-types-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the past year and a half, Dropbox has been investing in the
development of mypy, a static type checker for Python, as a way to make
our multimillion-line Python codebase easier to understand, navigate,
and maintain. In this talk, we will discuss the benefits of type
annotations, explain how to use them, and give a peak into how mypy
works behind the scenes.&lt;/p&gt;
&lt;p&gt;Mypy is an open-source type-checker for Python which supports the PEP
484 standard for gradual typing. Originally created by Jukka Lehtosalo
as part of his PhD thesis in 2013, it is now under active development by
a small team at Dropbox which includes David Fisher, Greg Price, and
Guido van Rossum. It supports Python 3.2 and higher, as well as Python
2.7 (via type comments).&lt;/p&gt;
</summary></entry><entry><title>Developer &amp; Designer: A Love Storyprelekcja w języku angielskim</title><link href="https://pyvideo.org/pycon-pl-2014/developer-designer-a-love-storyprelekcja-w-jezyku-angielskim.html" rel="alternate"></link><published>2014-10-17T00:00:00+00:00</published><updated>2014-10-17T00:00:00+00:00</updated><author><name>David Fisher</name></author><id>tag:pyvideo.org,2014-10-17:pycon-pl-2014/developer-designer-a-love-storyprelekcja-w-jezyku-angielskim.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tytuł/Topic: Developer &amp;amp; Designer: A Love Story
Prelegent/Speaker: David Fisher&lt;/p&gt;
&lt;p&gt;A world-class product is obtainable when the relationship between developer and designer is harmonious. Cultivate this relationship by consistently engaging your product design team throughout each stage of the software development life cycle. Fully integrate and synchronize your teams to deliver applications that are in the top echelon of software products.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pl.pycon.org/2014/pl/agenda"&gt;http://pl.pycon.org/2014/pl/agenda&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>