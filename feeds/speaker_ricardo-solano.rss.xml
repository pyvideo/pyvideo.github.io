<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 27 Jul 2019 15:00:00 +0000</lastBuildDate><item><title>Docker-Composing Your Way to a Better Development Environment</title><link>https://pyvideo.org/pyohio-2019/docker-composing-your-way-to-a-better-development-environment.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Development environments can become cumbersome over time, with setup
occasionally filling multiple pages of documentation and making
onboarding new team members a difficult task. Whether you deploy your
Python application using containers or not, Docker Compose is a great
tool for defining development environments that closely mirror
production and can be spun up with a single command.&lt;/p&gt;
&lt;p&gt;By the end of this talk, audience members will understand the following
concepts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Running application services/dependencies inside containers and its
advantages and disadvantages.&lt;/li&gt;
&lt;li&gt;Defining application environment and services via Dockerfile,
docker-compose.yml configuration files.&lt;/li&gt;
&lt;li&gt;Managing the environment using the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;docker-compose&lt;/span&gt;&lt;/tt&gt; CLI.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To illustrate these concepts, a Django application will be configured to
use a database, a cache, a queue and task worker.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ricardo Solano</dc:creator><pubDate>Sat, 27 Jul 2019 15:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-27:pyohio-2019/docker-composing-your-way-to-a-better-development-environment.html</guid></item></channel></rss>