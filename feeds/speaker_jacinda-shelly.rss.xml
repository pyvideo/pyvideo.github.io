<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 04 May 2019 13:55:00 +0000</lastBuildDate><item><title>But, Why is the (Django) Admin Slow?</title><link>https://pyvideo.org/pycon-us-2019/but-why-is-the-django-admin-slow.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The admin interface that comes built-in with Django is one of the
most-loved (and oft-abused) features. However, early converts are often
disappointed to find that the admin doesn't seem to be scaling as their
database grows in size, forcing them (so they think) to switch to a
custom interface much sooner than they would prefer.&lt;/p&gt;
&lt;p&gt;However, many common performance issues can be fixed with a few small
configuration changes that are much easier than a rewrite!&lt;/p&gt;
&lt;p&gt;In this talk, we'll use an example project to demonstrate the most
common performance pitfalls encountered when using the Django admin, and
fix them - live! We'll use django-debug-toolbar, a powerful debugging
interface that everyone who uses Django should be familiar with, to
identify our issues and confirm that they are fixed.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacinda Shelly</dc:creator><pubDate>Sat, 04 May 2019 13:55:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-04:pycon-us-2019/but-why-is-the-django-admin-slow.html</guid><category>talk</category></item><item><title>Hands-On Web Application Security with Django</title><link>https://pyvideo.org/pycon-us-2019/hands-on-web-application-security-with-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;XSS, SQL Injections and Improper Authorization, oh my! Between the OWASP
Top 10, CSRF, stealing sessions, and DDOS attacks, have you ever felt
that the world of web security was too complex to understand? Do you
find yourself wishing that you understood what those acronyms &lt;em&gt;really&lt;/em&gt;
translate to in a live web application?&lt;/p&gt;
&lt;p&gt;If so, then this is the tutorial you've been waiting for. In this
tutorial, we'll cover essential topics in web security, including the
majority of the OWASP Top 10, but we &lt;em&gt;won't&lt;/em&gt; be doing it in a
theoretical manner. We'll take a live, deliberately insecure web
application, identify the vulnerabilities, exploit them, and finally fix
them. Sound cool? It is!&lt;/p&gt;
&lt;p&gt;Topics include the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Cross-site scripting (XSS)&lt;/li&gt;
&lt;li&gt;Cross-site request forgery (CSRF)&lt;/li&gt;
&lt;li&gt;Cookies and how they can be abused&lt;/li&gt;
&lt;li&gt;Why default passwords are dangerous&lt;/li&gt;
&lt;li&gt;Improper authorization checking&lt;/li&gt;
&lt;li&gt;Incorrect Session Management&lt;/li&gt;
&lt;li&gt;SQL Injection&lt;/li&gt;
&lt;li&gt;How to abuse Pickle&lt;/li&gt;
&lt;li&gt;And more!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You'll also learn next steps and we'll provide suggested resources for
continuing your security education.&lt;/p&gt;
&lt;p&gt;While previous experience with Django is not required, it is
recommended. You should have an understanding of how web applications
work in general and have completed the official &lt;a class="reference external" href="https://docs.djangoproject.com/en/2.1/intro/tutorial01/"&gt;Django
Tutorial&lt;/a&gt; or
something substantially similar.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacinda Shelly</dc:creator><pubDate>Thu, 02 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/hands-on-web-application-security-with-django.html</guid><category>tutorial</category></item><item><title>Programming Post-Progeny: A New Parent's Perspective</title><link>https://pyvideo.org/djangocon-us-2017/programming-post-progeny-a-new-parents-perspective.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2017 - Programming Post-Progeny: A New Parent's Perspective by Jacinda Shelly&lt;/p&gt;
&lt;p&gt;When my daughter appeared on the scene in 2017, my life was turned upside down.&lt;/p&gt;
&lt;p&gt;As I was returning to work, I found that previous strategies for managing my time weren’t up to snuff and I needed to create new ones if I was to be effective at my craft. No longer did I have 15 minutes to “get in the zone” - I needed to get things done in any time available. I learned to carve milestones out of minutes (sometimes) and will share what did (and didn’t) work for me.&lt;/p&gt;
&lt;p&gt;I also share stories about my general journey of becoming a parent that may be helpful to anyone thinking about becoming a parent (or just wondering what it might be like!).&lt;/p&gt;
&lt;p&gt;Or you could just come to the talk for the cute baby pictures - they make everyone smile!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2017.djangocon.us/talks/programming-post-progeny-a-new-parent-s-perspective/"&gt;https://2017.djangocon.us/talks/programming-post-progeny-a-new-parent-s-perspective/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacinda Shelly</dc:creator><pubDate>Mon, 14 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-14:djangocon-us-2017/programming-post-progeny-a-new-parents-perspective.html</guid></item><item><title>Connecting Patients to Doctors in Real-Time Using Django</title><link>https://pyvideo.org/djangocon-us-2014/connecting-patients-to-doctors-in-real-time-using.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Your challenge, should you choose to accept it, is to create a system
that allows patients to connect to doctors licensed in their state
efficiently. How I used Django, Celery, Redis and Websockets to create a
real-time matching system for Doctor On Demand.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/FNEr/"&gt;http://amara.org/v/FNEr/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacinda Shelly</dc:creator><pubDate>Sat, 13 Sep 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-09-13:djangocon-us-2014/connecting-patients-to-doctors-in-real-time-using.html</guid></item><item><title>But, why is the admin slow?</title><link>https://pyvideo.org/djangocon-us-2015/but-why-is-the-admin-slow-by-jacinda-shelly.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;But, why is the admin slow?&lt;/p&gt;
&lt;p&gt;This is the general outline I'm working from so far. I think this could
change slightly as I develop the talk, but this outline conveys the
general theme.&lt;/p&gt;
&lt;p&gt;Introduction and display of basic django-debug-toolbar usage (2 min)&lt;/p&gt;
&lt;p&gt;Things the admin does well (3 min)&lt;/p&gt;
&lt;p&gt;Makes development very fast For many use cases, it &amp;quot;does the right
thing&amp;quot; automatically. For example, modifying the HTML in a callable
won't cause new queries. What can sneak up on you (5 min)&lt;/p&gt;
&lt;p&gt;Having lots of related items visible in the list view Using
list_select_related Overriding queryset for additional select_related
and prefetch_related options What to avoid in callables (3 min)&lt;/p&gt;
&lt;p&gt;Queries that will be executed on every row The default widgets for
many-to-many and foreign key fields (3 min)&lt;/p&gt;
&lt;p&gt;What widgets to use to replace the defaults based on how many options
you have in your database Custom aggregates in the list view (i.e.
custom querysets) (3 min)&lt;/p&gt;
&lt;p&gt;When this is a good idea When this is too slow and you need other
options More general performance improvements through caching (3-5 min)&lt;/p&gt;
&lt;p&gt;Django's caching framework Caching with third-party packages / tools
Custom caching with Redis Questions (Remaining time)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacinda Shelly</dc:creator><pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-18:djangocon-us-2015/but-why-is-the-admin-slow-by-jacinda-shelly.html</guid></item><item><title>Delving into the Django Admin</title><link>https://pyvideo.org/pycon-us-2015/delving-into-the-django-admin.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The admin interface is widely considered a &amp;quot;&amp;quot;killer feature&amp;quot;&amp;quot; of Django.
At its most basic, you can just register all your models and be on your
way, but there's so much more available within Django's admin. This
tutorial takes you step by step through the creation and progressive
improvement of an admin interface for a fictional library (all code is
publicly available).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacinda Shelly</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-10:pycon-us-2015/delving-into-the-django-admin.html</guid></item></channel></rss>