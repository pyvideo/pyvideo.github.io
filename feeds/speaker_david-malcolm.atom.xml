<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_david-malcolm.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-03-16T00:00:00+00:00</updated><entry><title>Death by a thousand leaks: what statically-analysing 370 Python extensions looks like</title><link href="https://pyvideo.org/pycon-us-2013/death-by-a-thousand-leaks-what-statically-analys.html" rel="alternate"></link><published>2013-03-16T00:00:00+00:00</published><updated>2013-03-16T00:00:00+00:00</updated><author><name>David Malcolm</name></author><id>tag:pyvideo.org,2013-03-16:pycon-us-2013/death-by-a-thousand-leaks-what-statically-analys.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;What happens when you run a custom C static analysis tool (&amp;quot;cpychecker&amp;quot;)
on hundreds of Python extensions? I'll talk about the kinds of errors
that my tool found, how to run it on your own code, and how to prevent
memory leaks and crasher bugs in the C code of your Python extension
modules.&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>