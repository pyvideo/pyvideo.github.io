<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_david-nicholson.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-07-13T00:00:00+00:00</updated><entry><title>Building &amp; Replicating Models of Visual Search Behavior w/ Tensorflow, Nengo, &amp; Scientific Python Stack</title><link href="https://pyvideo.org/scipy-2019/building-replicating-models-of-visual-search-behavior-w-tensorflow-nengo-scientific-python-stack.html" rel="alternate"></link><published>2019-07-13T00:00:00+00:00</published><updated>2019-07-13T00:00:00+00:00</updated><author><name>David Nicholson</name></author><id>tag:pyvideo.org,2019-07-13:scipy-2019/building-replicating-models-of-visual-search-behavior-w-tensorflow-nengo-scientific-python-stack.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Animals constantly use their eyes to search their environment. What can neural networks and other cognitive models tell us about this behavior? We present two related studies that leverage scientific Python libraries to address this question. The first uses Tensorflow to replicate and extend a previous study of how convolutional neural networks perform a classic visual search task. The second study compares visual search behavior of two types of models: a recurrent neural network model from Google DeepMind, and spiking cognitive models built with the Nengo neural simulator. We discuss what our results suggest about such models.&lt;/p&gt;
</summary></entry><entry><title>Neural Networks for Segmentation of Vocalizations</title><link href="https://pyvideo.org/pydata-new-york-city-2017/neural-networks-for-segmentation-of-vocalizations.html" rel="alternate"></link><published>2017-11-27T00:00:00+00:00</published><updated>2017-11-27T00:00:00+00:00</updated><author><name>David Nicholson</name></author><id>tag:pyvideo.org,2017-11-27:pydata-new-york-city-2017/neural-networks-for-segmentation-of-vocalizations.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Neural networks for speech-to-text avoid dividing speech into segments, such as syllables, but segmenting has important applications. We compare different neural networks for segmentation of vocalizations using the song of songbirds, which we study as neuroscientists. Initial results suggest a bidirectional LSTM-CNN architecture outperforms others in both segmentation and classification.&lt;/p&gt;
</summary></entry><entry><title>Hybrid-Vocal-Classifier (HVC): a Python Package to Automate Labeling of Birdsong for Behavioral Experiments</title><link href="https://pyvideo.org/scipy-2017/hybrid-vocal-classifier-hvc-a-python-package-to-automate-labeling-of-birdsong-for-behavioral-experiments.html" rel="alternate"></link><published>2017-07-14T00:00:00+00:00</published><updated>2017-07-14T00:00:00+00:00</updated><author><name>David Nicholson</name></author><id>tag:pyvideo.org,2017-07-14:scipy-2017/hybrid-vocal-classifier-hvc-a-python-package-to-automate-labeling-of-birdsong-for-behavioral-experiments.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Neuroscientists study songbirds to understand how the brain learns and produces motor skills. Like babies learning to talk, songbirds acquire their song socially during a critical period in development. To understand the neural basis of birdsong, neuroscientists carry out behavioral experiments. Often analysis requires labeling the elements of song (known as &amp;quot;syllables&amp;quot;) by hand, which consumes many person-hours. Several methods have been proposed to automate labeling syllables, but little work has been done to compare them. Hybrid-vocal-classifier (HVC) is a Python package for comparing methods and automating labeling. It is tested on a large collection of hand-labeled song, now made publicly available. Users can configure HVC with human-readable YAML files. HVC loads data collected with different programs by making use of the SciPy/Numpy stack. It includes previously proposed algorithms, implemented in scikit-learn, as well as artificial neural network models built in Keras. Initial results obtained with HVC suggest convolutional neural networks yield higher accuracy predictions with less training data than the best models previously proposed.&lt;/p&gt;
</summary></entry></feed>