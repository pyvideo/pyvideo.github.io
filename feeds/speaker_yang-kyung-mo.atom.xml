<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Yang Kyung-mo</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_yang-kyung-mo.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-08-12T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Hop on mypy and recursively explore function callers</title><link href="https://pyvideo.org/pycon-korea-2023/hop-on-mypy-and-recursively-explore-function-callers.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Yang Kyung-mo</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/hop-on-mypy-and-recursively-explore-function-callers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you use mypy for static type checking?&lt;/p&gt;
&lt;p&gt;This session will introduce a case of creating a script that finds function callers by applying mypy.&lt;/p&gt;
&lt;p&gt;The script I will introduce was used while participating in a TF that migrated a legacy Python API server to a new project. I â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you use mypy for static type checking?&lt;/p&gt;
&lt;p&gt;This session will introduce a case of creating a script that finds function callers by applying mypy.&lt;/p&gt;
&lt;p&gt;The script I will introduce was used while participating in a TF that migrated a legacy Python API server to a new project. I wanted to do QA by distinguishing only cases where the API writes to the DB. However, the project was too large, so there were too many problems to find them all by hand. The script I wrote at that time helped improve work efficiency by eliminating the manual work of finding DB calls.&lt;/p&gt;
&lt;p&gt;The presentation focuses on the process of creating a script, and includes a look at why mypy was used and the internal structure and operation of mypy.&lt;/p&gt;
&lt;p&gt;Even those who are already familiar with Python are curious about how mypy works or how the script was developed, and I expect that they will gain new knowledge through this session.&lt;/p&gt;
&lt;p&gt;Yang Kyung-mo
A 4th-year developer in charge of backend development for the beauty platform Hwahae, in charge of search and recommendations, and strives to quickly deliver the information you want. Previously, I worked at Buzzvil, an advertising platform company, developing advertising products, and aimed to provide value that satisfies both advertisers and 20 million MAU users. From the beginning of my career, I have used Python as a language to quickly deliver value, and I am refining it with the help of good colleagues. I have been interested in open source and studied it for my own development and to help more people, and thanks to that, I got a great opportunity to present at PyCon.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry></feed>