<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 24 Aug 2019 00:00:00 +0000</lastBuildDate><item><title>Turning 'wat' into 'why'</title><link>https://pyvideo.org/kiwi-pycon-2019/turning-wat-into-why.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To a seasoned dev, using a different programming language might be... an experience. Everything is a double? Equality isn't equality?! WAT!?! There are two directions this could go: 'Oh, this language is TERRIBLE. I HATE IT'. Or: 'Huh.. I wonder why that is...' Take a trip along the latter path through a dozen different languages and understand why things the way they are.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie McLaughlin</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/turning-wat-into-why.html</guid><category>programming-languages</category></item><item><title>Programming by poking: some experiences in teaching with Python</title><link>https://pyvideo.org/pycon-ireland-2018/programming-by-poking-some-experiences-in-teaching-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Part of the title originates from a quote by computer scientist Gerry Sussman on the new MIT introduction to programming course, which (in Sussman's view) focused more on building practical applications at the expense of many computer science fundamentals. The talk will look at some of the advantages and pitfalls of the increasing trend of using Python as an introductory programming language: partially through some personal anecdotes and partially through friends and colleagues' experiences. It will also look at the increasing divergence between those involved in software development and those who, educated through Python, are based in other domains as their primary job but are using their new Python-based knowledge to assist their daily work (in finance, insurance etc). I have rated this as Intermediate as some knowledge of Python will be needed as well as understanding some Computer Science basics (i.e arrays vs lists). Some side by side comparisons will take place using Python against Scheme (aspects of fundamental programming and comparing a 'traditional' computer science course re-written in Python), Lua (another contender for when I taught some basic programming) and C (comparison to another popular introductory language and low level details).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Fagan</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ireland-2018/programming-by-poking-some-experiences-in-teaching-with-python.html</guid><category>programming-languages</category></item><item><title>Practical uses for function annotations</title><link>https://pyvideo.org/europython-2013/practical-uses-for-function-annotations.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Manuel Ceron</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/practical-uses-for-function-annotations.html</guid><category>programming-languages</category><category>type-cheking</category></item><item><title>Evolution or stagnation programming languages</title><link>https://pyvideo.org/pycon-italia-2018/evolution-or-stagnation-programming-languages.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Programming languages evolves with the need to the developers, but not
all of them evolves at the same speed and sometimes some languages stays
almost the same for decades. Is this a sign of stagnation? Is it
possible to evolve a language without breaking retrocompatibility?&lt;/p&gt;
&lt;p&gt;This talk will cover how Python and Javascript approached the problem in
a radically different way, with their pro and cons and with the
consequences on the community.&lt;/p&gt;
&lt;p&gt;The main points of this talk are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;comparation of the new features in both languages&lt;/li&gt;
&lt;li&gt;strategies used to port or run the code on different versions of the
language&lt;/li&gt;
&lt;li&gt;impact of the new features and tool on the respective developer’s
communities&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The intent is to start a constructive discussion about the
retrocompatility in Python.&lt;/p&gt;
&lt;p&gt;For this talk you don’t need to have a deep knowledge of Python or
Javascript.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 11:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniele Esposti</dc:creator><pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-20:pycon-italia-2018/evolution-or-stagnation-programming-languages.html</guid><category>Python</category><category>javascript</category><category>programming-languages</category></item></channel></rss>