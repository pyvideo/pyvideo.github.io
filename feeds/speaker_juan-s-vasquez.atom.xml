<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_juan-s-vasquez.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-12-03T00:00:00+00:00</updated><entry><title>Web Scraping w BeautifulSoup &amp; Yelp's API</title><link href="https://pyvideo.org/pydata-la-2019/web-scraping-w-beautifulsoup-yelps-api.html" rel="alternate"></link><published>2019-12-03T00:00:00+00:00</published><updated>2019-12-03T00:00:00+00:00</updated><author><name>Juan S Vasquez</name></author><id>tag:pyvideo.org,2019-12-03:pydata-la-2019/web-scraping-w-beautifulsoup-yelps-api.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial, we will explore web scraping basics using requests,
BeautifulSoup, and the Yelp API. The tutorial will be split up into two
use cases, the first scraping a business directory and the second Yelp
business listngs. This hands-on tutorial will be played out using a
Jupyter Notebook.&lt;/p&gt;
&lt;p&gt;Participants will need to create a Yelp Developer Account.&lt;/p&gt;
&lt;p&gt;In this web scraping tutorial we will cover the following:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Why data enrichment and web scraping can be helpful - operational
insights, resource allocation, business intelligence&lt;/li&gt;
&lt;li&gt;Core puzzle pieces that work together to scrape - requests,
BeautifulSoup, pandas, for loops, f-strings&lt;/li&gt;
&lt;li&gt;Yellow Pages Web Scrape with BeautifulSoup: Scrape a top category of
the Yellow Pages, turn into df and export as csv&lt;/li&gt;
&lt;li&gt;Yelp Scrape using Yelp Fusion API: Scrape Yelp listings around
specific locations&lt;/li&gt;
&lt;li&gt;Summarize &amp;amp; Debrief&lt;/li&gt;
&lt;/ol&gt;
</summary></entry></feed>