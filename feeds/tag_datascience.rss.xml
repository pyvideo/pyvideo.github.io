<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 03 May 2019 00:00:00 +0000</lastBuildDate><item><title>Traversing the land of graph computing and databases</title><link>https://pyvideo.org/pycon-italia-2019/traversing-the-land-of-graph-computing-and-databases.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Graphs have long held a special place in the computer science’s history
(and codebases). With the advent of a new wave of the information age
characterized by a greater emphasis on linked data, graph computing and
databases have risen to prominence. Be it enterprise knowledge graphs or
graph-based analytics, there are a great number of potential
applications.&lt;/p&gt;
&lt;p&gt;To reap the benefits of graph databases and computing, one needs to
understand the basics as well as current technical landscape and
offerings. Also, it’s important to understand if a graph-based approach
suits your problem. This talk will touch upon these points. Be prepared
to learn some graph fundamentals and witness a live demo using Neo4j, a
popular graph database.&lt;/p&gt;
&lt;p&gt;Soft pre-requisites include familiarity with Python and experience
working with a SQL or NoSQL database. There are no hard pre-requisites.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1682"&gt;https://python.it/feedback-1682&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Akash Tandon</dc:creator><pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-03:pycon-italia-2019/traversing-the-land-of-graph-computing-and-databases.html</guid><category>nosql</category><category>graph</category><category>analytics</category><category>databases</category><category>neo4j</category><category>datascience</category><category>graphdatabase</category></item><item><title>(Alpha) Zero to Elo</title><link>https://pyvideo.org/pycon-italia-2018/alpha-zero-to-elo.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Reinforcement learning is a sequential decision making framework that
has received a lot of attention given incredible results from DeepMind,
DQN and AlphaGo. More recently DeepMind delivered a more general AI game
player call AlphaZero, which learns by self-play.&lt;/p&gt;
&lt;p&gt;During this session we will introduce you the key ideas behind
AlphaZero:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Reinforcement Learning and Value function&lt;/li&gt;
&lt;li&gt;MonteCarlo Tree Search&lt;/li&gt;
&lt;li&gt;Self-play&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will explore how they contribute to beat greatest Go player of our
time, in Python.&lt;/p&gt;
&lt;p&gt;Agenda:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Introduction to AI in games&lt;/li&gt;
&lt;li&gt;What AlphaZero is made of? (Boring theory)&lt;/li&gt;
&lt;li&gt;How to build your own AlphaZero? (Cool code)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 15:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simone Totaro</dc:creator><pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-22:pycon-italia-2018/alpha-zero-to-elo.html</guid><category>Deep-Learning</category><category>reinforcement-learning</category><category>datascience</category></item><item><title>Location, location, location: Data Visualisation and Analysis of Geospatial data in Python</title><link>https://pyvideo.org/pycon-italia-2018/location-location-location-data-visualisation-and-analysis-of-geospatial-data-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Can’t distinguish your Latitude from your Longitude? Are you convinced
that Dymaxion Projection is the name of an obscure Heavy Metal band?
Have troubles finding your way back home even with a GPS?
Congratulations, this talk is definitely for you!&lt;/p&gt;
&lt;p&gt;While location data are increasingly part of our lives as developers,
and Data Science jobs requiring at least a basic understanding of
“geographic stuff” are on the rise, there’s still plenty of confusion
surrounding spatial formats, tools and libraries…&lt;/p&gt;
&lt;p&gt;Assuming no prior knowledge of geographic concepts, this talk with cover
all the basics (including the most common tools such as GeoPandas,
PySal, Bokeh etc..) to handle, analyse and visualise Geospatial data!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://miccferr.github.io/talks/pycon-it-18/#/0"&gt;TALK SLIDES &amp;#64; miccferr.github.io/talks/pycon-
it-18&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michele Ferretti</dc:creator><pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-22:pycon-italia-2018/location-location-location-data-visualisation-and-analysis-of-geospatial-data-in-python.html</guid><category>UrbanAnalytics</category><category>DataVi</category><category>Geos</category><category>datascience</category></item><item><title>Bayesian Non-parametric Models for Data Science using PyMC3</title><link>https://pyvideo.org/pycon-us-2018/bayesian-non-parametric-models-for-data-science-using-pymc3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nowadays, there are many ways of building data science models using Python, including statistical and machine learning methods. I will introduce probabilistic models, which use Bayesian statistical methods to quantify all aspects of uncertainty relevant to your problem, and provide inferences in simple, interpretable terms using probabilities.  A particularly flexible form of probabilistic models uses Bayesian &lt;em&gt;non-parametric&lt;/em&gt; methods, which allow models to vary in complexity depending on how much data are available. In doing so, they avoid the over-fitting that is common in machine learning and statistical modeling. I will demonstrate the basics of Bayesian non-parametric modeling in Python, using the PyMC3 package. Specifically, I will introduce two common types, Gaussian processes and Dirichlet processes, and show how they can be applied easily to real-world problems using two examples.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Fonnesbeck</dc:creator><pubDate>Sun, 13 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-13:pycon-us-2018/bayesian-non-parametric-models-for-data-science-using-pymc3.html</guid><category>bayes</category><category>datascience</category><category>pymc3</category></item><item><title>Data Science &amp; Data Visualization in Python. How to harness power of Python for social good?</title><link>https://pyvideo.org/pydata-berlin-2017/data-science-data-visualization-in-python-how-to-harness-power-of-python-for-social-good.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python as an Open Data Science tool offers many libraries for data visualization and I will show you how to use and combine the best. I strongly believe that power of data is not only in the information &amp;amp; insight that data can provide us, Data is and can be really beautiful and can not only transform our perception but also the world that we all live in.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In my talk I will primarily focus on answering/offer the answer to these questions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why we need data science and why more and more people should be really interested in analyzing data and data visualization? (motivation)&lt;/li&gt;
&lt;li&gt;What is data science and how to start doing it in Python? (introduction of procedures, tools, most popular IDE-s for Python, etc.)&lt;/li&gt;
&lt;li&gt;What tools for data analysis and data visualization Python offers? (in each stage of analysis the best libraries will be shown for the specific purpose; as for data visualization we will focus particularly on Bokeh, Seaborn, Plotly and use of Jupyter Notebook and Plotly)&lt;/li&gt;
&lt;li&gt;How to 'unlock' the insight hidden in data through Python and how to use it to transform not only public administration or business, but ultimately the transformation of the whole society and economy towards the insight &amp;amp; knowledge based? (potential of data science)&lt;/li&gt;
&lt;li&gt;Open Data, Open Government Partnership, Open Public Administration &amp;amp; all the advantages of Open Data Science &amp;amp; Python. Data-Driven Approach. Everywhere. Now. (the end of talk +vision)&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Radovan Kavicky</dc:creator><pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-30:pydata-berlin-2017/data-science-data-visualization-in-python-how-to-harness-power-of-python-for-social-good.html</guid><category>python</category><category>data-science</category><category>data-visualization</category><category>analytics</category><category>PyData</category><category>PyDataBLN</category><category>PyDataBerlin</category><category>PyDataBA</category><category>PyDataBratislava</category><category>talk</category><category>Data</category><category>Bokeh</category><category>Social Good</category><category>datascience</category><category>jupyter</category><category>open science</category><category>open data science</category><category>DataVisualization</category><category>data-analysis</category><category>analysis</category><category>matplotlib</category><category>numpy</category><category>data wrangling</category><category>jupyter notebook</category><category>pandas</category><category>machine learning</category><category>deep learning</category><category>Open Data</category><category>Citizen Data Science</category></item><item><title>A Girls Guide To Growing A Moustache with Python</title><link>https://pyvideo.org/pycon-au-2016/a-girls-guide-to-growing-a-moustache-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Heidi Baxter
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/57/view_talk"&gt;https://2016.pycon-au.org/schedule/57/view_talk&lt;/a&gt;
The objective is to showcase the power and flexibility of combining preexisting python modules and apply them to the field of facial detection and machine learning.
Correctly positioning a mustache on any given face in a straight forward and fun example of applying the technology in a 30 min presentation&lt;/p&gt;
&lt;p&gt;To use an elementary task as a vehicle for explaining and demonstrating the complexities of shape recognition, object classifiers and machine learning.&lt;/p&gt;
&lt;p&gt;I will demonstrate the use of image pyramids for image scaling and blending.
The histogram of oriented gradients (HOG) is a feature descriptor used in computer vision and image processing for the purpose of object detection.
Finding the location of different facial features (e.g. corners of the eyes, eyebrows, and the mouth, the tip of the nose etc.) accurately will be described.
Facial landmarks are used to align facial images to a mean face shape. How this allows the blending of images will be described and demonstrated.&lt;/p&gt;
&lt;p&gt;If you are a girl and want a mustache, you can’t just grow one, so you have to steal one.
I developed this project on raspberry pi and python. I wanted to do something different on that platform. I felt there were too many people who used their Rpi to feed their dog, water their plants or play MP3. I knew the platform had more potential than that. Hopefully this talk will help people think differently about Rpi3.
Attendees will learn tips on image processing, as well as training your own object classifier.
Showcasing the power of python in a fun, lighthearted way. Hopefully, being informative and entertaining.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Heidi Baxter</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/a-girls-guide-to-growing-a-moustache-with-python.html</guid><category>datascience</category></item><item><title>Big data biology for pythonistas: getting in on the genomics revolution</title><link>https://pyvideo.org/pycon-au-2016/big-data-biology-for-pythonistas-getting-in-on-the-genomics-revolution.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Darya Vanichkina
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/151/view_talk"&gt;https://2016.pycon-au.org/schedule/151/view_talk&lt;/a&gt;
In 2001 Bill Clinton unveiled &amp;quot;the most important, most wondrous map ever produced by humankind&amp;quot; - the human genome. This monumental endeavour cost $3 billion, and took hundreds of scientists from all over the world 13 years. Today, a single person can generate such a map in ~2 days for $1000. This dramatic drop in cost means that we now have data for hundreds of thousands of people - and other species - from all corners of the globe, and cohorts are available for every major disease under the sun. Petabytes of new data are also being generated every day.&lt;/p&gt;
&lt;p&gt;Most of this data is publicly available, so anyone with an internet connection can try in silico biology from the comfort of their own home. In my talk, I'll walk through what this data looks like, and how it's analysed - with a special focus on where python fits into the workflow (;tldr the most interesting parts!). I will also highlight some common pitfalls software engineers and developers face when getting into this space. Finally, I'll showcase several other facets of bioinformatics that sorely need contributions from good coders.&lt;/p&gt;
&lt;p&gt;Genomics is rapidly entering the world of health care in both the public and private hospital sectors, and in direct-to-consumer genetic testing. Understanding this data, the challenges and limitations of its analytics will help us all make better-informed health and medical decisions, affecting our quality of life and those we love.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Darya Vanichkina</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/big-data-biology-for-pythonistas-getting-in-on-the-genomics-revolution.html</guid><category>datascience</category></item><item><title>Breaking up arrays up into chunks for fun and science with Xarray and Dask</title><link>https://pyvideo.org/pycon-au-2016/breaking-up-arrays-up-into-chunks-for-fun-and-science-with-xarray-and-dask.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Andrew Hicks
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/176/view_talk"&gt;https://2016.pycon-au.org/schedule/176/view_talk&lt;/a&gt;
Xarray is n-dimensional array package bringing numpy and pandas-style interfaces to labelled data.  Its main use is for manipulating scientific datasets stored in NetCDF file format.&lt;/p&gt;
&lt;p&gt;The Dask package brings task graphs for parallel computation of arrays, by breaking them up into smaller chunks, for lazy processing of arrays. It can handle larger-than-memory dataset, scaling from a single machine to a cluster.&lt;/p&gt;
&lt;p&gt;When used together, then can be used to analyse all sorts of scientific data.  This talk will look at using them to analyse a timeseries of Earth-observation from Landsat satellites.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Hicks</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/breaking-up-arrays-up-into-chunks-for-fun-and-science-with-xarray-and-dask.html</guid><category>datascience</category></item><item><title>Building brains</title><link>https://pyvideo.org/pycon-au-2016/building-brains.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Paula Sanz-Leon
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/33/view_talk"&gt;https://2016.pycon-au.org/schedule/33/view_talk&lt;/a&gt;
The Virtual Brain (TVB) is an open-source scientific software written in
Python for advanced simulations of complex brain dynamics. TVB can be used in
a client-server configuration, such that its web-based interface can be
accessed remotely, or as a standalone cross-platform Python library through a
scripting interface.&lt;/p&gt;
&lt;p&gt;In this talk I will begin by briefly explaining the motivations and science
behind TVB. This will be followed by a description of TVB's architecture and
main functionalities, including: simulation of neural activity; modification
and visualization of brain connectivity and network dynamics; and, analysis
of time-series. Lastly, I will show you that getting started with brain
simulations is just one Jupyter notebook away.&lt;/p&gt;
&lt;p&gt;With TVB you might not be able to build smart brains (yet), but you can build
one of the most realistic approximations to the physics of a human brain.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paula Sanz-Leon</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/building-brains.html</guid><category>datascience</category></item><item><title>Data Science Design Patterns</title><link>https://pyvideo.org/pycon-au-2016/data-science-design-patterns.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tennessee Leeuwenburg
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/78/view_talk"&gt;https://2016.pycon-au.org/schedule/78/view_talk&lt;/a&gt;
Most 'data science' projects fall into just a few well-understood design patterns. This talk de-mystifies what those patterns are, how to use them practically, and how to get to grips with your data. We'll a look at how to understand the input/output structure of the models, how to design a reasonable 'experiment', and how to get started. We'll look at getting to grips with problems by simple data sets that can fit entirely on-screen, designing the basic 'form' of the machine before levelling up to bigger data and badder algorithms.&lt;/p&gt;
&lt;p&gt;All of this will be shown using Python tools, libraries and running code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tennessee J Leeuwenburg</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/data-science-design-patterns.html</guid><category>datascience</category></item><item><title>Geoscience Big Data Computing with Python</title><link>https://pyvideo.org/pycon-au-2016/geoscience-big-data-computing-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fei Zhang
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/66/view_talk"&gt;https://2016.pycon-au.org/schedule/66/view_talk&lt;/a&gt;
Python programming language is extensively used in Geoscience Australia (www.ga.gov.au) for scientific computing. In particular, a datacube system has been developed recently using Python as a core technology. The system manages petabyte-scale earth-observation satellite imagery datasets. And has enabled a wide range of applications such as the Water Observation from Space.&lt;/p&gt;
&lt;p&gt;This talk is about how Geoscience Australia applies scientific computing (Python) to the big data challenges.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fei Zhang</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/geoscience-big-data-computing-with-python.html</guid><category>datascience</category></item><item><title>Learning TensorFlow</title><link>https://pyvideo.org/pycon-au-2016/learning-tensorflow.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Robert Layton
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/126/view_talk"&gt;https://2016.pycon-au.org/schedule/126/view_talk&lt;/a&gt;
The recently released TensorFlow library has caused great waves in machine learning circles, with its powerful syntax that allows for distributed computation, improved efficiency, and modularisation. The framework allows you to build graph-based models, such as those used in machine learning and artificial intelligence, and have those models run on a distributed computing systems, including GPUs.&lt;/p&gt;
&lt;p&gt;This talk will cover what TensorFlow is, why/when you should use it, and cover the basics surrounding Variables, Placeholders, and Custom Functions. Importantly, there are several use cases &lt;em&gt;not&lt;/em&gt; focused on data analytics - TensorFlow is more than just a machine learning library!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Layton</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/learning-tensorflow.html</guid><category>datascience</category><category>tensorflow</category></item><item><title>Python for bridging between researchers and service operators: from CFFI to Jupyterhub</title><link>https://pyvideo.org/pycon-au-2016/python-for-bridging-between-researchers-and-service-operators-from-cffi-to-jupyterhub.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kevin Plastow
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/108/view_talk"&gt;https://2016.pycon-au.org/schedule/108/view_talk&lt;/a&gt;
This talk will give an overview of a water forecasting system, which exposes via Python a suite of tools developed in C++ for hydrologists to use.&lt;/p&gt;
&lt;p&gt;PySWIFT is a Python software system that allows the use of SWIFT (Short-term Water Information and Forecasting Tools), a hydrologic suite of tools for flood and short-term streamflow forecasting.&lt;/p&gt;
&lt;p&gt;When integrating the SWIFT C++ system with Python, we aimed to achieve two main goals:
1. Provide a productive and interactive environment for hydrological modelling.
2. Take advantage of a complex multi-threaded C++ suite of tools that enables rapid execution.&lt;/p&gt;
&lt;p&gt;To achieve the first goal, we created a modelling environment using JupyterHub. In this environment, modellers can set up, run, inspect and modify models, which is ideal to conduct exploratory experiments with the models.
To achieve the second goal, we used CFFI to create a Python wrapper for SWIFT’s API. CFFI allows us to interact with SWIFT’s C interface.&lt;/p&gt;
&lt;p&gt;In this presentation, we will highlight the challenges and learnings that came about whilst building this system.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Plastow</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/python-for-bridging-between-researchers-and-service-operators-from-cffi-to-jupyterhub.html</guid><category>datascience</category></item><item><title>Python's Bright Future in Science</title><link>https://pyvideo.org/pycon-au-2016/pythons-bright-future-in-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Juan Nunez-Iglesias
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/200/view_talk"&gt;https://2016.pycon-au.org/schedule/200/view_talk&lt;/a&gt;
Over the past five years, Python has skyrocketed in popularity in the scientific world, pushing out proprietary languages such as IDL and Matlab. This rise was powered by simple syntax and efficient numerical libraries. But many operations in Python are still slow, and upstart languages, such as Julia and Go, promise simplicity &lt;em&gt;and&lt;/em&gt; speed. Can Python cement its place in scientific computing?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Nunez-Iglesias</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/pythons-bright-future-in-science.html</guid><category>datascience</category></item><item><title>Using Jupyter notebooks to develop and share interactive data displays</title><link>https://pyvideo.org/pycon-au-2016/using-jupyter-notebooks-to-develop-and-share-interactive-data-displays.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ioanna Ioannou
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/143/view_talk"&gt;https://2016.pycon-au.org/schedule/143/view_talk&lt;/a&gt;
Presented with Maoyuan Liu from the Bureau of Meteorology.&lt;/p&gt;
&lt;p&gt;Jupyter notebooks have become a very popular tool for scientific data analysis and exploration. Often notebook users may produce a data analysis within a notebook and decide they wish to share it with a wider audience. While notebooks offer excellent facilities for data visualisation, they are less than ideal as a medium for sharing these visualisations more broadly. Interacting with data in a notebook requires knowledge of programming. Notebooks with static data displays are more accessible to non-technical audiences, but static displays severely limit the breadth and depth of data that can be explored within one notebook. So the question arises: How can we provide our audience with the ability to explore our data?&lt;/p&gt;
&lt;p&gt;Developing interactive data displays for the web typically requires knowledge of web technologies that notebook users may not possess. To bridge this gap, a flurry of recent activity has focussed on the development of tools that facilitate interactivity within notebooks. Such tools include interactive plotting tools that enable actions such as zooming and selecting of data within plots, user interface elements (eg. drop-down menus, sliders) that can be incorporated into notebooks, and tools that facilitate the arrangement of plots and information into dashboard-like displays.&lt;/p&gt;
&lt;p&gt;My team at the Australian Bureau of Meteorology has used these tools to build shareable interactive data displays comparing weather forecasts against observations across Australia. In this talk we will review currently available tools that facilitate interactivity within notebooks, share our experience in using them, and the practices we have developed around their use. A simple step-by-step example will demonstrate how we can put together an interactive data display allowing selective plotting of data through UI controls and interaction with the plots.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ioanna Ioannou</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/using-jupyter-notebooks-to-develop-and-share-interactive-data-displays.html</guid><category>datascience</category></item></channel></rss>