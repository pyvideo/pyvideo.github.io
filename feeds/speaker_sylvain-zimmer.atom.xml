<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_sylvain-zimmer.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-06-12T00:00:00+00:00</updated><entry><title>Developer-friendly task queues: what we learned building MRQ</title><link href="https://pyvideo.org/pyparis-2017/developer-friendly-task-queues-what-we-learned-building-mrq.html" rel="alternate"></link><published>2017-06-12T00:00:00+00:00</published><updated>2017-06-12T00:00:00+00:00</updated><author><name>Sylvain Zimmer</name></author><id>tag:pyvideo.org,2017-06-12:pyparis-2017/developer-friendly-task-queues-what-we-learned-building-mrq.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MRQ is a gevent-based task queue, built with performance and developer
productivity in mind. I will explain why we migrated away from Celery
and then from RQ, explore some the unique features of MRQ and discuss
the tradeoffs we made while designing it.&lt;/p&gt;
</summary></entry><entry><title>Et si on réécrivait Google en Python ?</title><link href="https://pyvideo.org/pycon-fr-2016/et-si-on-reecrivait-google-en-python.html" rel="alternate"></link><published>2016-10-15T00:00:00+00:00</published><updated>2016-10-15T00:00:00+00:00</updated><author><name>Sylvain Zimmer</name></author><id>tag:pyvideo.org,2016-10-15:pycon-fr-2016/et-si-on-reecrivait-google-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cette année, le premier crawler de Google (écrit en Python 1.2 !) fête ses 20 ans ... Il a depuis longtemps été remplacé par des versions en C++, mais comment s'y prendrait-on, en 2016, s'il fallait tout recommencer de zéro ?
Je présenterai dans en premier temps l'architecture classique des moteurs de recherche (du crawler au frontend) et son évolution depuis le fameux papier de recherche présentant Google en 1998.
Je ferai ensuite un tour d'horizon des langages et projets open source les plus adaptés aujourd'hui pour chacun des composants, ainsi que les choix faits pour Common Search, un nouveau moteur de recherche open source écrit principalement en Python.
Le but de cette présentation est d'apprendre comment fonctionne un moteur de recherche de l'intérieur, ainsi que de réfléchir aux problèmes pour lesquels Python est ou n'est pas une bonne solution.&lt;/p&gt;
</summary></entry></feed>