<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Vinayak Mehta</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_vinayak-mehta.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-09-11T00:00:00+00:00</updated><subtitle></subtitle><entry><title>The Hitchhiker's Guide to CLIs in Python</title><link href="https://pyvideo.org/europython-2020/the-hitchhikers-guide-to-clis-in-python.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Vinayak Mehta</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/the-hitchhikers-guide-to-clis-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn all about CLIs and how to create one&lt;/p&gt;
&lt;p&gt;Command-line applications and interfaces are used by both newcomers and experienced Python developers everyday. But do you know how they came to be? Hop on to this ship as we go through the CLI galaxy and look at its history …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn all about CLIs and how to create one&lt;/p&gt;
&lt;p&gt;Command-line applications and interfaces are used by both newcomers and experienced Python developers everyday. But do you know how they came to be? Hop on to this ship as we go through the CLI galaxy and look at its history, explore the CLI anatomy and discover some Python packages that can help us create them.&lt;/p&gt;
&lt;p&gt;We’ll then look at some widely used CLIs of our time. And emulate one of them by creating our own CLI using Click. Finally, we’ll package it and publish it on PyPI. Are you ready to travel faster-than-light using this ship’s Infinite Improbability Drive? Carry your towel!&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Command-Line"></category><category term="Development"></category><category term="Python general"></category><category term="The Answer to Life the Universe and Everything Else"></category><category term="Tooling"></category></entry><entry><title>Extracting tabular data from PDFs with Camelot &amp; Excalibur</title><link href="https://pyvideo.org/pycon-au-2019/extracting-tabular-data-from-pdfs-with-camelot-excalibur.html" rel="alternate"></link><published>2019-08-02T00:00:00+00:00</published><updated>2019-08-02T00:00:00+00:00</updated><author><name>Vinayak Mehta</name></author><id>tag:pyvideo.org,2019-08-02:/pycon-au-2019/extracting-tabular-data-from-pdfs-with-camelot-excalibur.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Extracting tables from PDFs is hard. The Portable Document Format was not designed for tabular data. Sadly, a lot of open data is shared as PDFs and getting tables out for analysis is a pain. Camelot and Excalibur can help you extract tabular data from PDFs very easily!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/extracting-tabular-data-from-pdfs-with-camelot-excalibur"&gt;https …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Extracting tables from PDFs is hard. The Portable Document Format was not designed for tabular data. Sadly, a lot of open data is shared as PDFs and getting tables out for analysis is a pain. Camelot and Excalibur can help you extract tabular data from PDFs very easily!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/extracting-tabular-data-from-pdfs-with-camelot-excalibur"&gt;https://2019.pycon-au.org/talks/extracting-tabular-data-from-pdfs-with-camelot-excalibur&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 10:30:00 2019 at C3.6&lt;/p&gt;
</content><category term="PyCon AU 2019"></category></entry><entry><title>The Hitchhiker's Guide to CLIs in Python</title><link href="https://pyvideo.org/pycon-au-2020/the-hitchhikers-guide-to-clis-in-python.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Vinayak Mehta</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/the-hitchhikers-guide-to-clis-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vinayak Mehta&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/UFBPBV"&gt;https://2020.pycon.org.au/program/UFBPBV&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Command-line applications and interfaces are used by both newcomers and experienced Python developers everyday. But do you know how they came to be? Hop on to this ship as we go through the CLI galaxy and look at its history …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vinayak Mehta&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/UFBPBV"&gt;https://2020.pycon.org.au/program/UFBPBV&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Command-line applications and interfaces are used by both newcomers and experienced Python developers everyday. But do you know how they came to be? Hop on to this ship as we go through the CLI galaxy and look at its history, explore the CLI anatomy and discover some Python packages that can help us create them.&lt;/p&gt;
&lt;p&gt;We’ll then emulate one of the most popular CLIs of our time by writing our own CLI using Click, and see how we can package it and publish it on PyPI. Are you ready to travel faster-than-light using this ship’s Infinite Improbability Drive? Carry your towel!&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 16:35:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="VinayakMehta"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>A tale of Python C extensions and cross-platform wheels</title><link href="https://pyvideo.org/pycon-au-2021/a-tale-of-python-c-extensions-and-cross-platform-wheels.html" rel="alternate"></link><published>2021-09-11T00:00:00+00:00</published><updated>2021-09-11T00:00:00+00:00</updated><author><name>Vinayak Mehta</name></author><id>tag:pyvideo.org,2021-09-11:/pycon-au-2021/a-tale-of-python-c-extensions-and-cross-platform-wheels.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;(Vinayak Mehta) Learn how to write a Python C extension using pybind11 and package it for all major operating systems by building cross-platform wheels.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2021.pycon.org.au/program/ANXUUE/"&gt;https://2021.pycon.org.au/program/ANXUUE/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;python, pycon, australia, programming, conference, technical, pyconline, developers, panel, sessions, libraries, frameworks, community, sysadmins, students, education, data, science …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;(Vinayak Mehta) Learn how to write a Python C extension using pybind11 and package it for all major operating systems by building cross-platform wheels.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2021.pycon.org.au/program/ANXUUE/"&gt;https://2021.pycon.org.au/program/ANXUUE/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;python, pycon, australia, programming, conference, technical, pyconline, developers, panel, sessions, libraries, frameworks, community, sysadmins, students, education, data, science&lt;/p&gt;
&lt;p&gt;Videos licensed as CC-BY-NC-SA 4.0&lt;/p&gt;
&lt;p&gt;PyCon AU is the national conference for the Python programming community, bringing together professional, student and enthusiast developers, sysadmins and operations folk, students, educators, scientists, statisticians, and many others besides, all with a love for working with Python.&lt;/p&gt;
&lt;p&gt;PyCon AU informs the country’s Python developers with presentations, tutorials and panel sessions by experts and core developers of Python, as well as the libraries and frameworks that they rely on.&lt;/p&gt;
&lt;p&gt;Produced by Next Day Video Australia: &lt;a class="reference external" href="https://nextdayvideo.com.au"&gt;https://nextdayvideo.com.au&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Sep 11 11:15:00 2021 at Platypus Hall&lt;/p&gt;
</content><category term="PyCon AU 2021"></category><category term="VinayakMehta"></category><category term="pyconau"></category><category term="pyconau_2021"></category></entry><entry><title>Extracting tabular data from PDF'S with Camelot &amp; Excalibur - Vinayak Mehta</title><link href="https://pyvideo.org/pycon-india-2019/extracting-tabular-data-from-pdfs-with-camelot-excalibur-vinayak-mehta.html" rel="alternate"></link><published>2019-10-12T00:00:00+00:00</published><updated>2019-10-12T00:00:00+00:00</updated><author><name>Vinayak Mehta</name></author><id>tag:pyvideo.org,2019-10-12:/pycon-india-2019/extracting-tabular-data-from-pdfs-with-camelot-excalibur-vinayak-mehta.html</id><content type="html"></content><category term="PyCon India 2019"></category></entry><entry><title>Extracting tabular data from PDFs with Camelot &amp; Excalibur</title><link href="https://pyvideo.org/pycon-us-2019/extracting-tabular-data-from-pdfs-with-camelot-excalibur.html" rel="alternate"></link><published>2019-05-03T17:10:00+00:00</published><updated>2019-05-03T17:10:00+00:00</updated><author><name>Vinayak Mehta</name></author><id>tag:pyvideo.org,2019-05-03:/pycon-us-2019/extracting-tabular-data-from-pdfs-with-camelot-excalibur.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Extracting tables from PDFs is hard. The Portable Document Format was
not designed for tabular data. Sadly, a lot of open data is shared as
PDFs and getting tables out for analysis is a pain. A simple
copy-and-paste from a PDF into a text file or spreadsheet program
doesn't …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Extracting tables from PDFs is hard. The Portable Document Format was
not designed for tabular data. Sadly, a lot of open data is shared as
PDFs and getting tables out for analysis is a pain. A simple
copy-and-paste from a PDF into a text file or spreadsheet program
doesn't work.&lt;/p&gt;
&lt;p&gt;This talk will briefly touch upon the history of the Portable Document
Format, discuss some problems that arise when extracting tabular data
from PDFs using the current ecosystem of libraries and tools and
demonstrate how Camelot and Excalibur solve this problem better and in a
scalable manner. These easy-to-use packages automatically detect and
extract tables from PDFs and give you access to the extracted tables in
pandas DataFrames. You can also download them as CSVs or Excel files.&lt;/p&gt;
</content><category term="PyCon US 2019"></category><category term="talk"></category></entry><entry><title>The Hitchhiker's Guide to CLIs in Python</title><link href="https://pyvideo.org/pycon-us-2020/the-hitchhikers-guide-to-clis-in-python.html" rel="alternate"></link><published>2020-04-17T00:00:00+00:00</published><updated>2020-04-17T00:00:00+00:00</updated><author><name>Vinayak Mehta</name></author><id>tag:pyvideo.org,2020-04-17:/pycon-us-2020/the-hitchhikers-guide-to-clis-in-python.html</id><content type="html"></content><category term="PyCon US 2020"></category></entry></feed>