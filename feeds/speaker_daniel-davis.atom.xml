<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_daniel-davis.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-09-21T00:00:00+00:00</updated><entry><title>Intro to Mocking: Why Unit Testing Doesn't Have To Be So Hard</title><link href="https://pyvideo.org/djangocon-us-2015/intro-to-mocking-why-unit-testing-doesnt-have-to.html" rel="alternate"></link><published>2015-09-21T00:00:00+00:00</published><updated>2015-09-21T00:00:00+00:00</updated><author><name>Daniel Davis</name></author><id>tag:pyvideo.org,2015-09-21:djangocon-us-2015/intro-to-mocking-why-unit-testing-doesnt-have-to.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Intro to Mocking: Why Unit Testing Doesn't Have To Be So Hard by Daniel
Davis&lt;/p&gt;
&lt;p&gt;Many developers want to write better code, but simply don't know how to
write units tests for:&lt;/p&gt;
&lt;p&gt;Code that calls other code (i.e. code with dependencies) Methods that
have no return value Code that throws exceptions Mocking provides a
valuable tool for solving these problems. In this talk, we'll discuss
the scenarios in which Mocking is useful, the strategies for addressing
each of the cases above and write simple, clean unit tests using the
built-in Mock library.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/HH6d/"&gt;http://amara.org/v/HH6d/&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>