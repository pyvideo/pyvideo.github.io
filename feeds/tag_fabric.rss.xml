<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 09 Oct 2015 00:00:00 +0000</lastBuildDate><item><title>batou - a multi-(component|environment|platform|.*) deployment tool</title><link>https://pyvideo.org/europython-2013/batou-a-multi-componentenvironmentplatform-deployment-tool.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;batou is a service deployment utility inspired by tools like Puppet,
Fabric, and other modern tools. It made a short appearance in a
lightning talk and at the sprints during EP 2012.&lt;/p&gt;
&lt;p&gt;The talk gives an overview and demonstrates with practical examples how
we deploy web applications with many complex components:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;modelling service components with Python&lt;/li&gt;
&lt;li&gt;multiple environments&lt;/li&gt;
&lt;li&gt;multiple platforms&lt;/li&gt;
&lt;li&gt;development environments&lt;/li&gt;
&lt;li&gt;convergent behaviour&lt;/li&gt;
&lt;li&gt;remote deployments&lt;/li&gt;
&lt;li&gt;secrets management (database passwords, SSL certificates, …)&lt;/li&gt;
&lt;li&gt;no additional run-time dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will show how the real-life requirements in our projects led us to
develop a general model that integrates existing practices without
building a huge stack of technologies.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Theune</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/batou-a-multi-componentenvironmentplatform-deployment-tool.html</guid><category>fabric</category><category>hosting</category><category>deploy</category><category>devops</category><category>integration</category><category>service-orchestration</category><category>deployment</category><category>best-practices</category><category>webapp</category><category>servers</category></item><item><title>Fabric for fun and profit by @jairtrejo</title><link>https://pyvideo.org/pycon-apac-2013-in-japan/fabric-for-fun-and-profit-by-jairtrejo.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Throughout my life I have written my share of shell scripts to automate varied tasks, from boring file uploads to complex web app deployments. Fabric is a tool that has helped me make all that work easier and more fun by using Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jair Trejo</dc:creator><pubDate>Sat, 14 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-14:pycon-apac-2013-in-japan/fabric-for-fun-and-profit-by-jairtrejo.html</guid><category>fabric</category></item><item><title>Fabric: Más alla de lo básico</title><link>https://pyvideo.org/pycon-es-2014/fabric-mas-alla-de-lo-basico.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Un rehash, director's cut de la charla que di en el grupo de python madrid &amp;quot;Fabric F&amp;amp;F edition&amp;quot; &lt;a class="reference external" href="http://www.slideshare.net/ae_bm/fabric-ff-32842706"&gt;http://www.slideshare.net/ae_bm/fabric-ff-32842706&lt;/a&gt; haciendo ejemplo de como integrar fabric como libreria en nuestros scripts en python, quizas con un caso de uso en AWS.&lt;/p&gt;
&lt;p&gt;Podria ser un taller corto si la &amp;quot;patria&amp;quot; lo requiere.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alejandro Enrique Brito Monedero</dc:creator><pubDate>Mon, 06 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-06:pycon-es-2014/fabric-mas-alla-de-lo-basico.html</guid><category>fabric</category></item><item><title>PyOhio 2010: Wrangling the bits, standardizing how apps get built</title><link>https://pyvideo.org/pyohio-2010/pyohio-2010--wrangling-the-bits--standardizing-ho.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wrangling the bits, standardizing how apps get built&lt;/p&gt;
&lt;p&gt;Presented by Rick Harding&lt;/p&gt;
&lt;p&gt;As we moved more work to Python we had to figure out how to start,
share, and deploy projects in a standard way. Virtualenv, pip, and Git
to the rescue.&lt;/p&gt;
&lt;p&gt;[Note: The talk starts at around 7:20 when the mic is working.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rick Harding</dc:creator><pubDate>Sat, 31 Jul 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-07-31:pyohio-2010/pyohio-2010--wrangling-the-bits--standardizing-ho.html</guid><category>deploying</category><category>fabric</category><category>git</category><category>pip</category><category>pyohio</category><category>pyohio2010</category><category>virtualenv</category></item><item><title>PyOhio 2011: Using Fabric - from a sysadmin's perspective</title><link>https://pyvideo.org/pyohio-2011/pyohio-2011--using-fabric---from-a-sysadmin--39-s.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Fabric -- from a sysadmin's perspective&lt;/p&gt;
&lt;p&gt;Presented by Morgan Goose&lt;/p&gt;
&lt;p&gt;Fabric is a great tool written in python for python devs. It allows you
to script remote interactions on a remote server and only requires ssh
and a shell on the remote host. It's commonly pigeonholed into a
deployment tool, but it can but used for more than just websites.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Morgan Goose</dc:creator><pubDate>Sat, 30 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-30:pyohio-2011/pyohio-2011--using-fabric---from-a-sysadmin--39-s.html</guid><category>fabric</category><category>pyohio</category><category>pyohio2011</category></item><item><title>Automate your web deployments with fabric</title><link>https://pyvideo.org/pytexas-2015/automate-your-web-deployments-with-fabric.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to use fabric to deploy your web applications and other thoughts on
web deployments in general.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wes Thomas</dc:creator><pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-09:pytexas-2015/automate-your-web-deployments-with-fabric.html</guid><category>fabric</category><category>Automation</category></item><item><title>Python/Django deployment</title><link>https://pyvideo.org/chipy/python-django-deployment.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;I'll introduce the WSGI ecosystem. We'll then setup a Django app and
deploy it to a VM. I'll cover server setup/config and best practices and
cover software used like Fabric, nginx etc. Sample nginx, WSGI and
Apache configs will be provided. People can follow along and I'll
provide download links after so they can try it at home. This will be
the best meeting ever.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rohit Sankaran</dc:creator><pubDate>Thu, 10 Feb 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-02-10:chipy/python-django-deployment.html</guid><category>apache</category><category>chipy</category><category>fabric</category><category>nginx</category><category>wsgi</category></item><item><title>Safely deploying on the cutting edge</title><link>https://pyvideo.org/djangocon-us-2011/djangocon-2011--safely-deploying-on-the-cutting-e.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Safely deploying on the cutting edge&lt;/p&gt;
&lt;p&gt;Eric Holscher&lt;/p&gt;
&lt;p&gt;This talk will go through the deployment system that we have built at
Urban Airship. It will cover the process that allows us to automate our
deployments, making it safe to deploy at any time. It's built on Fabric,
Gunicorn, Virtualenv, Rsync, Supervisord, and Python. We end up with
fully isolated environments for our services that are easy to manage.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Mon, 05 Sep 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-09-05:djangocon-us-2011/djangocon-2011--safely-deploying-on-the-cutting-e.html</guid><category>deploying</category><category>djangocon</category><category>djangocon2011</category><category>fabric</category><category>gunicorn</category><category>virtualenv</category><category>web</category></item><item><title>Deploying web applications to the cloud with Python</title><link>https://pyvideo.org/europython-2011/deploying-web-applications-to-the-cloud-with-pyth.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Nate Aune - 23 June 2011 in &amp;quot;Track Ravioli&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How can Python help you deploy web applications to the cloud? Amazon EC2
provides virtual machines on demand but as a developer you still have to
configure these machines and push your code to them. Fabric is a Python
library that lets you execute commands on a remote machine, and Boto is
a Python library for interfacing with Amazon web services. By using
Fabric and Boto, you can easily create repeatable deployments and
provision new resources as needed with minimal effort.&lt;/p&gt;
&lt;p&gt;This talk will introduce Amazon Web Services and how to launch new
machines using simple Boto scripts, and how to get started making your
own repeatable deployments using Fabric scripts.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nate Aune</dc:creator><pubDate>Sun, 24 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-24:europython-2011/deploying-web-applications-to-the-cloud-with-pyth.html</guid><category>boto</category><category>cloud</category><category>deploy</category><category>ec2</category><category>fabric</category><category>web</category></item><item><title>Advanced Aspects of the Django Ecosystem: Haystack, Celery &amp; Fabric</title><link>https://pyvideo.org/europython-2011/advanced-aspects-of-the-django-ecosystem-haystac.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Simon Willison - 21 June 2011 in &amp;quot;Track Spaghetti&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django benefits from a thriving third-party ecosystem. This talk will
take a deep look at three of the components I have found most useful in
my own projects: Haystack for full-text search, Celery for offline
processing and Fabric for automated eployments. I'll discuss how we use
them for Lanyrd.com, and demonstrate why they deserve a permanent place
in your toolbox.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simon Willison</dc:creator><pubDate>Mon, 18 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-18:europython-2011/advanced-aspects-of-the-django-ecosystem-haystac.html</guid><category>celery</category><category>django</category><category>fabric</category><category>processing</category></item><item><title>Paver: the build tool you missed</title><link>https://pyvideo.org/europython-2011/paver-the-build-tool-you-missed.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Lukaš Linhart - 22 June 2011 in &amp;quot;Track Tagliatelle &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Build tools are not very popular in Python environment. In this talk,
I'd like to show how useful it is to have one, even if you do just
simple web applications. A nice, single point of entry instead of hairy
shell scripts, fabric fabfiles and django admin commands all over the
place.&lt;/p&gt;
&lt;p&gt;Written in the neat, friendly Python instead of some Anty XML jumbo, you
are about to have a refreshing cleanup.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lukáš Linhart</dc:creator><pubDate>Wed, 13 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-13:europython-2011/paver-the-build-tool-you-missed.html</guid><category>django</category><category>fabric</category><category>web</category><category>xml</category></item><item><title>Komponenten einer komplexen Web-Applikation</title><link>https://pyvideo.org/pycon-de-2013/komponenten-einer-komplexen-web-applikation.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Komplexe Web-Applikationen bestehen aus mehr als einem Webserver, einer
Datenbank und etwas Code. Dieser Vortrag gibt einen Überblick über die
typischen Bausteine wie Celery als Task Queue, Haystack für
Volltextsuche, Sentry als Log-Diensten und automatischem Deployment mit
Fabric und Salt. Die vorgestellte Komponenten werden anhand einer
Django-Applikation erläutert, sind jedoch zum Großteil auch mit anderen
Frameworks nutzbar.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Hepper</dc:creator><pubDate>Wed, 16 Oct 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-10-16:pycon-de-2013/komponenten-einer-komplexen-web-applikation.html</guid><category>celery</category><category>deployment</category><category>django</category><category>elasticsearch</category><category>fabric</category><category>haystack</category><category>salt</category><category>search</category><category>sentry</category><category>solr</category></item></channel></rss>