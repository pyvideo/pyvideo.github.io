<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Brendan Wee</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_brendan-wee.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-10-23T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Lightweight Multi-Tenant Architecture for Django Applications</title><link href="https://pyvideo.org/djangocon-us-2021/lightweight-multi-tenant-architecture-for-django-applications.html" rel="alternate"></link><published>2021-10-23T00:00:00+00:00</published><updated>2021-10-23T00:00:00+00:00</updated><author><name>Brendan Wee</name></author><id>tag:pyvideo.org,2021-10-23:/djangocon-us-2021/lightweight-multi-tenant-architecture-for-django-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As Software as a Service continues to grow in today’s landscape, many applications must adapt and provide services to multiple clients. Multitenancy has proven to be a mature architecture that can achieve secure data segregation while sustaining application functionality for multiple clients with lower costs. We have looked …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As Software as a Service continues to grow in today’s landscape, many applications must adapt and provide services to multiple clients. Multitenancy has proven to be a mature architecture that can achieve secure data segregation while sustaining application functionality for multiple clients with lower costs. We have looked for pre-existing solutions to implement multitenancy, but were unable to find one. In this talk, we will demonstrate the benefits of multitenancy and provide a simple way to implement a lightweight, single-database, single-schema, multi-tenant architecture in virtually any Django application by using Django Guardian.&lt;/p&gt;
</content><category term="DjangoCon US 2021"></category></entry></feed>