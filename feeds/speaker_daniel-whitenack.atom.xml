<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_daniel-whitenack.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-05-25T00:00:00+00:00</updated><entry><title>Scalable, Distributed, and Reproducible Machine Learning</title><link href="https://pyvideo.org/pydata-meetups/scalable-distributed-and-reproducible-machine-learning.html" rel="alternate"></link><published>2017-05-25T00:00:00+00:00</published><updated>2017-05-25T00:00:00+00:00</updated><author><name>Daniel Whitenack</name></author><id>tag:pyvideo.org,2017-05-25:pydata-meetups/scalable-distributed-and-reproducible-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The recent advances in machine learning and artificial intelligence are amazing!  Yet, in order to have real value within a company, data scientists must be able to get their models off of their laptops and deployed within a companyâ€™s data pipelines and infrastructure.  Those models must also scale to production size data. In this talk, we will implement a model locally in Python. We will then take that model and deploy both it's training and inference in a scalable manner to a production cluster with Pachyderm, an open source framework for distributed pipelining and data versioning. We will also learn how to update the production model online, track changes in our model and data, and explore our results.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Daniel Whitenack (&amp;#64;dwhitena) is a Ph.D. trained data scientist working with Pachyderm (&amp;#64;pachydermIO). Daniel develops innovative, distributed data pipelines which include predictive models, data visualizations, statistical analyses, and more. He has spoken at conferences around the world (ODSC, Spark Summit, Datapalooza, DevFest Siberia, GopherCon, and more), teaches data science/engineering with Ardan Labs (&amp;#64;ardanlabs), maintains the Go kernel for Jupyter, and is actively helping to organize contributions to various open source data science projects.&lt;/p&gt;
</summary><category term="machine learning"></category><category term="pachyderm"></category></entry><entry><title>Lightning talks May 19th, 2017 Evening session</title><link href="https://pyvideo.org/pycon-us-2017/lightning-talks-may-19th-2017-evening-session.html" rel="alternate"></link><published>2017-05-19T00:00:00+00:00</published><updated>2017-05-19T00:00:00+00:00</updated><author><name>Katie McLaughlin</name></author><id>tag:pyvideo.org,2017-05-19:pycon-us-2017/lightning-talks-may-19th-2017-evening-session.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks 2017-05-19 Evening&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="12%" /&gt;
&lt;col width="23%" /&gt;
&lt;col width="65%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head" rowspan="2"&gt;Start&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Speakers&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Subject&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;0:55&lt;/td&gt;
&lt;td rowspan="3"&gt;Katy&lt;/td&gt;
&lt;td rowspan="3"&gt;&lt;strong&gt;Emoji Archeology 101 - A lightning talk cover&lt;/strong&gt;
- A call to revolution against the Unicode emoji.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;5:55&lt;/td&gt;
&lt;td rowspan="4"&gt;Daniel Whitenack&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Taking Over the Data World with Containerized&lt;/strong&gt;
&lt;strong&gt;Python&lt;/strong&gt;
- Using Kubernetes cluster with Pachyderm.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;11:20&lt;/td&gt;
&lt;td rowspan="4"&gt;Fang-Pen Lin&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Bugbuzz - A modern web-based debugger for Python&lt;/strong&gt;
- Adding just a couple lines triggers a web based
debugger with basic functionality.  Uses PubNub.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;16:45&lt;/td&gt;
&lt;td rowspan="5"&gt;Kojo Idrissa&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Software Engineering for Beginners&lt;/strong&gt;
- Focus on common tools like version control, in-code
documentation, testing &amp;amp; TDD, dependency management &amp;amp;
deployment, and finally OS stuff.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="8"&gt;21:50&lt;/td&gt;
&lt;td rowspan="8"&gt;Cameron Dershem&lt;/td&gt;
&lt;td rowspan="8"&gt;&lt;strong&gt;Community Level Development:  What Python Should&lt;/strong&gt;
&lt;strong&gt;Learn From Rust&lt;/strong&gt;
- Please learn From Rust. Rust is the best community.
Devs are on chat and enforce good attitude; cool thank
you page; roadmap; 'how should this be taught' section
in RFCs; mentorship for starter maintainers; great
opensource book.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;26:30&lt;/td&gt;
&lt;td rowspan="4"&gt;Al Sweigart&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;How to Do PyCon&lt;/strong&gt;
- Skip talks and meet people; use shirt trick; don't
eat alone; Twitter is great for followup.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;31:53&lt;/td&gt;
&lt;td rowspan="4"&gt;Myron Walker&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Faking Python Imports&lt;/strong&gt;
- Fake for modules and callables not available on test
environment. Use directory of local fakes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;35:12&lt;/td&gt;
&lt;td rowspan="4"&gt;Vince Salvino&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Help Wanted: A PyPI Vulnerability DB&lt;/strong&gt;
- Like WPScan, it would be nice to a central DB and
tool for known PyPI security issues. Talk to me.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;37:50&lt;/td&gt;
&lt;td rowspan="5"&gt;Lev
Konstantinovskiy&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Same Content, Different Words&lt;/strong&gt;
- Is 'Ice cream' the same as 'Gelato' in different
reviews? Use Word Mover's Distance in GenSim to find
out.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;43:20&lt;/td&gt;
&lt;td rowspan="5"&gt;Mario&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Randomize Your Decisions&lt;/strong&gt;
- We spammed ourselves by having too many alerts, had
hacked users, bugs everywhere, bad SEO. Still, it was
worth making a website.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;48:30&lt;/td&gt;
&lt;td rowspan="5"&gt;Tim Head&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Bayesian Optimization: Coffee&lt;/strong&gt;
- Tweak settings with Bayesian Optimization, easily.
Made scikit-optimize with simpler calls than scikit-
learn.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;53:35&lt;/td&gt;
&lt;td rowspan="4"&gt;Meg Ray&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Teaching Python to Children&lt;/strong&gt;
- Use both teacher pedagogy and developer technical
skills to train K-12 teachers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="lightning talks"></category></entry></feed>