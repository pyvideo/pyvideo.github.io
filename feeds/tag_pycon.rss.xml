<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 05 May 2019 00:00:00 +0000</lastBuildDate><item><title>Final Remarks and Conference Close for PyCon 2019</title><link>https://pyvideo.org/pycon-us-2019/final-remarks-and-conference-close-for-pycon-2019.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ernest W. Durbin III</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-us-2019/final-remarks-and-conference-close-for-pycon-2019.html</guid><category>coding</category><category>ernest</category><category>pycon</category><category>python</category><category>tutorial</category></item><item><title>Developing a Cad application as an hobby. My exciting hobby is now my job</title><link>https://pyvideo.org/europython-2011/developing-a-cad-application-as-an-hobby-my-exci.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Matteo Boscolo - 22 June 2011 in &amp;quot;Track Tagliatelle &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PythonCAD is a CAD package written, surprisingly enough, in Python using
the PyQt interface. The PythonCAD project aims to produce a scriptable,
open- source, easy to use CAD package for Linux (Cross Platforms).&lt;/p&gt;
&lt;p&gt;I start developing PythonCAD in my spare time and now python is the
programming language that I mostly use. I think that will be very
interesting to tell my story and how I learn python pyqt ,sqlite, sympy…
and how python and pycon and OpenERP change my job.&lt;/p&gt;
&lt;p&gt;The goal will be to tell at the new python programmer how easy to use is
python even for complex problem. I can explain why I chose pyqt .. what
kind of trouble I have found and how I solve it. Starting from python
going to pyqt and at the end how to deploy a python application with
pyInstaller …&lt;/p&gt;
&lt;p&gt;I also explain my actual project OpenPLM an OpenERP module to manage PLM
data into OpenERP&lt;/p&gt;
&lt;p&gt;see you soon Matteo&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matteo Boscolo</dc:creator><pubDate>Wed, 13 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-13:europython-2011/developing-a-cad-application-as-an-hobby-my-exci.html</guid><category>deploy</category><category>pycon</category><category>pyqt</category></item><item><title>A Tour of Python Standard Library (1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/a-tour-of-python-standard-library--1-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Welcome to A Tour of Python Standard Library. Together let us explore
the various modules, which will help you to build robust working
programs. Once you know about a particular library well, you will start
replacing those 20 odd lines of code you used to write with a 2-3 lines
and feel safe that your code will now work on all the platforms that
Python supports. Just like the galaxy, the Python Standard Library is
vast and when hitch-hiking I will take you through some important ones
that happen to be used most often. You can explore, ask questions,
experiment through out the ride. Welcome! And let the journey begin.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/a-tour-of-python-standard-library--1-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category><category>stdlib</category></item><item><title>A Tour of Python Standard Library (2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/a-tour-of-python-standard-library--2-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Welcome to A Tour of Python Standard Library. Together let us explore
the various modules, which will help you to build robust working
programs. Once you know about a particular library well, you will start
replacing those 20 odd lines of code you used to write with a 2-3 lines
and feel safe that your code will now work on all the platforms that
Python supports. Just like the galaxy, the Python Standard Library is
vast and when hitch-hiking I will take you through some important ones
that happen to be used most often. You can explore, ask questions,
experiment through out the ride. Welcome! And let the journey begin.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/a-tour-of-python-standard-library--2-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category><category>stdlib</category></item><item><title>Introduction to Object-Oriented Programming (1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/introduction-to-object-oriented-programming--1-of.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a
&amp;quot;scripting&amp;quot; language, Python is an object-oriented programming language
at its core. This tutorial is designed for programmers who are familiar
with Python yet new to the concept of object-oriented programming. We
also welcome programmers who are experienced with other object-oriented
languages yet new to Python. We will begin the tutorial by introducing
the general principles of object- oriented programming. We then focus on
Python's treatment of object orientation. The tutorial will be organized
as a mix of formal presentations together with hands-on demonstrations
and exercises. Take your Python programming to the next level!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/introduction-to-object-oriented-programming--1-of.html</guid><category>oop</category><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>Introduction to Object-Oriented Programming (2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/introduction-to-object-oriented-programming--2-of.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a
&amp;quot;scripting&amp;quot; language, Python is an object-oriented programming language
at its core. This tutorial is designed for programmers who are familiar
with Python yet new to the concept of object-oriented programming. We
also welcome programmers who are experienced with other object-oriented
languages yet new to Python. We will begin the tutorial by introducing
the general principles of object- oriented programming. We then focus on
Python's treatment of object orientation. The tutorial will be organized
as a mix of formal presentations together with hands-on demonstrations
and exercises. Take your Python programming to the next level!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/introduction-to-object-oriented-programming--2-of.html</guid><category>oop</category><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>Introduction to Object-Oriented Programming (3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/introduction-to-object-oriented-programming--3-of.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a
&amp;quot;scripting&amp;quot; language, Python is an object-oriented programming language
at its core. This tutorial is designed for programmers who are familiar
with Python yet new to the concept of object-oriented programming. We
also welcome programmers who are experienced with other object-oriented
languages yet new to Python. We will begin the tutorial by introducing
the general principles of object- oriented programming. We then focus on
Python's treatment of object orientation. The tutorial will be organized
as a mix of formal presentations together with hands-on demonstrations
and exercises. Take your Python programming to the next level!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/introduction-to-object-oriented-programming--3-of.html</guid><category>oop</category><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>PyCon 2009: A better Python for the JVM</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--a-better-python-for-the-jvm.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A better Python for the JVM&lt;/p&gt;
&lt;p&gt;Presented at PyCon 2009 by Tobias Ivarsson&lt;/p&gt;
&lt;p&gt;At the last PyCon we announced that we were starting a project for
improving the Jython compiler. This year we will share the first fruits
of that work with the Python community!&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ambient mic left on; results in echoing audio]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--a-better-python-for-the-jvm.html</guid><category>jvm</category><category>jython</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: A Configuration Comparison in Python (#70)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--a-configuration-comparison-in-python-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A Configuration Comparison in Python&lt;/p&gt;
&lt;p&gt;Presented at PyCon 2009 by Terry Peppers&lt;/p&gt;
&lt;p&gt;When faced with the simple task of figuring out how to use configuration
to your advantage in Python there are a myriad of methods. The purpose
of this talk is to walk through the standard library modules and the
popular Python Package Index modules comparing and contrasting
configuration formats and the code that consumes them. Specifically, I
would like to walk through the use of the csv module, the ConfigParser
module, ConfigObj, lxml, PyYaml and SimpleJSON.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--a-configuration-comparison-in-python-.html</guid><category>configobj</category><category>configparser</category><category>csv</category><category>lxml</category><category>pycon</category><category>pycon2009</category><category>pyyaml</category><category>simplejson</category></item><item><title>PyCon 2009: A Curious Course on Coroutines and Concurrency (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--a-curious-course-on-coroutines-and-c0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A Curious Course on Coroutines and Concurrency (part 3 of 3)&lt;/p&gt;
&lt;p&gt;Presented at PyCon 2009 by David Beazley&lt;/p&gt;
&lt;p&gt;If you are a programmer who cares about Python and concurrency, then you
should also care about Python coroutines. Although they were first
introduced in Python 2.5, coroutines remain one of Python's most
overlooked features--- often vaguely described as a curious &amp;quot;extension&amp;quot;
of generator functions with little insight as to how they might be
applied to real-world problems. This tutorial examines coroutines in a
more practical light by showing how they are actually a very elegant way
to implement a processing &amp;quot;task.&amp;quot; Using this task abstraction, it is
possible to use coroutines to implement processing pipelines, event
handling systems, and programs based on cooperative multitasking.
Moreover, if you define tasks using coroutines, they can be easily
incorporated into more traditional concurrent programs that utilize
threads or message passing.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: bit of clipping start to finish.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Beazley</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--a-curious-course-on-coroutines-and-c0.html</guid><category>concurrency</category><category>coroutines</category><category>generator</category><category>pycon</category><category>pycon2009</category><category>python-advanced</category></item><item><title>PyCon 2009: A Curious Course on Coroutines and Concurrency (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--a-curious-course-on-coroutines-and-c1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A Curious Course on Coroutines and Concurrency (part 2 of 3)&lt;/p&gt;
&lt;p&gt;Presented at PyCon 2009 by David Beazley&lt;/p&gt;
&lt;p&gt;If you are a programmer who cares about Python and concurrency, then you
should also care about Python coroutines. Although they were first
introduced in Python 2.5, coroutines remain one of Python's most
overlooked features--- often vaguely described as a curious &amp;quot;extension&amp;quot;
of generator functions with little insight as to how they might be
applied to real-world problems. This tutorial examines coroutines in a
more practical light by showing how they are actually a very elegant way
to implement a processing &amp;quot;task.&amp;quot; Using this task abstraction, it is
possible to use coroutines to implement processing pipelines, event
handling systems, and programs based on cooperative multitasking.
Moreover, if you define tasks using coroutines, they can be easily
incorporated into more traditional concurrent programs that utilize
threads or message passing.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: bit of clipping start to finish.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Beazley</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--a-curious-course-on-coroutines-and-c1.html</guid><category>concurrency</category><category>coroutines</category><category>generator</category><category>pycon</category><category>pycon2009</category><category>python-advanced</category></item><item><title>PyCon 2009: A Curious Course on Coroutines and Concurrency (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--a-curious-course-on-coroutines-and-co.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A Curious Course on Coroutines and Concurrency (part 1 of 3)&lt;/p&gt;
&lt;p&gt;Presented at PyCon 2009 by David Beazley&lt;/p&gt;
&lt;p&gt;If you are a programmer who cares about Python and concurrency, then you
should also care about Python coroutines. Although they were first
introduced in Python 2.5, coroutines remain one of Python's most
overlooked features--- often vaguely described as a curious &amp;quot;extension&amp;quot;
of generator functions with little insight as to how they might be
applied to real-world problems. This tutorial examines coroutines in a
more practical light by showing how they are actually a very elegant way
to implement a processing &amp;quot;task.&amp;quot; Using this task abstraction, it is
possible to use coroutines to implement processing pipelines, event
handling systems, and programs based on cooperative multitasking.
Moreover, if you define tasks using coroutines, they can be easily
incorporated into more traditional concurrent programs that utilize
threads or message passing.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: bit of clipping start to finish.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Beazley</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--a-curious-course-on-coroutines-and-co.html</guid><category>concurrency</category><category>coroutines</category><category>generator</category><category>pycon</category><category>pycon2009</category><category>python-advanced</category></item><item><title>PyCon 2009: A Whirlwind Excursion through Writing a C Extension (#68)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--a-whirlwind-excursion-through-writing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: Ambient mic used, some echoing] Everyone's heard of C
extensions to Python, but few have ventured into those murky depths.
This is a quick overview of how to write a C extension, complete with
highlights of the C API, memory management, error handling, and type
creation. Whether you want to speed up your Python, integrate with
legacy code, contribute to Python's core, or just learn a little about
how it all works under the covers, you will enjoy this trip through
unfamiliar territory. I guarantee you will return safely.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ned Batchelder</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--a-whirlwind-excursion-through-writing.html</guid><category>extensions</category><category>pycon</category><category>pycon2009</category><category>python-advanced</category></item><item><title>PyCon 2009: About Python Namespaces (and Code Objects) (#46)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--about-python-namespaces--and-code-obj.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;About Python Namespaces (and Code Objects)&lt;/p&gt;
&lt;p&gt;Presented at PyCon 2009&lt;/p&gt;
&lt;p&gt;An explanation of some of the underlying concepts of Python, come learn
about names and values placed in namespaces, modified by code objects
and collected into modules. We'll explore namespaces using the Python
interactive prompt, with graphical display of object trees using
Graphviz. Also explained will be the namespace concepts of closures and
early binding; how to define new objects without subclassing via use of
default/curried arguments and closures.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Audio buzzing, missing beginning, talk is only 15
mins (may be cut)]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--about-python-namespaces--and-code-obj.html</guid><category>codeobjects</category><category>namespaces</category><category>pycon</category><category>pycon2009</category><category>python-advanced</category></item><item><title>PyCon 2009: Advanced SQLAlchemy (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--advanced-sqlalchemy--part-1-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the
full power of SQL while remaining easy to use for the basics, and is
flexible enough to work with existing database schemas as well as fresh
designs. SQLAlchemy is used in production by leading Python web
frameworks Pylons and TurboGears as well as many other web and non-web
developers. This tutorial discusses current data mapping techniques,
advanced Query techniques, Session/transaction usage, and maximizing
schema usage with SQLAlchemy's event model.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--advanced-sqlalchemy--part-1-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>sqlalchemy</category></item><item><title>PyCon 2009: Advanced SQLAlchemy (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--advanced-sqlalchemy--part-2-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;` &amp;lt;&lt;a class="reference external" href="http://blip.tv/file/2023897"&gt;http://blip.tv/file/2023897&lt;/a&gt;&amp;gt;`__&lt;/p&gt;
&lt;p&gt;SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the
full power of SQL while remaining easy to use for the basics, and is
flexible enough to work with existing database schemas as well as fresh
designs. SQLAlchemy is used in production by leading Python web
frameworks Pylons and TurboGears as well as many other web and non-web
developers. This tutorial discusses current data mapping techniques,
advanced Query techniques, Session/transaction usage, and maximizing
schema usage with SQLAlchemy's event model.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--advanced-sqlalchemy--part-2-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>sqlalchemy</category></item><item><title>PyCon 2009: Advanced SQLAlchemy (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--advanced-sqlalchemy--part-3-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the
full power of SQL while remaining easy to use for the basics, and is
flexible enough to work with existing database schemas as well as fresh
designs. SQLAlchemy is used in production by leading Python web
frameworks Pylons and TurboGears as well as many other web and non-web
developers. This tutorial discusses current data mapping techniques,
advanced Query techniques, Session/transaction usage, and maximizing
schema usage with SQLAlchemy's event model.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--advanced-sqlalchemy--part-3-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>sqlalchemy</category></item><item><title>PyCon 2009: An Introduction to Google App Engine (Part 1 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--an-introduction-to-google-app-engine-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: ] Google App Engine allows you to build scalable web
applications and host them on Google hardware. This hands on tutorial
will walk you through the steps of building a basic web application,
from setting up the SDK through to using the major APIs that App Engine
provides.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--an-introduction-to-google-app-engine-.html</guid><category>gae</category><category>googleappengine</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: An Introduction to Google App Engine (Part 2 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--an-introduction-to-google-app-engine0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: ] Google App Engine allows you to build scalable web
applications and host them on Google hardware. This hands on tutorial
will walk you through the steps of building a basic web application,
from setting up the SDK through to using the major APIs that App Engine
provides.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--an-introduction-to-google-app-engine0.html</guid><category>gae</category><category>googleappengine</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: Application Developing with IronPython (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--application-developing-with-ironpyth0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A tutorial on &amp;quot;Developing with IronPython&amp;quot;: Python for .NET and Mono.
The Common Language Runtime is very different to CPython, with a
powerful JIT compiler, and different garbage collection and threading
model. More importantly, .NET's huge range of libraries can now be used
from Python. Various aspects of developing with IronPython will be
covered and attendees will put this into practice by extending an
example application. Topics include: Differences between IronPython and
CPython, including &amp;quot;Why Use IronPython?&amp;quot; Introduction to the .NET
framework - a dynamic language on a statically typed framework GUIs with
Windows Forms Databases Network requests and web services Handling XML
Threading Come with laptop - running Linux, Windows or Mac OS X - and
ready to code!&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: first 5 min muted ]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--application-developing-with-ironpyth0.html</guid><category>ironpython</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: Application Developing with IronPython (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--application-developing-with-ironpyth1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A tutorial on &amp;quot;Developing with IronPython&amp;quot;: Python for .NET and Mono.
The Common Language Runtime is very different to CPython, with a
powerful JIT compiler, and different garbage collection and threading
model. More importantly, .NET's huge range of libraries can now be used
from Python. Various aspects of developing with IronPython will be
covered and attendees will put this into practice by extending an
example application. Topics include: Differences between IronPython and
CPython, including &amp;quot;Why Use IronPython?&amp;quot; Introduction to the .NET
framework - a dynamic language on a statically typed framework GUIs with
Windows Forms Databases Network requests and web services Handling XML
Threading Come with laptop - running Linux, Windows or Mac OS X - and
ready to code!&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: first 5 min muted ]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--application-developing-with-ironpyth1.html</guid><category>ironpython</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: Application Developing with IronPython (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--application-developing-with-ironpytho.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A tutorial on &amp;quot;Developing with IronPython&amp;quot;: Python for .NET and Mono.
The Common Language Runtime is very different to CPython, with a
powerful JIT compiler, and different garbage collection and threading
model. More importantly, .NET's huge range of libraries can now be used
from Python. Various aspects of developing with IronPython will be
covered and attendees will put this into practice by extending an
example application. Topics include: Differences between IronPython and
CPython, including &amp;quot;Why Use IronPython?&amp;quot; Introduction to the .NET
framework - a dynamic language on a statically typed framework GUIs with
Windows Forms Databases Network requests and web services Handling XML
Threading Come with laptop - running Linux, Windows or Mac OS X - and
ready to code!&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: first 5 min muted ]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--application-developing-with-ironpytho.html</guid><category>ironpython</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: Behind the scenes of EveryBlock.com (#111)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--behind-the-scenes-of-everyblock-com--.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyCon 2009: Behind the scenes of EveryBlock.com by Adrian Holovaty&lt;/p&gt;
&lt;p&gt;Adrian Holovaty, bad-boy YouTube guitar star (search for him, if you
dare!) and co-author of the Django web framework, takes you under the
hood of EveryBlock.com, a Knight Foundation News Challenge startup which
rounds up local news and information, and is powered 100% by Python and
Django.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Audio humming]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--behind-the-scenes-of-everyblock-com--.html</guid><category>everyblock</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: Building Real-time Network applications for the web with Twisted and Orbited (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--building-real-time-network-applicati0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Haven't you always wanted to create a massively multiplayer, real-time
game for the browser? Or perhaps add chat to your website, or maybe
write a real- time financial application, collaborative text editor, or
network health monitoring app, all in the browser. Forget web
frameworks; Orbited.TCPSocket lets you communicate directly from a
browser to any network server, with any protocol you want. By tutorial's
end, every attendee will have built their own real-time data monitoring
application, or multiplayer game, from scratch using Orbited, Twisted,
and js.io.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--building-real-time-network-applicati0.html</guid><category>network</category><category>orbited</category><category>pycon</category><category>pycon2009</category><category>realtime</category><category>twisted</category></item><item><title>PyCon 2009: Building Real-time Network applications for the web with Twisted and Orbited (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--building-real-time-network-applicati1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Haven't you always wanted to create a massively multiplayer, real-time
game for the browser? Or perhaps add chat to your website, or maybe
write a real- time financial application, collaborative text editor, or
network health monitoring app, all in the browser. Forget web
frameworks; Orbited.TCPSocket lets you communicate directly from a
browser to any network server, with any protocol you want. By tutorial's
end, every attendee will have built their own real-time data monitoring
application, or multiplayer game, from scratch using Orbited, Twisted,
and js.io.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--building-real-time-network-applicati1.html</guid><category>network</category><category>orbited</category><category>pycon</category><category>pycon2009</category><category>realtime</category><category>twisted</category></item><item><title>PyCon 2009: Building Real-time Network applications for the web with Twisted and Orbited (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--building-real-time-network-applicatio.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Haven't you always wanted to create a massively multiplayer, real-time
game for the browser? Or perhaps add chat to your website, or maybe
write a real- time financial application, collaborative text editor, or
network health monitoring app, all in the browser. Forget web
frameworks; Orbited.TCPSocket lets you communicate directly from a
browser to any network server, with any protocol you want. By tutorial's
end, every attendee will have built their own real-time data monitoring
application, or multiplayer game, from scratch using Orbited, Twisted,
and js.io.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--building-real-time-network-applicatio.html</guid><category>network</category><category>orbited</category><category>pycon</category><category>pycon2009</category><category>realtime</category><category>twisted</category></item><item><title>PyCon 2009: Data Storage in Python - An Overview of Options (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--data-storage-in-python---an-overview-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are many possibilities in Python to store data. This tutorials
explores some of them: flat file, Excel files, NetCDF and HDF5,
serialization with pickle and friends, relational databases, bsddb and
ZODB. The objective of this course is to give the participants an
overview over available options as well as there advantages and
disadvantages for different purposes. Participants are strongly
recommended to bring laptops because all topics are introduced with
examples and exercises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--data-storage-in-python---an-overview-.html</guid><category>bsddb</category><category>databases</category><category>excel</category><category>flatfile</category><category>hdf5</category><category>netcdf</category><category>pickle</category><category>pycon</category><category>pycon2009</category><category>serialization</category><category>zodb</category></item><item><title>PyCon 2009: Data Storage in Python - An Overview of Options (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--data-storage-in-python---an-overview0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are many possibilities in Python to store data. This tutorials
explores some of them: flat file, Excel files, NetCDF and HDF5,
serialization with pickle and friends, relational databases, bsddb and
ZODB. The objective of this course is to give the participants an
overview over available options as well as there advantages and
disadvantages for different purposes. Participants are strongly
recommended to bring laptops because all topics are introduced with
examples and exercises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--data-storage-in-python---an-overview0.html</guid><category>bsddb</category><category>databases</category><category>excel</category><category>flatfile</category><category>hdf5</category><category>netcdf</category><category>pickle</category><category>pycon</category><category>pycon2009</category><category>serialization</category><category>zodb</category></item><item><title>PyCon 2009: Data Storage in Python - An Overview of Options (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--data-storage-in-python---an-overview1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are many possibilities in Python to store data. This tutorials
explores some of them: flat file, Excel files, NetCDF and HDF5,
serialization with pickle and friends, relational databases, bsddb and
ZODB. The objective of this course is to give the participants an
overview over available options as well as there advantages and
disadvantages for different purposes. Participants are strongly
recommended to bring laptops because all topics are introduced with
examples and exercises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--data-storage-in-python---an-overview1.html</guid><category>bsddb</category><category>databases</category><category>excel</category><category>flatfile</category><category>hdf5</category><category>netcdf</category><category>pickle</category><category>pycon</category><category>pycon2009</category><category>serialization</category><category>zodb</category></item><item><title>PyCon 2009: Designing a web framework: Django's design decisions (#75)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--designing-a-web-framework--django--39.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Designing a web framework: Django's design decisions&lt;/p&gt;
&lt;p&gt;Presented by Jacob Kaplan-Moss&lt;/p&gt;
&lt;p&gt;Django is a high-level web development framework designed for rapid
development of database-backed web sites. Since its release three years
ago Django's grown by leaps and bounds; it's now part of a highly
successful new generation of web development tools.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Kaplan-Moss</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--designing-a-web-framework--django--39.html</guid><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: Django in the Real World (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--django-in-the-real-world--part-1-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's plenty of material (documentation, blogs, books) out there
that'll help you write a site using Django... but then what? You've
still got to test, deploy, monitor, and tune the site; failure at
deployment time means all your beautiful code is for naught. This
tutorial examines how best to cope when the Real World intrudes on your
carefully designed website.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: blurry vga]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--django-in-the-real-world--part-1-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>tutorial</category></item><item><title>PyCon 2009: Django in the Real World (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--django-in-the-real-world--part-2-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's plenty of material (documentation, blogs, books) out there
that'll help you write a site using Django... but then what? You've
still got to test, deploy, monitor, and tune the site; failure at
deployment time means all your beautiful code is for naught. This
tutorial examines how best to cope when the Real World intrudes on your
carefully designed website.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: blurry vga]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--django-in-the-real-world--part-2-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>tutorial</category></item><item><title>PyCon 2009: Django in the Real World (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--django-in-the-real-world--part-3-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's plenty of material (documentation, blogs, books) out there
that'll help you write a site using Django... but then what? You've
still got to test, deploy, monitor, and tune the site; failure at
deployment time means all your beautiful code is for naught. This
tutorial examines how best to cope when the Real World intrudes on your
carefully designed website.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: blurry vga]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--django-in-the-real-world--part-3-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>tutorial</category></item><item><title>PyCon 2009: Django on Jython (#101)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--django-on-jython---101.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: house audio] Django is the most popular Python web
framework, and the final release of Jython 2.5 should be available a
couple of months before PyCon. This means we can now use a modern Python
web framework on top of Java infrastructure by running Django on Jython.
In this talk, we will show examples of how to use this combination,
engage a discussion about what can take the Python (and Django)
community from the Java world, especially the necessary infrastructure
bits, and how a Django/Jython stack compares with other JVM web stacks
like JRuby on Rails.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--django-on-jython---101.html</guid><category>jython</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: Easy Concurrency with Kamaelia (Part 2 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--easy-concurrency-with-kamaelia--part-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: ] Writing concurrent applications in Python is now
becoming not only easier, but quite elegant and simple, thanks to
Kamaelia. Kamaelia is an interesting component based framework
originating from BBC research. It accomplishes concurrent processing of
data from and to many protocols. Components easily connect and pass data
from and to each other. We are going to explore Kamaelia's strengths and
possibilities, by running simple examples, then trying nested protocol
support, and maybe some other fun examples if time permits.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--easy-concurrency-with-kamaelia--part-.html</guid><category>concurrency</category><category>kamaelia</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: Easy Concurrency with Kamaelia (Part 1 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--easy-concurrency-with-kamaelia--part0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: ] Writing concurrent applications in Python is now
becoming not only easier, but quite elegant and simple, thanks to
Kamaelia. Kamaelia is an interesting component based framework
originating from BBC research. It accomplishes concurrent processing of
data from and to many protocols. Components easily connect and pass data
from and to each other. We are going to explore Kamaelia's strengths and
possibilities, by running simple examples, then trying nested protocol
support, and maybe some other fun examples if time permits.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--easy-concurrency-with-kamaelia--part0.html</guid><category>concurrency</category><category>kamaelia</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: Eggs and Buildout Deployment in Python (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--eggs-and-buildout-deployment-in-pyth0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Puzzled about Python eggs and packages? Wondering how to repeatably pull
together collections of packages into standalone development, testing
and deployment environments, all while managing inter-dependencies? In
this participatory tutorial, we'll start with distutils, walk through
using eggs in the cheeseshop and creating your own eggs, touch a bit on
using virtualenv to set up a development environment, and then dig into
using zc.buildout to rigorously control assembly specifications, with
build recipes, versioning and dependency management. We'll close by
showing how to create your own recipes. Attendees are strongly
encouraged to bring a laptop or partner with someone who does.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--eggs-and-buildout-deployment-in-pyth0.html</guid><category>cheeseshop</category><category>eggs</category><category>pycon</category><category>pycon2009</category><category>virtualenv</category><category>zc.buildout</category></item><item><title>PyCon 2009: Eggs and Buildout Deployment in Python (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--eggs-and-buildout-deployment-in-pyth1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Puzzled about Python eggs and packages? Wondering how to repeatably pull
together collections of packages into standalone development, testing
and deployment environments, all while managing inter-dependencies? In
this participatory tutorial, we'll start with distutils, walk through
using eggs in the cheeseshop and creating your own eggs, touch a bit on
using virtualenv to set up a development environment, and then dig into
using zc.buildout to rigorously control assembly specifications, with
build recipes, versioning and dependency management. We'll close by
showing how to create your own recipes. Attendees are strongly
encouraged to bring a laptop or partner with someone who does.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--eggs-and-buildout-deployment-in-pyth1.html</guid><category>cheeseshop</category><category>eggs</category><category>pycon</category><category>pycon2009</category><category>virtualenv</category><category>zc.buildout</category></item><item><title>PyCon 2009: Eggs and Buildout Deployment in Python (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--eggs-and-buildout-deployment-in-pytho.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Puzzled about Python eggs and packages? Wondering how to repeatably pull
together collections of packages into standalone development, testing
and deployment environments, all while managing inter-dependencies? In
this participatory tutorial, we'll start with distutils, walk through
using eggs in the cheeseshop and creating your own eggs, touch a bit on
using virtualenv to set up a development environment, and then dig into
using zc.buildout to rigorously control assembly specifications, with
build recipes, versioning and dependency management. We'll close by
showing how to create your own recipes. Attendees are strongly
encouraged to bring a laptop or partner with someone who does.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--eggs-and-buildout-deployment-in-pytho.html</guid><category>cheeseshop</category><category>eggs</category><category>pycon</category><category>pycon2009</category><category>virtualenv</category><category>zc.buildout</category></item><item><title>PyCon 2009: Faster Python Programs through Optimization (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--faster-python-programs-through-optim0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: vga blurry] Although Python programs may be slow for
certain types of tasks, there are many different ways to improve
performance. This tutorial will introduce optimization strategies and
demonstrate techniques to implement them. Another of the objectives of
this course is to give participants the ability to decide what might be
the optimal solution for a certain performance problem. Participants are
strongly recommended to bring laptops because all techniques are
introduced with examples and exercises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--faster-python-programs-through-optim0.html</guid><category>optimization</category><category>pycon</category><category>pycon2009</category><category>python-advanced</category></item><item><title>PyCon 2009: Faster Python Programs through Optimization (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--faster-python-programs-through-optim1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: vga blurry] Although Python programs may be slow for
certain types of tasks, there are many different ways to improve
performance. This tutorial will introduce optimization strategies and
demonstrate techniques to implement them. Another of the objectives of
this course is to give participants the ability to decide what might be
the optimal solution for a certain performance problem. Participants are
strongly recommended to bring laptops because all techniques are
introduced with examples and exercises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--faster-python-programs-through-optim1.html</guid><category>optimization</category><category>pycon</category><category>pycon2009</category><category>python-advanced</category></item><item><title>PyCon 2009: Faster Python Programs through Optimization (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--faster-python-programs-through-optimi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: vga blurry] Although Python programs may be slow for
certain types of tasks, there are many different ways to improve
performance. This tutorial will introduce optimization strategies and
demonstrate techniques to implement them. Another of the objectives of
this course is to give participants the ability to decide what might be
the optimal solution for a certain performance problem. Participants are
strongly recommended to bring laptops because all techniques are
introduced with examples and exercises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--faster-python-programs-through-optimi.html</guid><category>optimization</category><category>pycon</category><category>pycon2009</category><category>python-advanced</category></item><item><title>PyCon 2009: Functional Testing of Desktop Applications (#1)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--functional-testing-of-desktop-applica.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many advocates of unit testing believe that testing desktop (GUI)
applications is so difficult as to not be worth it. Not only is it
possible, but 'functional testing' (testing an application from the
point of view of the user) is an important part of an agile development
process.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--functional-testing-of-desktop-applica.html</guid><category>functionaltesting</category><category>pycon</category><category>pycon2009</category><category>testing</category></item><item><title>PyCon 2009: Giving back and helping expand the Python community. A roadmap for South America and Africa (#87)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--giving-back-and-helping-expand-the-py.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For many of us, Python has dramatically changed our professional life:
Open Source, technologies that get the job done, and let you learn and
improve every day, a friendly and mature community, etc. Python is
important! For learning, for science, for business, and for progress in
general.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--giving-back-and-helping-expand-the-py.html</guid><category>pycon</category><category>pycon2009</category><category>pythoncommunity</category></item><item><title>PyCon 2009: Hands on with Trac plugins (Part 1 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--hands-on-with-trac-plugins--part-1-of.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Trac, an open-source project management tool, has been gaining in
popularity, however few people tap its true potential. To fully mold
Trac to your team and project, you must venture into the realm of custom
plugins. These short (or not so short) bits of code allow you to
customize almost every aspect of Trac to your liking. Come learn how to
get 110% out of your Trac system, or just see what Trac can do for you.
Attendees should bring a laptop for the hands-on portion or the
tutorial.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--hands-on-with-trac-plugins--part-1-of.html</guid><category>plugins</category><category>pycon</category><category>pycon2009</category><category>trac</category></item><item><title>PyCon 2009: Hands on with Trac plugins (Part 2 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--hands-on-with-trac-plugins--part-2-of.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Trac, an open-source project management tool, has been gaining in
popularity, however few people tap its true potential. To fully mold
Trac to your team and project, you must venture into the realm of custom
plugins. These short (or not so short) bits of code allow you to
customize almost every aspect of Trac to your liking. Come learn how to
get 110% out of your Trac system, or just see what Trac can do for you.
Attendees should bring a laptop for the hands-on portion or the
tutorial.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--hands-on-with-trac-plugins--part-2-of.html</guid><category>plugins</category><category>pycon</category><category>pycon2009</category><category>trac</category></item><item><title>PyCon 2009: How AlterWay releases web applications using zc.buildout (#22)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--how-alterway-releases-web-application.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will describe how zc.buildout is used in our company every day
to develop, package and distribute Pylons, Django or Plone applications.
It will focus on the best practices we have built around the tool and
the tools we have built on the top of it to speed up our work.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--how-alterway-releases-web-application.html</guid><category>pycon</category><category>pycon2009</category><category>zc.buildout</category></item><item><title>PyCon 2009: How I Distribute Python applications on Windows - py2exe and InnoSetup (#108)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--how-i-distribute-python-applications-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are many deployment options for Python code. I'll share what has
worked well for me on Windows, packaging command line tools and services
using py2exe and InnoSetup. I'll demonstrate a simple build script which
creates windows binaries and an InnoSetup installer in one step. In
addition, I'll go over common errors which come up when using py2exe and
hints on troubleshooting them. This is a short talk, so there will be a
follow-up Open Space session to share experience and help each other
solve distribution problems.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--how-i-distribute-python-applications-.html</guid><category>innosetup</category><category>py2exe</category><category>pycon</category><category>pycon2009</category><category>windows</category></item><item><title>PyCon 2009: How to Build Applications Linux Distributions will Package (#78)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--how-to-build-applications-linux-distr.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: no audio first 1.5m] If you've ever created a nifty
application that makes people's lives easier you know the truly hard
part is convincing others to use it. One way to increase the number of
people installing your software is to convince Linux distributions to
package your software so that their end users can install by using the
system tools they're used to. One way of convincing them is by making
your application easy to package.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--how-to-build-applications-linux-distr.html</guid><category>linux</category><category>packaging</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: Intermediate Turbogears (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--intermediate-turbogears--part-1-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you conquered the basics of Pylons/TurboGears2 (or just taken the
morning class)? Do you want to understand more about how everything
works, and how you can go beyond the basics to understand how to
customize things? This class will take you from a basic understanding of
how to use the framework, to a clear picture of how the framework pieces
are put together. I will also cover how to create REST+JSON based web
services, we'll focus particularly on how all this works with rich
javascript based user interfaces, but the techniques should easily apply
to Flex, or other &amp;quot;Rich Internet Application&amp;quot; tools.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--intermediate-turbogears--part-1-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>turbogears</category></item><item><title>PyCon 2009: Intermediate Turbogears (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--intermediate-turbogears--part-2-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you conquered the basics of Pylons/TurboGears2 (or just taken the
morning class)? Do you want to understand more about how everything
works, and how you can go beyond the basics to understand how to
customize things? This class will take you from a basic understanding of
how to use the framework, to a clear picture of how the framework pieces
are put together. I will also cover how to create REST+JSON based web
services, we'll focus particularly on how all this works with rich
javascript based user interfaces, but the techniques should easily apply
to Flex, or other &amp;quot;Rich Internet Application&amp;quot; tools.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--intermediate-turbogears--part-2-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>turbogears</category></item><item><title>PyCon 2009: Intermediate Turbogears (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--intermediate-turbogears--part-3-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you conquered the basics of Pylons/TurboGears2 (or just taken the
morning class)? Do you want to understand more about how everything
works, and how you can go beyond the basics to understand how to
customize things? This class will take you from a basic understanding of
how to use the framework, to a clear picture of how the framework pieces
are put together. I will also cover how to create REST+JSON based web
services, we'll focus particularly on how all this works with rich
javascript based user interfaces, but the techniques should easily apply
to Flex, or other &amp;quot;Rich Internet Application&amp;quot; tools.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--intermediate-turbogears--part-3-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>turbogears</category></item><item><title>PyCon 2009: Internet Programming with Python (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--internet-programming-with-python--pa0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Internet Programming with Python (part 1 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Wesley J. Chun&lt;/p&gt;
&lt;p&gt;This tutorial introduces current Python programmers to 3-4 distinct
areas of Internet programming, each in self-contained (approximately)
1-hour lectures (unless otherwise noted) with a demonstration of code on
each lecture topic.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wesley J. Chun</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--internet-programming-with-python--pa0.html</guid><category>pycon</category><category>pycon2009</category><category>tutorial</category><category>webprogramming</category></item><item><title>PyCon 2009: Internet Programming with Python (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--internet-programming-with-python--pa1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Internet Programming with Python (part 3 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Wesley J. Chun&lt;/p&gt;
&lt;p&gt;This tutorial introduces current Python programmers to 3-4 distinct
areas of Internet programming, each in self-contained (approximately)
1-hour lectures (unless otherwise noted) with a demonstration of code on
each lecture topic.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wesley J. Chun</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--internet-programming-with-python--pa1.html</guid><category>pycon</category><category>pycon2009</category><category>tutorial</category><category>webprogramming</category></item><item><title>PyCon 2009: Internet Programming with Python (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--internet-programming-with-python--par.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Internet Programming with Python (part 2 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Wesley J. Chun&lt;/p&gt;
&lt;p&gt;This tutorial introduces current Python programmers to 3-4 distinct
areas of Internet programming, each in self-contained (approximately)
1-hour lectures (unless otherwise noted) with a demonstration of code on
each lecture topic.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wesley J. Chun</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--internet-programming-with-python--par.html</guid><category>pycon</category><category>pycon2009</category><category>tutorial</category><category>webprogramming</category></item><item><title>PyCon 2009: Introduction to Functional Web Testing With Twill and Selenium (Part 2 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-functional-web-testi0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: ] This tutorial aims to educate attendees on the the
basics of functional testing of web applications. Is your app rendered
as plain HTML? Great! We'll show you how to build a test suite for it.
Is your app all AJAXy? No problem! We can do that too! We're going to
write a web application, first in straight html and then with AJAX, and
show you how to try to break it. At the end of this hands-on session,
you'll be able to write tests for almost any web site, using all
open-source tools and our favorite language - Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--introduction-to-functional-web-testi0.html</guid><category>pycon</category><category>pycon2009</category><category>selenium</category><category>twill</category></item><item><title>PyCon 2009: Introduction to Functional Web Testing With Twill and Selenium (Part 1 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-functional-web-testin.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: ] This tutorial aims to educate attendees on the the
basics of functional testing of web applications. Is your app rendered
as plain HTML? Great! We'll show you how to build a test suite for it.
Is your app all AJAXy? No problem! We can do that too! We're going to
write a web application, first in straight html and then with AJAX, and
show you how to try to break it. At the end of this hands-on session,
you'll be able to write tests for almost any web site, using all
open-source tools and our favorite language - Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--introduction-to-functional-web-testin.html</guid><category>pycon</category><category>pycon2009</category><category>selenium</category><category>twill</category></item><item><title>PyCon 2009: Introduction to SQLAlchemy (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-1-of.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit
for Python. SQLAlchemy exposes the full power of SQL while remaining
easy to use for the basics, and is flexible enough to work with existing
database schemas as well as fresh designs. SQLAlchemy is used in
production by leading Python web frameworks Pylons and Turbogears as
well as many other web and non-web developers. This tutorial teaches
SQLAlchemy's object-relational mapping to automate painlessly loading
and persisting objects from and to your database, even when complex
relationships exist.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-1-of.html</guid><category>pycon</category><category>pycon2009</category><category>sqlalchemy</category><category>tutorial</category></item><item><title>PyCon 2009: Introduction to SQLAlchemy (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-2-of.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit
for Python. SQLAlchemy exposes the full power of SQL while remaining
easy to use for the basics, and is flexible enough to work with existing
database schemas as well as fresh designs. SQLAlchemy is used in
production by leading Python web frameworks Pylons and Turbogears as
well as many other web and non-web developers. This tutorial teaches
SQLAlchemy's object-relational mapping to automate painlessly loading
and persisting objects from and to your database, even when complex
relationships exist.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-2-of.html</guid><category>pycon</category><category>pycon2009</category><category>sqlalchemy</category><category>tutorial</category></item><item><title>PyCon 2009: Introduction to SQLAlchemy (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-3-of.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit
for Python. SQLAlchemy exposes the full power of SQL while remaining
easy to use for the basics, and is flexible enough to work with existing
database schemas as well as fresh designs. SQLAlchemy is used in
production by leading Python web frameworks Pylons and Turbogears as
well as many other web and non-web developers. This tutorial teaches
SQLAlchemy's object-relational mapping to automate painlessly loading
and persisting objects from and to your database, even when complex
relationships exist.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-3-of.html</guid><category>pycon</category><category>pycon2009</category><category>sqlalchemy</category><category>tutorial</category></item><item><title>PyCon 2009: Introduction to TurboGears2 and WSGI (Part 2 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-turbogears2-and-wsgi-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: annoying noise starting at 1:17 (2nd half)] Are you
interested in building web applications with modern libraries and tools?
Do you want to build on top of the work that many others have done? Have
you done some basic web development, but want to be more productive. If
so this is the class for you. TurboGears 2 provides a well defined set
of the best libraries for web development python has to offer. But more
importantly it brings them together in a clean, well documented way that
allows for developing reusable TurboGears 2 components. The result is a
powerful, flexible, set of tools that helps make it easy to build
dynamic web applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--introduction-to-turbogears2-and-wsgi-.html</guid><category>pycon</category><category>pycon2009</category><category>turbogears</category><category>tutorial</category><category>wsgi</category></item><item><title>PyCon 2009: Introduction to TurboGears2 and WSGI (Part 1 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-turbogears2-and-wsgi0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: annoying noise starting at 1:17 (2nd half)] Are you
interested in building web applications with modern libraries and tools?
Do you want to build on top of the work that many others have done? Have
you done some basic web development, but want to be more productive. If
so this is the class for you. TurboGears 2 provides a well defined set
of the best libraries for web development python has to offer. But more
importantly it brings them together in a clean, well documented way that
allows for developing reusable TurboGears 2 components. The result is a
powerful, flexible, set of tools that helps make it easy to build
dynamic web applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--introduction-to-turbogears2-and-wsgi0.html</guid><category>pycon</category><category>pycon2009</category><category>turbogears</category><category>tutorial</category><category>wsgi</category></item><item><title>PyCon 2009: Keynote: Reddit: Steve Huffman and Alexis Ohanian</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--keynote--reddit--steve-huffman-and-al.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Keynote: Reddit: Steve Huffman and Alexis Ohanian&lt;/p&gt;
&lt;p&gt;The co-founders of reddit.com spoke about Reddit's origin, the switch to
Python, and took many questions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--keynote--reddit--steve-huffman-and-al.html</guid><category>keynote</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: Paver: easy build and deployment automation for Python projects (#13)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--paver--easy-build-and-deployment-auto.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: Audio clipping, ambient mic up (echoing audio)] Paver
makes managing common aspects of Python projects easier, by providing
just the right kind of scaffolding on which to automate building and
packaging of your software. In this talk, you'll see how easy it is to
get started with Paver, how you can use Paver without alienating other
users of your code, and how you can use Paver to trivially extend
Python's distutils commands.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--paver--easy-build-and-deployment-auto.html</guid><category>paver</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: Plenary: Afternoon Lightning Talks</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--plenary--afternoon-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plenary: Afternoon Lightning Talks&lt;/p&gt;
&lt;p&gt;(00:05) Easy command line parsing with argparse - Steven Bethard&lt;/p&gt;
&lt;p&gt;(04:14) Moments - Charles Brandt&lt;/p&gt;
&lt;p&gt;(11:45) Crowdsourcing lightning -&lt;/p&gt;
&lt;p&gt;(13:40) Python 3.1 changes - Benjamin Peterson&lt;/p&gt;
&lt;p&gt;(19:35) The Poor Man's Continuous Integration - Zain Memon&lt;/p&gt;
&lt;p&gt;(25:55) cluemapper - Nate Aune&lt;/p&gt;
&lt;p&gt;(29:55) ReleaseBot - Brian Warner&lt;/p&gt;
&lt;p&gt;(34:50) worldPloneday - Jordan Baker and Roberto&lt;/p&gt;
&lt;p&gt;(40:15) blist - Daniel Stutzbach&lt;/p&gt;
&lt;p&gt;(45:10) Python Open Source Overview on Launchpad - Gary Poster&lt;/p&gt;
&lt;p&gt;(49:50) Pyjamas - Bernd Dorn&lt;/p&gt;
&lt;p&gt;(53:50) &amp;nbsp;is Evil and IP Addresses in Python - Gregory Smith&lt;/p&gt;
&lt;p&gt;(56:00) ctypes - Jason Coombs&lt;/p&gt;
&lt;p&gt;(61:10) Come to EuroPython - Jonathan Hartley&lt;/p&gt;
&lt;p&gt;(65:45) Zope - Lennart Regebro&lt;/p&gt;
&lt;p&gt;(71:05) Site Checker - Eric Holscher&lt;/p&gt;
&lt;p&gt;(76:20) PSF Community Awards&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steven Bethard</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--plenary--afternoon-lightning-talks.html</guid><category>lightning talks</category><category>argparse</category><category>blist</category><category>cluemapper</category><category>ctypes</category><category>launchpad</category><category>moments</category><category>plone</category><category>pycon</category><category>pycon2009</category><category>pyjamas</category><category>python31</category><category>sitechecker</category><category>testing</category><category>twill</category><category>zope</category></item><item><title>PyCon 2009: Plenary: Intro to Sprinting</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--plenary--intro-to-sprinting.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;by Brett Cannon What sprinting is: a group of people doing something
together. Who goes: everyone! Why: fun, great learning, you can do it
your way How: get a table, some chairs, some people...&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--plenary--intro-to-sprinting.html</guid><category>pycon</category><category>pycon2009</category><category>sprinting</category></item><item><title>PyCon 2009: Plenary: Morning Lightning Talks</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--plenary--morning-lightning-talks.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Plenary: Morning Lightning Talks covering GeoDjango, Zope, Launchpad,
JSOT, AppEngine, StackOverflow, Miro, zc.buildout and RPM, ham radio,
Plyne, GozerBot, picking tools, and stop watch.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;(00:20) GeoDjango - Justin Bronn&lt;/li&gt;
&lt;li&gt;(05:50) What's up with Zope - Martijn Faassen&lt;/li&gt;
&lt;li&gt;(10:55) Scripting Launchpad - Paul Hummer&lt;/li&gt;
&lt;li&gt;(13:50) JSQT - ?&lt;/li&gt;
&lt;li&gt;(16:10) Python, AppEngine, and Informatics - Charles Severance&lt;/li&gt;
&lt;li&gt;(20:55) an online game called stackoverflow - John Mulder&lt;/li&gt;
&lt;li&gt;(25:25) Miro - Chris Webber&lt;/li&gt;
&lt;li&gt;(28:40) Deploying applications with zc.buildout and RPM - Jim Fulton&lt;/li&gt;
&lt;li&gt;(34:10) Ham radio and Python - Adam Fast&lt;/li&gt;
&lt;li&gt;(38:30) Plone + Pylons = Plyne - Roberto Allende&lt;/li&gt;
&lt;li&gt;(41:35) GozerBot - John Hampton&lt;/li&gt;
&lt;li&gt;(44:25) Software Engineering and the Pickling Tools - Rich Saunders&lt;/li&gt;
&lt;li&gt;(48:45) Talks about the stop watch&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Fast</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--plenary--morning-lightning-talks.html</guid><category>lightning talks</category><category>appengine</category><category>geodjango</category><category>informatics</category><category>jsqt</category><category>launchpad</category><category>miro</category><category>pickling</category><category>plone</category><category>plyne</category><category>pycon</category><category>pycon2009</category><category>pylons</category><category>stack overflow</category><category>zc.buildout</category><category>zope</category></item><item><title>PyCon 2009: Plenary: Morning Lightning Talks (Saturday)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--plenary--morning-lightning-talks--sat.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plenary: Morning Lightning Talks&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: missing a bit at the beginning]&lt;/p&gt;
&lt;p&gt;(00:00) Building Appliances with Python - Moshe Zadka&lt;/p&gt;
&lt;p&gt;(05:40) Proposed Python License V3 and ... VAN LINDBERG'D - Jesse Noller&lt;/p&gt;
&lt;p&gt;(08: 20) The Status is Not Quo - Mike Pirnat&lt;/p&gt;
&lt;p&gt;(12:55) Cork, building tiny apps - Alex Morega&lt;/p&gt;
&lt;p&gt;(19:10) NASA uses Python? - Katie Cunningham&lt;/p&gt;
&lt;p&gt;(23:35) SQLPython, command line interface to Oracle - Catherine Devlin
(half done)&lt;/p&gt;
&lt;p&gt;(25:20) Gitosis - Tommi Virtanen&lt;/p&gt;
&lt;p&gt;(29:05) SQLPython, command line interface to Oracle (reprised) -
Catherine Devlin&lt;/p&gt;
&lt;p&gt;(35:00) Player Piano - Peter Fein&lt;/p&gt;
&lt;p&gt;(40:10) Why DVCS - James Bennett&lt;/p&gt;
&lt;p&gt;(45:15) PyMite - Dean Hall&lt;/p&gt;
&lt;p&gt;(49:50) web2py - ?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--plenary--morning-lightning-talks--sat.html</guid><category>lightning talks</category><category>cork</category><category>gitosis</category><category>lindberg</category><category>nasa</category><category>playerpiano</category><category>pycon</category><category>pycon2009</category><category>pymite</category><category>sqlpython</category><category>web2py</category></item><item><title>PyCon 2009: Plenary: Sprint Intro</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--plenary--sprint-intro.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plenary: Sprint Prep&lt;/p&gt;
&lt;p&gt;Talks about what sprints were happening, what was getting worked on, and
who to talk to.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--plenary--sprint-intro.html</guid><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: py.test II - cross-platform and distributed testing (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--py-test-ii---cross-platform-and-dist0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;py.test II - cross-platform and distributed testing (part 3 of 3)&lt;/p&gt;
&lt;p&gt;Want to know more about advanced automated testing with Python? Use a
tool that allows you to ad-hoc distribute tests to multiple CPUs for
speed and to multiple platforms for compatibility checks? With tons of
debugging help in failure situations? This tutorial provides in-depth
information on advanced usages of the popular py.test tool. We highlight
its current feature set including using and writing extensions for
generating HTML pages, testing Javascript or ReST documents. We showcase
and discuss ways of distributing tests across CPUs and platforms and
will leave time to discuss and tackle specific scenarios brought up
during the session. The tutorial format will be an interactive lecture
with plenty of time for questions.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--py-test-ii---cross-platform-and-dist0.html</guid><category>pycon</category><category>pycon2009</category><category>pytest</category><category>py.test</category><category>testing</category><category>tutorial</category></item><item><title>PyCon 2009: py.test II - cross-platform and distributed testing (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--py-test-ii---cross-platform-and-dist1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;py.test II - cross-platform and distributed testing (part 1 of 3)&lt;/p&gt;
&lt;p&gt;Want to know more about advanced automated testing with Python? Use a
tool that allows you to ad-hoc distribute tests to multiple CPUs for
speed and to multiple platforms for compatibility checks? With tons of
debugging help in failure situations? This tutorial provides in-depth
information on advanced usages of the popular py.test tool. We highlight
its current feature set including using and writing extensions for
generating HTML pages, testing Javascript or ReST documents. We showcase
and discuss ways of distributing tests across CPUs and platforms and
will leave time to discuss and tackle specific scenarios brought up
during the session. The tutorial format will be an interactive lecture
with plenty of time for questions.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--py-test-ii---cross-platform-and-dist1.html</guid><category>pycon</category><category>pycon2009</category><category>pytest</category><category>py.test</category><category>testing</category><category>tutorial</category></item><item><title>PyCon 2009: py.test II - cross-platform and distributed testing (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--py-test-ii---cross-platform-and-distr.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;py.test II - cross-platform and distributed testing (part 2 of 3)&lt;/p&gt;
&lt;p&gt;Want to know more about advanced automated testing with Python? Use a
tool that allows you to ad-hoc distribute tests to multiple CPUs for
speed and to multiple platforms for compatibility checks? With tons of
debugging help in failure situations? This tutorial provides in-depth
information on advanced usages of the popular py.test tool. We highlight
its current feature set including using and writing extensions for
generating HTML pages, testing Javascript or ReST documents. We showcase
and discuss ways of distributing tests across CPUs and platforms and
will leave time to discuss and tackle specific scenarios brought up
during the session. The tutorial format will be an interactive lecture
with plenty of time for questions.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--py-test-ii---cross-platform-and-distr.html</guid><category>pycon</category><category>pycon2009</category><category>pytest</category><category>py.test</category><category>testing</category><category>tutorial</category></item><item><title>PyCon 2009: Pylons on Jython (#96)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--pylons-on-jython---96.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pylons on Jython&lt;/p&gt;
&lt;p&gt;Presented by Philip Jenvey&lt;/p&gt;
&lt;p&gt;Jython is back, and better than ever.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: house audio]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philip Jenvey</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--pylons-on-jython---96.html</guid><category>chicago</category><category>chicago,</category><category>conference</category><category>conference,</category><category>pycon</category><category>pycon,</category><category>python</category><category>python,</category></item><item><title>PyCon 2009: Pylons on Jython (#96)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--pylons-on-jython---96.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pylons on Jython&lt;/p&gt;
&lt;p&gt;Presented by Philip Jenvey&lt;/p&gt;
&lt;p&gt;Jython is back, and better than ever.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: house audio]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philip Jenvey</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--pylons-on-jython---96.html</guid><category>chicago</category><category>chicago,</category><category>conference</category><category>conference,</category><category>pycon</category><category>pycon,</category><category>python</category><category>python,</category></item><item><title>PyCon 2009: PyMite lightning talk</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--pymite-lighting-talk.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyMite ligntning talk at PyCon09&lt;/p&gt;
&lt;p&gt;Presenter: Dean Hall&lt;/p&gt;
&lt;p&gt;Project Site:
&lt;a class="reference external" href="http://www.pythononachip.org/"&gt;http://www.pythononachip.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--pymite-lighting-talk.html</guid><category>lightning talks</category><category>pycon</category><category>pycon2009</category><category>pymite</category><category>pythononachip</category></item><item><title>PyCon 2009: Python 102 (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--python-102--part-1-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 102 (Part 1 of 3)&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents intermediate and some advanced features
of Python to beginning and intermediate programmers. It pairs well with
Python 101 following a similar outline but at a deeper level. Rather
than starting with &amp;quot;Hello, world!&amp;quot;, we use the interactive Python
interpreter to get hands- on familiarity with much of core Python before
covering blocks and scripts. The tutorial is divided into short
sections, each with presentation and exercises, to quickly cover lots of
ground. Advanced topics are introduced throughout and covered in &amp;quot;extra
credit&amp;quot; exercises such that more advanced participants can learn at
their own pace.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--python-102--part-1-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>PyCon 2009: Python 102 (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--python-102--part-2-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 102 Part 2 of 3)&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents intermediate and some advanced features
of Python to beginning and intermediate programmers. It pairs well with
Python 101 following a similar outline but at a deeper level. Rather
than starting with &amp;quot;Hello, world!&amp;quot;, we use the interactive Python
interpreter to get hands- on familiarity with much of core Python before
covering blocks and scripts. The tutorial is divided into short
sections, each with presentation and exercises, to quickly cover lots of
ground. Advanced topics are introduced throughout and covered in &amp;quot;extra
credit&amp;quot; exercises such that more advanced participants can learn at
their own pace.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--python-102--part-2-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>PyCon 2009: Python 102 (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--python-102--part-3-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 102 (Part 3 of 3)&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents intermediate and some advanced features
of Python to beginning and intermediate programmers. It pairs well with
Python 101 following a similar outline but at a deeper level. Rather
than starting with &amp;quot;Hello, world!&amp;quot;, we use the interactive Python
interpreter to get hands- on familiarity with much of core Python before
covering blocks and scripts. The tutorial is divided into short
sections, each with presentation and exercises, to quickly cover lots of
ground. Advanced topics are introduced throughout and covered in &amp;quot;extra
credit&amp;quot; exercises such that more advanced participants can learn at
their own pace.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--python-102--part-3-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>PyCon 2009: Python 401: Some Advanced Topics (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--python-401--some-advanced-topics--pa0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 401: Some Advanced Topics&lt;/p&gt;
&lt;p&gt;Steve Holden challenges you to find new and interesting applications for
some of the less heavily utilized features of Python including generator
expressions, string interpolation, iteration and metaclasses.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--python-401--some-advanced-topics--pa0.html</guid><category>pycon</category><category>pycon2009</category><category>python-advanced</category></item><item><title>PyCon 2009: Python 401: Some Advanced Topics (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--python-401--some-advanced-topics--pa1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 401: Some Advanced Topics (Part 2 of 3)&lt;/p&gt;
&lt;p&gt;Steve Holden challenges you to find new and interesting applications for
some of the less heavily utilized features of Python including generator
expressions, string interpolation, iteration and metaclasses.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--python-401--some-advanced-topics--pa1.html</guid><category>pycon</category><category>pycon2009</category><category>python-advanced</category></item><item><title>PyCon 2009: Python 401: Some Advanced Topics (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--python-401--some-advanced-topics--par.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 401: Some Advanced Topics (Part 3 of 3)&lt;/p&gt;
&lt;p&gt;Steve Holden challenges you to find new and interesting applications for
some of the less heavily utilized features of Python including generator
expressions, string interpolation, iteration and metaclasses.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--python-401--some-advanced-topics--par.html</guid><category>pycon</category><category>pycon2009</category><category>python-advanced</category></item><item><title>PyCon 2009: Python for Teachers (and Teachers of Teachers) (Part 1 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--python-for-teachers--and-teachers-of-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a geek with Python kung fu, you have fun skills to share with others,
including those still in high school and seeking to master mathematical
concepts that will serve them for a life time. In taking this tutorial,
you're opening a communications channel between yourself, and other
eager learners hoping to partake more deeply of open source culture and
the opportunities it offers. We know from last year that many PyCon
delegates are broadly interested in education track. This proposal
attempts to support this demand by developing some publicly-accessible
Python-related material that demonstrates how object-oriented
programming be learned by using them to implement concepts from the
mathematical domain. Learning can take place at multiple levels: Python
and object-oriented concepts. Mathematical concepts, which will be
demonstrated in ways readily accessible to anyone who understands
Python. Presentation of programming topics in the educational
environment. From this latter point of view the pair teaching format can
be considered experimental. Its success or otherwise will be determined
largely by group dynamics, and our goal is to make the outcome in and of
itself provide useful empirical data helpful to others planning
workshops.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--python-for-teachers--and-teachers-of-.html</guid><category>pycon</category><category>pycon2009</category><category>teaching</category></item><item><title>PyCon 2009: Python for Teachers (and Teachers of Teachers) (Part 2 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--python-for-teachers--and-teachers-of0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a geek with Python kung fu, you have fun skills to share with others,
including those still in high school and seeking to master mathematical
concepts that will serve them for a life time. In taking this tutorial,
you're opening a communications channel between yourself, and other
eager learners hoping to partake more deeply of open source culture and
the opportunities it offers. We know from last year that many PyCon
delegates are broadly interested in education track. This proposal
attempts to support this demand by developing some publicly-accessible
Python-related material that demonstrates how object-oriented
programming be learned by using them to implement concepts from the
mathematical domain. Learning can take place at multiple levels: Python
and object-oriented concepts. Mathematical concepts, which will be
demonstrated in ways readily accessible to anyone who understands
Python. Presentation of programming topics in the educational
environment. From this latter point of view the pair teaching format can
be considered experimental. Its success or otherwise will be determined
largely by group dynamics, and our goal is to make the outcome in and of
itself provide useful empirical data helpful to others planning
workshops.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--python-for-teachers--and-teachers-of0.html</guid><category>pycon</category><category>pycon2009</category><category>teaching</category></item><item><title>PyCon 2009: Scrape the Web: Strategies for programming websites that don't expect it (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--scrape-the-web--strategies-for-progr0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: Speaker walked away from the mic most of the time.]
Do you find yourself faced with websites that have data you need to
extract? Would your life be simpler if you could programmatically input
data into web applications, even those tuned to resist interaction by
bots? We'll discuss the basics of web scraping, and then dive into the
details of different methods and where they are most applicable. You'll
leave with an understanding of when to apply different tools, and learn
about a &amp;quot;heavy hammer&amp;quot; for screen scraping that I picked up at a project
for the Electronic Frontier Foundation. Atendees should bring a laptop,
if possible, to try the examples we discuss and optionally take notes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--scrape-the-web--strategies-for-progr0.html</guid><category>pycon</category><category>pycon2009</category><category>scraping</category></item><item><title>PyCon 2009: Scrape the Web: Strategies for programming websites that don't expect it (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--scrape-the-web--strategies-for-progr1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: Speaker walked away from the mic most of the time.]
Do you find yourself faced with websites that have data you need to
extract? Would your life be simpler if you could programmatically input
data into web applications, even those tuned to resist interaction by
bots? We'll discuss the basics of web scraping, and then dive into the
details of different methods and where they are most applicable. You'll
leave with an understanding of when to apply different tools, and learn
about a &amp;quot;heavy hammer&amp;quot; for screen scraping that I picked up at a project
for the Electronic Frontier Foundation. Atendees should bring a laptop,
if possible, to try the examples we discuss and optionally take notes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--scrape-the-web--strategies-for-progr1.html</guid><category>pycon</category><category>pycon2009</category><category>scraping</category></item><item><title>PyCon 2009: Scrape the Web: Strategies for programming websites that don't expect it (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--scrape-the-web--strategies-for-progra.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: Speaker walked away from the mic most of the time.]
Do you find yourself faced with websites that have data you need to
extract? Would your life be simpler if you could programmatically input
data into web applications, even those tuned to resist interaction by
bots? We'll discuss the basics of web scraping, and then dive into the
details of different methods and where they are most applicable. You'll
leave with an understanding of when to apply different tools, and learn
about a &amp;quot;heavy hammer&amp;quot; for screen scraping that I picked up at a project
for the Electronic Frontier Foundation. Atendees should bring a laptop,
if possible, to try the examples we discuss and optionally take notes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--scrape-the-web--strategies-for-progra.html</guid><category>pycon</category><category>pycon2009</category><category>scraping</category></item><item><title>PyCon 2009: The (lack of) design patterns in Python (#60)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--the--lack-of--design-patterns-in-pyth.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The (lack of) design patterns in Python&lt;/p&gt;
&lt;p&gt;Presented at PyCon 2009 by Joe Gregorio&lt;/p&gt;
&lt;p&gt;There is a distinct lack of Design Patterns discussed in relation to
Python. Are the communities ignorant of Design Patterns or is there
something else going on here? This talk is based on my well-trafficked
article &amp;quot;Python isn't just Java without the compile&amp;quot; and expands on that
article by using Design Patterns as a crude metric of gaps in a
programming language.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--the--lack-of--design-patterns-in-pyth.html</guid><category>designpatterns</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: The Big F'ing Tutorial: Development Using the repoze.bfg Web Framework (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--the-big-f--39-ing-tutorial--developm0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Big F'ing Tutorial: Development Using repoze.bfg Web Framework (Part
2 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Chris McDonough&lt;/p&gt;
&lt;p&gt;Are you a Python web developer who thinks there might be some great
stuff hidden away in Zope but you consider it inaccessible to you
because you feel that Zope imposes too many foreign concepts for your
tastes? Are you a more- or-less happy Zope developer that has the
nagging feeling that much of Zope is unnecessary &amp;quot;baggage&amp;quot; on your
current project? Maybe you're a Plone developer who feels that Plone is
unsuitable for one of your current projects because it's too
complicated? This tutorial will present everything you need to know
about repoze.bfg, a small Python web framework in the spirit of Pylons.
The goals of repoze.bfg are simplicity, familiarity to Zope programmers
(but no Zope experience is required), execution speed, and complete,
comprehensive, and up-to-date documentation. In this tutorial, we'll
explain the core concepts in repoze.bfg, then we'll lead a guided
development session where we make a small application using the
framework. We'll also cover packaging and deployment of the application.
Questions are highly encouraged during the presentation.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris McDonough</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--the-big-f--39-ing-tutorial--developm0.html</guid><category>pycon</category><category>pycon2009</category><category>repoze</category><category>repoze.bfg</category><category>tutorial</category><category>zope</category></item><item><title>PyCon 2009: The Big F'ing Tutorial: Development Using the repoze.bfg Web Framework (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--the-big-f--39-ing-tutorial--developm1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Big F'ing Tutorial: Development Using repoze.bfg Web Framework (Part
3 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Chris McDonough&lt;/p&gt;
&lt;p&gt;Are you a Python web developer who thinks there might be some great
stuff hidden away in Zope but you consider it inaccessible to you
because you feel that Zope imposes too many foreign concepts for your
tastes? Are you a more- or-less happy Zope developer that has the
nagging feeling that much of Zope is unnecessary &amp;quot;baggage&amp;quot; on your
current project? Maybe you're a Plone developer who feels that Plone is
unsuitable for one of your current projects because it's too
complicated? This tutorial will present everything you need to know
about repoze.bfg, a small Python web framework in the spirit of Pylons.
The goals of repoze.bfg are simplicity, familiarity to Zope programmers
(but no Zope experience is required), execution speed, and complete,
comprehensive, and up-to-date documentation. In this tutorial, we'll
explain the core concepts in repoze.bfg, then we'll lead a guided
development session where we make a small application using the
framework. We'll also cover packaging and deployment of the application.
Questions are highly encouraged during the presentation.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris McDonough</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--the-big-f--39-ing-tutorial--developm1.html</guid><category>pycon</category><category>pycon2009</category><category>repoze</category><category>repoze.bfg</category><category>tutorial</category><category>zope</category></item><item><title>PyCon 2009: The Big F'ing Tutorial: Development Using the repoze.bfg Web Framework (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--the-big-f--39-ing-tutorial--developme.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Big F'ing Tutorial: Development Using repoze.bfg Web Framework (Part
1 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Chris McDonough&lt;/p&gt;
&lt;p&gt;Are you a Python web developer who thinks there might be some great
stuff hidden away in Zope but you consider it inaccessible to you
because you feel that Zope imposes too many foreign concepts for your
tastes? Are you a more- or-less happy Zope developer that has the
nagging feeling that much of Zope is unnecessary &amp;quot;baggage&amp;quot; on your
current project? Maybe you're a Plone developer who feels that Plone is
unsuitable for one of your current projects because it's too
complicated? This tutorial will present everything you need to know
about repoze.bfg, a small Python web framework in the spirit of Pylons.
The goals of repoze.bfg are simplicity, familiarity to Zope programmers
(but no Zope experience is required), execution speed, and complete,
comprehensive, and up-to-date documentation. In this tutorial, we'll
explain the core concepts in repoze.bfg, then we'll lead a guided
development session where we make a small application using the
framework. We'll also cover packaging and deployment of the application.
Questions are highly encouraged during the presentation.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris McDonough</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--the-big-f--39-ing-tutorial--developme.html</guid><category>pycon</category><category>pycon2009</category><category>repoze</category><category>repoze.bfg</category><category>tutorial</category><category>zope</category></item><item><title>PyCon 2009: The State of Django (#76)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--the-state-of-django---76.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django 1.0 was released in September 2008. This release marks a major
turning point in Django's development; a real maturation of the project.
Join the lead developers of Django as they discuss what's new in Django
1.0, cover the Django 1.1 release (currently scheduled for a few weeks
before PyCon), and discuss the project's future.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--the-state-of-django---76.html</guid><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: The State of the Python Community: Leading the Python tribe (#118)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--the-state-of-the-python-community--le.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Steve Holden, Chairman of the Python Software Foundation, reflects on
the meaning of the phrase &amp;quot;the Python community&amp;quot; and the changes that
have taken place in the PSF in the last year. He discusses further
possible changes that could turn the PSF into a more &amp;quot;community-facing&amp;quot;
organization, and solicits your input on what kind of projects and
activities it should be supporting.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--the-state-of-the-python-community--le.html</guid><category>psf</category><category>pycon</category><category>pycon2009</category></item><item><title>PyCon 2009: ToscaWidgets: Test Driven Modular Ajax (Part 2 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--toscawidgets--test-driven-modular-aj0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: room's AC was loud] If you have ever struggled with
having to re-create the same content in multiple places in your web
application it might be time to look at ToscaWidgets. ToscaWidgets gives
the developer the ability to create reusable web content. This 3 hour
lesson will cover installation, integration, and usage of ToscaWidgets.
After we have a handle on how to create validated forms with
ToscaWidgets, we will spend the second half of this lesson creating a
working ajax widget, which we will test the client side component using
ToscaWidget javascript technology.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--toscawidgets--test-driven-modular-aj0.html</guid><category>pycon</category><category>pycon2009</category><category>testing</category><category>toscawidgets</category></item><item><title>PyCon 2009: ToscaWidgets: Test Driven Modular Ajax (Part 1 of 2)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--toscawidgets--test-driven-modular-aja.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: room's AC was loud] If you have ever struggled with
having to re-create the same content in multiple places in your web
application it might be time to look at ToscaWidgets. ToscaWidgets gives
the developer the ability to create reusable web content. This 3 hour
lesson will cover installation, integration, and usage of ToscaWidgets.
After we have a handle on how to create validated forms with
ToscaWidgets, we will spend the second half of this lesson creating a
working ajax widget, which we will test the client side component using
ToscaWidget javascript technology.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--toscawidgets--test-driven-modular-aja.html</guid><category>pycon</category><category>pycon2009</category><category>testing</category><category>toscawidgets</category></item><item><title>PyCon 2009: Using Twisted Deferreds (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--using-twisted-deferreds--part-1-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While the documentation about deferreds is good, it is still not enough
for many. In this interactive tutorial, I will cover both the basics of
deferreds and many non-trivial use-cases, with discussion of various
approaches. Common mistakes, gotchas and other issues will be explained,
as well as good idioms and techniques to use deferreds without pain.
Deferreds bring asynchronous APIs the clarity and programming power that
is sometimes lost when using event-based programming. They are an idea
taken from many other programming languages, and made into a Pythonic
solution If you are using Twisted, or would like to use Twisted, this
tutorial can help you with one of the most subtle issues inherent in its
APIs - Deferreds.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--using-twisted-deferreds--part-1-of-3.html</guid><category>asynchronous</category><category>deferreds</category><category>pycon</category><category>pycon2009</category><category>tutorial</category><category>twisted</category></item><item><title>PyCon 2009: Using Twisted Deferreds (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--using-twisted-deferreds--part-2-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;` &amp;lt;&lt;a class="reference external" href="http://blip.tv/file/1997952"&gt;http://blip.tv/file/1997952&lt;/a&gt;&amp;gt;`__&lt;/p&gt;
&lt;p&gt;While the documentation about deferreds is good, it is still not enough
for many. In this interactive tutorial, I will cover both the basics of
deferreds and many non-trivial use-cases, with discussion of various
approaches. Common mistakes, gotchas and other issues will be explained,
as well as good idioms and techniques to use deferreds without pain.
Deferreds bring asynchronous APIs the clarity and programming power that
is sometimes lost when using event-based programming. They are an idea
taken from many other programming languages, and made into a Pythonic
solution If you are using Twisted, or would like to use Twisted, this
tutorial can help you with one of the most subtle issues inherent in its
APIs - Deferreds.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--using-twisted-deferreds--part-2-of-3.html</guid><category>asynchronous</category><category>deferreds</category><category>pycon</category><category>pycon2009</category><category>tutorial</category><category>twisted</category></item><item><title>PyCon 2009: Using Twisted Deferreds (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--using-twisted-deferreds--part-3-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While the documentation about deferreds is good, it is still not enough
for many. In this interactive tutorial, I will cover both the basics of
deferreds and many non-trivial use-cases, with discussion of various
approaches. Common mistakes, gotchas and other issues will be explained,
as well as good idioms and techniques to use deferreds without pain.
Deferreds bring asynchronous APIs the clarity and programming power that
is sometimes lost when using event-based programming. They are an idea
taken from many other programming languages, and made into a Pythonic
solution If you are using Twisted, or would like to use Twisted, this
tutorial can help you with one of the most subtle issues inherent in its
APIs - Deferreds.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--using-twisted-deferreds--part-3-of-3.html</guid><category>asynchronous</category><category>deferreds</category><category>pycon</category><category>pycon2009</category><category>tutorial</category><category>twisted</category></item><item><title>PyCon 2009: PyPy status talk (#72)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009-pypy-status-talk-72.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyPy Status Talk&lt;/p&gt;
&lt;p&gt;Presented by Holger Krekel and Maciej Fijalkowski&lt;/p&gt;
&lt;p&gt;PyPy has come a long way. It's gone from being purely a research project
to providing a flexible and reasonably fast Python Interpreter, itself
implemented in Python. Although PyPy is not yet a viable CPython
replacement, PyPy is able to run sophisticated python applications like
Django and Twisted. In this talk, we'll focus on improvements that
happened during the last year in PyPy. This talk will also explain the
motivations driving current PyPy development and its targets for the
future.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Audio humming, other misc audio issues]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Holger Krekel</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009-pypy-status-talk-72.html</guid><category>pycon</category><category>pycon2009</category><category>pypy</category></item><item><title>Python 101 (1 of 2)</title><link>https://pyvideo.org/pycon-us-2009/python-101--1-of-2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 101 (Part 1 of 2)&lt;/p&gt;
&lt;p&gt;This 2 part tutorial presents the basics of Python to beginning and
intermediate programmers. It pairs well with Python 102 which follows a
similar outline but goes much deeper. Rather than starting with &amp;quot;Hello,
world!&amp;quot;, we use the interactive Python interpreter to get hands-on
familiarity with much of core Python before covering blocks and scripts.
The tutorial is divided into short sections, each with presentation and
exercises, to quickly cover lots of ground. Advanced topics are
introduced throughout and covered in &amp;quot;extra credit&amp;quot; exercises such that
more advanced participants can learn at their own pace.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/python-101--1-of-2.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>Python 101 (2 of 2)</title><link>https://pyvideo.org/pycon-us-2009/python-101--2-of-2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 101 (Part 2 of 2)&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents the basics of Python to beginning and
intermediate programmers. It pairs well with Python 102 which follows a
similar outline but goes much deeper. Rather than starting with &amp;quot;Hello,
world!&amp;quot;, we use the interactive Python interpreter to get hands-on
familiarity with much of core Python before covering blocks and scripts.
The tutorial is divided into short sections, each with presentation and
exercises, to quickly cover lots of ground. Advanced topics are
introduced throughout and covered in &amp;quot;extra credit&amp;quot; exercises such that
more advanced participants can learn at their own pace.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/python-101--2-of-2.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category></item></channel></rss>