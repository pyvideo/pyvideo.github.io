<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - PythonWebConf</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 22 Mar 2021 00:00:00 +0000</lastBuildDate><item><title>We Have Nearly One Million Lines of Python 2 Code in Production – and Now?</title><link>https://pyvideo.org/python-web-conf-2020/we-have-nearly-one-million-lines-of-python-2-code-in-production-and-now.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;We Have Nearly One Million Lines of Python 2 Code in Production – and Now?&amp;quot; by: Michael Howitz&lt;/p&gt;
&lt;p&gt;In this talk I am going to present possible approaches for a Python 3 migration of existing Python code running on Python 2.7. I’ll evaluate which of these approaches seems suitable for a large code base and which principles should be paid attention to to increase the probability of a successful migration project.&lt;/p&gt;
&lt;p&gt;I’ll use union.cms (a content management system used by German trade unions) to show the story of a successful migration project involving nearly one million lines of Python code. The story will include the obstacles we encountered and what we learned on the way.&lt;/p&gt;
&lt;p&gt;I believe that most of the discussed ideas and experience should also be used unchanged in smaller projects as the presented principles are very much the same.&lt;/p&gt;
&lt;p&gt;Goal of the presentation: You should be able to come up with a plan for migrating your Python 2 based projects to Python 3.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Howitz</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2020/we-have-nearly-one-million-lines-of-python-2-code-in-production-and-now.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>10 Tips Learned from Running A Python [Pyramid] Web App in Production</title><link>https://pyvideo.org/python-web-conf-2020/10-tips-learned-from-running-a-python-pyramid-web-app-in-production.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;10 Tips Learned from Running A Python [Pyramid] Web App in Production&amp;quot; by: Michael Kennedy&lt;/p&gt;
&lt;p&gt;Are you new to running web apps in production? Do you have that nagging feeling that you should improve the ways you structure, deploy, and develop your app? Want to see some lessons learned from running a group of Pyramid web apps on a cluster of Linux servers? Join the talk as Michael Kennedy, founder of Talk Python, as he shares his top 10 list of lessons learned running a variety of web apps over the past 5 years.&lt;/p&gt;
&lt;p&gt;This talk is open to all frameworks. Whether you use Pyramid, Flask, or Django, most of the tips and tricks will apply to your web apps you're building and deploying today.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Kennedy</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/10-tips-learned-from-running-a-python-pyramid-web-app-in-production.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>A Brief Survey of the Web Deployment Landscape</title><link>https://pyvideo.org/python-web-conf-2020/a-brief-survey-of-the-web-deployment-landscape.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;A Brief Survey of the Web Deployment Landscape&amp;quot; by: Caleb Gosnell&lt;/p&gt;
&lt;p&gt;Beginning a new project or entering a new environment, it can be daunting to sort through the options and requirements of various deployment strategies. This talk aims to provide you with a baseline familiarity with a few popular patterns that can aid you in determining what will work well for your application and your organization. We'll discuss:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;distinguishing characteristics of various deployment methods&lt;/li&gt;
&lt;li&gt;the core value of deployment as a step in the software lifecycle&lt;/li&gt;
&lt;li&gt;the costs, benefits, and implementation of certain practices&lt;/li&gt;
&lt;li&gt;factors that might influence/restrict your choices&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Gosnell</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/a-brief-survey-of-the-web-deployment-landscape.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>A Web without JavaScript (Keynote)</title><link>https://pyvideo.org/python-web-conf-2020/a-web-without-javascript-keynote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;A Web without JavaScript (Keynote)&amp;quot; by: Russell Keith-Magee&lt;/p&gt;
&lt;p&gt;In the browser, you can use any programming language you want... as long as it's JavaScript.&lt;/p&gt;
&lt;p&gt;But what if you want to use a different language? In this talk, you'll learn how you can break out of the monolingual environment provided by the browser, and use Python (or any other language) instead.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Russell Keith-Magee</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/a-web-without-javascript-keynote.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Building a Collaborative News Platform with Python</title><link>https://pyvideo.org/python-web-conf-2020/building-a-collaborative-news-platform-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Building a Collaborative News Platform with Python&amp;quot; by: Érico Andrei&lt;/p&gt;
&lt;p&gt;In this talk, Érico will present tools and solutions used by Pendect.com, from publishing workflows to automating tagging and content categorization.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Érico Andrei</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/building-a-collaborative-news-platform-with-python.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Building State-of-the-art Event-Driven Python Microservices with Serverless in AWS</title><link>https://pyvideo.org/python-web-conf-2020/building-state-of-the-art-event-driven-python-microservices-with-serverless-in-aws.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Building State-of-the-art Event-Driven Python Microservices with Serverless in AWS&amp;quot; by: Ben Ellerby&lt;/p&gt;
&lt;p&gt;Serverless is often thought of in terms of FaaS (like AWS Lambda). There are though many other Serverless services, for instance in AWS there is DynamoDB, API Gateway, Cognito and so on. Serverless microservices can be composed of these underlying services to achieve huge flexibility and speed. However, there is the trap of building a distributed monolith if the right tooling and approach are not used. At the end of 2019 AWS launched a new Serverless service, Amazon EventBridge, making it easier to connect microservices and ingest third-party SaaS as well as AWS events.&lt;/p&gt;
&lt;p&gt;This talk will go through the steps to build a state-of-the-art Python Serverless Microservice architecture based on Amazon Eventbridge through the &amp;quot;EventBridge Storming&amp;quot; approach (an extension of Event Storming from Domain-Driven Design). From idea to code in 8 steps.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Ellerby</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/building-state-of-the-art-event-driven-python-microservices-with-serverless-in-aws.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Dead-end Streets</title><link>https://pyvideo.org/python-web-conf-2020/dead-end-streets.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Dead-end Streets&amp;quot; by: Daniele Procida&lt;/p&gt;
&lt;p&gt;Sooner or later, every technological direction we take leads to a dead-end. Dead-ends aren’t necessary bad things; it can be very pleasant to live at the end of a cul-de-sac. But, comfortable or not, a dead-end can be hard to get out of, and what’s more, the more comfortable it is, the longer we’re inclined to stay there and the harder it is to extract ourselves. This talk is about a very comfortable dead-end, and why I’ll be sorry to leave it. It’s also about the brand new direction, how we get ourselves ready for the exit.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniele Procida</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/dead-end-streets.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Fake News' Foe: Machine Learning</title><link>https://pyvideo.org/python-web-conf-2020/fake-news-foe-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Fake News' Foe: Machine Learning&amp;quot; by: Jayesh Ahire&lt;/p&gt;
&lt;p&gt;Fake news has become a huge issue in our digitally-connected world and it is no longer limited to little squabbles – fake news spreads like wildfire and is impacting millions of people every day.&lt;/p&gt;
&lt;p&gt;How do you deal with such a sensitive issue? Countless articles are being churned out every day on the internet – how do you tell real from fake? It’s not as easy as turning to a simple fact-checker which is typically built on a story-by-story basis. As developers, can we turn to machine learning?&lt;/p&gt;
&lt;p&gt;In this talk, We will try to live code an application using TensorFlow and twilio WhatsApp API to detect fake news! While going through the code we will explore various machine learning concepts and new features in TensorFlow 2.0 which simplifies our job.&lt;/p&gt;
&lt;p&gt;We will also touch base on how we can use Advanced pre-trained NLP models like BERT, GPT-2, XLNet, Grover etc, to achieve our goal! This will be insightful session for beginners as well as intermediate level audience.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jayesh Ahire</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/fake-news-foe-machine-learning.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Flask: Beyond Hello World</title><link>https://pyvideo.org/python-web-conf-2020/flask-beyond-hello-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Flask: Beyond Hello World&amp;quot; by: Randy Syring&lt;/p&gt;
&lt;p&gt;Getting started in Flask is super easy. But what happens when your application needs more than just the basics? Flask's simplicity makes it easy to get started but also means you have to do more legwork as your application's needs grow.&lt;/p&gt;
&lt;p&gt;We will start with a typical &amp;quot;Hello World&amp;quot; Flask app and then integrate common features needed for most modern web applications, including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Utilizing application factory pattern &amp;amp; blue prints&lt;/li&gt;
&lt;li&gt;Automated testing with pytest&lt;/li&gt;
&lt;li&gt;CLI integration with external packages and global options&lt;/li&gt;
&lt;li&gt;Logging&lt;/li&gt;
&lt;li&gt;Database integration with Flask-SQLAlchemy&lt;/li&gt;
&lt;li&gt;Distributed task queues for background tasks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Preparation:
A familiarity with Flask will be helpful, but not required. The presentation will mostly be focused on concepts, not on the fine details of implementation. A companion GitHub repository will be available after the talk so attendees can dig deeper into implementation if desired.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Randy Syring</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/flask-beyond-hello-world.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Flexible Tile Layouts in Plone using Mosaic</title><link>https://pyvideo.org/python-web-conf-2020/flexible-tile-layouts-in-plone-using-mosaic.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Flexible Tile Layouts in Plone using Mosaic&amp;quot; by: Chrissy Wainwright&lt;/p&gt;
&lt;p&gt;Mosaic (plone.app.mosaic) provides the ability for Plone site editors to build custom layouts without having to edit templates or build custom views.&lt;/p&gt;
&lt;p&gt;As a developer, you can construct more building blocks (tiles) that will be available to the editors in the site. But the process for creating new tiles isn’t very straightforward.&lt;/p&gt;
&lt;p&gt;This talk will walk through the steps to create a new tile - where the title, body text, and background image will be easily managed by your editors.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chrissy Wainwright</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/flexible-tile-layouts-in-plone-using-mosaic.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Incrementally Developing Your Web App With Jupyter and Klein</title><link>https://pyvideo.org/python-web-conf-2020/incrementally-developing-your-web-app-with-jupyter-and-klein.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Incrementally Developing Your Web App With Jupyter and Klein&amp;quot; by: Moshe Zadka&lt;/p&gt;
&lt;p&gt;Still restarting your app when you add or modify an endpoint? In the 1980s, we had real interactive development environment. Not editors which can run a debugger: an environment you modified by developing code. While 2015 maybe the past, come join a trip back....to the future of 1985. See how to develop an application endpoint by endpoint while it is running, leaving auto-restarting directory monitors in the 2015 past where they belong.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Moshe Zadka</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/incrementally-developing-your-web-app-with-jupyter-and-klein.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Kubernetes Clusters in Salt</title><link>https://pyvideo.org/python-web-conf-2020/kubernetes-clusters-in-salt.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Kubernetes Clusters in Salt&amp;quot; by: Gareth Greenway&lt;/p&gt;
&lt;p&gt;Kubernetes has taken the world by storm, changing the way we think about server usage and application deployments. There are many deployments of Salt around the world where it's being used to set up, manage, communicate with and maintain Kubernetes clusters.&lt;/p&gt;
&lt;p&gt;In this talk we'll look at the different Salt components that make interacting with Kubernetes extremely smooth! We'll look at ways to easily install and maintain Kubernetes clusters. We'll also look at ways we can utilize Salt to control and deploy out applications to a Kubernetes cluster.&lt;/p&gt;
&lt;p&gt;Finally, we'll look at ways to bring events from the cluster such as when containers are created or destroyed into the Salt event bus and what we can do with those events once they're available.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gareth Greenway</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/kubernetes-clusters-in-salt.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Machine Learning Madness into Web Applications on the Cloud</title><link>https://pyvideo.org/python-web-conf-2020/machine-learning-madness-into-web-applications-on-the-cloud.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Machine Learning Madness into Web Applications on the Cloud&amp;quot; by: Suman Debnath&lt;/p&gt;
&lt;p&gt;In this talk we will dive deep into one the ML algorithm(Gradient Boosting based models) using Python, and shall build a web application with the model, using Flask and shall deploy the application on the Cloud. We will walk through the whole process step by step via live code, and deploy the application with ease. The idea is to help and motivate the audience to get some glimpse of the limitless opportunity we can have, by threading machine learning intelligence to any web application to solve some interesting real world problem, and all using few lines of Python code.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Suman Debnath</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/machine-learning-madness-into-web-applications-on-the-cloud.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Open Concept Lab: Helping the world's underserved with open source python code</title><link>https://pyvideo.org/python-web-conf-2020/open-concept-lab-helping-the-worlds-underserved-with-open-source-python-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Open Concept Lab: Helping the world's underserved with open source python code&amp;quot; by: Jonathan Payne&lt;/p&gt;
&lt;p&gt;The international community and low income countries are using open source software to help solve some of the world's biggest health challenges, like HIV/AIDS, Malaria, even COVID-19. The Open Concept Lab (OCL) is an open source project that helps countries and organizations manage, publish, and use standard terminology, which is how an electronic medical record knows that &amp;quot;Complete Blood Count&amp;quot;, &amp;quot;CBC&amp;quot;, and &amp;quot;Full Hemogram&amp;quot; all mean the same thing. Getting this wrong could increase morbidity. But being able to use data, regardless of who, where, or how it was captured can save lives. OCL is part of the Open Health Information Exchange (OpenHIE) community, an online community dedicated to developing open software and standards improving the health of the underserved. Drop by if you want to geek out on terminology standards, open source python, and international development.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonathan Payne</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/open-concept-lab-helping-the-worlds-underserved-with-open-source-python-code.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Permissions &amp; Security in Plone</title><link>https://pyvideo.org/python-web-conf-2020/permissions-security-in-plone.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Permissions &amp;amp; Security in Plone&amp;quot; by: Kim Nguyen&lt;/p&gt;
&lt;p&gt;Data security makes news headlines, often for the wrong reasons, when it has not been implemented correctly, or when it has been added to systems as an afterthought.&lt;/p&gt;
&lt;p&gt;Plone is a secure, open source web content management system that is written in Python and has been under active development since 2001.&lt;/p&gt;
&lt;p&gt;One of Plone's great strengths is its baked-in security model, which is comprised of:&lt;/p&gt;
&lt;p&gt;object- and field-level permissions
roles
groups
workflow states, transitions, and guards
In this talk, I will explain the elements of Plone's time-tested security model and I will show how these elements work together to help developers create websites and web applications that are secure by default.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kim Nguyen</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/permissions-security-in-plone.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Pluggable Architecture</title><link>https://pyvideo.org/python-web-conf-2020/pluggable-architecture.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Pluggable Architecture&amp;quot; by: Aly Sivji&lt;/p&gt;
&lt;p&gt;Applications and libraries with pluggable architecture allow developers to customize software without having to modify existing code. We can use plugins to modify user interfaces, create new workflows, and interface with legacy systems. Designing a plugin is often difficult - documentation is sparse, outdated, or non-existent. You end up diving into a unfamiliar codebase to figure out what to do.&lt;/p&gt;
&lt;p&gt;This talk examines Pluggable Architecture by creating a custom plugin system: we will design an interface, think about where to hook in custom behavior, and discuss testing techniques. Understanding these principles will enable us to write custom plugins for third-party packages. Extend the functionality of your favourite library without touching existing code!&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aly Sivji</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/pluggable-architecture.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Python Web Conf supports CoderDojo</title><link>https://pyvideo.org/python-web-conf-2020/python-web-conf-supports-coderdojo.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Python Web Conf supports CoderDojo&amp;quot; with: Calvin Hendryx-Parker and Josh Qualls&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Python Web Conf supports @coderdojo with: Calvin Hendryx-Parker and Josh Qualls</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/python-web-conf-supports-coderdojo.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Python - Web - Observability (Keynote)</title><link>https://pyvideo.org/python-web-conf-2020/python-web-observability-keynote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Python - Web - Observability (Keynote)&amp;quot; by: Steve Flanders&lt;/p&gt;
&lt;p&gt;We now live in a Cloud Native world where we build and deploy software very differently from the previous generation. As companies began to build or migrate to microservice architectures they often run into operational complexity and struggle to efficiently monitor their environments. These challenges have highlighted the need to observe systems differently and lead to the rise of Observability.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Flanders</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/python-web-observability-keynote.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Small Teams Managing Security at Scale</title><link>https://pyvideo.org/python-web-conf-2020/small-teams-managing-security-at-scale.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Small Teams Managing Security at Scale&amp;quot; by: Andy Leeb&lt;/p&gt;
&lt;p&gt;Small teams often don't have the resources or ability for managing security for their applications. This talk will describe how a small team implemented a security program which includes a bug bounty program and where we were able to extract the most value.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Leeb</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/small-teams-managing-security-at-scale.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Static Typing in Python</title><link>https://pyvideo.org/python-web-conf-2020/static-typing-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Static Typing in Python&amp;quot; by: Shubhi Khanna&lt;/p&gt;
&lt;p&gt;Python is well-known as a programming language without static types. This means that you don’t need to say what a given variable will hold, or whether your function will return a string or an integer (or sometimes one, and sometimes another!). This has historically made Python a very flexible and beginner-friendly language. In this talk, we’ll discuss the advantages and disadvantages to a static type system, as well as recent efforts to introduce static typing to Python via optional “type hints” and various tools to aid in adding types to Python code. We’ll see what this means for Python, for Python programmers, and what the future has in store for Python’s type system.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shubhi Khanna</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/static-typing-in-python.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>The Zen of Python Teams: New Lessons</title><link>https://pyvideo.org/python-web-conf-2020/the-zen-of-python-teams-new-lessons.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;The Zen of Python Teams: New Lessons&amp;quot; by: Adrienne Lowe&lt;/p&gt;
&lt;p&gt;The Zen of Python, accessed by running import this, is a list of nineteen aphorisms that have guided the development of the language. It has good advice for how to organize our code, but what does it have to say about how we organize ourselves? Plenty: the Zen of Python is not only a solid set of development principles, but the other easter egg is that it’s packed with wisdom about how to build healthy teams.&lt;/p&gt;
&lt;p&gt;In this talk I draw upon my time as a Director of happy Python-focused engineering teams to tell stories of what the Zen of Python has to teach us about communication and conflict, building inclusive teams and transparent processes, and promoting psychological safety. Come ready to reflect on and feel inspired by a new interpretation of these principles, and bring what you learn back to your meetup, study group, open source project, or team.&lt;/p&gt;
&lt;p&gt;Who and Why:&lt;/p&gt;
&lt;p&gt;This talk is for anyone who works with other humans on Python projects in any capacity--at Meetups, study groups, on open source projects, or at work. No background knowledge or experience is required, only an interest in learning about communication and teamwork, and hearing examples from some teams that struggled, but found ways to work together, better.&lt;/p&gt;
&lt;p&gt;While the context of the talk is that the speaker leads Python teams, you absolutely don't have to manage or lead a development team or even be on a professional development team to learn from this talk. I hope to show how anyone can find fresh, insightful, and personal meaning in the Zen of Python to communicate more clearly, handle conflict more gracefully, document their processes more transparently, and improve their relationships.&lt;/p&gt;
&lt;p&gt;Finally, in the closing part of this talk, attendees will reflect on and develop an inspiring aphorism of their own that speaks to the team they currently work most closely with. I will suggest they share this new &amp;quot;21st aphorism&amp;quot; with their networks and team.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrienne Lowe</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/the-zen-of-python-teams-new-lessons.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>To comment or not? A data-driven look at attitudes toward code comments</title><link>https://pyvideo.org/python-web-conf-2020/to-comment-or-not-a-data-driven-look-at-attitudes-toward-code-comments.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To comment or not? A data-driven look at attitudes toward code comments&amp;quot; by: Veronica Hanus&lt;/p&gt;
&lt;p&gt;Every programmer has asked themselves “how many comments are too many?” To the newest programmers, comments may seem magical--a way of documenting without giving instructions to the computer. But commenting engages the same vulnerability as more advanced challenges (i.e. pair programming &amp;amp; code review) and is likely to pique the insecurity of many programmers (especially the copy-and-paste or tutorial-level programmer)!&lt;/p&gt;
&lt;p&gt;While most of us agree that commenting is part of writing maintainable code, it’s very difficult for someone who has not yet worked in a community-reviewed codebase to know what is good practice and not. The answers that come back often conflict each other: Code should be DRY, but well-placed comments save future devs. How can someone find the commenting style that is best for them as they learn, grow, &amp;amp; contribute? My survey of 170 long-time developers, Computer Science majors, bootcamp grads, &amp;amp; hobby programmers confirms some expectations and brings others into question. Join me for a data-based chat about the biggest pain points caused by our attitudes toward commenting and the steps we can take to encourage a growth mindset and empower programmers of all levels.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Veronica Hanus</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/to-comment-or-not-a-data-driven-look-at-attitudes-toward-code-comments.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>A Deep Dive into Measuring Dependency Freshness with LibYear</title><link>https://pyvideo.org/python-web-conf-2020/a-deep-dive-into-measuring-dependency-freshness-with-libyear.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;A Deep Dive into Measuring Dependency Freshness with LibYear&amp;quot; by: Scott Ford&lt;/p&gt;
&lt;p&gt;LibYear is a dependency freshness measure which helps you learn how out of date your project’s dependencies are. While LibYear has considerable value when used as a “spot” metric, something that you just measure once, there is even more power that can be unlocked when you observe how the metric has trended over time. In this talk, we’ll explore a tool, libmetrics, which is able to compute this metric across a project’s history. The libmetrics tool supports many different dependency management tools from many different frameworks. Also during this talk, we’re going to look at graphs of LibYear over time for many different open source projects. By analyzing these graphs, we can see the long term impacts of different decisions, such as when a team decides to start using Dependabot.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Ford</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/a-deep-dive-into-measuring-dependency-freshness-with-libyear.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>AI Content Prediction for Large Websites</title><link>https://pyvideo.org/python-web-conf-2020/ai-content-prediction-for-large-websites.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;AI Content Prediction for Large Websites&amp;quot; by: Mike Moran
Large websites (tens of thousands of pages, or much. much more) are special beasts. There is no perfect information architecture or navigation that can possibly assist everyone to find what they are looking for. We can learn from Amazon and other highly successful web experiences that two techniques work very well. The first is exceptional site search that delivers on the promise to really find what users are looking for. The second is content recommendation--the ability to automatically suggest the content that the user wants to see next when they are on a certain page. It likely won't surprise you that numerous AI techniques, including Machine Learning and Natural Language Processing, are at the heart of the solution, and that large amounts of data about user activity and the content itself are needed to solve this findability problem.&lt;/p&gt;
&lt;p&gt;In this session, you'll learn how Solosegment uses content prediction to help users of large websites find what they are looking for. We'll take you under the hood to show you how content prediction works, as well as show you what APIs we make available for you to embed the data and predictions into your own applications.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Moran</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/ai-content-prediction-for-large-websites.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>CI/CD for Serverless Applications</title><link>https://pyvideo.org/python-web-conf-2020/cicd-for-serverless-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;CI/CD for Serverless Applications&amp;quot; by: Marcia Villalba
To get the most out of the agility afforded by serverless, it is essential to build CI/CD pipelines that help teams iterate on code and quickly release features. Serverless and distributed systems in production cannot be done any other way than with a good and efficient CI/CD pipeline.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marcia Villalba</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/cicd-for-serverless-applications.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Classy Abstractions (Keynote)</title><link>https://pyvideo.org/python-web-conf-2020/classy-abstractions-keynote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Classy Abstractions (Keynote)&amp;quot; by: Hynek Schlawack
Good abstractions can help us make software more correct, easier to understand, and easier to debug. Yet they appear to be widely underappreciated in the Python community. Let’s have a look together at what they can do for you, and hopefully you’ll never put a tuple into a dict ever again.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hynek Schlawack</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/classy-abstractions-keynote.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Development of LINEBot for Guessing Bicycle Theft Using Open Data</title><link>https://pyvideo.org/python-web-conf-2020/development-of-linebot-for-guessing-bicycle-theft-using-open-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Development of LINEBot for Guessing Bicycle Theft Using Open Data&amp;quot; by: Kenji Kawanobe
Do you know LINE? LINE is a messenger app used by almost all Japanese. This time, I developed a bot to estimate bicycle theft using Python, LINE and Open data with bicycle theft data. I will talk about pre-processing of open data, Implementation of bicycle theft estimation function by Mahalanobis.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kenji Kawanobe</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/development-of-linebot-for-guessing-bicycle-theft-using-open-data.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Finite State Machine (FSM) in Django</title><link>https://pyvideo.org/python-web-conf-2020/finite-state-machine-fsm-in-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Finite State Machine (FSM) in Django&amp;quot; by: Calvin Hendryx-Parker&lt;/p&gt;
&lt;p&gt;Workflows are super powerful tools for automating business processes online. Our everyday life is full of workflows such as requesting time off from work. Many of these are actually Finite State Machines that move from state to state via transitions. Popular CMS’ such as Plone have rich support for workflows, but now with django-fsm we can build quick, lightweight business workflows for our applications. Plus, we have full audit logging and even build visualizations of our workflow to confirm with the business owners generated from the code.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Calvin Hendryx-Parker</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/finite-state-machine-fsm-in-django.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category><category>Django</category></item><item><title>Fireside Chat with Carl Meyer</title><link>https://pyvideo.org/python-web-conf-2020/fireside-chat-with-carl-meyer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Fireside Chat&amp;quot; with: Carl Meyer and Calvin Hendryx-Parker&lt;/p&gt;
&lt;p&gt;Join Carl Meyer of Instagram for a Fireside Chat on their infrastructure, best practices, and more!&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fireside Chat with: Carl Meyer and Calvin Hendryx-Parker</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/fireside-chat-with-carl-meyer.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Full-Stack Web with Nothing But Python: A Deep Dive into Anvil</title><link>https://pyvideo.org/python-web-conf-2020/full-stack-web-with-nothing-but-python-a-deep-dive-into-anvil.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Full-Stack Web with Nothing But Python: A Deep Dive into Anvil&amp;quot; by: Meredydd Luff&lt;/p&gt;
&lt;p&gt;The Web stack is famously complicated, with a huge number of languages and libraries for even a simple app. What if, instead, we could do it all in Python?
I'll be taking a deep dive into Anvil, an open-source framework for building full-stack web-apps with nothing but Python. That means Python in the browser, Python on the server, Python for the database - even a Python UI toolkit! I'll be digging into how Anvil works, but &lt;em&gt;why&lt;/em&gt; it's so important to bring Pythonic values to the full web stack.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Meredydd Luff</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/full-stack-web-with-nothing-but-python-a-deep-dive-into-anvil.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Insane Customization Tricks for Plone</title><link>https://pyvideo.org/python-web-conf-2020/insane-customization-tricks-for-plone.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Insane Customization Tricks for Plone&amp;quot; by: Annette Lewis
Want a unique website but terrified of the infinity of acronyms needed just to start? Running an organization where every site needs it’s own special look and feel? Customizing web systems can be hard, but Plone’s got some tricks to make it simpler.&lt;/p&gt;
&lt;p&gt;Plone’s customization story has fresh ideas making changes through-the-web and via code. Just trying to change a logo or move a box from the left to the right? Want to make a fancy looking front page without hard coding it? Perhaps you want to change a template, but are terrified it’ll be overwritten during later software upgrades? Whether you’re a seasoned developer or just getting started, the power is in your hands.&lt;/p&gt;
&lt;p&gt;Out-of-the-box, Plone will do a fine job running a website, but why stop there. Let’s make Plone work for us. Learn the ins and outs of Plone and how to create a truly custom website.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Annette Lewis</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/insane-customization-tricks-for-plone.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Jumpstart your Django Project with Cookiecutter</title><link>https://pyvideo.org/python-web-conf-2020/jumpstart-your-django-project-with-cookiecutter.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Jumpstart your Django Project with Cookiecutter&amp;quot; by: Rob McBroom&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rob McBroom</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/jumpstart-your-django-project-with-cookiecutter.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category><category>Django</category></item><item><title>Nornir: Solve Big Problems Fast</title><link>https://pyvideo.org/python-web-conf-2020/nornir-solve-big-problems-fast.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Nornir: Solve Big Problems Fast&amp;quot; by: Brett Lykins
Managing over 60,000 network devices can be a mind-boggling and difficult task.&lt;/p&gt;
&lt;p&gt;Over the years at Rackspace, we have tried many tools and frameworks to help us wrangle this problem, with varying degrees of success.&lt;/p&gt;
&lt;p&gt;Recently, we’ve begun making use of Nornir to rapidly solve some of our complex and pressing issues.&lt;/p&gt;
&lt;p&gt;Nornir, as a native Python automation framework, allows us to leverage our existing Python based infrastructure, applications, and libraries and generate meaningful and powerful APIs and services for our end users and administrators.&lt;/p&gt;
&lt;p&gt;By utilizing Nornir’s built in Inventory, Task, and Result handling framework, we can quickly solve a problem and have an application from prototype to production in under a week.&lt;/p&gt;
&lt;p&gt;This allows our network developers to focus on solving the problem at hand, not on reinventing the wheel for every new API or application that is needed.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brett Lykins</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/nornir-solve-big-problems-fast.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Secure the Snakes! Tips for Secure Development in Python</title><link>https://pyvideo.org/python-web-conf-2020/secure-the-snakes-tips-for-secure-development-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Secure the Snakes! Tips for Secure Development in Python&amp;quot; by: Hayley Denbraver&lt;/p&gt;
&lt;p&gt;Developers are asked to solve complex problems and balance competing interests--and sometimes security may fall by the wayside. It is easy enough to consider security as &amp;quot;somebody else's problem&amp;quot;, but that attitude can come back to bite us. This talk will cover secure coding practices (for both general Python development and Django development) that you can incorporate into your work.  Every step towards more secure code is a win!&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hayley Denbraver</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/secure-the-snakes-tips-for-secure-development-in-python.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Serverless is for Pragmatists: CI/CD in the Age of IaC</title><link>https://pyvideo.org/python-web-conf-2020/serverless-is-for-pragmatists-cicd-in-the-age-of-iac.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Serverless is for Pragmatists: CI/CD in the Age of IaC&amp;quot; by: Anna Spysz and Chase Douglas&lt;/p&gt;
&lt;p&gt;Over the past 5 years, a common application development theme has emerged as the combination of both code and infrastructure to comprise applications. In particular, it's almost impossible to manage a serverless application without Infrastructure-as-Code, because any stateful application of reasonable scope will require a combination of compute resources alongside queues, pub-sub topics, databases, storage, and more.&lt;/p&gt;
&lt;p&gt;As these application architectures mature, best practices are also developing. While we may understand CI/CD processes for application code, similar mechanisms for Infrastructure-as-Code may be less familiar. This talk will present best practices that we’ve developed by working with our customers, including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Managing and isolating environments across cloud accounts for parameters, secrets, and resources&lt;/li&gt;
&lt;li&gt;Automated deployments of preview environments for PRs&lt;/li&gt;
&lt;li&gt;Auditing infrastructure templates to ensure least-privileged permissions&lt;/li&gt;
&lt;li&gt;Managing permissions and access controls for individual developers to be productive&lt;/li&gt;
&lt;li&gt;Providing controls to meet regulatory compliance like SOC-2 for modern, serverless application delivery&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our goal is to share these learnings with a broader set of people, and to reach those beyond our previous audiences within the serverless application development community. This talk will be focused on specific techniques and is meant to apply to a broad range of serverless and other IaC projects.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anna Spysz and Chase Douglas</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/serverless-is-for-pragmatists-cicd-in-the-age-of-iac.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Testing and Monitoring Web Applications in the Wild</title><link>https://pyvideo.org/python-web-conf-2020/testing-and-monitoring-web-applications-in-the-wild.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Testing and Monitoring Web Applications in the Wild&amp;quot; by Sam Clarke&lt;/p&gt;
&lt;p&gt;The development of web applications rarely ends with deploying the code to a host server, and some would say that’s when the real work actually begins. An application which works fine in a development environment could present a wide range of issues when running in the wild, some of which are easier to anticipate than others. The web application developer has many tools and techniques available to minimise the chance of failure and maximise the chance of fixing an issue quickly. This results in more robust deploys, happier customers, increased productivity and of course more developer sanity.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Testing and Monitoring Web Applications in the Wild by Sam Clarke</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/testing-and-monitoring-web-applications-in-the-wild.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Time Series Databases and Forecasting with FB Prophet</title><link>https://pyvideo.org/python-web-conf-2020/time-series-databases-and-forecasting-with-fb-prophet.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Time Series Databases and Forecasting with FB Prophet&amp;quot; by: Anais Dotis-Georgiou&lt;/p&gt;
&lt;p&gt;Data collection is only part of the battle. The other half is being able to easily perform data analysis. FB Prophet aims to make time-series forecasting simple and fast. In this latest talk, we’ll learn about time-series databases and how to make a time-series prediction with Prophet and InfluxDB.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anais Dotis-Georgiou</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/time-series-databases-and-forecasting-with-fb-prophet.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Time to get real with AI</title><link>https://pyvideo.org/python-web-conf-2020/time-to-get-real-with-ai.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Time to get real with AI&amp;quot; by: Chris Riley&lt;/p&gt;
&lt;p&gt;A lot of time conversations about Artificial Intelligence, Machine Learning, and recognition technology like Natural Language Processing (NLP) and Optical Character Recognition (OCR) seem like fairy dust. As more and more of this technology is implemented into applications, and Python - one of the leading languages for it. It is important to tie the magic with reality. In this talk, we will explore the basis of these technologies, the real world applications, and how to make sure that implementation is useful to the end-user. Expecting AI/ML to deliver magic to an application can lead to missed expectations, and poor rollout.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Riley</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/time-to-get-real-with-ai.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Unify Your Service Architecture With OpenAPI</title><link>https://pyvideo.org/python-web-conf-2020/unify-your-service-architecture-with-openapi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Unify Your Service Architecture With OpenAPI&amp;quot; by: Nathan van Gheem
This talk will go through understanding what OpenAPI and JSON Schema is, how it can help your organization write better endpoints, why it is superior to alternatives like grpc and how to utilize it in your python projects.&lt;/p&gt;
&lt;p&gt;We will also describe approaches to integrating OpenAPI and JSON schema into your python projects with simple patterns utilizing dependency injection, automatic definition testing with pytest and output validation. Also, it will demonstrate how using libraries like pydantic will also give you automatic mypy support along with JSON Schema.&lt;/p&gt;
&lt;p&gt;We’ll utilize patterns that can be translated to any Python framework.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan van Gheem</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/unify-your-service-architecture-with-openapi.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Why I talk about ethics when I talk about technology (Keynote)</title><link>https://pyvideo.org/python-web-conf-2020/why-i-talk-about-ethics-when-i-talk-about-technology-keynote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Why I talk about ethics when I talk about technology (Keynote)&amp;quot; by: Lorena Mesa&lt;/p&gt;
&lt;p&gt;In her talk, Lorena will be speaking on the ethical questions and quandaries that she has grappled with during her
career working with data in several different organizations. She will talk about the lessons that she has learned and how she now thinks about her work and the principles that guide it.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lorena Mesa</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/why-i-talk-about-ethics-when-i-talk-about-technology-keynote.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>You want to Kubernetes? You MUST know Docker!</title><link>https://pyvideo.org/python-web-conf-2020/you-want-to-kubernetes-you-must-know-docker.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;You want to Kubernetes? You MUST know Docker!&amp;quot; by: Angel Rivera&lt;/p&gt;
&lt;p&gt;Achieving velocity is the new normal in software development and release practices. DevOps teams are becoming more efficient and optimizing their ability to produce quality software consistently and faster. This velocity can be directly attributed to the adoption of DevOps and CI/CD practices and the implementation of DevOps tooling is at the core of these gains. Container orchestration platforms like Kubernetes are incredibly powerful and companies of all shapes and sizes wanting to embrace this powerful technology find it very difficult to find a starting point. Often enough this can be attributed to the lack of foundational skill sets required to succeed in their Kubernetes journey. This includes the lack of knowledge and experience with the Docker runtime and containers.&lt;/p&gt;
&lt;p&gt;Having a deep understanding of the Docker runtime and containers is a paramount in successfully adopting and operating Kubernetes. In this talk Angel will discuss the skill sets that individuals and teams must develop prior to endeavoring in their Kubernetes initiatives. Attendees will learn about the various skill sets needed to proficiently get started with Kubernetes. Angel will also discuss the critical aspects of the Docker runtime and containers along with demonstrating how to perform critical actions within the Docker runtime. Attendees will walk away with a solid grasp of the Docker runtime and containers that will better prepare them for their DevOps and Kubernetes initiatives.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Angel Rivera</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/you-want-to-kubernetes-you-must-know-docker.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Your First Plone 6 Project</title><link>https://pyvideo.org/python-web-conf-2020/your-first-plone-6-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Your First Plone 6 Project&amp;quot; by: Philip Bauer
Trying your hand at a new technology can be demanding. If you already know Python and Plone getting started with React and Volto gets much easier.&lt;/p&gt;
&lt;p&gt;In this talk I will pick some tasks from the example project of the Mastering Plone training and show you how to meet the same requirements using Volto, the new React-based front end for Plone.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philip Bauer</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/your-first-plone-6-project.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>An Introduction to Django (Tutorial)</title><link>https://pyvideo.org/python-web-conf-2020/an-introduction-to-django-tutorial.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;An Introduction to Django (Tutorial)&amp;quot; by: Kojo Idrissa
This tutorial will introduce new and experienced Python developers to the Django web framework. You'll learn what you can do with Django and leave with a small working example. You'll also leave with knowledge of where to go next on your Django journey.&lt;/p&gt;
&lt;p&gt;RESOURCES: &lt;a class="reference external" href="https://2020.pythonwebconf.com/tutorials/an-introduction-to-django"&gt;https://2020.pythonwebconf.com/tutorials/an-introduction-to-django&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kojo Idrissa</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-17:/python-web-conf-2020/an-introduction-to-django-tutorial.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category><category>Django</category></item><item><title>Django Bootstrapping Done Right</title><link>https://pyvideo.org/python-web-conf-2020/django-bootstrapping-done-right.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Django Bootstrapping Done Right&amp;quot; by: Pablo Garcia&lt;/p&gt;
&lt;p&gt;We have been working with Django for many years and we discovered we were always repeating the same things at the beginning of each project. pycodestyle checks, unit tests, automated deployment, we where doing all of them over and over again and occasionally we were missing important things that would make our lives easier.&lt;/p&gt;
&lt;p&gt;That’s why we decided to create and maintain template repository with all the required tools to bootstrap a Django project. It has become very valuable for our company and that’s why we want to share it with the community. The project is now open source and we will review all it in this talk.&lt;/p&gt;
&lt;p&gt;Virtual environments.
Pyenv and Pipenv
Useful dependencies for development (debug toolbar, extensions, django-environ, etc.)
Services your application depends on
Docker quickstart
Compose example with DB (PostgreSQL), Cache (Redis), NGINX and RQ
Git hooks
Tests
Flake
PEP8
Pylint
JSCPD
Deployment
Deployment stack. Typical pieces of a small application.
Deploying to Heroku
CI/CD + Feature branch flow
Pipelines
Checkstyle tools
Slack integration&lt;/p&gt;
&lt;p&gt;RESOURCES: &lt;a class="reference external" href="https://2020.pythonwebconf.com/tutorials/django-bootstrapping-done-right"&gt;https://2020.pythonwebconf.com/tutorials/django-bootstrapping-done-right&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pablo Garcia</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-17:/python-web-conf-2020/django-bootstrapping-done-right.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category><category>Django</category></item><item><title>How to Setup a Plone Intranet in Half a Day (Tutorial)</title><link>https://pyvideo.org/python-web-conf-2020/how-to-setup-a-plone-intranet-in-half-a-day-tutorial.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;How to Setup a Plone Intranet in Half a Day (Tutorial)&amp;quot; by: Kim Nguyen
Whether at work or outside of work, we usually need to collaborate with others.&lt;/p&gt;
&lt;p&gt;This collaboration can take many forms:
- storing documents
- organizing documents
- sharing documents
- creating and filling out forms
- protecting documents and data from prying eyes
- managing access to documents and data
- finding documents and data&lt;/p&gt;
&lt;p&gt;Enterprises enable this kind of collaboration by creating an intranet. Users must log into this intranet, quickly and easily find the documents and data they need, revise them, save them, and share them out to others on their project teams. Intranet administrators create teams and set aside workspaces for those teams.
Setting up this type of intranet does NOT have to be hard nor does it have to be expensive!
Plone is a longstanding, secure, open source web content management system that lets you create intranets like this.&lt;/p&gt;
&lt;p&gt;RESOURCES: &lt;a class="reference external" href="https://2020.pythonwebconf.com/tutorials/how-to-setup-a-plone-intranet-in-half-a-day"&gt;https://2020.pythonwebconf.com/tutorials/how-to-setup-a-plone-intranet-in-half-a-day&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kim Nguyen</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-17:/python-web-conf-2020/how-to-setup-a-plone-intranet-in-half-a-day-tutorial.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Introduction to SQLAlchemy 2020 (Tutorial)</title><link>https://pyvideo.org/python-web-conf-2020/introduction-to-sqlalchemy-2020-tutorial.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Introduction to SQLAlchemy 2020 (Tutorial)&amp;quot; by: Mike Bayer
In this tutorial, we present a &amp;quot;from the ground up&amp;quot; tour of SQLAlchemy, what
the general idea of it is, how it's organized, and what it looks like to use
it.   This is the latest version of the &amp;quot;classic&amp;quot; SQLAlchemy tutorial  which
has been presented on many occasions since 2008, reworked for the current
recommended SQLAlchemy usage patterns with an emphasis on previewing the upcoming 1.4 and 2.0 releases of SQLAlchemy, which are poised to make major changes to many of SQLAlchemy's central paradigms and capabilities.
SQLAlchemy is presented in terms of a four-layered model, which include &amp;quot;Engine and Connection Basics&amp;quot;, &amp;quot;Table Metadata&amp;quot;, &amp;quot;SQL Expression Language&amp;quot;, and &amp;quot;ORM Usage&amp;quot; which is broken into two sections and API use is presented in terms of a console runner application which participants can install locally and follow along.   The tutorial will also present some of the newest in-development features of SQLAlchemy 1.4 which have only just merged.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Bayer</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-17:/python-web-conf-2020/introduction-to-sqlalchemy-2020-tutorial.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>PyCharm Power Tips (Tutorial)</title><link>https://pyvideo.org/python-web-conf-2020/pycharm-power-tips-tutorial.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;PyCharm Power Tips (Tutorial)&amp;quot; by: Paul Everitt
Already using PyCharm and want to learn productivity tips? In this hands-on tutorial, we will show bite-sized ways to speed up your work and stay in the coding flow: general IDE tips, Django-specific tips, then a sample TDD session in pytest that puts those to work in a real coding session.&lt;/p&gt;
&lt;p&gt;RESOURCES: &lt;a class="reference external" href="https://2020.pythonwebconf.com/tutorials/how-to-become-a-pycharm-power-user"&gt;https://2020.pythonwebconf.com/tutorials/how-to-become-a-pycharm-power-user&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-17:/python-web-conf-2020/pycharm-power-tips-tutorial.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Testing Best Practices (Tutorial)</title><link>https://pyvideo.org/python-web-conf-2020/testing-best-practices-tutorial.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Testing Best Practices (Tutorial)&amp;quot; by: Randy Syring
We'll use a non-trivial Flask application to review general best practices when testing. In addition, we'll examine methods for testing an application when it must interact with services outside itself. In particular, we will review how to test:&lt;/p&gt;
&lt;p&gt;Database
Celery tasks
3rd party external APIs (REST/JSON)
CLI commands
Emails
Using Continuous Integration (CI) services
We will discuss both principles and implementation so that even if you don't use Flask, the principles learned can be applied to other frameworks (Django, etc.).&lt;/p&gt;
&lt;p&gt;This is an intermediate to advanced talk so attendees should feel comfortable:&lt;/p&gt;
&lt;p&gt;working in Python
cloning repos from GitHub
using pip and friends to create virtualenvs and install dependencies
running applications from the command line
using Docker and docker-compose to spin up external services (database, email, RabbitMQ) or having those services installed &amp;amp; available at the OS level
familiarity with using pytest will be helpful&lt;/p&gt;
&lt;p&gt;RESOURCES: &lt;a class="reference external" href="https://2020.pythonwebconf.com/tutorials/testing-done-right"&gt;https://2020.pythonwebconf.com/tutorials/testing-done-right&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Randy Syring</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-17:/python-web-conf-2020/testing-best-practices-tutorial.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>A Year Without Pants: Strategies for Successful Remote Work</title><link>https://pyvideo.org/python-web-conf-2021/a-year-without-pants-strategies-for-successful-remote-work.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;A Year Without Pants: Strategies for Successful Remote Work&amp;quot; by: Mason Egger&lt;/p&gt;
&lt;p&gt;2020 was the year of forced remote work. People struggle with this change due to lack of guidance on how to manage this shift. Due to this, many people have developed a negative opinion of remote work. However, remote work can be liberating. So how can you make working remotely enjoyable? From daily routines to simulated commutes I’ll discuss strategies for making remote work comfortable, productive, and enjoyable.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mason Egger</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/a-year-without-pants-strategies-for-successful-remote-work.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Adding Custom Control Panels to Your Plone Add-On</title><link>https://pyvideo.org/python-web-conf-2021/adding-custom-control-panels-to-your-plone-add-on.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Adding Custom Control Panels to Your Plone Add-On&amp;quot; by: Annette Lewis&lt;/p&gt;
&lt;p&gt;You’ve developed your add-on, and it’s working great. Then, you realize there’s a value that needs changing again and again. Rather than hard-coding these options in, take advantage of Plone’s registry and create your own custom control panel to allow editable options through-the-web.
I’ll walk through the steps of adding a custom control panel to a theme add-on including:
- Storing custom settings in the registry
- Creating a form to manage these settings
- Registering the control panel&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Annette Lewis</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/adding-custom-control-panels-to-your-plone-add-on.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>ADHDidn't: 7 Things That Wrecked My Productivity During WFH, and How I Dealt</title><link>https://pyvideo.org/python-web-conf-2021/adhdidnt-7-things-that-wrecked-my-productivity-during-wfh-and-how-i-dealt.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;ADHDidn't: 7 Things That Wrecked My Productivity During WFH, and How I Dealt With Them&amp;quot; by: Eli Holderness
I’m just going to say it: I’m Bad at working from home. That’s a problem, because I’ve been doing it for the last year, it looks like we might have more than a little while to go yet before office life resumes, and my ADHD isn’t exactly going anywhere in the meantime.&lt;/p&gt;
&lt;p&gt;Even aside from the myriad ways that remote working can expose issues in a company’s management or communications infrastructure, there are a whole host of problems that can arise on a personal level. In this talk, I discuss some of the ones I’ve grappled with over the last year.&lt;/p&gt;
&lt;p&gt;Can’t stay focused? End up endlessly doomscrolling, or procrastinating for hours before really starting to work for the day? Trouble sleeping, or zoning out during the day with nobody around to keep you on track? If that sounds familiar, stop by and maybe get some ideas of things you can do about it - or at least feel less alone!&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eli Holderness</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/adhdidnt-7-things-that-wrecked-my-productivity-during-wfh-and-how-i-dealt.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>After Event Social: Bartending Basics</title><link>https://pyvideo.org/python-web-conf-2021/after-event-social-bartending-basics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;After Event Social: Bartending Basics&amp;quot; by: Tito Sierra&lt;/p&gt;
&lt;p&gt;Learn the basics of bartending at home. Topics include a review of bar tools, glassware, liquor, mixing ingredients, and drink preparation. No slides… learn how to mix proper cocktails through live demonstration in the presenter’s kitchen.&lt;/p&gt;
&lt;p&gt;Bartending Basics Guide at: &lt;a class="reference external" href="https://2021.pythonwebconf.com/images/bartending-basics-python-web-conf-2021-1.pdf"&gt;https://2021.pythonwebconf.com/images/bartending-basics-python-web-conf-2021-1.pdf&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tito Sierra</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/after-event-social-bartending-basics.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Automating AWS with Python: The Easy Way To The Cloud</title><link>https://pyvideo.org/python-web-conf-2021/automating-aws-with-python-the-easy-way-to-the-cloud.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Automating AWS with Python: The Easy Way To The Cloud&amp;quot; by David Sol
Automation is key for efficient cloud management, and Python is one of the easiest ways of achieve it. Using CDK (Cloud Development Kit) for provisioning the infrastructure, and the Boto3 library to automate the operation of the cloud allows us to use AWS to its fullest.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Sol</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/automating-aws-with-python-the-easy-way-to-the-cloud.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Build Cloud Infrastructure Using Python</title><link>https://pyvideo.org/python-web-conf-2021/build-cloud-infrastructure-using-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Build Cloud Infrastructure Using Python&amp;quot; by: Sohan Maheshwar
Infrastructure as code (IaC) is the process of managing and provisioning computer data centers through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools. IaC is gaining popularity worldwide because it of its easier cloud onboarding, faster development process, customizability and shareability.&lt;/p&gt;
&lt;p&gt;This talk will show how you can build cloud infrastructure using Python and serves as a good introduction to what IaC is.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sohan Maheshwar</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/build-cloud-infrastructure-using-python.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Caching Best Practices</title><link>https://pyvideo.org/python-web-conf-2021/caching-best-practices.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Caching Best Practices&amp;quot; by: Moshe Zadka&lt;/p&gt;
&lt;p&gt;Using a database? A microservice? Then you have probably considered whether to cache some of the data you retrieve from them. Caching is supposed to make the application go fast, right? Sometimes! Caching is a subtle topic. Using caches needs to be done with care. This care should manifest beforehand, by thinking ahead of time about the data needs and latencies involved. The care should manifest while writing the code, refactoring as appropriate to take proper advantage of the cache. The care must even be applied after the code is written, by monitoring cache hit/miss rates and alerting appropriately if the cache patterns change.&lt;/p&gt;
&lt;p&gt;Using a cache well can make an application faster and cheaper to run. Using a cache badly can make an application slower, and consume more resources. Learn how to measure twice, and cache once.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Moshe Zadka</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/caching-best-practices.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Can We Deploy Yet?</title><link>https://pyvideo.org/python-web-conf-2021/can-we-deploy-yet.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Can We Deploy Yet?&amp;quot; by: Anastasiia Tymoshchuk&lt;/p&gt;
&lt;p&gt;Do you think your code is ready for production?
This talk contains a checklist for your Python code before you go to production:
- Exception handling
- How to become a detective or meaningful logging
- From code review to production or effective CI/CD
- Are your docker images secure? No problem!
- More hints and ideas&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anastasiia Tymoshchuk</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/can-we-deploy-yet.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>CI/CD Agility and Controlling Pipeline Sprawl</title><link>https://pyvideo.org/python-web-conf-2021/cicd-agility-and-controlling-pipeline-sprawl.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;CI/CD Agility and Controlling Pipeline Sprawl&amp;quot; by: Angel Rivera
The adoption of CI/CD has automated the process of how DevOps teams build, test, and deliver software at rapid speeds and with high confidence. Although CI/CD platforms offer many benefits, in the attempt to make sophisticated pipelines, many teams run into the issue of “Pipeline Sprawl”. Pipeline sprawl makes it difficult for DevOps teams to identify and reuse common execution patterns which diminishes their ability to efficiently ship new code.&lt;/p&gt;
&lt;p&gt;In this talk, Angel will discuss the common pain points associated with existing CI/CD platforms. The talk will pull in examples from his recent experience and conversations with DevOps teams from across the open source community, startups, and large enterprises. Attendees will learn technical strategies to develop optimized pipeline configurations and diminish potentially costly vendor-lock in.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Angel Rivera</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/cicd-agility-and-controlling-pipeline-sprawl.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Cloud Parallelism With Serverless On AWS</title><link>https://pyvideo.org/python-web-conf-2021/cloud-parallelism-with-serverless-on-aws.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Cloud Parallelism With Serverless On AWS&amp;quot; by: Ben Ellerby
Serverless offers scalability and speed with a nice abstraction layer to many web and mobile applications, as well as massive concurrency which can be run large workloads in parallel.&lt;/p&gt;
&lt;p&gt;This talk will discuss what is possible with Serverless for parallel algorithms and services to use.&lt;/p&gt;
&lt;p&gt;We will cover:
- What Serverless is (AWS Lambda and beyond)
- The Serverless Services on AWS and other cloud providers
- How to write code for Serverless
- How parallelism works on Serverless
- How to orchestrate parallel workloads with Serverless Services like AWS Step Functions&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Ellerby</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/cloud-parallelism-with-serverless-on-aws.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Complete Python Toolbox For Modern Developers</title><link>https://pyvideo.org/python-web-conf-2021/complete-python-toolbox-for-modern-developers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Complete Python Toolbox For Modern Developers&amp;quot; by: Jan Giacomelli
This talk looks at the various tools that simplify the development process for any developer, independent of their skill level. It starts with project creation with dependency management. It then continues on to look at tools used for testing, checking code quality, and type checking. In the end, we’ll look at documenting code.&lt;/p&gt;
&lt;p&gt;Introduction - 5min
I’ll start with the issues most Python developers face:
- creating and re-creating virtual environments
- installing, uninstalling, and updating dependencies
- writing and running tests
- following consistent code style
- avoiding security vulnerabilities
- documenting code&lt;/p&gt;
&lt;p&gt;Modern Python Environments (dependency and workspace management)
First, we’ll take a look at how to manage Python versions with pyenv. Specifically, how to:
- list available Python versions
- install a specific version
- select a specific version for your current project&lt;/p&gt;
&lt;p&gt;Next, we’ll take a look at managing dependencies. We’ll look at how to manage dependencies with several different tools:
- venv + pip
- Poetry
- pipenv
For each, we’ll look at how to manage dependencies along with the virtual environment.
We’ll finish this section by comparing the tools (their pros and cons, things they support, etc.) to make it easier to choose the right one based on your specific situation.&lt;/p&gt;
&lt;p&gt;Python testing
This section looks at some tools and techniques that help make testing in Python easier.
- Testing with pytest: How to install pytest, structure a project, run assertions, and run tests. We’ll also look at the most used plugins.
- Mocking: How to mock internal methods within your tests.
- Code coverage: We’ll discuss how to measure code coverage, which tool to use, and how to interpret the coverage percentage.&lt;/p&gt;
&lt;p&gt;Python Code Quality
This section answers the following questions:
1. What exactly is code quality?
How do we measure it?
How do we improve code quality and clean up our Python code?
We’ll look at how to improve the quality of your Python code with linters, code formatters, and security vulnerability scanners.&lt;/p&gt;
&lt;p&gt;Python Type Checking
This section answers the following questions:
1. What is type checking?
2. Why do we need it?
3. What’s the difference between static and runtime type checking?
This section looks at what type hints are and how they can benefit you. We’ll also dive into how you can use Python’s type system for type checking.&lt;/p&gt;
&lt;p&gt;Documenting Python Code
This section answers the following questions:
1. Why do you need to document your Python code?
2. What should your project documentation include?
3. How do you write and generate documentation?
This section looks at why you should document your Python code and how to generate project documentation with Sphinx and OpenAPI.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan Giacomelli</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/complete-python-toolbox-for-modern-developers.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Data Lakes and Streams with S3 and Lambda</title><link>https://pyvideo.org/python-web-conf-2021/data-lakes-and-streams-with-s3-and-lambda.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Data Lakes and Streams with S3 and Lambda&amp;quot; by: Justin Garrison
You have a data lake in S3 and it is providing great value. But it's formatted specifically for a single application and difficult to reuse. Should you copy the data and reformat it? Will you need to do that nightly as part of your ETL pipeline? How expensive is it for you to use your own data? In this talk, we'll look at options to transform your data on the fly with Lambda and Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Justin Garrison</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/data-lakes-and-streams-with-s3-and-lambda.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Debugging Your Brain</title><link>https://pyvideo.org/python-web-conf-2021/debugging-your-brain.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Debugging Your Brain&amp;quot; by: Casey Watts
The human brain is buggy. Sometimes your mind distorts reality, gets frustrated with shortcomings, and spirals out of control. With practice, you can debug your brain. Catch those distortions of reality, transform those frustrations into insight, and short-circuit those downward spirals.&lt;/p&gt;
&lt;p&gt;This talk is full of practical techniques, explained via programming metaphors. Each technique is condensed to its core idea, accompanied by just enough story to make it memorable. Specifically: Modeling The Brain, Cognitive Behavioral Therapy, Introspection, Identifying Inputs, Experience Processing, Experience Validation, and Cognitive Restructuring.&lt;/p&gt;
&lt;p&gt;This talk brings together two parts of Casey’s background: psychology and software development. Casey studied neurobiology at Yale University, and he is a co-author on several neurobiology papers. He has worked in software development for 10 years, including at Heroku.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Casey Watts</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/debugging-your-brain.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Debugging Your Plone Site</title><link>https://pyvideo.org/python-web-conf-2021/debugging-your-plone-site.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Debugging Your Plone Site&amp;quot; by: Chrissy Wainwright
Bugs happen. They can be discovered during development, through automated or manual testing, and by clients in production. I will cover basic debugging steps that can work for any type of website, then dive more specifically into debugging in Plone.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chrissy Wainwright</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/debugging-your-plone-site.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Deploying A Simple Python App to Kubernetes/OpenShift</title><link>https://pyvideo.org/python-web-conf-2021/deploying-a-simple-python-app-to-kubernetesopenshift.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Deploying A Simple Python App to Kubernetes/OpenShift&amp;quot; by: JJ Asghar&lt;/p&gt;
&lt;p&gt;JJ will walk you through deploying a simple python application to Kubernetes/OpenShift. We’ll start from the ground up, then get a complete automated build. The goal is to enable your developers to focus on code, not the infrastructure! It’s a chance to see the power of OpenShift and why taking the time to learn cloud native development can get you the velocity you need.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">JJ Asghar</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/deploying-a-simple-python-app-to-kubernetesopenshift.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Deploying a Virtual Event Platform Using Fargate and Terraform</title><link>https://pyvideo.org/python-web-conf-2021/deploying-a-virtual-event-platform-using-fargate-and-terraform.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Deploying a Virtual Event Platform Using Fargate and Terraform&amp;quot; by: Calvin Hendryx-Parker&lt;/p&gt;
&lt;p&gt;Learn to leverage cloud native tools and launch a scalable application into the Cloud with Fargate. We’ll dive in with how to getting up and running fast, but leaving the overhead of managing virtual machines and Kubernetes behind. Create and store the application Docker images in ECR and without touching the AWS console we can create fully Infrastructure as Code automated deployments via CodePipeline into Fargate containers and S3 buckets. Deliver the React application via CloudFront and S3 for full global scalability. Leave the legacy deployments behind and forge bravely into the new world of Cloud applications.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Calvin Hendryx-Parker</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/deploying-a-virtual-event-platform-using-fargate-and-terraform.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Deploying ML Solutions With Low Latency In Python</title><link>https://pyvideo.org/python-web-conf-2021/deploying-ml-solutions-with-low-latency-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Deploying ML Solutions With Low Latency In Python&amp;quot; by: Aditya Lohia
When we aim for better accuracies, sometimes we forget that the algorithms become more massive and slower. This fact renders the algorithms unusable in real-time scenarios. How do you deploy your solution? Which framework to use? Can you use Python for deploying my solution? Can you use Jetson Nano for multi-stream inferencing? If you are curious to solve these questions, join me in this talk to discover TensorRT and DeepStream and how they reduce your algorithm’s latency and memory footprint. NVIDIA TensorRT™ is an SDK for high-performance deep learning inference. It includes a deep learning inference optimizer and runtime that delivers low latency and high-throughput for deep learning inference applications. DeepStream offers a multi-platform scalable framework with TLS security to deploy on edge and connect to any cloud. If you are using a GPU and CUDA/Tensor cores, you can leverage the SDK framework to deploy bigger and better algorithms for your real-time scenarios. The main focus of this talk will be to demonstrate why, where, and how to use TensorRT and DeepStream.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aditya Lohia</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/deploying-ml-solutions-with-low-latency-in-python.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Design Thinking in Artificial Intelligence Systems</title><link>https://pyvideo.org/python-web-conf-2021/design-thinking-in-artificial-intelligence-systems.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Design Thinking in Artificial Intelligence Systems&amp;quot; by: Jatin Gupta
Design Thinking is a sought-after practice in the design world but is hardly talked about in the field of AI. As AI continues to impact millions of people around the world, having a conversation about how design thinking can be used to better design AI systems becomes that much more important.
Broadly, this talk will cover the following topics:
1. Principles of Design Thinking and its significance in AI
2. AI Ethics
3. A set of guiding principles and frameworks that teams can use to design their AI systems
4. Case studies and stories where design thinking can be/has been applied&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jatin Gupta</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/design-thinking-in-artificial-intelligence-systems.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Don’t Panic: Software Teams and the 'Somebody Else’s Problem'</title><link>https://pyvideo.org/python-web-conf-2021/dont-panic-software-teams-and-the-somebody-elses-problem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Don’t Panic: Software Teams and the 'Somebody Else’s Problem'&amp;quot; by: Hayley Denbraver&lt;/p&gt;
&lt;p&gt;Of all the strange things in the galaxy, the SEP Field might be the strangest. A Somebody Else’s Problem field renders something not invisible, but unnoticed. An SEP field relies on people’s natural disposition not to see anything they don’t want to, weren’t expecting, or can’t explain.&lt;/p&gt;
&lt;p&gt;Where might SEP fields be in your software? Where are they in your teams? What intergalactic threat is waiting for you, out in the open but entirely ignored?&lt;/p&gt;
&lt;p&gt;First, don’t panic. Second, make sure you have your towel. Third, forgive the speaker for her Hitchhiker’s Guide to the Galaxy jokes. Finally, confront the problems in front of you. All 42 of them.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hayley Denbraver</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/dont-panic-software-teams-and-the-somebody-elses-problem.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Ejector Seats and Escape Hatches: Designing Your API to Fail</title><link>https://pyvideo.org/python-web-conf-2021/ejector-seats-and-escape-hatches-designing-your-api-to-fail.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Ejector Seats and Escape Hatches: Designing Your API to Fail&amp;quot; by: Meredydd Luff
I hate to break it to you: Your API design isn't perfect. Whatever abstraction you create, it will leak, and it will fail. I don't mean throwing errors; I mean something worse: building an API that doesn't allow what your users need to do.
We've got this problem big-style at Anvil, where we're simplifying web development by letting you build &lt;em&gt;everything&lt;/em&gt;  in Python - including the UI and browser-side code. It's a challenge: the existing HTML/JS/CSS/framework ecosystem is fiendishly complex, and so huge that we can't possibly cover everything in a nice, Pythonic API - however carefully we design it.
So we need to design our APIs to fail - and to fail well. In this talk, I'll be asking:
- How do abstractions fail?
- What happens when your abstraction prevents a user from doing what they need?
- What are common strategies &amp;quot;in the wild&amp;quot;? Do you go down with the ship? Do you eject? Or can you build a real escape hatch?&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Meredydd Luff</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/ejector-seats-and-escape-hatches-designing-your-api-to-fail.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Event-Driven applications: Apache Kafka and Python</title><link>https://pyvideo.org/python-web-conf-2021/event-driven-applications-apache-kafka-and-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Event-Driven applications: Apache Kafka and Python&amp;quot; by: Francesco Tisiot
Code and data go together like tomato and basil; not many applications work without moving data in some way. As our applications modernise and evolve to become more event-driven, the requirements for data are changing. In this session we will explore Apache Kafka, a data streaming platform, to enable reliable real-time data integration for your applications.&lt;/p&gt;
&lt;p&gt;We will look at the types of problems that Kafka is best at solving, and show how to use it in your own applications. Whether you have a new application or are looking to upgrade an existing one, this session includes advice on adding Kafka using the Python libraries and includes code examples (with bonus discussion of pizza toppings) to use.&lt;/p&gt;
&lt;p&gt;With Kafka in place, many things are possible so this session also introduces Kafka Connect, a selection of pre-built connectors that you can use to route events between systems and integrate with other tools. This session is recommended for engineers and architects whose applications are ready for next-level data abilities.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Francesco Tisiot</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/event-driven-applications-apache-kafka-and-python.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Finding, and Leading, with Purpose at Work</title><link>https://pyvideo.org/python-web-conf-2021/finding-and-leading-with-purpose-at-work.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wanted to be a better leader?
Have you ever wanted to understand people better?
Do you want to have more personal purpose and ability to help others find the same? Join John Qualls as he addresses these questions, and more.&lt;/p&gt;
&lt;p&gt;This tutorial will be broken into three topics:
Topic 1 - Why do I / they behave this way?
- What is purpose?
- What is a purpose driven individual?
- Understanding behaviors and how they drive us
- Why assessments suck!
- Break (10 min)
- Review of a behavior profile (you will have your personal profile distributed to you)
- The 4 big misalignments of people
- Break (2 Min)&lt;/p&gt;
&lt;p&gt;Topic 2 - How soft skills and EQ development is holding you back
- Why are soft skills and EQ important?
- How are they different than behaviorals?
- Break (15 min)
- Review of a soft skill/ EQ profile (you will have your personal profile distributed to you)
- Break (2min)&lt;/p&gt;
&lt;p&gt;Topic 3 - How I / we work together
- You won't get there alone
- Review of Group Behavioral Analytics (We'll review THIS group live)
- Review of Group Soft Skill/ EQ Analytics (We'll review THIS group live)
- Supercharging your professional growth
- Wrap up&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Qualls</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/finding-and-leading-with-purpose-at-work.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>From Code To Community – How Do You Run An Open Source Project?</title><link>https://pyvideo.org/python-web-conf-2021/from-code-to-community-how-do-you-run-an-open-source-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;From Code To Community – How Do You Run An Open Source Project?&amp;quot; by: Uli Hitzel
We’re all using Open Source projects and libraries for the things we build – but who is behind those projects? How do you publish your own stuff in the community ‘App Store’? And most importantly, how do you get people to use your stuff and help make it better?&lt;/p&gt;
&lt;p&gt;In this talk I’ll share my experience starting an Open Source project, we’ll speak about the various ways people can contribute, and what else you need besides being a great developer. Ultimately, I’m hoping to find people who are keen to collaborate on some of the projects I’ve started!&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Uli Hitzel</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/from-code-to-community-how-do-you-run-an-open-source-project.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Hacking Django Channels for Fun (and Profit)</title><link>https://pyvideo.org/python-web-conf-2021/hacking-django-channels-for-fun-and-profit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Hacking Django Channels for Fun (and Profit)&amp;quot; by: Calvin Hendryx-Parker&lt;/p&gt;
&lt;p&gt;Django is growing some great async features and Channels has been great for handling websockets connecting from your visitor's browser. But what happens when you need to do more? What if you want to keep long-running connections from Django to other websockets, such as Discord servers?  How do you do this and still leverage all the batteries included with Django? We will show an approach that makes this all possible and easy as a developer.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Calvin Hendryx-Parker</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/hacking-django-channels-for-fun-and-profit.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>How To Get On This Stage (And What To Do When You Get There)</title><link>https://pyvideo.org/python-web-conf-2021/how-to-get-on-this-stage-and-what-to-do-when-you-get-there.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;How To Get On This Stage (And What To Do When You Get There)&amp;quot; by: Mark Smith
Speaking at a programming conference may seem like an impossible goal for many people, for a number of reasons: fear of public speaking, the feeling that you don’t know enough to give a talk, you don’t think you have any good ideas for a talk, or maybe the idea that public speaking is very difficult. I’m going to persuade you that you should get up on stage and give a talk to your peers. Once I’ve persuaded you that you should give a talk, then I’m going to show you how.&lt;/p&gt;
&lt;p&gt;Coming up with an idea
Coming up with an idea can sometimes be the hardest part! I’ll cover how to get (and keep) ideas by looking at what you do every day, what you know most about, and keeping a notebook of ideas so that when the time comes to submit a proposal, you’ll have plenty of choice.&lt;/p&gt;
&lt;p&gt;Submitting a proposal
Submitting a proposal to a CFP can seem quite daunting. Even if it doesn’t seem daunting, there are a bunch of things you can get wrong that make it less likely for your talk to be accepted. I’ll give you several tips for increasing your chances of being selected. I’ll also talk about rejection and why you shouldn’t feel dejected about being rejected. (It happens to everyone!)&lt;/p&gt;
&lt;p&gt;Writing a talk
I’ll describe some processes for writing a talk and building a slide deck to match (if you want to!) I’ll cover some different styles of public speaking, including how to find your own style, and I’ll talk about live coding. (With a strong recommendation that you shouldn’t do it - at least until you’ve got more experience.)&lt;/p&gt;
&lt;p&gt;Preparation
Practice, practice, practice! Many inexperienced speakers underestimate how much rehearsal is required to give a great talk; I’m going to correct this misunderstanding! I’ll cover some different approaches to ensuring that you’re less nervous when it’s time to step on to the stage, and you’ve maximized your chances of your talk going smoothly.&lt;/p&gt;
&lt;p&gt;Giving your talk
After you’ve had an idea, had your proposal accepted, written your talk, designed your slides, and practiced (and practiced and practiced) it’ll be time to step behind the lectern and give your talk! I’ll give you tried and tested advice from experienced speakers to help your talk go smoothly.&lt;/p&gt;
&lt;p&gt;And you know what? Even if some things go wrong you’ll still be applauded enthusiastically by an audience of your peers!&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Smith</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/how-to-get-on-this-stage-and-what-to-do-when-you-get-there.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>How To Make Meetings Shorter, More Productive, and More Fun!</title><link>https://pyvideo.org/python-web-conf-2021/how-to-make-meetings-shorter-more-productive-and-more-fun.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;How To Make Meetings Shorter, More Productive, and More Fun!&amp;quot; by: Gabrielle Hendryx-Parker
Traditional meetings are plagued by a series of bad practices that leave participants frustrated, angry or bored out of their skulls. Whether it’s a lack of clear agenda, too many participants and no decision-maker, people on their screens not paying attention, or the group going down the rabbit hole on non-critical issues, the time you are spending in this meeting isn’t productive and you know it! Here’s instead a different format that guarantees that meetings start and end on time, keep participants engaged, focus on key issues, and make some serious progress each time the team meets. Oh, and you’ll have fun too. Sounds good? Then let’s dive in.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gabrielle Hendryx-Parker</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/how-to-make-meetings-shorter-more-productive-and-more-fun.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Intro to Pydantic, Run-Time Type Checking For Your Dataclasses</title><link>https://pyvideo.org/python-web-conf-2021/intro-to-pydantic-run-time-type-checking-for-your-dataclasses.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Intro to Pydantic, Run-Time Type Checking For Your Dataclasses&amp;quot; by: Alexander Hultnér&lt;/p&gt;
&lt;p&gt;Want static type checking in run time? Want to use standard python type annotations? Want compatibility with standard python dataclasses? Then it sounds like pydantic is something for you. Pydantic offers a pythonic way to validate your user data using run-time enforced standard type-annotations.&lt;/p&gt;
&lt;p&gt;This talk focuses on how Pydantic can be used with web APIs to simplify many parts regarding user input validation. I’ve previously back in early 2018 built a similar solution to Pydantic based upon standard dataclasses for a large B2B SaaS application built with flask. When I left that project I was briefly considered rebuilding it as open source but while doing my research I discovered Pydantic’s powers which I had put in my keep tabs on list when it was in an much earlier stage, but at this point it had evolved to a really polished library and a perfect companion for JSON-based APIs.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Hultnér</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/intro-to-pydantic-run-time-type-checking-for-your-dataclasses.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Keynote: Async, Python, and the Future</title><link>https://pyvideo.org/python-web-conf-2021/keynote-async-python-and-the-future.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Keynote: Async, Python, and the Future&amp;quot; by: Andrew Godwin
It's been over five years since &amp;quot;await&amp;quot; made it into Python, and much longer still since the first async frameworks brought us their mysterious power to serve multiple web requests at once. But where are we now? What inroads have we made?
Join us as we take a look at the current state of the Python libraries, frameworks and projects dealing with async; some thoughts on lessons we can learn from the process; and a look forward at upcoming projects, ideas and potential ways we can change, adapt, and embrace async as a part of Python web programming.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Godwin</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/keynote-async-python-and-the-future.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Keynote: Making Sense of Measures</title><link>https://pyvideo.org/python-web-conf-2021/keynote-making-sense-of-measures.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Keynote: Making Sense of Measures&amp;quot; by: Damiaan Zwietering
Starting as a side project in Python about a year ago, I looked at COVID-19 data from various angles, testing my long experience as a data scientist. Aside from exploration, visualization and mapping we can have a look at what I found when relating mitigation measures to outbreak severity for countries worldwide. It will show you how these analyses typically become an exercise in interpretation, with all the related pitfalls and limitations. Join me for a session full of hands on examples showing you the daily practice of working with Python as your tool of choice for analysis.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damiaan Zwietering</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/keynote-making-sense-of-measures.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Keynote: Redesigning the Tech Talent Pipeline</title><link>https://pyvideo.org/python-web-conf-2021/keynote-redesigning-the-tech-talent-pipeline.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Keynote: Redesigning the Tech Talent Pipeline&amp;quot; by: Linda Calvin
As tech evolves, we must think differently about sourcing talent. We'll discuss industry statistics, demystifying computer science, what the job description looks like, and 4 year vs. ..?&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Linda Calvin</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/keynote-redesigning-the-tech-talent-pipeline.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>KEYNOTE: Why the Neurodiversity Movement Will Change the World</title><link>https://pyvideo.org/python-web-conf-2021/keynote-why-the-neurodiversity-movement-will-change-the-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;KEYNOTE: Why the Neurodiversity Movement Will Change the World&amp;quot; by: Mark Fister&lt;/p&gt;
&lt;p&gt;Have you ever wondered what’s special about Einstein, Mozart, and Michelangelo?&lt;/p&gt;
&lt;p&gt;Have you ever wondered if your company will ever go from Management to True Leadership?&lt;/p&gt;
&lt;p&gt;Have you ever wondered if your company will ever be more equitable and inclusive of people who are different?&lt;/p&gt;
&lt;p&gt;And what in tarnation do these three questions have to do with each other?&lt;/p&gt;
&lt;p&gt;Come to this talk about the Neurodiversity Movement to find out.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Fister</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/keynote-why-the-neurodiversity-movement-will-change-the-world.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Lessons Learned Converting Snyk Codebase To TypeScript</title><link>https://pyvideo.org/python-web-conf-2021/lessons-learned-converting-snyk-codebase-to-typescript.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Lessons Learned Converting Snyk Codebase To TypeScript&amp;quot; by: Lili Kastilio
Over the past 18 months Snyk has been converting their entire codebase to TypeScript, I would like to share the reasons, motivations and lessons learned with others thinking to do the same. There have been wins and bumps along the way but overall they left their codebase in a much better place than ever before.&lt;/p&gt;
&lt;p&gt;Take a look where we got to so far, what slowed us down in some places and what was our plan to complete the migration to 100% of the codebase.&lt;/p&gt;
&lt;p&gt;Many companies are thinking of using TypeScript but may be scared to do so, I hope this talk can share some insight into what this journey is like.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lili Kastilio</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/lessons-learned-converting-snyk-codebase-to-typescript.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Let REST Do Rest: Deep Dive In GraphQL With Django</title><link>https://pyvideo.org/python-web-conf-2021/let-rest-do-rest-deep-dive-in-graphql-with-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Let REST Do Rest: Deep Dive In GraphQL With Django&amp;quot; by: Nisarg Shah&lt;/p&gt;
&lt;p&gt;GraphQL is a query language and uses a schema based approach. It has only one endpoint and client can request the needed data. While building APIs, schema can be fixed and teams can work independently as the structure is fixed.&lt;/p&gt;
&lt;p&gt;I will initiate my talk with some overview on GraphQL APIs and concepts of GraphQL. Following that, I will cover some core concepts which are required for developing some basic queries and mutations. Those concepts will include fields, object types, schema, resolvers, etc. Along with this, I will cover the N+1 problem of GraphQL queries and will look into a way to optimize the GraphQL queries for solving this problem.&lt;/p&gt;
&lt;p&gt;Also versioning of GraphQL APIs is not similar to versioning of REST APIs, it’s quite different and interesting. Only updates of schema fields are needed. Many times GraphQL is used, but in some cases REST is preferred over GraphQL.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nisarg Shah</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/let-rest-do-rest-deep-dive-in-graphql-with-django.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>LocalStack: Developing for AWS without AWS</title><link>https://pyvideo.org/python-web-conf-2021/localstack-developing-for-aws-without-aws.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;LocalStack: Developing for AWS without AWS&amp;quot; by: Aly Sivji&lt;/p&gt;
&lt;p&gt;Amazon Web Services (AWS) has over 175 managed services: from leveraging S3 as a storage bucket to developing voice-enabled applications with Alexa, developers can solve complex problems with a few API calls. You pay Amazon a little more and you ship products a lot faster.&lt;/p&gt;
&lt;p&gt;The question isn't should you use managed services, but how best to bring them into your organization's existing processes and workflows. You probably already have one, or more than one, AWS account to support different development environments. Setting up new resources for each team/developer to test against is going to be a lot of work related to IAM roles, policies, and permissions. Also, API calls are not free; development and testing workflows that use AWS resources cost money.&lt;/p&gt;
&lt;p&gt;Enter LocalStack. LocalStack is a testing framework used to develop cloud-native applications. Start a container and write code against a local environment that has the same functionality and APIs as AWS! This talk will discuss how to integrate LocalStack into your project by demonstrating several basic and advanced workflows. The session is geared towards intermediate and advanced developers that use AWS.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aly Sivji</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/localstack-developing-for-aws-without-aws.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Looking Outside Your Network</title><link>https://pyvideo.org/python-web-conf-2021/looking-outside-your-network.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Looking Outside Your Network&amp;quot; by: Ariel Crawley
Join me as we discuss what IT leaders and members can do to help broaden the DEI space by bringing in members outside their network. I'll highlight our organization - Indy Women in Tech - and others groups working to bring in more women, LGBTQ, Bootcamp participants, community college grads, and people of color into the tech workforce.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ariel Crawley</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/looking-outside-your-network.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Making Process Work For Your Dev Team</title><link>https://pyvideo.org/python-web-conf-2021/making-process-work-for-your-dev-team.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Making Process Work For Your Dev Team&amp;quot; by: Adrienne Lowe&lt;/p&gt;
&lt;p&gt;“I hate process.” Ever heard anyone say that? If you’ve worked on a team with slow, inflexible, and bloated processes that led to poor communication and low morale, you've got every right to say it! But it doesn’t have to be that way. Process can be a force for good on your team: for enhancing communication and alignment, for documenting shared values and commitments, and for making our work more inclusive and accessible to folks beyond our immediate team.
In this talk, you'll learn the how and why of creating and refining processes that have better buy-in, more flexibility, and more closely reflect the changing reality of our teams and goals. Whether you're a developer or a manager, and regardless of which &amp;quot;flavor&amp;quot; of Agile is your favorite (or not), you can be a force for good on your team by advocating for processes that are changeable, adaptable, documented, and have evaluation built in. Come learn how!&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrienne Lowe</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/making-process-work-for-your-dev-team.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Making Sanic Even Faster</title><link>https://pyvideo.org/python-web-conf-2021/making-sanic-even-faster.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Making Sanic Even Faster&amp;quot; by: Adam Hopkins
Sanic is one of the fastest growing frameworks in the Python world. But it is also simply one of the fastest Python web servers. This year, we are making it even faster.&lt;/p&gt;
&lt;p&gt;There are a number of under the hood changes planned for 2021 as Sanic gears up for its first “stable” release at the end of the year. You can read about some of the changes here: &lt;a class="reference external" href="https://community.sanicframework.org/t/2021-development-plan/783"&gt;https://community.sanicframework.org/t/2021-development-plan/783&lt;/a&gt;
This talk will focus on &lt;em&gt;why&lt;/em&gt; these changes are being made, and &lt;em&gt;how&lt;/em&gt; we are achieving them.&lt;/p&gt;
&lt;p&gt;Time permitting, I will also do a little demonstration about deploying production ready, high performance applications in the new world and show the practical impact.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Hopkins</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/making-sanic-even-faster.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Maps with Django</title><link>https://pyvideo.org/python-web-conf-2021/maps-with-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Maps with Django&amp;quot; by: Paolo Melchiorre&lt;/p&gt;
&lt;p&gt;A map in a website is the best way to make geographic data easily accessible to users because it represents, in a simple way, the information relating to a specific geographical area and is in fact used by many online services.&lt;/p&gt;
&lt;p&gt;Implementing a web map can be complex and many adopt the strategy of using external services, but in most cases this strategy turns out to be a major data and cost management problem.&lt;/p&gt;
&lt;p&gt;In this talk we’ll see how to create a web map with the Python based web framework Django using its GeoDjango module, storing geographic data in your local database on which to run geospatial queries.&lt;/p&gt;
&lt;p&gt;Through this intervention you can learn how to add a map on your website, starting from a simple map based on Spatialite/SQLite up to a more complex and interactive map based on PostGIS/PostgreSQL.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paolo Melchiorre</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/maps-with-django.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Modeling Financial Data In Cassandra To Serve Real Time + Batch Workloads</title><link>https://pyvideo.org/python-web-conf-2021/modeling-financial-data-in-cassandra-to-serve-real-time-batch-workloads.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Modeling Financial Data In Cassandra To Serve Real Time And Batch Workloads At Same Time&amp;quot; by: Gokul Prabagaren
This talk will explain how we have modeled customer rewards data in CapitalOne using Apache Cassandra to serve Real time microservice based workloads ( Customer accessing their rewards online ) and batch Apache Spark workloads ( Customer statements ) at same time.&lt;/p&gt;
&lt;p&gt;CapitalOne being Tech Company in Banking business, we are 100% Cloud operated Company. All our workloads are Cloud Native. This talk covers one of such use case which will explain how we have modeled customer rewards data in CapitalOne using Apache Cassandra to serve Real time microservice based workloads and batch Apache Spark workloads at same time. When customer accesses their Rewards from web or Customer receives their Rewards in Statements the Cassandra table we modeled plays a central role and services both the different workloads at same time. This talk will cover how Cassandra data is used by Spring based microservice and Spark based batch workload. I am part of team which designed and developed this application ground up and serving millions of customers now.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gokul Prabagaren</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/modeling-financial-data-in-cassandra-to-serve-real-time-batch-workloads.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Mystery ML: Classifying Text w/ Recurrent Neural Networks, Keras, Scoob and the Gang</title><link>https://pyvideo.org/python-web-conf-2021/mystery-ml-classifying-text-w-recurrent-neural-networks-keras-scoob-and-the-gang.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Mystery Machine Learning: Classifying Text with Recurrent Neural Networks, Keras, and Scoob and the Gang&amp;quot; by: Guy Royse&lt;/p&gt;
&lt;p&gt;Jinkies! Spoiler Alert! If you’ve seen Scooby-Doo, you know who the monster always is—Old Man Withers, the guy who runs the amusement park. Amusement park operators like Old Man Withers have caused Mystery, Inc. all sorts of problems over the years. Problems that could be avoided with a properly trained recurrent neural network. With RNNs, Scoob and the Gang could have built a model to classify everyone’s speech. This would show them that Old Man Withers and Redbeard’s Ghost sounded a lot alike!&lt;/p&gt;
&lt;p&gt;We can help Mystery, Inc. with this problem by building a recurrent neural network to do just that. You know we got a mystery to solve, and we’re going to solve it by building our model using lines from Scooby-Doo, Keras, and TensorFlow. Once we have our model, we’ll host it on RedisAI so we can quickly build an application to make use of it. Well, we’ve got some work to do now.&lt;/p&gt;
&lt;p&gt;I will also explain what neural networks are in general, what recurrent neural networks are in particular, and discuss some practical use of this technology. When we’re done, you’ll know how to build RNNs with Keras, use them to classify text, and integrate them into your application. But more importantly, you’re going to have yourself a Scooby snack! That’s a fact!&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guy Royse</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/mystery-ml-classifying-text-w-recurrent-neural-networks-keras-scoob-and-the-gang.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Plone for News Portals</title><link>https://pyvideo.org/python-web-conf-2021/plone-for-news-portals.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;dl class="docutils"&gt;
&lt;dt&gt;&amp;quot;Plone for News Portals&amp;quot; by: Érico Andrei&lt;/dt&gt;
&lt;dd&gt;Out-of-the-box Plone is already a good solution for news portals but with some tricks and integrations, it can scale to support a scenario with multiple editors and collaborators.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Érico Andrei</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/plone-for-news-portals.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Practical AI: Computer Vision</title><link>https://pyvideo.org/python-web-conf-2021/practical-ai-computer-vision.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Practical AI: Computer Vision&amp;quot; by: Maxwell Ogunfunwa&lt;/p&gt;
&lt;p&gt;In this current era of the internet, much of our knowledge transfer is happening via multimedia formats namely images. As a result, computer vision has blossomed, becoming the front runner in the race to actualizing artificial intelligence. In the past 5 years many state-of-the-art models have been created making computer vision more accessible to businesses.&lt;/p&gt;
&lt;p&gt;In this talk, I will explain how a modern business model can quickly adapt to these changing times and utilize computer vision to enhance their digital assets.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Maxwell Ogunfunwa</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/practical-ai-computer-vision.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Programming For Pleasure</title><link>https://pyvideo.org/python-web-conf-2021/programming-for-pleasure.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Programming For Pleasure&amp;quot; by: Daniele Procida
As programmers, we’re very lucky - our work is often creative and enjoyable, and the culture of programming itself is inventive and playful. It’s not surprising that one of the things that programmers like to do in their spare time is more programming. Programming can be a pleasure in itself. What we don’t usually recognise is that the effect of this is to make the software we create worse rather better. If we want to make better software, we need to start programming not for pleasure, but for pain.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniele Procida</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/programming-for-pleasure.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Python 1994</title><link>https://pyvideo.org/python-web-conf-2021/python-1994.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Python 1994&amp;quot; by: Paul Everitt&lt;/p&gt;
&lt;p&gt;“Come for the language, stay for the community.” The Python community started in 1994 at a NIST workshop in Maryland. What was the world of Python like in its first years? Did we have any clue whatsoever? A joke-focused tour of early Python, heavy on question-and-answer.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/python-1994.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Python + AutoML Vision = Automated Document Analysis</title><link>https://pyvideo.org/python-web-conf-2021/python-automl-vision-automated-document-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Python + AutoML Vision = Automated Document Analysis&amp;quot; by: Kim Nguyen and Shane Hathaway
Google’s AutoML Vision service is a great new tool. A client of ours had a time intensive process for classifying and routing documents. Using AutoML and Python, we helped them prototype and deploy a machine learning model to reduce the frequency of errors and accelerate overall processing of thousands of documents a day. We will describe the solution and present lessons learned.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kim Nguyen</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/python-automl-vision-automated-document-analysis.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Python Memory Deep Dive for Speed and Efficiency</title><link>https://pyvideo.org/python-web-conf-2021/python-memory-deep-dive-for-speed-and-efficiency.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Python Memory Deep Dive for Speed and Efficiency&amp;quot; by: Michael Kennedy
Python's memory story is not often told. We hear it uses reference counting and that's about the end of it. But there is so much more going on. There is also a GC backing up reference counting, why? Instagram turned theirs off and got faster, how? Python classes can be memory hogs. But there is an escape hatch that is almost always available to us which uses much less memory and is faster computationally. Yet, almost no one opens it. You might want to.&lt;/p&gt;
&lt;p&gt;Join Michael Kennedy from Talk Python Training and look at how Python memory works and design patterns for functions and classes making Python more efficient (memory-wise) and get a solid speed boost as a side benefit.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Kennedy</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/python-memory-deep-dive-for-speed-and-efficiency.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Python's NLU library: 1,000+ Models, 200+ Languages, 1 Line of Code</title><link>https://pyvideo.org/python-web-conf-2021/pythons-nlu-library-1000-models-200-languages-1-line-of-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Python's NLU library: 1,000+ Models, 200+ Languages, State of the Art Accuracy, 1 Line of Code&amp;quot; by: Christian Kasim Loan
Harness the power of 1,000+ production-grade, scalable, free &amp;amp; open-source NLP models for 200+ languages - using just 1 line of Python code by leveraging the NLU library which is powered by the award-winning Spark NLP.&lt;/p&gt;
&lt;p&gt;This webinar covers, using live coding in real-time, how to deliver summarization, translation, unsupervised keyword extraction, emotion analysis, question answering, spell checking, named entity recognition, document classification, BERTology Embeddings, and other common NLP tasks. This is all done with a single line of code, that works directly on Python strings or pandas data frames. Since NLU is based on Spark NLP, no code changes are required to scale processing to a multi-core or cluster environment - integrating natively with Ray, Dask, or Spark data frames.&lt;/p&gt;
&lt;p&gt;The recent releases for Spark NLP and NLU include pre-trained models for over 200 languages and language detection for 375 languages. This includes 20 languages families; non-Latin alphabets; languages that do not use spaces for word segmentation like Chinese, Japanese, and Korean; and languages written from right to left like Arabic, Farsi, Urdu, and Hebrew. We'll also cover some of the algorithms and models that are included. The code notebooks will be freely available online.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Kasim Loan</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/pythons-nlu-library-1000-models-200-languages-1-line-of-code.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>PyTorch To Build NLP Models Using Amazon SageMaker and Amazon Elastic Inference</title><link>https://pyvideo.org/python-web-conf-2021/pytorch-to-build-nlp-models-using-amazon-sagemaker-and-amazon-elastic-inference.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;PyTorch To Build NLP Models Using Amazon SageMaker and Amazon Elastic Inference&amp;quot; by: Suman Debnath
Implementing natural language processing (NLP) models just got simpler and faster. In this talk, we introduce BERT (Bidirectional Encoder Representation from Transformers), a state-of-the-art (SOTA) NLP model, and demonstrate how it can be used for various NLP tasks. Learn how to implement NLP models to quickly prototype products, validate new ideas, and learn SOTA NLP. And at the end we will also demo how we can use PyTorch with Amazon SageMaker to fine-tune the BERT model and deploy it with Elastic Inference.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Suman Debnath</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/pytorch-to-build-nlp-models-using-amazon-sagemaker-and-amazon-elastic-inference.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Rackio Framework - Bring the Power of Python into SBC</title><link>https://pyvideo.org/python-web-conf-2021/rackio-framework-bring-the-power-of-python-into-sbc.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Rackio Framework - Bring the Power of Python into SBC&amp;quot; by: Antonio Carrasquel
Rackio Framework is a modern Framework to develop microboard automation and control applications with Python. It implements a declarative approach to define the behavior of Automation, SCADA, Data Acquisition, Alarm and Logging IIoT applications.&lt;/p&gt;
&lt;p&gt;It was developed to bring automation and control engineers the capability of developing high end industrial solutions. Inspired by Django, Flask and Scrapy, Rackio comes with built-in batteries to make common operations and tasks in the automation field.&lt;/p&gt;
&lt;p&gt;With Rackio you can define a web based Human Machine Interface that is served within a Rackio application deployment, so you can set, monitor and admin your system.&lt;/p&gt;
&lt;p&gt;Each Rackio features comes with a built-in REST API and a SocketIO event based API.&lt;/p&gt;
&lt;p&gt;You can also define your custom API or SocketIO endpoints, including custom web pages and routes.&lt;/p&gt;
&lt;p&gt;The greater power of Rackio is it’s declarative approach to define custom State Machines, this way you can integrate Python libraries to perform Data Science, Machine Learning, Deep Learning or any Python code execution.&lt;/p&gt;
&lt;p&gt;Rackio is an ecosystem, with some extensions to level up your applications, such as Swagger-UI, Admin UI and Industrial Communication Protocols.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Antonio Carrasquel</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/rackio-framework-bring-the-power-of-python-into-sbc.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>'Search Party' - Searching your data for treasures!</title><link>https://pyvideo.org/python-web-conf-2021/search-party-searching-your-data-for-treasures.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;'Search Party' - Searching your data for treasures!&amp;quot; by: Sammy Spurlock
The Splunk Search Party Workshop is a hands-on workshop to get familiar with the most popular Splunk search commands, build dashboards, and create an alert. This is a great introduction to Splunk if you are considering it for your organization. Although this hands-on workshop doesn't require any Splunk experience, it's recommended that you complete our free Fundamentals I online training (&lt;a class="reference external" href="https://www.splunk.com/en_us/training/free-courses/splunk-fundamentals-1.html?elqTrackId=c254bb6350cd48c69c133a01506680fa&amp;amp;elqaid=5817&amp;amp;elqat=2"&gt;https://www.splunk.com/en_us/training/free-courses/splunk-fundamentals-1.html?elqTrackId=c254bb6350cd48c69c133a01506680fa&amp;amp;elqaid=5817&amp;amp;elqat=2&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sammy Spurlock</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/search-party-searching-your-data-for-treasures.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Serverless &amp; Microservices Monitoring In An IoT World</title><link>https://pyvideo.org/python-web-conf-2021/serverless-microservices-monitoring-in-an-iot-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Serverless &amp;amp; Microservices Monitoring In An IoT World&amp;quot; by: Erez Berkner
Serverless technology is a great fit for IoT workloads, and indeed we witness a constant growth in usage. When you have many sensors that are very distributed and generate a high volume of invocations, monitoring and troubleshooting become a huge challenge. In this talk we will cover:
- Why microservices, serverless &amp;amp; IoT devices are so difficult to monitor
- Understand the current methods for making microservices, serverless &amp;amp; IoT applications observable
- See best practices for monitoring microservices, serverless &amp;amp; IoT with real-world examples&lt;/p&gt;
&lt;p&gt;Join us and gain back control over your IoT environment.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erez Berkner</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/serverless-microservices-monitoring-in-an-iot-world.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>SQLAlchemy 2.0 - The One-Point-Four-Ening 2021</title><link>https://pyvideo.org/python-web-conf-2021/sqlalchemy-20-the-one-point-four-ening-2021.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;SQLAlchemy 2.0 - The One-Point-Four-Ening 2021&amp;quot; by: Mike Bayer
SQLAlchemy enters the &amp;quot;Python 3 only&amp;quot; world with an all-new rethink of it's Core and ORM APIs known as SQLAlchemy 2.0.   Right now, SQLAlchemy 2.0 is in its transitional &amp;quot;caterpillar to butterfly&amp;quot; state, which is the new SQLAlchemy 1.4 series, currently in beta releases.&lt;/p&gt;
&lt;p&gt;This tutorial will be the premiere of the classic &amp;quot;from the ground up&amp;quot; tutorial of SQLAlchemy re-imagined for the new 2.0 way of working, featuring a much greater consistency between the &amp;quot;Core&amp;quot; and &amp;quot;ORM&amp;quot; experiences.   There will be nary an &amp;quot;engine.execute()&amp;quot; nor a &amp;quot;session.query()&amp;quot; to be found.  New ORM configurational patterns are presented a well.&lt;/p&gt;
&lt;p&gt;Presented in terms of a four-layered model, which include &amp;quot;Engine and Connection Basics&amp;quot;, &amp;quot;Table Metadata&amp;quot;, &amp;quot;SQL Expression Language&amp;quot;, and &amp;quot;ORM Usage&amp;quot;, the tutorial is broken into two sections and API use is presented in terms of a console runner application which participants can install locally and follow along.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Bayer</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/sqlalchemy-20-the-one-point-four-ening-2021.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item></channel></rss>