<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 31 Aug 2017 00:00:00 +0000</lastBuildDate><item><title>FluRS - A Library for Streaming Recommendation Algorithms</title><link>https://pyvideo.org/euroscipy-2017/flurs-a-library-for-streaming-recommendation-algorithms.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="section" id="overview"&gt;
&lt;h4&gt;Overview&lt;/h4&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/takuti/flurs"&gt;FluRS&lt;/a&gt; is a Python library for streaming recommendation algorithms
which enables you to efficiently and flexibly build a recommendation
model from complex user-item data. By focusing around the library, this
talk discusses each aspect of &lt;strong&gt;past&lt;/strong&gt;, &lt;strong&gt;present&lt;/strong&gt; and &lt;strong&gt;future&lt;/strong&gt; as
follows:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Past&lt;/strong&gt;: Challenges in classical recommendation engines (with their
Python implementation),&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Present&lt;/strong&gt;: How the speaker designed and implemented new kinds of
recommendation algorithms as the Python library,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Future&lt;/strong&gt;: The feasibility of fast, real-time recommendation at
scale with or without FluRS.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that, in order to learn the basic concept underlying the FluRS
library, you can refer to the following article: &lt;a class="reference external" href="https://takuti.me/note/flurs/"&gt;FluRS: A Python
Library for Online Item Recommendation&lt;/a&gt;. In short, implementation of
FluRS takes advantage of the dependency injection technique, and
developers do not need to worry much about recommender-specific code
which commonly appears regardless of algorithm.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="target"&gt;
&lt;h4&gt;Target&lt;/h4&gt;
&lt;p&gt;This talk is designed for people who have fundamental knowledge of
machine learning (e.g., &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Matrix_(mathematics)"&gt;matrix computations&lt;/a&gt;, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Gradient_descent"&gt;gradient descent&lt;/a&gt;,
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Cross-validation_(statistics)"&gt;cross validation&lt;/a&gt;) and Python coding with the NumPy &amp;amp; SciPy libraries;
that is, audience does not have to be a professional machine learning
researcher or Python developer. In particular, since the speaker
explains the field of recommender systems from basics, people can enjoy
without previous knowledge of recommendation techniques.&lt;/p&gt;
&lt;p&gt;Eventually, the speaker expects audiences to become able to teach their
friends the basic of recommender systems and implement recommendation
algorithms by themselves.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="background"&gt;
&lt;h4&gt;Background&lt;/h4&gt;
&lt;p&gt;Recommendations nowadays play an important role in real-world
applications such as e-commerce and social networking services in order
to improve customers’ satisfaction, but the widely-developed systems
pose a crucial challenge which cannot be properly handled by the
classical techniques. More concretely, even though users’ interests and
item properties change dynamically over time on modern systems, there is
a lack of effective ways and empirical studies to catch up with the
dynamic data.&lt;/p&gt;
&lt;p&gt;In that context, throughout his master’s program and experience in the
industry, the speaker fully realized how building real-world recommender
systems is difficult over the past years. Thus, he ultimately invented
two novel recommendation techniques to tackle the challenging scenario,
and published corresponding research papers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Incremental Factorization Machines for Persistently Cold-starting
Online Item Recommendation&lt;/strong&gt; [&lt;a class="reference external" href="https://arxiv.org/abs/1607.02858"&gt;Paper&lt;/a&gt;] [&lt;a class="reference external" href="https://speakerdeck.com/takuti/incremental-factorization-machines"&gt;Slides&lt;/a&gt;] [&lt;a class="reference external" href="https://github.com/takuti/stream-recommender/tree/v0.3.1-recprofile-2016"&gt;GitHub&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sketching Dynamic User-Item Interactions for Online Item
Recommendation&lt;/strong&gt; [&lt;a class="reference external" href="http://dl.acm.org/citation.cfm?id=3022152"&gt;Paper.&lt;/a&gt;] [&lt;a class="reference external" href="https://takuti.me/docs/chiir-2017-poster.pdf"&gt;Poster.&lt;/a&gt;] [&lt;a class="reference external" href="https://github.com/takuti/stream-recommender/tree/v0.5.0-chiir-2017-and-thesis"&gt;GitHub.&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notice that, as the GitHub links suggest, these inventions have been
achieved along with the development of FluRS. So, one of the main topics
of this talk is to dig deep into the experience.&lt;/p&gt;
&lt;p&gt;For the reasons mentioned above, FluRS is a “package” of things what the
speaker has experienced in both academia and industry, and hence he
decided to give a talk on the library from a practical point of view.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: All contents are based on the speaker’s own thought, and they do
not reflect the view of any of his previous and current affiliations.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Takuya Kitazawa</dc:creator><pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-31:euroscipy-2017/flurs-a-library-for-streaming-recommendation-algorithms.html</guid></item></channel></rss>