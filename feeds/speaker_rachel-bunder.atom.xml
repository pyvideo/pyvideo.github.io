<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_rachel-bunder.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-08-25T00:00:00+00:00</updated><entry><title>What is the most common street name in Australia?</title><link href="https://pyvideo.org/pycon-au-2018/what-is-the-most-common-street-name-in-australia.html" rel="alternate"></link><published>2018-08-25T00:00:00+00:00</published><updated>2018-08-25T00:00:00+00:00</updated><author><name>Rachel Bunder</name></author><id>tag:pyvideo.org,2018-08-25:pycon-au-2018/what-is-the-most-common-street-name-in-australia.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Finding the most common street name in Australia may sound like a simple thing to do - but it quickly devolves into a scenic tour of all the things that go wrong when doing data analytics.  I'll be giving advice on how to avoid these speed bumps along with how to work with OpenStreetMaps in Python.&lt;/p&gt;
</summary></entry><entry><title>I wish I learnt that earlier!</title><link href="https://pyvideo.org/pycon-au-2016/i-wish-i-learnt-that-earlier.html" rel="alternate"></link><published>2016-08-15T00:00:00+00:00</published><updated>2016-08-15T00:00:00+00:00</updated><author><name>Rachel Bunder</name></author><id>tag:pyvideo.org,2016-08-15:pycon-au-2016/i-wish-i-learnt-that-earlier.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Rachel Bunder
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/154/view_talk"&gt;https://2016.pycon-au.org/schedule/154/view_talk&lt;/a&gt;
Python is an easy language to learn. Many Python programmers just picked it up thinking “It can’t be too different from X, just with indents!”. By learning a language this way you don’t discover the features unique to that language.&lt;/p&gt;
&lt;p&gt;In this talk we’ll take a tour of Python features that are easily missed. This includes list comprehension,  generator functions and the PEP documents. Where appropriate time comparisons between different methods will be given.&lt;/p&gt;
</summary></entry></feed>