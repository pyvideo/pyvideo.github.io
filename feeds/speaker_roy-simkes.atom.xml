<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_roy-simkes.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-08-05T00:00:00+00:00</updated><entry><title>Preparing Apps for Dynamic Scaling</title><link href="https://pyvideo.org/europython-2015/preparing-apps-for-dynamic-scaling.html" rel="alternate"></link><published>2015-08-05T00:00:00+00:00</published><updated>2015-08-05T00:00:00+00:00</updated><author><name>Roy Simkes</name></author><id>tag:pyvideo.org,2015-08-05:europython-2015/preparing-apps-for-dynamic-scaling.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Roy Simkes - Preparing Apps for Dynamic Scaling
[EuroPython 2015]
[24 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;Scalability is a big problem for everyone who wants to grow. In order
to handle the demand, appropriate infrastructure both in terms of
software and hardware should be met. What if hardware was as dynamic
as a service where CPU and RAM could have been acquired when only it's
needed. Is there such an environment? How can you work with it? What
you should be careful of? How your applications should evolve?&lt;/p&gt;
</summary></entry></feed>