<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_massimiliano-pippi.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-06T00:00:00+00:00</updated><entry><title>A Python and a Gopher walk into a bar - Embedding Python in Go</title><link href="https://pyvideo.org/pygotham-2017/a-python-and-a-gopher-walk-into-a-bar-embedding-python-in-go.html" rel="alternate"></link><published>2017-10-06T00:00:00+00:00</published><updated>2017-10-06T00:00:00+00:00</updated><author><name>Massimiliano Pippi</name></author><id>tag:pyvideo.org,2017-10-06:pygotham-2017/a-python-and-a-gopher-walk-into-a-bar-embedding-python-in-go.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You often hear of projects porting between Python and Go. The tradeoffs between the two languages are well known, and the path is well documented with success stories on either end of the journey.  But what if you want—or need—to use both languages in the same application?&lt;/p&gt;
&lt;p&gt;Datadog’s Agent is written in Go, but has a requirement to support a large existing library of Python plugins developed in house and by our community. During the talk we will share the benefits of supporting both languages and lessons learned about how to combine them performantly. From battling cgo to dancing with the GIL as we maintained concurrency, learn from our experiences in combining multiple languages in a single application.&lt;/p&gt;
</summary></entry><entry><title>If code is poetry, then documentation is prose</title><link href="https://pyvideo.org/pycon-italia-2014/if-code-is-poetry-then-documentation-is-prose.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Massimiliano Pippi</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/if-code-is-poetry-then-documentation-is-prose.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Yes, code might be poetry, showing the elegance of the verses, rhythm, expressiveness; but without good documentation that explains what it does, you will likely end up with unsatisfied users or no users at all.&lt;/p&gt;
&lt;p&gt;If anyone had told me I would have spent more time writing documentation than coding, I would not have believed it, but that was before I discovered a simple but powerful law: &amp;quot;more documentation, more users, more contributors&amp;quot;.&lt;/p&gt;
&lt;p&gt;During the talk we will see which are the foundations of good documentation and how documentation can let your open source project take off.&lt;/p&gt;
</summary></entry><entry><title>Se il codice è poesia, la documentazione è prosa.</title><link href="https://pyvideo.org/pycon-italia-2014/se-il-codice-e-poesia-la-documentazione-e-prosa.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Massimiliano Pippi</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/se-il-codice-e-poesia-la-documentazione-e-prosa.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Perché sarà pur vero che il codice ha l'eleganza del verso, può avere un suo ritmo e la sua espressività, ma senza una buona documentazione che ne spieghi il funzionamento, difficilmente avrete degli utenti soddisfatti.&lt;/p&gt;
&lt;p&gt;Se mi avessero detto che avrei finito con lo spendere molto più tempo sulla documentazione di un progetto che sul codice non ci avrei mai creduto, ma era prima di scoprire la semplice e potente implicazione &amp;quot;più documentazione, più utenti, più contributor&amp;quot;.&lt;/p&gt;
&lt;p&gt;Durante il talk vedremo quali sono i principii alla base di una buona documentazione e come questa possa fare da volano al successo del vostro progetto.&lt;/p&gt;
</summary></entry><entry><title>Django 1.7 on App Engine: It cloud work!</title><link href="https://pyvideo.org/pycon-italia-2015/django-17-on-app-engine-it-cloud-work.html" rel="alternate"></link><published>2015-05-29T00:00:00+00:00</published><updated>2015-05-29T00:00:00+00:00</updated><author><name>Massimiliano Pippi</name></author><id>tag:pyvideo.org,2015-05-29:pycon-italia-2015/django-17-on-app-engine-it-cloud-work.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django was actively supported at an early stage of the Python runtime in
App Engine SDK through the notable django-nonrel framework, a fork of
the original project that adds support for NoSql databases. But starting
from the App Engine SDK 1.6.2, released more than two years ago, you can
instead deploy Django’s official releases and take advantages from the
whole stack of the framework. In less than half an hour we’ll see how we
can easily deploy the latest version of Django on the Google Cloud
Platform, taking advantage of the tools and services provided by App
Engine, Cloud SQL and Cloud Storage.&lt;/p&gt;
</summary></entry></feed>