<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_liveweb.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-09-29T00:00:00+00:00</updated><entry><title>Rewriting the Wayback machine's live web proxy in Python</title><link href="https://pyvideo.org/pycon-india-2012/rewriting-the-wayback-machines-live-web-proxy-in-python.html" rel="alternate"></link><published>2012-09-29T00:00:00+00:00</published><updated>2012-09-29T00:00:00+00:00</updated><author><name>Noufal Ibrahim</name></author><id>tag:pyvideo.org,2012-09-29:pycon-india-2012/rewriting-the-wayback-machines-live-web-proxy-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The wayback machine is a high traffic website that has been online for over a decade. It was a mostly Java application. One component of the application is the Liveweb proxy. This is an HTTP proxy that archives a resource which is requested through it and the core data source for the wayback machine.
The liveweb proxy was rearchitected from scratch in Python and deployed on the actual website and has been running for a few months now without a single hitch. There were limitations in the standard library which needed to be worked around, careful tuning of parameters to balance disk I/O and memory usage, fine details of the HTTP protocol that needed to be understood and respected.
This talk discusses the architecture and design of the new system to handle the kind of traffic and patterns which are expected of an archiving proxy and how it was deployed.&lt;/p&gt;
</summary><category term="wayback machine"></category><category term="liveweb"></category><category term="http"></category></entry></feed>