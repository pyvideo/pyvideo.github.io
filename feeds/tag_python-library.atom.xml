<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Python Library</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_python-library.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-10-02T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Developing a Modern Visual Novel Game with Ren'Py</title><link href="https://pyvideo.org/pycon-korea-2022/developing-a-modern-visual-novel-game-with-renpy.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Ha Jae Seung</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/developing-a-modern-visual-novel-game-with-renpy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a &amp;quot;Ren'Py Engine (&lt;a class="reference external" href="https://renpy.org"&gt;https://renpy.org&lt;/a&gt;)&amp;quot; that is useful for developing story-oriented games using Python. I will share the details of adding necessary functions that were not in the engine while making an indie game called &amp;quot;Illusion&amp;quot; using Ren'Py. I implemented a timeline function that shows the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a &amp;quot;Ren'Py Engine (&lt;a class="reference external" href="https://renpy.org"&gt;https://renpy.org&lt;/a&gt;)&amp;quot; that is useful for developing story-oriented games using Python. I will share the details of adding necessary functions that were not in the engine while making an indie game called &amp;quot;Illusion&amp;quot; using Ren'Py. I implemented a timeline function that shows the choices made by the player while playing the game and allows them to try different choices. I implemented a function that downloads and updates DLC or updated information through the server. I will explain what I considered and how I collaborated while making these functions. (It does not cover how to make a game with Ren'Py or modifying the GUI.)&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>Development of a Markdown parser that extends code block functionality</title><link href="https://pyvideo.org/pycon-korea-2022/development-of-a-markdown-parser-that-extends-code-block-functionality.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Lim Chan-sik</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/development-of-a-markdown-parser-that-extends-code-block-functionality.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When writing a document explaining the code, I mainly use a Markdown document. I usually list the entire code first and then explain the related code parts again. At this time, if the code has line numbers, it is easy to specify the code and it can help to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When writing a document explaining the code, I mainly use a Markdown document. I usually list the entire code first and then explain the related code parts again. At this time, if the code has line numbers, it is easy to specify the code and it can help to find it. For this, I use the PLY (Python Lex-Yacc) project to define additional grammar in the code block and develop a Markdown parser that parses it.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>Finding Order in the Chaos of Matplotlib</title><link href="https://pyvideo.org/pycon-korea-2022/finding-order-in-the-chaos-of-matplotlib.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Lee Je-Hyeon</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/finding-order-in-the-chaos-of-matplotlib.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many people start learning Python while studying data analysis and machine learning. For these people, Matplotlib, a data visualization library, is an essential program that they must learn along with numpy and pandas. However, in the rush to learn many functions, they often skip over the object-oriented method that …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many people start learning Python while studying data analysis and machine learning. For these people, Matplotlib, a data visualization library, is an essential program that they must learn along with numpy and pandas. However, in the rush to learn many functions, they often skip over the object-oriented method that can effectively visualize data. In this presentation, we will experience the object-oriented method and learn how to widely use the Matplotlib ecosystem through the process of creating a picture close to the best data visualization example.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>How do asyncio libraries work?</title><link href="https://pyvideo.org/pycon-korea-2022/how-do-asyncio-libraries-work.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Jo Seong-bin</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/how-do-asyncio-libraries-work.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We frequently use various libraries that support asyncio, such as asynchronous web frameworks, asynchronous database libraries, asynchronous web servers, and aiohttp, but the asyncio network API that makes up these frameworks is not often covered. In this session, we will cover network-related APIs provided by the asyncio library, such …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We frequently use various libraries that support asyncio, such as asynchronous web frameworks, asynchronous database libraries, asynchronous web servers, and aiohttp, but the asyncio network API that makes up these frameworks is not often covered. In this session, we will cover network-related APIs provided by the asyncio library, such as asyncio.Transport, asyncio.Protocol, and asyncio.Server.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>Let's try real-time data processing with Python</title><link href="https://pyvideo.org/pycon-korea-2022/lets-try-real-time-data-processing-with-python.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Kim Tae-hong</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/lets-try-real-time-data-processing-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the past few years, there have been many introductions on the development of real-time data processing and analysis systems. In particular, data pipelines using Apache Kafka are being developed. I would like to share my experience developing an Apache Kafka consumer using Python through the system development process …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the past few years, there have been many introductions on the development of real-time data processing and analysis systems. In particular, data pipelines using Apache Kafka are being developed. I would like to share my experience developing an Apache Kafka consumer using Python through the system development process called real-time threat analysis. Through this presentation, I hope to be helpful to those who want to develop a service that collects real-time data to Apache Kafka and quickly develops a consumer using Python to process data. The main contents of this presentation are as follows. - Concepts required for data pipeline development - Introduction to Python Kafka client library - Experience in developing real-time data processing pipelines For questions and inquiries, please contact &lt;a class="reference external" href="mailto:rlaxoghd91&amp;#64;gmail.com"&gt;rlaxoghd91&amp;#64;gmail.com&lt;/a&gt;. Also, the code used in the presentation can be found at &lt;a class="reference external" href="https://github.com/kimtaehong/pycon2022"&gt;https://github.com/kimtaehong/pycon2022&lt;/a&gt;.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>Numpy and Quantum Computing</title><link href="https://pyvideo.org/pycon-korea-2022/numpy-and-quantum-computing.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Lee Jong-won</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/numpy-and-quantum-computing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the past several years, semiconductors have become smaller and their processing speeds have gotten faster. However, due to the recent components becoming too small, electrons simply ignore them and pass through them, so-called tunneling phenomenon has made it difficult to further miniaturize semiconductors. In addition, as problems that …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the past several years, semiconductors have become smaller and their processing speeds have gotten faster. However, due to the recent components becoming too small, electrons simply ignore them and pass through them, so-called tunneling phenomenon has made it difficult to further miniaturize semiconductors. In addition, as problems that are difficult to solve even with the best supercomputers in existence are presented, the need for faster and more efficient computers than existing classical computers has been discussed. The genius physicist Richard Feynman proposed the concept of a quantum computer, a computer that calculates quantum phenomena using the properties of quantum mechanics. Unlike existing bits that can only have one value of 0 or 1 at a time, qubits that can exist as 0 and 1 at the same time are used as calculation units by utilizing the superposition and entanglement phenomena of quantum mechanics. As the number of qubits increases, the number of values ​​that can be expressed simultaneously increases exponentially. It is expected that quantum computers will be able to efficiently solve problems such as factoring large numbers and optimization problems that were previously difficult to solve. How can we mathematically express superposition and entanglement, which are the core of quantum computers? And if we know how to express this mathematically, wouldn't it be possible to simulate these mathematical models? In this session, we will cover the mathematical basis used in quantum circuits for quantum computing and how to simulate them using the Python library NUMPY.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>SQLAlchemy with asyncio, From Core to ORM</title><link href="https://pyvideo.org/pycon-korea-2022/sqlalchemy-with-asyncio-from-core-to-orm.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Lee Sang Hoon</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/sqlalchemy-with-asyncio-from-core-to-orm.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SQLAlchemy, which is used in an open source project called Backend.AI, is used with Python asyncio. We talk about the reason and process of migrating SQLAlchemy from Core API to ORM API, as well as the many trials and errors and lessons learned.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>How to Build great Applications for Business Users in Python</title><link href="https://pyvideo.org/pycon-korea-2022/how-to-build-great-applications-for-business-users-in-python.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>GOSSELIN</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/how-to-build-great-applications-for-business-users-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Turning your Data/AI algorithms into full web apps in no time with Taipy In the Python open-source eco-system, many packages are available that cater to: - the building of great algorithms - the visualization of data - back-end functions despite this, over 85% of Data Science Pilots remain pilots and do …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Turning your Data/AI algorithms into full web apps in no time with Taipy In the Python open-source eco-system, many packages are available that cater to: - the building of great algorithms - the visualization of data - back-end functions despite this, over 85% of Data Science Pilots remain pilots and do not make it to the production stage. With Taipy, Data Scientists/Python Developers will be able to build great pilots as well as stunning production-ready applications for end-users. Taipy provides two independent modules: Taipy GUI and Taipy Core. In this talk, we will demonstrate how: Taipy GUI goes way beyond the capabilities of the standard graphical stack. Taipy Core is simpler yet more powerful than the standard Python back-end stack.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>How to manage various and complex Python objects in a database using Type Annotation</title><link href="https://pyvideo.org/pycon-korea-2022/how-to-manage-various-and-complex-python-objects-in-a-database-using-type-annotation.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Yong-Seok Ko</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/how-to-manage-various-and-complex-python-objects-in-a-database-using-type-annotation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's learn how to store complex JSON data in a database using type annotations that indicate type information in Python. Using Pydantic, which is also used in FastAPI, you can extract information from fields and convert them to JSON. Based on this function, we will define various data types …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's learn how to store complex JSON data in a database using type annotations that indicate type information in Python. Using Pydantic, which is also used in FastAPI, you can extract information from fields and convert them to JSON. Based on this function, we will define various data types necessary for defining a database table schema, and discuss how to make a specific key value an indexed database field value or an array value an index. Furthermore, we will discuss methods for effectively searching and processing nested objects within objects. We will explain Python's type annotations and briefly show how type information is stored. The basic usage of Pydantic and some of Mariadb's JSON-related functions will also be discussed. Using Pydantic and SQLAlchemy, you can manage objects that exactly correspond to database table fields, but it is difficult to process diverse and complex data. Using the method we shared, you can also store complex objects. Using this library, you can easily create an expandable Rest API related to a database. We will also share the detailed implementation source. Although not mentioned in the presentation, I think it would be helpful to refer to it as it also implements frequently shared objects, definitions of objects that can be joined together, methods for storing various types of objects, and a full text search function.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry><entry><title>Learn FastAPI with pseudocode</title><link href="https://pyvideo.org/pycon-korea-2022/learn-fastapi-with-pseudocode.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Cha Kyung-mook</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/learn-fastapi-with-pseudocode.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I am very interested in how my team can learn and grow sustainably, and I am exploring and experimenting with various methods. The experiments are designed and executed with a focus on: - Feedback - Narrowing the scope of what you don’t know about the learning target and gradually expanding …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I am very interested in how my team can learn and grow sustainably, and I am exploring and experimenting with various methods. The experiments are designed and executed with a focus on: - Feedback - Narrowing the scope of what you don’t know about the learning target and gradually expanding it - Mutual coaching - Taking notes within the scope of what you understand and connecting notes FastAPI is an asynchronous web framework that is receiving a lot of attention and growing rapidly. I am developing a project using FastAPI, and as I learn and use FastAPI, I find it useful as a tool for the learning method I am refining. On the other hand, since FastAPI is a new tool compared to other web frameworks, it is rare for new colleagues to have experience with FastAPI when joining the team. Therefore, onboarding FastAPI is a major task for the team. This presentation introduces the content of learning FastAPI based on my experience of efficiently and effectively onboarding new colleagues when they have not used FastAPI or are not familiar with it. I will explain what the learning method I am refining is and in what context FastAPI is a useful learning tool for that learning method.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Python Library"></category></entry></feed>