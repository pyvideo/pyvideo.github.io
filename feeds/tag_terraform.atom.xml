<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_terraform.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-06-05T00:00:00+00:00</updated><entry><title>Launch Jupyter to the Cloud with Docker and Terraform</title><link href="https://pyvideo.org/pycon-israel-2018/launch-jupyter-to-the-cloud-with-docker-and-terraform.html" rel="alternate"></link><published>2018-06-05T00:00:00+00:00</published><updated>2018-06-05T00:00:00+00:00</updated><author><name>Cheuk Ting Ho</name></author><id>tag:pyvideo.org,2018-06-05:pycon-israel-2018/launch-jupyter-to-the-cloud-with-docker-and-terraform.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Launch Jupyter to the Cloud: an example of using Docker and Terraform&lt;/p&gt;
&lt;p&gt;In this talk, we will use a task: hiring a GPU on Google Cloud Platform to train neural network, as an example to show how an application can be deployed on a cloud platform with Docker and Terraform. The goal is to have Jupyter Notebook running in an environment with Tensorflow (GPU version) and other libraries installed on a Google Compute Engine.&lt;/p&gt;
&lt;p&gt;This talk is for people with no experience in application deployment on cloud service but would benefit form computational reproducibility and cloud service, potentially data scientists/ analysts or tech practitioners who didn't have a software developing background. We will use an example that is simple but useful in data science to demonstrate basic usage of Docker and Terraform which would be beneficial to beginners who would like to simplify their work flow with those tools.&lt;/p&gt;
</summary><category term="jupyter"></category><category term="docker"></category><category term="terraform"></category></entry><entry><title>Infrastructure as Code with Terraform</title><link href="https://pyvideo.org/pycon-italia-2017/infrastructure-as-code-with-terraform.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Justyna Janczyszyn</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/infrastructure-as-code-with-terraform.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;what is infrastructure as code&lt;/li&gt;
&lt;li&gt;best practices&lt;/li&gt;
&lt;li&gt;benefits&lt;/li&gt;
&lt;li&gt;introduction to terraform&lt;/li&gt;
&lt;li&gt;practical demo for a sample flask application&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/tramwaj29/iac-with-terraform"&gt;https://github.com/tramwaj29/iac-with-terraform&lt;/a&gt;&lt;/p&gt;
</summary><category term="infrastructure"></category><category term="devops"></category><category term="provisioning"></category><category term="terraform"></category><category term="deployment"></category><category term="infrastructure-as-code"></category></entry><entry><title>Ansible &amp; Terraform for Django: Move Faster, break fewer things</title><link href="https://pyvideo.org/pycon-se-2017/ansible-terraform-for-django-move-faster-break-fewer-things.html" rel="alternate"></link><published>2017-09-06T00:00:00+00:00</published><updated>2017-09-06T00:00:00+00:00</updated><author><name>Ezequiel Golub</name></author><id>tag:pyvideo.org,2017-09-06:pycon-se-2017/ansible-terraform-for-django-move-faster-break-fewer-things.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Intro level talk about using Ansible and Terraform together. These tools allow you to provision cloud resources such as Virtual Servers or CDN and to set up your servers with whatever software is needed. This allows to treat infrastructure as code, a cornerstone of DevOps.&lt;/p&gt;
</summary><category term="ansible"></category><category term="terraform"></category><category term="django"></category></entry></feed>