<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Shaurya Agarwal</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_shaurya-agarwal.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-04-06T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Kandinsky: Using KMeans (and friends) to play with the colors of photograph(s)</title><link href="https://pyvideo.org/pycascades-2024/kandinsky-using-kmeans-and-friends-to-play-with-the-colors-of-photographs.html" rel="alternate"></link><published>2024-04-06T00:00:00+00:00</published><updated>2024-04-06T00:00:00+00:00</updated><author><name>Shaurya Agarwal</name></author><id>tag:pyvideo.org,2024-04-06:/pycascades-2024/kandinsky-using-kmeans-and-friends-to-play-with-the-colors-of-photographs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Clustering is tricky yet absolutely essential for many a Machine Learning initiative. The what, the how and the why confound each time we look at the data, whether it is customer segmentation (or cohort) analysis or it is finding centers of influence or breaking down a population into groups â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Clustering is tricky yet absolutely essential for many a Machine Learning initiative. The what, the how and the why confound each time we look at the data, whether it is customer segmentation (or cohort) analysis or it is finding centers of influence or breaking down a population into groups to build different models for each.&lt;/p&gt;
&lt;p&gt;Studying clustering algorithms like KMeans using toy datasets is insufficient (and often tedious) because it does not let you experience real-world problems. For e.g. the problem when the centroids don't settle, or situations where we have too many or too few clusters. Which distance measure to use and when? How to prepare (normalize? standardize?) the dataset for clustering?&lt;/p&gt;
&lt;p&gt;Also, not too many real-world scenarios are &amp;quot;visual&amp;quot;, unless we plot a graph or two, and that fails when we deal with higher dimensions.&lt;/p&gt;
&lt;p&gt;What if we could use a non-trivial but visual data source? Like the colors and pixels of a photograph, where we could see the data that went in and the resultant output clusters?&lt;/p&gt;
&lt;p&gt;The obvious &lt;strong&gt;takeaways of this talk&lt;/strong&gt;, in my experience, are that &lt;em&gt;Data Science and Data Engineering practitioners&lt;/em&gt; gain a deeper understanding of what's going on in the clustering algorithms in a fun, very &amp;quot;visual&amp;quot; and engaging manner; and also build a better intuition about the best approach to take for solving a problem.&lt;/p&gt;
</content><category term="PyCascades 2024"></category></entry></feed>