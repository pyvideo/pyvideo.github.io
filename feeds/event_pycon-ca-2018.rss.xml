<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 11 Nov 2018 00:00:00 +0000</lastBuildDate><item><title>A Deep Learning Approach to Annotating de novo Transcriptome Assemblies</title><link>https://pyvideo.org/pycon-ca-2018/a-deep-learning-approach-to-annotating-de-novo-transcriptome-assemblies.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In computational biology, assembling transcriptomes without a reference genome poses a challenge and results in many variant assemblies for each gene.  Artificial neural networks, implemented in Python, perform very well for classifying and clustering these variants and selecting a best isoform.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-52397"&gt;https://2018.pycon.ca/talks/talk-PC-52397&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Stata</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/a-deep-learning-approach-to-annotating-de-novo-transcriptome-assemblies.html</guid></item><item><title>Automate the Boring Stuff: Using Python to Improve University Courses</title><link>https://pyvideo.org/pycon-ca-2018/automate-the-boring-stuff-using-python-to-improve-university-courses.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One course at McMaster University spends over twenty thousand dollars per semester on TA salary. Over the past 16 months, we have designed and implemented software tools that automate and streamline a significant amount of TA duties in this course.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55271"&gt;https://2018.pycon.ca/talks/talk-PC-55271&lt;/a&gt;
Author website -- &lt;a class="reference external" href="http://swal.me/"&gt;http://swal.me/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Swaleh Owais</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/automate-the-boring-stuff-using-python-to-improve-university-courses.html</guid></item><item><title>Building and scaling Deep Learning Services</title><link>https://pyvideo.org/pycon-ca-2018/building-and-scaling-deep-learning-services.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Deep learning systems have to be engineered in order to be used in solving an end to end business problem. One of the challenges in architecting and building deep learning systems are the areas of maintainability, scalability and deployments. I would like to discuss on how we solve this at omnius.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-A-9016"&gt;https://2018.pycon.ca/talks/talk-A-9016&lt;/a&gt;
Author website -- Author website: &lt;a class="reference external" href="https://medium.com/&amp;#64;nischalhp"&gt;https://medium.com/&amp;#64;nischalhp&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nischal Harohalli Padmanabha</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/building-and-scaling-deep-learning-services.html</guid></item><item><title>Detecting Supernovas with Python</title><link>https://pyvideo.org/pycon-ca-2018/detecting-supernovas-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's a telescope that sits on a mountaintop in the Chilean desert––its job is to capture and help scientists understand the dark matter of our universe. But this isn't a talk just about dark matter, it's about discovering fleeting supernovas in space, while discovering the world of Python.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55535/"&gt;https://2018.pycon.ca/talks/talk-PC-55535/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pippin Lee</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/detecting-supernovas-with-python.html</guid></item><item><title>Gathering Related Functionality: Patterns for Clean API Design</title><link>https://pyvideo.org/pycon-ca-2018/gathering-related-functionality-patterns-for-clean-api-design.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will arm you with some tools to design a library that 'just works', but also has obvious escape hatches to handle corner cases. It covers several patterns for cleanly organizing related and overlapping functionality in a way that statisfies both humans and static analysis tools.&lt;/p&gt;
&lt;p&gt;---&lt;/p&gt;
&lt;p&gt;What do you do when you have to choose between designing your function for one of two common use cases?&lt;/p&gt;
&lt;p&gt;How about when the same logical operations (say, multiplication or concatenation) need to have different implementations depending on the type of the arguments they are applied to?&lt;/p&gt;
&lt;p&gt;These kinds of questions can be vexing when trying to design a clean, well-scoped API.&lt;/p&gt;
&lt;p&gt;This talk will cover several strategies for grouping related functionality in a way that presents a logically clean interface to both humans and static analysis tools like type checkers and document generators.&lt;/p&gt;
&lt;p&gt;This talk covers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Alternate constructors with &amp;#64;classmethod&lt;/li&gt;
&lt;li&gt;Inheritance with &amp;#64;staticmethod and &amp;#64;classmethod&lt;/li&gt;
&lt;li&gt;Dispatch by type&lt;/li&gt;
&lt;li&gt;A new convention for namespacing functions: variants&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Ganssle</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/gathering-related-functionality-patterns-for-clean-api-design.html</guid><category>library</category><category>api design</category></item><item><title>How not to overfit your predictive models</title><link>https://pyvideo.org/pycon-ca-2018/how-not-to-overfit-your-predictive-models.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will give a brief overview of validation &amp;amp; selection techniques for predictive models and common occurrences of overfitting when building models in python. We'll walk through some strategies to mitigate overfitting and build better models.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-56699"&gt;https://2018.pycon.ca/talks/talk-PC-56699&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rebecca Tessier</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/how-not-to-overfit-your-predictive-models.html</guid></item><item><title>Intake - taking the pain out of data access</title><link>https://pyvideo.org/pycon-ca-2018/intake-taking-the-pain-out-of-data-access.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Intake is a simple library providing one interface for cataloging, finding, describing and reading any data locally, in the cloud, or on an Intake server. Intake separates the definition of data sources from their analysis, so that Data Engineers and Data Scientists can get on with their jobs.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55191/"&gt;https://2018.pycon.ca/talks/talk-PC-55191/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Durant</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/intake-taking-the-pain-out-of-data-access.html</guid></item><item><title>Lessons learned open sourcing (and maintaining) my first library</title><link>https://pyvideo.org/pycon-ca-2018/lessons-learned-open-sourcing-and-maintaining-my-first-library.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Last year, I open-sourced my first library, PyMC3 Models. This talk has two parts: things I learned as I was writing my library and some of the issues I faced being the sole maintainer of the library. I hope you’ll be encouraged to open source and maintain your own library after this!&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55199"&gt;https://2018.pycon.ca/talks/talk-PC-55199&lt;/a&gt;
Author website -- &lt;a class="reference external" href="http://parsingscience.com/"&gt;http://parsingscience.com/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicole Carlson</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/lessons-learned-open-sourcing-and-maintaining-my-first-library.html</guid></item><item><title>My code is not for you: Protecting Python developer’s identity in OSS</title><link>https://pyvideo.org/pycon-ca-2018/my-code-is-not-for-you-protecting-python-developers-identity-in-oss.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OSS is open to anyone by design, whether it is developers or malicious users. Authors typically hide their identity through nicknames, however they have no protection against attribution techniques. This talk will present attacks on Python developers identity and discuss protection methods.&lt;/p&gt;
&lt;p&gt;---&lt;/p&gt;
&lt;p&gt;The rapid increase in open source software is an attestation of a new standard in software development. Today over 80 percent of any software code is open source, according to a recent study by Sonatype. Python replaced Java as the second-most popular language on GitHub, with 40 percent more pull requests opened this year than last by GitHub Inc.'s annual report.&lt;/p&gt;
&lt;p&gt;As the popularity of open source software increases, so do privacy concerns of individual contributors that often wish to remain anonymous. The majority of open-source repositories (GitHub, Google Code, SourceForge, etc.) allow users to keep their identity private while sharing their code. While in the past it was often sufficient, with the evolution of author attribution technology the question of how private the identity of software developers is becoming increasingly important.&lt;/p&gt;
&lt;p&gt;Software author attribution aims to decide who wrote a computer program, given its source or binary code. The main premise of this technique lies in the assumption that programmers unconsciously tend to use the same coding patterns. These patterns comprised of a number of distinctive features allow to characterise a programmer’s style and uniquely identify his/her works. Applications of software author attribution are wide and include software forensics - where the analyst wants to determine the author of a program given a set of potential programmers, plagiarism detection - where the analyst wants to identify illicit code reuse, ghostwriting detection - where given a suspicious piece of code the analysis wants to determine if it has been plagiarized from one of the programs in a given set, and in general any scenario where software ownership needs to be determined.&lt;/p&gt;
&lt;p&gt;In this session we will show how analysts can identify the author of Python software and how this process can be deceiving. We present two attacks on current attribution systems: author imitation and author hiding. The first attack can be applied on Python developer's identity in open-source projects. The attack transforms syntactical representation of attacker’s source code to a version that mimics the victim’s coding style while retaining functionality of original code. This is particularly concerning for Python open-source contributors who are unaware of the fact that by contributing to open-source projects they reveal identifiable information that can be used to their disadvantage. For example, one can easily see that by imitating someone’s coding style it is possible to implicate any software developer in wrongdoing. To resist this attack we discuss multiple approaches of hiding a coding style of Python software author before contribute to open-source.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alina Matyukhina</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/my-code-is-not-for-you-protecting-python-developers-identity-in-oss.html</guid><category>analytics</category><category>identity protection</category></item><item><title>Numpy To PyTorch</title><link>https://pyvideo.org/pycon-ca-2018/numpy-to-pytorch.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Numpy is the de-facto choice for array-based operations while PyTorch largely used as a deep learning framework. At the core, both provide a powerful N-dimensional tensor. This talk would focus on the similarities and difference between the two and how we can use PyTorch to augment Numpy.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-53293"&gt;https://2018.pycon.ca/talks/talk-PC-53293&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shagun Sodhani</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/numpy-to-pytorch.html</guid></item><item><title>Open Sourcing at Work</title><link>https://pyvideo.org/pycon-ca-2018/open-sourcing-at-work.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We just open sourced 2 projects (datacompy, and locopy) with roots in Data Science and Engineering which we will showcase. While is it exciting and rewarding to share your ideas with the world it isn't always easy. Thinking about licenses, copyrights, and protecting confidential information is a must!&lt;/p&gt;
&lt;p&gt;Working in a large organization which is embracing the mantra 'open source first' is really exciting. Part of this journey is to make sure we give back to the open source community when we can. Two of our projects had gained traction internally: datacompy, and locopy. As part of our commitment we wanted to make sure we could open source these projects for others to use and contribute back to. DataComPy is a package to compare two Pandas DataFrames. Originally started to be something of a replacement for SAS's PROC COMPARE for Pandas DataFrames with some more functionality than just Pandas.DataFrame.equals(Pandas.DataFrame) (in that it prints out some stats, and lets you tweak how accurate matches have to be). Then extended to carry that functionality over to Spark Dataframes. Locopy helps load flat files to S3 and then to Amazon Redshift, and assist with ETL processing. It is DB Driver (Adapter) agnostic, provides basic functionality to move data to S3 buckets, execute COPY commands to load data to S3, and into Redshift, and UNLOAD commands to unload data from Redshift into S3. While building these products was exciting and fun, some of the legal considerations were as interesting, complex, and required collaboration between many teams, from security, licensing, brand, and IP/copyright. We'll explore the projects, and some of these other considerations which can make or break if you decide to release a project into the wild, along with the road blocks we faced with in these areas.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Faisal Dosani</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/open-sourcing-at-work.html</guid><category>open source</category><category>licensing</category><category>copyright</category><category>data</category><category>security</category><category>testing</category><category>best practices</category><category>data science</category></item><item><title>PyCon Canada 2018 - Sunday Morning Keynote</title><link>https://pyvideo.org/pycon-ca-2018/pycon-canada-2018-sunday-morning-keynote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Froilán Irizarry is a developer, community builder and recovering entrepreneur. He’s worked with enterprise companies, government and startups using various technologies, focusing the last couple of years on Python and Javascript. Over the last four years he’s helped organise a number of tech events, including Fullstack Nights and PyCaribbean 2017. In the past year he worked with the US Digital Service completing his term, co-founded the Maria Tech Brigade, and joined the Code.gov team where he now helps US federal agencies share and open source government code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Froilán Irizarry</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/pycon-canada-2018-sunday-morning-keynote.html</guid></item><item><title>Rain or Shine - How Freshbooks Guarantees Email Delivery</title><link>https://pyvideo.org/pycon-ca-2018/rain-or-shine-how-freshbooks-guarantees-email-delivery.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;FreshBooks sends thousands of transactional emails every day - invoices, estimates, invitations, etc... This talk will go into how we used python to build a system that was dependable, reliable, and resilient to any disasters that could strike!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Nguyen</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/rain-or-shine-how-freshbooks-guarantees-email-delivery.html</guid></item><item><title>Scaling multi-tenant apps using the Django ORM and Postgres</title><link>https://pyvideo.org/pycon-ca-2018/scaling-multi-tenant-apps-using-the-django-orm-and-postgres.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the real-world there are 10000s of B2B companies. Their app-stack fits the multi-tenant model - each tenant(customer) deals with it’s own data. It is super critical to build scalable applications which gives the company leeway to grow as more customers get on-boarded. Let’s learn how to do that!&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-A-9014"&gt;https://2018.pycon.ca/talks/talk-A-9014&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sai Srirampur</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/scaling-multi-tenant-apps-using-the-django-orm-and-postgres.html</guid></item><item><title>Surviving Success: How-to Approach Scaling Python Web Apps</title><link>https://pyvideo.org/pycon-ca-2018/surviving-success-how-to-approach-scaling-python-web-apps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk walks through how to approach successfully scaling a Python web application. I break down the problem of scaling in terms of designing, building and operating a web app or REST API. I examine which parts are important, and I finish off by looking at 3 approaches to scaling such apps.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55208/"&gt;https://2018.pycon.ca/talks/talk-PC-55208/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dorian Pula</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/surviving-success-how-to-approach-scaling-python-web-apps.html</guid></item><item><title>The Adventures of a Python Script!</title><link>https://pyvideo.org/pycon-ca-2018/the-adventures-of-a-python-script.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wondered what happens between the time you run helloWorld.py and the terminal prints out “Hello world”? I will be sharing the wonderful and interesting process of how the Python interpreter works from the Python source code to the compilation of bytecode.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-A-9013"&gt;https://2018.pycon.ca/talks/talk-A-9013&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dema Abu Adas</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/the-adventures-of-a-python-script.html</guid></item><item><title>The Journey from Mediocrity: How to Stop Feeling Like a Beginner</title><link>https://pyvideo.org/pycon-ca-2018/the-journey-from-mediocrity-how-to-stop-feeling-like-a-beginner.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You read the docs, you did the learn to code exercises, you spent time in production. How do you know when you’re good at this? We’re programmers, so let’s break it up into parts. Let’s look at how we see ourselves, how our code performs, and how others see our code. Okay, now add, commit, push.&lt;/p&gt;
&lt;p&gt;Intro (1 minute):&lt;/p&gt;
&lt;p&gt;The python community is filled with many people from many disciplines that learned python for all kinds of different reasons. Not all of us took computer science in university, not all of us learned to code when we were 8.&lt;/p&gt;
&lt;p&gt;I work in post-production for film, I’ve been writing python every day at my job for two years now. When I started I was pretty rusty. I’d taken a few courses in university, but hadn’t written anything substantive for a couple of years. Getting good creeps up slowly. Your first day on the job you’re not good, your second day, your third. But I look at myself now and I’m writing full stack plugins. How did I get here? Am I good yet? How many grains of sand make a heap?&lt;/p&gt;
&lt;p&gt;The Aha moments, from veteran pythonistas (3 minutes):&lt;/p&gt;
&lt;p&gt;Featuring quotes from my interviews with veteran coders:&lt;/p&gt;
&lt;p&gt;Tell me a story about when you sucked.
What was the moment you knew you were getting kinda good at this thing?
What do you look for in others when gaging their python competence?
The answers to these three questions will frame the rest of the talk. Question 1: talks about how you see yourself. Coding is hard and we all start out sucking, we keep seeing ourselves as beginner programmers long after our skills outstripe this. Question 2: how our code actually performs. When does your curiosity/excitement get stronger than your fear or uncertainty, when do you start seeing efficiencies outside the scope of what your instructed to do. Question 3: how others see your code. Make your code reader friendly and your code reviews will be nicer, your coffee will taste sweeter, your coworkers will stop hissing when they see you. Do future you a solid.&lt;/p&gt;
&lt;p&gt;How you see yourself (1 minute):&lt;/p&gt;
&lt;p&gt;Working with your impostor syndrome&lt;/p&gt;
&lt;p&gt;Some of it’s in your head, some of it isn’t
Make smart friends. If you’re the smartest person in the room, you’re doing something wrong.
Embrace feeling dumb. Being wrong now is an opportunity to be right later. * Be wrong early, be wrong often, learn from mistakes.
The psychologist Carol Dweck talks about something called growth mindset. Don’t be smart, do smart. Look for opportunities to grow yourself rather than being ego protective about your coding skills
How your code performs (2 minutes)&lt;/p&gt;
&lt;p&gt;Automate your little tasks! Then automate more! (this will include a short example from production)
Write your own mandate! If something isn’t strictly in your job description, but it will make your life easier, your team’s life easier? Well just write that sucker. Psychologist Amy Wrzesniewski writes about how individuals with higher job satisfaction engage in what she calls “job crafting”.
How others see your code (3 minutes):&lt;/p&gt;
&lt;p&gt;three habits for leveling up, each of these will have short examples&lt;/p&gt;
&lt;p&gt;Write documentation!&lt;/p&gt;
&lt;p&gt;Docstrings and descriptive variables. When you come back to something you wrote a year ago you’re going to be happy your variables aren’t called: var1, var2, var3.
Use sphinx to auto-create documentation out of your docstrings! Get in the habit of this and you’ll feel like a wizard!
Testing! * I’ll have a short example using PyTest&lt;/p&gt;
&lt;p&gt;Pep-8!&lt;/p&gt;
&lt;p&gt;Sure, formatting isn’t the sexiest part of coding, but when you look back at your clean, pretty code, it can make you feel polished in a way nothing else can. Also, I mean, other people can read your work and stuff…&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victoria Mothersill</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/the-journey-from-mediocrity-how-to-stop-feeling-like-a-beginner.html</guid></item><item><title>The landscape of Quantum Computing in Python</title><link>https://pyvideo.org/pycon-ca-2018/the-landscape-of-quantum-computing-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quantum computing is an exciting scientific field that is coming out of the lab to the real world (e.g. IBM, Google). Let's dive into basics of quantum computing and overview the tools that are available in Python. By the end of the talk, you will use them to program a quantum computer yourself.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55571"&gt;https://2018.pycon.ca/talks/talk-PC-55571&lt;/a&gt;
Author website -- &lt;a class="reference external" href="https://tbabej.com/"&gt;https://tbabej.com/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tomas Babej</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/the-landscape-of-quantum-computing-in-python.html</guid></item><item><title>The state of Open Source in Robotics, Cloud Computing, and Cancer Research</title><link>https://pyvideo.org/pycon-ca-2018/the-state-of-open-source-in-robotics-cloud-computing-and-cancer-research.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I posit that well-made, open-source platforms with industry specific goals put more new tools in developer's hands each year than anything else. This talk will compare and get people excited about large open-source projects. What makes them great, what doesn't, and where to get started in Python.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-54865"&gt;https://2018.pycon.ca/talks/talk-PC-54865&lt;/a&gt;
Author website -- &lt;a class="reference external" href="https://github.com/danielsnider"&gt;https://github.com/danielsnider&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Snider</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/the-state-of-open-source-in-robotics-cloud-computing-and-cancer-research.html</guid></item><item><title>Using Python to detect malicious events at scale at Symantec Research Labs</title><link>https://pyvideo.org/pycon-ca-2018/using-python-to-detect-malicious-events-at-scale-at-symantec-research-labs.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Symantec's data lake is filled with exabytes of data. My team uses python to trawl through it to fish for hackers, and sometimes we catch some really big fish. In this talk I will discuss various techniques to catch real criminals doing nasty things across the internet.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55547"&gt;https://2018.pycon.ca/talks/talk-PC-55547&lt;/a&gt;
Author website -- &lt;a class="reference external" href="https://www.symantec.com/about/corporate-profile/technology/research-labs#danielkats"&gt;https://www.symantec.com/about/corporate-profile/technology/research-labs#danielkats&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Kats</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/using-python-to-detect-malicious-events-at-scale-at-symantec-research-labs.html</guid></item><item><title>What a Bug can Teach You about Python</title><link>https://pyvideo.org/pycon-ca-2018/what-a-bug-can-teach-you-about-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We’ll take a look at some Python code that has a strange bug in it. You’ll learn why it’s a bug and why it only occurs with larger numbers. We’ll cover fixes, dive into how Python works and look at some CPython source code. You’ll learn about “is” vs “==” and how to prevent bugs.&lt;/p&gt;
&lt;p&gt;We’ll take a look at some Python code that has a strange integer bug in it. You’ll learn about how the bug was discovered, and by the end of the talk you’ll understand why it’s a bug and why the bug only occurs with larger integers. You’ll see a one character fix to the bug, and then an even better fix. We’ll look at CPython's longobject.c source code to understand how smaller integers are handled differently than larger ones. We’ll explore the difference between comparing values in Python versus testing for identity. Hopefully you’ll gain an appreciation that bugs can be your best teachers and be able to prevent more bugs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Dettmer</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/what-a-bug-can-teach-you-about-python.html</guid><category>cpython</category><category>debugging</category></item><item><title>Working With Useless Machines</title><link>https://pyvideo.org/pycon-ca-2018/working-with-useless-machines.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working with Useless Machines is a project about personal assistants that don’t want to assist you. By mixing humour and satire, this talk looks at a set of prototypes developed on Alexa and Google Home, that critique corporate tech culture by turning them into devices with no utilitarian function.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-53735"&gt;https://2018.pycon.ca/talks/talk-PC-53735&lt;/a&gt;
Speaker website -- &lt;a class="reference external" href="http://nadinelessio.com/"&gt;http://nadinelessio.com/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nadine Lessio</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/working-with-useless-machines.html</guid></item><item><title>Your Special Abilities and Python</title><link>https://pyvideo.org/pycon-ca-2018/your-special-abilities-and-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The most unstoppable programmers have been in a situation where a system has gone down or their code broke, and they were responsible for getting it back up. Their resilience can almost always be attributed to their special abilities.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-54854"&gt;https://2018.pycon.ca/talks/talk-PC-54854&lt;/a&gt;
Author website -- &lt;a class="reference external" href="http://twitter.com/BearlyArtic"&gt;http://twitter.com/BearlyArtic&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeannette Washington</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/your-special-abilities-and-python.html</guid></item><item><title>A Bossy Sort of Voice: Uncovering gender bias in Harry Potter with Python</title><link>https://pyvideo.org/pycon-ca-2018/a-bossy-sort-of-voice-uncovering-gender-bias-in-harry-potter-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Harry Potter is an incredibly popular franchise that shaped a generation, but it's also been critiqued for its biased portrayal of female characters. Does that claim hold up to a quantitative analysis? In this talk we'll use Python and Natural Language Processing techniques to find out.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55247"&gt;https://2018.pycon.ca/talks/talk-PC-55247&lt;/a&gt;
Code &amp;amp; blog post -- &lt;a class="reference external" href="http://bit.ly/bossysortofvoice"&gt;http://bit.ly/bossysortofvoice&lt;/a&gt;
Author website --  &lt;a class="reference external" href="http://eleanorstrib.com/"&gt;http://eleanorstrib.com/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eleanor Stribling</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/a-bossy-sort-of-voice-uncovering-gender-bias-in-harry-potter-with-python.html</guid></item><item><title>API Evolution the Right Way</title><link>https://pyvideo.org/pycon-ca-2018/api-evolution-the-right-way.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Library maintainers, how can you innovate without breaking projects that depend on you? Follow semantic versioning, add APIs conservatively, add parameters compatibly, write an upgrade guide, use DeprecationWarnings, and publish a deprecation policy. Break backwards compatibility rarely and wisely.&lt;/p&gt;
&lt;p&gt;Staff Engineer at MongoDB in New York City specializing in C, Python, and async. Lead developer of the MongoDB C Driver libraries libbson and libmongoc. Author of Motor, an async MongoDB driver for Tornado and asyncio. Contributor to Python, PyMongo, MongoDB, Tornado, and asyncio. Co-author with Guido van Rossum of “A Web Crawler With asyncio Coroutines”, a chapter in the “500 Lines or Less” book in the Architecture of Open Source Applications series.&lt;/p&gt;
&lt;p&gt;Blogs at emptysquare.net and for the PSF at pyfound.blogspot.com&lt;/p&gt;
&lt;p&gt;Presentation page:  &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-53789/"&gt;https://2018.pycon.ca/talks/talk-PC-53789/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">A. Jesse Jiryu Davis</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/api-evolution-the-right-way.html</guid></item><item><title>CircuitPython: Python on hardware</title><link>https://pyvideo.org/pycon-ca-2018/circuitpython-python-on-hardware.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has made the jump to embedded software running on microcontroller hardware. This talk will introduce CircuitPython: a fork of MicroPython (a implementation of Python 3 designed to run on small hardware) that takes it to exciting new hardware and makes it very beginner/learner friendly.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55249/"&gt;https://2018.pycon.ca/talks/talk-PC-55249/&lt;/a&gt;
Author website -- &lt;a class="reference external" href="http://daveastels.com"&gt;http://daveastels.com&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Astels</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/circuitpython-python-on-hardware.html</guid></item><item><title>Data Science, from Concept to Production</title><link>https://pyvideo.org/pycon-ca-2018/data-science-from-concept-to-production.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So you've got an idea for a machine learning product, but how do you actually get it to production? From going on-call for ML models, to ensuring that models built by your data scientists can be used by your engineers, join me for a fast paced guide to the world of data science in production.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55546/"&gt;https://2018.pycon.ca/talks/talk-PC-55546/&lt;/a&gt;
Author website -- &lt;a class="reference external" href="https://www.pagerduty.com/"&gt;https://www.pagerduty.com/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Menezes</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/data-science-from-concept-to-production.html</guid></item><item><title>Easy as ABC: A Quick Introduction to Bayesian A/B Testing in Python</title><link>https://pyvideo.org/pycon-ca-2018/easy-as-abc-a-quick-introduction-to-bayesian-ab-testing-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A/B testing is a valuable and in-demand skills that data analysts, BI developers, and data scientists have in their analytical toolkits. This beginner-oriented talk will explain the basic intuitions and statistical theory behind A/B testing and showcase a simple implementation in Python.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55353/"&gt;https://2018.pycon.ca/talks/talk-PC-55353/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Will Barker</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/easy-as-abc-a-quick-introduction-to-bayesian-ab-testing-in-python.html</guid></item><item><title>From Zero Code to Python Code</title><link>https://pyvideo.org/pycon-ca-2018/from-zero-code-to-python-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Teaching computational thinking in the classroom is a challenge as there's a wide range of skills, including the teacher's.
The Gigglebot is a microbit rover that covers the steps from no coding to Python coding through a variety of approaches so that no one in the classroom gets left behind.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-54340"&gt;https://2018.pycon.ca/talks/talk-PC-54340&lt;/a&gt;
Author website --  &lt;a class="reference external" href="http://eleanorstrib.com/"&gt;http://eleanorstrib.com/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicole Parrot</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/from-zero-code-to-python-code.html</guid></item><item><title>Get Productive with Python in Visual Studio Code</title><link>https://pyvideo.org/pycon-ca-2018/get-productive-with-python-in-visual-studio-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Visual Studio Code is the most popular tool used by developers in Stack Overflow's 2018 developer survey, and is quickly growing in popularity among Python developers. In this talk we'll show how to get productive and take full advantage of VS Code has to offer Python developers.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55201/"&gt;https://2018.pycon.ca/talks/talk-PC-55201/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Taylor</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/get-productive-with-python-in-visual-studio-code.html</guid></item><item><title>Guide to your own artificial intelligence application in 3 easy steps</title><link>https://pyvideo.org/pycon-ca-2018/guide-to-your-own-artificial-intelligence-application-in-3-easy-steps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What do you think of when you hear “artificial intelligence”? Perhaps self-driving cars, autonomous robots and Siri, Alexa or Google Home? But it doesn’t have to be that complex. You can build a powerful image classification model within a topic that inspires and interests you - with 3 easy steps.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-54901/"&gt;https://2018.pycon.ca/talks/talk-PC-54901/&lt;/a&gt;
Author website -- &lt;a class="reference external" href="https://www.linkedin.com/in/norah-klintberg-sakal-5b81322a/"&gt;https://www.linkedin.com/in/norah-klintberg-sakal-5b81322a/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Norah Klintberg Sakal</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/guide-to-your-own-artificial-intelligence-application-in-3-easy-steps.html</guid></item><item><title>How our Python bot found your baseball ticket</title><link>https://pyvideo.org/pycon-ca-2018/how-our-python-bot-found-your-baseball-ticket.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Creating a custom database by mining five ticket sellers allowed us to expose staggered rollouts, experiments with variable pricing and reveal how high-demand events actually sell. From accessing Ticketmaster’s databases to mining the data, we’ll walk through CBC’s ticket scalping investigation.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55455"&gt;https://2018.pycon.ca/talks/talk-PC-55455&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Valérie Ouellet</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/how-our-python-bot-found-your-baseball-ticket.html</guid></item><item><title>How to Design and Build a Recommendation System Pipeline in Python</title><link>https://pyvideo.org/pycon-ca-2018/how-to-design-and-build-a-recommendation-system-pipeline-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Want to know how Spotify, Amazon, and Netflix generate recommendations for their users? This talk walks through the steps involved in building a recommendation pipeline, from data cleaning, hyperparameter tuning, model training and evaluation.&lt;/p&gt;
&lt;p&gt;Personalized recommendation systems play an integral role in e-commerce platforms, with the goal of driving user engagement. While there is extensive literature on the theory behind recommendation systems, there is limited material that describes the underlying infrastructure of a recommendation system pipeline. In this talk, we will walk through the process of designing and building a recommendation system pipeline. We will specifically discuss techniques for data cleaning and normalization, hyperparameter tuning, model training and fitting, as well as quantitative and qualitative model evaluation. By the end of this talk, you will learn how to design your own recommendation system pipeline from scratch.&lt;/p&gt;
&lt;p&gt;About the Author&lt;/p&gt;
&lt;p&gt;Jill is a data scientist at BioSymetrics, where she applies machine learning techniques to biomedical data. Outside of work, Jill is working on an open-source toolkit for implicit feedback recommendation systems. She is a member of PyLadies and Women Who Code.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/fr/talks/talk-PC-55468/"&gt;https://2018.pycon.ca/fr/talks/talk-PC-55468/&lt;/a&gt;
Author website -- &lt;a class="reference external" href="https://topspinj.github.io/"&gt;https://topspinj.github.io/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jill Cates</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/how-to-design-and-build-a-recommendation-system-pipeline-in-python.html</guid></item><item><title>Identifying influencers via Slack Messages in Python using Network Analysis and NLP</title><link>https://pyvideo.org/pycon-ca-2018/identifying-influencers-via-slack-messages-in-python-using-network-analysis-and-nlp.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn how to build a network web in Python to reflect conversations between people based on Slack conversations. Then, build a natural language processing model to evaluate what all those people are talking about, and which conversations determine who in the network carries 'technical knowledge&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55526"&gt;https://2018.pycon.ca/talks/talk-PC-55526&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eva Sasson</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/identifying-influencers-via-slack-messages-in-python-using-network-analysis-and-nlp.html</guid></item><item><title>Keynote talk</title><link>https://pyvideo.org/pycon-ca-2018/keynote-talk.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Solmaz is the VP of Data Science and Engineering at Shopify leading the data organization. Her teams build the data platform and the machine learning solutions that power Shopify's internal and merchant facing data products including Shopify's real-time Order Fraud Analysis, Shopify Capital and Shopify Home. Her and her teams build majority of their data solutions using Python (and Spark) and she is a big fan of the Python community. With multiple graduate degrees in computer science and machine learning, prior to joining Shopify, she worked at Morgan Stanley as an analyst and at McGill university as a cancer researcher, applying machine learning techniques to predict breast cancer outcome. Solmaz has a passion for building high quality data products that delight users and solve real world problems.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Solmaz Shahalizadeh</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/keynote-talk.html</guid></item><item><title>Lessons learned migrating a large python application</title><link>https://pyvideo.org/pycon-ca-2018/lessons-learned-migrating-a-large-python-application.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At Wave, I've been a part of the team, from inception to now, rewriting and replacing the old accounting system. I want to talk about the challenges migrating a system with over 2 million sign ups with no downtime. The systems are radically different making it challenging at time. We're 60% done.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55477"&gt;https://2018.pycon.ca/talks/talk-PC-55477&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joseph Kahn</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/lessons-learned-migrating-a-large-python-application.html</guid></item><item><title>PEP 572: The Walrus Operator</title><link>https://pyvideo.org/pycon-ca-2018/pep-572-the-walrus-operator.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we'll learn about a highly controversial proposed change to Python syntax, the rationale for it, and the fallout as the result of it.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55520/"&gt;https://2018.pycon.ca/talks/talk-PC-55520/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/pep-572-the-walrus-operator.html</guid></item><item><title>PyCon Canada 2018 - Saturday Afternoon Keynote</title><link>https://pyvideo.org/pycon-ca-2018/pycon-canada-2018-saturday-afternoon-keynote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Graham is the VP of Applied Sciences and Research at Wave, where he’s responsible for the integration of new technologies and research areas into the company, primarily Machine Learning and Artificial Intelligence. Over the years, Graham has built, led and managed teams from 5 to 100 as a founder, manager, executive and board member. He has a passion for solving complex problems by creating fun, inclusive, high performing teams. In previous lives, he’s built multi-petabyte systems, found homes for lost cats and puppies, done stand up comedy at weddings and night clubs (including an unfortunately momentous poetry jam) and taken himself far too seriously.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Topping</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/pycon-canada-2018-saturday-afternoon-keynote.html</guid></item><item><title>Replacing Guido</title><link>https://pyvideo.org/pycon-ca-2018/replacing-guido.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;On July 12, 2018, Guido van Rossum gave himself 'a permanent vacation from being BDFL' with no guidance on how to proceed. This talk will discuss how the Python development team has tried to handle situation and where things currently stand.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-53534"&gt;https://2018.pycon.ca/talks/talk-PC-53534&lt;/a&gt;
Author website -- &lt;a class="reference external" href="https://snarky.ca/"&gt;https://snarky.ca/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brett Cannon</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/replacing-guido.html</guid></item><item><title>Software Design Simplified</title><link>https://pyvideo.org/pycon-ca-2018/software-design-simplified.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Software design is a tricky to get right, even for experienced developers. There is simply too much choice and too much information to consider. How do we slow the incidental complexity of our systems with every new feature we add? Learn how simpler patterns and more constraints can actually lead to more reliable results.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55352"&gt;https://2018.pycon.ca/talks/talk-PC-55352&lt;/a&gt;
Author page -- &lt;a class="reference external" href="http://twitter.com/_AlexTucker"&gt;http://twitter.com/_AlexTucker&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Tucker</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/software-design-simplified.html</guid></item><item><title>Using Python to find Russian Twitter troll tweets aimed at Canada</title><link>https://pyvideo.org/pycon-ca-2018/using-python-to-find-russian-twitter-troll-tweets-aimed-at-canada.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Paid internet trolls linked to the Russian government tried to influence the U.S. election with divisive social media posts. But they also targeted Canadians, at a smaller scale. Here's how I used Python to find tweets aimed at dividing Canadians among a trove of 3 million troll tweets.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-53179/"&gt;https://2018.pycon.ca/talks/talk-PC-53179/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Roberto Rocha</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/using-python-to-find-russian-twitter-troll-tweets-aimed-at-canada.html</guid></item><item><title>Using Python to Quantify Portfolio Diversification</title><link>https://pyvideo.org/pycon-ca-2018/using-python-to-quantify-portfolio-diversification.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Diversification is a portfolio construction and risk management technique used in finance that aims to minimize the impact of any single investment’s performance on that of the total portfolio. How can Python be used to measure diversification in a quantitative fashion?&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55494"&gt;https://2018.pycon.ca/talks/talk-PC-55494&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robin Warner</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/using-python-to-quantify-portfolio-diversification.html</guid></item><item><title>When Technical Debt Congeals: My Sabbatical with the Government of Canada</title><link>https://pyvideo.org/pycon-ca-2018/when-technical-debt-congeals-my-sabbatical-with-the-government-of-canada.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jason took a short leave of absence to help the Canadian federal government adopt modern software development practices. In this talk he’ll talk about his reasons for pursuing this opportunity, whether he’d recommend it to others, and lessons learned along the way.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-52064"&gt;https://2018.pycon.ca/talks/talk-PC-52064&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason White</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/when-technical-debt-congeals-my-sabbatical-with-the-government-of-canada.html</guid></item><item><title>Who's There? Building a home security system with Pi &amp; Slack!</title><link>https://pyvideo.org/pycon-ca-2018/whos-there-building-a-home-security-system-with-pi-slack.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How does one make use of that raspberry pi they bought years ago? This talk will summarize how you can turn your raspberry pi into a home security system, utilizing slack as a notifications and control system.&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55476"&gt;https://2018.pycon.ca/talks/talk-PC-55476&lt;/a&gt;
Project page -- &lt;a class="reference external" href="https://github.com/ian-whitestone/rpi-security-system"&gt;https://github.com/ian-whitestone/rpi-security-system&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ian Whitestone</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/whos-there-building-a-home-security-system-with-pi-slack.html</guid></item><item><title>Why is Python ideal for research software development?</title><link>https://pyvideo.org/pycon-ca-2018/why-is-python-ideal-for-research-software-development.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is showing an incredible growth in many fields, including academia. By enumerating the challenges we face in sustainable research software development and how Python's unique strengths are catering to them, I hope to explain this growth and encourage further adoption for scientific computing!&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-52179"&gt;https://2018.pycon.ca/talks/talk-PC-52179&lt;/a&gt;
Blog post on neuroinformatics -- &lt;a class="reference external" href="https://crossinvalidation.com/2018/05/03/lets-focus-our-neuroinformatics-community-efforts-in-python-and-on-software-validation/"&gt;https://crossinvalidation.com/2018/05/03/lets-focus-our-neuroinformatics-community-efforts-in-python-and-on-software-validation/&lt;/a&gt;
Author website -- &lt;a class="reference external" href="http://www.crossinvalidation.com"&gt;http://www.crossinvalidation.com&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pradeep Reddy Raamana</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/why-is-python-ideal-for-research-software-development.html</guid></item><item><title>WSGI for Web Developers</title><link>https://pyvideo.org/pycon-ca-2018/wsgi-for-web-developers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;WSGI is the foundation of most Python web frameworks, but there's a good chance you've never had to interact with it directly. In this talk we'll explore why it exists, how it works, and what the heck it's doing in your stack.&lt;/p&gt;
&lt;p&gt;A great web framework abstracts away all the low-level stuff so that you can focus on the core functionality of your application. This is helpful for getting you going quickly but can be a source of frustration when you want to start optimizing your application. In the Law of Leaky Abstractions Joel Spolsky makes the case that abstracting away the low-level stuff prevents us from learning important concepts.&lt;/p&gt;
&lt;p&gt;So let's learn about WSGI.&lt;/p&gt;
&lt;p&gt;WSGI is the Web Server Gateway Interface and it's the foundation of almost every Python web framework. This isn't going to be a talk that you'll walk out of with immediate tips for tuning your web service (don't worry, Graham Dumpleton has that covered). Instead, you'll develop an appreciation for the low-level goings on of your stack every time you handle a request.&lt;/p&gt;
&lt;p&gt;This talk is intended primarily for Python web developers, but should be approachable for anyone with an intermediate experience of Python. I look forward to talking to you!&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55186/"&gt;https://2018.pycon.ca/talks/talk-PC-55186/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan Wilson-Perkin</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ca-2018/wsgi-for-web-developers.html</guid></item></channel></rss>