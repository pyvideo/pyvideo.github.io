<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-de-2012.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-11-01T00:00:00+00:00</updated><entry><title>Aus der Werkzeugkiste eines Python/Web-Entwicklers</title><link href="https://pyvideo.org/pycon-de-2012/aus-der-werkzeugkiste-eines-py.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Wolfgang Schnerring</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/aus-der-werkzeugkiste-eines-py.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Werkzeuge erleichtern uns die Arbeit oder nehmen sie uns durch
Automatisierung sogar ganz ab. In diesem Vortrag stelle ich einige
Werkzeuge vor, die sich im Alltag bewährt haben, von der ersten Idee bis
zur Live-Schaltung einer Webanwendung, von Testen über Debugging bis
Deployment, für Python bis Javascript.&lt;/p&gt;
&lt;p&gt;Der Vortrag richtet sich an (Web-)Entwickler aller Arten. Er soll als
Inspiration sowie als Anstoß zum Gedankenaustausch miteinander dienen:
Was für Werkzeuge benutze ich andauernd? Welche davon möchte ich nie
mehr missen? Über welche ärgere ich mich, welche könnten deutlich besser
sein? Wie lösen andere die üblichen Probleme?&lt;/p&gt;
</summary></entry><entry><title>Beziehungen? Nein danke! - Agile Datenbankentwicklung mit schemafreien Datenbanken und Python</title><link href="https://pyvideo.org/pycon-de-2012/beziehungen-nein-danke-agiledatenbankentwickl.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Martin Schönert</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/beziehungen-nein-danke-agiledatenbankentwickl.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python-Projekte haben immer häufiger alternative Datenbanken aus der
nosql /newsql-Familie in ihrem Stack, seien es Graphendatenbanken wie
Neo4j, Key- Value-Stores wie Redis oder dokumentenorientierte
Datenbanken wie MongoDB.&lt;/p&gt;
&lt;p&gt;So verschiedenartig diese Datenbanken auch sind, gemeinsam ist ihnen,
dass sie nicht das relationale Datenmodell implementieren, Daten nicht
in miteinander in Beziehung stehenden Entitäten ablegen. Während
Nicht-Normalisirung bei relationalen Datenbanken meist als Anti-Pattern
angesehen wird, ist es bei schemafreien Datenbanken Prinzip, das
schnelles und agiles Entwickeln und Deployen fördert.&lt;/p&gt;
&lt;p&gt;Dieser Talk zeigt an Hand eines konkreten Use-Cases, welche Auswirkungen
die Verwendung einer nicht-relationalen Datenbank auf den
Entwicklungsprozess hat, zeigt wie Daten modelliert werden können und
auch, wie Veränderungen am Datenbankmodell implementiert werden können,
wenn es kein &amp;quot;Alter table&amp;quot; mehr gibt.&lt;/p&gt;
&lt;p&gt;Diskutiert werden sollen dabei auch die Pros und Kontras der
verschiedenen Datenmodelle hinsichtlich ihrer Query-Möglichkeiten, der
Query-Performance, Anforderungen an Plattenplatz und Auswirkungen auf
die Client/Anwendungsseite.&lt;/p&gt;
</summary><category term="agile softwareentwicklung"></category><category term="datenbank"></category><category term="datenmodellierung"></category><category term="nosql"></category><category term="orm"></category><category term="python"></category></entry><entry><title>Building New Communities</title><link href="https://pyvideo.org/pycon-de-2012/building-new-communities.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Steve Holden</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/building-new-communities.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;As commercial and governmental entities become more aware of the
advantages of&lt;/p&gt;
&lt;p&gt;open source software, they are seeking to engage with the existing open
source&lt;/p&gt;
&lt;p&gt;communities in a variety of ways. In this talk Steve examines some of
the&lt;/p&gt;
&lt;p&gt;models that are being used, and takes a look at the possibilities for
new ways&lt;/p&gt;
&lt;p&gt;of working in the open source world.&lt;/p&gt;
</summary><category term="keynote"></category></entry><entry><title>dev --+ qual --+ prod</title><link href="https://pyvideo.org/pycon-de-2012/dev-qual-prod.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Thomas Güttler</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/dev-qual-prod.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Es wird das Konzept vorgestellt, wie man Projekte strukturieren kann um
von der ersten Minute an eine mind. dreistufige Landschaft (Entwicklung,
Qualitätssicherung, Produktiv) vorzusehen.&lt;/p&gt;
&lt;p&gt;Die zentrale Rolle spielen getrennte Systemnutzer um isolierte
Umgebungen zu erstellen. Dieser Ansatz ist für Python-Server-Anwendungen
wie z.B Django- Anwendungen sehr gut anwendbar.&lt;/p&gt;
&lt;p&gt;Seit einiger Zeit setzen wir getrennte Linux-Nutzer anstatt virtualenv
ein. Das zentrale Merkmal, ist der Name des Systemnutzers:&lt;/p&gt;
&lt;p&gt;Namensschema des Linux-Nutzers: app_customer_stage&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;app ist die Anwendung (zB cms)&lt;/li&gt;
&lt;li&gt;customer ist ein Kürzel für den Kunden&lt;/li&gt;
&lt;li&gt;stage ist d, q, p (dev, qual, prod).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Beispiel:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;mycms_customer1_d Entwicklungssystem&lt;/li&gt;
&lt;li&gt;mycms_customer1_q Qualitätssicherung&lt;/li&gt;
&lt;li&gt;mycms_customer1_p Produktivsystem&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In einer zentralen Datei wird konfiguriert auf welchem Host welches
System läuft. Jedes System kennt das nächste System (Bsp dev-&amp;gt;qual), so
dass ein Abgleich relativ einfach möglich ist.&lt;/p&gt;
&lt;p&gt;Das simple System hat viele Vorteile, die ich in dem Vortrag vorstellen
möchte.&lt;/p&gt;
</summary><category term="deployment"></category><category term="linux"></category><category term="virtualenv"></category></entry><entry><title>Didaktische Anforderung an die erste Programmsprache</title><link href="https://pyvideo.org/pycon-de-2012/didaktische-anforderung-an-die-erste-programmspra.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Nik Klever</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/didaktische-anforderung-an-die-erste-programmspra.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In diesem Vortrag geht es darum, dass im Herbst am Zentrum für
Hochschuldidaktik der bayerischen Hochschulen für Angewandte
Wissenschaften ein Fachdidaktikarbeitskreis &amp;quot;didaktische Anforderungen
an die erste Programmiersprache&amp;quot; eingerichtet wird, in dem
herausgearbeitet werden soll, welche Anforderungen an eine
Programmiersprache aus didaktischer Sicht für einen Einstieg in die
Programmierung am besten geeignet ist. Die Erfahrungen der anwesenden
Experten soll in einer Art Brainstorming genutzt werden, um
&amp;quot;didaktische&amp;quot; Argumente für die Verwendung von Python als erste
Programmiersprache zu sammeln und in diesen Arbeitskreis einfliessen zu
lassen. Evtl. könnte dieser Vortrag / dieses Brainstorming auch als
Start für eine Open Space Session innerhalb vom Barcamp zu diesem Thema
sein. Die Zielgruppe für diesen Vortrag ist neben den Experten
sicherlich auch für Neulinge geeignet.&lt;/p&gt;
</summary><category term="didaktik"></category><category term="erste programmiersprache"></category></entry><entry><title>Fanstatic zum Einbinden statischer Ressourcen - Was es kann und was es können sollte.</title><link href="https://pyvideo.org/pycon-de-2012/fanstatic-zum-einbinden-statischer-ressourcen-w.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Daniel Havlik</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/fanstatic-zum-einbinden-statischer-ressourcen-w.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Fanstatic ist ein einfaches und doch mächtiges Werkzeug zum Einbinden
statischer Ressourcen in Webanwendungen. In diesem Vortrag werden die
Grenzen von Fanstatic aufgezeigt und Lösungen für diese vorgeschlagen.&lt;/p&gt;
&lt;p&gt;Die Autoren setzen Fanstatic in fast jedem Projekt ein. Doch immer
wieder stolpern wir über Probleme wie das Einbinden von Stylesheets für
spezielle IE- Versionen (Conditional Stylesheets) oder die fehlenden
Möglichkeit, Stylesheets für den Druck zu spezifizieren. Auch wäre eine
Integration mit z.B. CoffeeScript wünschenswert.&lt;/p&gt;
</summary><category term="css"></category><category term="fanstatic"></category><category term="javascript"></category></entry><entry><title>Flugplanung, Datenverwaltung, Visualisierung mit einem Wiki zur Unterstützung von Meßkampagnen</title><link href="https://pyvideo.org/pycon-de-2012/flugplanung-datenverwaltung-visualisierung-mit.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Reimar Bauer</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/flugplanung-datenverwaltung-visualisierung-mit.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Dieser Vortrag zeigt auf, wie man ein MoinMoin Wiki verwenden kann, um
meteorologische Daten für Flugplanungen mit einem Forschungsflugzeug
bereitzustellen. Die Werkzeuge, die bei einer Messkampagne eine
Plattform für den Austausch von Daten sowie Beschreibungen bilden,
werden vorgestellt.&lt;/p&gt;
&lt;p&gt;Im Vortrag werden einige Werkzeuge und deren API vorgestellt. Z.B.
arnica, ein MoinMoin Wiki Plugin, das u.a. für die Darstellung von
Vorhersage Modell Daten für die Flugplanung von Forschungsmissionen
Verwendung findet.&lt;/p&gt;
&lt;p&gt;Andere Werkzeuge dienen dem Organisieren von Informationen auf Wiki
Seiten und deren Darstellung. Es wird z.B. gezeigt wie Seiteninhalte in
Tabellen abgebildet werden können.&lt;/p&gt;
&lt;p&gt;Die Beispiele können auch für die Entwicklung eigener Plugins
herangezogen werden.&lt;/p&gt;
</summary><category term="moinmoin"></category><category term="plugin"></category><category term="python"></category><category term="wiki"></category><category term="wissenschaft"></category></entry><entry><title>Mercurial - ein verteiltes Versionskontrollsystem</title><link href="https://pyvideo.org/pycon-de-2012/mercurial-ein-verteiltes-versionskontrollsystem.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Markus Zapke-Gründemann</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/mercurial-ein-verteiltes-versionskontrollsystem.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Dieser Vortrag stellt Mercurial vor, zeigt aber auch optimale
Vorgehensweisen für den Entwicklungsalltag sowie die Grundlagen der
Entwicklung von Mercurial Extensions.&lt;/p&gt;
&lt;p&gt;Mercurial ist ein verteiltes Versionskontrollsystem. Die Befehle und
Funktionen sind einfach zu lernen.&lt;/p&gt;
&lt;p&gt;Da es unabhängig vom einem Server arbeitet kann jeder lokal und auch
ohne Internetverbindung Dokumente oder Quellcode damit verwalten.
Trotzdem kann man mit Mercurial die Repositories untereinander
austauschen und so auch über weite Entfernungen zusammen arbeiten.&lt;/p&gt;
&lt;p&gt;Mercurial ist komplett in Python geschrieben und lässt sich deshalb
einfach erweitern.&lt;/p&gt;
&lt;p&gt;Viele bekannte Open Source Projekte und Firmen setzen Mercurial ein. So
zum Beispiel Atlassian, Dovecot, Gajim, Google, Facebook, Mozilla,
OpenOffice, OpenSolaris, Python, PyPy, RabbitMQ, Unity, Vim oder Xen.&lt;/p&gt;
</summary><category term="dvcs"></category><category term="mercurial"></category><category term="python"></category><category term="softwareentwicklung"></category></entry><entry><title>Pydica - eine Open-Source-Plattform zum Scannen und Validieren von Formularen in Python</title><link href="https://pyvideo.org/pycon-de-2012/pydica-eine-open-source-plattform-zum-scannen-un.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Daniel Szoska</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/pydica-eine-open-source-plattform-zum-scannen-un.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Pydica steht für &lt;em&gt;Distributed Document Capture&lt;/em&gt; und ist eine Plattform,
mit der die verteilte Verarbeitung ausgefüllter Formulare vom Scannen
über die OCR bis hin zur anschließenden Validierung möglich ist. Wir
stellen die Plattform, unser Sicherheitskonzept und einen konkreten
Anwendungsfall vor.&lt;/p&gt;
&lt;p&gt;Für das Problem der Erfassung, Validierung und Weiterverarbeitung großer
Mengen ausgefüllter Formulare wie zum Beispiel Verträge, Umfragen,
Krankenscheine, Rezepte, Überweisungen, Schecks o. ä. existiert keine
Lösung.&lt;/p&gt;
&lt;p&gt;Ziele von Pydica sind:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Skalierbarkeit:&lt;/strong&gt; Die verteilte Architektur sorgt dafür, daß mehrere
Scanner- und Validierungsarbeitsplätze genutzt werden können. Auch die
Serverkomponenten für OCR und automatische Validierung sind frei
skalierbar.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Komplexe Validierungsregeln:&lt;/strong&gt; Die Validierung beschränkt sich nicht
nur auf einzelne Felder, sondern ist auch über mehrere Felder möglich,
wie dies z. B. bei Prüfsummen der Fall ist.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Offene Toolchain:&lt;/strong&gt; Pydica ist keine abgeschlossene Software, sondern
darauf ausgelegt, die erfaßten Daten an Drittsoftware, wie zum Beispiel
Abrechnungssysteme, zu übergeben.&lt;/p&gt;
&lt;p&gt;Ein konkretes Anwendungsbeispiel von Pydica, welches am Ende des
Vortrags vorgestellt wird, ist die Verarbeitung von Rezepten im
Rechenzentrum für Berliner Apotheken Stein &amp;amp; Reichwald GmbH.&lt;/p&gt;
</summary><category term="distributed document capture"></category><category term="formularerfassung"></category></entry><entry><title>Python-Code für Debian paketieren</title><link href="https://pyvideo.org/pycon-de-2012/python-code-fur-debian-paketieren.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Jan Dittberner</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/python-code-fur-debian-paketieren.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Das Debian-Projekt ist mit mehr als 30000 Binärpaketen eine der größten
Distributionen freier Software. Auch viele Python-Bibliotheken und
Anwendungen wurden bereits für Debian paketiert. Es gibt aber viele
Software die noch auf eine Paketierung oder bessere Pflege wartet.&lt;/p&gt;
&lt;p&gt;Im Vortrag wird gezeigt, wie man Python-Code für Debian paketiert. Dabei
wird anhand eines Beispielpakets auf folgende Punkte näher eingegangen:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Wie erleichtert man als Upstream die Paketierung seiner
Python-Software?&lt;/li&gt;
&lt;li&gt;Was sind die aktuellen Tools für das Python-Packaging?&lt;/li&gt;
&lt;li&gt;Wie baue ich Python2-, Python3- und (sphinx-)Dokumentations-Pakete?&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="debian"></category><category term="paketierung"></category></entry><entry><title>Python-Web-Sprints</title><link href="https://pyvideo.org/pycon-de-2012/python-web-sprints.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Christian Theune</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/python-web-sprints.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Seit April 2011 finden regelmäßig dreitägige Sprints zu verschiedenen
Themen rund um Python-Web Anwendungen statt. Dabei geht es meist nicht
um die schnelle Implementierung spezifischer Features sondern um
grundlegende, von den Beteiligten mitgetragene Konzepte. Meist wird auch
nicht an einzelnen Komponenten, sondern an einer Toolchain zur Lösung
konkreter Probleme gearbeitet. Schließlich werden die Ergebnisse in
einer Anwenderdokumentation festgehalten.&lt;/p&gt;
&lt;p&gt;Die Initiatoren des Sprints, Christian Theune und Veit Schiele, stellen
das Konzept der Sprint-Reihe vor und gehen auch die Ergebnisse der
bisherigen Sprints ein. Die Themen der bisherigen Sprints waren:
PyPI-Mirroring und Performance-Optimierungen, Sicherheit und Datenschutz
bei Web-Anwendungen sowie Betrieb und Deployment von
Python-Webanwendungen.&lt;/p&gt;
</summary><category term="sprint"></category><category term="web-anwendungen"></category></entry><entry><title>Schneller ohne C++</title><link href="https://pyvideo.org/pycon-de-2012/schneller-ohne-c.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Stefan Behnel</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/schneller-ohne-c.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Die Sichtbarkeit von C++ in der Software-Entwicklung ist auch in ihrem
33. Jahr noch enorm. In vielen Bereichen, z.B. im Ingenieursumfeld und
im Embedded-Bereich wird schon aus Tradition mit C und C++ entwickelt,
oft ohne den Blick auf Alternativen. Eingespielte Entwicklerteams und
große, über lange Zeit gewachsene Code-Basen lassen einen Umstieg
unmöglich erscheinen.&lt;/p&gt;
&lt;p&gt;In diesem Vortrag werde ich die Frage stellen, warum C und C++ so große
Verbreitung besitzen, trotz der hohen Anforderungen an
Entwicklererfahrung und der aufwändigen und fehleranfälligen Entwicklung
mit diesen Sprachen. Dabei zeigt sich Python als ganz natürliche
Ergänzungssprache, die sich leicht mit bestehenden Code integriert und
in vielen Bereichen die Entwicklung dank des Paretoprinzips merklich
beschleunigt.&lt;/p&gt;
&lt;p&gt;Python erlaubt sowohl eine schnelle prototypische Umsetzung neuer
Anforderungen als auch die Integration anspruchsvoller Features durch
die breite Funktionalität in der Standardbibliothek und den nahezu
allumfassenden Fundus an Bibliotheken. Das Spektrum geht dabei von
einfachen Skripten über Test-Unterstützung und Web-Frontends bis hin zu
Finanzanwendungen, Bildverarbeitung und zur performancekritischen
Analyse gigantischer Datenmengen aus Tiefseesensoren und
Radioteleskopen.&lt;/p&gt;
</summary><category term="c++"></category><category term="entwicklungskosten"></category><category term="python"></category><category term="sprachintegration"></category></entry><entry><title>"The pythonic way" für IT Projekte</title><link href="https://pyvideo.org/pycon-de-2012/the-pythonic-way-fur-it-projekte.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Lutz Mende</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/the-pythonic-way-fur-it-projekte.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;&amp;quot;Potentially shippable increment of product in 30 days&amp;quot; -- dies ist die
Vision von Scrum bzw. das grundsätzliche Ziel von agiler
Softwareentwicklung bzw. Vorgehen in IT - Projekten.&lt;/p&gt;
&lt;p&gt;Dieses Ziel fordert, dass innerhalb eines Sprints , entworfen,
implementiert,&lt;/p&gt;
&lt;p&gt;getestet, freigegeben und eine Distribution erstellt und installiert
wird.&lt;/p&gt;
&lt;div class="section" id="im-rahmen-des-vortrags-wird-behandelt-wie-durch-den-einsatz-einfacher-python"&gt;
&lt;h4&gt;Im Rahmen des Vortrags wird behandelt, wie durch den Einsatz einfacher Python&lt;/h4&gt;
&lt;p&gt;Macros innerhalb des Projekt- und Issue-Trackingsystems TRAC methodisch
gute&lt;/p&gt;
&lt;p&gt;(für Entwickler und Kunden verständliche) Userstories, Usecases und
Testcases&lt;/p&gt;
&lt;p&gt;entstehen. Es wird gezeigt, wie diese erzeugt, verwaltet, angewandt und
durchgeführt&lt;/p&gt;
&lt;p&gt;werden und damit allen Projektbeteiligten ermöglicht wird, agile&lt;/p&gt;
&lt;p&gt;Paradigmen und Vorgehensweisen einfach und effizient anzuwenden.&lt;/p&gt;
&lt;p&gt;Die vorgestellten Vorgehensweisen wurden von den Autoren, mehrfach
erfolgreich&lt;/p&gt;
&lt;p&gt;in großen Industrieprojekten als auch in kleinen internen
Softwareprojekten&lt;/p&gt;
&lt;p&gt;angewendet.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="agil"></category><category term="python"></category><category term="scrum"></category><category term="testcase"></category><category term="trac"></category><category term="usecase"></category></entry><entry><title>Tiffany - Multipage-Tiff Lesen und Schreiben mit PIL ohne PIL</title><link href="https://pyvideo.org/pycon-de-2012/tiffany-multipage-tiff-lesen-und-schreiben-mit.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Christian Tismer</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/tiffany-multipage-tiff-lesen-und-schreiben-mit.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Tiffany steht für beliebiges Tiff. Das kleine Modul löst eine grosse
Menge&lt;/p&gt;
&lt;p&gt;von Problemen, hat keine Abhängigkeiten, keine Binaries und läuft&lt;/p&gt;
&lt;p&gt;überall wo Python läuft.&lt;/p&gt;
&lt;p&gt;Bei der Entwicklung von Pydica (Distributed Document Capture) wurden wir&lt;/p&gt;
&lt;p&gt;mit dem Problem konfrontiert, mehrseitige Tiff-Dateien anzuzeigen. Das&lt;/p&gt;
&lt;p&gt;GUI-Toolkit PySide (Qt) unterstützt zwar Tiff, zeigt jedoch nur die
erste Seite.&lt;/p&gt;
&lt;p&gt;Zudem behandeln wir Fax-komprimierte Dateien, was Qt aber unterstützt.&lt;/p&gt;
&lt;p&gt;PIL verfügt über eine Bereinigung der Tiff-Tags, kommt aber nicht mit
der&lt;/p&gt;
&lt;p&gt;Fax-Kompression zurecht. Es gibt seit langem einen Patch dafür, jedoch
ist&lt;/p&gt;
&lt;p&gt;der Build-Prozess erschwert und zieht mit libtiff eine Kette von
Abhängigkeiten&lt;/p&gt;
&lt;p&gt;nach sich.&lt;/p&gt;
&lt;p&gt;Daher benutzt Tiffany einige wenige Dateien aus PIL ohne diese zu
verändern und täuscht&lt;/p&gt;
&lt;p&gt;vor, die Tiff-Dateien zu entpacken, tut es aber nicht. Es werden
lediglich die&lt;/p&gt;
&lt;p&gt;Tiff-Tags ordentlich aufbereitet. Die komprimierten Daten werden so
übernommen&lt;/p&gt;
&lt;p&gt;wie sie sind. Beim Schreiben von Dateien werden daher lediglich die
vorhandenen&lt;/p&gt;
&lt;p&gt;Daten in anderer Reihenfolge wieder zusammengesetzt.&lt;/p&gt;
&lt;p&gt;Im Vortrag werde ich die Implementierung vorstellen sowie weitere
Alternativen,&lt;/p&gt;
&lt;p&gt;die Zukunft von PIL sowie auf weitere Tips und Kniffe in unserem Projekt
eingehen.&lt;/p&gt;
</summary><category term="distributed document capture"></category><category term="monkey-patching"></category><category term="multipage-tiff"></category><category term="pil"></category></entry><entry><title>Weiterentwicklung der PyCon DE Konferenzreihe</title><link href="https://pyvideo.org/pycon-de-2012/weiterentwicklung-der-pycon-de-konferenzreihe.html" rel="alternate"></link><published>2012-11-01T00:00:00+00:00</published><updated>2012-11-01T00:00:00+00:00</updated><author><name>Marc-André Lemburg</name></author><id>tag:pyvideo.org,2012-11-01:pycon-de-2012/weiterentwicklung-der-pycon-de-konferenzreihe.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Die PyCon DE Konferenzreihe wurde 2010 von einer Gruppe interessierter
Python Nutzer angestoßen und dann über eine Community Abstimmung in den
Jahren 2011 und 2012 an die Python User Group Leipzig vergeben. In
diesem Vortrag soll kurz auf die Entstehungsgeschichte eingegangen
werden und dann in Zusammenarbeit mit den Zuhörern das Konzept der Reihe
weiterentwickelt werden.&lt;/p&gt;
&lt;p&gt;Der Vortrag wird interaktiv gestaltet werden. Nach der kurzen Einführung
steht die Diskussion mit der Community und ggf. auch Abstimmung über
Vorschläge im Vordergrund. Die Resultate der Diskussionen sollen dann in
die Konzeption für die PyCon DE 2013 und 2014 einfließen.&lt;/p&gt;
</summary><category term="community"></category><category term="interaktion"></category><category term="konferenz"></category><category term="konzept"></category><category term="pycon de"></category></entry><entry><title>Agile testing in the large</title><link href="https://pyvideo.org/pycon-de-2012/agile-testing-in-the-large.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Mark Fink</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/agile-testing-in-the-large.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Im Vortrag &amp;quot;Agile testing in the large&amp;quot; nutze ich wieder OpenSource
Tools die leider nicht alle in Python implementiert sind, jedoch
hervorragend geeignet sind, um u.a. Python Webapplikationen zu testen.&lt;/p&gt;
&lt;p&gt;Der Vortrag erläuterte das Testen moderner Web-Anwendungen und gliedert
sich so:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Einleitung&lt;/li&gt;
&lt;li&gt;Continuous Integration&lt;/li&gt;
&lt;li&gt;kleine Entwickler-Tests&lt;/li&gt;
&lt;li&gt;mittlere und große Entwickler-Tests&lt;/li&gt;
&lt;li&gt;Acceptance Testing mit Selenium2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Themen exploratory Testing und Performance Testing bleiben absichtlich
unbehandelt.&lt;/p&gt;
</summary><category term="testing"></category></entry><entry><title>batou - multi-(host component environment version platform) deployment</title><link href="https://pyvideo.org/pycon-de-2012/batou-multi-host-component-environment-vers.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Christian Theune</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/batou-multi-host-component-environment-vers.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Batou ist ein Open-Source Werkzeug um mit Python das Deployment von
komplexen Anwendungen zu beschreiben und zu automatisieren.&lt;/p&gt;
&lt;p&gt;Das Konzept besteht darin eine passende allgemeine Modellsprache in Form
einer API zu definieren. Dabei stehen Wiederverwendung, Toleranz
gegenüber unbekannten Zuständen und Ausdrucksstärke im Vordergrund.&lt;/p&gt;
&lt;p&gt;Der Vortrag zeigt den Werdegang und unsere Motivation zur Entwicklung
von batou auf und zeigt die konzeptionellen Stärken anhand praktischer
Beispiele.&lt;/p&gt;
&lt;p&gt;Wir haben in den letzten Jahren eine Reihe großer und kleiner Projekte
beim Deployment betreut.&lt;/p&gt;
&lt;p&gt;Im Rahmen unserer Plattform &amp;quot;gocept.net&amp;quot; bereiten wir unsere Erfahrungen
in Dokumentation und offenen Werkzeugen auf und haben daher batou
entwickelt.&lt;/p&gt;
&lt;p&gt;batou ist sowohl in Python geschrieben und nutzt Python um Deployment-
Strukturen zu beschreiben.&lt;/p&gt;
&lt;p&gt;Wir möchten Batou gerne vorstellen um unsere Erfahrungen weiterzugeben
und (auch auf den Sprints) anzuregen sich mit dem Werkzeug
auseinanderzusetzen, Feedback zu bekommen, und daran weiterzuarbeiten.&lt;/p&gt;
&lt;p&gt;Beispiel-Code des Werkzeugs:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://code.gocep%20t.com/hg/public/batou/file/920e606b2959"&gt;https://code.gocept.com/hg/public/batou/file/920e606b2959&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Beispiel einer Deployment-Beschreibung:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://bitbucket.org/ctheune/sprin%20tsite"&gt;https://bitbucket.org/ctheune/sprintsite&lt;/a&gt;&lt;/p&gt;
</summary><category term="deployment"></category></entry><entry><title>Debugging mit Python</title><link href="https://pyvideo.org/pycon-de-2012/debugging-mit-python.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Stefan Schwarzer</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/debugging-mit-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Manche Fehler in Python-Programmen lassen sich mit Print-Anweisungen
aufdecken, in komplizierteren Fällen ist aber ein Debugger gefragt.&lt;/p&gt;
&lt;p&gt;Der Vortrag behandelt Grundlagen für die Fehlersuche in
Python-Programmen. Zunächst soll es - für die einfachen Fälle - um
Print-Anweisungen gehen. Danach kommt die Verwendung des mit Python
gelieferten Debuggers pdb. Dazu werden Grundbegriffe wie Programmzeiger
und Breakpoint erklärt und gezeigt, wie man die Befehle des Debuggers
für die Fehlersuche benutzt (zum Beispiel Setzen von Breakpoints,
schrittweise Ausführung ohne und mit Funktionsaufrufen sowie natürlich
die Untersuchung von Objekten).&lt;/p&gt;
&lt;p&gt;Ich kann den Vortrag wahlweise als 55- oder 25-Minuten-Version halten.
Im ersten Fall würde ich auch noch auf andere Debugger wie pudb, pdb++
und WinPdb eingehen.&lt;/p&gt;
</summary><category term="breakpoint"></category><category term="debugger"></category><category term="debugging"></category><category term="fehler"></category><category term="fehlersuche"></category><category term="print"></category><category term="programmzeiger"></category><category term="unterbrechungspunkt"></category></entry><entry><title>Der Django-Admin-Bereich im Überblick</title><link href="https://pyvideo.org/pycon-de-2012/der-django-admin-bereich-im-uberblick.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Andreas Albrecht</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/der-django-admin-bereich-im-uberblick.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Das Django-Webframework bringt mit einem automatisch generierten
Admin-Bereich ein mächtiges Werkzeug zur Administration von
Webapplikation mit.&lt;/p&gt;
&lt;p&gt;Der Vortrag stellt den Admin-Bereich des Django-Webframeworks in den
Vordergrund und richtet sich an Django-Einsteiger und -Interessierte,
aber auch an Entwickler, die sich bisher noch nicht sehr intensiv mit
dem Admin- Bereich auseinander gesetzt haben.&lt;/p&gt;
&lt;p&gt;Dazu wird kurz das Berechtigungskonzept als Grundlage des Admin-Bereichs
erläutert, die Erstkonfiguration beschrieben und die Funktionalität
vorgestellt. Der zweite Teil des Vortrags beschäftigt sich dann mit den
Erweiterungs- und Anpassungsmöglichkeiten, die die Django-API bereit
stellt.&lt;/p&gt;
&lt;p&gt;Die abschließende Diskussionszeit kann für Fragen verwendet werden.&lt;/p&gt;
</summary><category term="django"></category></entry><entry><title>Designing and Testing PyZMQ Applications</title><link href="https://pyvideo.org/pycon-de-2012/designing-and-testing-pyzmq-applications.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Stefan Scherfke</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/designing-and-testing-pyzmq-applications.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;PyZMQ ist eine mächtige aber dennoch einfach zu benutzende
Netzwerkbibliothek.&lt;/p&gt;
&lt;p&gt;Neben ZeroMQ’s und PyZMQ’s ausführlicher Dokumentation existieren auch
einige&lt;/p&gt;
&lt;p&gt;gute Tutorials. Über einfache Beispiele oder allgemeine
System-Architekturen&lt;/p&gt;
&lt;p&gt;gehen sie jedoch oft nicht hinaus.&lt;/p&gt;
&lt;p&gt;In diesem Vortrag werden daher Wege gezeigt, wie größere
PyZMQ-Anwendungen&lt;/p&gt;
&lt;p&gt;entworfen und getestet werden können. Behandelt werden dabei neben
Unit-Tests&lt;/p&gt;
&lt;p&gt;auch Prozess- und System-Tests.&lt;/p&gt;
&lt;p&gt;Der Vortrag basiert auf den Erfahrungen, die der Autor bei der
Entwicklung&lt;/p&gt;
&lt;p&gt;eines verteilten Simulations-Frameworks gemacht hat.&lt;/p&gt;
</summary><category term="application design"></category><category term="ømq"></category><category term="process tests"></category><category term="pyzmq"></category><category term="system tests"></category><category term="testing"></category><category term="unit tests"></category><category term="zeromq"></category></entry><entry><title>Die Infrastruktur für Erweiterungen der Wiki-Software MoinMoin (moin2).</title><link href="https://pyvideo.org/pycon-de-2012/die-infrastruktur-fur-erweiterungen-der-wiki-soft.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Reimar Bauer</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/die-infrastruktur-fur-erweiterungen-der-wiki-soft.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Die Wiki Software moin2 kann mehr als nur ein Wiki betreiben.&lt;/p&gt;
&lt;p&gt;U.a. kann man moin2 für einen Pastebin, Blog und ein Ticket-System
verwenden.&lt;/p&gt;
&lt;p&gt;Der Vortrag gibt Einblick in Erweiterungen und den Stand der
Entwicklung.&lt;/p&gt;
&lt;p&gt;moin2 ist ein Redesign der Wiki-Software von moin1.&lt;/p&gt;
&lt;p&gt;Es hat viele Merkmale mit einigen anderen Webanwendungen gemeinsam.&lt;/p&gt;
&lt;p&gt;Durch die offene Architektur und die vorhandenen Sicherheitsmechanismen
gegen Spam ist es z.B. möglich einen pastebin analog zu lodgeit zu
integrieren.&lt;/p&gt;
&lt;p&gt;Blog Posts unterscheiden sich auch nicht wesentlich von Wiki Items. Mit
einem Ticket-System lassen sich Arbeitsabläufe optimieren.&lt;/p&gt;
&lt;p&gt;Der Vortrag zeigt, wie in moin2 solche Erweiterungen integriert werden
und zeigt den Stand der aktuellen Entwicklung.&lt;/p&gt;
&lt;p&gt;Für Eigenentwicklungen wird ein Einblick&lt;/p&gt;
&lt;p&gt;auf das neue Plugin Konzept gegeben.&lt;/p&gt;
</summary><category term="moinmoin"></category><category term="plugins"></category><category term="python"></category><category term="wiki"></category></entry><entry><title>Django, App-gehoben</title><link href="https://pyvideo.org/pycon-de-2012/django-app-gehoben.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Frank Becker</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/django-app-gehoben.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Das Webframework Django kommt ganz wie Python mit &amp;quot;Batteries included&amp;quot;.
Ähnlich wie sich in Python mit seiner umfangreichen Standardlib viele
Alltagsaufgaben mit wenigen Zeilen Code erledigen lassen, so vereinfacht
Django die Entwicklung von Webanwendungen. Und genau wie es im PyPI
unzählige Packages für so gut wie jede Aufgabe gibt, so umkreist auch
Django eine Fülle von sogenannten Pluggable Apps, also Zusatzmodulen für
fast jeden Anwendungsfall.&lt;/p&gt;
&lt;p&gt;Der Vortrag stellt einige Highlights solcher Django-Packages vor, welche
ohne viel Aufwand gewöhnlichen Djangoanwendungen erweiterte
Funktionalität mitgeben.&lt;/p&gt;
&lt;p&gt;Es werden aus den Bereichen RESTful API, Formulare, Sicherheit,
CSS/SCSS/JS Handling, Softwaretesting, Taskqueue, Ajax, Suche,
Datenbankschemamigration und Authentifizierung jeweils ein populäres
Beispielpackage kurz vorgestellt. Der Fokus liegt bewußt nicht auf
Details. Gezeigt wird grob die Funktionsweise, Installation und ein paar
Erfahrungen aus dem praktischen Einsatz.&lt;/p&gt;
&lt;p&gt;Der geneigte Zuhörer soll angeregt werden ähnliche Django-Packages in
seinen eigenen Projekten zu verwenden. Der Benefit für den Einzelnen
ist, schnell meist gut getestete Funktionalität für das eigene Projekt
einzubauen. Die Gemeinschaft profitiert von gemeinschaftlich
entwickelter Freier Software.&lt;/p&gt;
</summary><category term="app"></category><category term="django"></category><category term="module"></category><category term="package"></category><category term="pluggable"></category><category term="reuseable app"></category><category term="web"></category></entry><entry><title>Django class based generic views</title><link href="https://pyvideo.org/pycon-de-2012/django-class-based-generic-views.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Klaus Bremer</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/django-class-based-generic-views.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Django class based generic views können zu einer strukturell
einheitlichen View-Programmierung beitragen, was Programm-Entwicklungen
erleichtern und mögliche Fehler verringern kann. Der Talk gibt eine
Einführung in Struktur und Funktionsweise dieses Subframeworks.&lt;/p&gt;
&lt;p&gt;Mit den class based generic views bietet Django ein umfangreiches
Subframework zum erstellen von class based views. Die Dokumentation ist
recht rudimentär und erlaubt nur einen groben Überblick, erst die Studie
des Quellcodes offenbart ein tieferes Verständnis der Klassenhierarchie
und Funktionsweise. Ziel dieses Talks ist es, durch Vermitteln der
Funktionsweise eine Einarbeitung zu erleichtern.&lt;/p&gt;
</summary><category term="class based generic views"></category><category term="django"></category></entry><entry><title>eGenix PyRun - Python Laufzeitumgebung in einer Datei</title><link href="https://pyvideo.org/pycon-de-2012/egenix-pyrun-python-laufzeitumgebung-in-einer.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Marc-André Lemburg</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/egenix-pyrun-python-laufzeitumgebung-in-einer.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;eGenix PyRun kondensiert eine komplette Python Laufzeitumgebung mit
Interpreter und Standardbibliothek in eine einzige sehr kompakte
ausführbare pyrun Programmdatei.&lt;/p&gt;
&lt;p&gt;Da PyRun keine Installation benötigt und unabhängig von einer Python
System Installation arbeitet, bietet es sich damit als portable Lösung
für Skripte, Applikationen und in der Entwicklung als virtualenv Ersatz
an.&lt;/p&gt;
&lt;p&gt;PyRun ist nur 12-13MB groß, enthält aber den größten Teil einer
üblicherweise ca. 100MB großen Python Installation. Die Größe kann per
gzexe oder upx auf unter 4MB reduziert werden.&lt;/p&gt;
&lt;p&gt;Es bietet damit eine ganze Reihe von Vorteilen gegenüber einer regulären
Python Installation. Hier die wichtigsten Aspekte:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Sehr kompakt&lt;/li&gt;
&lt;li&gt;Keine Installation oder Root Rechte notwendig&lt;/li&gt;
&lt;li&gt;Kann unabhängig von einer System Python Installation verwendet werden&lt;/li&gt;
&lt;li&gt;Bessere Startzeit als reguläres Python&lt;/li&gt;
&lt;li&gt;Kompatibel mit distutils/setuptools/pip/etc.&lt;/li&gt;
&lt;li&gt;virtualenv Ersatz&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Derzeit unterstützte Systeme sind Linux, Mac OS X und FreeBSD. Es sollte
aber auch auf anderen Unix Systemen verwendbar sein. PyRun wird von
eGenix unter einer Open Source Lizenz verfügbar gemacht.&lt;/p&gt;
&lt;p&gt;Der Vortrag wird das Projekt vorstellen, eine Anwendungsdemo zeigen und
je nach verfügbarer Zeit auch die Übersetzung demonstrieren.&lt;/p&gt;
</summary><category term="interpreter"></category><category term="kompakt"></category><category term="laufzeitumgebung"></category><category term="open-source"></category><category term="python"></category><category term="virtualenv"></category></entry><entry><title>GR - ein universelles Framework für Visualisierungsanwendungen</title><link href="https://pyvideo.org/pycon-de-2012/gr-einuniverselles-framework-f-r-visualisierung.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Josef Heinen</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/gr-einuniverselles-framework-f-r-visualisierung.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Zur Erstellung von Visualisierungsprogrammen existiert eine Vielzahl
freier und kommerzieller Tools und Bibliotheken. In einem heterogenen
Rechnerumfeld zeigt sich aber, dass es keine durchgängig einsetzbare
Lösung gibt, welche die speziellen Anforderungen in einem
wissenschaftlichen Umfeld abdeckt.&lt;/p&gt;
&lt;p&gt;GR ist ein universell einsetzbares Framework für plattformübergreifende
Visualisierungsanwendungen. Es bietet Entwicklern eine kompakte,
portable und einheitliche Grafik-Bibliothek für ihre Anwendungen. Das
Anwendungsspektrum reicht von der Erzeugung publikationsreifer
2D-Diagramme bis hin zur Darstellung komplexer 3D-Szenen.&lt;/p&gt;
&lt;p&gt;Der Vortrag beschreibt zunächst die Funktionalität des GR-Frameworks,
welches im wesentlichen auf einer Implementierung des graphischen
Kernsystems (GKS) sowie der Programmierschnittstelle OpenGL basiert. Es
wird aufgezeigt, wie GR als geschlossenes System schnell und einfach in
vorhandene Anwendungen – z.B. mit dem ctypes-Mechanismus in Python -
integriert werden kann. Neben dem Einsatz in imperativ programmierten
Systemen ist auch eine Integration in moderne objektorientierte Systeme,
die auf GUI Toolkits aufbauen, vorgesehen. Darüber hinaus werden die
Stärken des GR-Frameworks in Bezug auf die Interoperabilität mit
aktuellen Web-Technologien und mobilen Geräten herausgestellt.&lt;/p&gt;
</summary><category term="frameworks"></category><category term="opengl"></category><category term="visualisierung"></category></entry><entry><title>Hunting down the Universe - was alte Bugs mit neuer Physik zu tun haben</title><link href="https://pyvideo.org/pycon-de-2012/hunting-down-the-universe-was-alte-bugs-mit-neu.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Benedikt Hegner</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/hunting-down-the-universe-was-alte-bugs-mit-neu.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Zur Zeit findet am CERN in Genf wohl eins der größten wissenschaftlichen
Experimente der Menschheit statt - der LHC. Aber was wird an diesem
Teilchenbeschleuniger eigentlich gemacht? Warum fasziniert die Suche
nach dem Higgs eine ganze Physikergeneration? Wieso ist der LHC nicht
nur einphysikalisches, sondern auch ein soziologisches Experiment? Und
was hat schlussendlich die Suche nach neuen Teilchen mit Python und der
Suche nach Bugs zu tun? Diese Keynote wird versuchen, diese und andere
Fragen zu beleuchten.&lt;/p&gt;
</summary><category term="keynote"></category></entry><entry><title>Konferenz-Organisation mit Plone</title><link href="https://pyvideo.org/pycon-de-2012/konferenz-organisation-mit-plone.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Andreas Mantke</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/konferenz-organisation-mit-plone.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Der Vortrag zeigt die Entwicklung eines Konferenz-Organisations-Add-ons
für Plone mit dem Dexterity Framework. Dieses moderne
Content-Type-Framework ermöglicht es, einfacher neue
Artikel-/Contenttypen zu erstellen (sowohl selbst im Web als auch auf
Dateisystemebene). Das Add-on ist in der Entwicklung für die diesjährige
LibreOffice-Konferenz, die im Oktober in Berlin stattfinden wird. Es
soll auch auf künftigen LibreOffice-Konferenzen eingesetzt werden und
kann auch für andere Konferenzen verwendet werden. Das Add-on wird unter
einer Open Source Lizenz entwickelt.&lt;/p&gt;
&lt;p&gt;Das Add-On wird zunächst dazu verwendet, Vortragsvorschläge
einzureichen, zu reviewen und aus den akzeptierten Vorschlägen Tracks in
einem Programm zusammenzustellen. Es verwaltet dabei auch Speaker und
Konferenzräume. In einer weiteren Ausbaustufe ist vorgesehen, Teilnehmer
einer Konferenz zu verwalten, einschließlich der Abwicklung des
Ticketentgelts bzw. von Teilnehmerentgelten.&lt;/p&gt;
</summary><category term="add-on"></category><category term="dexterity"></category><category term="konferenz-organisation"></category><category term="plone"></category></entry><entry><title>LFS - Ein Online-Shop basierend auf Django</title><link href="https://pyvideo.org/pycon-de-2012/lfs-ein-online-shop-basierend-auf-django.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Kai Diefenbach</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/lfs-ein-online-shop-basierend-auf-django.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;LFS ist ein Online-Shop basieren auf Python, Django und jQuery. Er
erfreut sich zunehmender Aufmerksamkeit, sowohl bei Entwicklern als auch
bei Anwendern. Laut &lt;a class="reference external" href="http://djangopackages.com"&gt;djangopackages.com&lt;/a&gt;
ist LFS der am häufigsten heruntergeladene Shop für Django. Änderungen
am Source Code verfolgen über 200 Entwickler und die Google-Gruppe hat
zur Zeit über 170 Mitglieder.&lt;/p&gt;
&lt;p&gt;LFS ist praxiserprobt. Beispiele für große und erfolgreiche Shops sind:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://demmelhuber.net"&gt;demmelhuber.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://holzimgarten.com"&gt;holzimgarten.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://anwaltakademie.de"&gt;anwaltakademie.de&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kai Diefenbach, Gründer und einer der Kern-Entwickler, gibt in diesem
Vortrag ein Überblick zu folgenden Themen:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Live-Shops. Vorstellung von einigen Live-Shops: Zahlen und Fakten.&lt;/li&gt;
&lt;li&gt;Features. Vorstellung der wichtigsten Features, beispielsweise:
Produktarten, Katalog, Zahlmethoden, Liefermethoden, Mehrwertsteuer,
Checkout, etc.&lt;/li&gt;
&lt;li&gt;Entwicklung. Alles rund um die Entwicklung: Wie geht diese vor sich?
Wie kann ich teilnehmen? Wie können Erweiterungen entwickelt werden?&lt;/li&gt;
&lt;li&gt;Ausblick. Die Zukunft von LFS: Releases, neue Features, etc.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="django"></category><category term="e-commerce"></category></entry><entry><title>Lightning Talks (Mittwoch)</title><link href="https://pyvideo.org/pycon-de-2012/lightning-talks-mittwoch.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/lightning-talks-mittwoch.html</id><summary type="html"></summary><category term="lightning talks"></category></entry><entry><title>Metro-Programmierung mit Python</title><link href="https://pyvideo.org/pycon-de-2012/metro-programmierung-mit-python.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Martin v. Löwis</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/metro-programmierung-mit-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Metro ist die Nutzerschnittstelle für Apps in Windows 8. Microsoft
unterstützt App-Programmierung in C, C++, C#, VB und JavaScript. Im
Vortrag wird das API WinRT vorgestellt und gezeigt, wie mit Python Apps
entwickelt werden können.&lt;/p&gt;
&lt;p&gt;Themen sind:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Windows 8&lt;/li&gt;
&lt;li&gt;Metro-UI&lt;/li&gt;
&lt;li&gt;WinRT und COM&lt;/li&gt;
&lt;li&gt;Python als App&lt;/li&gt;
&lt;li&gt;Python-WinRT-API&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="app"></category><category term="metro"></category><category term="winrt"></category></entry><entry><title>nagiosplugin - eine Python-Bibliothek für Monitoring-Plugins</title><link href="https://pyvideo.org/pycon-de-2012/nagiosplugin-eine-python-bibliothek-fur-monitor.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Christian Kauhaus</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/nagiosplugin-eine-python-bibliothek-fur-monitor.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Auch wenn in der letzten Zeit sehr viel Bewegung in die Monitoring-Szene
gekommen ist (#monitoringsucks etc.), werden die Platzhirsche
Nagios/Icinga und ihre Standards auf absehbare Zeit nicht verschwinden.
Das Nagios-Plugin- API stellt eine sehr weit verbreitete Schnittstelle
zur Anbindung einzelner Checks an Monitoring-Systeme dar. Obwohl das API
in den Grundzügen sehr einfach ist, ist der Programmieraufwand für
vollständig konforme Plugins erstaunlich hoch.&lt;/p&gt;
&lt;p&gt;Die
&lt;a class="reference external" href="http://pypi.python.org/pypi/nagiosplugin/"&gt;*nagiosplugin*-Bibliothek&lt;/a&gt;
nimmt dem Entwickler viele Details ab, so dass er sich auf den Inhalt
seiner Checks konzentrieren kann. Der Vortrag führt in das Schreiben von
Nagios- kompatiblen Plugins ein, zeigt den typischen Aufbau von
Nagios-Plugins und das Grundprinzip eigener Plugins. Die Konfiguration
und der Betrieb von Monitoring-Systemen im Großen sollen nicht
thematisiert werden.&lt;/p&gt;
&lt;p&gt;Eine Einführung stellt die notwendigen Elemente wie Klassengerüst,
Messwerterhebung, Ranges, Statusausgabe und Performancedaten sukzessive
in aufeinander aufbauenden Beispielen vor, so dass am Ende ein
einfacher, aber praktisch einsetzbarer Check entsteht.&lt;/p&gt;
&lt;p&gt;Der Teil über fortgeschrittene Aspekte und Stolperfallen reißt
Einzelbeispiele zu Themen wie mehrere Datenquellen, Timeouts, Auswertung
wachsender Logfiles und Checks mit &amp;quot;Gedächtnis&amp;quot; an und zeigt typischen
Fehlerquellen auf.&lt;/p&gt;
&lt;p&gt;Den Abschluss bildet ein kurzer Ausblick auf die weitere Entwicklung der
&lt;em&gt;nagiosplugin&lt;/em&gt;-Bibliothek.&lt;/p&gt;
</summary><category term="icinga"></category><category term="monitoring"></category><category term="nagios"></category><category term="plugin"></category></entry><entry><title>OpenOffice-Dokumente selbst modifizieren</title><link href="https://pyvideo.org/pycon-de-2012/openoffice-dokumente-selbst-modifizieren.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Reinhard Wobst</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/openoffice-dokumente-selbst-modifizieren.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Der Vortrag stellt eine Python-Klasse vor, die das fast beliebige
Modifizieren von Open/LibreOffice-Dokumenten bequem ermöglicht. Es geht
mehr um die Vorstellung einer Methode als um ein fertiges Werkzeug. So
manche Aufgabe lässt sich damit erheblich einfacher bewerkstelligen als
mit Makros oder über die pyUNO-Schnittstelle.&lt;/p&gt;
&lt;p&gt;Hat man eine größere Zahl von ODF-Files (also im Open Document Format)
oder ein großes ODF-Dokument an vielen Stellen in gleicher Weise zu
bearbeiten, ist das ermüdend, zeitaufwändig und fehleranfällig. Wozu
gibt es Computer? Open/LibreOffice erlaubt zwar Makros, doch deren
Leistung ist beschränkt, und die pyUNO-Schnittstelle ist kompliziert,
schlecht dokumentiert und noch nicht ausgetestet.&lt;/p&gt;
&lt;p&gt;Es geht auch anders: ODF-Files sind Zip-Archive von XML-Files, und diese
lassen sich mit Pythonskripten einfach bearbeiten. Das ODF-Format ist
relativ leicht zu verstehen (der Standard ist gut lesbar), der Phantasie
des Anwenders sind keine Grenzen gesetzt - sei es, um manuelle
Formatierungen zu markieren, in bestimmte Tabellen Spalten einzufügen
oder diese um Zeilen zu ergänzen, deren Berechnung partout nicht ins
Konzept der Calc-Formeln passen will.&lt;/p&gt;
&lt;p&gt;Dabei sind allerdings einige kleine Stolpersteine zu beachten, auf die
der Vortrag hinweist. Die hier vorgestellte Klasse ist eine mögliche
Methode, um sich auf die &amp;quot;wesentlichen Dinge&amp;quot; konzentrieren zu können.&lt;/p&gt;
</summary></entry><entry><title>Plone Theming, flexibel, schnell und einfach!</title><link href="https://pyvideo.org/pycon-de-2012/plone-theming-flexibel-schnell-und-einfach.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Maik Derstappen</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/plone-theming-flexibel-schnell-und-einfach.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Das Theming von komplexen Content Management Systemen ist häufige eine
sehr arbeitsintensive Angelegenheit - Plone ist dabei keine Ausnahme.
Dank Diazo ist kein Plone-Experten-Wissen mehr notwendig, um beliebige
Designs in Plone umzusetzen. Der Vortrag stellt an einem Beispiel aus
der Praxis den Einsatz von Diazo vor.&lt;/p&gt;
&lt;p&gt;Dank Diazo und plone.app.theming kann ein Designtemplate (aus html und
css komplett unabhängig vom CMS gehalten werden. Ein einfaches Regelwerk
verknüpft das Designtemplate mit dem CMS. Ein Theme kann als Zip-Datei
verpackt, direkt in Plone importiert und aktiviert werden ohne das
System neu starten zu müssen. Der Vortrag weist an Beispielen den Weg
vom statischen Template zum dynamischem Plone-Theme. Schwerpunkt ist
hierbei die Erzeugung der Regeln mit denen die Elemente des statischen
Templates mit den Inhalten aus dem CMS verbunden werden.&lt;/p&gt;
</summary><category term="cms"></category><category term="diazo"></category><category term="plone"></category></entry><entry><title>Practical DevOps</title><link href="https://pyvideo.org/pycon-de-2012/practical-devops.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Schlomo Schapiro</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/practical-devops.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;DevOps ist eine aktuelle Bewegung in der IT, die sich zur Aufgabe macht,
ein Umdenken in den klassischen Lagern Entwicklung und Betrieb
einzuleiten. Der Vortrag wirft einen Blick auf die noch junge Bewegung
und zeigt mit Geschichten aus dem wahren Leben, wie sich die agile
Denkweise fortschreiben lässt, die mit SCRUM ins allgemeine Bewusstsein
getreten ist.&lt;/p&gt;
&lt;p&gt;Schlomo gibt einen Überblick über das Thema und berichtet über die
DevOps Erfolge bei der
&lt;a class="reference external" href="http://www.immobilienscout24.de"&gt;ImmobilienScout24&lt;/a&gt;. Nach 2 Jahren
agilem Umdenken in der Entwicklung zeigte sich, dass die klassische
Gewaltenteilung Plan - Build - Run einfach nicht mehr gut funktioniert
weil sich die Anforderungen und Erwartungen sowohl in der Entwicklung
als auch im Betrieb ändern und daher auch eine neue Form der
Zusammenarbeit nahe legen.&lt;/p&gt;
&lt;p&gt;Die Ideen aus der DevOps Bewegung lassen sich fast überall einsetzen, wo
bisher ein &amp;quot;über den Zaun werfen&amp;quot; gespielt wird und haben das primäre
Ziel, alle Beteiligten gemeinsam an einem Strang ziehen zu lassen. Mit
den Ideen und Erfahrungen aus dem Vortrag lassen sich sicher die ersten
Schritte in die richtige Richtung einleiten.&lt;/p&gt;
</summary><category term="agile"></category><category term="devops"></category><category term="kanban"></category><category term="open source"></category><category term="python"></category><category term="scrum"></category><category term="web"></category></entry><entry><title>Putting Technical Debt under Control</title><link href="https://pyvideo.org/pycon-de-2012/putting-technical-debt-under-control.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Waleri Enns</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/putting-technical-debt-under-control.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;&amp;quot;You don't control what you cannot measure&amp;quot;&lt;/p&gt;
&lt;p&gt;Tom Peters paraphrasing Lord Kelvin&lt;/p&gt;
&lt;p&gt;Die aus den Fugen geratende Qualität des Source Codes und das&lt;/p&gt;
&lt;p&gt;excessive Akkumulieren des sogenannten Technical Debt ist eine häufige&lt;/p&gt;
&lt;p&gt;Ursache für das vorzeitige Ableben von Software Projekten. Das&lt;/p&gt;
&lt;p&gt;Kontrollieren dieser Aspekte ist essentiell für eine langfristige&lt;/p&gt;
&lt;p&gt;Gesundheit der Software. Die Kontrolle setzt jedoch Messung voraus;&lt;/p&gt;
&lt;p&gt;erst die Definition und systematische Erhebung einer Qualitätsmetrik&lt;/p&gt;
&lt;p&gt;versetzt den Entwickler (und seinen Manager) in die Lage, die Qualität&lt;/p&gt;
&lt;p&gt;dieser Software zu überwachen und ggf. kontinuierlich zu verbessern.&lt;/p&gt;
&lt;p&gt;Das Gespann &amp;quot;Sonar + Python AddOn&amp;quot; gibt eine State-Of-The-Art-Antwort&lt;/p&gt;
&lt;p&gt;auf die Frage &amp;quot;Was ist qualitativ hochwertiger Python Code?&amp;quot;. Dieser&lt;/p&gt;
&lt;p&gt;Vortrag führt aus, wie die Qualität bzw. Technical Debt einer Python&lt;/p&gt;
&lt;p&gt;Code-Basis gemessen, zu einer Kennzahl 'verdichtet' und kontrolliert&lt;/p&gt;
&lt;p&gt;werden kann.&lt;/p&gt;
&lt;p&gt;Dieser auf Softwaremetriken basierende Ansatz wird auch Continuous&lt;/p&gt;
&lt;p&gt;Inspection genannt. Es ist abzusehen, dass diese Technologie einen&lt;/p&gt;
&lt;p&gt;ähnlich starken Einfluss auf die Entwicklung von Software haben wird&lt;/p&gt;
&lt;p&gt;wie die Continuous Integration / Continuous Deployment in der letzten&lt;/p&gt;
&lt;p&gt;Dekade.&lt;/p&gt;
&lt;p&gt;Mit Sonar und dem (noch jungen) Python Plugin steht die wesentliche&lt;/p&gt;
&lt;p&gt;Infrastruktur um Continuous Inspection in der Praxis für Python&lt;/p&gt;
&lt;p&gt;Projekte umzusetzen. Das Ziel dieses Vortrags ist es, die Python&lt;/p&gt;
&lt;p&gt;Community für diese Technologie zu begeistern.&lt;/p&gt;
</summary><category term="code"></category><category term="qualität"></category></entry><entry><title>pytest - rapid and simple testing with pytest</title><link href="https://pyvideo.org/pycon-de-2012/pytest-rapid-and-simple-testing-with-pytest.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Holger Krekel</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/pytest-rapid-and-simple-testing-with-pytest.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Das Werkzeug py.test erlaubt es schnell und einfach Test für
Python-Programme zu schreiben. Dieser Vortrag stellt die grundlegende
Nutzung von py.test und wichtige Terminologie dazu vor. Zusätzlich zeigt
die Präsentation wie py.test Unit- und funktionale Test mit besonderen
Mechanismen wie &amp;quot;perfected assertions&amp;quot; und &amp;quot;dependency injection&amp;quot;
unterstützt.&lt;/p&gt;
&lt;p&gt;Der Vortrag führt in die Prinzipien der Unit- und funktionalen Tests
kurz ein und geht auf die Vorteile von py.test gegenüber dem in der
Standardbibliothek enthalten Paket unittest ein. So kann py.test Tests,
die über verschiedene Python-Versionen und- Implementierungen
hinweggehen, ausführen. Der Schreibsstil der Tests ist &amp;quot;pythonic&amp;quot; und
die Plugins lassen sich für verschiedene Projekte nutzen.&lt;/p&gt;
&lt;p&gt;Nach einem einfachen Test-Beispiel, das die Grundprinzipen umfasst,
folgen Beispiel zu &amp;quot;dependency injection&amp;quot;. Die Nutzung von py.test im
Mozilla Projekt webqa und die Möglichkeiten des &amp;quot;mocking&amp;quot; und
&amp;quot;monkeypatching&amp;quot; schließen den Vortrag ab.&lt;/p&gt;
</summary><category term="python"></category><category term="testen"></category></entry><entry><title>Python 3.3</title><link href="https://pyvideo.org/pycon-de-2012/python-3-3.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Martin v. Löwis</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/python-3-3.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Am 29.9.2012 wurde nach 19-monatiger Entwicklungszeit Python 3.3&lt;/p&gt;
&lt;p&gt;fertiggestellt. Es ist die größte Erweiterung von Python seit Version&lt;/p&gt;
&lt;p&gt;3.0; Änderungen gab es in allen Bereichen der Implementierung (Syntax,&lt;/p&gt;
&lt;p&gt;Standardbibliothek, Paketierung, interne Strukturen). In dem Vortrag&lt;/p&gt;
&lt;p&gt;werden die wesentlichen Änderungen umrissen, sowohl aus Anwendersicht&lt;/p&gt;
&lt;p&gt;wie auch aus Sicht eines core committers.&lt;/p&gt;
</summary><category term="python"></category><category term="python3"></category></entry><entry><title>Python und OpenCV</title><link href="https://pyvideo.org/pycon-de-2012/python-und-opencv.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Andreas Bunkahle</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/python-und-opencv.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python hat zu Unrecht den Ruf einer einfachen Skriptsprache, die für
Grafikanwendungen ungeeignet sei. Gerade in Verbindung mit den starken
Python- Bibliotheken und Modulen, die in C++ geschrieben sind, wird die
Brillianz und Einfachheit von Python als vollwertige Programmiersprache
auch für Grafikanwendungen sehr deutlich. Hier wird exemplarisch das
Zusammenspiel der mächtigen Grafikbibliothek OpenCV mit Python
demonstriert.&lt;/p&gt;
</summary></entry><entry><title>Schnelle Schleifen mit Cython</title><link href="https://pyvideo.org/pycon-de-2012/schnelle-schleifen-mit-cython.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Stefan Behnel</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/schnelle-schleifen-mit-cython.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Keine PyCon(-DE) ohne Cython, die de-facto Standarderweiterungssprache
für Python. Diesmal geht es um ein paar neuere Spracherweiterungen zur
Python- Syntax, die den Cython-Compiler besonders attraktiv für
High-Performance- Computing machen: Parallele Schleifen mit OpenMP,
effizientes Slicing mit Memory-Views und generische Funktionen.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://cython.org"&gt;Cython&lt;/a&gt; ist eine Programmiersprache, die die
Sprache Python um zusätzliche Features ergänzt. Sie macht das Schreiben
von schnellen Erweiterungsmodulen für CPython und das Anbinden von
externen nativen Bibliotheken (C/C++/Fortran/...) so einfach wie Python
selbst.&lt;/p&gt;
&lt;p&gt;Dieser Vortrag gibt einen kurzen Einblick in Cython und speziell in die
Optimierung von schleifenbasierten Algorithmen über NumPy Arrays, mit
denen große Datenmengen effizient verarbeitet werden können. Dazu werden
Memory- Views verwendet, die mit Version 0.16 in Cython Einzug gehalten
haben. Hinzu gesellen sich parallele Schleifen, sowie generische
Funktionen, die es dem Compiler erlauben, einmal geschriebenen Code für
verschiedene native Datentypen zu optimieren.&lt;/p&gt;
&lt;p&gt;Eine ausführliche Version dieses Vortrags mit entsprechenden Übungen
wird zusätzlich als Tutorial angeboten.&lt;/p&gt;
</summary></entry><entry><title>Virtuelle Entwicklungsumgebungen mit Vagrant</title><link href="https://pyvideo.org/pycon-de-2012/virtuelle-entwicklungsumgebungen-mit-vagrant.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Markus Zapke-Gründemann</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/virtuelle-entwicklungsumgebungen-mit-vagrant.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Oft benötigt man für verschiedene Projekte ganz unterschiedliche
Bibliotheken, Dienste und Werkzeuge. Alle Abhängigkeiten auf einer
Maschine zu installieren kann schnell anstrengend bis unmöglich werden.
Hier kommt Vagrant ins Spiel: Mit Hilfe von Vagrant kann man einfach und
schnell Virtuelle Maschinen als Entwicklungsumgebungen erstellen,
konfigurieren und benutzen.&lt;/p&gt;
&lt;p&gt;Durch die Nutzung von (vorhandenen) Provisioning Tools wie Chef oder
Puppet kann man vorhandene Konfigurationen von Produktiv-System zum
Setup der Virtuellen Maschinen nutzen. Außerdem lassen sich mit Vagrant
auch komplexe Cluster-Setups auf dem eigenen Rechner aufbauen.&lt;/p&gt;
</summary><category term="vagrant"></category><category term="virtual box"></category><category term="virtuelle maschinen"></category></entry><entry><title>"White Box Debugging" - Debugger für Unittests nutzen</title><link href="https://pyvideo.org/pycon-de-2012/white-box-debugging-debugger-f-r-unittests-nut.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Reinhard Wobst</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/white-box-debugging-debugger-f-r-unittests-nut.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;&amp;quot;White Box Testing&amp;quot; ist das Testen von internen Zuständen zur Laufzeit,
während ubliche Unittests in der Regel nur Funktionen rufen. Man kann
aber mittels eines Debuggers White Box Testing durchführen - ein
Pythonskript erlaubt dies fur Python mit pdb wie auch für C/C++ -
Programme mit gdb.&lt;/p&gt;
&lt;p&gt;Unittests sind ohne Frage unerlässlich, aber oft aufwändig zu
programmieren und beschränkt aussagefähig, da in der Regel nur einzelne
Funktionen oder Module als Black Box getestet werden können. Nicht
selten ist sogar gesonderter Code notwendig, um sinnvolle Tests zu
ermöglichen.&lt;/p&gt;
&lt;p&gt;Aussagekräftiger und naheliegender wären Tests auf Werte mitten im Code,
doch solch eine Funktionalität bietet bisher nur die assert-Anweisung,
die bei Fehlern mit einem wenig aussagekräftigen Abbruch endet.&lt;/p&gt;
&lt;p&gt;Die Idee des Python-Skripts &amp;quot;wbd&amp;quot; (&amp;quot;white box debugging&amp;quot;) ist, aus
Kommentaren im Quelltext Konfigurationsfiles für Debugger zu erzeugen,
so dass an bedingten Breakpoints Tests stattfinden. Beim Fehler landet
man gleich im Debugger und kann die Umgebung analysieren.&lt;/p&gt;
&lt;p&gt;Das funktioniert derzeit für Pythonskripte und C/C++-Programme und ist
auch gut als Hilfsmittel beim Debuggen selbst einzusetzen.&lt;/p&gt;
</summary></entry><entry><title>10 Jahre Python-Forum</title><link href="https://pyvideo.org/pycon-de-2012/10-jahre-python-forum.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Marek Kubica</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/10-jahre-python-forum.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;2012 wurde das deutsche Python-Forum nun 10 Jahre alt. Zeit das Forum
den Leuten vorzustellen, die das Forum noch nicht kennen oder eine
Abneigung zu Webforen haben. 10 Jahre, das ist genug Zeit um in dessen
Geschichte zurückzublicken wie es zum Forum kam und wie es sich
entwickelt hat, was es so für Phasen gab und wie sich die
Python-Community in dieser Zeit geändert hat.&lt;/p&gt;
&lt;p&gt;Ebenfalls kann man die Entwicklung anhand einiger Statistiken
verdeutlichen und vielleicht daraus Trends für die Verbreitung von
Python in Deutschland ableiten.&lt;/p&gt;
&lt;p&gt;Ein wichtiger Punkt ist natürlich die Community, welche Regeln im Forum
gelten und warum wir finden dass sie funktionieren. Dabei muss man
verstehen wie die Community &amp;quot;tickt&amp;quot; und wie der Job eines Moderators
ausschaut. Die ein oder andere lustige Geschichte findet sich im Vortrag
sicher auch, von den Foren- Memes, über Flamewars bishin zum
gemeinschaflichen Codegolfen. Und wer Interesse hat, kann einfach so im
Forum auf &lt;a class="reference external" href="http://www%20.python-forum.de/"&gt;python-forum.de&lt;/a&gt; mitlesen
oder sich anmelden und mitposten.&lt;/p&gt;
&lt;p&gt;Der Vortragende ist nun seit einigen Jahren Mitglied im Foren-Team und
sowohl im Forum als auch auf der Newsgroup/Mailingliste und hat schon
eine ganze Reihe Trends gesehen und Threads gelesen.&lt;/p&gt;
</summary></entry><entry><title>Cython mit PyPy - das Beste aus drei Welten</title><link href="https://pyvideo.org/pycon-de-2012/cython-mit-pypy-das-beste-aus-drei-welten.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Stefan Behnel</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/cython-mit-pypy-das-beste-aus-drei-welten.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Die Programmiersprache Cython (&lt;a class="reference external" href="http://cython.org"&gt;http://cython.org&lt;/a&gt; &amp;quot;Web- Seite des
Cython-Projekts&amp;quot;) ist das de-facto Standard-Tool um CPython um nativen
Code zu erweitern. Die Python-ähnliche Sprache macht schon seit einigen
Jahren das Schreiben von schnellen Erweiterungsmodulen für CPython und
das Anbinden von externen nativen Bibliotheken (C/C++/Fortran/...) so
einfach wie Python selbst und gleichzeitig so effizient wie C. Davon
profitiert besonders das weite Feld des High-Performance-Computing in
Python (NumPy/SciPy/Sage/...), aber auch zahllose andere Bereiche, die
eine effiziente Verarbeitung großer Datenmengen und die Anbindung von
nativen Bibliotheken an die Programmiersprache Python benötigen.&lt;/p&gt;
&lt;p&gt;Die neueste Version des Cython-Compilers bietet erstmals auch
Unterstützung für PyPy an, eine alternative Python-Implementierung, die
vor allem durch ihren schnellen JIT-Compiler von sich reden macht.
Dadurch kann einmal mit Cython geschriebener und in C übersetzter Code
sowohl in CPython als auch in PyPy verwendet werden. So wird es
beispielsweise möglich, in einer einzigen Code-Basis effiziente
Anbindungen externer Bibliotheken für beide Laufzeitumgebungen zu
entwickeln.&lt;/p&gt;
&lt;p&gt;Dieser Vortrag von einem der Cython Core-Entwickler erklärt, welche
Fallstricke dabei noch auf Benutzerseite zu erwarten sind und gibt
Hilfestellungen beim Schreiben von Cython-Code, der sowohl in CPython
als auch in PyPy funktioniert.&lt;/p&gt;
</summary></entry><entry><title>DEXISION -- Moderne Finanztheorie und -praxis mit Python</title><link href="https://pyvideo.org/pycon-de-2012/dexision-moderne-finanztheorie-und-praxis-mit.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/dexision-moderne-finanztheorie-und-praxis-mit.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;DEXISION ist eine kommerzielle Bewertungslösung für Finanzderivate. Sie
wurde durch die Visixion GmbH im Wesentlichen auf Basis von Python
entwickelt. Der Vortrag zeigt, wie moderne, Web-basierte Finanzlösungen
mittels Python zu implementieren sind. Aspekte wie Effizienz in der
Entwicklung, Performance, Erweiterbarkeit, Wartbarkeit und Sicherheit
sind dabei von besonderer Bedeutung.&lt;/p&gt;
&lt;p&gt;Die Architektur von DEXISION fußt auf einem LAMP-Stack und es kommen
dabei nur Open Source-Komponenten zum Einsatz. Unseres Wissens nach ist
DEXISION nach wie vor die einzige kommerzielle Finanzlösung dieser Art,
die in allen Bereichn -- auch bei rechenintensiven Simulationsaufgaben
-- voll auf Python setzt.&lt;/p&gt;
</summary><category term="bewertung von derivaten"></category><category term="dexision"></category><category term="finanzen"></category><category term="on demand"></category><category term="scientific python"></category><category term="simulation"></category></entry><entry><title>Dokumentenmanagement mit Plone</title><link href="https://pyvideo.org/pycon-de-2012/dokumentenmanagement-mit-plone.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Maik Derstappen</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/dokumentenmanagement-mit-plone.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Plone ist weit mehr als nur ein CMS, es bietet mit seiner einfachen
Rechteverwaltung, dem flexiblen Arbeitsabläufen (Workflows), der
möglichen Anbindung an Dateisysteme per Web-Dav und der ausgereiften
Suchfunktion, die mit Volltextindizierung und Livesearch aufwarten kann,
gute Voraussetzungen für den Einsatz im Intra- und Extranet.&lt;/p&gt;
&lt;p&gt;Der Vortrag gibt aus Anwendersicht einen kurzen Einblick in die
Möglichkeiten, Plone im Intranet oder Extranet zur Verwaltung von
Dokumenten und Informationen einzusetzen. Es werden Themen wie
Rechteverwaltung, globale und lokale Arbeitsabläufe, Regeln zur
Ereignissteuerung, Möglichkeiten der eingebauten Suchfunktionen
(Volltextsuche/Verschlagwortung), sowie der Einsatz von Kollektionen zur
Aufbereitung von Inhalten behandelt.&lt;/p&gt;
</summary><category term="cms"></category><category term="dms"></category><category term="extranet"></category><category term="intranet"></category><category term="plone"></category></entry><entry><title>Echtzeit Browsergames</title><link href="https://pyvideo.org/pycon-de-2012/echtzeit-browsergames.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Michael P. Jung</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/echtzeit-browsergames.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Mit gevent und browserseitigem JavaScript können Mehrspieler
Browsergames entwickelt werden, die Spielerinteraktionen in Echtzeit
zulassen. Dieser Vortrag versucht Lust auf das Echtzeit Web zu machen
und zeigt anhand eines konkreten Spieles (KODEX, &lt;a class="reference external" href="http://kodexgame.com/"&gt;http://kodexgame.com/&lt;/a&gt;)
Lösungen für Entwicklung, Hosting und Vertrieb auf.&lt;/p&gt;
&lt;p&gt;Der Vortrag beleuchtet neben den Implikationen des Realtime Web wie
Caching, Scaling, Same-Origin-Policy und Cross-Origin-Resource-Sharing
auch Strategien zur horizontalen Skalierbarkeit, oder: Wie löst man das
&lt;a class="reference external" href="http://www.kegel.com/c10k.html"&gt;C10K&lt;/a&gt; Problem?&lt;/p&gt;
&lt;p&gt;Während NodeJS oft als &lt;em&gt;die&lt;/em&gt; Lösung für Echtzeitanwendungen angepriesen
wird, kommt hier auf der Serverseite gezielt Python mit gevent zum
Einsatz.&lt;/p&gt;
</summary><category term="django"></category><category term="echtzeit"></category><category term="game"></category><category term="gevent"></category><category term="javascript"></category><category term="python"></category><category term="rabbitmq"></category><category term="realtime"></category><category term="socketio"></category><category term="spiel"></category></entry><entry><title>Effiziente Datenanalyse mit pandas</title><link href="https://pyvideo.org/pycon-de-2012/effiziente-datenanalyse-mit-pandas.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Dr. Yves J. Hilpisch</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/effiziente-datenanalyse-mit-pandas.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Datenanalyse ist eine der Kernaufgaben moderner Technologie. pandas
(vgl. &lt;a class="reference external" href="http://pandas.pydata.org"&gt;http://pandas.pydata.org&lt;/a&gt;) ist eine leistungsstarke
Python-Bibliothek, die die Möglichkeiten zur Datenanalyse mit
Python/NumPy/SciPy in viele Richtungen erweitert. Der Fokus liegt dabei
auf Convenience und Performance.&lt;/p&gt;
&lt;p&gt;Python in Kombination mit pandas macht Datenanalyse im Unternehmens- und
Forscheralltag effizient und kann z.T. sogar komplexe und
kostenintensive Business Intelligence-Lösungen ersetzen. Besondere
Stärken zeigen sich im Zeitreihenmanagement, was für viele Branchen und
Unternehmen eine immer höhere Bedeutung erlangt (z.B. Finanzbranche,
Energieversorger).&lt;/p&gt;
&lt;p&gt;Mit pandas werden die guten Datenanalysefähigkeiten von einer typischen
Python-Installation mit NumPy, SciPy etc. in vielerlei Hinsicht
erweitert, indem z.B. viele Eigenschaften und Features der statistischen
Sprache R in die Python-Welt portiert werden. Es ist dabei kein Ersatz
für Standard- Bibliotheken wie NumPy, sondern eine nützliche Erweiterung
mit viel &amp;quot;eingebauter Intelligenz&amp;quot; für die Datenanalyse.&lt;/p&gt;
</summary><category term="datenanalyse"></category><category term="pandas"></category><category term="zeitreihen"></category></entry><entry><title>EnArgus - ein ontologiebasiertes Forschungsinformationssystem</title><link href="https://pyvideo.org/pycon-de-2012/enargus-ein-ontologiebasiertes-forschungsinforma.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Thomas Koch</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/enargus-ein-ontologiebasiertes-forschungsinforma.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Forschungsaktivitäten in vielen Disziplinen werden durch
unterschiedliche politische Instrumente gefördert. Die Erfassung und
Darstellung von betriebswirtschaftlichen Kennzahlen zu
Forschungsaktivitäten ist bereits etablierte Praxis; darauf aufbauende
Informationssysteme bieten jedoch oft nur unzureichende Auskunft über
inhaltliche Zusammenhänge und Entwicklungen. Am Beispiel des
Forschungsthemas Energietechnik wird im EnArgus-Projekt untersucht, wie
sich die Transparenz staatlicher Förderpolitik durch Aufbereitung
vorhandener Projektdatenbanken und inhaltliche Erschließung mit
Unterstützung einer Fachontologie verbessern lässt und die Ergebnisse
auch der interessierten Öffentlichkeit zugänglich gemacht werden können.&lt;/p&gt;
&lt;p&gt;Der Vortrag gibt eine Einführung in das Thema ontologiebasierte Suche
und stellt das Forschungsprojekt EnArgus
(&lt;a class="reference external" href="http://www.enargus.de"&gt;www.enargus.de&lt;/a&gt;) vor. Das Ziel von EnArgus
ist die Konzeption, Entwicklung und Erprobung eines zentralen
Informationssystems für Energieforschungsvorhaben aus dem Bereich der
Förderung durch Bund und Länder. Das EnArgus-System soll Politik und
Gesellschaft einen Zugang zu Informationen über die Energieforschung
ermöglichen und so die Transparenz staatlicher Förderpolitik verbessern.
Der Einsatz von Python spielt bei der Systementwicklung in EnArgus eine
bedeutende Rolle.&lt;/p&gt;
&lt;p&gt;EnArgus ist ein gemeinsames Vorhaben aus Energieforschung und
Informatik. Zur inhaltlichen Erschließung der Anwendungsdomäne werden
von Energieexperten Texte in einem Wiki verfasst und bilden die
Grundlage zum Aufbau der Energieforschungs-Ontologie. Dabei kommt u.a.
die Wiki-Software MoinMoin zum Einsatz.&lt;/p&gt;
</summary><category term="energieforschung"></category><category term="ontologie"></category><category term="pylucene"></category><category term="suche"></category><category term="wiki"></category></entry><entry><title>Erfahrungen mit Py4A sowohl mit SL4A als auch Kivy</title><link href="https://pyvideo.org/pycon-de-2012/erfahrungen-mit-py4a-sowohl-mit-sl4a-als-auch.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Nik Klever</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/erfahrungen-mit-py4a-sowohl-mit-sl4a-als-auch.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Es werden die Erfahrungen mit der Scripting Layer for Android API (SL4A)
aus einer Lehrveranstaltung vorgestellt, die Grundlage für das
Python-for-Android (Py4A) Package ist. Die einfache SL4A API erlaubt
Studierenden die Erstellung von einfachem und schnell entwickelten
Python Code für mobile Anwendungen. Einige Eigenschaften der Android GUI
und des darunterliegenden Linux werden mit einfachen Anwendungen,u.a.
einer ortsbezogenen (GPS) Anwendung vorgestellt. Zudem wird auch der
Unterschied zwischen der Device-orientierten und der
Emulator-orientierten Entwicklung und die hierfür notwendigen Tools
angesprochen. Im zweiten Teil wird auf den Ansatz Python-For-Android aus
der Multitouch-Entwicklungsumgebung Kivy eingegangen, deren GUI
plattformübergreifend ausgelegt ist und für alle Platformen (Windows,
Mac, Linux, iOS, Android) auf OpenGL ES 2.0 aufgebaut ist. Der Vortrag
wird weniger in die Details eingehen, als eher die Möglichkeiten
aufzeigen, Python auch auf Smartphones zu nutzen und einzusetzen.&lt;/p&gt;
</summary><category term="android"></category><category term="kivy"></category><category term="py4a"></category><category term="sl4a"></category></entry><entry><title>Funktionale Programmierung mit Python</title><link href="https://pyvideo.org/pycon-de-2012/funktionale-programmierung-mit-python.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Mike Müller</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/funktionale-programmierung-mit-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In den letzten Jahren hat die funktionale Programmierung wieder mehr
Aufmerksamkeit erhalten. Das Vorurteil nur für akademische Nutzer
interessant zu sein hat sich stark abgeschwächt. Haskell, Erlang und F#
sind funktionale Programmiersprachen, die verstärkt für praktische
Zwecke zum Einsatz kommen.&lt;/p&gt;
&lt;p&gt;Python unterstütz mehrere Programmierparadigmen. Neben der prozeduralen
und objektorientierten unterstütz es auch wichtige Konzepte der
funktionalen Programmierung. Der Vortrag zeigt wie sich diese Merkmale
wie Funktionen als Objekte erster Klasse, Funktionsabschlüsse
(Closures), Funktionen ohne Seiteneffekte, Currying, verzögerte
Auswertung, Vermeidung veränderlicher Datenstrukturen und Einsatz von
Iteratoren, Generator und Comprehensions anstatt von Schleifen nutzen
lassen. Beispiele verdeutlichen die Vor- und Nachteile des funktionellem
Ansatzes für verschiedene Aufgaben.&lt;/p&gt;
&lt;p&gt;Der Aufbau eines Programms mit funktionalen Ansatz kann sich stark von
dem eines objektorientierten unterscheiden. Beispiele zeigen wie mit
Python Teile eines Programms die Vorteile der funktionalen
Programmierung nutzen können und sich schrittweise funktionale
Prinzipien in objektorientierte Programme einbeziehen lassen.&lt;/p&gt;
&lt;p&gt;Der Vortrag verdeutlicht wie das Modul itertools die verzögerte
Auswertung unterstützt. Mit den Funktionen dieses Moduls lassen sich
Algorithmen oft kurz, gut lesbar und effizient umsetzen. Auch hier ist
eine Integration in sonst nicht-funktional geschriebene Programme
einfach möglich.&lt;/p&gt;
</summary><category term="closure"></category><category term="funktional"></category><category term="generator"></category><category term="iterator"></category><category term="itertools"></category><category term="paradigma"></category><category term="verzögerte auswertung"></category></entry><entry><title>"Getting things done" - Pragmatische Projekte mit Plone</title><link href="https://pyvideo.org/pycon-de-2012/getting-things-done-pragmatische-projekte-mit.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Andreas Jung</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/getting-things-done-pragmatische-projekte-mit.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Plone ist ein komplexes Web-Framework with vielen Modulen und
vielschichtigen Abstraktionsebenen. Kundenprojekte im Bereich Web
erfordern oft Anpassungen auf mehreren Ebenen: neue Inhaltstypen,
Änderungen an Templates und existierenden Funktionalitäten etc. Es ist
immer schwierig den richtigen Weg bei einer Anpassung zu finden
insbesondere wenn die üblichen Projektressourcen wie Personal, Zeit und
Budget begrenzt sind und nicht beliebig skalierbar sind.&lt;/p&gt;
&lt;p&gt;In dem Vortrag berichte ich wie wir in vergangenen großen Webprojekten
mit diesem Spannungsfeld umgegangen sind und Plone-Anpassungen in einer
pragmatischen Art und Weise durchgeführt haben - ohne dem Kunden einen
Sack voller hässlicher Workarounds zu liefern aber auch nicht mit dem
Anspruch die perfekteste Lösung gebaut zu haben.&lt;/p&gt;
&lt;p&gt;Ich behandle Techniken zur Anpassungen von existierenden Templates und
Views, Strategien bei der Behebung von Fehlern in Plone oder
Drittprodukten, die Verwendung von Site-Fixtures, um Kunden und Designer
frühzeitig eine Site mit Fake-Inhalten (Text + Bilder) zu versorgen
sowie Ansätze zum pragmatischen Testen in großen Web-Projekten.&lt;/p&gt;
</summary></entry><entry><title>Grundlagen des Open-Source-Lizenzrechts</title><link href="https://pyvideo.org/pycon-de-2012/grundlagen-des-open-source-lizenzrechts.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Andreas Schreiber</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/grundlagen-des-open-source-lizenzrechts.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Ein kompakter Überblick über die rechtlichen Aspekte von
Open-Source-Software. Neben den rechtlichen Grundlagen werden die
wesentlichen Eigenschaften von Open-Source-Lizenzen vorgestellt.
Außerdem werden einige verbreitete Lizenzen detaillierter erläutert.&lt;/p&gt;
&lt;p&gt;Inhalt:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Rechtliche Grundlagen: Urheberrecht und Lizenzrecht&lt;/li&gt;
&lt;li&gt;Open-Source-Software: Lizenzarten von Software, Definition
Open-Source-Software, Open-Source-Lizenzmodelle, Copyleft vs.
Non-Copyleft&lt;/li&gt;
&lt;li&gt;Ausgewählte Open-Source-Lizenzen: Apache License, GPL, AGPL, LGPL,
BSD License, Eclipse Public License, ...&lt;/li&gt;
&lt;li&gt;Praktische Nutzung von Open-Source-Software: Lizenzkompatibilität,
Nutzung von Open-Source-Software in eigenen Programmen, Auswahl einer
Open-Source-Lizenz für eigene Programme&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="open-source"></category><category term="recht"></category></entry><entry><title>Lightning Talks (Dienstag)</title><link href="https://pyvideo.org/pycon-de-2012/lightning-talks-dienstag.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/lightning-talks-dienstag.html</id><summary type="html"></summary><category term="lightning talks"></category></entry><entry><title>Machine Learning mit Scikit-Learn</title><link href="https://pyvideo.org/pycon-de-2012/machine-learning-mit-scikit-learn.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Andreas Müller</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/machine-learning-mit-scikit-learn.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Machine Learning und Data Mining beschaeftigen sich mit dem Lernen aus
beobachteten Daten, dem erstellen von Vorhersagen und dem finden von
interessanten Mustern in Daten. Diese Gebiete sind zwei schnell
wachsende Forschungsbereiche mit einer staendig steigenden Anzahl an
kommerziellen Anwendungen wie Produkt-Empfehlungen, Bildersuche und
Spam-Filtering.&lt;/p&gt;
&lt;p&gt;Scikit-learn ist eine Python Library fuer Machine Learning die
besonderen Wert auf einfache Benutzung, Skalierbarkeit und hohe
Code-Qualitaet legt. Ziel ist es eine leicht anzuwendende, flexible
Bibliothek fuer Forschung wie auch kommerzielle Anwendungen zu schaffen.
Der Vortrag bietet eine kurze Einleitung in Grundlagen des maschinellen
Lernens und die Anwendung von Scikit-Learn.&lt;/p&gt;
</summary></entry><entry><title>Metaprogrammierung, praktisch.</title><link href="https://pyvideo.org/pycon-de-2012/metaprogrammierung-praktisch.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Andreas Albrecht</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/metaprogrammierung-praktisch.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Metaprogrammierung ist eine fortgeschrittene Methode der&lt;/p&gt;
&lt;p&gt;Programmierung. Wie das &amp;quot;Meta&amp;quot; im Namen schon vermuten lässt, findet&lt;/p&gt;
&lt;p&gt;Metaprogrammierung auf einer abstrakteren Ebene statt - oder etwas&lt;/p&gt;
&lt;p&gt;einfacher: man programmiert, was man programmiert. Obwohl&lt;/p&gt;
&lt;p&gt;Metaprogrammierung in Python auf eine lange Historie zurückblicken&lt;/p&gt;
&lt;p&gt;kann, ist sie dennoch eine Technik, der oft mit einer gehörigen&lt;/p&gt;
&lt;p&gt;Portion Skepsis und fragenden Blicken begegnet wird. Der Vortrag will&lt;/p&gt;
&lt;p&gt;aufzeigen, ob diese Skepsis gerechtfertigt ist, wie Metaprogrammierung&lt;/p&gt;
&lt;p&gt;in Python funktioniert und wie man diese Technik sinnvoll einsetzen&lt;/p&gt;
&lt;p&gt;kann.&lt;/p&gt;
&lt;p&gt;Zu Beginn des Vortrags wird das allgemeine Konzept der&lt;/p&gt;
&lt;p&gt;Metaprogrammierung vorgestellt und in einem kurzen historischen&lt;/p&gt;
&lt;p&gt;Aufriss der Einzug dieser Technik in Python skizziert. Im Hauptteil&lt;/p&gt;
&lt;p&gt;des Vortrags werden gängige Muster der Metaprogrammierung in Python&lt;/p&gt;
&lt;p&gt;und deren Funktionsweise anhand von Beispielen&lt;/p&gt;
&lt;p&gt;präsentiert. Abschließend wird mit Beispielen aus der Praxis und aus&lt;/p&gt;
&lt;p&gt;OpenSource-Projekten auf konkrete Anwendungen hingewiesen, die Ideen&lt;/p&gt;
&lt;p&gt;zum Einsatz dieser Technik geben sollen - aber auch mögliche Probleme&lt;/p&gt;
&lt;p&gt;aufzeigen.&lt;/p&gt;
&lt;p&gt;Der Vortrag richtet an alle, die mehr über die Technik der&lt;/p&gt;
&lt;p&gt;Metaprogrammierung in Python erfahren wollen. Die Beispiele sind so&lt;/p&gt;
&lt;p&gt;gewählt, dass sie auch für weniger erfahrene Entwickler&lt;/p&gt;
&lt;p&gt;nachvollziehbar bleiben.&lt;/p&gt;
</summary><category term="metaprogrammierung"></category></entry><entry><title>Nebenläufige Programme mit Python</title><link href="https://pyvideo.org/pycon-de-2012/nebenlaufige-programme-mit-python.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Stefan Schwarzer</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/nebenlaufige-programme-mit-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In diesem Vortrag soll es um Grundlagen nebenläufiger Programme gehen,
wie sie mit den Modulen threading und multiprocessing möglich sind.&lt;/p&gt;
&lt;p&gt;Zuerst wird erklärt, in welchen Fällen Nebenläufigkeit sinnvoll ist.
Danach wird auf die grundsätzlichen Probleme nebenläufiger Programme
eingegangen, insbesondere Änderungen an gemeinsam genutzten Ressourcen
(zum Beispiel Dateien oder auch &amp;quot;nur&amp;quot; Objekte im Speicher) durch mehrere
Threads oder Prozesse. Schließlich wird gezeigt, wie man solche
Ressourcen-Zugriffe durch Locks oder Queues entschärfen kann.&lt;/p&gt;
</summary><category term="deadlock"></category><category term="gil"></category><category term="multiprocessing"></category><category term="nebenläufigkeit"></category><category term="queue"></category><category term="threading"></category></entry><entry><title>Praktische Anwendung von Metaklassen</title><link href="https://pyvideo.org/pycon-de-2012/praktische-anwendung-von-metaklassen.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Mirko Dziadzka</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/praktische-anwendung-von-metaklassen.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Metaklassen (metaclasses) in Python werden oft als exotische
Spracheigenschaft betrachtet. Der Vortrag zeigt anhand konkreter
Beispiele, wie sich Metaklassen in realen Projekten zum Debuggen und zum
Code vereinfachen einsetzen lassen.&lt;/p&gt;
&lt;div class="section" id="praktische-anwendungen-von-metaklassen"&gt;
&lt;h4&gt;Praktische Anwendungen von Metaklassen&lt;/h4&gt;
&lt;p&gt;Python besitzt mit den Metaklassen ein sehr mächtiges Werkzeug, um
orthogonale Eigenschaften eines Programms zu Implementieren. Das
Stichwort dazu lautet &amp;quot;aspektorientiertes Programmieren&amp;quot;. Leider werden
Metaklassen aber oft als komplex und schwierig angesehen.&lt;/p&gt;
&lt;p&gt;Der Vortrag zeigt an einem konkreten Beispiel, wie sich durch die
Verwendung von Metaklassen Programmentwicklung vereinfachen kann.
Konkret wird die Implementation eines einfachen Debug- und Trace
Frameworks vorgestellt.&lt;/p&gt;
&lt;p&gt;Dieses erlaubt das nachträgliche instrumentieren von Klassen-Methoden,
um eine selektive Ablaufverfolgung von Methodenaufrufen auf Objekten
ermöglicht. Dies wird erreicht, ohne das diese Debug Aufrufe im normalen
Quellcode erscheinen oder bei nicht Benutzung Performance Auswirkungen
haben.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="debugging"></category><category term="metaclasses"></category></entry><entry><title>Programmieren als Kulturtechnik? Über Hobbyprogrammierer, Gelegenkeitsskripter und Python.</title><link href="https://pyvideo.org/pycon-de-2012/programmieren-als-kulturtechnik-uber-hobbyprogra.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Jörg Kantel</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/programmieren-als-kulturtechnik-uber-hobbyprogra.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Nicht nur bei Berufsprogrammierern ist der sogenannte Quereinsteiger
weit verbreitet. Auch in Wissenschaft und Technik gibt es Menschen, die
»nebenher« programmieren, weil es für ihre eigene Arbeit nützlich ist.
Nicht nur in den Natur-, sondern auch in den Sozial- und
Geisteswissenschaften gibt es Wissenschaftler, die an neuen Methoden des
Zugangs zu ihrem Forschungsmaterial arbeiten und dabei auf
»selbstgestrickte« Programme zurückgreifen.&lt;/p&gt;
&lt;p&gt;Auch im Hobbybereich sind Programmierer anzutreffen. Hier sind sogar in
der kurzen Geschichte der Programmierung regelrechte, zu bestimmten
Ereignissen auftretende kreative Explosionen zu verzeichen, die auch
Rückwirkungen auf die professionelle Programmierung hatten.&lt;/p&gt;
&lt;p&gt;In meinem Vortrag möchte ich kurz auf die Geschichte dieser anderen,
mehr spielerischen Seite des Programmierens eingehen und dann die Frage
beantworten, welche Bedeutung Python als lauffähiger Pseudocode&lt;/p&gt;
&lt;p&gt;speziell im Wissenschafts- und Hobbybereich hat. Python ist in diesem
Bereich eine sehr populäre Programmiersprache. Aber ich möchte auch
Entwicklungen benennen, die meiner Meinung nach dieser Popularität
gefährlich werden könnten und auch anhand von anderen Umgebungen zeigen,
was es eventuell zu integrieren gilt.&lt;/p&gt;
&lt;p&gt;Über all dem steht mein Kredo, daß jedefrau und jedermann wenigstens ein
wenig programmieren können sollte, weil sie sonst programmiert werden.
Und ich glaube, daß Python immer noch die beste Einstiegssprache dafür
ist.&lt;/p&gt;
</summary><category term="keynote"></category></entry><entry><title>Twitter Bootstrap – Schweizer Messer fur Webanwendungen?</title><link href="https://pyvideo.org/pycon-de-2012/twitter-bootstrap-schweizer-messer-fur-webanwend.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Stefania Trabucchi</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/twitter-bootstrap-schweizer-messer-fur-webanwend.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Twitter Bootstrap –„Schweizer Messer“ für Webanwendungen?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Toolkit zur Gestaltung von (Python-)Webanwendungen am Beispiel von
Plone -&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Twitter Bootstrap in Front-End, Diazo als XSL-Transformation-Server und
Buildout bieten in ihrer Kombination eine ideale Möglichkeit, mit
geringem Aufwand und nachhaltiger Wirkung Lösungen für Responsive
Webdesign bei Verwendung von Plone, Django oder anderen Web-Anwendungen
zu realisieren.&lt;/p&gt;
&lt;p&gt;Twitter Bootstrap als gut dokumentiertes, flexibles und in seiner
Bedeutung wachsendes Werkzeug ermöglicht Designern und Entwicklern eine
gute Zusammenarbeit. Die Macher von Twitter Bootstrab haben HTML 5, CSS,
JS- Libraries, Less-Unterstützung und gute getestete
Cross-Browser-Sicherheit u.a. auch für mobile Endgeräte in dem Toolkit
mitgeliefert. Sein Erfolgsrezept sind die vielen vorgefertigen
Oberflächenelemente, welche in Form von Widgets, Buttons, Dropdownmenus,
Slides, Forms oder Tabs leicht zu integrieren sind.&lt;/p&gt;
&lt;p&gt;Aufgrund der zunehmenden Abhängigkeit von Designern und Entwicklern in
Projekt-Teams bildet die Nutzung solider Frameworks die Basis des
Erfolgs. Ob sich also Twitter Boostrap als „Schweizer Messer“ der
Webentwickler erweisen kann, und in welcher Weise Designer und
Entwickler vom Einsatz derartiger Toolkits profitieren können, zeigt
dieser Vortrag vor dem Hintergrund der persönlichen Erfahrungen der
Referentin mit Diazo und Plone.&lt;/p&gt;
</summary><category term="front-end"></category><category term="reponsive webdesign"></category><category term="twitter bootstrap"></category><category term="webdesign"></category></entry></feed>