<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 15 Sep 2019 00:00:00 +0000</lastBuildDate><item><title>Don't Cross The Streams - An Introduction to Virtual Environments</title><link>https://pyvideo.org/pycon-uk-2019/dont-cross-the-streams-an-introduction-to-virtual-environments.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's learn about virtual environments - why it's useful, how it works, getting started.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hannah Hazi</dc:creator><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-09-15:pycon-uk-2019/dont-cross-the-streams-an-introduction-to-virtual-environments.html</guid><category>virtual environments</category></item><item><title>The Knowledge In The Code</title><link>https://pyvideo.org/pycon-uk-2018/the-knowledge-in-the-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Or, how I learned to stop worrying and love legacy code&lt;/p&gt;
&lt;p&gt;Legacy code. It's old, poorly documented, barely tested, a nightmare to
work with. You've never met the people who wrote it, but if you did
you'd have a thing or two to tell them! If you had the time, you'd love
to re-write it all.&lt;/p&gt;
&lt;p&gt;But what if I told you that there are gems hidden in your company's old
code? That re-writing it from scratch would be a bad mistake?&lt;/p&gt;
&lt;p&gt;This is the story of how I learned to love legacy code. And how you
might, too!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hannah Hazi</dc:creator><pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-09-16:pycon-uk-2018/the-knowledge-in-the-code.html</guid></item><item><title>Python as a Second Language</title><link>https://pyvideo.org/pycon-uk-2017/python-as-a-second-language.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sometimes we can learn the most by coming at a topic sideways. Using examples from code written by people who are getting into Python after experiences with another language first, we can discover what ‘idiomatic’ Python looks like and find some tricks to writing concise, readable, delightful Python code.
The talk will focus on useful tips for people coming in from different languages into Python land, including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How to loop like a native&lt;/li&gt;
&lt;li&gt;The Most Diabolical Python Anti-Pattern&lt;/li&gt;
&lt;li&gt;When (and when not) to use classes&lt;/li&gt;
&lt;li&gt;The Joy and Horror of Dynamic Typing&lt;/li&gt;
&lt;li&gt;Designing flexible code&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hannah Hazi</dc:creator><pubDate>Thu, 26 Oct 2017 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-26:pycon-uk-2017/python-as-a-second-language.html</guid></item></channel></rss>