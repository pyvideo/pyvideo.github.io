<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 07 Aug 2015 00:00:00 +0000</lastBuildDate><item><title>An optimizing static Python compiler</title><link>https://pyvideo.org/europython-2013/an-optimizing-static-python-compiler.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kay Hayen</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/an-optimizing-static-python-compiler.html</guid><category>performance</category><category>scientific-computing</category><category>optimization</category><category>open-source</category><category>python3</category></item><item><title>The Python Compiler</title><link>https://pyvideo.org/europython-2015/the-python-compiler.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kay Hayen - The Python Compiler
[EuroPython 2015]
[20 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;The Python compiler Nuitka has evolved from an absurdly compatible
Python to C++ translator into a &lt;strong&gt;statically optimizing Python
compiler&lt;/strong&gt;. The mere peephole optimization is now accompanied by full
function/module level optimization, with more to come, and only
increased compatibility.&lt;/p&gt;
&lt;p&gt;Witness local and module &lt;strong&gt;variable value propagation&lt;/strong&gt;, &lt;strong&gt;function
in-lining&lt;/strong&gt; with suitable code, and graceful degradation with code
that uses the full Python power. (This is considered kind of the break
through for Nuitka, to be finished for EP.) No compromises need to be
made, full language support, all modules work, including extension
modules, e.g. PyQt  just works.&lt;/p&gt;
&lt;p&gt;Also new is a plugin framework that allows the user to provide
workarounds for the standalone mode (create self contained
distributions), do his own type hinting to Nuitka based on e.g. coding
conventions, provide his own optimization based on specific knowledge.&lt;/p&gt;
&lt;p&gt;Ultimately, Nuitka is intended to grow the Python base into fields,
where performance is an issue, it will need your help. Scientific
Python could largely benefit from future Nuitka. Join us now.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kay Hayen</dc:creator><pubDate>Fri, 07 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-07:europython-2015/the-python-compiler.html</guid></item><item><title>Nuitka - Der Python Compiler</title><link>https://pyvideo.org/pycon-de-2011/nuitka-der-python-compiler.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Mit Nuitka gibt es erstmals den konsequent zuende gef체hrten Ansatz, die
gesamte Sprache Python mit allen Sonderverhalten, 체ber C++ zu
kompilieren. Keine neue, keine reduzierte Fassung von Python, sondern
vollst채ndig, nur kompiliert, aber mit praktisch 100% Kompatiblit채t. In
diesem Vortrag geht es darum, Nuitka vorzustellen.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kay Hayen</dc:creator><pubDate>Wed, 05 Oct 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-10-05:pycon-de-2011/nuitka-der-python-compiler.html</guid></item></channel></rss>