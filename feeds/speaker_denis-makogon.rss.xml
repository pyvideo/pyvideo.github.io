<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 20 Apr 2018 00:00:00 +0000</lastBuildDate><item><title>Applying serverless architecture pattern to distributed data processing</title><link>https://pyvideo.org/pycon-italia-2018/applying-serverless-architecture-pattern-to-distributed-data-processing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless architectures refer to applications that significantly depend
on “cloud” services (knows as Backend as a Service) or on custom code
that’s run in ephemeral runtime (Function as a Service or “FaaS&amp;quot;).&lt;/p&gt;
&lt;p&gt;To application developers, “serverless” mean app where some certain
logic of it is still written by the developer but unlike traditional
architectures or microservices is run in stateless compute runtime that
is event-triggered, may only last for one invocation, and fully managed
by a cloud. Serverless helps developers to transfer responsibility for
keeping their apps up and running as well as scaling out their workload
capacity without involving DevOps/ops as we got used to.&lt;/p&gt;
&lt;p&gt;In this talk we will go through whole “serverless” thing: from
decomposing app and its logic to microservices and further to smaller
bits, i.e. functions to defining data flow through functions and
building their fault-tolerant pipeline. Moreover, we will go through a
demo that highlights key takeaways:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;what are functions, what it could and could not be&lt;/li&gt;
&lt;li&gt;how to design scalable architecture without getting into troubles by
hitting concrete bottlenecks&lt;/li&gt;
&lt;li&gt;how serverless can help scaling in/out compute capacity for data
processing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The demo itself will include examples of applying serverless
architecture pattern to emotion recognition app based on TensorFlow and
OpenCV 3.3&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 15:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Denis Makogon</dc:creator><pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-20:pycon-italia-2018/applying-serverless-architecture-pattern-to-distributed-data-processing.html</guid><category>serverless</category><category>image-processing</category><category>data-exploration</category><category>emotion-recognition</category><category>Deep-Learning</category><category>opencv</category><category>tensorflow</category><category>python3</category></item><item><title>Applying serverless architecture pattern to distributed data processing</title><link>https://pyvideo.org/pycon-hk-2017/applying-serverless-architecture-pattern-to-distributed-data-processing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless architectures refer to applications that significantly depend on &amp;quot;cloud&amp;quot; services (knows as Backend as a Service) or on custom code that's run in ephemeral runtime (Function as a Service or &amp;quot;FaaS&amp;quot;).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Denis Makogon</dc:creator><pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-25:pycon-hk-2017/applying-serverless-architecture-pattern-to-distributed-data-processing.html</guid><category>keynote</category></item></channel></rss>