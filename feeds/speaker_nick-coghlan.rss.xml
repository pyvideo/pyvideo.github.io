<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 05 May 2019 00:00:00 +0000</lastBuildDate><item><title>Python Steering Council - Keynote - PyCon 2019</title><link>https://pyvideo.org/pycon-us-2019/python-steering-council-keynote-pycon-2019.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Steering Council Keynote panel&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Barry Warsaw</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-us-2019/python-steering-council-keynote-pycon-2019.html</guid><category>keynote</category><category>steering council</category><category>panel</category></item><item><title>Highlights of Python 3.3</title><link>https://pyvideo.org/pycon-india-2012/highlights-of-python-33.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This will be a review session, covering some of the interesting features in Python 3.3.
For the benefit of attendees that are still primarily using Python 2.x, the presentation will also cover a few of the key advantages of the Python 3.x series that aren't available in Python 2.7 or as backports on the Python Package Index.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Coghlan</dc:creator><pubDate>Sat, 29 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-29:pycon-india-2012/highlights-of-python-33.html</guid><category>python 3.3</category><category>python3</category><category>python33</category></item><item><title>Front-end integration testing with splinter</title><link>https://pyvideo.org/pycon-au-2017/front-end-integration-testing-with-splinter.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I like words. I vastly prefer writing an essay to drawing a picture, writing command line apps to writing GUI apps, and writing back-end API servers to writing front-end interactive web applications.&lt;/p&gt;
&lt;p&gt;But what we prefer to do and what we need to get done aren't always the same thing, and even back-end developers will sometimes need to put together a basic interactive front-end, and the related test cases to make sure it keeps working as intended.&lt;/p&gt;
&lt;p&gt;Fortunately for us, the &lt;cite&gt;splinter&lt;/cite&gt; web application testing library offers the necessary tools for even the most JavaScript-averse developer to get started writing automated tests for their front-end components, and this presentation will walk through the essentials of getting set up to write behavioural tests for an interactive front-end as easily as you do for your back-end API server.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Coghlan</dc:creator><pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-05:pycon-au-2017/front-end-integration-testing-with-splinter.html</guid></item><item><title>Panel: Python 3 Adoption and Barriers</title><link>https://pyvideo.org/montreal-python/panel-python-3-adoption-and-barriers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Montreal, April 14, 2014 - Python 3.4.0 was just released! Many Python developers are enthusiastic about the cleanups in the language and standard library, but many others suffer from missing features in the Python 2 line. What's the status of the migration? How are the core developers in tune with the larger community? Invited representatives, including CPython core developer Nick Coghlan and CPython and PyPy core developer Alex Gaynor share their experience and answer questions from the audience.&lt;/p&gt;
&lt;p&gt;Useful links:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Brandon Rhodes: &lt;a class="reference external" href="https://twitter.com/brandon_rhodes"&gt;https://twitter.com/brandon_rhodes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Victor Stinner: &lt;a class="reference external" href="https://twitter.com/victor_stinner"&gt;https://twitter.com/victor_stinner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nick Coghlan: &lt;a class="reference external" href="https://twitter.com/ncoghlan_dev"&gt;https://twitter.com/ncoghlan_dev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Alex Gaynor: &lt;a class="reference external" href="https://twitter.com/alex_gaynor"&gt;https://twitter.com/alex_gaynor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Selena Deckelmann: &lt;a class="reference external" href="https://twitter.com/selenamarie"&gt;https://twitter.com/selenamarie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Alexandre Vassalotti: &lt;a class="reference external" href="https://twitter.com/avassalotti"&gt;https://twitter.com/avassalotti&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MP45: &lt;a class="reference external" href="http://sflx.ca/mp45e"&gt;http://sflx.ca/mp45e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Montreal Python: &lt;a class="reference external" href="http://montrealpython.org"&gt;http://montrealpython.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Savoir-faire Linux: &lt;a class="reference external" href="http://www.savoirfairelinux.com"&gt;http://www.savoirfairelinux.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Mon, 14 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-14:montreal-python/panel-python-3-adoption-and-barriers.html</guid></item><item><title>[Keynote] Opportunities and Challenges in Open Collaboration</title><link>https://pyvideo.org/pycon-pune-2017/keynote-opportunities-and-challenges-in-open-collaboration.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Nick Coghlan&lt;/p&gt;
&lt;p&gt;About Speaker:
Nick Coghlan works on software supply chain management tools for Red Hat, and has been a CPython core developer since 2005. Prior to joining Red Hat in June 2011, Nick spent over 12 years working as a software developer, system integrator and system architect in Australia's aerospace &amp;amp; defence sector.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Coghlan</dc:creator><pubDate>Fri, 17 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-17:pycon-pune-2017/keynote-opportunities-and-challenges-in-open-collaboration.html</guid></item><item><title>Contributors, Colleagues, Clients &amp; Customers: Sustaining Open Source Communities</title><link>https://pyvideo.org/pycon-pl-2015/contributors-colleagues-clients-customers-sustaining-open-source-communities.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When it comes to open source software, what do you want to be doing? Do you want an occasional hobby where you can have fun contributing back to the community? Have a significant impact on the world by being able to commit full time to growing the available pool of free &amp;amp; open source software? Spend time getting to know the needs of a particular organisation, and applying open source tools to solve their problems? Or perhaps you'd prefer to understand the general needs of a broad category of potential users, and design open source tools that will solve their problems without customisation? Getting involved in open source development communities can offer all these opportunities and more, but it also makes it incredibly easy for us to overcommit and burn ourselves out. If we're not careful, our unrealistic expectations can also contribute to the burnout of our peers. To ensure sustainability, we need to come to a shared understanding of some of the different ways we can engage with open source communities, what we can reasonably offer for free, and what we should expect to be paid for.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Coghlan</dc:creator><pubDate>Sat, 17 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-17:pycon-pl-2015/contributors-colleagues-clients-customers-sustaining-open-source-communities.html</guid></item><item><title>Contributors, Colleagues, Clients &amp; Customers: Sustaining Open Source Communities (Keynote)</title><link>https://pyvideo.org/pygotham-2015/contributors-colleagues-clients-customers-su.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When it comes to open source software, what do you want to be doing? Do
you want an occasional hobby where you can have fun contributing back to
the community? Have a significant impact on the world by being able to
commit full time to growing the available pool of free &amp;amp; open source
software? Spend time getting to know the needs of a particular
organisation, and applying open source tools to solve their problems? Or
perhaps you'd prefer to understand the general needs of a broad category
of potential users, and design open source tools that will solve their
problems without customisation?&lt;/p&gt;
&lt;p&gt;Getting involved in open source development communities can offer all
these opportunities and more, but it also makes it incredibly easy for
us to overcommit and burn ourselves out. If we're not careful, our
unrealistic expectations can also contribute to the burnout of our
peers. To ensure sustainability, we need to come to a shared
understanding of some of the different ways we can engage with open
source communities, what we can reasonably offer for free, and what we
should expect to be paid for.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Coghlan</dc:creator><pubDate>Sat, 15 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-15:pygotham-2015/contributors-colleagues-clients-customers-su.html</guid></item><item><title>Python Beyond CPython: Adventures in Software Distribution</title><link>https://pyvideo.org/scipy-2014/python-beyond-cpython-adventures-in-software-dis.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Coghlan</dc:creator><pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-13:scipy-2014/python-beyond-cpython-adventures-in-software-dis.html</guid></item><item><title>Nick Coghlan: Python Beyond (C)Python (Keynote)</title><link>https://pyvideo.org/kiwi-pycon-2014/nick-coghlan-python-beyond-cpython-keynote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/nick-coghlan-python-beyond-c-python-adventures-in-software-distribution"&gt;https://speakerdeck.com/nzpug/nick-coghlan-python-beyond-c-python-adventures-in-software-distribution&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Coghlan</dc:creator><pubDate>Sat, 13 Sep 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-09-13:kiwi-pycon-2014/nick-coghlan-python-beyond-cpython-keynote.html</guid></item><item><title>PyConAU 2010: Lightning talks - Saturday</title><link>https://pyvideo.org/pycon-au-2010/pyconau-2010--lightning-talks---saturday.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks - Saturday&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 - Amy Maree: Talking about OLPC XO, Python and Pippy.&lt;/li&gt;
&lt;li&gt;05:55 - Jurgen Brendel: Jython and writing performance critical parts
in Java.&lt;/li&gt;
&lt;li&gt;09:50 - Dave Claridge: Embedding Python and robots that play soccer.&lt;/li&gt;
&lt;li&gt;15:10 - Paul Dyson: inflect.py&lt;/li&gt;
&lt;li&gt;20:20 - Richard Jones: cocos2d, a python game library&lt;/li&gt;
&lt;li&gt;25:40 - Brian Quinlan: Why you probably don't want to work for Google&lt;/li&gt;
&lt;li&gt;30:50 - Nick Coghlan: Running Python scripts.&lt;/li&gt;
&lt;li&gt;34:55 - Philip: How to introduce Python to a large organization&lt;/li&gt;
&lt;li&gt;38:55 - Ryan Kelly: with hacks: re-usable tools for with-statement
hackery&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PMC curator notes: Paul Dyson's demo at 18:28 is great.&lt;/p&gt;
&lt;p&gt;If anyone know's Philip's last name (and/or if we spelled his first name
wrong, too), let us know in the comments.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amy Maree</dc:creator><pubDate>Sat, 26 Jun 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--lightning-talks---saturday.html</guid><category>lightning talks</category><category>cocos2d</category><category>google</category><category>hacks</category><category>inflect.py</category><category>jython</category><category>olpc</category><category>pippy</category><category>pyconau</category><category>pyconau2010</category><category>robots</category><category>scripts</category><category>with</category></item><item><title>Panel: Python 3</title><link>https://pyvideo.org/pycon-au-2011/panel-python-3.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This is a panel discussion in which Nick Coghlan, Raymond Hettinger and
Richard Jones discuss the state of Python 3, some of the new features,
the 3rd party adoption, migration strategies and open to the floor for
questions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Coghlan</dc:creator><pubDate>Tue, 23 Aug 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-08-23:pycon-au-2011/panel-python-3.html</guid><category>migration</category><category>python3</category></item><item><title>How Python Evolves (and How You Can Help Make It Happen)</title><link>https://pyvideo.org/pycon-au-2011/how-python-evolves-and-how-you-can-help-make-it.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The CPython reference interpreter lies at the heart of a much wider
Python ecosystem. The decisions that shape the future development of
CPython ripple out and have a broad impact on the entire Python
community. This talk covers the special place CPython occupies in the
broader Python community, how the decisions that affect CPython's
development are made, and how new developers can become involved in that
process..&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Coghlan</dc:creator><pubDate>Mon, 22 Aug 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-08-22:pycon-au-2011/how-python-evolves-and-how-you-can-help-make-it.html</guid><category>cpython</category></item><item><title>Path Dependent Development: Why on Earth are you using SQL Alchemy as a JSON validator?</title><link>https://pyvideo.org/pycon-au-2012/path-dependent-development-why-on-earth-are-you.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The PulpDist project uses SQL Alchemy as part of a custom JSON
validator. This could be seen as an unusual choice, so it's worth
exploring the way this approach came to be adopted. Practicing iterative
development means coping with the tension between &amp;quot;doing the simplest
thing that could possibly work&amp;quot; to meet immediate project requirements
and avoiding &amp;quot;reinventing the wheel&amp;quot;.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The PulpDist project uses SQL Alchemy as part of a custom JSON
validator. This could be seen as an unusual choice, so it's worth
exploring the way this approach came to be adopted.&lt;/p&gt;
&lt;p&gt;Practicing iterative development means coping with the inevitable
tension between &amp;quot;doing the simplest thing that could possibly work&amp;quot; to
meet immediate project requirements and avoiding &amp;quot;reinventing the wheel&amp;quot;
in order to take full advantage of existing software components.&lt;/p&gt;
&lt;p&gt;This means that iterative software designs are inevitably path
dependent: decisions made in early iterations can shape later aspects of
a project in unexpected ways. These early influences may even predate
the project itself, instead being a consequence of wider organisational
policies and the personal preferences and abilities of key developers.&lt;/p&gt;
&lt;p&gt;Understanding some of these factors can help with understanding why:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;good enough&amp;quot; is usually a better target than &amp;quot;perfect&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;Not Invented Here&amp;quot; syndrome is not always the villain it is
frequently made out to be&lt;/li&gt;
&lt;li&gt;the need to extensively rewrite existing components is not always a
sign of past failure&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Coghlan</dc:creator><pubDate>Wed, 22 Aug 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-08-22:pycon-au-2012/path-dependent-development-why-on-earth-are-you.html</guid><category>pulpdist</category></item><item><title>Nobody Expects the Python Packaging Authority</title><link>https://pyvideo.org/pycon-au-2013/nobody-expects-the-python-packaging-authority.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;These are interesting times for the Python packaging ecosystem, with the
Python Packaging Authority (creators of the popular pip and virtualenv
tools) emerging as the umbrella brand for a suite of related tools that
will bring support for updated packaging standards to both the upcoming
Python 3.4 and to existing versions of Python.&lt;/p&gt;
&lt;p&gt;This talk will cover some of the history of Python's packaging tools and
systems, where we are now, and where we aim to go in the future.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Coghlan</dc:creator><pubDate>Sat, 06 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-06:pycon-au-2013/nobody-expects-the-python-packaging-authority.html</guid></item><item><title>Python's Transition to Multilingual Programming</title><link>https://pyvideo.org/pycon-au-2015/pythons-transition-to-multilingual-programming.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Ugh, why does Unicode have to be so complicated? It's just text, why
can't it be as simple as writing a note for myself?&amp;quot;&lt;/p&gt;
&lt;p&gt;One of the more controversial changes in Python 3 is the decision to
handle text data entirely as Unicode code points. In this presentation,
CPython core developer Nick Coghlan will explore some of the background
of that design decision, the capabilities it grants Python 3 over Python
2, and some of the related features of the upcoming Python 3.5 release.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Coghlan</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-04:pycon-au-2015/pythons-transition-to-multilingual-programming.html</guid></item><item><title>Panel: Directions for Packaging</title><link>https://pyvideo.org/pycon-us-2013/panel-directions-for-packaging.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;What needs to happen to finally offer a first-class packaging experience
to Python users? Several of the people working directly on that problem
will be here to answer your questions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Holth</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-03-16:pycon-us-2013/panel-directions-for-packaging.html</guid><category>talk</category></item></channel></rss>