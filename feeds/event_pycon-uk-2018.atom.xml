<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-uk-2018.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-09-19T00:00:00+00:00</updated><entry><title>Keynote: How does a smile make a difference?</title><link href="https://pyvideo.org/pycon-uk-2018/keynote-how-does-a-smile-make-a-difference.html" rel="alternate"></link><published>2018-09-19T00:00:00+00:00</published><updated>2018-09-19T00:00:00+00:00</updated><author><name>Nikoleta Glynatsi</name></author><id>tag:pyvideo.org,2018-09-19:pycon-uk-2018/keynote-how-does-a-smile-make-a-difference.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nikoleta is a doctoral student in mathematics at &lt;a class="reference external" href="https://cardiff.ac.uk"&gt;Cardiff
University&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In her research, and in this talk, she explores the forces at work in
the relationships that hold our world together, and seeks explanations
for the behaviour that emerges.&lt;/p&gt;
</summary></entry><entry><title>Bot tournament wrap-up and show-and-tell</title><link href="https://pyvideo.org/pycon-uk-2018/bot-tournament-wrap-up-and-show-and-tell.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Peter Inglesby</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/bot-tournament-wrap-up-and-show-and-tell.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The winners of the bot tournament will be announced, and we'll discuss
winning strategies.&lt;/p&gt;
</summary></entry><entry><title>Coding as a second career</title><link href="https://pyvideo.org/pycon-uk-2018/coding-as-a-second-career.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Susan Shindler</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/coding-as-a-second-career.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How I found a second chance at a tech startup 20 years after opting for economics over computer science.&lt;/p&gt;
&lt;p&gt;This session will tell the all too uncommon story of how I joined a tech
start-up and learned to code as a plucky 40-year old.&lt;/p&gt;
&lt;p&gt;Having opted out of studying computer science at university because I
didn't fit in with the geeky, tech-loving boys in my classes, I joined
the Python community 20 years later than most and taught myself through
trial, error and a lot of Stack Overflow searches.&lt;/p&gt;
&lt;p&gt;I'll explain why people still do a double-take when they hear I'm a tech
start-up COO, why a career doesn’t have to be a straight line, and why
an analytical mindset, not an engineering background, is key for
learning to program.&lt;/p&gt;
&lt;p&gt;I'll reflect on what could have persuaded a young me to give computer
science a go, explain why kids having smartphones and RaspberryPis to
play with at home hasn't solved this problem, and challenge attendees to
commit to mentoring someone in their life who has never coded before.&lt;/p&gt;
</summary></entry><entry><title>Dealing with Fake News</title><link href="https://pyvideo.org/pycon-uk-2018/dealing-with-fake-news.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Gail Ollis</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/dealing-with-fake-news.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presented by Gail Ollis&lt;/p&gt;
</summary></entry><entry><title>Django at Admiral</title><link href="https://pyvideo.org/pycon-uk-2018/django-at-admiral.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Mathieu Dähne</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/django-at-admiral.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How an agile stack and lean mindset allowed us to scale from 0 to a successful product&lt;/p&gt;
&lt;p&gt;This is the story of two years working inside Admiral to launch a new
digital product, Veygo, from a 5 man team launching an MVP in 7 weeks to
a successful company of 30+ people two years later.&lt;/p&gt;
&lt;p&gt;We will tell you of the challenges we faced, how we solved them with a
very agile (by corporate standards) tech stack: Django DjangoRest React
React Native AWS EB CircleCI, and how we managed to keep the startup
mindset focusing on the most important problems and continue iterating
quickly on the product and shipping features efficiently.&lt;/p&gt;
</summary></entry><entry><title>How to screw up hiring</title><link href="https://pyvideo.org/pycon-uk-2018/how-to-screw-up-hiring.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Kristian Glass</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/how-to-screw-up-hiring.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hiring is hard, it's hard to do well, it's easy to do badly. Here's some things to avoid!&lt;/p&gt;
&lt;p&gt;Hiring is hard, it's hard to do well, it's easy to do badly. Here's some
things to avoid!&lt;/p&gt;
&lt;p&gt;Maybe you control hiring decisions at work, maybe you're an interviewer
or applicant reviewer, or maybe you're trying to be hired somewhere -
chances are you're exposed to the hiring process somehow.&lt;/p&gt;
&lt;p&gt;There's so many things you can do that are inadvertently problematic,
and they're so easy to do without realising.&lt;/p&gt;
&lt;p&gt;I'll show you a selection of things that people do, with all the best
intentions, and the problems that can arise, so you can avoid them and
do better!&lt;/p&gt;
</summary></entry><entry><title>Introduction to Neural Networks</title><link href="https://pyvideo.org/pycon-uk-2018/introduction-to-neural-networks.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Emma Gordon</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/introduction-to-neural-networks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So, you keep hearing about neural networks. Perhaps you've even gone to
a talk or two, but are still wondering exactly how a neural network
works, what you'd use one for and how to get started. This talk has you
covered.&lt;/p&gt;
&lt;p&gt;We'll illustrate the basic concepts by walking through implementing a
neural network from scratch in Python, and then move on to the powerful
real world libraries you'd use in production.&lt;/p&gt;
&lt;p&gt;This session is aimed at programmers of all experience levels who are
newcomers to the subject of neural networks. If you're already using
them as part of your work, there will likely be nothing new for you
here.&lt;/p&gt;
</summary></entry><entry><title>Keynote: Goes it a little good?</title><link href="https://pyvideo.org/pycon-uk-2018/keynote-goes-it-a-little-good.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Loek van Gent</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/keynote-goes-it-a-little-good.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Loek is Head of Engineering at &lt;a class="reference external" href="https://goodup.com"&gt;GoodUp&lt;/a&gt; in
Amsterdam. He is also a long-time supporter of the Python in Africa
movement, and has taken part in several pioneering African PyCons.&lt;/p&gt;
&lt;p&gt;His talk considers how social responsibility and software collaboration
meet, and why Python has a special place in this.&lt;/p&gt;
</summary></entry><entry><title>Machine Learning: Better than Traditional Techniques?</title><link href="https://pyvideo.org/pycon-uk-2018/machine-learning-better-than-traditional-techniques.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Hannah Higgins</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/machine-learning-better-than-traditional-techniques.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Comparing Machine Learning and Traditional Time Series Techniques for Financial Series Prediction&lt;/p&gt;
&lt;p&gt;Over the past 5 years Machine Learning, Big Data and Data Science have
become popular in finance, with jobs postings requiring these skills
rising dramatically. However, the financial industry, like any other, is
prone to fads. This year I have undertaken a research piece
investigating whether Machine Learning models can outperform a model
derived using 'traditional' time series prediction techniques (in this
case an ARIMA model) and whether Machine Learning can provide an analyst
with any additional insights into what could be driving trends observed
in financial time series data. The latter suggesting that Machine
Learning is another tool in the analyst's tool kit to be used alongside
traditional methods rather than a replacement.&lt;/p&gt;
</summary></entry><entry><title>News + Networks: How the media is influencing you</title><link href="https://pyvideo.org/pycon-uk-2018/news-networks-how-the-media-is-influencing-you.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Zara Siddique</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/news-networks-how-the-media-is-influencing-you.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We live in our own bubbles with our own news preferences and biases, but
to what extent are you aware of your own?&lt;/p&gt;
&lt;p&gt;This talk will use keyword data to visualise the biggest topics in news
and how they are linked to one another. I will explain my journey to
gather this data (from web scraping with Beautiful Soup to Natural
Language Processing techniques) and then discuss what tools Python
provides for visualising this as a graph.&lt;/p&gt;
&lt;p&gt;We'll look at different news outlets and compare their graphs, helping
to identify how the media selectively reports news and can influence
society. Comparing these networks can also help us see any differences
between what we think is important and what is actually reported on.&lt;/p&gt;
</summary></entry><entry><title>Programming paradigms for physical computing and IoT</title><link href="https://pyvideo.org/pycon-uk-2018/programming-paradigms-for-physical-computing-and-iot.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Ben Nuttall</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/programming-paradigms-for-physical-computing-and-iot.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A look at the GPIO Zero library for Raspberry Pi yields the blueprint
for a Pythonic API for programming the behaviour of interconnected
devices.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;GPIO Zero provides a multi-paradigm programming interface to GPIO
devices:&lt;/div&gt;
&lt;div class="line"&gt;- procedural (polling)&lt;/div&gt;
&lt;div class="line"&gt;- procedural (blocking)&lt;/div&gt;
&lt;div class="line"&gt;- event-driven (callbacks)&lt;/div&gt;
&lt;div class="line"&gt;- declarative&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Start with simple scripts to control LEDs and buttons on a breadboard,
learn to prototype ideas and move on to declaring interaction between
more advanced devices in the home and beyond.&lt;/p&gt;
&lt;p&gt;These options for device programming, along with the extensibility of
the library, provide the means to program complex behaviour using simple
Pythonic code.&lt;/p&gt;
</summary></entry><entry><title>PyCon UK 2018 Monday Introduction</title><link href="https://pyvideo.org/pycon-uk-2018/pycon-uk-2018-monday-introduction.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Daniele Procida</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/pycon-uk-2018-monday-introduction.html</id><summary type="html"></summary></entry><entry><title>PyCon UK 2018 Sponsor Sessions: Osirium</title><link href="https://pyvideo.org/pycon-uk-2018/pycon-uk-2018-sponsor-sessions-osirium.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Ed Sharpe</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/pycon-uk-2018-sponsor-sessions-osirium.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ed Sharpe from Osirium describes his companies products.&lt;/p&gt;
</summary></entry><entry><title>Python 2 is dead! Drag your old code into the modern age</title><link href="https://pyvideo.org/pycon-uk-2018/python-2-is-dead-drag-your-old-code-into-the-modern-age.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Becky Smith</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/python-2-is-dead-drag-your-old-code-into-the-modern-age.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The clock is ticking on Python 2.7, with support to be dropped in
January 2020. With major dependencies such as Django, NumPy and pandas
moving to Python 3 only, the time has come for even big established
codebases to consider upgrading. Many organisations are still postponing
for various reasons; we will attempt to demonstrate that with a bit of
planning and perseverance, and the assistance of some handy tools, we
can embrace the future!&lt;/p&gt;
&lt;p&gt;This session will provide a first-hand perspective on how we upgraded a
large (~65,000 lines of python code) 8-year-old Django project with
multiple external dependencies from Python 2.7 to Python 3.6.&lt;/p&gt;
&lt;p&gt;We will briefly discuss the benefits of upgrading to Python 3, and
architectural considerations. The session will primarily focus on the
practicalities of upgrading the code itself. We will not try to provide
a single “best” solution for upgrading to Python 3, but rather will
introduce some of the available tools, provide an insight into how we
used them, and their advantages and disadvantages from our experience.
We will discuss preparatory steps and approaches, strategies for dealing
with external dependencies, and “gotchas” that we encountered during the
process.&lt;/p&gt;
&lt;p&gt;The aim of this session is to provide an example of how a Python 3
upgrade on an established commercial product can be successfully
completed, and to furnish audience members with a set of tools and
strategies to help them with their own projects.&lt;/p&gt;
</summary></entry><entry><title>Redis: persistent collections as a service (and for fun)</title><link href="https://pyvideo.org/pycon-uk-2018/redis-persistent-collections-as-a-service-and-for-fun.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Tibs / Tony Ibbs</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/redis-persistent-collections-as-a-service-and-for-fun.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A quick introduction to Redis, and why I really like it&lt;/p&gt;
&lt;p&gt;I recently had to learn about Redis for work, and was very pleased at
how well designed it is, and how much fun it is to use. Several times I
went to look for a piece of functionality, and there it was, doing
exactly what I wanted. I am especially fond of BRPOPLPUSH.&lt;/p&gt;
&lt;p&gt;I propose to give a brief introduction to what Redis is and does, an
overview of the redis-py client and fakeredis for unit testing, and if
there's time, some discussion of asyncio programming using aioredis.&lt;/p&gt;
&lt;p&gt;At the end, I hope that the audience will know a bit about a genuinely
useful tool that can be used as a datestore, and also for
cross-communication between many programming languages. And maybe
they'll share some of my enthusiasm.&lt;/p&gt;
</summary></entry><entry><title>Taking down production with simple database migrations</title><link href="https://pyvideo.org/pycon-uk-2018/taking-down-production-with-simple-database-migrations.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Qasim Khalil</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/taking-down-production-with-simple-database-migrations.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learning the hard way how not to take down your entire production service, again, and again, and again&lt;/p&gt;
&lt;p&gt;Migrating databases can't be that hard right? Change some fields, auto-
generate the migration files, and deploy. Bam - you're do- Why is
literally everything suddenly giving errors... Wait- why is everything
back to normal now by itself...&lt;/p&gt;
&lt;p&gt;When you're small you write a monolithic application because it is
efficient to do so. However, as your application becomes larger in every
way, certain things can start becoming much more difficult, in
particular, modifying your database schema via your models or fields
becomes hazardous.&lt;/p&gt;
&lt;p&gt;This talk will look at the various ways that I, or someone on my team,
took down our entire production web service with some kind of -
perfectly innocent- looking - database migration. We gradually
accumulated a set of best practices and wrote a comprehensive manual on
how to do them right.&lt;/p&gt;
</summary></entry><entry><title>Time Series Analysis with Seasonal Data</title><link href="https://pyvideo.org/pycon-uk-2018/time-series-analysis-with-seasonal-data.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Cheuk Ting Ho</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/time-series-analysis-with-seasonal-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Case Study in Travel Business&lt;/p&gt;
&lt;p&gt;For time series analysis, everyone’s talking about ARIMA or
Holt-Winters. But there’s other models which could also break down a
seasonal series into trend, seasonality and noise. We will use an open
source Python library called Seasonal to analyse B2B worldwide travel
data.&lt;/p&gt;
</summary></entry><entry><title>Tuesday Lightning Talks</title><link href="https://pyvideo.org/pycon-uk-2018/tuesday-lightning-talks.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Various Speakers</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/tuesday-lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks
.. PyCon UK 2018&lt;/p&gt;
&lt;p&gt;Assembly Room 2018-09-16 17:30-18:30&lt;/p&gt;
&lt;p&gt;What are lightning talks?&lt;/p&gt;
&lt;p&gt;A lightning talk is a short talk on any subject that the speaker thinks will be of interest to the conference.&lt;/p&gt;
&lt;p&gt;We run a session at the end of each day where the talks are at most five minutes long. After five minutes, the microphone is cut and the speaker has to leave the stage whether they've finished or not!&lt;/p&gt;
&lt;p&gt;The sessions are chaired to ensure that everything runs to time – normally by asking the audience to begin clapping using two fingers from each hand when the speaker has 20 seconds remaining.&lt;/p&gt;
&lt;p&gt;Lightning talks are often entertaining and, for many, the highlight of the conference. If this is your first PyCon UK, it's a great way to start your conference speaking career!&lt;/p&gt;
&lt;p&gt;Sounds good. How do I give a lightning talk?&lt;/p&gt;
&lt;p&gt;At the help desk each morning, you'll find two coloured buckets and some index cards. If you would like to give a lightning talk that day:&lt;/p&gt;
&lt;p&gt;Take an index card
Write on it your name and the title of your talk
Drop it in the relevant bucket:&lt;/p&gt;
&lt;p&gt;Green - if you've never spoken at a conference before
Yellow - everyone else&lt;/p&gt;
&lt;p&gt;The buckets close at 13:30 and, shortly afterwards, we will select cards from each bucket, and post them on the flipchart at reception.&lt;/p&gt;
&lt;p&gt;You may submit as many proposals as you like, but you may only give one lightning talk at the conference.&lt;/p&gt;
&lt;p&gt;The buckets will be emptied each evening and start the day fresh and empty the following morning. If you want to re-submit a proposal, you will need to complete a new card and drop it in the bucket once again.&lt;/p&gt;
&lt;p&gt;Good luck!&lt;/p&gt;
</summary></entry><entry><title>What Python means in Namibia</title><link href="https://pyvideo.org/pycon-uk-2018/what-python-means-in-namibia.html" rel="alternate"></link><published>2018-09-18T00:00:00+00:00</published><updated>2018-09-18T00:00:00+00:00</updated><author><name>Ngazetungue Muheue</name></author><id>tag:pyvideo.org,2018-09-18:pycon-uk-2018/what-python-means-in-namibia.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will be looking at the importance of python in our country, how does
it change our lives . I will introduce myself to outside world as a
python programmer in Namibia, and whats the secret behind my posters
during PYCON Namibia and how do I make it work. I will be looking at
different (activities, projects) that we carry out as a PyNam Society
and etc.&lt;/p&gt;
</summary></entry><entry><title>Anomaly Detection</title><link href="https://pyvideo.org/pycon-uk-2018/anomaly-detection.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Michal Grochmal</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/anomaly-detection.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;aka. How to Convince Your Boss that you need Machine Learning&lt;/p&gt;
&lt;p&gt;This presentation comes from a recurring question I get from my
students: &amp;quot;OK, all this machine learning stuff is great but how do you
use it in real life?&amp;quot;&lt;/p&gt;
&lt;p&gt;The students ask this because they come from what several of us would
call old-fashioned programming jobs, where you actually program every
step of what a computer does with the data. Sounds crazy, right? But
that is still the reality in several companies. There are several
reasons for dealing with data in that way: legacy applications, belief
that hand-coded rules get 100% accuracy (yeah, right), or simply an
attitude of don't fix what ain't broken - despite the fact that it is
broken.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;I point such students towards &lt;em&gt;Anomaly Detection&lt;/em&gt; (AD). Why? Because
AD is an easy technique to plug into a non-ML system. Every company
has some form of data aggregation - and data scrutiny - system: be it
webserver logs, forex trades, or hotel bookings data. In that scrutiny
system dirty data exist, or is fed in, and there are coded rules to
prevent processing of this bad data.&lt;/div&gt;
&lt;div class="line"&gt;Instead of hand-coded rules, that is the place where ML techniques
should be used, notably AD.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;AD is quite easy to explain without going into mathematics, which is a
good thing if you need to convince your boss. AD can be used as a
substitute for hand-coded rules, as a way of tuning (hyper-)parameters
for rules, or even working alongside such rules. Moreover most AD
techniques can be used on both: static datasets or running time series.&lt;/p&gt;
&lt;p&gt;We will discuss a couple of examples of AD use. AD may appear as a
rather specific field to a typical programmer but that's far from true.
AD is just a clever (read: slightly different) way of using well known
ML techniques.&lt;/p&gt;
</summary></entry><entry><title>Big Data: Using Spark from Python and Jupyter</title><link href="https://pyvideo.org/pycon-uk-2018/big-data-using-spark-from-python-and-jupyter.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Andrew Crozier</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/big-data-using-spark-from-python-and-jupyter.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Apache Spark is the standard tool for processing big data, capable of
processing massive datasets often at speeds much faster than Apache
Hadoop, especially for iterative algorithms such as those of common
machine learning tasks.&lt;/p&gt;
&lt;p&gt;Spark is also relatively easy to get started with and use for
exploratory data analysis, especially as it offers interactive Scala,
Python and R shells in which a user can easily try out different ways of
manipulating their data, avoiding the slow write - compile - submit -
wait - inspect output loops of other frameworks. Spark also provides a
high level DataFrame API and scalable machine learning libraries, making
it a compelling tool for data scientists.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;In this talk I’ll introduce you to some tools for interacting with an
Apache Spark cluster from Python and Jupyter, including:&lt;/div&gt;
&lt;div class="line"&gt;* Connecting to a Spark cluster from a Jupyter notebook using
sparkmagic&lt;/div&gt;
&lt;div class="line"&gt;* Loading data into Spark from external sources&lt;/div&gt;
&lt;div class="line"&gt;* Basics of data manipulation in Spark&lt;/div&gt;
&lt;div class="line"&gt;* Getting data out of Spark and into Pandas DataFrames for plotting
or further modelling or analysis&lt;/div&gt;
&lt;div class="line"&gt;* Introduction to Spark machine learning tools&lt;/div&gt;
&lt;div class="line"&gt;* How to run Spark code from Python scripts, Plotly Dash web apps and
Flask web APIs using the pylivy client library&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I am an engineer at ASI, a data science consultancy and developers of
the SherlockML data science platform based in London. This talk comes
directly from our experience helping our consultants and SherlockML
users to most effectively use Spark as part of an integrated data
science workflow.&lt;/p&gt;
</summary></entry><entry><title>Brace yourself, Python 2 is retiring</title><link href="https://pyvideo.org/pycon-uk-2018/brace-yourself-python-2-is-retiring.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Łukasz Kąkol</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/brace-yourself-python-2-is-retiring.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk and Interactive Session&lt;/p&gt;
&lt;p&gt;Please note: this is an hour long session.&lt;/p&gt;
&lt;p&gt;Python2 will reach End Of Life on January 1st, 2020. Do we have only one
and a half year to migrate to python3? Well… Yes and no. Most people aim
for the upgrade. But that doesn’t mean everyone. This talk would be a
comprehensive guide for migration from python2 to python3. However, I’ll
also talk about projects that cannot be migrated for various reasons.
2020 doesn’t necessarily mean pythonic armageddon. Come and find out.&lt;/p&gt;
</summary></entry><entry><title>Cyber security needs cyber neurodiversity</title><link href="https://pyvideo.org/pycon-uk-2018/cyber-security-needs-cyber-neurodiversity.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Gail Ollis</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/cyber-security-needs-cyber-neurodiversity.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thomas is a cyber security management student with autism. Gail is a
university lecturer in programming and cyberpsychology. They have had
some interesting conversations and Thomas isn’t the only one who has
learned a lot this year.&lt;/p&gt;
&lt;p&gt;In this talk, Thomas will share his insights into common higher
education practices which can make it harder for people like him to
learn, and why cyber security education in particular could benefit from
recognising and addressing this. Gail will reflect on where she’s got to
in her own contribution to that process and invite suggestions for doing
better.&lt;/p&gt;
</summary></entry><entry><title>From Faker to Maker</title><link href="https://pyvideo.org/pycon-uk-2018/from-faker-to-maker.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Les Pounder</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/from-faker-to-maker.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How Python can be used to create and educate&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;How I went from knowing nothing about computer programming, to
creating maker projects and a raising an income using Python as my
main language.&lt;/div&gt;
&lt;div class="line"&gt;Learn what worked well for me, and the failures along the way so YOU
can take that first step to becoming a maker with Python.&lt;/div&gt;
&lt;div class="line"&gt;I will also talk about outreach in schools and clubs that is much
needed for the next generation of Pythonistas.&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>How not to make a mockery of it</title><link href="https://pyvideo.org/pycon-uk-2018/how-not-to-make-a-mockery-of-it.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Martijn Pieters</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/how-not-to-make-a-mockery-of-it.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Make the most of unittest.mock when testing&lt;/p&gt;
&lt;p&gt;The Python standard library comes with a great tool for helping you
write isolated unit tests: unittest.mock. But, as evident from Stack
Overflow questions on the subject, many people struggle to understand
how to use the library correctly. This talk will help you understand how
to use unitest.mock effectively, with the help of a few problems
inspired by those Stack Overflow posts.&lt;/p&gt;
&lt;p&gt;This talk is aimed at people that already know how to write unittests,
but want to know how to get the most out of unittest.mock.&lt;/p&gt;
</summary></entry><entry><title>Introduction to python running on different hardware types</title><link href="https://pyvideo.org/pycon-uk-2018/introduction-to-python-running-on-different-hardware-types.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Emma Delescolle</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/introduction-to-python-running-on-different-hardware-types.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the past few years we have seen a lot of advances regarding the
hardware python can run on.&lt;/p&gt;
&lt;p&gt;You're probably used to Python running on &amp;quot;regular&amp;quot; computers. But 10
years ago a revolution started with the Raspberry Pi that was one of the
first computers in decades, thanks to its GPIO headers, which allowed
easy control of electronic hardware from a programming language.&lt;/p&gt;
&lt;p&gt;That was the dawn of a new era that opened-up electronic hardware
programming with python on multiple devices as micro-controllers like
the BBC Micro:bit thanks to MicroPyton and plenty of other MCU's running
either MicroPython or CircuitPython (a friendly fork of MicroPython).&lt;/p&gt;
&lt;p&gt;But it doesn't stop there, Python can also run on phones and tablets
thanks to BeeWare and Kivy.&lt;/p&gt;
</summary></entry><entry><title>Introduction to Terraform</title><link href="https://pyvideo.org/pycon-uk-2018/introduction-to-terraform.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Becky Lewis</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/introduction-to-terraform.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An introduction to automating infrastructure with Terraform&lt;/p&gt;
&lt;p&gt;This talk is intended to introduce people to building, changing and
managing infrastructure with Terraform, using a working example.
Infrastructure-as-code is more important now than it's ever been and
Terraform is one of the biggest and most useful tools in current use.
The talk will cover the core concepts, with a working example to help
people get started.&lt;/p&gt;
</summary></entry><entry><title>Introspection and Reflection in Python</title><link href="https://pyvideo.org/pycon-uk-2018/introspection-and-reflection-in-python.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Luna Chen</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/introspection-and-reflection-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introspection/reflection allows us to gain a great deal of flexibility
and control when building our program. In Python, we get the
introspection feature out of the box. This talk will explore various
builtin python functions and modules that fall under the category of
introspection, and this talk will also demonstrate different use cases.&lt;/p&gt;
</summary></entry><entry><title>Keynote: Programming in school: what's in a teacher's toolkit?</title><link href="https://pyvideo.org/pycon-uk-2018/keynote-programming-in-school-whats-in-a-teachers-toolkit.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Sue Sentance</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/keynote-programming-in-school-whats-in-a-teachers-toolkit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sue is Chief Learning Officer at the &lt;a class="reference external" href="https://www.raspberrypi.org"&gt;Raspberry Pi
Foundation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;She will discuss her work, much of her which is concerned with how
programing is and should be taught - particularly in schools.&lt;/p&gt;
</summary></entry><entry><title>Low Cost GNSS Tide &amp; Sea Level Measurements - LoCTIPS</title><link href="https://pyvideo.org/pycon-uk-2018/low-cost-gnss-tide-sea-level-measurements-loctips.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Paul Bell</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/low-cost-gnss-tide-sea-level-measurements-loctips.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Measuring Sea levels and tides using an ultra low cost Python driven logging system&lt;/p&gt;
&lt;p&gt;A recent Natural Environment Research Council funded proof of concept
award to the UK's National Oceanography Centre successfully demonstrated
that Global Navigation Satellite System (GNSS) signals reflected off the
sea surface and received by very low cost (~£30) GPS receivers can be
used to estimate the difference in height between the GPS receiver and
the water. This represents a method of remotely sensing tidal elevations
and, if averaged over time, mean sea level. These could be routinely and
remotely measured at a cost that would allow unprecedented numbers of
systems to be deployed around the world by research departments of all
sizes and levels of funding. A second follow-on project is currently
underway to develop the concept further and produce a working prototype
system using a Raspberry Pi as the data logger and potentially also to
conduct the real-time processing required to extract the sea level
signals.&lt;/p&gt;
&lt;p&gt;This talk will describe the background to this concept of using GPS
signals for this purpose, and the early results from our test site in
Sligo Bay in the Republic of Ireland.&lt;/p&gt;
</summary></entry><entry><title>Particulater - Air quality monitoring for everyone</title><link href="https://pyvideo.org/pycon-uk-2018/particulater-air-quality-monitoring-for-everyone.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Oliver Crask</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/particulater-air-quality-monitoring-for-everyone.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A citizen data science project for monitoring an individuals exposure to pollutants&lt;/p&gt;
&lt;p&gt;Air pollution is getting worse across the world, but how does an
individual know how to reduce their exposure?&lt;/p&gt;
&lt;p&gt;I will be presenting my project that is focused on personalised air
quality monitoring. The battery-powered device measures air pollution,
as well as a series of other environmental variables. The data is then
transmitted wirelessly to my Home Assistant instance. This allows a user
to monitor, visualise and ultimately predict their daily exposure to
pollutants. In addition the Home Assistant integration makes it simple
to trigger actions based on their data. For example, flash a light in a
user’s home or send them a notification, if the pollutant concentration
rises. All that you need to make your own is a low cost micro-controller
and a few readily available components.&lt;/p&gt;
</summary></entry><entry><title>PyCon UK 2018 - John Pinner Awards</title><link href="https://pyvideo.org/pycon-uk-2018/pycon-uk-2018-john-pinner-awards.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Daniele Procida</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/pycon-uk-2018-john-pinner-awards.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The John Pinner Award celebrates voluntary service to the Python community in the UK.&lt;/p&gt;
&lt;p&gt;It is awarded annually at PyCon UK to those who freely contribute their time and effort for the good of the community.&lt;/p&gt;
</summary></entry><entry><title>PyCon UK 2018 - Monday Lightning Talks</title><link href="https://pyvideo.org/pycon-uk-2018/pycon-uk-2018-monday-lightning-talks.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Various Speakers</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/pycon-uk-2018-monday-lightning-talks.html</id><summary type="html"></summary></entry><entry><title>PyCon UK 2018 - Sunday Introduction</title><link href="https://pyvideo.org/pycon-uk-2018/pycon-uk-2018-sunday-introduction.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Daniele Procida</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/pycon-uk-2018-sunday-introduction.html</id><summary type="html"></summary></entry><entry><title>The story of a 52 year-old database</title><link href="https://pyvideo.org/pycon-uk-2018/the-story-of-a-52-year-old-database.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Stewart Adcock</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/the-story-of-a-52-year-old-database.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A historical look at the Cambridge Structural Database – The World’s Repository of Organic Chemical Structures&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Abstract:&lt;/div&gt;
&lt;div class="line"&gt;Some notable points looking back along the timeline of database
technology:&lt;/div&gt;
&lt;div class="line"&gt;- 1995 - The first version of MySQL released.&lt;/div&gt;
&lt;div class="line"&gt;- 1987 - SQL became a standard of the International Organization for
Standardization (ISO).&lt;/div&gt;
&lt;div class="line"&gt;- 1986 - SQL became a standard of the American National Standards
Institute (ANSI).&lt;/div&gt;
&lt;div class="line"&gt;- 1983 - Andreas Reuter and Theo Härder coined the acronym ACID.&lt;/div&gt;
&lt;div class="line"&gt;- 1974 - The first prototype version of the INGRES relational DBMS
released.&lt;/div&gt;
&lt;div class="line"&gt;- 1971 - The first microprocessor launched - the Intel 4004.&lt;/div&gt;
&lt;div class="line"&gt;- 1970 - The relational model of data was proposed by E.F. Codd.&lt;/div&gt;
&lt;div class="line"&gt;- 1967 - Introduction of the DEC PDP-10 computer.&lt;/div&gt;
&lt;div class="line"&gt;- 1965 - Compilation of the Cambridge Structural Database (CSD) began.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The Cambridge Structural Database (CSD) was initiated as response to an
“information explosion” with aims including “the compilation of a
numerical database relating to organocarbon crystal structures”. Five
decades later, this database is still curated and widely distributed
within the scientific community. The CSD is probably the oldest
numerical database actively maintained and used today.&lt;/p&gt;
&lt;p&gt;In 1966, the database filled one volume of a printed book. In 1991, the
database used 196Mbytes. Today, a SQLite version of the database uses
6.4Gbytes. Along the way, the CCDC has driven many computational and
scientific advances. E.g., the first practical 3D chemical search system
was developed by the CCDC. Learn about past innovations and technical
foundations&lt;/p&gt;
&lt;p&gt;That is all very interesting, but what does that have to do with Python?
The CSD Python API is a mechanism for accessing the data - alongside a
wide range of molecular modelling and cheminformatic algorithms. This
API is gaining rapid adoption in both academic and industrial chemistry
communities. Learn how we can better serve our users thanks to Python.&lt;/p&gt;
</summary></entry><entry><title>TIMTOWTDI</title><link href="https://pyvideo.org/pycon-uk-2018/timtowtdi.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Thomas Guest</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/timtowtdi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Should there be one—and preferably only one—obvious way to do it?&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;TIMTOWTDI stands for “There is more than one way to do it”, an
approach promoted by the Perl community.&lt;/div&gt;
&lt;div class="line"&gt;A contrasting mantra appears in the Zen of Python, a list of aphorisms
which summarise the guiding principles behind Python’s design. Item
number 13 states: “There should be one — and preferably only one —
obvious way to do it.”&lt;/div&gt;
&lt;div class="line"&gt;This talk discusses these apparently different philosophies. It
demonstrates that Python, like Perl, borrows features from other
languages. Contrary to Item 13, there is — and has always been — more
than one way to do it. Obviously.&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Trending on Hacker News and GitHub with 120 lines of Python</title><link href="https://pyvideo.org/pycon-uk-2018/trending-on-hacker-news-and-github-with-120-lines-of-python.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Sunaina Pai</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/trending-on-hacker-news-and-github-with-120-lines-of-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From writing and committing to publishing and promoting makesite.py, a static site generator for Python coders&lt;/p&gt;
&lt;p&gt;This session is about my personal journey of creating and publishing my
first successful open source project in Python. I will share a story
that starts with rewriting my static, shell-script-powered personal blog
generator, then writing 120 lines of Python code, publishing it on
Hacker News, and then trending on Hacker News and GitHub (right next to
Linus Torvalds :-D) for a day of hacker-fame.&lt;/p&gt;
&lt;p&gt;In this session, I will share how 120 lines of Python code written to
solve a personal need helped me to connect with developers across the
world and become a part of a small community of Python coders. I believe
this session will be very useful to beginners who want to take their
first step into creating their own personal Python project and make it
successful.&lt;/p&gt;
&lt;p&gt;Visit &lt;a class="reference external" href="https://github.com/sunainapai/makesite"&gt;https://github.com/sunainapai/makesite&lt;/a&gt; to see the source code of
this project.&lt;/p&gt;
</summary></entry><entry><title>We made a clock with Python</title><link href="https://pyvideo.org/pycon-uk-2018/we-made-a-clock-with-python.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Leila Verhaegen</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/we-made-a-clock-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session is about the story of two girls who decided to make a clock
themselves after searching a lot on the internet and without finding
what they were looking for.&lt;/p&gt;
&lt;p&gt;In this talk we will tell you what we used and how we used it, we will
also tell you how we made plans and then how we made circuits (timing,
requirements, how difficult and fun it was)&lt;/p&gt;
&lt;p&gt;We will finally tell you more about code and why exactly we wrote it
like that (Spoiler: there was a module with the RTC we used but the
memory of the trinket was to small to support the original code to do
what exactly we wanted to do)&lt;/p&gt;
</summary></entry><entry><title>XArray: the power of pandas for multidimensional arrays</title><link href="https://pyvideo.org/pycon-uk-2018/xarray-the-power-of-pandas-for-multidimensional-arrays.html" rel="alternate"></link><published>2018-09-17T00:00:00+00:00</published><updated>2018-09-17T00:00:00+00:00</updated><author><name>Robin Wilson</name></author><id>tag:pyvideo.org,2018-09-17:pycon-uk-2018/xarray-the-power-of-pandas-for-multidimensional-arrays.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Processing thousands of satellite images to understand air quality in the UK - it's efficient and easy with XArray&lt;/p&gt;
&lt;p&gt;&amp;quot;I wish there was a way to easily manipulate this huge multi-dimensional
array in Python...&amp;quot;, I thought, as I stared at a huge chunk of satellite
data on my laptop. The data was from a satellite measuring air quality -
and I wanted to slice and dice the data in some supposedly simple ways.
Using pure numpy - the go-to library when the words 'multi-dimensional',
'array' and 'python' are mentioned in the same sentence - was just such
a pain. What I wished for was something like pandas - with datetime
indexes, fancy ways of selecting subsets, group-by operations and so on
- but something that would work with my huge multi-dimensional array.&lt;/p&gt;
&lt;p&gt;The solution: XArray - a wonderful library which provides the power of
pandas for multi-dimensional data. In this talk I will introduce the
XArray library by showing how just a few lines of code can answer
questions about my data that would take a lot of complex code to answer
with pure numpy - questions like 'What is the average air quality in
March?', 'What is the time series of air quality in Southampton?' and
'What is the seasonal average air quality for each census output area?'.&lt;/p&gt;
&lt;p&gt;After demonstrating how these questions can be answered easily with
XArray, I will introduce the fundamental XArray data types, and show how
indexes can be added to raw arrays to fully utilise the power of XArray.
I will discuss how to get data in and out of XArray, and how XArray can
use dask for high- performance data processing on multiple cores, or
distributed across multiple machines. Finally I will leave you with a
taster of some of the advanced features of XArray - including seamless
access to data via the internet using OpenDAP, complex apply functions,
and XArray extension libraries.&lt;/p&gt;
</summary></entry><entry><title>A Cython Walkthrough</title><link href="https://pyvideo.org/pycon-uk-2018/a-cython-walkthrough.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Nick Murdoch</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/a-cython-walkthrough.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speed up your Python and link it with C&lt;/p&gt;
&lt;p&gt;Cython is a tool that can convert regular Python modules, or Python with
some additional syntax, into C extension modules that can be imported
from regular Python code.&lt;/p&gt;
&lt;p&gt;This provides a significant speed improvement on most code, and
additionally allows the direct use of C functions within your code.&lt;/p&gt;
&lt;p&gt;In this talk I plan to run through three use cases for Cython and how
these have helped me in projects that are either speed-sensitive or need
to intermix with external C projects.&lt;/p&gt;
&lt;p&gt;The talk should be suitable for anyone with good basic knowledge of
regular Python or better -- cursory knowledge of C is useful but not
needed.&lt;/p&gt;
</summary></entry><entry><title>A song of compatibility and performance</title><link href="https://pyvideo.org/pycon-uk-2018/a-song-of-compatibility-and-performance.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Ronan Lamy</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/a-song-of-compatibility-and-performance.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is the story of how PyPy achieves compatibility with CPython
together with high performance.&lt;/p&gt;
&lt;p&gt;PyPy is an interpreter for the Python language that can act as a full
replacement for the reference interpreter, CPython, with releases
matching versions 2.7 and 3.5. It’s implemented in RPython, a statically
compilable subset of Python, and uses just-in-time compilation to run
Python code efficiently. The PyPy project also developed cffi as a clean
and fast way of interfacing with C code.&lt;/p&gt;
&lt;p&gt;However, many libraries in the Python ecosystem are implemented as C
extensions, which target CPython’s C API. Many others use Cython, which
builds C extensions under the hood. Therefore, PyPy needs an emulation
layer for the C API: cpyext. It bridges the differences between the
implementation languages and the object models of CPython and PyPy and
allows most extensions to work (as long as they stay within the fuzzily
defined boundaries of the public API) just by recompiling against the
PyPy headers. Thanks to this, PyPy now supports numpy, scipy, pandas,
scikit-learn, and many more.&lt;/p&gt;
</summary></entry><entry><title>Assume Worst Intent</title><link href="https://pyvideo.org/pycon-uk-2018/assume-worst-intent.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Alex Chan</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/assume-worst-intent.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Designing for the Abusive Ex&lt;/p&gt;
&lt;p&gt;Apps and services often build features with good intent, trying to
improve interactivity or connections between our users. But what if one
of your users has a stalker, or an abusive ex? You may have given them
another way to hurt or harass your user.&lt;/p&gt;
&lt;p&gt;This session will help you identify common threat models – who is at
most at- risk, and who is a threat to your most vulnerable users. Then
we’ll look at some good practices that improve the safety of your users,
and how to design with these risks in mind. There’s no silver bullet
that totally eliminates risk, but you can make design decisions that
give more control and safety to your users.&lt;/p&gt;
&lt;p&gt;(Content warnings: tbc)&lt;/p&gt;
</summary></entry><entry><title>Building a Twitter Bot</title><link href="https://pyvideo.org/pycon-uk-2018/building-a-twitter-bot.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Hannah Sewell</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/building-a-twitter-bot.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lessons learned from using DEFRA data to build a Twitter Bot&lt;/p&gt;
&lt;p&gt;Twitter is over run with bots, so why not add your own? Twitter bots
make up an estimated 15% of accounts on twitter partly because they’re
so easy to make. As a beginner python learner, finding a project that
was challenging but also manageable by myself was difficult, but twitter
and defra air pollution data provided the perfect answer. I built a
twitter bot that takes the air pollution every hour from the DEFRA API,
processes it and tweets it.&lt;/p&gt;
&lt;p&gt;Building a twitter bot required learning about APIs, processing data,
json, dictionaries and docker. I learned a lot about programming, but I
have also learned a lot about air pollution in Sheffield City Centre,
it’s changes over time, and what causes spikes and troughs.&lt;/p&gt;
&lt;p&gt;In this talk I’ll discuss using the package tweepy to build a bot and
how I learned about APIs, JSON, dictionaries and docker along the way.
I’ll also discuss the DEFRA air pollution data, how you can access your
local data and why the air pollution API documentation from DEFRA is
awful for beginners.&lt;/p&gt;
</summary></entry><entry><title>Categorizing Tweets using Machine Learning</title><link href="https://pyvideo.org/pycon-uk-2018/categorizing-tweets-using-machine-learning.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Halide Bey</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/categorizing-tweets-using-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is suitable for new programmers as well as data scientists who
are new to supervised learning. Check out the code for this talk on my
GitHub profile to see if you'll find it interesting:
github.com/halidebey/PyCon2018&lt;/p&gt;
&lt;p&gt;We'll be working with a dataset of tweets and aiming to accurately
categorize each tweet as relevant or irrelevant for the police using
Machine Learning.&lt;/p&gt;
&lt;p&gt;As I'm going through a live demo of the data cleaning process &amp;amp;
analysis, I will (quickly) cover some machine learning concepts. To make
the talk a bit more interactive, I recommend that attendees come with
their (charged) laptops and go through the code during the talk.&lt;/p&gt;
</summary></entry><entry><title>Coming to a shared understanding</title><link href="https://pyvideo.org/pycon-uk-2018/coming-to-a-shared-understanding.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Sean Sabbage</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/coming-to-a-shared-understanding.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Or, how I learned to stop assuming and love communication&lt;/p&gt;
&lt;p&gt;Whenever multiple people are working on the same thing, there is a need
to communicate. But how can you be sure that the thing that you're
thinking about is the same thing that everyone is is thinking about? Are
you sure that your idea of a web page with a simple form on it is the
same as your colleague's idea of a web page with a simple form on it?&lt;/p&gt;
&lt;p&gt;Your team needs a shared understanding, and this talk aims to explore
what that means, why it's important, and equip attendees with some tools
to help them reach it.&lt;/p&gt;
</summary></entry><entry><title>Devops with Django Docker and Gitlab</title><link href="https://pyvideo.org/pycon-uk-2018/devops-with-django-docker-and-gitlab.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Luke Spademan</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/devops-with-django-docker-and-gitlab.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GitLab doesn't host your git repos, it also allows for continuous
integration and deployment. This means that after pushing to the Git
repo, your code is tested them deployed automatically.&lt;/p&gt;
&lt;p&gt;Using this with Docker allows for fast Python deployments to production.&lt;/p&gt;
&lt;p&gt;In this talk I will be showing you how to setup a basic CI/CD with
GitLab. We will be making a basic Django project as an example.&lt;/p&gt;
</summary></entry><entry><title>EduBlocks - Making the transition to Python easier!</title><link href="https://pyvideo.org/pycon-uk-2018/edublocks-making-the-transition-to-python-easier.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Joshua Lowe</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/edublocks-making-the-transition-to-python-easier.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bridging the gap between block based and text based programming&lt;/p&gt;
&lt;p&gt;Moving from block based programming to text based programming just got
easier. In this session 14 year old Josh &amp;#64;all_about_code talks about
how you can bridge this gap by using EduBlocks, a program which he has
developed. EduBlocks is a drag and drop version of Python 3 which allows
students to learn the Python syntax with minimal errors, allowing
younger children to access Python. The aim of EduBlocks is to make the
transition from block based programs like Scratch to Python easier for
students and teachers, as presently there is no drop-in solution that
bridges this gap. EduBlocks is currently being used in 72 different
countries around the world by students and teachers alike and has
recently included a micro:bit editor. Josh will talk you through how his
experiences of being a student in the classroom gave him the idea to
develop EduBlocks. He will explain the advantages of using EduBlocks in
the classroom, from the features it includes to the resources and lesson
plans available and how educators and the tech community can contribute
their ideas to this completely free Open Source program.&lt;/p&gt;
</summary></entry><entry><title>Enriching the Computer Science Curriculum</title><link href="https://pyvideo.org/pycon-uk-2018/enriching-the-computer-science-curriculum.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Claire Wicher</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/enriching-the-computer-science-curriculum.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to take advantage of enrichment initiatives and innovative classroom environments to enrich the computing curriculum&lt;/p&gt;
&lt;p&gt;Despite the government's best efforts, students are being turned off
when it comes to engaging with computer science. The number of students
opting for the new Computer Science GCSE and A-Levels is lower than
previous figures for ICT. In addition, the gender gap has widened.&lt;/p&gt;
&lt;p&gt;As of 2017, 54% of UK schools were not even offering Computer Science as
a GCSE option. With motivation for the subject low, student numbers
declining and the digital skills gap increasing, a solution must be
found to enthuse students and increase engagement with computing.&lt;/p&gt;
&lt;p&gt;I'll be introducing teachers to initiatives including after-school
clubs, creative classroom projects and classroom displays that inspire
and get students talking about the amazing and exciting side of
computing to re-enter inspire and engage them with the subject we love.&lt;/p&gt;
</summary></entry><entry><title>Events: Software, Process and Reality</title><link href="https://pyvideo.org/pycon-uk-2018/events-software-process-and-reality.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>John Bywater</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/events-software-process-and-reality.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A talk about events in software, in the human processes, and in reality.&lt;/p&gt;
&lt;p&gt;Events are fundamental to the reality we inhabit. We can benefit from
paying attention to the events in the human processes we support with
our software, in our software development processes, and in the software
systems we develop.&lt;/p&gt;
&lt;p&gt;By understanding process as the production of events, we can more
directly develop software systems that are reliable and maintainable.
With the same understanding we can more easily develop effective human
processes.&lt;/p&gt;
&lt;p&gt;With code examples from the Python eventsourcing library, arguments from
Alfred North Whitehead, the event storming method, gently contrasted
with your typical Dark Agile CRUD project....&lt;/p&gt;
</summary></entry><entry><title>Fast and Beautiful: Modern Image Delivery Techniques</title><link href="https://pyvideo.org/pycon-uk-2018/fast-and-beautiful-modern-image-delivery-techniques.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Doug Sillars</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/fast-and-beautiful-modern-image-delivery-techniques.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The average mobile website page weight is ~50% images. Toss in the
complication of thousands of differently sized screens, and it might
appear that efficient delivery of images to every device is an
impossible task. But all is not lost! In this talk, we’ll examine
strategies to send the perfect image to every device, ensuring a fast,
beautiful rendering of your content. We’ll look at progressive images,
placeholder images, lazy loading and other techniques and real world
examples that will improve the usability of your site or app. Attendees
will come away with an understand of the current ‘state of the art’ for
optimizing visual content on the web.&lt;/p&gt;
</summary></entry><entry><title>Future Engineers</title><link href="https://pyvideo.org/pycon-uk-2018/future-engineers.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Sarah Townson</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/future-engineers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Running a programming and robotics holiday club for teens&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Over the summer, Science Oxford (and educational charity) ran an
IET/IMechE- funded robotics holiday club for 11-15 year olds living in
areas of high socio-economic deprivation in Oxford.&lt;/div&gt;
&lt;div class="line"&gt;Throughout the week, participants learnt to program a BBC micro:bit in
Python, then designed and built their own robot to follow a winding
path, by choosing from a range of sensors. We also took them to visit
local organisations to show the range of opportunities available
within engineering, and the different routes to a career.&lt;/div&gt;
&lt;div class="line"&gt;Hear about the problems we overcame to get this project off the
ground, our successes and failures, what the young people thought
about and gained from the week, and how we plan to improve it for next
year!&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>How can Students Engage &amp; Improve Communities with Python?</title><link href="https://pyvideo.org/pycon-uk-2018/how-can-students-engage-improve-communities-with-python.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Melanie Shimano</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/how-can-students-engage-improve-communities-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Applying open source technology outside of the classroom and into everyday life&lt;/p&gt;
&lt;p&gt;My session will focus on how I’ve used Python, Raspberry Pi, and other
open source technology in classroom lessons in order to engage students
in civic tech and community-based solutions for community challenges.
Today, there are thousands of resources for hobbyists and educators to
incorporate inexpensive, open source technology into classroom lessons,
however, very few of these resources help students truly understand how
they can continue to use this technology in their everyday lives or in
developing solutions for everyday challenges. Over the past year and a
half, I’ve developed and taught a program of over 150 students in four
institutions in which students build and code open source “Food
Computers” (Raspberry Pi-controlled, hydroponic, indoor personal farms
designed at the MIT Media Lab) in order to learn how to design solutions
to urban food deserts in their neighborhoods. Students have designed and
begun to implement solutions surrounding nutrition, agriculture, and
technology education to elementary-age students, mobile “Food Computer”
grocery stores, monthly family cooking and nutrition classes at schools,
and school-wide sustainability lessons to engage high school students
with urban agriculture.&lt;/p&gt;
&lt;p&gt;I’ve seen how students transform and fully engage in computer science,
plant and food science, agriculture, and human-centered design lessons
over the course of each semester once they are able to personally relate
and take ownership of their lessons, and I would love to share lessons
learned and proposed curriculum guides for other educators to implement
similar lessons into their classrooms as well. By integrating real-world
challenges and solutions into classroom lesson plans, we can help
students best understand how they can leverage Python and other open
source tech to change the world.&lt;/p&gt;
</summary></entry><entry><title>How To Publish A Package On PyPI</title><link href="https://pyvideo.org/pycon-uk-2018/how-to-publish-a-package-on-pypi.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Mark Smith</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/how-to-publish-a-package-on-pypi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Always wanted to publish a package on PyPI, but didn't know where to
start?&lt;/div&gt;
&lt;div class="line"&gt;This talk is for you! Starting with nothing, we'll build a package and
publish it on PyPI using current best practices.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Publishing a package on PyPI used to be a cargo cult. (And often still
is!) Instead of copying and pasting from other projects' &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt;
without fully understanding what's happening, discover how to package
your code for PyPI from scratch - then learn how to avoid doing any of
this completely! (But now know you'll know what's going on).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;Why&lt;/em&gt; should you package your code for PyPI?&lt;/li&gt;
&lt;li&gt;How to structure your project and your code, including why you need a
&lt;tt class="docutils literal"&gt;src&lt;/tt&gt; folder!&lt;/li&gt;
&lt;li&gt;Discover what goes in your &lt;tt class="docutils literal"&gt;Pipfile&lt;/tt&gt; and your &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt;, and
why. Learn
the difference between installing your library to use it, and
installing it to develop on it.&lt;/li&gt;
&lt;li&gt;Write tests for your project, and run them using Tox.&lt;/li&gt;
&lt;li&gt;Ensure your code will work in different on different platforms with
Continuous Integration!&lt;/li&gt;
&lt;li&gt;Document your code so people won't ask you loads of questions!&lt;/li&gt;
&lt;li&gt;How to actually get your code on PyPI using Twine. Configure your
machine
for PyPI and test your package release on the PyPI test server.&lt;/li&gt;
&lt;li&gt;Finally, learn how avoid doing any of this yourself (or avoid doing
it
twice) using CookieCutter templates.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By the end of this talk, you'll be so comfortable packaging projects you
won't avoid writing &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; files any more! Maybe you'll even start
writing new code just so you can publish it on PyPI!&lt;/p&gt;
</summary></entry><entry><title>I Make Fashion Tech and Human Organs for My Mental Health</title><link href="https://pyvideo.org/pycon-uk-2018/i-make-fashion-tech-and-human-organs-for-my-mental-health.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Rachel Rui Wong</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/i-make-fashion-tech-and-human-organs-for-my-mental-health.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I am an engineer of all sorts. I tinker with electronics, fashion, programming and stem cells.&lt;/p&gt;
&lt;p&gt;I would like to share my knowledge and experiences in both wearable
fashion technology (what it is, what we can do with it, why its
relevant) that i have created with various programming languages
including python as a creative hobby outlet, and in tissue engineering
with stem cells which is my profession. The aim of my talk is really to
make people aware that you can have multiple interests and it is highly
encouraged for a fulfilling lifestyle and improved mental health. In
adults, having work that you're passionate about can easily engulf your
whole life easily ignoring other needs in life. It is so easy to go on
without realising that if work was taken away from you, you haven't got
anything else. There is a fear of trying something new due to not
enjoying it or not being good at it. In teenagers and children, they are
often blindsided by stereotypes. Young girls that I have spoken to feel
there is a pressure to give up fashion and beauty in pursuing a STEM
career or education. I set myself in this instance as a role model to
show that people generally are multidirectional and cross-disciplinary
interest is easy to get into, unique, beneficial and sought after.&lt;/p&gt;
</summary></entry><entry><title>Introducing programming to undergraduate chemists</title><link href="https://pyvideo.org/pycon-uk-2018/introducing-programming-to-undergraduate-chemists.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Andrew McCluskey</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/introducing-programming-to-undergraduate-chemists.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;And the tools we've developed to help them&lt;/p&gt;
&lt;p&gt;Over the past two years, the Department of Chemistry at the University
of Bath has begun the process of introducing programming in Python to
the undergraduate curriculum. During this time, I have been a PhD
student, first- year undergraduate tutor and laboratory demonstrator in
the Department and have been closely involved in the development of this
course as well as its teaching.&lt;/p&gt;
&lt;p&gt;This year I pioneered the use of Python programming and the Jupyter
notebook interface to enhance my tutorials. This has involved preparing
the answers to each tutorial question in a formatted notebook that is
assessable to the students during and after the tutorial. Furthermore,
using the notebook in the tutorial, during teaching, enables immediate
feedback and helps students that do not typically interface with
programming to see its utility directly to their work.&lt;/p&gt;
&lt;p&gt;Additionally, I have developed pylj, a Python code written to facilitate
student interaction with computational chemistry (an area important to
chemical research but often underappreciated at the undergraduate
level). This software operates in a Jupyter notebook interface and
allows students to perform atomistic simulation to probe topics from
physical chemistry that are covered in their lecture material. The fact
that the students are now familiar with Python means that it is easy for
inquisitive students to interact with and hack the underlying code.&lt;/p&gt;
&lt;p&gt;For more information about this project please visit:
pythoninchemistry.org&lt;/p&gt;
</summary></entry><entry><title>Machine Learning as a Service</title><link href="https://pyvideo.org/pycon-uk-2018/machine-learning-as-a-service.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Anand Chitipothu</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/machine-learning-as-a-service.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to deploy ML Models as APIs without going nuts&lt;/p&gt;
&lt;p&gt;Often, the most convenient way to deploy a machine model is an API. It
allows accessing it from various programming environments and also
decouples the development and deployment of the models from its use.&lt;/p&gt;
&lt;p&gt;However, building an good API is hard. It involves many nitty-gritties
and many of them need to repeated every time an API is built. It
requires understanding of some web framework, worrying about data
validation, authentication and deploying etc. Also, it is very important
to have a client library so that the API can be easily accessed. If you
ever plan to use it from Javascript directly, then you need to worry
about cross-origin-resource- sharing etc.&lt;/p&gt;
&lt;p&gt;In this talk demonstrates how deploying machine learning models an APIs
can be made fun by using right programming abstractions and tools.&lt;/p&gt;
</summary></entry><entry><title>Make Testing Easier by Writing Better Code</title><link href="https://pyvideo.org/pycon-uk-2018/make-testing-easier-by-writing-better-code.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>David Sim</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/make-testing-easier-by-writing-better-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Like a lot of people, I like to have well tested code, and like a lot of
people I sometimes find it hard work to write good tests for my code.
Sometimes the solution is just to get better at writing tests, but I've
often found that when I'm struggling to write a good test for some code,
it's a sign that there's something I could improve about the code
itself.&lt;/p&gt;
&lt;p&gt;In this talk, I'd like to explain why I think this happens. I'll then
give a series of examples of problems that I've encountered when testing
code, and how you can solve these problems, often by applying fairly
basic principles, while making your code better at the same time.&lt;/p&gt;
&lt;p&gt;The talk should be accessible to programmers of all levels.&lt;/p&gt;
</summary></entry><entry><title>Making great tasting dog food with Python</title><link href="https://pyvideo.org/pycon-uk-2018/making-great-tasting-dog-food-with-python.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Lorna Brightmore</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/making-great-tasting-dog-food-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How we are using social network analysis to understand palatability in dog food recipes&lt;/p&gt;
&lt;p&gt;I’m a data scientist working for a tailor made dog food company, and in
this session I’ll explain how we are applying ideas in social network
analysis to understand and improve the overall taste and palatability of
our dry dog food recipes.&lt;/p&gt;
&lt;p&gt;Understanding what makes dog food delicious is a difficult problem to
solve, and as the intended consumers of our food are dogs, this presents
some obvious limitations to the methods available to approach this
problem.&lt;/p&gt;
&lt;p&gt;I am taking a fairly unique and data led approach to this, using ideas
in social network analysis to visualise our dog food recipes and find
ingredients (or combinations of ingredients) common in recipes where we
know that the dog didn’t like the recipe.&lt;/p&gt;
&lt;p&gt;In this talk, I’ll tell the story of how this project evolved, and how
we’ve been using the Python library NetworkX to help us create some
really insightful visualisations of our data. Along the way I’ll cover
some of the great things about this library, as well as some of the
pitfalls.&lt;/p&gt;
</summary></entry><entry><title>Making Sense of Flask APIs A Billion Requests at a Time</title><link href="https://pyvideo.org/pycon-uk-2018/making-sense-of-flask-apis-a-billion-requests-at-a-time.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Evan Morikawa</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/making-sense-of-flask-apis-a-billion-requests-at-a-time.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn how to scale Flask APIs and make sense of the data. You’ve got a
Flask, Django, or other API. How are people using it? Is anything going
wrong? How does it perform? These questions become increasingly hard to
answer once manually &lt;tt class="docutils literal"&gt;tail&lt;/tt&gt;ing your log files becomes impractical.&lt;/p&gt;
&lt;p&gt;This talk will describe how to effectively answer these questions
through a mix of team process, tools, and logging techniques. I’ll
demonstrate a suite of tools we use to quickly visualize insights across
dozens of API endpoints and billions of requests. I’ll show logging
techniques to more consistently store, organize, and process the right
data to make sense of it all. I’ll talk about the processes we’ve put in
place to routinely revisit these questions and quickly alert when things
go awry. Finally, despite all the pretty graphs I’ll show you, I’ll
discuss how at the end of the day it is the team and cultural aspects
that keep any API in line and growing.&lt;/p&gt;
&lt;p&gt;These stories, best practices, and advice come from my experience
building and scaling the Nylas APIs. Our APIs allow developers to GET,
POST and PUT email threads, calendar events, contacts, and any other
item you’d find in an Exchange, GSuite, or IMAP mailbox. Hundreds of
thousands of mailboxes later, and over a hundred million requests a day,
making sense of what’s going on in the system at any given time present
challenges I’m excited to share.&lt;/p&gt;
</summary></entry><entry><title>Peer Learning in CS Education: A Students’ Perspective</title><link href="https://pyvideo.org/pycon-uk-2018/peer-learning-in-cs-education-a-students-perspective.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Nadin Tamer</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/peer-learning-in-cs-education-a-students-perspective.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Peer learning, why it’s effective in computer science education, and how to implement it in your own classroom&lt;/p&gt;
&lt;p&gt;Unlike few 16-year-olds out there, we have been in the unique position
of experiencing computer science education both as students and as
educators. Having both learned Python from other students, and taught it
in a workshop to others, it is clear to us that one of the best ways to
enhance a computer science education is through peer learning. Students
usually have a knack for explaining things to their peers in a way that
is approachable and understandable. (Although the presence of a teacher
as a moderator is crucial in peer learning, it is often easier for
students to relate to someone their own age.) Even if there’s no direct
explaining involved, working together with another student can lead to
enlightening discussions. We’d like to share our experiences with peer
learning with other educators to encourage them to implement similar
practices in their own classrooms, hopefully paving the way to an even
more effective computer science education.&lt;/p&gt;
</summary></entry><entry><title>PGE a Physics Game Engine for Pygame</title><link href="https://pyvideo.org/pycon-uk-2018/pge-a-physics-game-engine-for-pygame.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Gaius Mulley</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/pge-a-physics-game-engine-for-pygame.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;This session will present a game engine PGE which has been designed to
work with Python Pygame.&lt;/div&gt;
&lt;div class="line"&gt;It will discuss the world objects supported, the API used and the
design of the game engine. It will also contain numerous tiny examples
of simple 2D games which have been produced using this module.&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>PyCon UK 2018 - Sunday Lightning Talks</title><link href="https://pyvideo.org/pycon-uk-2018/pycon-uk-2018-sunday-lightning-talks.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Various Speakers</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/pycon-uk-2018-sunday-lightning-talks.html</id><summary type="html"></summary></entry><entry><title>Python in school: Not Just for Computer Science Lessons?</title><link href="https://pyvideo.org/pycon-uk-2018/python-in-school-not-just-for-computer-science-lessons.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Spencer Organ</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/python-in-school-not-just-for-computer-science-lessons.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A normal Science teacher and his journey into Python and the impact it has had on his STEM teaching&lt;/p&gt;
&lt;p&gt;Six years ago I was happily teaching Science and a little bit of IT at
school. I had done some basic programming a long time ago but this was
mostly from magazines as a kid. Jump forward six years and I am now
leading on Computer Science at Key Stage 3 and engaging learners in
Chemistry and Physics with physical computing, digital making and
programming.&lt;/p&gt;
&lt;p&gt;This has been an exciting journey and has transformed the way I teach
Science and developed the skills to teach Key Stage 3 Computer Science.
At the heart of this has been Python and I would love to share that
journey with you and how I brought Python into school in more than just
Computer Science lessons.&lt;/p&gt;
</summary></entry><entry><title>Rehabilitating Pickle</title><link href="https://pyvideo.org/pycon-uk-2018/rehabilitating-pickle.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Alex Willmer</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/rehabilitating-pickle.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pickle is a compact serialisation protocol for Python objects. It could
be a convenient way for Python programs and distributed systems to
communicate. Unfortunately pickle is widely considered to be unsafe, and
it has lead to several vulnerabilities over the years. As the Python
manual warns&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The pickle module is not secure against erroneous or&lt;/div&gt;
&lt;div class="line"&gt;maliciously constructed data. Never unpickle data&lt;/div&gt;
&lt;div class="line"&gt;received from an untrusted or unauthenticated source.&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Does this have to be the case? Can we use Pickle safely?&lt;/p&gt;
&lt;p&gt;This talk will be a deep dive into what an attacker can do with a
maliciously constructed pickles. I’ll show what defences you can
implement against the common attacks, especially those that gain
arbitrary code execution. I will present new research into other
attacks, and mitigations. Finally I will review a few less known
alternatives to pickle.&lt;/p&gt;
</summary></entry><entry><title>Running (a subset) of python on the BBC Micro</title><link href="https://pyvideo.org/pycon-uk-2018/running-a-subset-of-python-on-the-bbc-micro.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Q Misell</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/running-a-subset-of-python-on-the-bbc-micro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Yes, the one from the 80's. Yes, I'm a little mad.&lt;/p&gt;
&lt;p&gt;Following on from my talk last year on making a C compiler for the BBC
Micro, I will be using said compiler to write and run a python
interpreter that can run on the BBC Micro. Come to learn about how
compilers work in general, how python is technically a compiled and
interpreted language, the struggles I had fitting as much as possible of
python into 64K of RAM and ROM, and some interesting things I learnt
about python along the way. If you already know a lot about compilers
then this may be the talk for you, as it's not every day you have to fit
a compiler into such limited RAM, and such a limited instruction set.&lt;/p&gt;
</summary></entry><entry><title>Secret Arts of Teaching Coding to the Next Generation</title><link href="https://pyvideo.org/pycon-uk-2018/secret-arts-of-teaching-coding-to-the-next-generation.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Lilian Nandi</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/secret-arts-of-teaching-coding-to-the-next-generation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Secret &amp;amp; Undiscovered Arts of Teaching Coding to the Next Generation Successfully&lt;/p&gt;
&lt;p&gt;Computer Science is now the leading discipline of the 21st century.
Computers and technology are now ubiquitous and prevalent in all sectors
of society such as the arts, sciences, medicine, commerce, etc.
Technology also plays a huge role in the world economy and the market
capitalisation of the FAANGs' Facebook, Apple, Amazon, Netflix and
Alphabet’s Google along with a couple of other technologies is more or
less equivalent to the GDP of Japan - the world's 3rd richest nation.
Therefore, computer programming is now regarded as an essential skill
for the young person, and it has been dubbed the ‘4th’ R’ (computer
pRogramming) along with reading, writing and arithmetic.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;In recognition of the new status of computer programming, governments
worldwide have launched initiatives to have it taught in schools from
Kindergarten through to junior school and all the way through
secondary school.&lt;/div&gt;
&lt;div class="line"&gt;So, the question emerges is how do we best teach the next generation
in acquiring this skill? Given the fact that this field is very much
in its infancy, there is very little pedagogy to guide the educator.
Therefore, the whole world is learning how best to teach this subject
by trial and error.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The talk will describe a case study whereby coding/computer programming,
in the form of Python, was introduced to a group of 110 young people
from the ages of 11 to 18 (Years 7-13 in an UK secondary school). The
talk will include descriptions of the various teaching methodologies
introduced to the young people for this purpose and the outcomes; the
talk will also address various challenges and questions about how to
teach programming to young people. The talk will conclude with helpful
suggestions, based on the findings of the case study, on how to proceed
with the teaching of computer programming to these people.&lt;/p&gt;
</summary></entry><entry><title>Surface Wave Propagation Analysis</title><link href="https://pyvideo.org/pycon-uk-2018/surface-wave-propagation-analysis.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Dani Papamaximou</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/surface-wave-propagation-analysis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Python to Takle Engineering Problems&lt;/p&gt;
&lt;p&gt;Rayleigh waves are a type of surface wave that can be generated from a
number of sources such as earthquakes, construction activities, and
transient train loading. When considering transient train loads,
Rayleigh Waves cause displacements of the track and the material below
it when the train speed approaches the Rayleigh Wave Velocity of the
soil, resulting in excessive vibration. Therefore, a stiff layer under
the rail track needs to be constructed to accommodate the increased
speed. The shear velocity occurring from existing seismic tests is used
as an input alongside the in-situ soil properties to calculate the
Rayleigh wave dispersion curve-Rayleigh wave velocity over frequency.
This data is used in strategic decision making to identify the thickness
of the competent layer while maximising the speed and minimising the
volume of the imported competent material. This presentation aims to
highlight the data analysis challenges in geotechnical engineering,
where python is not predominantly used for data analysis. The
implementation of numpy to tackle the equations for calculating the
Rayleigh wave dispersion curve followed by the implementation of pandas
to create dataframes that are agile and easy to manipulate will be
discussed initially. As we have to analyse data from many datapoints, it
is essential that we create an agile form of database, or an
input-output procedure which remains constant. Data querying can then be
conducted in a way such that engineers without programming knowledge can
extract information-provided that the right question is asked. The
importance of the ‘right question’ in database querying will be
highlighted as there is a need to ensure clear communication between the
developer and other engineering disciplines. The use of jupyter to
create a user interface for such data analysis will be demonstrated.
Finally, the lessons learnt from communicating the querying/calculative
limitations to third parties will be presented.&lt;/p&gt;
</summary></entry><entry><title>The Knowledge In The Code</title><link href="https://pyvideo.org/pycon-uk-2018/the-knowledge-in-the-code.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Hannah Hazi</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/the-knowledge-in-the-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Or, how I learned to stop worrying and love legacy code&lt;/p&gt;
&lt;p&gt;Legacy code. It's old, poorly documented, barely tested, a nightmare to
work with. You've never met the people who wrote it, but if you did
you'd have a thing or two to tell them! If you had the time, you'd love
to re-write it all.&lt;/p&gt;
&lt;p&gt;But what if I told you that there are gems hidden in your company's old
code? That re-writing it from scratch would be a bad mistake?&lt;/p&gt;
&lt;p&gt;This is the story of how I learned to love legacy code. And how you
might, too!&lt;/p&gt;
</summary></entry><entry><title>Tuesday Introduction</title><link href="https://pyvideo.org/pycon-uk-2018/tuesday-introduction.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Daniele Procida</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/tuesday-introduction.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction
.. PyCon UK 2018&lt;/p&gt;
&lt;p&gt;Assembly Room 2018-09-16 09:00-09:30&lt;/p&gt;
</summary></entry><entry><title>A journey from HTTP to gRPC</title><link href="https://pyvideo.org/pycon-uk-2018/a-journey-from-http-to-grpc.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Tatiana Al-Chueyr</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/a-journey-from-http-to-grpc.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;motivations, challenges, weapons and achievements&lt;/p&gt;
&lt;p&gt;Once upon a time, there was a collection of happy, but perhaps not so
efficient, HTTP micro-services that was being developed as part of a
major recommendation platform.&lt;/p&gt;
&lt;p&gt;During a snowy spring morning, their retirement was decreed. A new
generation of gRPC micro-services was to replace them.&lt;/p&gt;
&lt;p&gt;With the support of some brave pathfinders and a few sacrifices, the
gRPC micro-services finally reached their destination.&lt;/p&gt;
&lt;p&gt;And they lived happily ever after.&lt;/p&gt;
&lt;p&gt;This story is based on real facts. The pathfinders were data scientists
and engineers, the date is early 2018 and the location is BBC, UK.&lt;/p&gt;
</summary></entry><entry><title>A Rising Tide Lifts All Ships</title><link href="https://pyvideo.org/pycon-uk-2018/a-rising-tide-lifts-all-ships.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Tom Easterbrook</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/a-rising-tide-lifts-all-ships.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Being born with Cerebral Palsy has presented me with many challenges
thankfully, we are in the grips of a technical revolution and it may
surprise you how much of this technology has had a massive impact on my
life and enabled my independence to be greatly improved.&lt;/p&gt;
&lt;p&gt;My love of technology has helped me to embrace many things from social
networking to smart assistants to improve my life including, in my
professional work where I use a Python library to partially code by
using my voice.&lt;/p&gt;
&lt;p&gt;In this talk, I will discuss the label of assistive technology and why
more technologies than you would traditionally think in my view are
assistive. I will also discuss the risks forced upon me to achieve that
level of independence and where I believe the technology of the future
has a role to play in further increasing my independence.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Tom is a Computing student at Bournemouth University in South West
England. Despite being born with Quadriplegic Cerebral Palsy he has used
his love and passion for technology to propel himself forward, grounded
in a firm interest of current affairs and the world around him. Tom is
currently looking for opportunities to combine both of these passions.&lt;/p&gt;
</summary></entry><entry><title>Aletheia</title><link href="https://pyvideo.org/pycon-uk-2018/aletheia.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Daniel Quinn</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/aletheia.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fight fake news with cryptography &amp;amp; human nature&lt;/p&gt;
&lt;p&gt;Just as journalism has taken a critical financial hit, fake news is
multiplying across social networks faster than facts. The public doesn't
know which stories are real any more because anyone with a laptop can
forge audio &amp;amp; video in record time. We need to empower the institutions
we trust with the ability to tie their reputations to the journalism
they produce.&lt;/p&gt;
&lt;p&gt;Aletheia uses cryptographic signatures + DNS to leverage existing
networks of human trust in individual journalists &amp;amp; institutions to help
link those people to the work they produce with a view to change our
expectations of what constitutes journalism: if it's not verified, it's
just some stranger on the internet.&lt;/p&gt;
</summary></entry><entry><title>APIzero - coding doesn't have to be difficult</title><link href="https://pyvideo.org/pycon-uk-2018/apizero-coding-doesnt-have-to-be-difficult.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Martin O'Hanlon</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/apizero-coding-doesnt-have-to-be-difficult.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The lessons learnt creating guizero and API’s which work for beginners and experts.&lt;/p&gt;
&lt;p&gt;New learners are desperate to create more exciting programs but they
either find the tools available to them difficult to understand, or they
are unable or unwilling to install other software packages. This talk
charts the journey creating guizero, the lessons learnt and their
relevance on creating APIs not just for beginners but experts too, and
the impact guizero has had.&lt;/p&gt;
</summary></entry><entry><title>Chess programs in python</title><link href="https://pyvideo.org/pycon-uk-2018/chess-programs-in-python.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>David Howlett</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/chess-programs-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;General principles and my experience building one&lt;/p&gt;
&lt;p&gt;This talk will cover the standard techniques used to build chess playing
programs including minimax, alpha-beta search, piece valuation,
positional valuation, iterative deepening and transposition tables. This
talk will assume a knowledge of python but no knowledge of chess or the
existing literature on how to write chess engines.&lt;/p&gt;
&lt;p&gt;I became fascinated by this topic after taking part in a competition
with my brothers to build the best chess program during the Christmas
holidays 2016.&lt;/p&gt;
</summary></entry><entry><title>Data science APIs for everyone created by magic*</title><link href="https://pyvideo.org/pycon-uk-2018/data-science-apis-for-everyone-created-by-magic.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Frederike Jaeger</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/data-science-apis-for-everyone-created-by-magic.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;*not actually magic&lt;/p&gt;
&lt;p&gt;With more data than we can handle being produced every day, data science
is the new big thing in tech and taking the world by storm. People like
me (a proud physicist) are doing a big chunk of the data science model
development, often relying on engineers to help them take their model to
the masses. Unfortunately, not every data scientist has an engineer at
hand at all times. So what if they still want to deploy their model
using an API?&lt;/p&gt;
&lt;p&gt;To help scientists without a strong engineering background do just that,
we created an open source python package called revelio, which lets
users create a basic API with minimal effort. The idea is that you
supply your trained data science model and some sample input, and the
package does everything else for you - including input validation and
creating some documentation. To make things better, you can also monitor
the API requests and predictions. The aim is to make the data science
pipeline easier, especially for data scientists working in small teams
with less support.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;In this talk, I will walk you through creating APIs in Flask,
highlight common patterns in data science and show how revelio makes
implementing these easier. By the end of the talk, you&lt;/div&gt;
&lt;div class="line"&gt;will feel confident prototyping, deploying and monitoring data science
APIs!&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Getting an Edge with Network Analysis with Python</title><link href="https://pyvideo.org/pycon-uk-2018/getting-an-edge-with-network-analysis-with-python.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Alon Nir</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/getting-an-edge-with-network-analysis-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Networks are all around us. While Facebook and Twitter are the obvious
examples, every time we shake hands, drive from point A to B, push code
to GitHub, check out a meetup or rate a show on IMDB, we’re
participating in network activity. People, places, things and even ideas
are inter-connected in innumerable networks, and these can have a great
(yet sometimes inconspicuous) impact on our lives.&lt;/p&gt;
&lt;p&gt;The purpose of this talk is to introduce members of the audience to
network analysis and its importance, and give them the basic building
blocks for applied network analysis with Python (using the friendly
NetworkX library). I hope this talk will encourage audience members to
consider network analysis approaches in their line of work/research and
intrigue them to learn more.&lt;/p&gt;
&lt;p&gt;The talk will weave theory and practice, discussing topics in graph
theory as we’re seeing them in practice during hands on analysis of a
real-life network. Topics covered include: types of graphs (undirected,
directed, multi and bipartite), structures in graphs (triangles,
cliques, connected components), node importance (centrality measures,
PageRank), graph topology and high-level graph descriptions. Practical
applications of these topics will be emphasized.&lt;/p&gt;
&lt;p&gt;Given the limited time compared to the breadth of the topic, the focus
would lean towards intuitive understanding of concepts and seeing them
in practice, over deep theoretical formulations and hardcore
mathematics.&lt;/p&gt;
&lt;p&gt;The talk will be given from a data scientist’s perspective with touches
of social sciences flavor.&lt;/p&gt;
</summary></entry><entry><title>GraphQL in Python</title><link href="https://pyvideo.org/pycon-uk-2018/graphql-in-python.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Ed Singleton</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/graphql-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;(A replacement for REST?)&lt;/p&gt;
&lt;p&gt;GraphQL is a recent specification that is a good replacement for REST
APIs. It is flexible and gives frontend developers a high degree of
control over what data they get back. It allows much faster iteration,
with less negotiation between front and backend developers, and
requiring significantly less upfront planning.&lt;/p&gt;
&lt;p&gt;It has been used to great success at Facebook, Khan Academy, GitHub and
many other developer led companies.&lt;/p&gt;
&lt;p&gt;This talk will give a brief overview of GraphQL. Followed by a deeper
dive into Python support for it through the Graphene library. It will
show how GraphQL can be easily integrated into Django and Flask
webframeworks, and be automatically reflected from Django ORM or
SqlAlchemy.&lt;/p&gt;
</summary></entry><entry><title>How we built a LCD train announcement board on a RaspberryPi</title><link href="https://pyvideo.org/pycon-uk-2018/how-we-built-a-lcd-train-announcement-board-on-a-raspberrypi.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Henry Morris</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/how-we-built-a-lcd-train-announcement-board-on-a-raspberrypi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Two Pythonistas, one city break, one challenge:&amp;nbsp;re-create a train announcement board on a RaspberryPi-powered LCD&lt;/p&gt;
&lt;p&gt;This talk will tell our story – two friends who were curious what trains
were going past one of their houses every five minutes.&lt;/p&gt;
&lt;p&gt;Rather than buy an over-priced Windows-powered monstrosity(!), we'll
explain how we built an open-source train announcement board using an
LCD display, powered by a RaspberryPi. We'll run through how we started
with way too grand a plan, how we de-scoped the project and how we built
it over the course of a weekend city break. Naturally, the talk will end
with a demo!&lt;/p&gt;
&lt;p&gt;Attendees should come to learn what it takes to scrape train data and
present it on a RaspberryPi LCD but stay to hear about coding city
breaks!&lt;/p&gt;
</summary></entry><entry><title>Is it Shakespeare?</title><link href="https://pyvideo.org/pycon-uk-2018/is-it-shakespeare.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Paul Brown</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/is-it-shakespeare.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Python for authorship attribution in Renaissance drama.&lt;/p&gt;
&lt;p&gt;About a third of the plays written for the London theatres of 400 years
ago -- when Shakespeare was writing -- were published anonymously, so we
don't know who wrote them. For the last century, investigators have
counted things in these plays in an attempt to decide who wrote them.
Such inquiries have been helped by advances in technology. We can now
store these texts electronically and automate much of the counting.
These advances have led to a refinement in methods for attributing
authorship, with scholars having a battery of reliable tests for
determining the author or authors of a piece of writing.&lt;/p&gt;
&lt;p&gt;Scholars who specialise in authorship attribution tend to give their
attention almost exclusively to Shakespeare's writing and few use
automated means to produce their results. This talk -- and the programs
behind it -- addresses both these facts. It will show how authorship
attribution, by a number of methods, can be automated in Python and
yield worthwhile results for the study of Renaissance drama. By using
its inbuilt data structures and a few libraries (like pandas, numpy, and
math), we can write programs that find likely candidate authors for
writing from the period.&lt;/p&gt;
&lt;p&gt;Discovering more about authorship in the Renaissance is vital to our
understanding of the period. Slowly, ideas that placed Shakespeare alone
as a solitary genius are being replaced by models of a more
collaborative theatre industry, where people co-authored plays more
frequently than previously thought. This talk will help to continue this
work as well as showing how researchers can automate their endeavours in
a way that others can replicate and understand with only a little
programming knowledge.&lt;/p&gt;
</summary></entry><entry><title>Keynote: Building trust in a world of suspicious minds</title><link href="https://pyvideo.org/pycon-uk-2018/keynote-building-trust-in-a-world-of-suspicious-minds.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Alex Chan</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/keynote-building-trust-in-a-world-of-suspicious-minds.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Alex is a software developer at &lt;a class="reference external" href="https://wellcomecollection.org"&gt;Wellcome
Collection&lt;/a&gt;. He is also a veteran
PyCon UK organiser, and a key member of this year's team.&lt;/p&gt;
&lt;p&gt;In his talk, Alex will consider how trust can be fostered in systems
that are built around principles of security and threat.&lt;/p&gt;
</summary></entry><entry><title>Make Your Code Really Boring</title><link href="https://pyvideo.org/pycon-uk-2018/make-your-code-really-boring.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Mac Chapman</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/make-your-code-really-boring.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Readability and Maintainability are Boring&lt;/p&gt;
&lt;p&gt;In my time, I’ve written some really exciting code: I’ve overridden
nearly every operator in python and I've written logic in XML. It was a
lot of fun, but it was all impossible to maintain. In this session I’ll
work through some beginner to intermediate techniques for making code
more predictable and manageable and share a few stories from projects
past. I’ll tell you why you shouldn’t make a CSS class called “yellow”,
what a variable called “noecho” really ought to do, and why you probably
don’t need a variable called “noecho” anyway.&lt;/p&gt;
</summary></entry><entry><title>MyNormal: Accessible Instruments Project</title><link href="https://pyvideo.org/pycon-uk-2018/mynormal-accessible-instruments-project.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Noelle Aly</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/mynormal-accessible-instruments-project.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Representing disabled voices in the music industry&lt;/p&gt;
&lt;p&gt;We are an engineer and a musician who were brought together by our
desire to give a voice to those underrepresented in the music industry.
We sought to give disabled individuals high quality music and technology
opportunities. Through the MyNormal project at Ark T Centre, we
developed workshops and Hackathons around building accessible
instruments. Inspired by Imogen Heap's mi.mu gloves, we use micro:bits,
Makey-Makeys, laptops, speakers, bananas, and cubes to empower
individuals to interact with music in ways they've never done before.
ScienceOxford is supporting the project, lending kit, equipment, and
machine time.&lt;/p&gt;
&lt;p&gt;Project leaders are Hannah Bruce, Youth Music Project Manager at the Ark
T Centre and bassist of Death of the Maiden; Noelle Aly, Projects
Technology Officer and Maker at ScienceOxford.&lt;/p&gt;
</summary></entry><entry><title>Navigating the Magical Data Visualisation Forest</title><link href="https://pyvideo.org/pycon-uk-2018/navigating-the-magical-data-visualisation-forest.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Margriet Groenendijk</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/navigating-the-magical-data-visualisation-forest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data visualization is fun but can take up a lot of time, especially when
you are exploring new data. The magic forest is much easier to navigate
with PixieDust, a free open-source Python library that makes it quick
and simple to explore data with any visualization library without
writing code in a Jupyter notebook. Learn how PixieDust takes out some
of the coding, how to contribute, and how to make and share
visualizations in seconds.&lt;/p&gt;
</summary></entry><entry><title>On the Diagramatic Diagnosis of Data</title><link href="https://pyvideo.org/pycon-uk-2018/on-the-diagramatic-diagnosis-of-data.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Ian Ozsvald</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/on-the-diagramatic-diagnosis-of-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tools to make your data analysis and machine learning both easier and more reliable&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The wrong way to start your machine learning project is to “chuck
everything into a model to see what happens”. The better way is to
visualise your data to expose the relationships that you expect, to
confirm that your data looks correct and to identify problems that are
likely to make your life difficult.&lt;/div&gt;
&lt;div class="line"&gt;We’ll review ways to quickly and visually diagnose your data, to check
it meets your assumptions and to prepare it for discussion with your
colleagues. We’ll look at tools including Pandas, Seaborn and Pandas
Profiling. At the end you’ll have new tools to help you confidently
investigate new data with your associates.&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Ops for Humans</title><link href="https://pyvideo.org/pycon-uk-2018/ops-for-humans.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Wes Mason</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/ops-for-humans.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Infrastructure that makes everyone happy, not just your vendors&lt;/p&gt;
&lt;p&gt;A large focus of DevOps culture has been on embracing automation in
order to offload repetitive tasks from Smart People™ to our robot
overlords&lt;em&gt;COUGH&lt;/em&gt; I mean helpers, which can help lower business costs.&lt;/p&gt;
&lt;p&gt;But what if we focus not just on the bottom line and KPIs, but people
themselves?&lt;/p&gt;
&lt;p&gt;With some care and thought for the frustrations and cognitive issues
that devs, ops and business folk encounter regularly you'll not only
make everyone happier, but in turn improve business performance.&lt;/p&gt;
&lt;p&gt;Expect an overview and case-studies of:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Common operations tools, and across software engineering (Python,
JavaScript etc.)&lt;/li&gt;
&lt;li&gt;Infrastructure patterns for deployments&lt;/li&gt;
&lt;li&gt;On call rotation and postmortems&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>PyconUK 2018 Saturday Introduction</title><link href="https://pyvideo.org/pycon-uk-2018/pyconuk-2018-saturday-introduction.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Daniele Procida</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/pyconuk-2018-saturday-introduction.html</id><summary type="html"></summary></entry><entry><title>Python at Ordnance Survey</title><link href="https://pyvideo.org/pycon-uk-2018/python-at-ordnance-survey.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Olivia Wilson</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/python-at-ordnance-survey.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How does a National Mapping Agency use python to help map Great Britain.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Meet Ordnance Survey (OS), the national mapping agency of Great
Britain with a wealth of data going back centuries, and now looking
forward into the geospatial age. Most people know us for our paper map
products of popular walking and hiking destinations, but the main
resource we have is from digital data such as MasterMap – the most
detailed topographic map of Great Britain.&lt;/div&gt;
&lt;div class="line"&gt;But where does Python come into all this, you ask? In many areas
across the business Python is a key language, particularly within our
data science and research teams. We use Python to automate processes
as well as discover more about our data and infer from our existing
products. Python automates the quality measures of our data and
products as well as geoprocessing of those products. All of our deep
learning research is carried out using python libraries such as keras,
tensorflow and quiver. So come along to find out more about Python at
OS and particularly about our deep learning work and investigation of
models trained on aerial imagery – including demonstrations.&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Saturday Lightning Talks</title><link href="https://pyvideo.org/pycon-uk-2018/saturday-lightning-talks.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Various Speakers</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/saturday-lightning-talks.html</id><summary type="html"></summary></entry><entry><title>Setting up a camera trap for nature with the Raspberry Pi</title><link href="https://pyvideo.org/pycon-uk-2018/setting-up-a-camera-trap-for-nature-with-the-raspberry-pi.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Jody Carter</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/setting-up-a-camera-trap-for-nature-with-the-raspberry-pi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Take incredible snaps of the wildlife in your garden or school&lt;/p&gt;
&lt;p&gt;I was annoyed and frustrated with the cost of setting up a video stream
of nature at school. It can be a couple of hundred pounds to set up a
live bird box. A wonderful resource but can be prohibitively expensive
for schools, so I had a go at doing it myself. I decided to set up some
camera traps using a few Raspberry Pi computers and I was really amazed
at how easy it was and how brilliant the results where. It turns out I
have badgers at the bottom of my garden! I now have several set up
including an auto tweeting camera on a bird feeder (&amp;#64;pibirdbrain) and a
few at school including a pond cam where we've managed to get some
really great and close up pics of tadpoles and newts.&lt;/p&gt;
&lt;p&gt;I want to show others how easy it is to get going (you don't need to be
an expert), that it's really cheap and fantastic fun.&lt;/p&gt;
</summary></entry><entry><title>Stereotypes, role models and learning to code</title><link href="https://pyvideo.org/pycon-uk-2018/stereotypes-role-models-and-learning-to-code.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Cat Lamin</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/stereotypes-role-models-and-learning-to-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why role models matter&lt;/p&gt;
&lt;p&gt;This talk will be about the impact of having positive role models in the
world of coding.&lt;/p&gt;
&lt;p&gt;We are currently seeing reports highlighting that girls aren't
interested in coding, in particular numbers drop off during teen years
and in this talk we will discuss why and how we can help. We will
explore the importance of role models, not just to girls, but to other
minority groups and think about ways that we, as a community, can work
together to promote positive role models in the world of coding.&lt;/p&gt;
</summary></entry></feed>