<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Irit Katriel</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_irit-katriel.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-05-18T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Exception Groups and except*</title><link href="https://pyvideo.org/pycon-uk-2022/exception-groups-and-except.html" rel="alternate"></link><published>2022-09-16T00:00:00+00:00</published><updated>2022-09-16T00:00:00+00:00</updated><author><name>Irit Katriel</name></author><id>tag:pyvideo.org,2022-09-16:/pycon-uk-2022/exception-groups-and-except.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.11 introduces new features that make it possible to raise and handle multiple unrelated exceptions. This talk briefly covers what they do and how they work, and answers a frequently asked question: why we needed to add new language syntax to handle exception groups.&lt;/p&gt;
&lt;p&gt;Python 3.11 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.11 introduces new features that make it possible to raise and handle multiple unrelated exceptions. This talk briefly covers what they do and how they work, and answers a frequently asked question: why we needed to add new language syntax to handle exception groups.&lt;/p&gt;
&lt;p&gt;Python 3.11 introduces new features that make it possible to raise and handle multiple unrelated exceptions at the same time (see PEP 654). This talk, given by one of the authors of PEP 654, will describe how they work and some of the design decisions we made while developing these features. In particular, why we needed to add the new syntax except* to handle exception groups.&lt;/p&gt;
</content><category term="PyCon UK 2022"></category></entry><entry><title>CPython's Compilation Pipeline</title><link href="https://pyvideo.org/pycon-us-2024/cpythons-compilation-pipeline.html" rel="alternate"></link><published>2024-05-18T00:00:00+00:00</published><updated>2024-05-18T00:00:00+00:00</updated><author><name>Irit Katriel</name></author><id>tag:pyvideo.org,2024-05-18:/pycon-us-2024/cpythons-compilation-pipeline.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the last couple of years, CPython's compiler was refactored. In
version 3.13, we will have access from Python scripts to more of the
compilation stages: Instead of the old 4-stage pipeline (source --&amp;gt;
tokens --&amp;gt; AST --&amp;gt; code object), we will have a more refined pipeline
(source --&amp;gt; tokens --&amp;gt; AST --&amp;gt; optimized …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the last couple of years, CPython's compiler was refactored. In
version 3.13, we will have access from Python scripts to more of the
compilation stages: Instead of the old 4-stage pipeline (source --&amp;gt;
tokens --&amp;gt; AST --&amp;gt; code object), we will have a more refined pipeline
(source --&amp;gt; tokens --&amp;gt; AST --&amp;gt; optimized AST --&amp;gt; pseudo bytecode --&amp;gt;
optimized pseudo bytecode --&amp;gt; bytecode --&amp;gt; code object).&lt;/p&gt;
&lt;p&gt;This talk describes the new compilation pipeline of CPython 3.13 and the
possibilities that it creates for CPython users, maintainers and
educators. It presents Codoscope, a new vizualization tool that displays
CPython's process of translating Python source code into an executable
code object.&lt;/p&gt;
</content><category term="PyCon US 2024"></category></entry></feed>