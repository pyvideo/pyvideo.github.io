<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_john-schwarz.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-09-19T00:00:00+00:00</updated><entry><title>Debugging Hung Python Processes With GDB</title><link href="https://pyvideo.org/pycon-israel-2016/debugging-hung-python-processes-with-gdb.html" rel="alternate"></link><published>2016-09-19T00:00:00+00:00</published><updated>2016-09-19T00:00:00+00:00</updated><author><name>John Schwarz</name></author><id>tag:pyvideo.org,2016-09-19:pycon-israel-2016/debugging-hung-python-processes-with-gdb.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Complex Python programs can be rather difficult to debug when hung. Finding out why a 500k lines process is completely stuck can be a daunting task, especially since PDB can't be attached to the stuck process in order to display rudimentary details such as local/global variables, stack traces and more. However, this can be mitigated greatly by tools such as GDB and strace. This talk will focus on such methods that will surely help you debug such programs.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="http://il.pycon.org/2016/static/sessions/john-schwarz.pdf"&gt;http://il.pycon.org/2016/static/sessions/john-schwarz.pdf&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>