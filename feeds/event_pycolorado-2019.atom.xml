<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycolorado-2019.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-09-08T00:00:00+00:00</updated><entry><title>Advanced asyncio: Solving Real-World Production Problems</title><link href="https://pyvideo.org/pycolorado-2019/advanced-asyncio-solving-real-world-production-problems.html" rel="alternate"></link><published>2019-09-08T00:00:00+00:00</published><updated>2019-09-08T00:00:00+00:00</updated><author><name>Lynn Root</name></author><id>tag:pyvideo.org,2019-09-08:pycolorado-2019/advanced-asyncio-solving-real-world-production-problems.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everyone’s talking about it. Everyone’s using it. But most likely, they’re doing it wrong, just like we did. By building a simplified chaos monkey service, we will walk through how to create a good foundation for an asyncio-based service, including graceful shutdowns, proper exception handling, and testing asynchronous code. We’ll get into the hairier topics as well, covering topics like working with synchronous code, debugging and profiling, and working with threaded code. We’ll learn how to approach asynchronous and concurrent programming with Python’s asyncio library, take away some best practices, and learn what pitfalls to avoid.&lt;/p&gt;
</summary></entry><entry><title>Cleaning Up Your Python Environment Superfund Site</title><link href="https://pyvideo.org/pycolorado-2019/cleaning-up-your-python-environment-superfund-site.html" rel="alternate"></link><published>2019-09-08T00:00:00+00:00</published><updated>2019-09-08T00:00:00+00:00</updated><author><name>Ashton Honnecke</name></author><id>tag:pyvideo.org,2019-09-08:pycolorado-2019/cleaning-up-your-python-environment-superfund-site.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Does your Python environment look like Randall Munroe's (of XKCD fame) Python environment superfund site? (&lt;a class="reference external" href="https://xkcd.com/1987/"&gt;https://xkcd.com/1987/&lt;/a&gt;) What would happen to your sprint if your laptop got hit by a bus? How can you mitigate that?&lt;/p&gt;
</summary></entry><entry><title>CUDA in Your Python: Effective Parallel Programming on the GPU</title><link href="https://pyvideo.org/pycolorado-2019/cuda-in-your-python-effective-parallel-programming-on-the-gpu.html" rel="alternate"></link><published>2019-09-08T00:00:00+00:00</published><updated>2019-09-08T00:00:00+00:00</updated><author><name>William Horton</name></author><id>tag:pyvideo.org,2019-09-08:pycolorado-2019/cuda-in-your-python-effective-parallel-programming-on-the-gpu.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It’s 2019, and Moore’s Law is dead. CPU performance is plateauing, but GPUs provide a chance for continued hardware performance gains, if you can structure your programs to make good use of them. In this talk you will learn how to speed up your Python programs using Nvidia’s CUDA platform.&lt;/p&gt;
</summary></entry><entry><title>Python 1994</title><link href="https://pyvideo.org/pycolorado-2019/python-1994.html" rel="alternate"></link><published>2019-09-08T00:00:00+00:00</published><updated>2019-09-08T00:00:00+00:00</updated><author><name>Paul Everitt</name></author><id>tag:pyvideo.org,2019-09-08:pycolorado-2019/python-1994.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;“Come for the language, stay for the community.” The Python community started in 1994 at a NIST workshop in Maryland. What was the world of Python like in its first years? Did we have any clue whatsoever? A joke-focused tour of early Python, heavy on question-and-answer.&lt;/p&gt;
</summary></entry><entry><title>Static Typing in Python</title><link href="https://pyvideo.org/pycolorado-2019/static-typing-in-python.html" rel="alternate"></link><published>2019-09-08T00:00:00+00:00</published><updated>2019-09-08T00:00:00+00:00</updated><author><name>Dustin Ingram</name></author><id>tag:pyvideo.org,2019-09-08:pycolorado-2019/static-typing-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we’ll discuss the advantages and disadvantages to a static type system, as well as recent efforts to introduce static typing to Python via optional “type hints” and various tools to aid in adding types to Python code.&lt;/p&gt;
</summary></entry><entry><title>The Zen of Python: Rocky Mountain Remix</title><link href="https://pyvideo.org/pycolorado-2019/the-zen-of-python-rocky-mountain-remix.html" rel="alternate"></link><published>2019-09-08T00:00:00+00:00</published><updated>2019-09-08T00:00:00+00:00</updated><author><name>Uche Ogbuji</name></author><id>tag:pyvideo.org,2019-09-08:pycolorado-2019/the-zen-of-python-rocky-mountain-remix.html</id><summary type="html"></summary></entry><entry><title>Using Dash to Create Interactive Web Apps for Non-Technical Audiences</title><link href="https://pyvideo.org/pycolorado-2019/using-dash-to-create-interactive-web-apps-for-non-technical-audiences.html" rel="alternate"></link><published>2019-09-08T00:00:00+00:00</published><updated>2019-09-08T00:00:00+00:00</updated><author><name>Joe Willi</name></author><id>tag:pyvideo.org,2019-09-08:pycolorado-2019/using-dash-to-create-interactive-web-apps-for-non-technical-audiences.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever struggle with finding methods to present data visualizations and/or results to non-technical audiences in a coherent and engaging manner? In this talk, I’ll detail how I overcame such a challenge by using Dash to build an interactive app for firefighters to use while testing rescue equipment.&lt;/p&gt;
</summary></entry><entry><title>WhyPy? Understanding Trends Driving the Usage of Python</title><link href="https://pyvideo.org/pycolorado-2019/whypy-understanding-trends-driving-the-usage-of-python.html" rel="alternate"></link><published>2019-09-08T00:00:00+00:00</published><updated>2019-09-08T00:00:00+00:00</updated><author><name>Rachel Stephens</name></author><id>tag:pyvideo.org,2019-09-08:pycolorado-2019/whypy-understanding-trends-driving-the-usage-of-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How does Python fit among programming languages? We’ll start with a zoomed out view of programming language trends and then drill into Python specifically. Our goal is to explore where, why and how Python being used, and then discuss future opportunities and threats to the language.&lt;/p&gt;
</summary></entry><entry><title>Boring Object Orientation</title><link href="https://pyvideo.org/pycolorado-2019/boring-object-orientation.html" rel="alternate"></link><published>2019-09-07T00:00:00+00:00</published><updated>2019-09-07T00:00:00+00:00</updated><author><name>Moshe Zadka</name></author><id>tag:pyvideo.org,2019-09-07:pycolorado-2019/boring-object-orientation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The strengths and weaknesses of Python lend themselves to a different style of object oriented programming. By accepting several constraints on how we design and implement classes, we make our code more robust, more testable, and easier to adapt to changing circumstances&lt;/p&gt;
</summary></entry><entry><title>Developing With Empathy</title><link href="https://pyvideo.org/pycolorado-2019/developing-with-empathy.html" rel="alternate"></link><published>2019-09-07T00:00:00+00:00</published><updated>2019-09-07T00:00:00+00:00</updated><author><name>Rami Chowdhury</name></author><id>tag:pyvideo.org,2019-09-07:pycolorado-2019/developing-with-empathy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building software is a team sport, we’re told. Yet it’s cooperation that makes teams work, and without empathy we can’t cooperate. This talk looks at adding care to our code and raising the bar beyond &amp;quot;just come talk to me if you have a problem&amp;quot;.&lt;/p&gt;
</summary></entry><entry><title>Managing Time like a Time Lord: It's bigger on the inside</title><link href="https://pyvideo.org/pycolorado-2019/managing-time-like-a-time-lord-its-bigger-on-the-inside.html" rel="alternate"></link><published>2019-09-07T00:00:00+00:00</published><updated>2019-09-07T00:00:00+00:00</updated><author><name>Joe Mann</name></author><id>tag:pyvideo.org,2019-09-07:pycolorado-2019/managing-time-like-a-time-lord-its-bigger-on-the-inside.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Time is one of those things that seems like it should be a simple. But unfortunately that is far from the case. With various timezones existing in the world, those timezones changing, and a host of other issues that arise with managing time, things become complicated very fast. This talk will discuss some best practices for handling time and discuss several python libraries that make it easier.&lt;/p&gt;
</summary></entry><entry><title>Optimizing SQL + Python Pipelines for Data Science</title><link href="https://pyvideo.org/pycolorado-2019/optimizing-sql-python-pipelines-for-data-science.html" rel="alternate"></link><published>2019-09-07T00:00:00+00:00</published><updated>2019-09-07T00:00:00+00:00</updated><author><name>Jordan Hagan</name></author><id>tag:pyvideo.org,2019-09-07:pycolorado-2019/optimizing-sql-python-pipelines-for-data-science.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Poorly written SQL and Python can make data extraction and manipulation tedious and painful. Streamlined processes utilizing SQL best practices will save hours of frustration. My goal is to teach attendees proven SQL methodologies and what python tools to use when.&lt;/p&gt;
</summary></entry><entry><title>Our stories - Keynote</title><link href="https://pyvideo.org/pycolorado-2019/our-stories-keynote.html" rel="alternate"></link><published>2019-09-07T00:00:00+00:00</published><updated>2019-09-07T00:00:00+00:00</updated><author><name>Ewa Jodlowska</name></author><id>tag:pyvideo.org,2019-09-07:pycolorado-2019/our-stories-keynote.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What brought you here? The uniqueness of each of our stories is what makes our community remarkable. This talk will take us through some of those remarkable features and how the Python Software Foundation plays a role.&lt;/p&gt;
</summary></entry><entry><title>Pandas May Be Slow, but Pandas Doesn't Have to Be</title><link href="https://pyvideo.org/pycolorado-2019/pandas-may-be-slow-but-pandas-doesnt-have-to-be.html" rel="alternate"></link><published>2019-09-07T00:00:00+00:00</published><updated>2019-09-07T00:00:00+00:00</updated><author><name>Andrew Vaccaro</name></author><id>tag:pyvideo.org,2019-09-07:pycolorado-2019/pandas-may-be-slow-but-pandas-doesnt-have-to-be.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is quickly becoming the de-facto language of data science. Pandas is one of the most popular libraries for managing and transforming data, but many users are unaware of strategies to tune pandas for performance. Simple changes can greatly speed up data processing when applied correctly.&lt;/p&gt;
</summary></entry><entry><title>PyColorado Closing Remarks</title><link href="https://pyvideo.org/pycolorado-2019/pycolorado-closing-remarks.html" rel="alternate"></link><published>2019-09-07T00:00:00+00:00</published><updated>2019-09-07T00:00:00+00:00</updated><author><name>Frank Valcarcel</name></author><id>tag:pyvideo.org,2019-09-07:pycolorado-2019/pycolorado-closing-remarks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Summary, stats, and final thoughts on the inaugural PyColorado 2019.&lt;/p&gt;
</summary></entry><entry><title>Stats Don't Have to Be Scary: Automatic a/b Test Analysis Using Python</title><link href="https://pyvideo.org/pycolorado-2019/stats-dont-have-to-be-scary-automatic-ab-test-analysis-using-python.html" rel="alternate"></link><published>2019-09-07T00:00:00+00:00</published><updated>2019-09-07T00:00:00+00:00</updated><author><name>Kristie Wirth</name></author><id>tag:pyvideo.org,2019-09-07:pycolorado-2019/stats-dont-have-to-be-scary-automatic-ab-test-analysis-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn how my workplace manages to analyze dozens of concurrent A/B tests with millions of data points! I’ll discuss our previous manual analysis process, some things that have changed, and do a down-to-earth walkthrough of how you too can use Python to automate analyzing your tests.&lt;/p&gt;
</summary></entry><entry><title>Unleashing the Eighth Plague: An Intro to Load Testing with Locust and Python</title><link href="https://pyvideo.org/pycolorado-2019/unleashing-the-eighth-plague-an-intro-to-load-testing-with-locust-and-python.html" rel="alternate"></link><published>2019-09-07T00:00:00+00:00</published><updated>2019-09-07T00:00:00+00:00</updated><author><name>Gabriel Boorse</name></author><id>tag:pyvideo.org,2019-09-07:pycolorado-2019/unleashing-the-eighth-plague-an-intro-to-load-testing-with-locust-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Puzzling over performance problems in production? Baffling backend bugs bending your brain? Unleash a plague of Locusts on your web app to devour performance problems, permanently! In this talk, you will learn how to leverage Locust for load testing RESTful services and more.&lt;/p&gt;
</summary></entry><entry><title>Using Dask to Distribute Machine Learning Jobs</title><link href="https://pyvideo.org/pycolorado-2019/using-dask-to-distribute-machine-learning-jobs.html" rel="alternate"></link><published>2019-09-07T00:00:00+00:00</published><updated>2019-09-07T00:00:00+00:00</updated><author><name>William Cox</name></author><id>tag:pyvideo.org,2019-09-07:pycolorado-2019/using-dask-to-distribute-machine-learning-jobs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dask is a light-weight, Pythonic, library for doing distributed computation. I’ll talk about how we use it to run machine learning forecasting jobs, and how the library might benefit your machine learning or data science work.&lt;/p&gt;
</summary></entry><entry><title>Welcome to PyColorado - Opening Remarks</title><link href="https://pyvideo.org/pycolorado-2019/welcome-to-pycolorado-opening-remarks.html" rel="alternate"></link><published>2019-09-07T00:00:00+00:00</published><updated>2019-09-07T00:00:00+00:00</updated><author><name>Scott Vitale</name></author><id>tag:pyvideo.org,2019-09-07:pycolorado-2019/welcome-to-pycolorado-opening-remarks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Welcome to the inaugural PyColorado 2019. Hear about what to expect for the weekend and what fueled the drive to bring a regional Python conference to Colorado.&lt;/p&gt;
</summary></entry></feed>