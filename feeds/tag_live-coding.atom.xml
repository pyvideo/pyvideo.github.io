<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_live-coding.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-04T00:00:00+00:00</updated><entry><title>How to write a JIT compiler in 30 minutes</title><link href="https://pyvideo.org/pycon-italia-2019/how-to-write-a-jit-compiler-in-30-minutes.html" rel="alternate"></link><published>2019-05-04T00:00:00+00:00</published><updated>2019-05-04T00:00:00+00:00</updated><author><name>Antonio Cuni</name></author><id>tag:pyvideo.org,2019-05-04:pycon-italia-2019/how-to-write-a-jit-compiler-in-30-minutes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Real-world JIT compilers like PyPy and Numba are complex and advanced.
However, the basic ideas behind JIT compilers are easy to understand, as
this talk aim to show.&lt;/p&gt;
&lt;p&gt;This will be a live-coding exercise: we will write a working (albeit
simple and limited) JIT compiler from scratch.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1675"&gt;https://python.it/feedback-1675&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Saturday 4 May&lt;/strong&gt; at 12:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="performance"></category><category term="JIT"></category><category term="assembly"></category><category term="live-coding"></category><category term="compilers"></category></entry><entry><title>Porting your Python web app to serverless in 30 minutes</title><link href="https://pyvideo.org/pycon-italia-2019/porting-your-python-web-app-to-serverless-in-30-minutes.html" rel="alternate"></link><published>2019-05-03T00:00:00+00:00</published><updated>2019-05-03T00:00:00+00:00</updated><author><name>Alex Casalboni</name></author><id>tag:pyvideo.org,2019-05-03:pycon-italia-2019/porting-your-python-web-app-to-serverless-in-30-minutes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This live-coding session will guide you through the process of migrating
an existing Flask application to AWS Lambda.&lt;/p&gt;
&lt;p&gt;We will analyze the existing application, decompose it into individual
microservices, adapt authentication, frontend, tests, and data model,
and finally deploy it to the Cloud.&lt;/p&gt;
&lt;p&gt;Throughout this step-by-step process, you will learn the benefits of
serverless and how it will change the way you think of scalability,
availability, security, infrastructure management, and cost
optimization.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1620"&gt;https://python.it/feedback-1620&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 10:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="serverless"></category><category term="web"></category><category term="flask"></category><category term="aws"></category><category term="live-coding"></category><category term="cloud"></category></entry><entry><title>Live Coding in Python v2.16</title><link href="https://pyvideo.org/vancouver-python-developers/live-coding-in-python-v216.html" rel="alternate"></link><published>2017-07-20T00:00:00+00:00</published><updated>2017-07-20T00:00:00+00:00</updated><author><name>Don Kirkby</name></author><id>tag:pyvideo.org,2017-07-20:vancouver-python-developers/live-coding-in-python-v216.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Demonstrates an Eclipse plugin that runs your Python code while you type it, including a new feature: live unit tests. Also shows Emacs package and new PyCharm plugin, as well as the old features of turtle graphics and live coding display.&lt;/p&gt;
</summary><category term="live coding"></category><category term="tools"></category></entry></feed>