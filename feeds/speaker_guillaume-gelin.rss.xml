<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 02 Nov 2019 00:00:00 +0000</lastBuildDate><item><title>Everything You Want to Know About Kubernetes (Preferably Before Using It)</title><link>https://pyvideo.org/pycon-fr-2019/everything-you-want-to-know-about-kubernetes-preferably-before-using-it.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a lot of hype about Kubernetes those days, but do you know what Kubernetes really gives you, out of the box? Not as much as you might expect.&lt;/p&gt;
&lt;p&gt;« Kubernetes is a platform for building platforms. It's a better place to start; not the endgame. » Kelsey Hightower (Developer Advocate at Google)&lt;/p&gt;
&lt;p&gt;In this talk, I will present my experience as a software engineer who started building a bare-metal Kubernetes cluster without much knowledge in networking or other low-level infrastructure concepts, but with a developer background and mindset that ended up being quite useful.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Chapter I. The Origins&lt;ul&gt;
&lt;li&gt;Where we are coming from&lt;/li&gt;
&lt;li&gt;Kubernetes overview&lt;/li&gt;
&lt;li&gt;Why Kubernetes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Chapter II. Minimum Viable Cluster&lt;ul&gt;
&lt;li&gt;Requirements we settled on&lt;/li&gt;
&lt;li&gt;Choices we made&lt;/li&gt;
&lt;li&gt;What you get (or miss) at this point&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Chapter III. Going Further&lt;ul&gt;
&lt;li&gt;A few more choices&lt;/li&gt;
&lt;li&gt;Tools we decided to use&lt;/li&gt;
&lt;li&gt;Tools we developed ourselves&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Chapter IV. Nowadays&lt;ul&gt;
&lt;li&gt;Live demo (maybe)&lt;/li&gt;
&lt;li&gt;Current platform status&lt;/li&gt;
&lt;li&gt;Next steps&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Chapter V. Step Back&lt;ul&gt;
&lt;li&gt;Our opinion on Kubernetes&lt;/li&gt;
&lt;li&gt;Recommendations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guillaume Gelin</dc:creator><pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-02:pycon-fr-2019/everything-you-want-to-know-about-kubernetes-preferably-before-using-it.html</guid></item><item><title>PEP 557 versus the world</title><link>https://pyvideo.org/pycon-fr-2018/pep-557-versus-the-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.7 will ship with a new module called &amp;quot;dataclasses&amp;quot;, which has
been defined in PEP 557.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What is this module?&lt;/li&gt;
&lt;li&gt;What are the problems that PEP 557 authors try to solve?&lt;/li&gt;
&lt;li&gt;What was the chosen design, and why?&lt;/li&gt;
&lt;li&gt;How does it compare against the tools that already exist?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk will deeply cover &amp;quot;dataclasses&amp;quot;, but also &amp;quot;attrs&amp;quot;, &amp;quot;box&amp;quot;,
&amp;quot;thingy&amp;quot;, and others.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guillaume Gelin</dc:creator><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-06:pycon-fr-2018/pep-557-versus-the-world.html</guid></item><item><title>Scaling Python to 1K QPS per server, not doing Hello Worlds</title><link>https://pyvideo.org/pycon-fr-2018/scaling-python-to-1k-qps-per-server-not-doing-hello-worlds.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will present a sample web application inspired from the real world (so
not an application doing hello worlds) and showcase several ways of
scaling it up, layer after layer, doing benchmarks at every step, up to
1000 queries per second — or 86.4 millions per day — on one Amazon
server.&lt;/p&gt;
&lt;p&gt;We will talk about:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;stateful vs stateless&lt;/li&gt;
&lt;li&gt;web servers and process managers&lt;/li&gt;
&lt;li&gt;WSGI, AWSGI&lt;/li&gt;
&lt;li&gt;asynchronicity&lt;/li&gt;
&lt;li&gt;different sort of caches for different sort of things&lt;/li&gt;
&lt;li&gt;various system hacks on Linux&lt;/li&gt;
&lt;li&gt;monitoring&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guillaume Gelin</dc:creator><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-06:pycon-fr-2018/scaling-python-to-1k-qps-per-server-not-doing-hello-worlds.html</guid></item><item><title>PEP 557* versus the world</title><link>https://pyvideo.org/europython-2018/pep-557-versus-the-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.7 will ship with a new module called &lt;tt class="docutils literal"&gt;dataclasses&lt;/tt&gt;, which has
been defined in PEP 557.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What is this module?&lt;/li&gt;
&lt;li&gt;What are the problems that PEP 557 authors try to solve?&lt;/li&gt;
&lt;li&gt;What was the chosen design, and why?&lt;/li&gt;
&lt;li&gt;How does it compare against the tools that already exist?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk will deeply cover &lt;tt class="docutils literal"&gt;dataclasses&lt;/tt&gt;, but also &lt;tt class="docutils literal"&gt;attrs&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;box&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;thingy&lt;/tt&gt;, and others.&lt;/p&gt;
&lt;p&gt;Post-conference notes: - Slides: &lt;a class="reference external" href="https://slides.com/ramnes/pep-557"&gt;https://slides.com/ramnes/pep-557&lt;/a&gt; -
Implementations and micro-benchmark:
&lt;a class="reference external" href="https://github.com/ramnes/pep-557-vs-the"&gt;https://github.com/ramnes/pep-557-vs-the&lt;/a&gt;- world&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guillaume Gelin</dc:creator><pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-26:europython-2018/pep-557-versus-the-world.html</guid></item><item><title>Planning for the worst</title><link>https://pyvideo.org/europython-2016/planning-for-the-worst.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Alexys Jacob/Guillaume Gelin - Planning for the worst
[EuroPython 2016]
[21 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/planning-for-the-worst"&gt;https://ep2016.europython.eu//conference/talks/planning-for-the-worst&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Sharing our worst production experiences and the tricks, good
practices and code we developed to address them.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;This talk is about sharing our experience about how we handled
production problems on all levels of our applications.&lt;/p&gt;
&lt;p&gt;We'll begin with common problems, errors and failures and dig on to
more obscure ones while sharing concrete tips, good practices and code
to address them !&lt;/p&gt;
&lt;p&gt;This talk will make you feel the warmth of not being alone facing a problem :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexys Jacob</dc:creator><pubDate>Thu, 04 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-04:europython-2016/planning-for-the-worst.html</guid></item></channel></rss>