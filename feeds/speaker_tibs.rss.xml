<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Tibs</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 23 Sep 2023 00:00:00 +0000</lastBuildDate><item><title>Fish and Chips and Apache Kafka®</title><link>https://pyvideo.org/pycon-uk-2022/fish-and-chips-and-apache-kafkar.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Apache Kafka® is the de facto standard in the data streaming world for sending
messages from multiple producers to multiple consumers, in a fast, reliable
and scalable manner.&lt;/p&gt;
&lt;p&gt;Come and learn the basic concepts and how to use it, by modelling a fish and
chips shop!&lt;/p&gt;
&lt;p&gt;Handling large numbers of events is an increasing challenge in our cloud
centric world. For instance, in the IoT (Internet of Things) industry, devices
are all busy announcing their current state, which we want to
manage and report on, and meanwhile we want to send firmware and other updates
&lt;em&gt;back&lt;/em&gt; to specific groups of devices.&lt;/p&gt;
&lt;p&gt;Traditional messaging solutions don't scale well for this type of problem. We
want to guarantee not to lose events, to handle high volumes in a timely
manner, and to be able to distribute message reception or production across
multiple consumers or producers (compare to sharding for database reads).&lt;/p&gt;
&lt;p&gt;As it turns out, there is a good solution available: Apache Kafka® - it
provides all the capabilities we are looking for.&lt;/p&gt;
&lt;p&gt;In this talk, rather than considering some imaginary IoT scenario, I'm going
to look at how one might use Kafka to model the events required to run a fish
and chip shop: ordering (plaice and chips for me, please), food preparation,
accounting and so on.&lt;/p&gt;
&lt;p&gt;I'll demonstrate handling of multiple producers and consumers, automatic routing of
events as new consumers are added, persistence, which allows a new consumer to
start consuming events from the past, and more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tibs</dc:creator><pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-09-16:/pycon-uk-2022/fish-and-chips-and-apache-kafkar.html</guid><category>PyCon UK 2022</category></item><item><title>How I used PostgreSQL® to find pictures of me at a party</title><link>https://pyvideo.org/pycon-uk-2023/how-i-used-postgresqlr-to-find-pictures-of-me-at-a-party.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At an event, a photographer can take many photos. Which ones do you appear in? Find out how to search for faces using Python, OpenCV, OpenAI and, yes, PostgreSQL®.&lt;/p&gt;
&lt;p&gt;Python ties it all together, and PostgreSQL's pgvector extension allows making SQL queries to find photos with my face.&lt;/p&gt;
&lt;p&gt;Nowadays, if you attend an event you're bound to end up with a catalogue of photographs to look at. Formal events are likely to have a professional photographer, and modern smartphones mean that it's easy to make a photographic record of just about any gathering. It can be fun to look through the pictures, to find yourself or your friends and family, but it can also be tedious.&lt;/p&gt;
&lt;p&gt;At our company get-together earlier in the year, the photographers did indeed take a lot of pictures. Afterwards the best of them were put up on our internal network - and like many people, I combed through them looking for those in which I appeared (yes, for vanity, but also with some amusement).&lt;/p&gt;
&lt;p&gt;In this talk, I'll explain how to automate finding the photographs I'm in (or at least, mostly so). I'll walk through Python code that extracts faces using OpenCV, calculates vector embeddings using imgbeddings and OpenAI, and stores them in PostgreSQL® using pgvector. Given all of that, I can then make an SQL query to find which pictures I'm in.&lt;/p&gt;
&lt;p&gt;Python is a good fit for data pipelines like this, as it has good bindings to machine learning packages, and excellent support for talking to PostgreSQL.&lt;/p&gt;
&lt;p&gt;You may be wondering why that sequence ends with PostgreSQL (and SQL) rather than something more machine learning specific. I'll talk about that as well, and in particular about how PostgreSQL allows us to cope when the amount of data gets too large to be handled locally, and how useful it is to be able to relate the similarity calculations to other columns in the database - in our case, perhaps including the image metadata.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tibs</dc:creator><pubDate>Sat, 23 Sep 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-09-23:/pycon-uk-2023/how-i-used-postgresqlr-to-find-pictures-of-me-at-a-party.html</guid><category>PyCon UK 2023</category></item></channel></rss>