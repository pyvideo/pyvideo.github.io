<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 14 Sep 2019 00:00:00 +0000</lastBuildDate><item><title>Lies, Damned Lies, and Statistics</title><link>https://pyvideo.org/pycon-uk-2019/lies-damned-lies-and-statistics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We are exposed to the use of statistics in everyday life, but it is quite easy to fall victim of statistical fallacies. This talk will help you recognise these fallacies, so you can protect yourself from the misuse of statistics, ultimately becoming a better citizen.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Sat, 14 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-09-14:pycon-uk-2019/lies-damned-lies-and-statistics.html</guid></item><item><title>Lies, Damned Lies, and Statistics</title><link>https://pyvideo.org/pylondinium-2019/lies-damned-lies-and-statistics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Statistics show that eating ice cream causes death by drowning. If this sounds baffling, this talk will help you to understand correlation, bias, statistical significance and other statistical techniques that are commonly (mis)used to support an argument that leads, by accident or on purpose, to drawing the wrong conclusions.&lt;/p&gt;
&lt;p&gt;The casual observer is exposed to the use of statistics and probability in everyday life, but it is extremely easy to fall victim of a statistical fallacy, even for professional users. The purpose of this talk is to help the audience understand how to recognise and avoid these fallacies, by combining an introduction to statistics with examples of lies and damned lies, in a way that is approachable for beginners.&lt;/p&gt;
&lt;p&gt;Agenda:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Correlation and causation&lt;/li&gt;
&lt;li&gt;Simpson’s Paradox&lt;/li&gt;
&lt;li&gt;Sampling bias and polluted surveys&lt;/li&gt;
&lt;li&gt;Data visualisation gone wild&lt;/li&gt;
&lt;li&gt;Statistical significance (and Data dredging a.k.a. p-hacking).&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Sun, 16 Jun 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-06-16:pylondinium-2019/lies-damned-lies-and-statistics.html</guid></item><item><title>Let the AI Do the Talk: Adventures with Natural Language Generation</title><link>https://pyvideo.org/pycon-italia-2019/let-the-ai-do-the-talk-adventures-with-natural-language-generation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Recent advances in Artificial Intelligence have shown how computers can
compete with humans in a variety of mundane tasks, but what happens when
creativity is required?&lt;/p&gt;
&lt;p&gt;This talk introduces the concept of Natural Language Generation, the
task of automatically generating text, for examples articles on a
particular topic, poems that follow a particular style, or speech
transcripts that express some attitude. Specifically, we’ll discuss the
case for Recurrent Neural Networks, a family of algorithms that can be
trained on sequential data, and how they improve on traditional language
models.&lt;/p&gt;
&lt;p&gt;The talk is for beginners, we’ll focus more on the intuitions behind the
algorithms and their practical implications, and less on the
mathematical details. Practical examples with Python will showcase
Keras, a library to quickly prototype deep learning architectures.&lt;/p&gt;
&lt;p&gt;Brief outline:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to Natural Language Generation&lt;/li&gt;
&lt;li&gt;Language Modelling&lt;/li&gt;
&lt;li&gt;Recurrent Neural Networks and Long Short Term Memory for NLG&lt;/li&gt;
&lt;li&gt;RNN examples with Keras&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feedback form: &lt;a class="reference external" href="https://python.it/feedback-1574"&gt;https://python.it/feedback-1574&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 10:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-italia-2019/let-the-ai-do-the-talk-adventures-with-natural-language-generation.html</guid><category>nlp</category><category>Keras</category><category>natural-language-processing</category><category>pydata</category></item><item><title>Let the AI Do the Talk: Adventures with Natural Language Generation</title><link>https://pyvideo.org/pyparis-2018/let-the-ai-do-the-talk-adventures-with-natural-language-generation.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Wed, 14 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-14:pyparis-2018/let-the-ai-do-the-talk-adventures-with-natural-language-generation.html</guid></item><item><title>Lies, damned lies, and statistics</title><link>https://pyvideo.org/pycon-italia-2018/lies-damned-lies-and-statistics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Statistics show that eating ice cream causes death by drowning.&lt;/p&gt;
&lt;p&gt;If this sounds baffling, this talk will help you to understand
correlation, bias, statistical significance and other statistical
techniques that are commonly (mis)used to support an argument that
leads, by accident or on purpose, to drawing the wrong conclusions.&lt;/p&gt;
&lt;p&gt;The casual observer is exposed to the use of statistics and probability
in everyday life, but it is extremely easy to fall victim of a
statistical fallacy, even for professional users.&lt;/p&gt;
&lt;p&gt;The purpose of this talk is to help the audience understand how to
recognise and avoid these fallacies, by combining an introduction to
statistics with examples of lies and damned lies, in a way that is
approachable for beginners.&lt;/p&gt;
&lt;p&gt;Agenda:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Correlation and causation&lt;/li&gt;
&lt;li&gt;Simpson’s Paradox&lt;/li&gt;
&lt;li&gt;Sampling bias and polluted surveys&lt;/li&gt;
&lt;li&gt;Data visualisation gone wild&lt;/li&gt;
&lt;li&gt;Statistical significance (and Data dredging a.k.a. p-hacking)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/marcobonzanini/lies-damned-lies-and-statistics-at-pycon-italia-2018"&gt;Slides&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:pycon-italia-2018/lies-damned-lies-and-statistics.html</guid><category>data-visualization</category><category>statistics</category><category>data-analysis</category><category>pydata</category></item><item><title>Lies, damned lies, and statistics</title><link>https://pyvideo.org/europython-2018/lies-damned-lies-and-statistics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Statistics show that eating ice cream causes death by drowning.&lt;/p&gt;
&lt;p&gt;If this sounds baffling, this talk will help you to understand
correlation, bias, statistical significance and other statistical
techniques that are commonly (mis)used to support an argument that
leads, by accident or on purpose, to drawing the wrong conclusions.&lt;/p&gt;
&lt;p&gt;The casual observer is exposed to the use of statistics and probability
in everyday life, but it is extremely easy to fall victim of a
statistical fallacy, even for professional users.&lt;/p&gt;
&lt;p&gt;The purpose of this talk is to help the audience understand how to
recognise and avoid these fallacies, by combining an introduction to
statistics with examples of lies and damned lies, in a way that is
approachable for beginners.&lt;/p&gt;
&lt;p&gt;Agenda:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Correlation and causation&lt;/li&gt;
&lt;li&gt;Simpson’s Paradox&lt;/li&gt;
&lt;li&gt;Sampling bias&lt;/li&gt;
&lt;li&gt;Data visualisation gone wild&lt;/li&gt;
&lt;li&gt;Statistical significance (and Data dredging a.k.a. p-hacking)&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Fri, 27 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-27:europython-2018/lies-damned-lies-and-statistics.html</guid></item><item><title>Understanding Natural Language using Word Vectors</title><link>https://pyvideo.org/pycon-ireland-2017/understanding-natural-language-using-word-vectors.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is an introduction to word vectors, a.k.a. word embeddings, a family of Natural Language Processing (NLP) algorithms where words are mapped to vectors. An important property of these vector is being able to capture semantic relationships, for example: Ireland - Dublin + London = ??? These techniques have been driving important improvements in many NLP applications over the past few years, so the interest around word embeddings is spreading. In this talk, we'll discuss the basic linguistic intuitions behind word embeddings, we'll compare some of the most popular word embedding approaches, from word2vec to fastText, and we'll showcase their use with Python libraries. The aim of the talk is to be approachable for beginners, so the theory is kept to a minimum.&lt;/p&gt;
&lt;p&gt;By attending this talk, you'll be able to learn:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;the core features of word embeddings&lt;/li&gt;
&lt;li&gt;how to choose between different word embedding algorithms&lt;/li&gt;
&lt;li&gt;how to implement word embedding techniques in Python&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/understanding-natural-language-using-word-vectors.html</guid></item><item><title>Understanding Natural Language with Word Vectors</title><link>https://pyvideo.org/pycon-uk-2017/understanding-natural-language-with-word-vectors.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is an introduction to word vectors, a.k.a. word embeddings, a family of Natural Language Processing (NLP) algorithms where words are mapped to vectors.&lt;/p&gt;
&lt;p&gt;An important property of these vector is being able to capture semantic relationships, for example: UK - London + Paris = ???&lt;/p&gt;
&lt;p&gt;These techniques have been driving important improvements in many NLP applications over the past few years, so the interest around word embeddings is spreading. In this talk, we'll discuss the basic linguistic intuitions behind word embeddings, we'll compare some of the most popular word embedding approaches, from word2vec to fastText, and we'll showcase their use with Python libraries.&lt;/p&gt;
&lt;p&gt;The aim of the talk is to be approachable for beginners, so the theory is kept to a minimum.&lt;/p&gt;
&lt;p&gt;By attending this talk, you'll be able to learn:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;the core features of word embeddings&lt;/li&gt;
&lt;li&gt;how to choose between different word embedding algorithms&lt;/li&gt;
&lt;li&gt;how to implement word embedding techniques in Python&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Fri, 27 Oct 2017 12:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/understanding-natural-language-with-word-vectors.html</guid></item><item><title>Word Embeddings for Natural Language Processing in Python</title><link>https://pyvideo.org/pycon-italia-2017/word-embeddings-for-natural-language-processing-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Word embeddings are a family of Natural Language Processing (NLP)
algorithms where words are mapped to vectors in low-dimensional space.
The interest around word embeddings has been on the rise in the past few
years, because these techniques have been driving important improvements
in many NLP applications like text classification, sentiment analysis or
machine translation.&lt;/p&gt;
&lt;p&gt;In this talk we’ll describe the intuitions behind this family of
algorithms, we’ll explore some of the Python tools that allow us to
implement modern NLP applications and we’ll conclude with some practical
considerations.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-08:pycon-italia-2017/word-embeddings-for-natural-language-processing-in-python.html</guid><category>Python</category><category>nlp</category><category>text-analysis</category><category>pydata</category></item><item><title>Static Type Analysis for Robust Data Products</title><link>https://pyvideo.org/pydata-london-2017/static-type-analysis-for-robust-data-products.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Filmed at PyData London 2017&lt;/p&gt;
&lt;p&gt;Description
This talk discusses static type analysis applied to Python data products, its pros and cons, and overall how to adopt type checking tools (i.e. mypy) in your workflow.&lt;/p&gt;
&lt;p&gt;Abstract
As a dynamically typed language, Python is an extremely flexible tool that allows to write code quickly and concisely. This flexibility makes Python a popular tool for R&amp;amp;D and prototyping, but what about bringing Data Science in production? When comparing Python to statically typed languages, one of the downsides is that many type-related errors are not captured until runtime.&lt;/p&gt;
&lt;p&gt;This talk discusses the steps taken by the Python community to promote static type analysis, in particular the semantic definition of type hints and the adoption of mypy as type checking tool.&lt;/p&gt;
&lt;p&gt;The audience will learn about static typing for Python, its pros and cons, and how to adopt static type analysis in your workflow. Since the focus is on building and deploying data products, static type analysis is discussed as a mean to improve the robustness of your data products.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-06:pydata-london-2017/static-type-analysis-for-robust-data-products.html</guid></item><item><title>Building data pipelines in python</title><link>https://pyvideo.org/pycon-italia-2016/building-data-pipelines-in-python.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Tue, 05 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-05:pycon-italia-2016/building-data-pipelines-in-python.html</guid></item><item><title>Building Data Pipelines in Python</title><link>https://pyvideo.org/pydata-london-2016/marco-bonzanini-building-data-pipelines-in-python-1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData London 2016&lt;/p&gt;
&lt;p&gt;This talk discusses the process of building data pipelines, e.g. extraction, cleaning, integration, pre-processing of data, in general all the steps that are necessary to prepare your data for your data-driven product. In particular, the focus is on data plumbing and on the practice of going from prototype to production.&lt;/p&gt;
&lt;p&gt;This talk discusses the process of building data pipelines, e.g. extraction, cleaning, integration, pre-processing of data, in general all the steps that are necessary to prepare your data for your data-driven product. In particular, the focus is on data plumbing and on the practice of going from prototype to production.&lt;/p&gt;
&lt;p&gt;Starting from some common anti-patterns, we'll highlight the need for a workflow manager for any non-trivial project.&lt;/p&gt;
&lt;p&gt;We'll discuss the case for Luigi as an interesting option to consider, and we'll consider where it fits in the bigger picture of deploying a data product.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="https://speakerdeck.com/marcobonzanini/building-data-pipelines-in-python-pydata-london-2016"&gt;https://speakerdeck.com/marcobonzanini/building-data-pipelines-in-python-pydata-london-2016&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Wed, 11 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-11:pydata-london-2016/marco-bonzanini-building-data-pipelines-in-python-1.html</guid></item><item><title>Building Data Pipelines in Python</title><link>https://pyvideo.org/pydata-london-2016/marco-bonzanini-building-data-pipelines-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData London 2016&lt;/p&gt;
&lt;p&gt;This talk discusses the process of building data pipelines, e.g. extraction, cleaning, integration, pre-processing of data, in general all the steps that are necessary to prepare your data for your data-driven product. In particular, the focus is on data plumbing and on the practice of going from prototype to production.&lt;/p&gt;
&lt;p&gt;Starting from some common anti-patterns, we'll highlight the need for a workflow manager for any non-trivial project.&lt;/p&gt;
&lt;p&gt;We'll discuss the case for Luigi as an interesting option to consider, and we'll consider where it fits in the bigger picture of deploying a data product.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="https://speakerdeck.com/marcobonzanini/building-data-pipelines-in-python-pydata-london-2016"&gt;https://speakerdeck.com/marcobonzanini/building-data-pipelines-in-python-pydata-london-2016&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Sun, 08 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-08:pydata-london-2016/marco-bonzanini-building-data-pipelines-in-python.html</guid></item></channel></rss>