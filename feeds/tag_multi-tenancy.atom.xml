<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - multi-tenancy</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_multi-tenancy.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-12-01T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Enabling multi-tenancy with werkzeug</title><link href="https://pyvideo.org/flaskcon-2021/enabling-multi-tenancy-with-werkzeug.html" rel="alternate"></link><published>2021-12-01T00:00:00+00:00</published><updated>2021-12-01T00:00:00+00:00</updated><author><name>Abdeali Kothari</name></author><id>tag:pyvideo.org,2021-12-01:/flaskcon-2021/enabling-multi-tenancy-with-werkzeug.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn how to convert your existing application into a multi-tenant application within a day. This is a case study on how our simple flask web-application was changed to a multi-tenant architecture and simplified our client onboarding experience and reduced our infrastructure burden.&lt;/p&gt;
</content><category term="FlaskCon 2021"></category><category term="flask"></category><category term="multi-tenancy"></category><category term="werkzeug"></category></entry></feed>