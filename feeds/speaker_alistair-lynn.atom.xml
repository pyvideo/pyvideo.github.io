<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Alistair Lynn</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_alistair-lynn.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-09-22T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Adventures in Unicode: the `str` less travelled</title><link href="https://pyvideo.org/pycon-uk-2023/adventures-in-unicode-the-str-less-travelled.html" rel="alternate"></link><published>2023-09-22T00:00:00+00:00</published><updated>2023-09-22T00:00:00+00:00</updated><author><name>Alistair Lynn</name></author><id>tag:pyvideo.org,2023-09-22:/pycon-uk-2023/adventures-in-unicode-the-str-less-travelled.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3's &lt;cite&gt;str&lt;/cite&gt; was a leap forward but not a panacea. Join me to dive into the strange world of unicode, how it can bite you, and what to do about it.&lt;/p&gt;
&lt;p&gt;In Python 3 we finally got a Unicode-native &lt;cite&gt;str&lt;/cite&gt; type throughout, and there was much rejoicing. But …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3's &lt;cite&gt;str&lt;/cite&gt; was a leap forward but not a panacea. Join me to dive into the strange world of unicode, how it can bite you, and what to do about it.&lt;/p&gt;
&lt;p&gt;In Python 3 we finally got a Unicode-native &lt;cite&gt;str&lt;/cite&gt; type throughout, and there was much rejoicing. But Unicode is a tricky beast, difficult to tame, and there are still plenty of ways it can bite you if you are not careful.&lt;/p&gt;
&lt;p&gt;We will look at some of these ways, the eldritch abominations looming in shadowy corners of Python's text; we will discover how the siren-song of seemingly innocuous strings can dash you upon the rocks, the deep peculiarity of the humble flag, and finally come to inner peace and harmony as we understand true grapheme-nature.&lt;/p&gt;
&lt;p&gt;We will then touch on the deeper mysteries of bidirectional text, and our hearts will turn to despair. It will be a fun time.&lt;/p&gt;
</content><category term="PyCon UK 2023"></category></entry><entry><title>A/B Testing with Style</title><link href="https://pyvideo.org/pydata-london-2018/ab-testing-with-style.html" rel="alternate"></link><published>2018-04-28T00:00:00+00:00</published><updated>2018-04-28T00:00:00+00:00</updated><author><name>Alistair Lynn</name></author><id>tag:pyvideo.org,2018-04-28:/pydata-london-2018/ab-testing-with-style.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We dig into the mechanics of running and understanding A/B tests,
including a practical demo of Jacquard – Thread's open-source tooling –
then go into some of the dangerous pitfalls that ensue.&lt;/p&gt;
</content><category term="PyData London 2018"></category></entry></feed>