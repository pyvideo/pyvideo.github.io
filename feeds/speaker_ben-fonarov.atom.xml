<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ben-fonarov.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-09-19T00:00:00+00:00</updated><entry><title>Activating Your Site: A Look at Activity Streams</title><link href="https://pyvideo.org/djangocon-us-2014/activating-your-site-a-look-at-activity-streams.html" rel="alternate"></link><published>2014-09-19T00:00:00+00:00</published><updated>2014-09-19T00:00:00+00:00</updated><author><name>Justin Quick</name></author><id>tag:pyvideo.org,2014-09-19:djangocon-us-2014/activating-your-site-a-look-at-activity-streams.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;We will walk you through how to implement activity streams for your
website in a generic fashion by leveraging the activitystrea.ms open
specification. The two tools we will show are django-activity-streams
which lets you interrelate the objects in your Django site using a
supported DB and the activitystreams project which provides a ReST
service based on the spec, with Neo4j graph for storage.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/FPWj/"&gt;http://amara.org/v/FPWj/&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>