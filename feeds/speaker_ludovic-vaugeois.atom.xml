<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ludovic-vaugeois.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-10-15T00:00:00+00:00</updated><entry><title>Python 3.6: utilisation des f-strings (PEP 498)</title><link href="https://pyvideo.org/pycon-fr-2016/python-36-utilisation-des-f-strings-pep-498.html" rel="alternate"></link><published>2016-10-15T00:00:00+00:00</published><updated>2016-10-15T00:00:00+00:00</updated><author><name>Ludovic VAUGEOIS</name></author><id>tag:pyvideo.org,2016-10-15:pycon-fr-2016/python-36-utilisation-des-f-strings-pep-498.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il est prévu que la version stable de Python 3.6 inclue les f-strings définies dans PEP 498 (elles sont présentes dans les versions non-définitives de Python 3.6 depuis alpha 1). Les f-strings sont la quatrième forme de &amp;quot;mise en forme composite&amp;quot; (string interpolation) après %-format, str.format(), et string.Template.
Cette nouvelle façon de construire des chaînes améliore souvent la lisibilité du code. Je propose de passer en revue ce que sont les f-strings, leurs particularités et certains détails de leur implémentation dans CPython.&lt;/p&gt;
</summary></entry></feed>