<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_damien-deville.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-03T13:55:00+00:00</updated><entry><title>Going from 2 to 3 on Windows, macOS and Linux</title><link href="https://pyvideo.org/pycon-us-2019/going-from-2-to-3-on-windows-macos-and-linux.html" rel="alternate"></link><published>2019-05-03T13:55:00+00:00</published><updated>2019-05-03T13:55:00+00:00</updated><author><name>Max Bélanger</name></author><id>tag:pyvideo.org,2019-05-03:pycon-us-2019/going-from-2-to-3-on-windows-macos-and-linux.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At Dropbox, we’ve always used Python to power our application for
Windows, macOS and Linux (until recently, Python 2.7). Over the years, a
growing lack of features and the need for outdated compilers/toolchains
made migrating to Python 3 a necessity. Join us to hear the tale of our
unique journey from Python 2 to 3 and the lessons we learned along the
way:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;We’ll discuss the reasons that led to our decision to make the jump.&lt;/li&gt;
&lt;li&gt;We’ll dive into how we sequenced the transition by using the C-API to
ship both versions of Python and choose one at runtime.&lt;/li&gt;
&lt;li&gt;We’ll reveal the tools we used to enforce a hybrid (2/3) syntax for
over hundreds of thousands of lines of Python code.&lt;/li&gt;
&lt;li&gt;We’ll discuss some of our most spectacular bugs and gotchas, and how
you can avoid them!&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="talk"></category></entry></feed>