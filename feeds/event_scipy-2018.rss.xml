<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 15 Jul 2018 00:00:00 +0000</lastBuildDate><item><title>SimuPy: A Python Framework for Modeling and Simulating Dynamical Systems</title><link>https://pyvideo.org/scipy-2018/simupy-a-python-framework-for-modeling-and-simulating-dynamical-systems.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Numerical simulation is an important part of the design and analysis of dynamical systems, and has become fundamental to the education, practice, and research of many math, science, and engineering disciplines. In this talk I will introduce SimuPy, a framework for simulating interconnected dynamical system models. SimuPy provides an open source, Python-based tool that can be used in model- and system- based design and simulation workflows. I will demonstrate how to use SimuPy to simulate canonical dynamical systems and how I have used it perform numerical studies of nonlinear tracking control in my thesis and doctoral research.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin Margolis</dc:creator><pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-15:scipy-2018/simupy-a-python-framework-for-modeling-and-simulating-dynamical-systems.html</guid></item><item><title>bqplot: Seamless Interactive Visualizations and Dashboards in the Jupyter Notebook</title><link>https://pyvideo.org/scipy-2018/bqplot-seamless-interactive-visualizations-and-dashboards-in-the-jupyter-notebook.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;bqplot is a Python plotting library based on d3.js that offers its
functionality directly in the Jupyter Notebook, including selections,
interactions, and arbitrary css customizations. bqplot is built to
generate professional looking, highly interactive plots and dashboards
with minimal code. This enables the rapid generation of full fledged web
applications directly in the Notebook with just a few lines of Python
code. We will then go over bqplot's library of statistical and machine
learning focused higher level abstractions and tools which are built to
aid a Data Scientist or a Machine Learning researcher to interactively
analyze the data, and arrive at useful insights. The seamless
interactivity enables the creation of custom visualizations that allow
researchers to understand their models and data in a much richer
fashion. The talk will also cover bqplot's seamless integration with the
numerous other libraries in the Jupyter widgets ecosystem such as
ipyleaflet or ipyvolume. We will then explain how to link these widgets
together using callback functions and share a few examples of advanced
applications from various disciplines built using other open source
projects. We will wrap up by previewing the latest features we are
adding to bqplot.Presenter(s): Speaker: Sylvain Corlay, QuantStack&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sylvain Corlay</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/bqplot-seamless-interactive-visualizations-and-dashboards-in-the-jupyter-notebook.html</guid></item><item><title>Building an Object-Oriented Python Interface for the Generic Mapping Tools</title><link>https://pyvideo.org/scipy-2018/building-an-object-oriented-python-interface-for-the-generic-mapping-tools.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We are building a Python wrapper for the Generic Mapping Tools (GMT), a
set of command-line programs used across the Earth, Atmospheric, and
Ocean Sciences to process and visualize geographic data. At Scipy 2017,
we presented the project goals and an initial prototype. The feedback
received led to improvements in the design of the library, mainly the
creation of an object- oriented API. We will present the newest
developments including support for numpy arrays and pandas Dataframes,
interactive visualization in the Jupyter notebook using NASA WorldWind,
and more. Once again, we seek feedback from the community to guide us
moving forward.Presenter(s): Speaker: Leonardo Uieda, Department of
Geology and Geophysics, University of Hawaii at Manoa Speaker: Paul
Wessel, Department of Geology and Geophysics, University of Hawaii at
Manoa&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Leonardo Uieda</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/building-an-object-oriented-python-interface-for-the-generic-mapping-tools.html</guid></item><item><title>Building your own Weather App using NOAA Open Data and Jupyter Notebooks</title><link>https://pyvideo.org/scipy-2018/building-your-own-weather-app-using-noaa-open-data-and-jupyter-notebooks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Leveraging the Open Geospatial Consortium (OGC) standards, NOAA's open
data, and Jupyter widgets we'll demonstrate how set up a data discovery
system based on time, location, and variable of interest (e.g.: wave
height). The goal is to walk through all the steps necessary to create a
fully-featured GIS interactive map (mobile friendly too!) using Jupyter
notebooks and widgets.Presenter(s): Speaker: Filipe Fernandes, SECOORA
Speaker: Richard Signell, United State Geological Survey&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Filipe Fernandes</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/building-your-own-weather-app-using-noaa-open-data-and-jupyter-notebooks.html</guid></item><item><title>Design and Implementation of pyPRISM: A Polymer Liquid-State Theory Framework</title><link>https://pyvideo.org/scipy-2018/design-and-implementation-of-pyprism-a-polymer-liquid-state-theory-framework.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Polymer Reference Interaction Site Model (PRISM) theory describes the
equilibrium spatial-correlations, thermodynamics, and structure of
liquid-like polymer systems and macromolecular materials. Here, we
present a Python-based, open-source framework, pyPRISM, for conducting
PRISM theory calculations. pyPRISM provides data structures, functions,
and classes that streamline predictive PRISM calculations and can be
extended for use in other tasks such as the coarse-graining of atomistic
simulation force-fields or the modeling of experimental scattering data.
The goal of providing this framework is to reduce the barrier to
correctly and appropriately using PRISM theory and to provide a platform
for rapid calculations of the structure and thermodynamics of polymeric
fluids and nanocomposites.Presenter(s): Speaker: Tyler Martin, NIST
Author: Thomas Gartner, University of Delaware Author: Ronald Jones,
NIST Author: Chad Snyder, NIST Author: Arthi Jayaraman, University of
Delaware&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tyler Martin</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/design-and-implementation-of-pyprism-a-polymer-liquid-state-theory-framework.html</guid></item><item><title>Development of MetPy’s Declarative Plotting Interface</title><link>https://pyvideo.org/scipy-2018/development-of-metpys-declarative-plotting-interface.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk explores the use of matplotlib together with traitlets to help
develop MetPy’s declarative plotting interface. This interface helps to
mimic the functionality available in the legacy GEMPAK package; we also
hope that this declarative interface will simplify the process of
creating plots for new users.Presenter(s): Speaker: Ryan May,
UCAR/Unidata Speaker: John Leeman, UCAR/Unidata&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan May</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/development-of-metpys-declarative-plotting-interface.html</guid></item><item><title>Engineers Code: Re-usable, Open Educational Modules for Engineering Undergraduates</title><link>https://pyvideo.org/scipy-2018/engineers-code-re-usable-open-educational-modules-for-engineering-undergraduates.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk presents the concepts and design principles behind new
learning modules for teaching undergraduate engineering students to use
Python to learn. Find the modules at:
&lt;a class="reference external" href="https://github.com/engineersCode/EngComp"&gt;https://github.com/engineersCode/EngComp&lt;/a&gt; — I aim to start a community of
educators sharing and remixing learning modules like these, to teach
engineering subjects at all levels. The goal of this talk is to set in
motion the conversations that can create this community.Presenter(s):
Speaker: Lorena Barba, George Washington University&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lorena Barba</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/engineers-code-re-usable-open-educational-modules-for-engineering-undergraduates.html</guid></item><item><title>Evolutionary Niching in the GAtor Genetic Algorithm for Molecular Crystal Structure Prediction</title><link>https://pyvideo.org/scipy-2018/evolutionary-niching-in-the-gator-genetic-algorithm-for-molecular-crystal-structure-prediction.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The goal of molecular crystal structure prediction (CSP) is to find all
plausible polymorphs for a given molecule. This requires performing
multimodal global optimization over a high dimensional search space. To
tackle this challenge, we have developed open-source, and massively
parallel genetic algorithm package in Python called GAtor with fitness,
selection, crossover, and mutation operators specifically designed for
CSP, but GAtor’s modularity allows our framework to be used for other
purposes. We use descriptors for structural similarity and
Scikit-learn’s Affinity Propagation and K-Means clustering algorithms in
a couple of different ways to effect niching and overcome local minimum
entrapment.Presenter(s): Speaker: Timothy Rose, Carnegie Mellon
University Author: Farren Curtis, Carnegie Mellon University Author:
Xiayue Li, Google Author: Noa Marom, Carnegie Mellon University&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Timothy Rose</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/evolutionary-niching-in-the-gator-genetic-algorithm-for-molecular-crystal-structure-prediction.html</guid></item><item><title>Exploring Molecular Space with Deep Generative Models and Python</title><link>https://pyvideo.org/scipy-2018/exploring-molecular-space-with-deep-generative-models-and-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How can we make molecules tailored to a specific problem?​ ​This talk is
about how we are tackling this challenge from a computational side using
python tools. We will be showcasing two tools developed in the
Aspuru-Guzik lab for this task, the chemical variational auto-encoder
(&lt;a class="reference external" href="https://github.com/aspuru"&gt;https://github.com/aspuru&lt;/a&gt;- guzik-group/chemical_vae), and ORGANIC
(&lt;a class="reference external" href="https://github.com/aspuru-guzik"&gt;https://github.com/aspuru-guzik&lt;/a&gt;- group/ORGANIC).Presenter(s): Speaker:
Benjamin Sanchez Lengeling, Harvard University&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin Sanchez Lengeling</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/exploring-molecular-space-with-deep-generative-models-and-python.html</guid></item><item><title>Interactive 3d Visualization in Jupyter</title><link>https://pyvideo.org/scipy-2018/interactive-3d-visualization-in-jupyter.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will present ipyvolume, which is a 3d plotting library for the Jupyter
notebook. Being an Jupyter widget, it plays well together with existing
libraries (bqplot, threejs, ipywidgets), and can even be used outside
the notebook for e.g.: outreach, press material or supplementary
material for scientific papers. Ipyvolume support transitions and
animations and uses WebGL to get the best performance.Presenter(s):
Speaker: Maarten Breddels, Kapteyn Astronomical Institute, University of
Groningen&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Maarten Breddels</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/interactive-3d-visualization-in-jupyter.html</guid></item><item><title>Interactive Data Visualization Leveraging Jupyter, Rust and WebAssembly</title><link>https://pyvideo.org/scipy-2018/interactive-data-visualization-leveraging-jupyter-rust-and-webassembly.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;his talk covers a Jupyter widget built using Rust and WebAssembly for
interactive, browser-based visualization of datasets with yt, a python
package used to analyze and visualize volumetric data in a number of
scientific domains. Users can interact and explore datasets of varying
sizes with our Jupyter widget. We minimize latency that results from
data transmission between yt and the browser by compiling our
pixelization routines to WebAssembly and pushing data to the browser.
Operations on the canvas are subsequently done in the browser. Our tool
enables interactive data exploration accessible to a broad user
base.Presenter(s): Speaker: Madicken Munk, University of Illinois at
Urbana-Champaign Speaker: Nathanael Claussen, University of Illinois at
Urbana-Champaign&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Madicken Munk</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/interactive-data-visualization-leveraging-jupyter-rust-and-webassembly.html</guid></item><item><title>Keynote: Black and Gold: The Role of Python in Recent Gravitational Wave Astronomy Breakthroughs with LIGO and Virgo</title><link>https://pyvideo.org/scipy-2018/keynote-black-and-gold-the-role-of-python-in-recent-gravitational-wave-astronomy-breakthroughs-with-ligo-and-virgo.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In September 2015, exactly 100 years after Einstein first unveiled his
theory of General Relativity, the Laser Interferometer
Gravitational-Wave Observatory (LIGO) detected the first gravitational
wave signal from the collision of two black holes, a discovery honored
by the 2017 Nobel Prize in Physics. Now, three years later, observations
of these binary black hole mergers are becoming routine, and the first
neutron star merger signal recorded by LIGO and partner European
facility Virgo in August 2017 was accompanied by a blast of gamma-ray,
X-ray, optical, infrared, and radio light, that is now a Rosetta stone
for understanding the origin of heavy elements in the cosmos. I will
talk about the role of Python in these discoveries: from operating the
detectors, to analyzing the data, pushing alerts to astronomers, and
connecting scientists and educators with LIGO open data.Presenter(s):
Speaker: Leo Singer, LIGO&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Leo Singer</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/keynote-black-and-gold-the-role-of-python-in-recent-gravitational-wave-astronomy-breakthroughs-with-ligo-and-virgo.html</guid><category>keynote</category></item><item><title>KubeFlow: Pythonic Machine Learning at Scale on Kubernetes</title><link>https://pyvideo.org/scipy-2018/kubeflow-pythonic-machine-learning-at-scale-on-kubernetes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;“KubeFlow marks the beginning of the end of the data scientist and/or
software engineer as disparate roles. Like DevOps has merged operations
and development, DataDevOps will consume data science.” - Philip Winder,
an engineer and consultant at Container Solutions &lt;a class="reference external" href="http://container"&gt;http://container&lt;/a&gt;-
solutions.com/tensorflow-on-kubernetes-kubeflow/ You've created and
tuned a machine learning model, using TensorFlow, PyTorch, or
scikit-learn - now what? How can you ensure that the model is deployed
to your DevOps team as production-ready code, and can scale as needed on
incoming data? How can you seamlessly migrate a model from your local
laptop / virtual machine to a hosted server on your cloud platform of
choice? This talk walks through the architecture of Kubeflow: a project
dedicated to answering those questions - and to making machine learning
on Kubernetes simple, portable and scalable. We will describe, in
detail, the three components of the project: * a JupyterHub platform
for creating and managing Jupyter notebook servers that are used by data
science and research groups; * a Tensorflow Customer Resource for
managing compute resources to a specific cluster size; and * a
Tensorflow Serving container to house the machine learning work. By the
end of this talk, you will have a firm understanding of why Kubernetes
would be useful to machine learning engineers, and how you can deploy
it, today, to support your predictive models.
&lt;a class="reference external" href="https://github.com/kubeflow/kubeflowPresenter(s"&gt;https://github.com/kubeflow/kubeflowPresenter(s&lt;/a&gt;): Speaker: Paige Bailey,
Microsoft Speaker: David Aronchick, Google&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paige Bailey</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/kubeflow-pythonic-machine-learning-at-scale-on-kubernetes.html</guid></item><item><title>Lightning Talks Day 3</title><link>https://pyvideo.org/scipy-2018/lightning-talks-day-3.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/lightning-talks-day-3.html</guid></item><item><title>Parsl: Enabling Scalable Interactive Computing in Python</title><link>https://pyvideo.org/scipy-2018/parsl-enabling-scalable-interactive-computing-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scientists and engineers like to use Python for interactive data
science, machine learning, and online computing. However, computations
that are simple to perform at small scales (e.g., on a laptop) can
easily become prohibitively difficult as data sizes and analysis
complexity grows. For example, efficient interactive analysis at scale
can require real-time management of parallel and/or cloud computing
resources, orchestration of remote task execution, and data staging
across wide area networks. In this talk we introduce Parsl (Parallel
Scripting Library), a pure Python library for orchestrating the
concurrent and parallel execution of interactive and many-task
workloads, and demonstrate how it integrates with the scientific Python
ecosystem and how it is being used in a variety of scientific domains.
The talk is intended for attendees interested in interactive and
parallel computing.Presenter(s): Speaker: Kyle Chard, Computation
Institute, University of Chicago and Argonne National Lab Speaker: Yadu
Babuji, University of Chicago Speaker: Ian Foster, University of Chicago
and Argonne National Laboratory Speaker: Daniel Katz, University of
Illinois at Urbana-Champaign Speaker: Mike Wilde, University of Chicago
Speaker: Anna Woodard, University of Chicago Speaker: Justin Wozniak,
Argonne National Laboratory&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kyle Chard</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/parsl-enabling-scalable-interactive-computing-in-python.html</guid></item><item><title>PyViz: Unifying Python Tools for In-Browser Data Visualization</title><link>https://pyvideo.org/scipy-2018/pyviz-unifying-python-tools-for-in-browser-data-visualization.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has dozens of plotting libraries, which is a blessing and a
curse. It can be difficult to choose libraries, learn how to use them,
and make them work together when needed. This talk introduces PyViz.org,
a new initiative to integrate existing OSS tools into a full suite that
solves a wide range of problems in data exploration and communication.
Bokeh implements interactive browser-based plotting, Datashader renders
even huge datasets into manageable images, HoloViews makes it simple to
construct Bokeh+Datashader plots, and other PyViz packages tie all these
tools together to allow simple creation of visual applications and
dashboards.Presenter(s): Speaker: James A. Bednar, Solutions Architect,
Anaconda, Inc. Speaker: Jean-Luc Stevens, Software Engineer, Anaconda,
Inc. Speaker: Philipp Rudiger, Software Engineer, Anaconda, Inc.
Speaker: Christopher Ball, Anaconda, Inc. Speaker: Bryan Van de Ven,
Anaconda, Inc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James A. Bednar</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/pyviz-unifying-python-tools-for-in-browser-data-visualization.html</guid></item><item><title>Recipe2Vec: How word2vec Helped us Discover Related Tasty Recipes</title><link>https://pyvideo.org/scipy-2018/recipe2vec-how-word2vec-helped-us-discover-related-tasty-recipes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Your user knows they want a healthyish but tasty pasta for dinner but
aren't quite sure exactly which recipe to choose. How can you help
narrow their search and show them closely related recipes to give them
enough options without making their search exhausting? This talk will
show you BuzzFeed/Tasty tech's solution to creating a consistent method
for finding similar Tasty recipes using word2vec.Presenter(s): Speaker:
Meghan Heintz, BuzzFeed&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Meghan Heintz</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/recipe2vec-how-word2vec-helped-us-discover-related-tasty-recipes.html</guid></item><item><title>Resonance: Learning Mechanical Vibrations Through Computational Thinking</title><link>https://pyvideo.org/scipy-2018/resonance-learning-mechanical-vibrations-through-computational-thinking.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will describe a pilot project at the University of California, Davis
on the redesign of an upper level mechanical vibrations engineering
course where students now learn the relevant concepts via computational
thinking and computational experimentation. We utilize interactive
computing with the Jupyter platform and a custom Python library instead
of focusing on the analytical mathematical methods used over the past
century. I will cover the course design, principles of teaching and
learning with computational thinking (focusing on API design and the use
of symbolics), software/hardware infrastructure, assessment practices,
and lessons learned.Presenter(s): Speaker: Kenneth Lyons, University of
California, Davis&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kenneth Lyons</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/resonance-learning-mechanical-vibrations-through-computational-thinking.html</guid></item><item><title>Safe Handling Instructions for Missing Data</title><link>https://pyvideo.org/scipy-2018/safe-handling-instructions-for-missing-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In machine learning tasks, it is common to handle missing data by simply
removing observations with missing values, or just replacing missing
data with the mean value for its feature. To show why this is
problematic, we use listwise deletion and mean imputing to recover
missing values from artificially created datasets, and we compare those
models against ones with full information. Unless quite strong
independence assumptions are met, we observe large biases in the
resulting coefficients and an increase in the model's prediction error.
We conclude by repeating the experiment on a real dataset, and showing
the appropriate diagnostic and correction steps to handle missing
values.Presenter(s): Speaker: Dillon Niederhut, Enthought&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dillon Niederhut</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/safe-handling-instructions-for-missing-data.html</guid></item><item><title>Scalable Machine Learning with Dask</title><link>https://pyvideo.org/scipy-2018/scalable-machine-learning-with-dask.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk demonstrates how to scale a Python-based machine learning
workflow to larger models and larger datasets. The talk will introduce a
common workflow using NumPy, pandas, and scikit-learn, and discuss some
challenges with scaling that workflow out to larger datasets. We'll then
see how dask and dask-ml work with and extend these libraries to enable
large-scale parallel and distributed machine learning.Presenter(s):
Speaker: Tom Augspurger, Anaconda, Inc. Speaker: Olivier Grisel, INRIA&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Augspurger</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/scalable-machine-learning-with-dask.html</guid></item><item><title>scikit-learn and Tabular Data: Closing the Gap</title><link>https://pyvideo.org/scipy-2018/scikit-learn-and-tabular-data-closing-the-gap.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scikit-learn traditionally centered its data model around numpy arrays.
However, in an important subset of scikit-learn's use cases, the
original data in the machine learning pipeline is tabular:
heterogeneously typed and labeled. In the meantime, pandas has become
very popular, and increasingly used to represent such tabular data, but
scikit-learn does not always play well with heterogeneous DataFrames.
This talk will give an overview of the challenges and current
bottlenecks when working with tabular data and scikit- learn. Then it
will show the ungoing developments in sckikit-learn to improve this
situation and highlight some third-party libraries that try to ease
those problems.Presenter(s): Speaker: Joris Van den Bossche, Université
Paris-Saclay Center for Data Science&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joris Van den Bossche</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/scikit-learn-and-tabular-data-closing-the-gap.html</guid></item><item><title>SciPy Tools Plenary Session Day 3</title><link>https://pyvideo.org/scipy-2018/scipy-tools-plenary-session-day-3.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/scipy-tools-plenary-session-day-3.html</guid></item><item><title>signac: A Python Framework for Data and Workflow Management</title><link>https://pyvideo.org/scipy-2018/signac-a-python-framework-for-data-and-workflow-management.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Computational studies in physics, chemistry, and materials science are
frequently characterized by well-parameterized but constantly evolving
data schemas. Poor management of these dynamic schemas can significantly
impede computational research. Our talk showcases the signac framework,
an open- source Python package designed for simple data and workflow
management, particularly in high performance computing environments. The
framework's flexible data model allows easy adaptation into pre-existing
file-based workflows while also providing critical database
functionality such as filtering, searching, and grouping data. signac
also provides tools to develop complex workflows operating on its data
spaces, enabling the simple, efficient, and reproducible execution of
computational studies.Presenter(s): Speaker: Vyas Ramasubramani,
University of Michigan Author: Carl Adorf, University of Michigan
Author: Paul M. Dodd, University of Michigan Author: Bradley Dice,
University of Michigan Author: Sharon C. Glotzer, University of Michigan&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vyas Ramasubramani</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/signac-a-python-framework-for-data-and-workflow-management.html</guid></item><item><title>Yaksh: Facilitating Learning by Doing</title><link>https://pyvideo.org/scipy-2018/yaksh-facilitating-learning-by-doing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Yaksh is a free, and open-source online evaluation platform. At its
core, Yaksh focuses on problem-based learning and lets teachers create
practice exercises and quizzes which are evaluated in real-time. With a
large array of question types like multiple choice, fill-in-the-blanks,
Assignment upload and assertion or standard I/O based programming
questions available, Yaksh supports Python, C, C++, Java, Bash and
Scilab programming languages. In addition, Yaksh allows teachers to
create full-blown courses with video and/or markdown text-based lessons.
Yaksh is designed to be secure, easily deployable, and can scale-up to
500+ users simultaneously.Presenter(s): Speaker: Prabhu Ramachandran,
Enthought and IIT Bombay Speaker: Prathamesh Salunke, FOSSEE, IIT Bombay
Speaker: Ankit Javalkar, FOSSEE, IIT Bombay Speaker: Aditya Palaparthy,
FOSSEE, IIT Bombay Speaker: Mahesh Gudi, FOSSEE, IIT Bombay Speaker:
Hardik Ghaghada, Ex FOSSEE, IIT Bombay&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Prabhu Ramachandran</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/yaksh-facilitating-learning-by-doing.html</guid></item><item><title>Addressing Multithreading and Multiprocessing in Transparent and Pythonic Methods</title><link>https://pyvideo.org/scipy-2018/addressing-multithreading-and-multiprocessing-in-transparent-and-pythonic-methods.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the increase in computing power, harnessing and controlling one’s
code out of the single threaded realm becomes an ever-increasing
problem, coupled with the desire to stay in the Python layer. With the
recent tools and frameworks that have been published, escaping the GIL
cleanly is much easier than before, and can allow one’s Python code to
effectively utilize multi-core and many core architectures in the most
Pythonic ways possible. In this talk, learn about how to utilize static
multiprocessing for process pinning, and effectively balancing thread
pools with a monkey-patched import of threading modules.Presenter(s):
Speaker: David Liu, Intel Speaker: Anton Malakhov, Intel Corporation&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Liu</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/addressing-multithreading-and-multiprocessing-in-transparent-and-pythonic-methods.html</guid></item><item><title>Around the World in 80 Ways: An Introduction to Working w/ Geodata &amp; Cartopy</title><link>https://pyvideo.org/scipy-2018/around-the-world-in-80-ways-an-introduction-to-working-w-geodata-cartopy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;On the 1st of October 1872, Jules Verne’s character Phileas Fogg embarks on an adventure to circumnavigate the world in just 80 days. Travelling exclusively by sea and rail, Fogg voyages from the misty alleys of Victorian London to the exotic subcontinent and the Wild West in a race against the clock. Despite fastidiously counting each sunrise, he famously neglects the effect of crossing the dateline and thus arrives on a different day to the one he calculated. The mistreatment of the dateline is far from unique to Phileas Fogg; it is not just the 24hr time discontinuity that we struggle with - the antimeridian is also a longitudinal discontinuity of 360 degrees for coordinate systems centered at the Greenwich Prime meridian. Whilst Cartesian treatment of geospatial data is a reasonable assumption with an appropriately transformed coordinate system and at large scale (small area), the discontinuities of the antimeridian and the poles frequently wreak havoc on our Cartesian tools when we treat larger area (global / small scale) data. In this tutorial, join Phileas Elson on our own epic adventure by tracking Fogg’s travel log with careful non-Cartesian treatment as we go. Along the way, we will discover how many of the python libraries we may already know and love can be used in conjunction with cartopy to provide a powerful suite of open source geospatial tools. We will cover many of the core concepts in cartopy, including topics such as: coordinate reference systems and projections; the matplotlib interface; geospatial image, data (NetCDF) and raster treatment; as well as geometry predicates and transformations. The knowledge developed from this tutorial will be applicable to a broad range of geospatial analyses (both raster and vector), and will provide hands-on experience of tools such as numpy, proj.4, matplotlib and shapely to name a few. The tutorial will be applicable to a broad range of experiences, but familiarity with numpy and matplotlib will be essential to enable progress through the exercises. A prior awareness of tools such as shapely, proj.4, geopandas, and xarray/Iris will help, though are by no means essential. The tutorial will be made up of a number of exercises with each being designed to accommodate a broad range of expertise. Prerequisite skills: NumPy, matplotlib&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philip Elson</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/around-the-world-in-80-ways-an-introduction-to-working-w-geodata-cartopy.html</guid><category>tutorial</category></item><item><title>Binder 2.0: The Next Generation of Reproducible Scientific Environments with repo2docker and BinderHub</title><link>https://pyvideo.org/scipy-2018/binder-20-the-next-generation-of-reproducible-scientific-environments-with-repo2docker-and-binderhub.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="http://mybinder.org/"&gt;Binder&lt;/a&gt; allows researchers to quickly create
and share computational environments needed to interact with research
code and data. In this talk, we discuss the technical decisions and
changes made in Binder 2.0. Many changes focus on deployment —
modern-day cloud management tools (Kubernetes and Helm) and JupyterHub
make the service more reliable, scalable, and easier to deploy. We focus
on improvements for researchers using Binder to share their work.
Supporting new workflows, languages, and REST APIs in Binder 2.0
required developing two new components: repo2docker and BinderHub. We
will describe how these components work and how researchers can best use
them. We will conclude with a vision for the future of
Binder.Presenter(s): Speaker: M Pacer, University of California,
Berkeley Speaker: Chris Holdgraf, University of California, Berkeley
Speaker: Min Ragan-Kelley, IPython/Jupyter&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M Pacer</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/binder-20-the-next-generation-of-reproducible-scientific-environments-with-repo2docker-and-binderhub.html</guid></item><item><title>Bringing ipywidgets Support to plotly.py</title><link>https://pyvideo.org/scipy-2018/bringing-ipywidgets-support-to-plotlypy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We describe our efforts to bring full ipywidgets support to the
plotly.py data visualization library. This work brings many exciting new
features to Jupyter Notebook users working with plotly.py including
Python callbacks, in-place figure updates, binary array serialization,
and integration with the broader ipywidgets ecosystem.Presenter(s):
Speaker: Jon Mease, Johns Hopkins Applied Physics Laboratory&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Mease</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/bringing-ipywidgets-support-to-plotlypy.html</guid></item><item><title>Cloudknot: A Python Library to Run your Existing Code on AWS Batch</title><link>https://pyvideo.org/scipy-2018/cloudknot-a-python-library-to-run-your-existing-code-on-aws-batch.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, we introduce Cloudknot, a software library that
simplifies cloud-based distributed computing by programmatically
executing user-defined functions (UDFs) in AWS Batch. It takes as input
a Python function, packages it as a container, creates all the necessary
AWS constituent resources to submit jobs, monitors their execution and
gathers the results, all from within the Python environment. Cloudknot
overcomes limitations of previous similar libraries, such as pywren,
that runs UDFs on AWS Lambda, because most data science workloads exceed
the AWS Lambda limits on execution time, RAM, and local
storage.Presenter(s): Speaker: Adam Richie- Halford, University of
Washington Speaker: Ariel Rokem, The University of Washington eScience
Institute&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Richie-Halford</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/cloudknot-a-python-library-to-run-your-existing-code-on-aws-batch.html</guid></item><item><title>Convex Optimization in Python with CVXPY</title><link>https://pyvideo.org/scipy-2018/convex-optimization-in-python-with-cvxpy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;CVXPY is a domain-specific language for convex optimization embedded in
Python. It allows the user to express convex optimization problems in a
natural syntax that follows the math, rather than in the restrictive
standard form required by solvers. CVXPY has been used in hundreds of
research projects and by Fortune 500 companies. In this talk, we will
show how easy it is to formulate and solve optimization problems with
CVXPY through example applications in finance and renewable energy. The
talk is intended for anyone with a basic Python and math background who
is interested in optimization or its applications.Presenter(s): Speaker:
Steven Diamond, Stanford University&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steven Diamond</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/convex-optimization-in-python-with-cvxpy.html</guid></item><item><title>Data Visualization for Scientific Discovery</title><link>https://pyvideo.org/scipy-2018/data-visualization-for-scientific-discovery.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Choosing the visual form for a visualization is a decision about what
aspects of the data matter most. Highlight or ignore outliers? Look at
values, differences, or changes? Compare to 0, median, or mean? In
scientific analysis we risk missing discoveries by failing to notice
important features of our data, yet we often use default parameters and
charts without realizing what we might miss. I will demonstrate how to
translate questions about your data into chart parameters. Using Python
examples, I'll illustrate powerful techniques like using color
intentionally and creating 'small multiples' of charts that vary visual
form or data.Presenter(s): Speaker: Zan Armstrong, Google&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zan Armstrong</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/data-visualization-for-scientific-discovery.html</guid></item><item><title>Democratizing Data</title><link>https://pyvideo.org/scipy-2018/democratizing-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presenter(s): Tracy Teal, Data Carpentry&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tracy Teal</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/democratizing-data.html</guid><category>keynote</category></item><item><title>Detecting Anomalies Using Statistical Distances</title><link>https://pyvideo.org/scipy-2018/detecting-anomalies-using-statistical-distances.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Statistical distances are distances between distributions or data
samples and are used in a variety of machine learning applications. In
this talk, we will show how we use SciPy's statistical distance
functions—some of which we recently contributed—to design powerful and
production-ready anomaly detection algorithms. With visual
illustrations, we will describe the inner workings and the properties of
a few common statistical distances and explain what makes them
convenient to use, yet powerful to solve various problems. We will also
show real-life applications and concrete examples of the anomalous
patterns that such algorithms are able to detect in
performance-monitoring and business-metric time series.Presenter(s):
Speaker: Charles Masson, Datadog&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Charles Masson</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/detecting-anomalies-using-statistical-distances.html</guid></item><item><title>Devops Empowered Data Science with Ansible</title><link>https://pyvideo.org/scipy-2018/devops-empowered-data-science-with-ansible.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many data scientists do a lot of work on computers besides their
laptops. For me, this often takes the form of SSH-ing into remote boxes
and manually configuring the system with a combination of apt installs,
Conda environments, and bash scripts. In this talk I will introduce
users to Ansible scripts for replacing this manual effort with simple,
reproducible, automated system configuration.Presenter(s): Speaker: Tim
Hopper, Cylance Inc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Hopper</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/devops-empowered-data-science-with-ansible.html</guid></item><item><title>Diversity Luncheon: Bias, Diversity, Backlash, Manifestos, and Rebuttals</title><link>https://pyvideo.org/scipy-2018/diversity-luncheon-bias-diversity-backlash-manifestos-and-rebuttals.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever been in a meeting where a colleague says “I’m a great
supporter of gender equality, but I’m totally opposed to quotas!” Or, “I
believe in diversity, but I won’t stand for positive discrimination.”
Maybe you felt a bit troubled by such statements, thinking: that sounds
fair, but somehow I don’t think it is… how do I rebut this? We all know
that bias is omnipresent in our society, and some of us are keenly aware
of rampant bias in sectors like technology, engineering and politics.
Efforts to thwart the effects of bias in communities and institutions
prompt a spectrum of diversity initiatives. Many times these lead to
backlash. It’s been just a year since the memo &amp;quot;Google's Ideological
Echo Chamber” spread through the company’s internal channels, before
becoming public. Yet, another wrangle already is blasting online with
the recent article &amp;quot;Why Women Don’t Code,” by a university lecturer.
What do we do when privileged individuals continue to turn a blind eye
on the injustices around them? They insist on points like “women are
less likely to choose computer science,” and that’s just due to natural
differences. Community and institution leaders have much of the power to
catalyze change, but in the meantime, I want us to build, share and
refine a portfolio of rebuttals for the recurring themes of the
anti-diversity manifestos. Let’s get started.Presenter(s): Speaker:
Lorena Barba, George Washington University&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lorena Barba</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/diversity-luncheon-bias-diversity-backlash-manifestos-and-rebuttals.html</guid></item><item><title>EarthSim: Flexible Environmental Simulation Workflows Entirely Within Jupyter Notebooks</title><link>https://pyvideo.org/scipy-2018/earthsim-flexible-environmental-simulation-workflows-entirely-within-jupyter-notebooks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building environmental simulation workflows is typically a slow process
involving multiple proprietary desktop tools that do not interoperate
well. In this work, we demonstrate building flexible, lightweight
workflows entirely in Jupyter notebooks. We demonstrate these
capabilities through examples in hydrology and hydrodynamics using the
AdH and GSSHA simulators. The goal is to provide a set of tools that can
easily be reconfigured and repurposed as needed to rapidly solve
specific emerging issues. (&lt;a class="reference external" href="https://pyviz.github.io/EarthSim/"&gt;https://pyviz.github.io/EarthSim/&lt;/a&gt;) As part of
this work, extensive improvements were made to several general-purpose
open source packages, including support for annotating and editing plots
and maps in Bokeh and HoloViews, rendering large triangular meshes and
regridding large raster data in HoloViews, GeoViews, and Datashader, and
widget libraries for Param. In addition, two new open source projects
are being released for triangular mesh generation and environmental data
access.Presenter(s): Speaker: Dharhas Pothina, U.S. Army Engineer
Research and Development Center Speaker: James A. Bednar, Solutions
Architect, Anaconda, Inc. Speaker: Scott Christensen, U.S. Army Engineer
Research and Development Center Speaker: Kevin Winters, U.S. Army
Engineer Research and Development Center Speaker: Christopher Ball,
Anaconda, Inc. Speaker: Gregory Brener, Anaconda Inc. Speaker: Philipp
Rudiger, Software Engineer, Anaconda, Inc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dharhas Pothina</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/earthsim-flexible-environmental-simulation-workflows-entirely-within-jupyter-notebooks.html</guid></item><item><title>GeoBIPy - Geophysical Bayesian Inference in Python</title><link>https://pyvideo.org/scipy-2018/geobipy-geophysical-bayesian-inference-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We present a public domain, open-source, object-oriented python package
called GeoBIPy, Geophysical Bayesian Inference in Python, a parallel
enabled trans- dimensional Markov chain Monte Carlo inversion framework
for geophysical data. GeoBIPy optimally computes a subsurface physical
property model that fits the measured data, in addition to an ensemble
of possible models, thus providing an estimation of uncertainty at
different locations within the model. GeoBIPy uses the parallel-enabled
python packages mpi4py and h5py in order to leverage large-scale
distributed memory architectures. We show that large datasets taking
over 3 months to invert can be completed in 2.5 days using 2016
cores.Presenter(s): Speaker: Leon Foks, Apogee Engineering contracted to
United State Geological Survey Speaker: Burke Minsley, United States
Geological Survey&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Leon Foks</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/geobipy-geophysical-bayesian-inference-in-python.html</guid></item><item><title>Jupyter Notebook Driven Development with PYNT (PYthon iNTeractive)</title><link>https://pyvideo.org/scipy-2018/jupyter-notebook-driven-development-with-pynt-python-interactive.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I will present pynt (&lt;em&gt;py&lt;/em&gt;thon i&lt;em&gt;nt&lt;/em&gt;eractive), a tool
which leverages the interactive capabilities of Jupyter Notebooks to
provide a rich programming environment conducive to the later stages of
software development. I will begin by discussing common workflow in
software development, as well their limitations. I will then motivate
the merits of pynt by demonstrating how adopting a
Jupyter-Notebook-Driven-Development workflow can overcome some of these
limitations, and then how pynt streamlines this workflow. I will end
with a feature-tour of pynt and the different approach to software
development workflow that pynt encourages.Presenter(s): Speaker: Edward
Banner, mosss.com&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Edward Banner</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/jupyter-notebook-driven-development-with-pynt-python-interactive.html</guid></item><item><title>Lightning Talks Day 2</title><link>https://pyvideo.org/scipy-2018/lightning-talks-day-2.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/lightning-talks-day-2.html</guid></item><item><title>Open Source Tools for 'Heterogeneous Agent' Modeling</title><link>https://pyvideo.org/scipy-2018/open-source-tools-for-heterogeneous-agent-modeling.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;Representative Agent' models in economics assume that differences across people (say, between poor and rich) do not matter for broad economic outcomes. Such models performed poorly in the Great Recession; but progress in&lt;/tt&gt;heterogeneous
agent' modeling has been held back because the tools for working with
such models are primitive. The Econ-ARK/HARK project provides a
Python-based set of tools that make it much easier to get started, and
to make rapid progress, in handling the computational challenges of
taking account of the differences between agents (in preferences, in
incomes, in beliefs) that matter for overall economic
outcomes.Presenter(s): Speaker: Christopher Carroll, Johns Hopkins
University Speaker: Matthew White, University of Delaware&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Carroll</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/open-source-tools-for-heterogeneous-agent-modeling.html</guid></item><item><title>Performing Dimension Reduction at Scale with Applications to Public Sentiment Models</title><link>https://pyvideo.org/scipy-2018/performing-dimension-reduction-at-scale-with-applications-to-public-sentiment-models.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We discuss our experience with dimension reduction for big datasets. We
investigate the controlled performance decrease of our public sentiment
models under transformations that reduce the number of features in the
dataset. This feature reduction speeds up our real-time data science
tools and helps to counter the curse of dimensionality. We outline the
Python workflow that both produces and validates the quality of these
transformations at scale in the AWS ecosystem, and we detail our
programming and design choices, touching on the scikit-learn API,
configuration versus code, SQL templatization, and our open source API
client.Presenter(s): Speaker: Walt Askew, Civis Analytics&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Walt Askew</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/performing-dimension-reduction-at-scale-with-applications-to-public-sentiment-models.html</guid></item><item><title>PyDASL: Understanding Big Data Through GPU Accelerated Graph Analytics</title><link>https://pyvideo.org/scipy-2018/pydasl-understanding-big-data-through-gpu-accelerated-graph-analytics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Our worlds are full of massive amounts of complexly connected data.
Graph analytics offer a solution for extracting meaning from the mass.
Applied examples include: discovering malicious exfiltrators in networks
with millions of connections, or finding optimal drug targets in
elaborate chemical pathways. Multiple low-level GPU-accelerated graph
frameworks exist, but a steep learning curve has prevented widespread
use of iterative graph analytics by the data science community. This
session will focus on PyDASL, a Python tool capable of performing GPU
accelerated graph operations. PyDASL enables developers to quickly
author iterative graph analytics with up to 9,000% less code than other
comparably performing GPU-accelerated graph frameworks. We will show the
ease of writing and executing a new graph analytic and review PyDASL’s
built-in analytics.Presenter(s): Speaker: Anne Struble, Systap Speaker:
Brad Bebee, Systap&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anne Struble</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/pydasl-understanding-big-data-through-gpu-accelerated-graph-analytics.html</guid></item><item><title>pyQuil: Easy, Hybrid Quantum Programming</title><link>https://pyvideo.org/scipy-2018/pyquil-easy-hybrid-quantum-programming.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pyQuil is a Python-based, open-source quantum programming library.
pyQuil is part of the Rigetti Forest toolkit for programming and running
quantum algorithms in the cloud on both a physical quantum computer and
classically- simulated quantum processor. Rigetti Computing is a
start-up in Berkeley, on a mission to build the first large-scale
commercial quantum computer. Recently we have demonstrated a hybrid
classical/quantum unsupervised machine learning algorithm on a 19-qubit
gate model quantum processor.Presenter(s): Speaker: Guenevere
Prawiroatmodjo, Rigetti Quantum Computing&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guenevere Prawiroatmodjo</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/pyquil-easy-hybrid-quantum-programming.html</guid></item><item><title>PyViz: Easy Visualization and Exploration for all your Data</title><link>https://pyvideo.org/scipy-2018/pyviz-easy-visualization-and-exploration-for-all-your-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial, you will learn how to use the PyViz suite of tools to quickly build simple or complex visualizations that reveal and give insight into your data. You'll start by using the HoloViews library to annotate your numpy, pandas, or xarray data and make it have an instantly available visual representation. These declarative objects make it easy to visualize how different sets of data relate to each other, by flexibly overlaying and laying out data in any combination. Once you have these objects, you can select, slice, or sample your data as needed, quickly making new types of plots so that you can fully understand your data. You'll be able to choose between Matplotlib plots suitable for publications, or Bokeh plots that support interactive exploration in Jupyter Notebooks or as separate dashboard apps. You'll then see how to use HoloViews and related tools to transform your data for viewing in different ways, defining complex analysis pipelines if needed that preserve the raw data while making each step visible for analysis. When your datasets are too large for web browsers, we'll show how to use Datashader to reveal &lt;em&gt;all&lt;/em&gt; of the data faithfully, rendering it into an image that can be displayed safely even for billions of datapoints. When it is time to share your results with non-developer colleagues, we'll show how to use Param to add interactive widgets to let them explore parameter spaces, how to link plots to respond to user selections and events, and how to put plots and widgets together into a separately launchable dashboard. Throughout, we will demonstrate how to customize plots as needed, how to follow up on specific topics to get more information, and how and when to use each of the libraries described. The aim is to give users the tools and know-how to effectively explore, analyze and visualize even large and complex datasets easily, concisely, and reproducibly. You can see a detailed breakdown of the topics included, including the full training materials as Jupyter notebooks, at &lt;a class="reference external" href="https://pyviz.github.io/pyviz/tutorial/00_Welcome.html"&gt;https://pyviz.github.io/pyviz/tutorial/00_Welcome.html&lt;/a&gt; .&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James A. Bednar</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/pyviz-easy-visualization-and-exploration-for-all-your-data.html</guid><category>tutorial</category></item><item><title>Reproducible Environments for Reproducible Results</title><link>https://pyvideo.org/scipy-2018/reproducible-environments-for-reproducible-results.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Trustworthy results require reproducibility. To guarantee
reproducibility, source code and all external dependencies must be
controlled. This session will include introductions to containers,
Ansible, and Pulp. Attendees of any skill level can learn the tools and
best practices for creating and managing reproducible
environments.Presenter(s): Speaker: Bihan Zhang, Red Hat Speaker: Austin
Macdonald, Red Hat&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bihan Zhang</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/reproducible-environments-for-reproducible-results.html</guid></item><item><title>Scalable Feature Extraction with Aerial and Satellite Imagery</title><link>https://pyvideo.org/scipy-2018/scalable-feature-extraction-with-aerial-and-satellite-imagery.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we introduce use cases for feature extraction with aerial
and satellite imagery such as turn lane marking detection, road and
building footprint detection. In doing so, we show the potential of
large-scale object detection and segmentation on aerial and satellite
imagery. We give insights into how imagery training sets can be built
with little or no human annotations needed making use of available
datasets such as OpenStreetMap. We then focus on modeling aspects for
object detection and segmentation. In doing so we give an insight into
state-of-the-art detection systems and adaptions we had to make for the
aerial and satellite imagery domain. We conclude the talk with lessons
learned in building these large-scale object detection and segmentation
pipelines, and show potential for future work in this domain. Slides:
&lt;a class="reference external" href="https://docs.google.com/presentation/d/1S4d_RWEbwMNjIvhN1Q-jj0Pn5oh"&gt;https://docs.google.com/presentation/d/1S4d_RWEbwMNjIvhN1Q-jj0Pn5oh&lt;/a&gt;-
Te_46CTIyzJdFZ4/edit?usp=sharingPresenter(s): Speaker: Virginia Ng,
Mapbox Speaker: Daniel Hofmann, Mapbox&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Virginia Ng</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/scalable-feature-extraction-with-aerial-and-satellite-imagery.html</guid></item><item><title>SciPy Tools Plenary Session Day 2</title><link>https://pyvideo.org/scipy-2018/scipy-tools-plenary-session-day-2.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/scipy-tools-plenary-session-day-2.html</guid></item><item><title>Sneaking Data into Containers with the Whole Tale</title><link>https://pyvideo.org/scipy-2018/sneaking-data-into-containers-with-the-whole-tale.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Accessing remote data with persistent, user-definable computational
environments is a key challenge in digital scholarship. The Whole Tale
is a response to this requirement, building and combining components to
provide a virtual research &amp;quot;home&amp;quot; on the web. In this talk, we'll
describe how the Whole Tale project leverages existing Python projects
(Jupyter, PyFilesystem, fusepy, WsgiDAV, Girder and many others) to
bring remote analysis (including code and environment) and data
together, providing persistent workspaces while automatically capturing
provenance and data lineage to facilitate reproducibility and
verifiability -- cornerstones of the scholarly process.Presenter(s):
Speaker: Matthew Turk, University of Illinois Speaker: Kacper Kowalik,
University of Illinois at Urbana-Champaign&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kacper Kowalik</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/sneaking-data-into-containers-with-the-whole-tale.html</guid></item><item><title>Spatio-temporal Analysis of Socioeconomic Neighborhoods</title><link>https://pyvideo.org/scipy-2018/spatio-temporal-analysis-of-socioeconomic-neighborhoods.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The neighborhood effects literature represents a wide span of the social
sciences broadly concerned with the influence of spatial context on
social processes. From the study of segregation dynamics, the
relationships between the built environment and health outcomes, to the
impact of concentrated poverty on social efficacy, neighborhoods are a
central construct in empirical work. From a dynamic lens, neighborhoods
experience changes not only in their socioeconomic composition, but also
in spatial extent; this latter source of change, however, has been
largely neglected in the extant literature. In this paper, we discuss
the development of novel, spatially explicit approaches to the study of
longitudinal neighborhood dynamics using the scientific Python
ecosystem.Presenter(s): Speaker: Serge Rey, University of California,
Riverside Speaker: Elijah Knaap, University of California Speaker: Su
Han, University of California Speaker: Levi Wolf, University of Bristol&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Serge Rey</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/spatio-temporal-analysis-of-socioeconomic-neighborhoods.html</guid></item><item><title>UMAP: Uniform Manifold Approximation and Projection for Dimension Reduction</title><link>https://pyvideo.org/scipy-2018/umap-uniform-manifold-approximation-and-projection-for-dimension-reduction.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will present a new approach to dimension reduction called
UMAP. UMAP is grounded in manifold learning and topology, making an
effort to preserve the topological structure of the data. The resulting
algorithm can provide both 2D visualisations of data of comparable
quality to t-SNE, and general purpose dimension reduction. UMAP has been
implemented as a (scikit-learn compatible) python library that can
perform efficient dimension reduction, scaling out to much larger
datasets than t-SNE or other comparable algorithms (see
&lt;a class="reference external" href="http://github.com/lmcinnes/umap).Presenter(s"&gt;http://github.com/lmcinnes/umap).Presenter(s&lt;/a&gt;): Speaker: Leland McInnes,
Tutte Institute for Mathematics and Computing&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Leland McInnes</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/umap-uniform-manifold-approximation-and-projection-for-dimension-reduction.html</guid></item><item><title>Website for Interacting with Oceanographic Data and Numerical Model Output</title><link>https://pyvideo.org/scipy-2018/website-for-interacting-with-oceanographic-data-and-numerical-model-output.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Texas Automated Buoy System (TABS) has been recording and serving
online velocity and other in situ water data since 1995. We have
recently modernized the website to include more data and operational
numerical model output, and to improve ease of use. This effort relies
heavily on Python for plotting and data handling, especially relying on
packages pandas for reading in and manipulating data, and matplotlib for
plotting. The website includes an interactive map with data overlaid on
model output and combines the robustness of the leaflet library with the
flexibility of svg vectorial plotting and graphical objects
manipulation.Presenter(s): Speaker: Kristen Thyng, Assistant Research
Scientist, Texas A&amp;amp;M; University Speaker: Martinho Marta-Almeida&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kristen Thyng</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/website-for-interacting-with-oceanographic-data-and-numerical-model-output.html</guid></item><item><title>Apache Arrow: A Cross-language Development Platform for In-memory Data</title><link>https://pyvideo.org/scipy-2018/apache-arrow-a-cross-language-development-platform-for-in-memory-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk discusses Apache Arrow project and its uses for high
performance analytics and system interoperability. I discuss the current
development initiative and future roadmap as it relates to the Python
data community.Presenter(s): Speaker: Wes McKinney, Two Sigma, pandas,
Apache Software Foundation&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wes McKinney</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/apache-arrow-a-cross-language-development-platform-for-in-memory-data.html</guid></item><item><title>Beyond Scraping: How to Use Machine Learning When You're not Sure Where to Start</title><link>https://pyvideo.org/scipy-2018/beyond-scraping-how-to-use-machine-learning-when-youre-not-sure-where-to-start.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scraping one web site for information is easy, scraping 10000 different
sites is hard. Beyond page-specific scraping, how do you build a program
than can extract the publication date of (almost) any news article
online, no matter the web site? We’ll cover when to use machine learning
vs. humans or heuristics for data extraction, the different steps of how
to phrase the problem in terms of machine learning, including feature
selection on HTML documents, and issues that arise when turning research
into production code.Presenter(s): Speaker: Julie Lavoie&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julie Lavoie</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/beyond-scraping-how-to-use-machine-learning-when-youre-not-sure-where-to-start.html</guid></item><item><title>cis_interface: A Python Package for Connecting Scientific Models across Scales and Languages</title><link>https://pyvideo.org/scipy-2018/cis_interface-a-python-package-for-connecting-scientific-models-across-scales-and-languages.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we describe cis_interface, an open-source Python framework
for combining scientific models across programming languages and scales
to simulate complex systems. Motivated by the goal of combining
biological models to recreate crops in silico, cis_interface
orchestrates asynchronous communication between models running in
parallel without the need for major changes to the model code,
supporting scientific collaboration and leveraging the wealth of
existing computational models.Presenter(s): Speaker: Meagan Lang,
University of Illinois, Champaign-Urbana&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Meagan Lang</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/cis_interface-a-python-package-for-connecting-scientific-models-across-scales-and-languages.html</guid></item><item><title>Harnessing the Power of Scientific Python to Investigate the Biogeochemistry of the Central Pacific Ocean</title><link>https://pyvideo.org/scipy-2018/harnessing-the-power-of-scientific-python-to-investigate-the-biogeochemistry-of-the-central-pacific-ocean.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Central Pacific Ocean is a looking glass into both the past and
future ocean. The recent ProteOMZ expedition provides &amp;gt;6 million
datapoints on the distribution of microbial proteins in this region,
coupled with &amp;gt;6000 chemical and physical measurements. We demonstrate
our approach to analysis of this multivariate data using the Pandas,
Scikit-learn, Biopython, Bokeh, and METATRYP Python tools. We found
interactivity to be key in human lead pattern discovery. We discuss
challenges and solutions to piecing together multiple data types and
Python tools, and discuss our experience as scientists learning to apply
Python packages in our research.Presenter(s): Speaker: Noelle Held,
Woods Hole Oceanographic Institution/Massachusetts Institute of
Technology Speaker: Jaclyn Saunders, Woods Hole Oceanographic
Institution Speaker: Joe Futrelle, Woods Hole Oceanographic Institution
Speaker: Mak Saito, Woods Hole Oceanographic Institution&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Noelle Held</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/harnessing-the-power-of-scientific-python-to-investigate-the-biogeochemistry-of-the-central-pacific-ocean.html</guid></item><item><title>Inside the Cheeseshop: How Python Packaging Works</title><link>https://pyvideo.org/scipy-2018/inside-the-cheeseshop-how-python-packaging-works.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Questions and confusion about the Python packaging ecosystem abound.
What is this &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; file? What's the difference between wheels and
eggs? Do I use setuptools or distutils? Why should I use twine? Do I put
my projects dependencies in a &lt;tt class="docutils literal"&gt;requirements.txt&lt;/tt&gt; or in &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt;?
How do I just get my module up on PyPI? Should I use &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; or
&lt;tt class="docutils literal"&gt;conda&lt;/tt&gt;? Wait, what is Warehouse? This talk will identify the key
tools one might encounter when trying to distribute Python software,
what they are used for, why they exist, and their history (including
where their weird names come from). In addition, we'll see how they all
work together, what it takes to make them work, and what the future has
in store for Python packaging.Presenter(s): Speaker: Dustin Ingram,
Python Packaging Authority&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/inside-the-cheeseshop-how-python-packaging-works.html</guid></item><item><title>ITK: The Insight Segmentation and Registration Toolkit</title><link>https://pyvideo.org/scipy-2018/itk-the-insight-segmentation-and-registration-toolkit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The National Library of Medicine Insight Toolkit (ITK) is an
open-source, cross-platform system for processing 2D, 3D, or N-D images.
It provides imaging researchers with an extensive suite of leading-edge
algorithms for registering, segmenting, analyzing, and quantifying
images and related data structures. It is used in thousands of research
and commercial applications, from major labs to individual innovators.
We provide updates on exciting new developments in ITK's Python
packaging, Python interface, and NumPy bridge.Presenter(s): Speaker:
Matthew McCormick, Kitware, Inc. Speaker: Francois Budin, Kitware, Inc.
Speaker: Dženan Zukić, Kitware, Inc. Speaker: Deepak Chittajallu,
Kitware, Inc. Speaker: Beatriz Paniagua, Kitware, Inc. Speaker:
Jean-Christophe Fillion-Robin, Kitware, Inc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthew McCormick</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/itk-the-insight-segmentation-and-registration-toolkit.html</guid></item><item><title>Keynote: SciPy 1.0 and Beyond - a Story of Code and Community</title><link>https://pyvideo.org/scipy-2018/keynote-scipy-10-and-beyond-a-story-of-code-and-community.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From humble beginnings in 2001, the SciPy library has grown into one of
the cornerstones of the scientific Python ecosystem, and it recently had
a milestone 1.0 release. In this talk I'd like to explore the road to
that 1.0 release, as well as some questions and ideas about what's next
for the project and community. How do we grow and sustain the project in
the future? What is happening around sustainability of projects in the
ecosystem? And what does this mean for users and aspiring
contributors?Presenter(s): Speaker: Ralf Gommers, FP Innovations, Scion&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ralf Gommers</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/keynote-scipy-10-and-beyond-a-story-of-code-and-community.html</guid><category>keynote</category></item><item><title>Lightning Talks Day 1</title><link>https://pyvideo.org/scipy-2018/lightning-talks-day-1.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/lightning-talks-day-1.html</guid></item><item><title>Pangeo: A Big-data Ecosystem for Scalable Earth System Science</title><link>https://pyvideo.org/scipy-2018/pangeo-a-big-data-ecosystem-for-scalable-earth-system-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pangeo is a community driven effort for open-source big-data in the
Earth System Sciences. In this presentation, we will introduce the
Pangeo community, describe the core software stack that includes Xarray,
Dask, and Jupyter, and provide examples of how the improved integration
of these libraries is facilitating analysis of very large datasets in
both high-performance computing and cloud computing
environments.Presenter(s): Speaker: Joseph Hamman, Research Applications
Laboratory, National Center for Atmospheric Research&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joseph Hamman</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/pangeo-a-big-data-ecosystem-for-scalable-earth-system-science.html</guid></item><item><title>Physics: A Gateway to Bayesian Deep Learning</title><link>https://pyvideo.org/scipy-2018/physics-a-gateway-to-bayesian-deep-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will provide a quick intro to Bayesian Deep Learning from a
physicists perspective. We'll show how to implement state of the art
algorithms by extending open source package, and how critical this
approach is for real-world deployment of machine learning
algorithms.Presenter(s): Speaker: Henri Palacci, Columbia University&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Henri Palacci</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/physics-a-gateway-to-bayesian-deep-learning.html</guid></item><item><title>Practical Applications of Astropy</title><link>https://pyvideo.org/scipy-2018/practical-applications-of-astropy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk intended for the astronomy mini-symposium, I will highlight
how capabilities in Astropy are used to solve computational problems in
two current projects. Coordinate matching, world coordinate systems, and
data manipulation are used heavily in parts of the data system for the
Zwicky Transient Facility, which processes 1 terabyte of images per
night, within 10 minutes of receipt of each exposure. Astropy units and
quantities, and the cosmology module, enabled the rapid development of a
web application for the proposed Origins Space Telescope.Presenter(s):
Speaker: David Shupe, Caltech/IPAC&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Shupe</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/practical-applications-of-astropy.html</guid></item><item><title>Ray: A Distributed Execution Framework for AI</title><link>https://pyvideo.org/scipy-2018/ray-a-distributed-execution-framework-for-ai.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The emergence of a variety of new workloads in machine learning and
artificial intelligence has pushed the limits of existing systems for
distributed computing. We introduce Ray, a new system designed to
support these workloads and to provide the required scalability,
flexibility, and fault tolerance. Ray provides a lightweight API based
on dynamic task graphs and actors to flexibly express a wide range of
applications. We discuss architectural and API design decisions and show
how to build high-performance applications on top of Ray. The code is
available at &lt;a class="reference external" href="https://github.com/ray-project/ray.Presenter(s"&gt;https://github.com/ray-project/ray.Presenter(s&lt;/a&gt;): Speaker:
Robert Nishihara, University of California, Berkeley Speaker: Philipp
Moritz, University of California, Berkeley Speaker: Ion Stoica,
University of California, Berkeley&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Nishihara</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/ray-a-distributed-execution-framework-for-ai.html</guid></item><item><title>Resurrecting Ancient Proteins in Python</title><link>https://pyvideo.org/scipy-2018/resurrecting-ancient-proteins-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;All living organisms evolved from an ancient set of ancestors. That
means, the proteins that make up these organisms also evolved from an
ancient set. Over a few billion years, evolution improvised,
diversified, and specialized these proteins to meet life’s demands. How
did evolution do this? To explore this question, we use Python to infer
ancient, ancestral proteins from modern protein families. We then
synthesize these ancestors in lab and identify key changes that led to
new evolutionary innovations. In this talk, we will resurrect an ancient
protein and trace its evolutionary history in a single Jupyter
Notebook.Presenter(s): Speaker: Zachary Sailer, University of Oregon
Speaker: Jeremy Anderson, University of Oregon&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zachary Sailer</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/resurrecting-ancient-proteins-in-python.html</guid></item><item><title>SatPy: A Python Library for Weather Satellite Processing</title><link>https://pyvideo.org/scipy-2018/satpy-a-python-library-for-weather-satellite-processing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The amount of data sent to earth by meteorological satellites increases
with each new satellite generation. Software used by the scientific
community to interpret the data must be able to handle different file
formats and data types, to resample/interpolate the data, to create RGB
composites, and to write output in many possible formats. To do this
quickly and easily a new python library has been created called SatPy.
This talk will provide a detailed overview of SatPy’s features and how
its simple interfaces can be used as an interactive research tool or in
stable operational processing.Presenter(s): Speaker: David Hoese,
University of Wisconsin - Madison, Space Science and Engineering Center
Speaker: Martin Raspaud, Swedish Meteorological and Hydrological
Institute&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Hoese</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/satpy-a-python-library-for-weather-satellite-processing.html</guid></item><item><title>Scikit-build: A Build System Generator for CPython C/C++/Fortran/Cython Extensions</title><link>https://pyvideo.org/scipy-2018/scikit-build-a-build-system-generator-for-cpython-ccfortrancython-extensions.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We present “Scikit-build”, an improved build system generator for
CPython C/C++/Fortran/Cython extensions. It provides improved support
for additional compilers, build systems, cross compilation, and locating
dependencies and determining their build requirements over
distutils/setuptools. We also describe how ITK and VTK C++ scientific
libraries were updated to make use of scikit-build to ultimately be
published as wheels.Presenter(s): Speaker: Jean- Christophe
Fillion-Robin, Kitware, Inc. Speaker: Matthew McCormick, Kitware, Inc.
Speaker: Omar Padron, Kitware, Inc. Speaker: Max Smolens, Kitware, Inc.
Speaker: Michael Grauer, Kitware, Inc. Speaker: Michael Sarahan,
Anaconda, Inc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jean-Christophe Fillion-Robin</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/scikit-build-a-build-system-generator-for-cpython-ccfortrancython-extensions.html</guid></item><item><title>SciPy Tools Plenary Session Day 1</title><link>https://pyvideo.org/scipy-2018/scipy-tools-plenary-session-day-1.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/scipy-tools-plenary-session-day-1.html</guid></item><item><title>Should this Drug be Approved? A Bayesian’s Answer with Stan</title><link>https://pyvideo.org/scipy-2018/should-this-drug-be-approved-a-bayesians-answer-with-stan.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bayesian hierarchical models can be used for a variety of purposes,
including prediction and causal inference from experimental and
observational studies. The benefits of Bayesian modeling include
uncertainty quantification for all model parameters and predictions, as
well as the ability to interpret the outcome. Unfortunately, Bayesian
inference, the process of fitting such models to datasets, is hard to
implement. Stan is the state-of-the-art, open-source Bayesian inference
engine which makes Bayesian inference much easier to use. We illustrate
this with an application of Bayesian modeling in the field of clinical
research, assessing the safety of approving a drug for market. To do
this, we use PyStan, the Python interface to Stan.Presenter(s): Speaker:
Marianne Corvellec, Data Scientist, Institute for Globally Distributed
Open Research and Education (IGDORE) Speaker: Konstantinos Vamvourellis,
London School of Economics and Political Science&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marianne Corvellec</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/should-this-drug-be-approved-a-bayesians-answer-with-stan.html</guid></item><item><title>Sparse - A More Modern Sparse Array Library</title><link>https://pyvideo.org/scipy-2018/sparse-a-more-modern-sparse-array-library.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Want a more modern sparse array library that follows Numpy array
conventions and can be interfaced with modern libraries like Dask or
XArray? Look no more, because with our new library, that's all possible.
We allow for multidimensional sparse arrays that follow Numpy's array
interface and make using sparse arrays a breeze. We discuss the current
scipy.sparse implementation, its limitations, and why a more modern
sparse array library is needed. Then we talk about our implementation
and how it builds on modern protocols and the methods used to achieve
this. We end with performance evaluation and future
directions.Presenter(s): Speaker: Hameer Abbasi, TU Darmstadt&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hameer Abbasi</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/sparse-a-more-modern-sparse-array-library.html</guid></item><item><title>The Past, Present, and Future of Automated Machine Learning</title><link>https://pyvideo.org/scipy-2018/the-past-present-and-future-of-automated-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Automated Machine Learning (AutoML) has been described as a &amp;quot;quiet
revolution in AI&amp;quot; that is poised to dramatically change the data science
landscape by using AI to automate many of the time-consuming aspects of
applying Machine Learning to real-world problems. Academic researchers,
startups, and tech giants alike have begun developing AutoML methods and
tools ranging from simple open source prototypes to industry-scale
software products. Yet beyond all the hype and vague tech jargon, many
are left wondering: What is AutoML, really? In this talk, I will draw
from my AutoML research experience to discuss the benefits of AutoML and
highlight some promising future directions of the field, including
Python packages and other existing tools that offer AutoML
solutions.Presenter(s): Speaker: Randal Olson, Lead Data Scientist, Life
Epigenetics, Inc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Randal Olson</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/the-past-present-and-future-of-automated-machine-learning.html</guid></item><item><title>Using Python to Assess Serial Holdings Data in the Research Library</title><link>https://pyvideo.org/scipy-2018/using-python-to-assess-serial-holdings-data-in-the-research-library.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Facing increasing demands on physical space, many academic libraries are
investigating large-scale de-duplication of physical collections. These
collection management efforts require trustworthy, complete data and
must consider not just local needs, but shared print retention
commitments, preservation of scarce and at-risk materials, and
continuous access to licensed electronic versions. While common
solutions exist for monographic resources, these questions remain much
harder to answer for serials. The pymarc and pandas libraries offer
effective tools for analyzing bibliographic data to generate “families”
of both print and electronic serial records, and compare holdings of
those titles as part of large-scale de-duplication efforts.Presenter(s):
Speaker: Kelly Thompson, University of Minnesota&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kelly Thompson</dc:creator><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-11:scipy-2018/using-python-to-assess-serial-holdings-data-in-the-research-library.html</guid></item><item><title>Anatomy of Matplotlib (Beginner Level)</title><link>https://pyvideo.org/scipy-2018/anatomy-of-matplotlib-beginner-level.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will be the introduction to Matplotlib. Users will learn
the types of plots and experiment with them. Then the fundamental
concepts and terminologies of Matplotlib are introduced. Next, we will
learn how to change the &amp;quot;look and feel&amp;quot; of plots. The concepts taught in
this tutorial will lay the foundations understanding how to plot using
this essential library.Presenter(s): Speaker: Ben Root, Atmospheric and
Environmental Research, Inc/Matplotlib Speaker: Hannah Aizenman, City
University of New York&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin Root</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/anatomy-of-matplotlib-beginner-level.html</guid></item><item><title>Getting Started with JupyterLab (Beginner Level)</title><link>https://pyvideo.org/scipy-2018/getting-started-with-jupyterlab-beginner-level.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For the last two years the Jupyter team has been working on the new
Jupyter frontend: JupyterLab. While JupyterLab does of course allow the
use of Jupyter Notebooks, it goes beyond the classic Jupyter Notebook by
providing a flexible and extensible web application with a set of
reusable components. Users can arrange multiple notebooks, text editors,
terminals, output areas, and custom components using tabs and
collapsible sidebars. These components are carefully designed to enable
the user to use them together or separately (for example, a user can
send code from a file to a console with a keystroke, or can pop out an
output from a notebook to work with it alone). JupyterLab is based on a
flexible application plugin system provided by PhosphorJS that makes it
easy to customize existing components or extend it with new components.
For example, users can install or write third-party plugins to view
custom file formats, such as GeoJSON, interact with external services,
such as Dask or Apache Spark, or display their data in effective and
useful ways, such as interactive maps, tables, or plots. In this
tutorial we’ll walk users thought the best way to make use of
JupyterLab, how to transition from the “classic” Jupyter Notebook
frontend to JupyterLab, and how to make the best use of the new powerful
features of JupyterLab.Presenter(s): Speaker: Matthias Bussonnier,
Jupyter/Ipython, University of California, Berkeley Speaker: Jason
Grout, Bloomberg LP&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthias Bussonnier</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/getting-started-with-jupyterlab-beginner-level.html</guid></item><item><title>Hands-on Satellite Imagery Analysis</title><link>https://pyvideo.org/scipy-2018/hands-on-satellite-imagery-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Satellite data is more widely available than ever before, and it is now
possible for the public to access sub-weekly and even daily imagery of
the Earth's entire landmass. In this tutorial, you will gain hands-on
experience exploring publicly-available satellite imagery and using
Python tools for geospatial and time-series analysis of medium- and
high-resolution imagery data. At the end of the workshop, you will apply
what you've learned to investigate real-world environmental and
humanitarian challenges. This tutorial is for intermediate Python
developers. It would help if learners attending this workshop also had
some familiarity with map data, but the instructors will not assume
background knowledge of satellite imagery or geo- data tools. Learners
will come away from the workshop with: - a solid understanding of
satellite imagery and geo-data concepts; - strategies for wrangling,
processing, and analyzing satellite imagery using several Python- based
open-source toolkits; - hands-on experience using satellite imagery to
better understand and address real-world challengesPresenter(s):
Speaker: Sara Safavi, Planet Speaker: Dana Bauer, Planet&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sara Safavi</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/hands-on-satellite-imagery-analysis.html</guid></item><item><title>Introduction to Geospatial Data Analysis with Python</title><link>https://pyvideo.org/scipy-2018/introduction-to-geospatial-data-analysis-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to geospatial data analysis in Python,
with a focus on tabular vector data. It is the first part in a series of
two tutorials; this part focuses on introducing the participants to the
different libraries to work with geospatial data and will cover munging
geo-data and exploring relations over space. This includes importing
data in different formats (e.g. shapefile, GeoJSON), visualizing,
combining and tidying them up for analysis, and will use libraries such
as &lt;tt class="docutils literal"&gt;pandas&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;geopandas&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;shapely&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;PySAL&lt;/tt&gt;, or &lt;tt class="docutils literal"&gt;rasterio&lt;/tt&gt;.
The second part will built upon this and focus on more more advanced
geographic data science and statistical methods to gain insight from the
data. No previous experience with those geospatial python libraries is
needed, but basic familiarity with geospatial data and concepts
(shapefiles, vector vs raster data) and pandas will be
helpful.Presenter(s): Speaker: Serge Rey, University of California,
Riverside Speaker: Dani Arribas- Bel, University of Liverpool Speaker:
Joris Van den Bossche, Université Paris- Saclay Center for Data Science
Speaker: Levi Wolf, University of Bristol&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Serge Rey</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/introduction-to-geospatial-data-analysis-with-python.html</guid><category>tutorial</category></item><item><title>Machine Learning with scikit-learn Part 1</title><link>https://pyvideo.org/scipy-2018/machine-learning-with-scikit-learn-part-1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial aims to provide an introduction to machine learning and
scikit- learn &amp;quot;from the ground up&amp;quot;. We will start with core concepts of
machine learning, some example uses of machine learning, and how to
implement them using scikit-learn. Going in detail through the
characteristics of several methods, we will discuss how to pick an
algorithm for your application, how to set its hyper-parameters, and how
to evaluate performance. This is a two part tutorial. Please register
for part one and part two. Prerequisite skills: NumPy, matplotlib
Presenter(s): Speaker: Andreas Mueller, Columbia University Speaker:
Guillaume Lemaitre, INRIA Saclay - Parietal team&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/machine-learning-with-scikit-learn-part-1.html</guid><category>tutorial</category></item><item><title>Machine Learning with scikit-learn Part 2</title><link>https://pyvideo.org/scipy-2018/machine-learning-with-scikit-learn-part-2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial aims to provide an introduction to machine learning and
scikit- learn &amp;quot;from the ground up&amp;quot;. We will start with core concepts of
machine learning, some example uses of machine learning, and how to
implement them using scikit-learn. Going in detail through the
characteristics of several methods, we will discuss how to pick an
algorithm for your application, how to set its hyper-parameters, and how
to evaluate performance. This is a two part tutorial. Please register
for part one and part two. Prerequisite skills: NumPy,
matplotlibPresenter(s): Speaker: Andreas Mueller, Columbia University
Speaker: Guillaume Lemaitre, INRIA Saclay - Parietal team&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/machine-learning-with-scikit-learn-part-2.html</guid><category>tutorial</category></item><item><title>pandas .head() to .tail() (Beginner Level)</title><link>https://pyvideo.org/scipy-2018/pandas-head-to-tail-beginner-level.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to pandas, a library providing data
structures and algorithms for tabular data analysis. It's aimed at
scientists and data analysts new to scientific Python. No previous
experience with pandas is expected. Familiarity with the basics of
Python will be helpful. We'll work through a series of Jupyter notebooks
together, with an emphasis on solving realistic problems as exercises.
We'll cover 1. A definition of tabular data and pandas' data structures
for tabular data 2. How pandas' alignment by row and column labels
simplifies data analysis 3. groupby for analyzing subsets of a table
grouped by some common factor 4. Tidy data: how to structure your data
to facilitate analysis. 5. Performance: How to benchmark and profile
code, and some common pandas performance pitfalls 6. pandas' special
support for time-series data.Presenter(s): Speaker: Dillon Niederhut,
Enthought Speaker: Tom Augspurger, Anaconda, Inc. Speaker: Joris Van den
Bossche, Université Paris-Saclay Center for Data Science&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dillon Niederhut</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/pandas-head-to-tail-beginner-level.html</guid></item><item><title>Scientific MicroPython on Microcontrollers</title><link>https://pyvideo.org/scipy-2018/scientific-micropython-on-microcontrollers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MicroPython (&lt;a class="reference external" href="http://micropython.org/"&gt;http://micropython.org/&lt;/a&gt;) is a FOSS implementation of Python
3 optimised to run on microcontrollers with MHz and tens of Kbytes of
RAM. After a introduction about MicroPython, this tutorial will be a
interactive hands-on using microcontroller boards running MicroPython,
one for each attendee, practicing some scientific tools to process data
from sensor boards, then publish the sensor data on web server running
on the microcontroller or on IoT Cloud. The goal is to show MicroPython
and microcontrollers are also plataforms for scientific computing
applied to Physical Computing (sensors and actuators) and IoT (Internet
of Things). All hardware (microcontroller boards, sensor boards, jumper
cables) will be provided by the presenter. Please bring a micro USB
cable and a computer. Basic familiarity with Python 3 and terminal tools
is required.Presenter(s): Speaker: Roberto Colistete Jr, Federal
University of Espirito Santo, Brazil&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Roberto Colistete Jr</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/scientific-micropython-on-microcontrollers.html</guid></item><item><title>Setting Up Your Own Open Source Project</title><link>https://pyvideo.org/scipy-2018/setting-up-your-own-open-source-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Setting up an open source project with an advanced set of tools is
easier than ever. However, the breadth and complexity of the tools
available can be intimidating to the new user. In this half-day,
intermediate level tutorial, we will interactively walk through the
steps needed to set up an open source project on GitHub in the most
sustainable fashion possible. Topics discussed and covered in a hands-on
fashion include: creating a new repository on GitHub; testing with
PyTest; continuous integration with TravisCI; and online documentation
with Sphinx and ReadTheDocs. The goal of the tutorial is to get
attendees over the initial hump of learning these tools and communicate
some best practices from the world of open source.Presenter(s): Speaker:
Ryan May, UCAR/Unidata Speaker: John Leeman, UCAR/Unidata&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan May</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/setting-up-your-own-open-source-project.html</guid></item><item><title>The Jupyter Interactive Widget Ecosystem</title><link>https://pyvideo.org/scipy-2018/the-jupyter-interactive-widget-ecosystem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter widgets are powerful tools for building user interfaces with
graphical controls such as sliders and text boxes inside a Jupyter
notebook. Interactive widgets can also be rendered in Sphinx
documentation, nbviewer, and static web pages. Jupyter widgets are more
than a collection of controls, they also are a framework that makes it
easy to build custom GUI controls. Examples of custom widget packages
include libraries for interactive 2-D charting (bqplot), 3-D graphics
(pythreejs, ipyvolume), mapping (ipyleaflet), and more.Presenter(s):
Speaker: Matt Craig, Minnesota State University Moorhead Speaker: Jason
Grout, Bloomberg LP Speaker: Sylvain Corlay, QuantStack Speaker: Maarten
Breddels, Kapteyn Astronomical Institute, University of Groningen&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Craig</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/the-jupyter-interactive-widget-ecosystem.html</guid></item><item><title>The Sheer Joy of Packaging</title><link>https://pyvideo.org/scipy-2018/the-sheer-joy-of-packaging.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building packages in Python used to be hard, especially the ones
including compiled extensions. Fortunately, it is getting easier thanks
to efforts in the scientific Python community. However, there are still
a lot of challenges and complexities facing the package builder.There
are at least two major packaging systems (pip/wheel and conda), and lots
of different ways to do work with these systems. This tutorial will
cover packaging from start to finish for both PyPI and conda, including
setup.py, flit, wheels, twine, conda-build, scikit-build, anaconda
cloud, and conda-forge. Particular attention will be paid to critical
details, such as binary compatibility and platform
differences.Presenter(s): Speaker: Michael Sarahan, Anaconda, Inc.
Speaker: Matthew McCormick, Kitware, Inc. Speaker: Jean-Christophe
Fillion-Robin, Kitware, Inc. Speaker: Filipe Fernandes, SECOORA Speaker:
Chris Barker, NOAA Speaker: Matt Craig, Minnesota State University
Moorhead Speaker: Jonathan Helmus, Anaconda, Inc. Speaker: Ray Donnelly,
Anaconda, Inc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Sarahan</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/the-sheer-joy-of-packaging.html</guid><category>tutorial</category></item><item><title>3D Visualization with Mayavi</title><link>https://pyvideo.org/scipy-2018/3d-visualization-with-mayavi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will introduce the participants to 3D visualization using
Mayavi (&lt;a class="reference external" href="https://github.com/enthought/mayavi"&gt;https://github.com/enthought/mayavi&lt;/a&gt;). Mayavi is an Open Source,
Python package for general purpose 3D visualization. Mayavi uses VTK
(&lt;a class="reference external" href="http://www.vtk.org"&gt;http://www.vtk.org&lt;/a&gt;) under the covers and provides a very
Python-friendly API. At the end of the tutorial users will be able to
use Mayavi effectively to produce 3D visualizations and hopefully be
able to represent their data in a suitable format so it may be
visualized with Mayavi/VTK. Prerequisite skills: NumPyPresenter(s):
Speaker: Prabhu Ramachandran, Enthought and IIT Bombay&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Prabhu Ramachandran</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:scipy-2018/3d-visualization-with-mayavi.html</guid><category>tutorial</category></item><item><title>An Introduction to Julia (Beginner Level)</title><link>https://pyvideo.org/scipy-2018/an-introduction-to-julia-beginner-level.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This introductory workshop assumes no prior exposure to Julia. It should
be accessible (and hopefully useful!) to scientists, engineers, and
anyone else with technical computing needs. We will show you why Julia
is special, demonstrate how easy it is to come to Julia from a Python
background, and get you writing your first Julia programs. We will
provide an overview of Julia’s syntax, core language features such as
multiple dispatch, standard library functionality, and package system.
Short interactive exercises woven throughout the tutorial will reinforce
all topics we cover, and afterwards we will integrate your new skills
via hands-on exploration of a few applications.Presenter(s): Speaker:
Jane Herriman, Director of Diversity and Outreach , Julia Computing
Speaker: Sacha Verweij, Stanford University&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jane Herriman</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:scipy-2018/an-introduction-to-julia-beginner-level.html</guid></item><item><title>Bayesian Data Science Two Ways: Simulation and Probabilistic Programming</title><link>https://pyvideo.org/scipy-2018/bayesian-data-science-two-ways-simulation-and-probabilistic-programming.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial, Hugo and Eric will build participants’ knowledge of Bayesian inference, workflows and decision making under uncertainty. We will start with the basics of probability via simulation and analysis of real-world datasets, building up to an understanding of Bayes’ theorem. We will then introduce the use of probabilistic programming to do statistical modelling. Throughout this tutorial, we will use a mixture of instructional time and hands-on time. During instructional time, we will use a variety of datasets to anchor our instruction; during hands-on time, which immediately follow instructional time, our participants will apply the concepts learned to the Darwin’s finches dataset, which will permeate the entire tutorial. For maximal benefit, participants are expected to have experience writing for-loops and working with numpy arrays. The necessary syntax will be introduced during the tutorial, but familiarity will help. No knowledge of statistics is necessary. However, the most important and beneficial prerequisite is a will to learn new things. If you have this quality, you'll definitely get something out of this tutorial!&lt;/p&gt;
&lt;p&gt;Prerequisite skills: NumPy, Pandas, matplotlib&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:scipy-2018/bayesian-data-science-two-ways-simulation-and-probabilistic-programming.html</guid><category>tutorial</category></item><item><title>Getting Started with TensorFlow</title><link>https://pyvideo.org/scipy-2018/getting-started-with-tensorflow.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A friendly introduction to Deep Learning, taught at the beginner level.
We’ll work through introductory exercises across several domains -
including computer vision, natural language processing, and structured
data classification. We’ll introduce TensorFlow - the world’s most
popular open source machine learning library - preview the latest APIs
(including Eager Execution), discuss best practices, and point you to
recommended educational resources you can use to learn more.
Prerequisite skills: NumPyPresenter(s): Speaker: Josh Gordon, Google&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Gordon</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:scipy-2018/getting-started-with-tensorflow.html</guid></item><item><title>Image Analysis in Python with SciPy and scikit-image</title><link>https://pyvideo.org/scipy-2018/image-analysis-in-python-with-scipy-and-scikit-image.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From telescopes to satellite cameras to electron microscopes, scientists
are producing more images than they can manually inspect. This tutorial
will introduce automated image analysis using the idea that &amp;quot;images are
just numpy arrays&amp;quot;. Then we will run through various fundamental image
analysis operations(filters, morphology, segmentation), and finally we
will demonstrate one or two advanced real-world examples. This tutorial
is aimed at people who are familiar with NumPy, SciPy, and Matplotlib,
but it does not require any previous knowledge of image analysis or
image processing.Presenter(s): Speaker: Stéfan van der Walt, University
of California, Berkeley Speaker: Juan Nunez-Iglesias, University of
Melbourne Speaker: Joshua Warner, Core Developer, Scikit
Image/University of Arizona&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéfan van der Walt</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:scipy-2018/image-analysis-in-python-with-scipy-and-scikit-image.html</guid></item><item><title>Information Extraction Using Topic Models</title><link>https://pyvideo.org/scipy-2018/information-extraction-using-topic-models.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Topic Modeling is an information retrieval technique to identify topics
in a large corpus of text documents. This tutorial will guide you
through the process of analyzing your textual data right from
pre-processing raw data - applying topic modeling algorithms -
evaluating manually and automatically - analyzing using visualizations
and its applications in few NLP tasks: Discovering topic correlation
(with dendrograms), Document clustering (demo with Tensorboard),
Document analysis (using word coloring). We will also cover the variants
of topic models like dynamic topic model that learns the evolution of
topics in a corpus collected over different time-stamps, and author
topic model that learns the topic representations of authors in a
corpus.Presenter(s): Speaker: Parul Sethi, University of Delhi&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parul Sethi</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:scipy-2018/information-extraction-using-topic-models.html</guid></item><item><title>Introduction to Numerical Computing with NumPy (Beginner Level)</title><link>https://pyvideo.org/scipy-2018/introduction-to-numerical-computing-with-numpy-beginner-level.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NumPy provides Python with a powerful array processing library and an
elegant syntax that is well suited to expressing computational
algorithms clearly and efficiently. We'll introduce basic array syntax
and array indexing, review some of the available mathematical functions
in NumPy, and discuss how to write your own routines. Along the way,
we'll learn just enough about matplotlib to display results from our
examples.Presenter(s): Speaker: Alexandre Chabot-LeClerc, Enthought&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexandre Chabot-LeClerc</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:scipy-2018/introduction-to-numerical-computing-with-numpy-beginner-level.html</guid></item><item><title>Introduction to Python and Programming (Beginner Level)</title><link>https://pyvideo.org/scipy-2018/introduction-to-python-and-programming-beginner-level.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is a gentle introduction to Python for folks who are
completely new to it and may not have much experience programming. We’ll
work in a Jupyter Notebook, one of the most popular tools in scientific
Python. You’ll learn how to write beautiful Python while practicing
loops, if’s, functions, and usage of Python’s built-in features in a
series of fun, interactive exercises. By the end of the tutorial we
think you’ll be ready to write your own basic Python -- but most
importantly, we want you to learn the form and vocabulary of Python so
that you can understand Python documentation and interpret code written
by others. To continue learning more about Python as it’s applied to
data and science, join our companion tutorial titled Introduction to
Scientific Python.Presenter(s): Speaker: Matt Davis, Clover Health
Speaker: Alyssa Whitwell, Clover Health&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Davis</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:scipy-2018/introduction-to-python-and-programming-beginner-level.html</guid></item><item><title>Network Analysis Made Simple: Network Fundamentals</title><link>https://pyvideo.org/scipy-2018/network-analysis-made-simple-network-fundamentals.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is for Pythonistas who want to understand relationship
problems - as in, data problems that involve relationships between
entities. Participants should already have a grasp of for loops and
basic Python data structures (lists, tuples and dictionaries). By the
end of the tutorial, participants will have learned how to use the
NetworkX package in the Jupyter environment, and will become comfortable
in visualizing large networks using Circos plots. Other plots will be
introduced as well. It will also form the grounding knowledge for Part
II of the tutorial. Prerequisite skills: Pandas, matplotlibPresenter(s):
Speaker: Eric Ma, Novartis Institutes for Biomedical Research Speaker:
Mridul Seth, BITS Pilani KK Birla Goa Campus&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:scipy-2018/network-analysis-made-simple-network-fundamentals.html</guid></item><item><title>Parallelizing Scientific Python with Dask</title><link>https://pyvideo.org/scipy-2018/parallelizing-scientific-python-with-dask.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dask is a flexible tool for parallelizing Python code on a single
machine or across a cluster. It builds upon familiar tools in the SciPy
ecosystem (e.g. NumPy and Pandas) while allowing them to scale across
multiple cores or machines. This tutorial will cover both the high-level
use of dask collections, as well as the low-level use of dask graphs and
schedulers.Presenter(s): Speaker: James Crist, Anaconda, Inc. Speaker:
Martin Durant, Anaconda Inc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Crist</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:scipy-2018/parallelizing-scientific-python-with-dask.html</guid></item><item><title>Software Engineering Techniques (Beginner Level)</title><link>https://pyvideo.org/scipy-2018/software-engineering-techniques-beginner-level.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a user of scientific Python libraries like NumPy, Pandas, and
matplotlib it’s worth asking how the maintainers of those libraries
manage to keep the codebases running quickly and correctly when there
are large codebases, many features, and many contributors. Those
developers have to think deliberately about the design of their code;
they use a number of techniques to make their lives easier, among them
testing, debugging, profiling, and packaging. Exactly as these
techniques are useful to library maintainers, they can also be useful to
researchers, data scientists, and analysts who are trying keep code fast
and correct as it undergoes changes. This tutorial will introduce
attendees to deliberate code design, testing using the pytest framework,
Python’s debugging tools, profiling code to understand performance, and
how to reuse code in multiple places.Presenter(s): Speaker: Matt Davis,
Clover Health Speaker: Alyssa Whitwell, Clover Health&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Davis</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:scipy-2018/software-engineering-techniques-beginner-level.html</guid></item></channel></rss>