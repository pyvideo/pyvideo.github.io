<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_zach-wick.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-07-31T00:00:00+00:00</updated><entry><title>Python + FUSE</title><link href="https://pyvideo.org/pyohio-2013/python-fuse.html" rel="alternate"></link><published>2013-07-28T00:00:00+00:00</published><updated>2013-07-28T00:00:00+00:00</updated><author><name>Zach Wick</name></author><id>tag:pyvideo.org,2013-07-28:pyohio-2013/python-fuse.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;FUSE allows you to fake a filesystem in your userspace without mucking
around in the kernel. This allows you to do things like showing remote
cloud-based backup products as local filesystems. This talk explores
such an implementation for mounting a Copy.com account as a local
filesystem, and addresses some of the common gotchas to help you
implement a FUSE layer for your preferred service.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Making sense of CORS using web.py</title><link href="https://pyvideo.org/pyohio-2015/making-sense-of-cors-using-webpy.html" rel="alternate"></link><published>2015-08-02T00:00:00+00:00</published><updated>2015-08-02T00:00:00+00:00</updated><author><name>Zach Wick</name></author><id>tag:pyvideo.org,2015-08-02:pyohio-2015/making-sense-of-cors-using-webpy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cross-Origin Resource Sharing is the bane of Javascript API clients
existence. It is possible to easily implement CORS support in your
Python server code with just a few simple request headers. Once your API
is talking CORS, you are free from the tyranny of browsers' same-origin
security policies. This talk will explain what CORS is, why should care,
and work through an example using web.py.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>"It will be easy" - The Trials of Updating a Product from Python 2 to 3</title><link href="https://pyvideo.org/pyohio-2016/it-will-be-easy-the-trials-of-updating-a-product-from-python-2-to-3.html" rel="alternate"></link><published>2016-07-31T00:00:00+00:00</published><updated>2016-07-31T00:00:00+00:00</updated><author><name>Zach Wick</name></author><id>tag:pyvideo.org,2016-07-31:pyohio-2016/it-will-be-easy-the-trials-of-updating-a-product-from-python-2-to-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will be a retrospective on what was seemingly a weekend project that turned into an odyssey full of rabbit holes and dead ends. In this talk I'll touch on what was expected, what happened, what you should look out for during your own migrations, and what we learned along the way.&lt;/p&gt;
</summary></entry><entry><title>Sunday Lightning Talks</title><link href="https://pyvideo.org/pyohio-2016/sunday-lightning-talks.html" rel="alternate"></link><published>2016-07-31T00:00:00+00:00</published><updated>2016-07-31T00:00:00+00:00</updated><author><name>Brandon Rhodes</name></author><id>tag:pyvideo.org,2016-07-31:pyohio-2016/sunday-lightning-talks.html</id><summary type="html"></summary><category term="lightning talks"></category></entry></feed>