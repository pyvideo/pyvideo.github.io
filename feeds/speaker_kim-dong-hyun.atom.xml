<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Kim Dong-hyun</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_kim-dong-hyun.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-10-02T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Python Code Review Tips</title><link href="https://pyvideo.org/pycon-korea-2022/python-code-review-tips.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Kim Dong-hyun</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/python-code-review-tips.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Here are some libraries that you can use when you want to suggest opinions as a reviewer during a Python application code review but lack evidence, when you want to provide evidence for changes as a reviewer, or when you want to automatically handle annoying things that need to â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Here are some libraries that you can use when you want to suggest opinions as a reviewer during a Python application code review but lack evidence, when you want to provide evidence for changes as a reviewer, or when you want to automatically handle annoying things that need to be caught during the code review phase. We will learn about dis, a library for analyzing bytecode of Python code, timeit, a library for measuring execution time of Python code snippets, and pre-commit, a git-hook framework that automatically searches for and corrects parts to be caught during code review using git-hook, from the basic usage of pre-commit to how to use it during code review.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Development Method with Python"></category></entry></feed>