<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Miki Tebeka</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_miki-tebeka.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2020-07-23T00:00:00+00:00</updated><subtitle></subtitle><entry><title>IPython: The Productivity Booster</title><link href="https://pyvideo.org/europython-2020/ipython-the-productivity-booster.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Miki Tebeka</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/ipython-the-productivity-booster.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn to be productive with IPython&lt;/p&gt;
&lt;p&gt;IPython seems like a fancy Python shell. Why do we need it when we have PyCharm, VSCode, and other IDEs?&lt;/p&gt;
&lt;p&gt;In this talk you'll learn how to use the power of IPython for rapid development and how you can integrate it with existing …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn to be productive with IPython&lt;/p&gt;
&lt;p&gt;IPython seems like a fancy Python shell. Why do we need it when we have PyCharm, VSCode, and other IDEs?&lt;/p&gt;
&lt;p&gt;In this talk you'll learn how to use the power of IPython for rapid development and how you can integrate it with existing tools. We'll cover magic commands, calling external process, usage of extended history, async/await and more.&lt;/p&gt;
&lt;p&gt;You'll also learn on some popular extension and cool configuration hacks (such as &lt;cite&gt;%autoreload 2&lt;/cite&gt;)&lt;/p&gt;
&lt;p&gt;Since Jupyter is based on IPython, you'll be able to use all of what you
learned in Jupyter Lab/Notebooks as well.&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Development"></category><category term="Ipython"></category></entry><entry><title>All package managers suck, conda sucks less</title><link href="https://pyvideo.org/pycon-israel-2017/all-package-managers-suck-conda-sucks-less.html" rel="alternate"></link><published>2017-06-12T00:00:00+00:00</published><updated>2017-06-12T00:00:00+00:00</updated><author><name>Miki Tebeka</name></author><id>tag:pyvideo.org,2017-06-12:/pycon-israel-2017/all-package-managers-suck-conda-sucks-less.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We'll discuss how to create stable environment using &lt;a class="reference external" href="https://conda.io"&gt;https://conda.io&lt;/a&gt; both for development and production.&lt;/p&gt;
</content><category term="PyCon Israel 2017"></category></entry><entry><title>Writing Command Line Friendly Applications</title><link href="https://pyvideo.org/pycon-israel-2018/writing-command-line-friendly-applications.html" rel="alternate"></link><published>2018-06-04T00:00:00+00:00</published><updated>2018-06-04T00:00:00+00:00</updated><author><name>Miki Tebeka</name></author><id>tag:pyvideo.org,2018-06-04:/pycon-israel-2018/writing-command-line-friendly-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In &amp;quot;The Art of Unix Programming&amp;quot; ESR defines the rule of composition as: Design programs to be connected with other programs.&lt;/p&gt;
&lt;p&gt;We'll discuss how to write applications that are good citizens of the command line. These applications can be show display nice help, accept data from standard input or …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In &amp;quot;The Art of Unix Programming&amp;quot; ESR defines the rule of composition as: Design programs to be connected with other programs.&lt;/p&gt;
&lt;p&gt;We'll discuss how to write applications that are good citizens of the command line. These applications can be show display nice help, accept data from standard input or files, emit only required data to standard output or files and more. We'll show how to use the argparse module to achieve these goals.&lt;/p&gt;
</content><category term="PyCon Israel 2018"></category><category term="command line"></category><category term="argparse"></category></entry><entry><title>Descriptors - Supercharge Your Dot - Miki Tebeka - PyCon Israel 2019</title><link href="https://pyvideo.org/pycon-israel-2019/descriptors-supercharge-your-dot-miki-tebeka-pycon-israel-2019.html" rel="alternate"></link><published>2019-06-03T00:00:00+00:00</published><updated>2019-06-03T00:00:00+00:00</updated><author><name>Miki Tebeka</name></author><id>tag:pyvideo.org,2019-06-03:/pycon-israel-2019/descriptors-supercharge-your-dot-miki-tebeka-pycon-israel-2019.html</id><content type="html"></content><category term="PyCon Israel 2019"></category></entry></feed>