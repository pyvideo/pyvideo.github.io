<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Andrii Soldatenko</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_andrii-soldatenko.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-06-03T00:00:00+00:00</updated><subtitle></subtitle><entry><title>What is the best full text search engine for Python?</title><link href="https://pyvideo.org/europython-2016/what-is-the-best-full-text-search-engine-for-python.html" rel="alternate"></link><published>2016-08-04T00:00:00+00:00</published><updated>2016-08-04T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2016-08-04:/europython-2016/what-is-the-best-full-text-search-engine-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Andrii Soldatenko - What is the best full text search engine for Python?
[EuroPython 2016]
[21 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/what-is-the-best-full-text-search-engine-for-python"&gt;https://ep2016.europython.eu//conference/talks/what-is-the-best-full-text-search-engine-for-python&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Compare full text search engines for Python.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Nowadays we can see lot’s of benchmarks and performance tests of
different web frameworks …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Andrii Soldatenko - What is the best full text search engine for Python?
[EuroPython 2016]
[21 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/what-is-the-best-full-text-search-engine-for-python"&gt;https://ep2016.europython.eu//conference/talks/what-is-the-best-full-text-search-engine-for-python&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Compare full text search engines for Python.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Nowadays we can see lot’s of benchmarks and performance tests of
different web frameworks and Python tools. Regarding to search
engines, it’s difficult to find useful information especially
benchmarks or comparing between different search engines. It’s
difficult to manage what search engine you should select for instance,
ElasticSearch, Postgres Full Text Search or may be Sphinx or Whoosh.
You face a difficult choice, that’s why I am pleased to share with you
my acquired experience and benchmarks and focus on how to compare full
text search engines for Python.&lt;/p&gt;
</content><category term="EuroPython 2016"></category></entry><entry><title>Graphs with Neo4j and Python</title><link href="https://pyvideo.org/kyivpy/graphs-with-neo4j-and-python.html" rel="alternate"></link><published>2016-12-03T00:00:00+00:00</published><updated>2016-12-03T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2016-12-03:/kyivpy/graphs-with-neo4j-and-python.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kyiv.py #19&lt;/p&gt;
</content><category term="Kyiv.py"></category></entry><entry><title>Competitive programming using Python</title><link href="https://pyvideo.org/odessapy-2018/competitive-programming-using-python.html" rel="alternate"></link><published>2018-09-30T00:00:00+00:00</published><updated>2018-09-30T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2018-09-30:/odessapy-2018/competitive-programming-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Competitive programming is really fantastic discipline to improve your programming and math skills. The idea is very simple given well-known computer science problems, solve them as quickly as possible. From another point, these challenges have been used frequently in the initial coding interview tasks. Usually all participants uses C …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Competitive programming is really fantastic discipline to improve your programming and math skills. The idea is very simple given well-known computer science problems, solve them as quickly as possible. From another point, these challenges have been used frequently in the initial coding interview tasks. Usually all participants uses C/C++/Java, but last decade we can see increasing trend of contestants who uses Python in programming challenges.&lt;/p&gt;
&lt;p&gt;In this talk I’ll show you how to start compete using Python, I’ll share couple personal tips &amp;amp; tricks how to prepare and start to take part into programming contests using Python. I’ll show you how to motivate yourself to practice and how to define of class of problem and how to try to solve it. I’ll demonstrate you some limits of Python and how to avoid it to make correct and fast solutions. I’ll discuss with you how to master the art of testing and how to crack and generate hidden test cases and boundaries. Also I’ll explain how to quickly estimate complexity of you solution, without too many proofs and math to get desired AC (Accepted).&lt;/p&gt;
&lt;p&gt;It takes a long time to become a good competitive programmer, but it is also an opportunity to learn a lot.&lt;/p&gt;
</content><category term="OdessaPy 2018"></category></entry><entry><title>Building social network with Neo4j and Python - Andrii Soldatenko</title><link href="https://pyvideo.org/pycaribbean-2017/building-social-network-with-neo4j-and-python-andrii-soldatenko.html" rel="alternate"></link><published>2017-02-18T00:00:00+00:00</published><updated>2017-02-18T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2017-02-18:/pycaribbean-2017/building-social-network-with-neo4j-and-python-andrii-soldatenko.html</id><content type="html"></content><category term="PyCaribbean 2017"></category></entry><entry><title>Django ORM crash test - Andrii Soldatenko</title><link href="https://pyvideo.org/pycaribbean-2017/django-orm-crash-test-andrii-soldatenko.html" rel="alternate"></link><published>2017-02-18T00:00:00+00:00</published><updated>2017-02-18T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2017-02-18:/pycaribbean-2017/django-orm-crash-test-andrii-soldatenko.html</id><content type="html"></content><category term="PyCaribbean 2017"></category></entry><entry><title>PyCon Balkan Belgrade 2018 - Day 3 - LIVE STREAM</title><link href="https://pyvideo.org/pycon-balkan-belgrade-2018/pycon-balkan-belgrade-2018-day-3-live-stream.html" rel="alternate"></link><published>2018-11-18T00:00:00+00:00</published><updated>2018-11-18T00:00:00+00:00</updated><author><name>Ridhwana Khan</name></author><id>tag:pyvideo.org,2018-11-18:/pycon-balkan-belgrade-2018/pycon-balkan-belgrade-2018-day-3-live-stream.html</id><content type="html"></content><category term="PyCon Balkan Belgrade 2018"></category></entry><entry><title>PyCon Balkan Belgrade 2018 - LIVE STREAM</title><link href="https://pyvideo.org/pycon-balkan-belgrade-2018/pycon-balkan-belgrade-2018-live-stream.html" rel="alternate"></link><published>2018-11-16T00:00:00+00:00</published><updated>2018-11-16T00:00:00+00:00</updated><author><name>Luka Kladarić</name></author><id>tag:pyvideo.org,2018-11-16:/pycon-balkan-belgrade-2018/pycon-balkan-belgrade-2018-live-stream.html</id><content type="html"></content><category term="PyCon Balkan Belgrade 2018"></category></entry><entry><title>Crash test of Django ORM</title><link href="https://pyvideo.org/pycon-belarus-2017/crash-test-of-django-orm.html" rel="alternate"></link><published>2017-02-04T00:00:00+00:00</published><updated>2017-02-04T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2017-02-04:/pycon-belarus-2017/crash-test-of-django-orm.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The world is swimming in articles and books about Django and Django ORM
itself. All this sources cover only basic use cases of Django ORM
comparing to real world examples. This talk is dedicated to the
proposition to crash test Django ORM 80% of functionalities in 20% of
the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The world is swimming in articles and books about Django and Django ORM
itself. All this sources cover only basic use cases of Django ORM
comparing to real world examples. This talk is dedicated to the
proposition to crash test Django ORM 80% of functionalities in 20% of
the time. Also I’m going to show the important features and capabilities
of Django ORM compare to most of SQL features. Traditionally, ORM is
presented in a “bottom-up” fashion, but I would like to propose
approach, on the other hand, is “top-down”. We begin by identifying a
rather short list of standard questions, or precisely types of
questions, that are often asked of relations databases. We then show how
these standard questions are posted in Django ORM, introducing and
motivating the use of its capabilities and features as they become
relevant.&lt;/p&gt;
</content><category term="PyCon Belarus 2017"></category></entry><entry><title>Ethereum Under the Microscope</title><link href="https://pyvideo.org/pycon-belarus-2018/ethereum-under-the-microscope.html" rel="alternate"></link><published>2018-02-24T00:00:00+00:00</published><updated>2018-02-24T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2018-02-24:/pycon-belarus-2018/ethereum-under-the-microscope.html</id><content type="html"></content><category term="PyCon Belarus 2018"></category></entry><entry><title>Building Serverless applications with Python</title><link href="https://pyvideo.org/pycon-israel-2017/building-serverless-applications-with-python.html" rel="alternate"></link><published>2017-06-12T00:00:00+00:00</published><updated>2017-06-12T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2017-06-12:/pycon-israel-2017/building-serverless-applications-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless applications in Python sounds, strange isn’t? In this talk I’ll explain how to build not only crop images or select data from DynamoDB, but build real application, what kind of troubles are we should expect, how to make decision is your task fit into serverless architecture …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless applications in Python sounds, strange isn’t? In this talk I’ll explain how to build not only crop images or select data from DynamoDB, but build real application, what kind of troubles are we should expect, how to make decision is your task fit into serverless architecture in Python or may be you should use, general approach. How fast serverless applications written in Python, and more important how to scale it.&lt;/p&gt;
</content><category term="PyCon Israel 2017"></category><category term="serverless"></category></entry><entry><title>Crash test of Django ORM</title><link href="https://pyvideo.org/pycon-italia-2017/crash-test-of-django-orm.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2017-04-09:/pycon-italia-2017/crash-test-of-django-orm.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The world is swimming in articles and books about Django and Django ORM
itself. All this sources cover only basic use cases of Django ORM
comparing to real world examples. This talk is dedicated to the
proposition to crash test Django ORM 80% of functionalities in 20% of
the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The world is swimming in articles and books about Django and Django ORM
itself. All this sources cover only basic use cases of Django ORM
comparing to real world examples. This talk is dedicated to the
proposition to crash test Django ORM 80% of functionalities in 20% of
the time. Also I’m going to show the important features and capabilities
of Django ORM compare to most of SQL features. Traditionally, ORM is
presented in a “bottom-up” fashion, but I would like to propose
approach, on the other hand, is “top-down”. We begin by identifying a
rather short list of standard questions, or precisely types of
questions, that are often asked of relations databases. We then show how
these standard questions are posted in Django ORM, introducing and
motivating the use of its capabilities and features as they become
relevant.&lt;/p&gt;
</content><category term="PyCon Italia 2017"></category><category term="django-orm"></category><category term="performance"></category><category term="postgresql"></category><category term="python3"></category><category term="django"></category></entry><entry><title>Building Serverless applications with Python</title><link href="https://pyvideo.org/pycon-italia-2017/building-serverless-applications-with-python.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2017-04-08:/pycon-italia-2017/building-serverless-applications-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless applications in Python sounds, strange isn’t? In this talk
I’ll explain how to build not only crop images or select data from
DynamoDB, but build real application, what kind of troubles are we
should expect, how to make decision is your task fit into serverless
architecture …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless applications in Python sounds, strange isn’t? In this talk
I’ll explain how to build not only crop images or select data from
DynamoDB, but build real application, what kind of troubles are we
should expect, how to make decision is your task fit into serverless
architecture in Python or may be you should use, general approach. How
fast serverless applications written in Python, and more important how
to scale it.&lt;/p&gt;
</content><category term="PyCon Italia 2017"></category><category term="serverless"></category><category term="aws"></category><category term="lambda-functions"></category><category term="python3"></category></entry><entry><title>Debugging asynchronous programs in Python</title><link href="https://pyvideo.org/pycon-italia-2022/debugging-asynchronous-programs-in-python.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/debugging-asynchronous-programs-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Debugging asynchronous programs in Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Recently the interest in asynchronous programming has grown
dramatically. Unfortunately, asynchronous programs do not always have
reproducible behavior. Even when they are run with the same inputs,
their results can be radically different. In this talk I’ll show you
different …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Debugging asynchronous programs in Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Recently the interest in asynchronous programming has grown
dramatically. Unfortunately, asynchronous programs do not always have
reproducible behavior. Even when they are run with the same inputs,
their results can be radically different. In this talk I’ll show you
different approaches on how to debug asynchronous programs in Python.
Luckily, when it comes to debugging asynchronous applications in python,
we have a couple of options to consider. The writers of the asyncio
module have very kindly provided a debug mode, which is quite powerful
and can really aid us in our debugging adventures without the overhead
of modifying the system’s code base too dramatically. In particular I’ll
show you what asyncio debug mode means for developers, and how to source
tracebacks for unhandled exceptions in futures. Also how to detect
accidental blocking for I/O. We discuss how to monitor the asyncio event
loop and collect metrics in statsD. Finally we discuss monitor and cli
capabilities for asyncio applications based on aiomonitor and
aioconsole. Also we discuss how asynchronous python works in REPL via
autoawait based on ipython and how to do it in vanilla python REPL.&lt;/p&gt;
&lt;p&gt;Speaker: Andrii Soldatenko&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="asyncio"></category><category term="cpython"></category><category term="debugging"></category></entry><entry><title>Building social network with Neo4j and Python</title><link href="https://pyvideo.org/pycon-russia-2016/building-social-network-with-neo4j-and-python.html" rel="alternate"></link><published>2016-07-03T00:00:00+00:00</published><updated>2016-07-03T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2016-07-03:/pycon-russia-2016/building-social-network-with-neo4j-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Social phenomena is coming. We have lot’s of social applications that we are using every day, let’s say Facebook, twitter, Instagram. Lot’s of such kind apps based on social graph and graph theory. I would like to share my knowledge and expertise about how to work …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Social phenomena is coming. We have lot’s of social applications that we are using every day, let’s say Facebook, twitter, Instagram. Lot’s of such kind apps based on social graph and graph theory. I would like to share my knowledge and expertise about how to work with graphs and build large social graph as engine for Social network using python and Graph databases. We'll compare SQL and NoSQL approaches for friends relationships.&lt;/p&gt;
</content><category term="PyCon Russia 2016"></category></entry></feed>