<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 07 Dec 2019 00:00:00 +0000</lastBuildDate><item><title>Becoming a Data Head, a reflection on the trade offs and decision points in build a data team</title><link>https://pyvideo.org/pydata-austin-2019/becoming-a-data-head-a-reflection-on-the-trade-offs-and-decision-points-in-build-a-data-team.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Keynote&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Terrel</dc:creator><pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-12-07:pydata-austin-2019/becoming-a-data-head-a-reflection-on-the-trade-offs-and-decision-points-in-build-a-data-team.html</guid><category>Management</category></item><item><title>Sustainable Open Source Community with NumFOCUS</title><link>https://pyvideo.org/scipy-2019/sustainable-open-source-community-with-numfocus.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Terrel</dc:creator><pubDate>Sat, 13 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-13:scipy-2019/sustainable-open-source-community-with-numfocus.html</guid></item><item><title>Building an Open Platform for Sustaining Data Science Innovation: A Tour of NumFOCUS Projects</title><link>https://pyvideo.org/pydata-la-2018/building-an-open-platform-for-sustaining-data-science-innovation-a-tour-of-numfocus-projects.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NumFOCUS currently represents 26 sponsored and 24 affiliated open
scientific coding projects. I present the various projects and argue
that we have inadvertently created one of the most successful data
science platforms in existence.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Terrel</dc:creator><pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-23:pydata-la-2018/building-an-open-platform-for-sustaining-data-science-innovation-a-tour-of-numfocus-projects.html</guid></item><item><title>Dev Ops meets Data Science Taking models from prototype to production with Docker</title><link>https://pyvideo.org/pydata-dc-2016/dev-ops-meets-data-science-taking-models-from-prototype-to-production-with-docker.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;We present the evolution of a model to a production API that can scale to large e-commerce needs. On the journey we discuss metrics of success and how to use the Kubernetes cluster manager and associated tools for deploy. In addition to the use of these tools we highlight how to make use of the cluster management system for further testing and experimentation with your models.&lt;/p&gt;
&lt;p&gt;The chasm between data science and dev ops is often wide and impenetrable, but the two fields have more in common than meets the eye. Every data scientist will be able to lean in and help their career by investing in a basic understanding the basic principles of dev ops. In this talk I present the notions of service level indicators, objectives, and agreements. I cover the rigorous monitoring and testing of services. Finally we demonstrate how to build a basic data science workflow and push to production level APIs with Docker and Kubernetes.&lt;/p&gt;
&lt;p&gt;Kubernetes is an opinionated container cluster manager with an easy to use, robust interface. It can be use on very small and very large clusters. Docker is a container system that allows one to build code in an isolated environment. Paired with a container manager such as Kubernetes we are able to manage millions of instances as needed for a production deployment. These tools are two of many different options but are considered among the best open source solutions available.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Terrel</dc:creator><pubDate>Sun, 09 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-09:pydata-dc-2016/dev-ops-meets-data-science-taking-models-from-prototype-to-production-with-docker.html</guid><category>Data</category><category>data science</category><category>docker</category><category>models</category><category>science</category></item><item><title>PyData 101: Essential data science skills for every programmer, from data to model to visualization</title><link>https://pyvideo.org/pycon-us-2016/pydata-101-essential-data-science-skills-for-every-programmer-from-data-to-model-to-visualization.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speakers: Andy Terrel, Christine Doig&lt;/p&gt;
&lt;p&gt;Data Science is fun and with the PyData toolset something you can start to build with in an afternoon. Join us as we start with a few datasets, learn how to munge, model, and materialize into simple web applications for predictions. At the end of the day you will come away with a solid understanding of the PyData ecosystem and tools used everyday by data scientists.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Terrel</dc:creator><pubDate>Sun, 29 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-29:pycon-us-2016/pydata-101-essential-data-science-skills-for-every-programmer-from-data-to-model-to-visualization.html</guid></item><item><title>Domain Specific Languages for Partial Differential Equations using Ignition</title><link>https://pyvideo.org/scipy-2012/domain-specific-languages-for-partial-differentia.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As scientific computing pushes towards extreme scales, the programming
wall is becoming more apparent. For algorithms to scale on new
architectures, they often must be rewritten accounting for completely
different performance characteristics. A handful of the communities
fastest codes have already turned to automatic code generation to tackle
these issues. Code generation gives a user the ability to use the
expressiveness of a domain specific language and promises for better
portability as architectures rapidly change.&lt;/p&gt;
&lt;p&gt;In this presentation, I will show Ignition, a project for creating
numerical code generators. Python and SymPy make exceptional languages
for developing these code generators in a way that domain experts can
understand and manipulate. I show examples how Ignition can generate
several different parts of geophysical simulations.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Terrel</dc:creator><pubDate>Wed, 18 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-18:scipy-2012/domain-specific-languages-for-partial-differentia.html</guid><category>Geophysics Mini-Symposia</category></item><item><title>Performance Python Panel Discussion</title><link>https://pyvideo.org/scipy-2012/performance-python-panel-discussion.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Travis Oliphant (Continuum Analytics), Kurt Smith (Enthought) and Jeff
Bezanson (MIT, Julia author) discuss Python performance issues. Andy
Terrel (UT/TACC) is the moderator.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Terrel</dc:creator><pubDate>Wed, 18 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-18:scipy-2012/performance-python-panel-discussion.html</guid><category>Plenary</category></item><item><title>Reproducible, Relocatable, Customizable Builds and Packaging with HashDist Part1</title><link>https://pyvideo.org/scipy-2014/reproducible-relocatable-customizable-builds-an.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk introduces HashDist, a critical component of the scientific
software development workflow. HashDist enables highly customizable,
source-driven, and reproducible builds for scientific software stacks.
HashDist builds can be made relocatable, allowing the easy
redistribution of binaries on all three major operating systems as well
as cloud and supercomputing platforms.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Developing scientific software is a continuous balance between not
reinventing the wheel and getting fragile codes to interoperate with one
another. Binary software distributions such as Anaconda provide a robust
starting point for many scientific software packages, but this solution
alone is insufficient for many scientific software developers. HashDist
provides a critical component of the development workflow, enabling
highly customizable, source-driven, and reproducible builds for
scientific software stacks, available from both the IPython Notebook and
the command line.&lt;/p&gt;
&lt;p&gt;To address these issues, the Coastal and Hydraulics Laboratory at the US
Army Engineer Research and Development Center has funded the development
of HashDist in collaboration with Simula Research Laboratories and the
University of Texas at Austin. HashDist is motivated by a functional
approach to package build management, and features intelligent caching
of sources and builds, parametrized build specifications, and the
ability to interoperate with system compilers and packages. HashDist
enables the easy specification of &amp;quot;software stacks&amp;quot;, which allow both
the novice user to install a default environment and the advanced user
to configure every aspect of their build in a modular fashion. As an
advanced feature, HashDist builds can be made relocatable, allowing the
easy redistribution of binaries on all three major operating systems as
well as cloud, and supercomputing platforms. As a final benefit, all
HashDist builds are reproducible, with a build hash specifying exactly
how each component of the software stack was installed.&lt;/p&gt;
&lt;p&gt;This talk will feature an introduction to the problem of packaging
Python-based scientific software, a discussion of the basic tools
available to scientific Python developers, and a detailed discussion and
demonstration of the HashDist package build manager.&lt;/p&gt;
&lt;p&gt;The HashDist documentation is available from:
&lt;a class="reference external" href="http://hashdist.readthedocs.org/en/latest/"&gt;http://hashdist.readthedocs.org/en/latest/&lt;/a&gt; HashDist is currently hosted
at: &lt;a class="reference external" href="https://github.com/hashdist/hashdist"&gt;https://github.com/hashdist/hashdist&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Terrel</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-09:scipy-2014/reproducible-relocatable-customizable-builds-an.html</guid><category>packaging</category><category>reproducible research</category></item><item><title>You Win or You SciPy</title><link>https://pyvideo.org/scipy-2014/you-win-or-you-scipy.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Reflections on the State of Scientific Python&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is currently one of the most popular programming languages and it
seems that that Scientific Python has truly hit its stride in recent
years. With fame comes a deluge of users, but not necessarily any more
developers. Scientific Python is often held up as one of the core
strengths of the Python language. Why is this so? And how much does it
actually help us? This talk intends to be a frank discussion on the
great parts of the SciPy community and the parts that need work.&lt;/p&gt;
&lt;p&gt;As a confederation of packages and projects, there are several issues
that affect everyone. Sometimes these issues fall through the cracks and
other times they are vigorously tackled head on. In either case, I posit
that greater communication about these global topics is necessary to
support and scale to the next wave of SciPy users and developers.&lt;/p&gt;
&lt;p&gt;Points of discussion in this talk may include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Packaging,&lt;/li&gt;
&lt;li&gt;Education,&lt;/li&gt;
&lt;li&gt;Matplotlib - aged or awesome,&lt;/li&gt;
&lt;li&gt;Competition from other languages,&lt;/li&gt;
&lt;li&gt;Diversity,&lt;/li&gt;
&lt;li&gt;Employing our own,&lt;/li&gt;
&lt;li&gt;Interfacing with the broader Python community,&lt;/li&gt;
&lt;li&gt;The legal status of projects, and&lt;/li&gt;
&lt;li&gt;Maintaining critical packages in the ecosystem (when devs have moved
on).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Historically, the SciPy conference has not had many overview talks,
talks about the community itself, what we are doing right, and what we
are doing wrong.&lt;/p&gt;
&lt;p&gt;They were often relegated to keynotes if they were present at all. This
talk is a boots-on-the-ground attempt to rectify that.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Terrel</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-09:scipy-2014/you-win-or-you-scipy.html</guid></item><item><title>R0 DAY03-K2 Andy Terrel (PyCon APAC 2015)</title><link>https://pyvideo.org/pycon-apac-2015/r0-day03-k2-andy-terrel-pycon-apac-2015.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Andy Terrel&lt;/p&gt;
&lt;p&gt;Andy is a computational scientist with experience implementing distributed, large data applications. In his research, he is known for creating novel algorithms to speed implementations of mathematical models on the world's largest supercomputers.&lt;/p&gt;
&lt;p&gt;Andy received his Computer Science PhD at the University of Chicago in 2010. He has held research positions at Argonne National Lab, Sandia National Lab, Institute of Computational Engineering and Sciences at The University of Texas-Austin, and the Texas Advanced Computing Center. In industry, Andy served as lead developer at Kove, Inc. during its early stages, where he helped bring a record-breaking SAN disk array to market.&lt;/p&gt;
&lt;p&gt;Andy is a passionate advocate for open source scientific codes. To this end, he is a board member of the NumFOCUS foundation and has been involved in the wider scientific Python community since 2006. Andy has contributed to numerous projects in the scientific stack and helps push for data to become a first class object for scientists worldwide.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tw.pycon.org/2015apac/zh/program/keynote-speaker/"&gt;https://tw.pycon.org/2015apac/zh/program/keynote-speaker/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Terrel</dc:creator><pubDate>Thu, 27 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-27:pycon-apac-2015/r0-day03-k2-andy-terrel-pycon-apac-2015.html</guid></item><item><title>Lightning Talks - Friday evening</title><link>https://pyvideo.org/pycon-us-2013/friday-evening-lightning-talks.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Lightning talks from Friday evening.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=1vui-LupKJI#t=0m"&gt;00:00&lt;/a&gt; - Intro to Lightning Talks - MC Larry Hasting&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=1vui-LupKJI#t=1m56s"&gt;01:56&lt;/a&gt; - Instrumental - Matthew J Desmarais&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=1vui-LupKJI#t=7m14s"&gt;07:14&lt;/a&gt; - Statvent - Christian Wyglendowski&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=1vui-LupKJI#t=12m4s"&gt;12:04&lt;/a&gt; - Switchboard - Kyle Adams&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=1vui-LupKJI#t=16m14s"&gt;16:14&lt;/a&gt; - hy: a lisp variant - Paul Tag&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=1vui-LupKJI#t=20m40s"&gt;20:40&lt;/a&gt; - 5 packages you need to know - Łukasz Langa&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=1vui-LupKJI#t=26m24s"&gt;26:24&lt;/a&gt; - The future of Linux containers - Solomon
Hykes&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=1vui-LupKJI#t=32m8s"&gt;32:08&lt;/a&gt; - SciPy 2013 - Andy Terrel, Anthony Scopatz&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=1vui-LupKJI#t=35m39s"&gt;35:39&lt;/a&gt; - BirdFish - Preston Holmes&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=1vui-LupKJI#t=41m20s"&gt;41:20&lt;/a&gt; - Julython - Robert Myers&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=1vui-LupKJI#t=44m20s"&gt;44:20&lt;/a&gt; - CLDR: Common locale data repository - Martin
von Löwis&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=1vui-LupKJI#t=48m49s"&gt;48:49&lt;/a&gt; - Spine demo and Python port of runtime - Terry
Simons&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">MC Larry Hasting</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-03-15:pycon-us-2013/friday-evening-lightning-talks.html</guid><category>lightning talks</category></item><item><title>Python beyond the CPU</title><link>https://pyvideo.org/pycon-us-2013/python-beyond-the-cpu.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Accelerators are the hottest tool in high performance computing but
applicable to all fields. We present how to use Python's amazing ability
to abstract away the low-level boiler-plate code turning accelerators
from an exotic curiosity to a daily tool.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Terrel</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-03-13:pycon-us-2013/python-beyond-the-cpu.html</guid><category>tutorial</category></item></channel></rss>