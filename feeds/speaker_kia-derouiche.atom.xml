<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_kia-derouiche.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-10-18T00:00:00+00:00</updated><entry><title>Pendule mécanique, inertie, mouvements de robot: une modélisation de la mécanique avec SymPy</title><link href="https://pyvideo.org/pycon-fr-2015/pendule-mecanique-inertie-mouvements-de-robot-une-modelisation-de-la-mecanique-avec-sympy.html" rel="alternate"></link><published>2015-10-18T00:00:00+00:00</published><updated>2015-10-18T00:00:00+00:00</updated><author><name>K.I.A Derouiche</name></author><id>tag:pyvideo.org,2015-10-18:pycon-fr-2015/pendule-mecanique-inertie-mouvements-de-robot-une-modelisation-de-la-mecanique-avec-sympy.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Dans cet exposé, nous parlerons et présenterons sympy.physics.mechanics
et sympy.physics.vector deux modules de la bibliothèque symbolique SymPy
et PyDy (Multibody Dynamics) ensembles d'outils fournissant des méthodes
et techniques pour l’enseignement et la recherche en physique,le
contrôle optimal et l'ingénierie.Quelques exemples concrets
d'utilisation vous seront présentés.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;SymPy.physics.mechanics&lt;/strong&gt; et &lt;strong&gt;SymPy.physics.vector&lt;/strong&gt;, modules de la
bibliothèque symbolique SymPy, contiennent de nombreuses classes et
méthodes de mécanique classique (cinématique, manipulations
vectorielles, solides et points matériels, approches variationnelles,
espace de configuration, etc.). Ces deux modules constituent le noyau de
PyDy (Multibody Dynamics) qui est un outil combinant à la fois NumPy,
SciPy et IPython en fournissant des méthodes et techniques pour
l’enseignement, la recherche en physique, la cinématique en robotique,
la navigation des vaisseaux spatiaux et des machines de fabrications
pour l'industrie.&lt;/p&gt;
&lt;p&gt;Pour un développeur d'application scientifique , un étudiant ou un
chercheur, les avantages sont nombreux : l'accessibilité des sources.
L'approche symbolique et numérique rend le calcul beaucoup plus facile
pour de nombreux systèmes dynamiques. Les avantages pédagogiques sont
aussi nombreux : il sera également l'occasion de voir que, en apprenant
SymPy, Numpy et Scipy, on apprend l'algorithmique numérique et Python.
Cette présentation montrera la facilité de modéliser des systèmes
dynamiques à partir d'exemples concrets. SymPy permettant de tout
connecter, PyDy, une boite à outil incluent du code pour la simulation
et la visualisation, IPython notebook interagissent pour la publication
des données et du code.&lt;/p&gt;
</summary></entry></feed>