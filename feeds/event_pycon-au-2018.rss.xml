<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 26 Aug 2018 00:00:00 +0000</lastBuildDate><item><title>A guided tour of Python logging</title><link>https://pyvideo.org/pycon-au-2018/a-guided-tour-of-python-logging.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Logging is a tremendously powerful tool in monitoring and debugging, but many people avoid it in Python, feeling it's too complex.
Come with me as we explore what's going on, and hopefully become better friends with this wonderful part of stdlib.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Curtis Maloney</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/a-guided-tour-of-python-logging.html</guid></item><item><title>A Web without JavaScript</title><link>https://pyvideo.org/pycon-au-2018/a-web-without-javascript.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the browser, you can use any programming language you want... as long as it's JavaScript.&lt;/p&gt;
&lt;p&gt;But what if you want to use a different language? In this talk, you'll learn how you can break out of the monolingual environment provided by the browser, and use Python (or any other language) instead.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Russell Keith-Magee</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/a-web-without-javascript.html</guid></item><item><title>Accessing and analysing your own social media data</title><link>https://pyvideo.org/pycon-au-2018/accessing-and-analysing-your-own-social-media-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What information do social media websites really collect and store about you? I will show you how to access that data from a few different social media pages and analyse it for your own use, even if you've never used python data analytics tools before!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caitlin Macleod</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/accessing-and-analysing-your-own-social-media-data.html</guid></item><item><title>Be a brilliant mentor</title><link>https://pyvideo.org/pycon-au-2018/be-a-brilliant-mentor.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You are ready to be a brilliant mentor.&lt;/p&gt;
&lt;p&gt;This talk is for anyone that wants to be great at supporting other developers. This talk also discusses how mentoring trains core skills such as communication and empathy.&lt;/p&gt;
&lt;p&gt;This talk provides actionable advice for effective mentoring and successful workshops.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Donna Zhou</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/be-a-brilliant-mentor.html</guid></item><item><title>Colossal Cave Adventure in Python... in the browser!</title><link>https://pyvideo.org/pycon-au-2018/colossal-cave-adventure-in-python-in-the-browser.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn about 36-bit integers and writing interpreters in Python!&lt;/p&gt;
&lt;p&gt;Colossal Cave (Adventure) is the original text adventure, written in FORTRAN IV. We explore using software archeology to write a Python interpreter for FORTRAN.  We use BeeWare's Batavia JS Python interpreter to run in the browser.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Swenson</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/colossal-cave-adventure-in-python-in-the-browser.html</guid></item><item><title>Conference Close</title><link>https://pyvideo.org/pycon-au-2018/conference-close.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Closing ceremony&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/conference-close.html</guid></item><item><title>Create and Watch Kubernetes Resources With Python</title><link>https://pyvideo.org/pycon-au-2018/create-and-watch-kubernetes-resources-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A practical guide to using the Kubernetes API from Python in production.&lt;/p&gt;
&lt;p&gt;Batteries are included: Python code, service account manifests, Dockerfile and
all commands to deploy directly to Google Kubernetes Engine (no affiliation).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Oliver Nagy</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/create-and-watch-kubernetes-resources-with-python.html</guid></item><item><title>FP demystified</title><link>https://pyvideo.org/pycon-au-2018/fp-demystified.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever eavesdropped on FP developers talking about programming and wondered which planet you landed on? I attended LambdaJam 2018 and felt your pain! Let's demystify Either, Semigroups, Monoids, Functors, Monads, Traversable, Natural transformations etc. by implementing them in Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eugene Van den Bulke</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/fp-demystified.html</guid></item><item><title>Guide to your own artificial intelligence application in 3 easy steps</title><link>https://pyvideo.org/pycon-au-2018/guide-to-your-own-artificial-intelligence-application-in-3-easy-steps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What do you think of when you hear “artificial intelligence”? Perhaps self-driving cars, autonomous robots and Siri, Alexa or Google Home? But it doesn’t have to be that complex. You can build a powerful image classification model within a topic that inspires and interests you - with 3 easy steps.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Norah Klintberg Sakal</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/guide-to-your-own-artificial-intelligence-application-in-3-easy-steps.html</guid></item><item><title>Hello to the World in 8 Web Frameworks (Micro, Batteries Included &amp; Async)</title><link>https://pyvideo.org/pycon-au-2018/hello-to-the-world-in-8-web-frameworks-micro-batteries-included-async.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A Phileas Fogg inspired tour of 8 frameworks&lt;/p&gt;
&lt;p&gt;&amp;quot;Had he programmed? It was likely, for no one seemed to know web frameworks more familiarly; there was no framework so obscure that he did not appear to have an intimate acquaintance with it. He must have developed in everything, at least in the spirit.&amp;quot;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aaron Bassett</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/hello-to-the-world-in-8-web-frameworks-micro-batteries-included-async.html</guid></item><item><title>How To Publish A Package On PyPI</title><link>https://pyvideo.org/pycon-au-2018/how-to-publish-a-package-on-pypi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Starting with nothing, we'll build a package and publish it on PyPI using current best practices! Learn how to structure, document and test your project on different platforms. Discover the difference between &lt;cite&gt;setup.py&lt;/cite&gt; and &lt;cite&gt;Pipfile&lt;/cite&gt;. Finally, use CookieCutter to avoid doing it twice (or even once)!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Smith</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/how-to-publish-a-package-on-pypi.html</guid></item><item><title>Implementing a decorator for thread synchronisation</title><link>https://pyvideo.org/pycon-au-2018/implementing-a-decorator-for-thread-synchronisation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using multithreading in Python applications? Interested in complex use cases for decorators and context managers? This talk will describe how the Java programming language &amp;quot;synchronized&amp;quot; keyword, for handling synchronisation in multithread applications, can be implemented in Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Dumpleton</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/implementing-a-decorator-for-thread-synchronisation.html</guid></item><item><title>Multiplayer 2D games with Python Arcade</title><link>https://pyvideo.org/pycon-au-2018/multiplayer-2d-games-with-python-arcade.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python Arcade library makes it very easy to create 2D games--especially for beginners--and there are many examples provided with the package.  This talk will show how to make a multiplayer computer game using Python Arcade, both over a local network, and also on the internet.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Hattingh</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/multiplayer-2d-games-with-python-arcade.html</guid></item><item><title>Pact in Python</title><link>https://pyvideo.org/pycon-au-2018/pact-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you completely over those fragile and complicated integration test? There is another way!
Pact is a contract testing tool used to ensure services can communicate with each other. May be used between an API server and web frontend but really shines in an environment with many services.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sylvia Yap</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/pact-in-python.html</guid></item><item><title>People are coming to my workshop, now what?</title><link>https://pyvideo.org/pycon-au-2018/people-are-coming-to-my-workshop-now-what.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Volunteers love running beginning coding workshops/tutorials. We’ll look at how to make a tutorial more accessible for all attendees. The talk incorporates what I learned as a teacher and offers testing for your workshops/tutorials.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicholle James</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/people-are-coming-to-my-workshop-now-what.html</guid></item><item><title>Reflections on the Creative Process - Illustrated with Watercolour Painting</title><link>https://pyvideo.org/pycon-au-2018/reflections-on-the-creative-process-illustrated-with-watercolour-painting.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Coding is a creative process. But we don’t really learn about creativity, usually it's all exception handling and Big O complexity. This talk is about introspection and calm coding in the face of long stack traces. Also, I'll be doing a live watercolour painting at the same time.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Grace Nolan</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/reflections-on-the-creative-process-illustrated-with-watercolour-painting.html</guid></item><item><title>Secret Histories: The Women of Python</title><link>https://pyvideo.org/pycon-au-2018/secret-histories-the-women-of-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Did you know the role women and nonbinary people have played in the Python community? This talk aims to document the brilliant contributions of under-represented people in Python. We interviewed established and emerging leaders, and will share their insights on what’s exciting in Python in 2018.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Elissa Shevinsky</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/secret-histories-the-women-of-python.html</guid></item><item><title>Sunday Lightning Talks 2018-08-26</title><link>https://pyvideo.org/pycon-au-2018/sunday-lightning-talks-2018-08-26.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are 5 minute talks. You have 5 minutes. 5 shall be the number, and the number shall be 5. 6 is too much.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/sunday-lightning-talks-2018-08-26.html</guid><category>lightning talks</category></item><item><title>Task Queues: A Celery Story</title><link>https://pyvideo.org/pycon-au-2018/task-queues-a-celery-story.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has a surprisingly large number of task queue libraries, but Celery reigns supreme. Unfortunately, there are a few use cases where it's remarkably bad. Learn about why you might want a task queue (and when you definitely don't), when Celery is appropriate, and what you can do when it's not.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Manderson</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/task-queues-a-celery-story.html</guid></item><item><title>There is no "now" and sensor data's the worst</title><link>https://pyvideo.org/pycon-au-2018/there-is-no-now-and-sensor-datas-the-worst.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this interactive presentation the audiences phones will be used as stand-in IoT devices streaming data back to the presentation. Using this data we will understand some of the complexities of receiving data from large numbers of distributed devices and techniques for managing this.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Leonard</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/there-is-no-now-and-sensor-datas-the-worst.html</guid></item><item><title>Unicode and Python: the absolute minimum you need to know</title><link>https://pyvideo.org/pycon-au-2018/unicode-and-python-the-absolute-minimum-you-need-to-know.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Born from parents who don't mind string encoding, my name has an &amp;quot;ë&amp;quot;. How can your code handle that character? How does Unicode handle it? If you see &amp;quot;ë&amp;quot; in a stack trace, does that mean your encoding is broken?&lt;/p&gt;
&lt;p&gt;Ignoring unicode often backfires. This talk is about preventing Unicode burns.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raphaël Merx</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/unicode-and-python-the-absolute-minimum-you-need-to-know.html</guid></item><item><title>Watch out for Safety Bandits!</title><link>https://pyvideo.org/pycon-au-2018/watch-out-for-safety-bandits.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are two key tools for assisting with vulnerability discovery in Python -- Safety and Bandit. Make sure they're turned on in your continuous integration. This talk will include the kinds of security problem these tools detect, how to get the most out of them, and what gaps still remain.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tennessee Leeuwenburg</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/watch-out-for-safety-bandits.html</guid></item><item><title>When the Python Bites: A Survival Guide to Errors</title><link>https://pyvideo.org/pycon-au-2018/when-the-python-bites-a-survival-guide-to-errors.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You can easily make them, you're afraid of them, and they'll ruin your day.
I'm talking about Errors in Python. Why do they exist? Do we really need them? And how do we deal with them instead of panicking when they appear?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Evan Kohilas</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/when-the-python-bites-a-survival-guide-to-errors.html</guid></item><item><title>Write Perfect* Code First Time, Every Time</title><link>https://pyvideo.org/pycon-au-2018/write-perfect-code-first-time-every-time.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wouldn't it be nice to know if the line you just wrote actually works? In this talk, we look at a Python development environment that is tuned for situations where one has to explore a new code base, learn a new framework or is a new-comer to the Python language.&lt;/p&gt;
&lt;p&gt;*No code is perfect.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ishaan Varshney</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/write-perfect-code-first-time-every-time.html</guid></item><item><title>You Don't Need That!</title><link>https://pyvideo.org/pycon-au-2018/you-dont-need-that.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Not every design pattern makes sense in Python. This talk builds up design patterns commonly used in enterprise languages, and shows the features in Python that make these approaches unnecessary.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Neugebauer</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/you-dont-need-that.html</guid></item><item><title>You Have Control - Learning lessons from aviation</title><link>https://pyvideo.org/pycon-au-2018/you-have-control-learning-lessons-from-aviation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Software (and Python) is growing to power ever more of the world, and it’s only getting more complex. How do we handle large distributed systems? Handle cascading failure? Prepare for emergencies and downtime? Aviation has been through it all, and we’ll look at how we can learn from them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Godwin</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:pycon-au-2018/you-have-control-learning-lessons-from-aviation.html</guid></item><item><title>A Beginner's Guide to WebSockets</title><link>https://pyvideo.org/pycon-au-2018/a-beginners-guide-to-websockets.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A gentle introduction to the web-socket protocol, how it works, it's intended usage and a number of examples where it can be used with Python and it's popular web frameworks - topped off with a rapid demonstration of the speed and ease of which it can be implemented with Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dion Misic</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/a-beginners-guide-to-websockets.html</guid></item><item><title>All in the Timing: Side-Channel Attacks</title><link>https://pyvideo.org/pycon-au-2018/all-in-the-timing-side-channel-attacks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Here, you’ll learn about a category of security issue known as side channel attacks. You’ll be amused to see how features like automatic data compression, short-circuit execution, and deterministic hashing can be abused to bypass security systems. No security background knowledge is required.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philip James</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/all-in-the-timing-side-channel-attacks.html</guid></item><item><title>Consumption is Fractal: Open Source Sustainability</title><link>https://pyvideo.org/pycon-au-2018/consumption-is-fractal-open-source-sustainability.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all rely on open-source for just about everything in tech, but the past few years have shown just how precarious most of the ecosystem is. More people need to know about how to both support projects they rely on and run their own projects more sustainably.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Noah Kantrowitz</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/consumption-is-fractal-open-source-sustainability.html</guid></item><item><title>Context Managers: You Can Write Your Own!</title><link>https://pyvideo.org/pycon-au-2018/context-managers-you-can-write-your-own.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Did you know context managers go beyond &lt;cite&gt;with open('myfile.txt', 'r') as f&lt;/cite&gt;? In fact, you can even write your own! Context managers are an amazing tool for managing resources safely. They make your code look great, and they're now easier to write than ever thanks to contextlib! Come get contextual!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Porteous</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/context-managers-you-can-write-your-own.html</guid></item><item><title>Creepy, frivolous and beautiful art made with machines (CW)</title><link>https://pyvideo.org/pycon-au-2018/creepy-frivolous-and-beautiful-art-made-with-machines-cw.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An exploration of digital art looking at the uses of machine learning and how it impacts the future of art. What can we learn from art created using neural networks and what can we create? From the frivolous to the beautiful, what does art created by computers look like and where can it take us?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">J. Rosenbaum</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/creepy-frivolous-and-beautiful-art-made-with-machines-cw.html</guid></item><item><title>Danger Will Robinson! Warning! Warning! Warning!</title><link>https://pyvideo.org/pycon-au-2018/danger-will-robinson-warning-warning-warning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Danger Will Robinson! Warning! Warning! Warning! (What Python warnings are, why you should turn them on and how to create your own)&lt;/p&gt;
&lt;p&gt;Python's warnings mechanism is an important part of creating robust, reliable, production grade code. Unfortunately, it's also one of the most under-used standard libraries. Help find the bugs and errors with warnings! Ignore them at your peril! Suitable for beginner to intermediate.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Lovett</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/danger-will-robinson-warning-warning-warning.html</guid></item><item><title>Describing Descriptors</title><link>https://pyvideo.org/pycon-au-2018/describing-descriptors.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Descriptors are a little known feature of Python. They provide a way for a programmer to customize the storage and retrieval of different instance variables. In this talk, you will learn about the descriptor protocol, what it can be used for, and how to implement a descriptor.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthew Egan</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/describing-descriptors.html</guid></item><item><title>End-to-end Energy Monitoring in Python</title><link>https://pyvideo.org/pycon-au-2018/end-to-end-energy-monitoring-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I built an energy monitoring hardware as a hobby. Firmware for configuring, reading metering data and pushing out to IoT platform is done in micropython. Server for holding the data is Graphite (also python) and analysis of the data is done in python ML framework, Keras. End-to-end energy in python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tisham Dhar</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/end-to-end-energy-monitoring-in-python.html</guid></item><item><title>Escape from auto-manual testing with Hypothesis!</title><link>https://pyvideo.org/pycon-au-2018/escape-from-auto-manual-testing-with-hypothesis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wanted someone else to write your test cases? There’s a library for that!&lt;/p&gt;
&lt;p&gt;You declare a strategy for inputs - from ‘an integer’ to ‘matching this regex’ to ‘Django model’; Hypothesis finds bugs and reports minimal failing examples. Too good to be true? Come see for yourself!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zac Hatfield-Dodds</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/escape-from-auto-manual-testing-with-hypothesis.html</guid></item><item><title>International Cultural Bungles for Fun, Profit, and Sleeping At Night</title><link>https://pyvideo.org/pycon-au-2018/international-cultural-bungles-for-fun-profit-and-sleeping-at-night.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is about how to overcome the basic conflict and malaise that naturally occur in software teams working across countries, timezones, languages, cultural assumptions, hierachies, and professional backgrounds.  Come for the war stories, stay for the one weird trick for avoiding meetings.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">maia sauren</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/international-cultural-bungles-for-fun-profit-and-sleeping-at-night.html</guid></item><item><title>Pi-thon: Teaching maths with python!</title><link>https://pyvideo.org/pycon-au-2018/pi-thon-teaching-maths-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mathematics and programming often go hand in hand, but aren't always equally loved by students. I believe that Python can be a fantastic tool for teaching mathematical concepts, but also that mathematical inquiry can be a starting point for developing a wider interest in programming.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Liam Callaway</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/pi-thon-teaching-maths-with-python.html</guid></item><item><title>Python &amp; Spreadsheets: Earth Dog Edition</title><link>https://pyvideo.org/pycon-au-2018/python-spreadsheets-earth-dog-edition.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Spreadsheets files are great for sharing data. Spreadsheet applications can be a nightmare. In this updated talk, you'll see how OpenPyXL let's you work with those files in a way that's better than using the app OR a .csv. I'll also discuss common problems in working with spreadsheets via code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kojo Idrissa</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/python-spreadsheets-earth-dog-edition.html</guid></item><item><title>Refactoring Code With the Standard Library</title><link>https://pyvideo.org/pycon-au-2018/refactoring-code-with-the-standard-library.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What if you could refactor your entire code base, safely and automatically? How much old code could you fix or replace if you didn't need to worry about updating every reference by hand? I'll show you how a concrete syntax tree (CST) can help you do just that using only the standard Python library.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Reese</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/refactoring-code-with-the-standard-library.html</guid></item><item><title>Remote First, Not Second Best.</title><link>https://pyvideo.org/pycon-au-2018/remote-first-not-second-best.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Come to this presentation to learn how a team of seven people, working across 17 time zones, became one of the best performing cross-functional product teams in an organisation. We’ll share how we got here, what we learned and our key principles for building a high performing remote first team.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kelsey van Haaster</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/remote-first-not-second-best.html</guid></item><item><title>Running Python web applications in Docker</title><link>https://pyvideo.org/pycon-au-2018/running-python-web-applications-in-docker.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An introduction on running Python web applications in Docker, covering how to structure your project, running the project in both development and production, testing the project, and compiling static assets for your frontend.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Heap</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/running-python-web-applications-in-docker.html</guid></item><item><title>Saturday Lightning Talks 2018-08-25</title><link>https://pyvideo.org/pycon-au-2018/saturday-lightning-talks-2018-08-25.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are 5 minute talks. You have 5 minutes. 5 shall be the number, and the number shall be 5. 6 is too much.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/saturday-lightning-talks-2018-08-25.html</guid><category>lightning talks</category></item><item><title>Snakes in your Games</title><link>https://pyvideo.org/pycon-au-2018/snakes-in-your-games.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Samuel L Jackson might be sick of snakes on planes, but I can't get enough of them in my games! Come join this talk and you too may be saying &amp;quot;I can't get enough of these monkey fighting snakes in my Monday through Friday games!&amp;quot;[TV edit]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ducky</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/snakes-in-your-games.html</guid></item><item><title>Stupid computer! Improving error messages for beginner programmers</title><link>https://pyvideo.org/pycon-au-2018/stupid-computer-improving-error-messages-for-beginner-programmers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a great beginners programming language. Unfortunately, many of the exception messages coming from the standard library and parser are very unhelpful to a newbie programmer. We identify some of these cases, make modifications to improve these messages, and assess their effectiveness.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Dawborn</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/stupid-computer-improving-error-messages-for-beginner-programmers.html</guid></item><item><title>The Case of the Mysteriously High System Load</title><link>https://pyvideo.org/pycon-au-2018/the-case-of-the-mysteriously-high-system-load.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The software system is struggling, and the logs won’t say why. To make the software run smoothly again, Detective Plum Bago must solve the mystery! This case study shows how to use metrics to identify performance bottlenecks in distributed systems, to ensure the right culprit is captured.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brianna Laugher</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/the-case-of-the-mysteriously-high-system-load.html</guid></item><item><title>Think Globally; Internationalise Locally</title><link>https://pyvideo.org/pycon-au-2018/think-globally-internationalise-locally.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making software for a global audience is hard. This talk will show you the issues you will come across as you localise your software and which Python libraries provide the solutions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Hall</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/think-globally-internationalise-locally.html</guid></item><item><title>What is the most common street name in Australia?</title><link>https://pyvideo.org/pycon-au-2018/what-is-the-most-common-street-name-in-australia.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Finding the most common street name in Australia may sound like a simple thing to do - but it quickly devolves into a scenic tour of all the things that go wrong when doing data analytics.  I'll be giving advice on how to avoid these speed bumps along with how to work with OpenStreetMaps in Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rachel Bunder</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/what-is-the-most-common-street-name-in-australia.html</guid></item><item><title>Why you should care about types: How Python typing helped my team scale</title><link>https://pyvideo.org/pycon-au-2018/why-you-should-care-about-types-how-python-typing-helped-my-team-scale.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;By now you have probably all heard about Python static typing. But why should you care? Are types in Python even Pythonic? Is Python turning into Java? In this talk I’ll try to answer these questions and explain how type annotations helped my team scale 4x and make developers happier.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luka Sterbic</dc:creator><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-25:pycon-au-2018/why-you-should-care-about-types-how-python-typing-helped-my-team-scale.html</guid></item><item><title>A traveller's guide to mapping technologies in Django</title><link>https://pyvideo.org/pycon-au-2018/a-travellers-guide-to-mapping-technologies-in-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hahmann and Burghart estimate at least 60% of all information is geospatially referenced. Fortunately, Django includes a variety of spatial and mapping tools to help build spatially-aware services. This talk will give an overview of geospatial concepts for the Australian and Django communities.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anthony I Joseph</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/a-travellers-guide-to-mapping-technologies-in-django.html</guid></item><item><title>Agloe - What the map makers of the 1930s can teach us about protecting our data in 2018.</title><link>https://pyvideo.org/pycon-au-2018/agloe-what-the-map-makers-of-the-1930s-can-teach-us-about-protecting-our-data-in-2018.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we are going to do the time warp back to the 1930's and see what the General Drafting Co. can teach us about securing data and breach notification and how to apply them in the modern day. Using free and OSS I show you that security isn't all about expensive 3rd-party products and SOCs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">errbufferoverfl</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/agloe-what-the-map-makers-of-the-1930s-can-teach-us-about-protecting-our-data-in-2018.html</guid></item><item><title>Asyncio in (Micro)Python</title><link>https://pyvideo.org/pycon-au-2018/asyncio-in-micropython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Asyncio is cool in Python. It's super cool in MicroPython!&lt;/p&gt;
&lt;p&gt;Asyncio provides a way to achieve concurrency in a relatively simplistic fashion. However, first-time users still struggle with the concepts so let's sort them out! Then we'll see why it's especially useful in an embedded environment.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Trentini</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/asyncio-in-micropython.html</guid></item><item><title>Automating Your Home with Python, Raspberry Pi and Homekit</title><link>https://pyvideo.org/pycon-au-2018/automating-your-home-with-python-raspberry-pi-and-homekit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's forty degrees and you're on your way home in the sweltering Australian heat. Home awaits but it too has been baking in the sun all day. That's okay, though! You open your iPhone, tap a button and your air conditioner whirs into action, powered by your Python code and your trusty Raspberry Pi.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sean Johnson</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/automating-your-home-with-python-raspberry-pi-and-homekit.html</guid></item><item><title>Becoming a Multilingual SuperHero in Django</title><link>https://pyvideo.org/pycon-au-2018/becoming-a-multilingual-superhero-in-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we'll see how we make a language agnostic backend, to serve our app in different languages, based on what language the client wants to communicate in.&lt;/p&gt;
&lt;p&gt;We'll see how to support translation for static data and dynamic data, using various third-party services.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sanyam Khurana</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/becoming-a-multilingual-superhero-in-django.html</guid></item><item><title>Creating Solid APIs</title><link>https://pyvideo.org/pycon-au-2018/creating-solid-apis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Increasingly, our apps are used not by humans but by other apps - via their APIs. Thus your APIs need to be well-designed and easy to consume for other developers.
I will share tips and good practices on authentication, versioning, documentation, response structure, and why it all matters.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rivo Laks</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/creating-solid-apis.html</guid></item><item><title>Data is the new shiny thing</title><link>https://pyvideo.org/pycon-au-2018/data-is-the-new-shiny-thing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data Science is the tag of choice for grant applications, project proposals,
and media opportunities. It’s the latest shiny buzz word toy. But it turns
out that data science is crucial to our lives and the future of the planet.
It’s also a fun, easy, and motivating way to teach kids programming and give
them the chance to make a real difference in the world. So let’s talk about
using Python and real datasets to take over the world, and, incidentally,
teach STEM.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Linda McIver</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/data-is-the-new-shiny-thing.html</guid></item><item><title>Demystifying LoRaWAN with PyCom</title><link>https://pyvideo.org/pycon-au-2018/demystifying-lorawan-with-pycom.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Connecting IoT devices using low power over wide area wireless (LoRaWAN) makes sense. But how LoRaWAN works, duty cycles, frequency plans, receive windows, etc. doesn't.&lt;/p&gt;
&lt;p&gt;This talk will demystify how LoRaWAN works using PyCom devices.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Danilko</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/demystifying-lorawan-with-pycom.html</guid></item><item><title>Design for Non-Designers</title><link>https://pyvideo.org/pycon-au-2018/design-for-non-designers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Want to up your design skills? This presentation will give you the building blocks you need to make better designs for your websites and presentations. Aimed at design beginners and developers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tracy Osborn</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/design-for-non-designers.html</guid></item><item><title>Django Against the Dark Arts</title><link>https://pyvideo.org/pycon-au-2018/django-against-the-dark-arts.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django is a robust framework by design, and embodies many good security practices. But why and how do Django sites get hacked anyway? What can we do about it? And why are wizards involved?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lilly Ryan</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/django-against-the-dark-arts.html</guid></item><item><title>Don’t be a fail whale: secure your containers</title><link>https://pyvideo.org/pycon-au-2018/dont-be-a-fail-whale-secure-your-containers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Containers are great technology, but they have specific security threats that need to be considered when implementing and running them. In this talk, I give an overview of how to effectively threat model for containers running python and some of the tools that you can use to counter them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sarah Young</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/dont-be-a-fail-whale-secure-your-containers.html</guid></item><item><title>Dynamic web pages without Javascript</title><link>https://pyvideo.org/pycon-au-2018/dynamic-web-pages-without-javascript.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Intercooler is a Javascript library that allows you to make dynamic web pages without writing any JS yourself. This talk demonstrates how to use Intercooler to add dynamic functionality to a Django app. It will also cover a number of apps that make using Intercooler with Django even easier.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Bell</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/dynamic-web-pages-without-javascript.html</guid></item><item><title>Education Seminar Student Showcase</title><link>https://pyvideo.org/pycon-au-2018/education-seminar-student-showcase.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Eight short talks from high school students across Australia. They'll be talking about projects they've built with Python using machine learning, robotics, natural language processing, and more&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Isabella Hogan</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/education-seminar-student-showcase.html</guid></item><item><title>Embedded applications using Python and Debian</title><link>https://pyvideo.org/pycon-au-2018/embedded-applications-using-python-and-debian.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is widely used in embedded applications due to its simplicity. Raspberry pi (pi came from the Python!) and Beagle Bone which are commonly used in embedded applications are  programmed using Python and run on Debian Linux platform.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jaminy Prabaharan</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/embedded-applications-using-python-and-debian.html</guid></item><item><title>How Python saved a rescue dog - a foster fail story</title><link>https://pyvideo.org/pycon-au-2018/how-python-saved-a-rescue-dog-a-foster-fail-story.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When we decided to foster a rescue dog last year, we had to deliver anti-anxiety medication to the dog while working. We built a drug delivery system using IoT boards, Python and cloud VMs. This talk tells the story how Python turned a crazy idea into a lifesaving DIY project and a foster fail.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andreas Moll</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/how-python-saved-a-rescue-dog-a-foster-fail-story.html</guid></item><item><title>Internet of Human Connectedness</title><link>https://pyvideo.org/pycon-au-2018/internet-of-human-connectedness.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everything you need is out there, you just have to go out and get it. IoT has opened up a new world of connection for me - human connection. The keys? Some sensors, a slipper and a heap of passion.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michelle Erica Lo</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/internet-of-human-connectedness.html</guid></item><item><title>Keynote: Annie Parker</title><link>https://pyvideo.org/pycon-au-2018/keynote-annie-parker.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Annie is a co-founder of Techfugees Australia - a global movement
connecting the technology ecosystem together with newly arrived refugees here
in Australia to help them integrate into their new communities.  In this talk,
Annie will be sharing her experience of how Techfugees works and some of the
success stories they’ve had along the way&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Annie Parker</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/keynote-annie-parker.html</guid><category>keynote</category></item><item><title>Keynote: Tom Eastman</title><link>https://pyvideo.org/pycon-au-2018/keynote-tom-eastman.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tom will be speaking on Saturday afternoon, about how we learn to get better at our craft.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Eastman</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/keynote-tom-eastman.html</guid><category>keynote</category></item><item><title>Keynote: Tracy Osborn</title><link>https://pyvideo.org/pycon-au-2018/keynote-tracy-osborn.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tracy will be speaking on Sunday morning, giving a presentation entitled: &amp;quot;Clueless&amp;quot;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tracy Osborn</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/keynote-tracy-osborn.html</guid><category>keynote</category></item><item><title>Learning from the mistakes that even big projects make</title><link>https://pyvideo.org/pycon-au-2018/learning-from-the-mistakes-that-even-big-projects-make.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since 2011, I've worked on a large Open Source project in python. It kind of got out of hand -- 1000s of developers and millions of lines of code. Yet despite being well resourced, we made the same mistakes that those tiny scripts you whip up to solve a small problem make. Come learn from our fail.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Still</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/learning-from-the-mistakes-that-even-big-projects-make.html</guid></item><item><title>Lighting Macro Photographs with CircuitPython</title><link>https://pyvideo.org/pycon-au-2018/lighting-macro-photographs-with-circuitpython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;LED lighting rigs are expensive. Worse, they have little to no controls aside from on/off. Most are not dimmable and changing colors requires the use of gels. In this talk I will discuss how CircuitPython was used in conjunction with LEDs and microcontrollers to make a custom LED photo lighting rig.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stacy Morse</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/lighting-macro-photographs-with-circuitpython.html</guid></item><item><title>Multi-Factor Authentication: How it works and why you need to be using it yesterday</title><link>https://pyvideo.org/pycon-au-2018/multi-factor-authentication-how-it-works-and-why-you-need-to-be-using-it-yesterday.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Multi-factor authentication (MFA) and two-factor auth (2FA) are becoming popular, but how do they work? What are the options, how secure are they, and how do you use them in your own applications?&lt;/p&gt;
&lt;p&gt;We'll answer all these and more, covering everything from Django integration to cryptography.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Swenson</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/multi-factor-authentication-how-it-works-and-why-you-need-to-be-using-it-yesterday.html</guid></item><item><title>Operation Luigi: How I hacked my friend without her noticing</title><link>https://pyvideo.org/pycon-au-2018/operation-luigi-how-i-hacked-my-friend-without-her-noticing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;My friend gave me permission to &amp;quot;hack all her stuff&amp;quot; and this is my story. It's about what I tried, what worked, my many flubs, and how easy it is to compromise Non Paranoid People TM.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">“Alex”</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/operation-luigi-how-i-hacked-my-friend-without-her-noticing.html</guid></item><item><title>PostgreSQL Indexing : How, why, and when.</title><link>https://pyvideo.org/pycon-au-2018/postgresql-indexing-how-why-and-when.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So many of the things we build depend on a DBMS to keep our data safe, and retrieve it quickly.
We know indexes can make that faster, but... how do they work? When should you use them? What should I index?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Curtis Maloney</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/postgresql-indexing-how-why-and-when.html</guid></item><item><title>Privacy Preserving Record Linkage</title><link>https://pyvideo.org/pycon-au-2018/privacy-preserving-record-linkage.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Record linkage is essential for organizations to collaborate and carry out joint analysis. Instead of trusting someone with lots of personally identifiable information like name/address we can learn the entity matching in a privacy preserving way. Let's talk about a Python implementation of that!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Thorne</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/privacy-preserving-record-linkage.html</guid></item><item><title>Python all the subjects!</title><link>https://pyvideo.org/pycon-au-2018/python-all-the-subjects.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How can we fit teaching coding into an already crowded curriculum?
Make it part of other subjects!  Find out how Python can go beyond the ICT room and be used for creative writing, geography, science, maths, art and more.  Example projects, games and tips for upper primary to middle school.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Digital K</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/python-all-the-subjects.html</guid></item><item><title>Python coding on Chromebooks - our story.</title><link>https://pyvideo.org/pycon-au-2018/python-coding-on-chromebooks-our-story.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Purpose is to share how we implemented Python coding at our school for Yrs 7 and 8 on Chromebooks. Challenges, successes and failures.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Parlas</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/python-coding-on-chromebooks-our-story.html</guid></item><item><title>Running Python on your brain computer</title><link>https://pyvideo.org/pycon-au-2018/running-python-on-your-brain-computer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Reading and predicting what code will do is a fundamental coding skill. But when students read code are they executing it on their brain computer? Or do they only read the words?&lt;/p&gt;
&lt;p&gt;This talk will explore learning to read and trace code, misconceptions and how to build a really good brain computer.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Taylor</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/running-python-on-your-brain-computer.html</guid></item><item><title>Scissors-Paper-Rock your classroom with differentiated projects</title><link>https://pyvideo.org/pycon-au-2018/scissors-paper-rock-your-classroom-with-differentiated-projects.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kids need conquerable programming challenges. But creating a project that challenges a variety of skill levels is difficult! Using python and the game scissors paper rock we'll show you how we create all kinds of projects as part of a program designed for engaging kids at all levels in programming.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Renee Noble</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/scissors-paper-rock-your-classroom-with-differentiated-projects.html</guid></item><item><title>Securing Your Company's Data: Encryption, Deletion and Other Best Practices</title><link>https://pyvideo.org/pycon-au-2018/securing-your-companys-data-encryption-deletion-and-other-best-practices.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wouldn't you like to contribute to the development of secure applications? Perfect, you have come to the right place! We'll learn five security techniques and best practices that are accessible even to small teams and startups. And since this is Pycon, we'll focus on examples from Python projects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Elissa Shevinsky</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/securing-your-companys-data-encryption-deletion-and-other-best-practices.html</guid></item><item><title>Security and Privacy Track - Panel</title><link>https://pyvideo.org/pycon-au-2018/security-and-privacy-track-panel.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Your questions answered by select speakers from the day!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various Speakers</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/security-and-privacy-track-panel.html</guid></item><item><title>Security Architecture from Ancient Times</title><link>https://pyvideo.org/pycon-au-2018/security-architecture-from-ancient-times.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all want the systems we design and build to be secure, but it can be hard to know where to start.
Using historical fortifications as real-world examples, this talk will break down and demystify how security controls can be selected, evaluated and integrated to build architecturally secure systems&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Liam O</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/security-architecture-from-ancient-times.html</guid></item><item><title>Taking Django Async</title><link>https://pyvideo.org/pycon-au-2018/taking-django-async.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We take a look at Django and Channels 2.0 and the changes it brings by going fully async - Examining not only why the change makes things better, but also how it's managed to bridge between Django's synchronous world and the async world. Plus, what might the future hold for Django and Channels?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Godwin</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/taking-django-async.html</guid></item><item><title>Teaching OOP using Python (Progressing from GameMaker to Pygame)</title><link>https://pyvideo.org/pycon-au-2018/teaching-oop-using-python-progressing-from-gamemaker-to-pygame.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Teaching students Object-Oriented Programming(OOP) is challenging but invaluable. Due to its abstract nature, OOP is best taught in a fun and practical context such as game design. This talk will examine the progression of teaching OOP using the drag-and-drop interface of Game Maker to using Pygame.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Nielsen</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/teaching-oop-using-python-progressing-from-gamemaker-to-pygame.html</guid></item><item><title>Teaching Python to Design Students</title><link>https://pyvideo.org/pycon-au-2018/teaching-python-to-design-students.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;“I’m a designer, why should I learn python?” We’ve been teaching a course to non-nerds for a couple of years and so we’re going to share some of the things we’ve discovered.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Doherty, Ishaan Varshney</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/teaching-python-to-design-students.html</guid></item><item><title>The DDoS is coming from inside the house</title><link>https://pyvideo.org/pycon-au-2018/the-ddos-is-coming-from-inside-the-house.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;IoT provided a revolutionary leap in the scale DDoS attacks. I will talk about global IoT DDoS trends, tell some funny (probably not for the orgs) stories about people that had their IoT hacked, and go through some tooling that can assist you in finding your vulnerable IoT devices.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Wiley</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/the-ddos-is-coming-from-inside-the-house.html</guid></item><item><title>WebAuthn: Multi-factor Auth For Everyone</title><link>https://pyvideo.org/pycon-au-2018/webauthn-multi-factor-auth-for-everyone.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everybody knows that passwords suck. Implementing better things, like multi-factor authentication, can be really tricky and require a bunch of specialist bits though.&lt;/p&gt;
&lt;p&gt;Or does it?&lt;/p&gt;
&lt;p&gt;The new WebAuthn standard makes it dead simple to add multi-factor authentication to your web app. Let's find out how!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benno Rice</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/webauthn-multi-factor-auth-for-everyone.html</guid></item><item><title>Workplace Environment Sensing with Python</title><link>https://pyvideo.org/pycon-au-2018/workplace-environment-sensing-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you often wondered where the quietest spot in the office is right now? In this talk, we explain how we built a real-time system that does just that using CircuitPython.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aiden Ray</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/workplace-environment-sensing-with-python.html</guid></item><item><title>Writing fast and efficient MicroPython</title><link>https://pyvideo.org/pycon-au-2018/writing-fast-and-efficient-micropython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MicroPython is an implementation of Python designed to run on microcontrollers and embedded systems. These devices don't have many resources (CPU, RAM) and so it's important to write efficient scripts. This talk shows how to make the most of your resources in MicroPython, and has some fun demos!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damien George</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/writing-fast-and-efficient-micropython.html</guid></item><item><title>Writing To Be Understood</title><link>https://pyvideo.org/pycon-au-2018/writing-to-be-understood.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As developers, we write a lot more than just code. We write commit messages; we
review our colleagues’ code; we email collaborators; we tweet our hottest
takes.&lt;/p&gt;
&lt;p&gt;Good written communication can make your systems easier to use and maintain,
encourage your colleagues to be more receptive to your suggestions, and make
you more popular on the internet. I’ll share some practical ways to communicate
more effectively, and some less practical theory about how people and language
work.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Merrin Macleod</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-24:pycon-au-2018/writing-to-be-understood.html</guid></item></channel></rss>