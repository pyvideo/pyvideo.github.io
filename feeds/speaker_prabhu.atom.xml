<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_prabhu.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-07-12T00:00:00+00:00</updated><entry><title>Cython for Data, Scientists, and Data Scientists</title><link href="https://pyvideo.org/scipy-2017/cython-for-data-scientists-and-data-scientists.html" rel="alternate"></link><published>2017-07-12T00:00:00+00:00</published><updated>2017-07-12T00:00:00+00:00</updated><author><name>Dillon Niederhut</name></author><id>tag:pyvideo.org,2017-07-12:scipy-2017/cython-for-data-scientists-and-data-scientists.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutorial materials found here: &lt;a class="reference external" href="https://scipy2017.scipy.org/ehome/220975/493423/"&gt;https://scipy2017.scipy.org/ehome/220975/493423/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cython is a foundational technology behind many packages you use everyday, including NumPy, SciPy, Pandas, Scikit-Learn, Scikit-Image, PyTables, and h5py. Developers, data scientists, and researchers use Cython to accelerate Python, access NumPy efficiently at the C level, and interface Python with C or C++. Cython's expressivity, its stability and maturity, and its gradual typing approach make it a uniquely flexible tool that has become a critical component for many projects.&lt;/p&gt;
&lt;p&gt;This tutorial will be fast paced, and is geared towards data scientists and Python users looking to take their Python performance to the next level. Basic familiarity with C or C++ is assumed.&lt;/p&gt;
</summary><category term="tutorial"></category><category term="cython"></category></entry></feed>