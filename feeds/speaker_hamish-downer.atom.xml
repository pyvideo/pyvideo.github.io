<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_hamish-downer.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-09-19T00:00:00+00:00</updated><entry><title>OOD Rules</title><link href="https://pyvideo.org/pycon-uk-2015/ood-rules.html" rel="alternate"></link><published>2015-09-19T00:00:00+00:00</published><updated>2015-09-19T00:00:00+00:00</updated><author><name>Hamish Downer</name></author><id>tag:pyvideo.org,2015-09-19:pycon-uk-2015/ood-rules.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all want to keep our code comprehensible and easy to test, change,
reuse and extend - it's easy(er) if you follow the OOD Rules.&lt;/p&gt;
&lt;p&gt;This is based on my experience of trying to follow &amp;quot;The Rules&amp;quot; (of
Object Orientated Design) by the wonderful Sandi Metz of the Ruby world.
&lt;a class="reference external" href="http://poodr.com/"&gt;http://poodr.com/&lt;/a&gt; and &lt;a class="reference external" href="https://www.youtube.com/watch?v=npOGOmkxuio"&gt;https://www.youtube.com/watch?v=npOGOmkxuio&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>