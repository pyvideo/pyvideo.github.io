<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 23 Feb 2019 00:00:00 +0000</lastBuildDate><item><title>Faster Python apps with open source APM</title><link>https://pyvideo.org/pycon-philippines-2019/faster-python-apps-with-open-source-apm.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Slow applications are no fun. Application performance monitoring (APM) makes tracking down issues problems much easier. But which tools should you use?  With the release of Elastic APM, there’s a new option. Language server and Python client is fully open source so you can get started with any app.  Elastic’s APM was released some time ago, so it’s a very fresh option for tracing performance problems in Python applications (and other runtimes as well). The basic platform is free so it should be a welcome change for Go developers used to spending huge bills on comparable hosted platforms.  It’s useful out of the box for tracing basics on web requests including: - Request details - Response time percentiles - Transaction timelines - Application errors and stack traces - Individual code lines - Distributed Tracing  It can also be used to track any custom span in any Go application to find out where time is being lost and users are being slowed down.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aravind Putrevu</dc:creator><pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-02-23:pycon-philippines-2019/faster-python-apps-with-open-source-apm.html</guid><category>Performance</category></item><item><title>Monitoring your Python Application</title><link>https://pyvideo.org/pycon-thailand-2018/monitoring-your-python-application.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Application Performance Monitoring (APM) is a solution built on Elastic Stack. APM helps you to build/store data points in Elasticsearch and visualize. It automatically collects information from your python application/service.
This talk mainly targets at introducing the solution, why it is needed and what you can do with data. It ends with once data is stored within Elasticsearch, what else you can use (ex. Infrastructure Monitoring, Machine Learning).&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Aravind is a loquacious person, who has something to talk about everything. He is passionate about evangelising technology, meeting developers and helping in solving their problems. He is a backend developer and has six years of development experience. Currently, he works as a Developer Advocate At Elastic and interact with developer community in South East Asia and India.
He has deep interest in Machine Learning, Security Incident Analysis and IoT tech. In his free time, he plays around Raspi or a Arduino.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aravind Putrevu</dc:creator><pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-16:pycon-thailand-2018/monitoring-your-python-application.html</guid></item></channel></rss>