<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_josh-berkus.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-12-30T00:00:00+00:00</updated><entry><title>Ansible 101</title><link href="https://pyvideo.org/pydx-2016/ansible-101.html" rel="alternate"></link><published>2016-12-30T00:00:00+00:00</published><updated>2016-12-30T00:00:00+00:00</updated><author><name>Josh Berkus</name></author><id>tag:pyvideo.org,2016-12-30:pydx-2016/ansible-101.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyDX 2016 talk by Josh Berkus&lt;/p&gt;
&lt;p&gt;Wanna use an automation platform written in Python? Of course you do. And I say &amp;quot;automation platform&amp;quot; rather than &amp;quot;configuration management&amp;quot; because Ansible isn't just about configuration.&lt;/p&gt;
&lt;p&gt;This all-demo, no-slide talk will teach you by example how to get started with Ansible automating all the things you need automated.&lt;/p&gt;
</summary><category term="ansible"></category></entry><entry><title>PyDX 2015: Ad-hoc Database Graphs with IPython</title><link href="https://pyvideo.org/pydx-2015/pydx-2015-ad-hoc-database-graphs-with-ipython.html" rel="alternate"></link><published>2015-10-10T00:00:00+00:00</published><updated>2015-10-10T00:00:00+00:00</updated><author><name>Josh Berkus</name></author><id>tag:pyvideo.org,2015-10-10:pydx-2015/pydx-2015-ad-hoc-database-graphs-with-ipython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyDX 2015 talk by Josh Berkus&lt;/p&gt;
</summary></entry><entry><title>PyDX 2015: Postgres + SciPy for Great Stats</title><link href="https://pyvideo.org/pydx-2015/pydx-2015-postgres-scipy-for-great-stats.html" rel="alternate"></link><published>2015-10-10T00:00:00+00:00</published><updated>2015-10-10T00:00:00+00:00</updated><author><name>Josh Berkus</name></author><id>tag:pyvideo.org,2015-10-10:pydx-2015/pydx-2015-postgres-scipy-for-great-stats.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyDX 2015 talk by Josh Berkus&lt;/p&gt;
</summary></entry><entry><title>Ten Minutes To Replication</title><link href="https://pyvideo.org/djangocon-us-2013/ten-minutes-to-replication.html" rel="alternate"></link><published>2013-10-03T00:00:00+00:00</published><updated>2013-10-03T00:00:00+00:00</updated><author><name>Josh Berkus</name></author><id>tag:pyvideo.org,2013-10-03:djangocon-us-2013/ten-minutes-to-replication.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;10 MINUTES TO REPLICATION&lt;/p&gt;
&lt;p&gt;Wednesday 12:15 p.m.--1 p.m.&lt;/p&gt;
&lt;p&gt;Audience level: Intermediate&lt;/p&gt;
&lt;p&gt;DESCRIPTION Daunted and confused by PostgreSQL's built-in replication?
Don't be; it's really not that complicated. In ten minutes, you can set
up a multi-server replication cluster.&lt;/p&gt;
&lt;p&gt;ABSTRACT We will set up a four-server replication cluster on AWS in the
first ten minutes of this class. Then we'll explain how we did it, and
briefly go over some of the additional options you have for replication
in PostgreSQL 9.2 and 9.3, including:&lt;/p&gt;
&lt;p&gt;backup archiving cascading replication failover and failback
load-balancing options why synchronous replication isn't what you think
it is Attendees will leave knowing how to set up a simple replication
cluster on cloud hosting.&lt;/p&gt;
</summary></entry><entry><title>Postgres Performance in 15 Minutes</title><link href="https://pyvideo.org/djangocon-us-2015/postgres-performance-in-15-minutes-by-josh-berkus.html" rel="alternate"></link><published>2015-09-18T00:00:00+00:00</published><updated>2015-09-18T00:00:00+00:00</updated><author><name>Josh Berkus</name></author><id>tag:pyvideo.org,2015-09-18:djangocon-us-2015/postgres-performance-in-15-minutes-by-josh-berkus.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In 15 minutes, plus Q&amp;amp;A time, Postgres expert Josh Berkus will explain
the essentials of making your database performance &amp;quot;good enough&amp;quot; that
you can ignore it and move on to other things. This will include:&lt;/p&gt;
&lt;p&gt;Why database configuration is less than 20% of performance The 14
settings most people need Why connection pooling is essential Avoiding
bad hardware DB performance for the public cloud Stupid things your app
does which kills performance Enjoy this fast-paced roundup of PostgreSQL
performance essentials.&lt;/p&gt;
</summary></entry></feed>