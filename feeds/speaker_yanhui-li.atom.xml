<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_yanhui-li.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-04T11:30:00+00:00</updated><entry><title>Dependency hell: a library author's guide</title><link href="https://pyvideo.org/pycon-us-2019/dependency-hell-a-library-authors-guide.html" rel="alternate"></link><published>2019-05-04T11:30:00+00:00</published><updated>2019-05-04T11:30:00+00:00</updated><author><name>Yanhui Li</name></author><id>tag:pyvideo.org,2019-05-04:pycon-us-2019/dependency-hell-a-library-authors-guide.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is known for its &amp;quot;batteries included&amp;quot; philosophy but no Python
developer can live without the language's rich library ecosystem.
Unfortunately, as the number of libraries increases, so does the risk of
cross-library incompatibilities, or &amp;quot;dependency hell&amp;quot;.&lt;/p&gt;
&lt;p&gt;Dependency hell arises when two libraries have mutually conflicting
requirements. These can be very difficult for developers to diagnose and
may not be fixable without avoiding certain libraries entirely.&lt;/p&gt;
&lt;p&gt;After this talk, you - the library author - will have a practical set of
simple best practices to follow that will allow you to build libraries
that are compatible across the Python ecosystem.&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>