<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - George Collins</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_george-collins.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-04-12T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Typed and Decorated Python GUIs: Help the Language Help You</title><link href="https://pyvideo.org/pytexas-2025/typed-and-decorated-python-guis-help-the-language-help-you.html" rel="alternate"></link><published>2025-04-12T00:00:00+00:00</published><updated>2025-04-12T00:00:00+00:00</updated><author><name>George Collins</name></author><id>tag:pyvideo.org,2025-04-12:/pytexas-2025/typed-and-decorated-python-guis-help-the-language-help-you.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python's increasingly powerful type annotations (and the type checkers and IDEs that consume them) are a great way to manage the complexities of Python GUI programming. This talk will walk through a strictly typed PyQt/PySide GUI application skeleton while touching on custom logging handlers, enum-based error passing, type-aware â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python's increasingly powerful type annotations (and the type checkers and IDEs that consume them) are a great way to manage the complexities of Python GUI programming. This talk will walk through a strictly typed PyQt/PySide GUI application skeleton while touching on custom logging handlers, enum-based error passing, type-aware match statements, and how generic types empower function decorators, decorator factories, and class decorators.&lt;/p&gt;
</content><category term="PyTexas 2025"></category></entry></feed>