<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_emily-gorcenski.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-07-08T00:00:00+00:00</updated><entry><title>Going Full Stack with Data Science: Using Technical Readiness Level to Guide Data Science Outcomes</title><link href="https://pyvideo.org/pydata-berlin-2018/going-full-stack-with-data-science-using-technical-readiness-level-to-guide-data-science-outcomes.html" rel="alternate"></link><published>2018-07-08T00:00:00+00:00</published><updated>2018-07-08T00:00:00+00:00</updated><author><name>Emily Gorcenski</name></author><id>tag:pyvideo.org,2018-07-08:pydata-berlin-2018/going-full-stack-with-data-science-using-technical-readiness-level-to-guide-data-science-outcomes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the 1970s, NASA developed the Technical Readiness Level (TRL) scale
to measure research and development of cutting edge technology. While
several engineering bodies use this scale, web-focused engineering has
left it behind. This talk will explore TRL scales and how we can use
them to measure and guide success of data science teams to build a true
vision of &amp;quot;full stack data science.&amp;quot;&lt;/p&gt;
</summary></entry><entry><title>Polynomial Chaos: A technique for modeling uncertainty</title><link href="https://pyvideo.org/pydata-berlin-2017/polynomial-chaos-a-technique-for-modeling-uncertainty.html" rel="alternate"></link><published>2017-06-30T00:00:00+00:00</published><updated>2017-06-30T00:00:00+00:00</updated><author><name>Emily Gorcenski</name></author><id>tag:pyvideo.org,2017-06-30:pydata-berlin-2017/polynomial-chaos-a-technique-for-modeling-uncertainty.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Parametric uncertainty is broadly difficult to quantify. In particular, when those parameters don't fit nice distributions it can be hard to generate reasonable simulations. Polynomial chaos is a somewhat obscure technique that leverages a natural connection between probability distributions and orthogonal polynomial families. This talk will demonstrate the technique and its applications.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is an intricate link between orthogonal polynomial families and well-known probability distributions. Known as Polynomial Chaos, this technique is largely unknown outside of some engineering fields. Nevertheless, the method allows us to model arbitrary distributions (with finite second moment) using distributions that are more familiar, e.g. the uniform or normal distributions. The polynomial chaos technique shifts the burden of understanding random variables to one of understanding deterministic series coefficients.&lt;/p&gt;
&lt;p&gt;This method is particularly good for understanding dynamical systems with parametric uncertainty. The Polynomial Chaos expansion allows us to generate Monte Carlo simulations with far fewer simulation runs. In addition, we can use the method to quantify uncertainty in observations even when faced with small sample sizes. This talk will demonstrate the derivation of the technique and include some Python examples of ways it can be used to model systems and understand data in the presence of uncertainty. This will be a highly technical talk, touching on elements of measure-theoretic probability and functional analysis.&lt;/p&gt;
</summary></entry></feed>