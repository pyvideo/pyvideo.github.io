<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_edward-bullen.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-05-05T00:00:00+00:00</updated><entry><title>Building a ChatBot with Python, NLTK and scikit</title><link href="https://pyvideo.org/pydata-london-2017/building-a-chatbot-with-python-nltk-and-scikit.html" rel="alternate"></link><published>2017-05-05T00:00:00+00:00</published><updated>2017-05-05T00:00:00+00:00</updated><author><name>Edward Bullen</name></author><id>tag:pyvideo.org,2017-05-05:pydata-london-2017/building-a-chatbot-with-python-nltk-and-scikit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Filmed at PyData 2017&lt;/p&gt;
&lt;p&gt;Description
Introducing the basics of Natural Language Processing using Python NLTK and Machine Learning packages to classify language in order to create a simple Q&amp;amp;A bot.&lt;/p&gt;
&lt;p&gt;Abstract
Working code samples and a basic ChatBot framework (written in Python) will be provided and explained so that a simple Q&amp;amp;A bot that learns from previous experience and responds to questions with appropriate answers can be created. In this talk we will cover:&lt;/p&gt;
&lt;p&gt;Build a basic ChatBot Framework using core Python and a SQL database.
Demonstrate and experiment with a Learning-by-Example bot using ranking functions in Python and SQL to get some basic chat functionality working.
Introduce the Python NLTK to extract features from the chat sentences and words stored in the chatbot database.
Work through a feature engineering example using NLTK and Sci-Kit and Numpy to show how we can classify sentences using Supervised Learning and estimate the accuracy of our classification model.
Apply the sentence classification ML model to our chatbot engine to target responses more accurately.
Prerequisites&lt;/p&gt;
&lt;p&gt;Attendees will need:
+ Anaconda for Python 3.5 or 3.6
+ NLTK (Python Natural Language Toolkit - pip install nltk)
+ The Stanford Java CoreNLP Parser (&lt;a class="reference external" href="https://stanfordnlp.github.io/CoreNLP/"&gt;https://stanfordnlp.github.io/CoreNLP/&lt;/a&gt; or wget &lt;a class="reference external" href="http://nlp.stanford.edu/software/stanford-corenlp-full-2016-10-31.zip"&gt;http://nlp.stanford.edu/software/stanford-corenlp-full-2016-10-31.zip&lt;/a&gt; and un-zip)
+ Java rel 8&lt;/p&gt;
&lt;p&gt;Theoretically all of this could be installed on the day but it would just help to save time by preparing in advance. Most of what I am demonstrating will probably work against Python 2.7, but it hasnâ€™t been tested with 2.7.&lt;/p&gt;
</summary></entry></feed>