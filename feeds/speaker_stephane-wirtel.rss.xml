<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 11 Oct 2019 00:00:00 +0000</lastBuildDate><item><title>What’s new in Python 3.8?</title><link>https://pyvideo.org/pycon-de-2019/whats-new-in-python-38.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Stéphane Wirtel&lt;/p&gt;
&lt;p&gt;In few months, there will be the release of Python 3.8! As a core dev I would like to show you the new features of this version.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/CATV3T"&gt;https://de.pycon.org/program/CATV3T&lt;/a&gt;
Follow us on Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-11:pycon-de-2019/whats-new-in-python-38.html</guid></item><item><title>What's new in Python 3.7?</title><link>https://pyvideo.org/pycon-sk-2019/whats-new-in-python-37.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scheduled for release in mid-June before the conference, Python 3.7 is
shaping up to be a feature-packed release! This talk will cover all the
new features of Python 3.7, including the Data Classes and the Context
Variables for the asynchronous programming with asyncio.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-03-23:pycon-sk-2019/whats-new-in-python-37.html</guid></item><item><title>What is new in Python 3.7?</title><link>https://pyvideo.org/pycon-ireland-2018/what-is-new-in-python-37.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Released in June before the conference, Python 3.7 is a feature-packed release! This talk will cover all the new features of Python 3.7, including the Data Classes and the Context Variables for the asynchronous programming with asyncio.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ireland-2018/what-is-new-in-python-37.html</guid><category>python 3.7</category></item><item><title>Les nouveautés dans Python 3.7</title><link>https://pyvideo.org/pycon-fr-2018/les-nouveautes-dans-python-37.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python3.7 a apporté sa dizaine de changements, mais on verra en détails
les changements apportés à asyncio par les Context Variables.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vincent Maillol</dc:creator><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-06:pycon-fr-2018/les-nouveautes-dans-python-37.html</guid></item><item><title>Python, je t'aime!</title><link>https://pyvideo.org/pycon-fr-2018/python-je-taime.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Depuis 20 ans, j'utilise Python au quotidien en tant qu'amateur et
depuis 2008 en tant que pro. Cependant, depuis quelques années je suis
devenu un membre &amp;quot;actif&amp;quot; de la communauté Python et j'aimerais vous
montrer pourquoi j'aime Python. Comme Brett Cannon l'a déjà dit, nous
venons pour le language mais nous restons pour la communauté. Alors
cette talk est fait pour vous, je veux partager mon enthousiasme
concernant Python et si vous me connaissez, vous aimerez être présent à
ma talk, car certains se reconnaîtront comme mes amis ;-)&lt;/p&gt;
&lt;p&gt;Talk complètement improvisé, mais certainement fun comme à mon habitude.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-06:pycon-fr-2018/python-je-taime.html</guid></item><item><title>What's new in Python 3.7?</title><link>https://pyvideo.org/pycon-de-2018/whats-new-in-python-37.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scheduled for release in mid-June after the conference, Python 3.7 is
shaping up to be a feature-packed release! This talk will cover all the
new features of Python 3.7, including the Data Classes and the Context
Variables for the asynchronous programming with asyncio.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-25:pycon-de-2018/whats-new-in-python-37.html</guid><category>Community</category><category>Django</category><category>DevOps</category></item><item><title>Python And PostgreSQL</title><link>https://pyvideo.org/pycon-de-2018/python-and-postgresql.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-24:pycon-de-2018/python-and-postgresql.html</guid></item><item><title>CPython loves your Pull Requests</title><link>https://pyvideo.org/pycon-italia-2018/cpython-loves-your-pull-requests.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="section" id="description"&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;p&gt;CPython, what’s CPython. CPython is the official implementation of
Python, written in C. And it’s not just a implementation, it is a group
of volunteers and where they daily work on the project but there is no
many active contributors.&lt;/p&gt;
&lt;p&gt;In this talk, I would like to prove to you than you can become an active
contributor of CPython.&lt;/p&gt;
&lt;p&gt;The core developers of CPython need your help, for example, with the
review of some patches, you can comment a patch or try to reproduce a
bug.&lt;/p&gt;
&lt;p&gt;In the past, when you wanted to contribute to CPython, you had to use
the bug tracker interface and send a patch, this patch was reviewed if
you were lucky and after commented etc…. but this process was really
long and time consuming.&lt;/p&gt;
&lt;p&gt;Now with the new process based on GitHub and Git, you can create a new
branch on your local repository and just send a Pull Request. The Pull
Request is just awesome, it will be reviewed really quickly, we will
comment your Pull Request and if the code is correct and the tests pass,
then you PR will be merged in CPython.&lt;/p&gt;
&lt;p&gt;We love and need your Pull Requests for CPython.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="audience"&gt;
&lt;h4&gt;Audience&lt;/h4&gt;
&lt;p&gt;For new comers to CPython and the future contributors and of course for
the regular contributors and core-dev of CPython.&lt;/p&gt;
&lt;p&gt;With this migration to GitHub, I will show the work done by the
migration team, the benefits of this migration and the new
tools/workflow. Few tools have been developed to help the core-dev. For
example, Miss Islington has been developed for an automatic back-port of
a branch from Python ‘master’ to Python 3.6 or 3.5, just with a “label”
on the Pull Request&lt;/p&gt;
&lt;p&gt;I will show some stats about the contributors and the contributions on
the CPython project. For example, in November 2017, 4207 pull requests
from the community since the migration in Feb 2017.&lt;/p&gt;
&lt;p&gt;The talk is explained with a story “Once upon a time” and with humour.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="outline"&gt;
&lt;h4&gt;Outline&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction&lt;ul&gt;
&lt;li&gt;small history about the beginning of Python, the status and the
challenges.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Former workflows, former tools:&lt;ul&gt;
&lt;li&gt;the CLA (PSF Contributor Agreement)&lt;/li&gt;
&lt;li&gt;the bug tracker&lt;/li&gt;
&lt;li&gt;patch review with the Rietveld tool&lt;/li&gt;
&lt;li&gt;typical workflow&lt;/li&gt;
&lt;li&gt;conclusion: We have an issue for the new comers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;New workflow, new tools&lt;ul&gt;
&lt;li&gt;Git, why?&lt;/li&gt;
&lt;li&gt;Github, why?&lt;/li&gt;
&lt;li&gt;Web interface, Pull Requests, Dashboards&lt;/li&gt;
&lt;li&gt;REST API, GraphQL API for the statistics&lt;/li&gt;
&lt;li&gt;Automation with Travis, AppVeyor&lt;/li&gt;
&lt;li&gt;New Bots: Bedevere, Miss Islington, “The Knights who say ni!”&lt;/li&gt;
&lt;li&gt;New tool: Blurb&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Comparison between the former and new workflow&lt;/li&gt;
&lt;li&gt;Statistics (between Feb 2017, and Nov 2017)&lt;ul&gt;
&lt;li&gt;Number of Pull Requests (4204)&lt;/li&gt;
&lt;li&gt;Number of Contributors (586) vs Core Dev&lt;/li&gt;
&lt;li&gt;Merge time, Top, Average, etc….&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q&amp;amp;A ?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="additional-notes"&gt;
&lt;h4&gt;Additional notes&lt;/h4&gt;
&lt;p&gt;This talk has been presented at PyCon Canada in November 2017 at
Montreal in front of two core-devs of Python, Brett Cannon and Mariatta
Wijaya. Also reviewed by Victor Stinner core-dev python&lt;/p&gt;
&lt;p&gt;My talk has been shared on the python-dev mailing list by Victor
Stinner:
&lt;a class="reference external" href="https://mail.python.org/pipermail/python-dev/2017-December/151051.html"&gt;https://mail.python.org/pipermail/python-dev/2017-December/151051.html&lt;/a&gt;
because the statistics were interesting for the core-dev.&lt;/p&gt;
&lt;p&gt;Presentation at PyCon Canada 2017: &lt;a class="reference external" href="https://2017.pycon.ca/schedule/4/"&gt;https://2017.pycon.ca/schedule/4/&lt;/a&gt;
Slides:
&lt;a class="reference external" href="https://speakerdeck.com/matrixise/cpython-loves-your-pull-requests"&gt;https://speakerdeck.com/matrixise/cpython-loves-your-pull-requests&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My experience, speaker at PyCon Canada 2015, 2016 and 2017 Python FOSDEM
2013, 2014, 2015 and 2017 PyCon Ireland 2015, 2016, and 2017 PyCon
France 2012, 2014, 2016, 2017 PyCon UK 2015 EuroPython 2015, 2016 and
2017. Montreal Python September 2015 and November 2017.&lt;/p&gt;
&lt;p&gt;Organizer of Python FOSDEM (+- 600 people) in Belgium Co-Organizer of
EuroPython 2015, 2016 and 2017 (as member of the Web workgroup).&lt;/p&gt;
&lt;p&gt;Fellow Member of the Python Software Foundation since 2013 Member of the
Fellow Workgroup for the PSF Member of the Marketing Workgroup for the
PSF&lt;/p&gt;
&lt;p&gt;Of course, contributor of CPython, mainly on Devguide and sometimes on
the main repository with some fixes, new features.&lt;/p&gt;
&lt;p&gt;For my contribution to the migration of Python.
&lt;a class="reference external" href="https://mail.python.org/pipermail/python-committers/2017-February/004220.html"&gt;https://mail.python.org/pipermail/python-committers/2017-February/004220.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Others presentations where I explain the interpreter and the bytecode of
Python &lt;a class="reference external" href="https://speakerdeck.com/matrixise/architecture-of-cpython-part-1"&gt;https://speakerdeck.com/matrixise/architecture-of-cpython-part-1&lt;/a&gt;
&lt;a class="reference external" href="https://speakerdeck.com/matrixise/exploring-our-python-interpreter"&gt;https://speakerdeck.com/matrixise/exploring-our-python-interpreter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 17:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:pycon-italia-2018/cpython-loves-your-pull-requests.html</guid><category>statistics</category><category>core-programming</category><category>CPython</category><category>community</category><category>github</category><category>git</category></item><item><title>What's new in Python 3.7</title><link>https://pyvideo.org/europython-2018/whats-new-in-python-37.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scheduled for release in mid-June before the conference, Python 3.7 is
shaping up to be a feature-packed release! This talk will cover all the
new features of Python 3.7, including the Data Classes and the Context
Variables for the asynchronous programming with asyncio.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-25:europython-2018/whats-new-in-python-37.html</guid></item><item><title>CPython loves your Pull Requests</title><link>https://pyvideo.org/pycon-ca-2017/cpython-loves-your-pull-requests.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;CPython, what's CPython. CPython is the official implementation of Python, written in C. And it's not just a implementation, it is a group of volunteers and where they daily work on the project but there is no many active contributors.&lt;/p&gt;
&lt;p&gt;In this talk, I would like to prove to you than you can become an active contributor of CPython.&lt;/p&gt;
&lt;p&gt;The core developers of CPython need your help, for example, with the review of some patches, you can comment a patch or try to reproduce a bug.&lt;/p&gt;
&lt;p&gt;In the past, when you wanted to contribute to CPython, you had to use the bug tracker interface and send a patch, this patch was reviewed if you were lucky and after commented etc.... but this process was really long and time consuming.&lt;/p&gt;
&lt;p&gt;Now with the new process based on GitHub and Git, you can create a new branch on your local repository and just send a Pull Request. The Pull Request is just awesome, we can comment it in just a few moments.&lt;/p&gt;
&lt;p&gt;We need your Pull Requests for CPython.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-11-19:pycon-ca-2017/cpython-loves-your-pull-requests.html</guid><category>cpython</category></item><item><title>Python loves your contributions</title><link>https://pyvideo.org/pycon-ukraine-2018/python-loves-your-contributions.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How can I contribute to Python? This is the first question when I
discuss with people and for this question, there is several answers. Of
course, you can contribute by code, or by documentation or with meetups,
but I will show you how you can contribute to Python. This talk is for
you if you wants to contribute to this awesome language, ecosystem
because the community is fun, we come for the Language and we stay for
the Community. So, What Can I Do For Python ?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 28 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-28:pycon-ukraine-2018/python-loves-your-contributions.html</guid></item><item><title>Django, from nightmare to dream, with good tools</title><link>https://pyvideo.org/pycon-ireland-2017/django-from-nightmare-to-dream-with-good-tools.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Maybe it's your life, imagine you are hired for a new job with a new dev team and they develop with Django, but they don't know the right tools for the development with Django. This talk is for you, from a legacy code with no tests, no documentation, no code coverage, I will show you some tools they can help you with this legacy code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/django-from-nightmare-to-dream-with-good-tools.html</guid><category>dev-server</category><category>profiling</category><category>tests</category><category>sentry</category></item><item><title>Va debugger ton Python!</title><link>https://pyvideo.org/montreal-python/va-debugger-ton-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cette présentation vous explique les bases de Pdb ainsi que GDB, afin de debugger plus facilement vos scripts Python.&lt;/p&gt;
&lt;p&gt;Montréal-Python 68: Wysiwyg Xylophone
&lt;a class="reference external" href="https://montrealpython.org/2017/11/mp68/"&gt;https://montrealpython.org/2017/11/mp68/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-11-20:montreal-python/va-debugger-ton-python.html</guid></item><item><title>Python et PostgreSQL, un mariage merveilleux</title><link>https://pyvideo.org/montreal-python/python-et-postgresql-un-mariage-merveilleux.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Montréal, 14 septembre 2014 - Python et PostgreSQL sont deux outils que nous aimons bien utiliser pour nos projets, mais savons-nous vraiment tout d'eux? Cette présentation de Stéphane Wirtel donne un bon aperçu de psycopg2, Peewee, SQLAlchemy, Alembic et PL/Python, ces librairies pouvant être utilisées avec PostgreSQL.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;À propos de Stéphane: &lt;a class="reference external" href="http://sflx.ca/swirtel"&gt;http://sflx.ca/swirtel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Diapositives: &lt;a class="reference external" href="https://goo.gl/UsPLwh"&gt;https://goo.gl/UsPLwh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Le mystère des tests unitaires #MP54&lt;/p&gt;
&lt;p&gt;Montréal, 14 septembre 2014 - Mélanie Dubois conte une tranche de vie sur les tests à l'Office National du Film du Canada (ONF). Pendant la présentation, elle présente quelques trucs qui ont permis d'accélérer la performance de ces tests mystérieux, le tout accompagné d'exemples concrets.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;À propos de Mélanie: &lt;a class="reference external" href="http://sflx.ca/mdubois"&gt;http://sflx.ca/mdubois&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;À propos de l'ONF: &lt;a class="reference external" href="https://www.onf.ca/"&gt;https://www.onf.ca/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;À propos des tests unitaires: &lt;a class="reference external" href="http://sflx.ca/testunitaire"&gt;http://sflx.ca/testunitaire&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enregistré et édité en direct par &amp;#64;ChristianAubry à Montréal Python 54 (MP54: Utopie virtualisée) avec un bon gros coup de main de Savoir-faire Linux(&lt;a class="reference external" href="http://sflx.ca/carrieres"&gt;http://sflx.ca/carrieres&lt;/a&gt;).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;À propos de MP54: &lt;a class="reference external" href="http://sflx.ca/MP54"&gt;http://sflx.ca/MP54&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Mon, 14 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-14:montreal-python/python-et-postgresql-un-mariage-merveilleux.html</guid></item><item><title>As-tu déja pensé a contribuer a CPython</title><link>https://pyvideo.org/pycon-fr-2017/as-tu-deja-pense-a-contribuer-a-cpython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tu veux contribuer a un projet d'envergure mais tu ne sais pas sur quel projet, alors je vais te presenter CPython, comment y contribuer, car nous recherchons des développeurs.&lt;/p&gt;
&lt;p&gt;Seconde partie de la présentation donnée lors de PyConFR 2016.&lt;/p&gt;
&lt;p&gt;J'expliquerai aussi ce qu'il se passe dans le monde Python et que se passe-t-il depuis le passage a Github.
Nous avons maintenant le devguide qui s'y trouve, ainsi que le core-workflow et d'autres outils.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/as-tu-deja-pense-a-contribuer-a-cpython.html</guid></item><item><title>Django, d'un cauchemar à un rêve avec de bonnes pratiques.</title><link>https://pyvideo.org/pycon-fr-2017/django-dun-cauchemar-a-un-reve-avec-de-bonnes-pratiques.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Toi aussi tu connais les nuits blanches parce que tes collegues ont ecrit du code qui ne vaut rien, alors ce talk est pour toi. Comment passer d'un code legacy et non maintenu et illisible, a un code qui sent bon et qui ne flingue pas les yeux quand tu le lis.&lt;/p&gt;
&lt;p&gt;Sérieusement, c'est mon aventure depuis quelques mois que je vais te raconter et comment j'ai réussi à m'en sortir et a avoir des collègues contents.&lt;/p&gt;
&lt;p&gt;TDD, Best pratices&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/django-dun-cauchemar-a-un-reve-avec-de-bonnes-pratiques.html</guid></item><item><title>PostgreSQL et Python, un beau mariage</title><link>https://pyvideo.org/pycon-fr-2017/postgresql-et-python-un-beau-mariage.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vous utilisez PostgreSQL, mais savez-vous que vous pouvez utiliser et étendre PostgreSQL avec Python et PL/Python?
En tant normal, nous utilisons PostgreSQL via psycopg2, mais dans cette présentation, nous verrons comment travailler avec PostgreSQL via SQLAlchemy et Peewee, ou comment réaliser des migrations avec Alembic. De plus, je vous ferai la visite guidée de PL/Python qui vous permettra d'étendre PostgreSQL en Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/postgresql-et-python-un-beau-mariage.html</guid></item><item><title>Va debugger ton Python!</title><link>https://pyvideo.org/pycon-fr-2017/va-debugger-ton-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Si tu penses que &lt;cite&gt;print()&lt;/cite&gt; est ta meilleure amie pour debugger ton script Python, alors il est vraiment necessaire que tu regardes cette presentation.&lt;/p&gt;
&lt;p&gt;Tu y decouvrira &lt;cite&gt;pdb&lt;/cite&gt; et &lt;cite&gt;gdb&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;Peut-etre aussi comment debugger en remote.&lt;/p&gt;
&lt;p&gt;En tout cas, ce talk est vraiment pour toi si tu penses que la fonction &lt;cite&gt;print()&lt;/cite&gt; est ton amie, alors je te donnerai des outils pour mieux t'aider.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/va-debugger-ton-python.html</guid></item><item><title>Django: From a nightmare to a dream with Best Practices.</title><link>https://pyvideo.org/europython-2017/django-from-a-nightmare-to-a-dream-with-best-practices.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the adventure in the source code of the site of EuroPython, we
have detected that the code was difficult to maintain. With the
members of the Web team, we have started to refactor the code with
the best practices and good concept. Also, we will see some awesome
libraries for the Django project.&lt;/p&gt;
&lt;p&gt;In brief, you have a legacy code and you want to improve it with best
practices, then this talk is for you.&lt;/p&gt;
&lt;p&gt;You don't want to break it but you don't want to change it because
you can break it at all times, we will show you how to improve an
existing code with some tools and best practices, and your code can
be deploy on Friday evening with no risk.&lt;/p&gt;
&lt;p&gt;From a nightmare to a dream.&lt;/p&gt;
&lt;p&gt;Keywords, TDD, Refactoring, Tests, BDD, Selenium, CI, and many more...&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-11:europython-2017/django-from-a-nightmare-to-a-dream-with-best-practices.html</guid></item><item><title>Python &amp; PostgreSQL, a Wonderful Wedding</title><link>https://pyvideo.org/pycon-ireland-2015/python-postgresql-a-wonderful-wedding.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python and PostgreSQL, two tools we like to use for our projects but do you know everything about them?&lt;/p&gt;
&lt;p&gt;The talk will give an overview of psycopg2, Peewee, SQLAlchemy, Alembic and multicorn, PL/Python, these libraries can be used with PostgreSQL.&lt;/p&gt;
&lt;p&gt;psycopg2, the well known connector, this basic component is really useful, well documented and battle-tested and used by the most famous toolkits of the Python ecosystem.
Peewee, a minimalist ORM for Python, clear and brief, this ORM can be used if you want create a software with a minimalist ORM.
SQLAlchemy, a Python SQL toolkit and Object Relational Mapper, you can use this library to create your models and interact with them.
Alembic, a lightweight database migration tool for usage with SQLAlchemy, allows to create some migration scripts for your project.
multicorn is a Python wrapper over the Foreign Data Wrapper of PostgreSQL
PL/Python, a procedural language for PostgreSQL, allows to write functions in the Python language.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-25:pycon-ireland-2015/python-postgresql-a-wonderful-wedding.html</guid></item><item><title>Exploring our Python Interpreter</title><link>https://pyvideo.org/pycon-ireland-2015/exploring-our-python-interpreter.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;During my last CPython sprint, I started to contribute to the CPython code, and I wanted to understand the beast.&lt;/p&gt;
&lt;p&gt;In this case, there is only one solution, trace the code from the beginning. From the command line to the interpreter, we will take part to an adventure.&lt;/p&gt;
&lt;p&gt;Overview of the structure of the Project and the directories.
From the Py_Main function, to the interpreter
the used technics for the Lexer, Parser and the generation of the AST and of course of the Byte Code.
we will see some byte codes with the dis module
How does VM works, it’s a stack machine.
the Interpreter and its main loop of the Virtual Machine.
The idea behind is just to show how CPython works for a new contributor to CPython&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/exploring-our-python-interpreter.html</guid></item><item><title>Architecture of CPython, the bricks!</title><link>https://pyvideo.org/pycon-ca-2016/architecture-of-cpython-the-bricks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Contribution to CPython is really funny, you can learn how the language
is designed, but you want to know where you should start when you have a
patch to provide. In this talk, I will explain the several components of
CPython and the architecture, how is the code designed.&lt;/p&gt;
&lt;div class="section" id="stephane-wirtel-bio"&gt;
&lt;h4&gt;Stéphane Wirtel Bio&lt;/h4&gt;
&lt;p&gt;Stéphane is Belgian software hacker, engaged and dad. Organiser of
PythonFOSDEM, &amp;#64;ThePSF Fellow, EuroPython Society Member and Member of
Association Francophone de Python and former OpenERP Core Dev (6y). He
has received a Community Service Award from the Python Software
Foundation.&lt;/p&gt;
&lt;p&gt;If you think distributed, asynchronous and others interesting subjects,
he will be happy to discuss with you.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sun, 13 Nov 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-11-13:pycon-ca-2016/architecture-of-cpython-the-bricks.html</guid></item><item><title>Lightning Talks</title><link>https://pyvideo.org/pycon-ca-2016/lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Various lightning talks&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Sun, 13 Nov 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-11-13:pycon-ca-2016/lightning-talks.html</guid><category>lightning talks</category></item><item><title>CPython - Bytecode and Virtual Machine</title><link>https://pyvideo.org/pycon-ireland-2016/cpython-bytecode-and-virtual-machine.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From a small example of code, we will generate the bytecode with the
compiler, we will study the generated bytecode with the tools of CPython
and especially we will see the execution of this bytecode by the virtual
machine with a modified version of CPython, just for this talk.This talk
is based on my previous talk &amp;quot;Exploring our Python Interpreter&amp;quot; but in
this talk, we will go more in the details of the interpreter and
especially of the virtual machine.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Sat, 05 Nov 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-11-05:pycon-ireland-2016/cpython-bytecode-and-virtual-machine.html</guid></item><item><title>Python and PostgreSQL a Wonderful Wedding</title><link>https://pyvideo.org/pycon-uk-2015/python-and-postgresql-a-wonderful-wedding.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python and PostgreSQL, two tools we like to use for our projects but do
you know everything about them?&lt;/p&gt;
&lt;p&gt;The talk will give an overview of psycopg2, Peewee, SQLAlchemy, Alembic
and multicorn, PL/Python, these libraries can be used with PostgreSQL.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;psycopg2, the well known connector, this basic component is really
useful, well documented and battle-tested and used by the most famous
toolkits of the Python ecosystem.&lt;/li&gt;
&lt;li&gt;Peewee, a minimalist ORM for Python, clear and brief, this ORM can be
used if you want create a software with a minimalist ORM.&lt;/li&gt;
&lt;li&gt;SQLAlchemy, a Python SQL toolkit and Object Relational Mapper, you
can use this library to create your models and interact with them.&lt;/li&gt;
&lt;li&gt;Alembic, a lightweight database migration tool for usage with
SQLAlchemy, allows to create some migration scripts for your project.&lt;/li&gt;
&lt;li&gt;multicorn is a Python wrapper over the Foreign Data Wrapper of
PostgreSQL&lt;/li&gt;
&lt;li&gt;PL/Python, a procedural language for PostgreSQL, allows to write
functions in the Python language.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find this talk on &lt;a class="reference external" href="https://speakerdeck.com/matrixise/python-and"&gt;https://speakerdeck.com/matrixise/python-and&lt;/a&gt;-
postgresql-a-wonderful-wedding-english&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Sun, 20 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-20:pycon-uk-2015/python-and-postgresql-a-wonderful-wedding.html</guid></item><item><title>Voyage au centre du monde CPython</title><link>https://pyvideo.org/pycon-fr-2016/voyage-au-centre-du-monde-cpython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vous desirez contribuer a CPython et vous ne savez pas comment ? Alors ce talk est fait pour vous!
En 2014, lors du PyCon US 2014 a Montreal, j'ai commence a contribuer a CPython via un sprint,
c'est ainsi que j'ai pu decouvrir les joies du dev de notre interpreteur favori.
A partir d'un exemple de code Python, nous allons decomposer l'interpreteur et voir ce
qu'il se passe dans ses entrailles.
De la simple expression &amp;quot;x = 2 + 2&amp;quot; executee sur la ligne de commande, nous voyagerons a travers le parser, et l'interpreteur.
Nous aurons le plaisir de rencontrer notre ami le compilateur qui transforme le code Python en ByteCode,
et ensuite la machine virtuelle qui execute le bytecode pour execute votre expression Python.
De plus, une section specifique sera presentee pour vous expliquer comment discuter et proposer
vos idees sur les contributions futures que vous pourrez apporter a CPython, tout en suivant
le workflow des Core Dev CPython.
Ce voyage interessant, permettra a toute personne de demarrer comme contributeur CPython
et d'apporter enfin une reponse a l'expression x = 2 + 2
Venez me rejoindre dans CPython.
Presente a EuroPython, PyCon IE, PyCon UK, PythonFOSDEM&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Sat, 15 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-15:pycon-fr-2016/voyage-au-centre-du-monde-cpython.html</guid></item><item><title>Exploring our Python Interpreter</title><link>https://pyvideo.org/europython-2016/exploring-our-python-interpreter.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Stephane Wirtel - Exploring our Python Interpreter
[EuroPython 2016]
[19 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/exploring-our-python-interpreter"&gt;https://ep2016.europython.eu//conference/talks/exploring-our-python-interpreter&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;During the last CPython sprints at PyCon US (Montreal), I started to
contribute to the CPython project and I
wanted to understand the beast.
In this case, there is only one solution, trace the code from the beginning.
From the command line to the interpreter, we will take part to an
adventure. The idea behind is just to show how CPython works for a new
contributor.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;During my last CPython sprint, I started to contribute to the CPython code and I
wanted to understand the beast.&lt;/p&gt;
&lt;p&gt;In this case, there is only one solution, trace the code from the beginning.
From the command line to the interpreter, we will take part to an adventure&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Overview of the structure of the project and the directories.&lt;/li&gt;
&lt;li&gt;From the Py_Main function to the interpreter.&lt;/li&gt;
&lt;li&gt;The used technics for the Lexer, Parser and the generation of the AST and of course of the Bytecodes.&lt;/li&gt;
&lt;li&gt;We will see some bytecodes with the dis module.&lt;/li&gt;
&lt;li&gt;How does VM works, it's a stack machine.&lt;/li&gt;
&lt;li&gt;The interpreter and its main loop of the Virtual Machine.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The idea behind is just to show how CPython works for a new contributor to
CPython.&lt;/p&gt;
&lt;p&gt;From the command line, we will learn that Python is a library and that we can
embed it in a C project. In fact we will see the Py_Main function to the ceval.c
file of the interpreter.&lt;/p&gt;
&lt;p&gt;But there is no magic in the CPython code, we will travel in the lexer and the
parser of CPython, and why not, by the AST for one Python expression.&lt;/p&gt;
&lt;p&gt;After the AST, we will visit the Compiler and the Bytecodes for the
interpreter.
Of course, we will learn there is the peepholer where some basic instructions
are optimised by the this component.&lt;/p&gt;
&lt;p&gt;And of course, the interpreter, this virtual machine is really interesting for
the newbiew, because it's a big stack where the bytecodes are executed one by
one on the stack and the ceval.c file.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Sun, 31 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-31:europython-2016/exploring-our-python-interpreter.html</guid></item><item><title>Exploring our Python interpreter</title><link>https://pyvideo.org/pycon-ca-2015/exploring-our-python-interpreter-stephane-wirtel.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;During my last CPython sprint, I started to contribute to the CPython code, and I wanted to understand the beast.&lt;/p&gt;
&lt;p&gt;In this case, there is only one solution, trace the code from the beginning. From the command line to the interpreter, we will take part to an adventure.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Overview of the structure of the Project and the directories.&lt;/li&gt;
&lt;li&gt;From the Py_Main function, to the interpreter&lt;/li&gt;
&lt;li&gt;the used technics for the Lexer, Parser and the generation of the AST and of course of the Byte Code.&lt;/li&gt;
&lt;li&gt;we will see some byte codes with the dis module&lt;/li&gt;
&lt;li&gt;How does VM works, it’s a stack machine.&lt;/li&gt;
&lt;li&gt;the Interpreter and its main loop of the Virtual Machine.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The idea behind is just to show how CPython works for a new contributor to CPython&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Sat, 07 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-07:pycon-ca-2015/exploring-our-python-interpreter-stephane-wirtel.html</guid></item><item><title>Evy</title><link>https://pyvideo.org/pycon-fr-2013/evy.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Evy est un serveur d'intégration continu, distribué et modulaire. Basé
sur Redis, Evy donna la possibilité de distribuer des jobs à travers un
réseau de Workers.&lt;/p&gt;
&lt;p&gt;De plus, de par son aspect modulaire, Evy permet à tout développeur
d'ajouter facilement de nouveaux modules qui réaliseront diverses
taches.&lt;/p&gt;
&lt;p&gt;Le projet est en cours de développement.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephane Wirtel</dc:creator><pubDate>Sat, 30 Nov 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-11-30:pycon-fr-2013/evy.html</guid></item></channel></rss>