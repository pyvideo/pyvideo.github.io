<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_aymeric-augustin.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-11-03T00:00:00+00:00</updated><entry><title>Aymeric Augustin about Debugging at Django: Under The Hood 2016</title><link href="https://pyvideo.org/django-under-the-hood-2016/aymeric-augustin-about-debugging-at-django-under-the-hood-2016.html" rel="alternate"></link><published>2016-11-03T00:00:00+00:00</published><updated>2016-11-03T00:00:00+00:00</updated><author><name>Aymeric Augustin</name></author><id>tag:pyvideo.org,2016-11-03:django-under-the-hood-2016/aymeric-augustin-about-debugging-at-django-under-the-hood-2016.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Slides: &lt;a class="reference external" href="https://speakerdeck.com/djangounderthehood/debugging-performance-with-django-by-aymeric-augustin"&gt;https://speakerdeck.com/djangounderthehood/debugging-performance-with-django-by-aymeric-augustin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Django: Under The Hood: &lt;a class="reference external" href="http://djangounderthehood.com/"&gt;http://djangounderthehood.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Django: Under The Hood is an annual Django conference for experienced Django developers. Come and learn about the internals of Django, and help to shape its future.&lt;/p&gt;
</summary></entry><entry><title>Keynote: Where the Wild Things Are</title><link href="https://pyvideo.org/djangocon-europe-2014/keynote-where-the-wild-things-are.html" rel="alternate"></link><published>2014-05-13T00:00:00+00:00</published><updated>2014-05-13T00:00:00+00:00</updated><author><name>Aymeric Augustin</name></author><id>tag:pyvideo.org,2014-05-13:djangocon-europe-2014/keynote-where-the-wild-things-are.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The concept of pluggable applications has been instrumental in the
development of the Django ecosystem and the quality of Django websites.
But it's bare- bones: the INSTALLED_APPS setting simply contains a list
of Python packages.&lt;/p&gt;
&lt;p&gt;In February 2007, Joseph Kocherhans uploaded a patch to allow changing
an application's label and providing a verbose name for the admin. The
scope of this ticket quickly escalated. Eventually it became known — and
feared — as &amp;quot;app-loading&amp;quot;.&lt;/p&gt;
&lt;p&gt;With every ticket closed as a duplicate, the monster grew stronger and
hope faded. Valiant efforts by contributors and core devs cornered the
beast into a cave but hardly weakened it. It was finally slain in Django
1.7.&lt;/p&gt;
&lt;p&gt;Judging by the releases notes, the results are underwhelming. Worse,
they come with an annoying list of backwards-incompatibilites. What was
that all about?&lt;/p&gt;
</summary></entry><entry><title>DjangoCon EU 2013: Aymeric Augustin - Enterprise Django: transactions for web developers</title><link href="https://pyvideo.org/djangocon-europe-2013/djangocon-eu-2013-aymeric-augustin-enterprise-django-transactions-for-web-developers.html" rel="alternate"></link><published>2013-05-15T00:00:00+00:00</published><updated>2013-05-15T00:00:00+00:00</updated><author><name>Aymeric Augustin</name></author><id>tag:pyvideo.org,2013-05-15:djangocon-europe-2013/djangocon-eu-2013-aymeric-augustin-enterprise-django-transactions-for-web-developers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Videos from DjangoCon Europe 2013 are kindly provided by Heroku, a cloud application platform -- a new way of building and deploying web apps: &lt;a class="reference external" href="http://heroku.com/"&gt;http://heroku.com/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Transactions for Web Developers</title><link href="https://pyvideo.org/djangocon-us-2013/transactions-for-web-developers.html" rel="alternate"></link><published>2013-10-03T00:00:00+00:00</published><updated>2013-10-03T00:00:00+00:00</updated><author><name>Aymeric Augustin</name></author><id>tag:pyvideo.org,2013-10-03:djangocon-us-2013/transactions-for-web-developers.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;TRANSACTIONS FOR WEB DEVELOPERS&lt;/p&gt;
&lt;p&gt;Audience level: Intermediate&lt;/p&gt;
&lt;p&gt;DESCRIPTION Django has since long outgrown its roots in publishing. It's
used in enterprise systems, under write-heavy workloads and strong data
integrity requirements. But transaction management barely changed since
the 0.9x days. Even veterans pull their hair out fighting DatabaseErrors
when they use it. At last transaction handling will be overhauled in
Django 1.6. How does the new system work, and why?&lt;/p&gt;
&lt;p&gt;ABSTRACT This talk will start from the transactional features of
databases and work its way through the Python database API, up to
Django's transaction management. It'll explain the downsides of Django's
historical transaction handling and describe the new system introduced
in Django 1.6.&lt;/p&gt;
</summary></entry><entry><title>State of the Real-time Web with Django</title><link href="https://pyvideo.org/djangocon-us-2013/state-of-the-real-time-web-with-django.html" rel="alternate"></link><published>2013-10-01T00:00:00+00:00</published><updated>2013-10-01T00:00:00+00:00</updated><author><name>Aymeric Augustin</name></author><id>tag:pyvideo.org,2013-10-01:djangocon-us-2013/state-of-the-real-time-web-with-django.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;STATE OF THE REAL-TIME WEB WITH DJANGO&lt;/p&gt;
&lt;p&gt;Thursday 11:30 a.m.--12:15 p.m.&lt;/p&gt;
&lt;p&gt;Audience level: Novice&lt;/p&gt;
&lt;p&gt;DESCRIPTION In 2013, &amp;quot;real-time&amp;quot; is more than a buzzword: it's a reality
on the Web. Unfortunately, for users of Django, it's still a foreign
world that involves new concepts and new components, and it doesn't
integrate well with traditional infrastructure. What is the real-time
web? Why is it hard to support in Django? What are our options today?
What can we expect in the future?&lt;/p&gt;
&lt;p&gt;ABSTRACT This talk will start by describing the protocols supporting the
real-time web and showing a few use cases. Then it will explain how this
new paradigm performs and scales differently from the traditional
request / response cycle and it will present some software components
that can help build a real-time architecture. Finally it will analyse
what PEP 3156 could mean for Django.&lt;/p&gt;
</summary></entry></feed>