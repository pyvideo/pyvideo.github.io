<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_bjorn-meier.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-25T00:00:00+00:00</updated><entry><title>Cloud chat bot for lazy people</title><link href="https://pyvideo.org/pycon-de-2018/cloud-chat-bot-for-lazy-people.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Björn Meier</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/cloud-chat-bot-for-lazy-people.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At work we established Slack years ago as our chat application and by
now quite a percentage of communication goes through it. As a result it
got much easier to contact one person or a group simultaneously. And
this is good as we can share our knowledge save each other time. But it
also introduced a category of questions in the chat which only require
simple tedious tasks to get the answer and then post it as a response.
One possibility is to educate and point others to the place where they
can find the answer or what tasks they have to do. The other one is use
a chat bot for this. Both ways have advantages and for the bot it is
that you can import a specific type of response more easily into a
conversation without first gathering the information and copy and paste
it. I am a developer and service operator and one category of questions
which fits this is the category of service health questions, like &amp;quot;Does
service X has a problem right now?&amp;quot;. Hence, I will use a bot to answer
them. First I will show you how you can create a python bot for the
Azure bot service. With it the questioner then can either directly use
the bot to answer his question or you can just create the response for
him without going to the service health monitoring. In this case the
service health information has to be obtained from a Prometheus
monitoring service and then transformed into a chat message.&lt;/p&gt;
</summary><category term="DevOps"></category><category term="Infrastructure"></category></entry><entry><title>No Compromise: Use Ansible properly or stick to your scripts</title><link href="https://pyvideo.org/pycon-de-2017/no-compromise-use-ansible-properly-or-stick-to-your-scripts.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Björn Meier</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/no-compromise-use-ansible-properly-or-stick-to-your-scripts.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Bjoern Meier&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bjoern is a software engineer at Blue Yonder GmbH since 2016 after graduating in Computer Science. More correctly you could say he is a DevOps engineer at Blue Yonder where he is developing and operating - among other things - the services for the external data interfaces, preprocessing and data storage to enable the data scientists to run their prediction models. He loves the versatility and ecosystem of python to write e.g. production web apps, data analysis tools or operational scripts. If there was more free time he would like to spent it to dive deeper into functional programming languages like elixir to have a different view on things.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What you do in Ansible should be clean an simple. What we did was not. So I will show what we did wrong but also what we have changed or still have to, to make our life easier again. But I will also show how we progressively utilize Ansible to deploy our Data Science infrastructure.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ansible should help you to orchestrate your systems, automate the deployments and set up well defined infrastructures. But if you want to make something work quickly in Ansible the chances are high that you fall back to shell/command tasks, the mother of all evil. Those tasks usually prevent you from running dry runs where you would see the upcoming changes and you prevent Ansible to shine. So, we went blindly into every deployment and hoped the best. But we wanted to see what would change, we wanted to make ansible --check work again and therefore in this talk I will show you what we did wrong and what we changed to get there.&lt;/p&gt;
&lt;p&gt;More precisely, I will show what you can do to replace the nasty shell tasks with proper modules, plugins and filters, how they are developed, tested and included in your project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="infrasturcture"></category><category term="business"></category><category term="devops"></category><category term="ansible"></category></entry><entry><title>NetworkX Visualization Powered by Bokeh</title><link href="https://pyvideo.org/europython-2016/networkx-visualization-powered-by-bokeh.html" rel="alternate"></link><published>2016-08-05T00:00:00+00:00</published><updated>2016-08-05T00:00:00+00:00</updated><author><name>Björn Meier</name></author><id>tag:pyvideo.org,2016-08-05:europython-2016/networkx-visualization-powered-by-bokeh.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Björn Meier - NetworkX Visualization Powered by Bokeh
[EuroPython 2016]
[22 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/networkx-visualization-powered-by-bokeh"&gt;https://ep2016.europython.eu//conference/talks/networkx-visualization-powered-by-bokeh&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Visual data exploration, e.g. of social networks, can be ugly manual
work. The talk will be an introduction for the combined usage of
NetworkX and Bokeh in a Jupyter Notebook to show how easy interactive
network visualization can be.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;During some work with social network analysis my favoured tool to
study the networks was NetworkX. It provides a wide set of features
and algorithms for network analysis, all in Python. But the
functionality to visualize networks is not very strong and not to
mention the missing interactive manipulation. However during the
exploration of data: exporting, feeding an extra tool for
visualization and then manipulating data manually was a tedious
workflow.&lt;/p&gt;
&lt;p&gt;As I also had the optional target of presenting networks in a browser,
I improved this workflow by creating a Flask web application providing
interfaces to my networks. On the browser side I created a javascript
client based on D3.js. In retrospective the required programming
effort in Python and also in Javascript was too much for such a task.
And exactly this target, interactive visualization in a browser (and
as bonus in a Jupyter Notebook), can be achieved quiet easy now with
Bokeh.&lt;/p&gt;
&lt;p&gt;The talk will be a step by step introduction, starting with the basic
visualization of a network using Bokeh, NetworkX and a Jupyter
Notebook. Next, how to create interactions with your network which
will be used to change a network structure, e.g. a leaving person. As
we want to see directly the impact of these changes in a network I
will finally show how to update networks and visualize directly how
the importance of the remaining people changes. And all this can be
achieved with Python and maybe a bit of Javascript.&lt;/p&gt;
&lt;p&gt;(There was no video for the first few minutes of this talk).&lt;/p&gt;
</summary></entry></feed>