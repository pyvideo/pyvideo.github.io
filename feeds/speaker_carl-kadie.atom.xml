<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_carl-kadie.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-07-24T00:00:00+00:00</updated><entry><title>PySnpTools - A New Open Source Library for Reading &amp; Manipulating Matrix Data</title><link href="https://pyvideo.org/pydata-seattle-2015/pysnptools-a-new-open-source-library-for-reading-manipulating-matrix-data.html" rel="alternate"></link><published>2015-07-24T00:00:00+00:00</published><updated>2015-07-24T00:00:00+00:00</updated><author><name>Carl Kadie</name></author><id>tag:pyvideo.org,2015-07-24:pydata-seattle-2015/pysnptools-a-new-open-source-library-for-reading-manipulating-matrix-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Anyone who uses fast numeric NumPy arrays but would like a simpler-than-Pandas ability to slice-and-dice, read-and-write will find PySnpTools useful. I'll describe PySnpTools and also tell how it fits into our Machine Learning research group's long-term move from C++/VB to C# to Python. I'll also show how we use PySnpTools in FaST-LMM to do state-of-the-art Genome Wide Association Studies.&lt;/p&gt;
&lt;p&gt;The tutorial will cover:
PstReader: Full NumPy-meets-Pandas-like slicing and subsetting of matrix data before (and after) reading from disk. (For genomics, it includes support for the PLINK Bed and phenotype formats. It also includes low-memory, high-speed methods for common operations such as standardization and kernel-creation.)&lt;/p&gt;
&lt;p&gt;Utilities: One line intersecting and re-ordering of data for machine learning and statistics. Faster-than-NumPy extraction of a subarray from a NumPy array.&lt;/p&gt;
&lt;p&gt;IntRangeSet: Manipulate from zero to billions of integers as sets with very little memory.&lt;/p&gt;
&lt;p&gt;Python Trade Offs We Observe:
Our industrial research group focuses on Machine Learning. Over 15 years, we have moved from C++/VB to C# to Python. I'll talk about why we choose Python and what tradeoffs we see.&lt;/p&gt;
&lt;p&gt;Application:
PySnpTools spun out of FaST-LMM. FaST-LMM is an Open Source, Python-based state-of-the-art system for doing Genome Wide Association Studies (GWAS). It is described in publications in Nature Methods, Nature Genetics, and Bioinfomatics.&lt;/p&gt;
</summary></entry></feed>