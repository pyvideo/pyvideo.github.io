<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 03 Dec 2017 00:00:00 +0000</lastBuildDate><item><title>Emulating Lazy Evaluation</title><link>https://pyvideo.org/pybay-2017/emulating-lazy-evaluation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python does not support lazy evaluation, so lets make Python do lazy evaluation. It's fun and gives us an excuse to do some metaprogramming.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Henry Chen</dc:creator><pubDate>Fri, 11 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-11:pybay-2017/emulating-lazy-evaluation.html</guid><category>lightning talks</category></item><item><title>Taking the __magic__ out of Python classes</title><link>https://pyvideo.org/pybay-2017/taking-the-__magic__-out-of-python-classes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A peek into the internals of Python classes. Including the world's quickest introduction to metaclasses.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Henry Chen</dc:creator><pubDate>Fri, 11 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-11:pybay-2017/taking-the-__magic__-out-of-python-classes.html</guid><category>lightning talks</category></item><item><title>Async for the Python 2 Programmer</title><link>https://pyvideo.org/north-bay-python-2017/async-for-the-python-2-programmer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;# Background&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why async? CPU bound vs IO bound processes.&lt;/li&gt;
&lt;li&gt;Concurrency is not the same as multithreading&lt;/li&gt;
&lt;li&gt;Single threaded concurrency&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;# Generators - already in Python 2 !&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Generator - a function you can pause!&lt;/li&gt;
&lt;li&gt;How to implement async with generators and event loop in Python 2&lt;/li&gt;
&lt;li&gt;Real working code - a Python version of the JavaScript setTimeout function&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;# What is new in Python 3 ?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;async/await - really generators in disguise!&lt;/li&gt;
&lt;li&gt;asyncio library - ready made event loop and IO&lt;/li&gt;
&lt;li&gt;new syntax and new library are independent - you can mix and match old and new!&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Henry Chen</dc:creator><pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-12-03:north-bay-python-2017/async-for-the-python-2-programmer.html</guid></item></channel></rss>