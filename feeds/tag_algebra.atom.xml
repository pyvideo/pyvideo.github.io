<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_algebra.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-04-21T00:00:00+00:00</updated><entry><title>Predicting future states using High Order Markov Chains</title><link href="https://pyvideo.org/pycon-italia-2018/predicting-future-states-using-high-order-markov-chains.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Pietro Mascolo</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/predicting-future-states-using-high-order-markov-chains.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In modern automated systems (Interactive Voice Response, help chatbots,
routing systems, etc.) it is very often important to be able to predict
what is the most likely next step for the current user. One way of
addressing this issue is using sequence algorithms such as Markov
Chains.&lt;/p&gt;
&lt;p&gt;After a quick introduction to the concept of Markov chains and Markov
processes, we will explore the basics and the implementation of a simple
High Order Markov chain to predict what the most likely next state in a
sequence, based on previous states. We will be using anonymized
real-life data of an automated system and we will try to come up with a
model that can give us the most probable next state using Markov chains
of different orders.&lt;/p&gt;
&lt;p&gt;Things we will see in detail: - Mathematics and rationale behind Markov
Chains; - Basic implementation of First Order Markov Chains; -
Implementation of High Order Markov Chains; - Real life application of
the developed model.&lt;/p&gt;
&lt;p&gt;An undergraduate level of understanding of Linear Algebra and basic
Python skills will be useful to follow the talk.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 15:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="pydata"></category><category term="Pyston"></category><category term="algebra"></category><category term="Machine Learning"></category><category term="scipy"></category><category term="data-analysis"></category><category term="mathematics"></category><category term="data"></category><category term="python3"></category></entry><entry><title>Differential network analysis and graph classification: a glocal approach</title><link href="https://pyvideo.org/pycon-italia-2017/differential-network-analysis-and-graph-classification-a-glocal-approach.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Giuseppe Jurman</name></author><id>tag:pyvideo.org,2017-04-09:pycon-italia-2017/differential-network-analysis-and-graph-classification-a-glocal-approach.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We propose a novel solution in differential network analysis to both the
network comparison and the classification tasks by introducing the
glocal HIM metric for comparing graphs and a graph kernel induced by the
HIM measure. The HIM distance is defined as the one-parameter family of
product metrics linearly combining the normalised Hamming distance H and
the normalised Ipsen- Mikhailov spectral distance IM. The combination of
the two components within a single metric allows overcoming their
drawbacks and obtaining a measure which is simultaneously global and
local. Furthermore, plugging the HIM kernel into a Support Vector
Machine gives us a classification algorithm based on the HIM distance.
Here we outline the underlying theoretical details of the metric
construction, and we present several applications of the HIM distance
and the HIM kernel to datasets belonging to different areas, including
socioeconomics, neuroscience, oncogenomics and developmental genomics,
supporting the adoption of the HIM family as a general analysis tool for
information extraction based on a quantitative evaluation of the
difference among diverse instances of a complex system. We conclude
introducing the Open Source implementation of the HIM metrics provided
in the R package nettols and in its web interface ReNette.&lt;/p&gt;
</summary><category term="mathematics"></category><category term="algebra"></category><category term="Network"></category><category term="Machine Learning"></category></entry></feed>