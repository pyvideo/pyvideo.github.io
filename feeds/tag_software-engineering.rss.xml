<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 21 Apr 2018 00:00:00 +0000</lastBuildDate><item><title>Efficient Python development with small teams</title><link>https://pyvideo.org/europython-2013/efficient-python-development-with-small-teams.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc-André Lemburg</dc:creator><pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-05:europython-2013/efficient-python-development-with-small-teams.html</guid><category>quality-assurance</category><category>project-management</category><category>business</category><category>communication</category><category>testing</category><category>principles</category><category>application-design</category><category>design</category><category>software-engineering</category><category>strategies</category><category>best-practices</category><category>architecture</category></item><item><title>Introducing Python as a main programming language in a company</title><link>https://pyvideo.org/europython-2013/introducing-python-as-a-main-programming-language-in-a-company.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Büchler</dc:creator><pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-05:europython-2013/introducing-python-as-a-main-programming-language-in-a-company.html</guid><category>best-practices</category><category>teamwork</category><category>software-engineering</category><category>business</category><category>ecommerce</category></item><item><title>Python: da programmatore a domatore</title><link>https://pyvideo.org/europython-2013/python-da-programmatore-a-domatore.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alessandro Pisa</dc:creator><pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-05:europython-2013/python-da-programmatore-a-domatore.html</guid><category>debugging</category><category>testing</category><category>integration</category><category>scalability</category><category>tdd</category><category>optimization</category><category>design</category><category>software-engineering</category><category>best-practices</category><category>architecture</category></item><item><title>Solid Python Application Deployments For Everybody - Questions</title><link>https://pyvideo.org/europython-2013/solid-python-application-deployments-for-everybody-questions.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hynek Schlawack</dc:creator><pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-05:europython-2013/solid-python-application-deployments-for-everybody-questions.html</guid><category>best-practices</category><category>software-engineering</category><category>project-management</category><category>principles</category><category>automation</category></item><item><title>A hands-on introduction to software testing (reloaded) - Part 1</title><link>https://pyvideo.org/europython-2013/a-hands-on-introduction-to-software-testing-reloaded-part-1.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Federico Caboni</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/a-hands-on-introduction-to-software-testing-reloaded-part-1.html</guid><category>quality-assurance</category><category>trac</category><category>testing</category><category>tdd</category><category>refactoring</category><category>teamwork</category><category>software-engineering</category><category>best-practices</category><category>performance</category></item><item><title>A hands-on introduction to software testing (reloaded) - Part 2</title><link>https://pyvideo.org/europython-2013/a-hands-on-introduction-to-software-testing-reloaded-part-2.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Federico Caboni</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/a-hands-on-introduction-to-software-testing-reloaded-part-2.html</guid><category>quality-assurance</category><category>trac</category><category>testing</category><category>tdd</category><category>refactoring</category><category>teamwork</category><category>software-engineering</category><category>best-practices</category><category>performance</category></item><item><title>A hands-on introduction to software testing (reloaded) - Part 3</title><link>https://pyvideo.org/europython-2013/a-hands-on-introduction-to-software-testing-reloaded-part-3.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Federico Caboni</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/a-hands-on-introduction-to-software-testing-reloaded-part-3.html</guid><category>quality-assurance</category><category>trac</category><category>testing</category><category>tdd</category><category>refactoring</category><category>teamwork</category><category>software-engineering</category><category>best-practices</category><category>performance</category></item><item><title>Designing Large-Scale Applications in Python</title><link>https://pyvideo.org/europython-2013/designing-large-scale-applications-in-python.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc-André Lemburg</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/designing-large-scale-applications-in-python.html</guid><category>business</category><category>database</category><category>integration</category><category>scalability</category><category>servers</category><category>refactoring</category><category>application-design</category><category>design</category><category>software-engineering</category><category>framework</category><category>sql</category><category>best-practices</category><category>architecture</category></item><item><title>Meta Programming - Some Use Cases for Everyday Programming</title><link>https://pyvideo.org/europython-2013/meta-programming-some-use-cases-for-everyday-programming.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Müller</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/meta-programming-some-use-cases-for-everyday-programming.html</guid><category>debugging</category><category>metaprogramming</category><category>testing</category><category>principles</category><category>refactoring</category><category>application-design</category><category>architecture</category><category>validation</category><category>software-engineering</category></item><item><title>Server side story</title><link>https://pyvideo.org/europython-2013/server-side-story.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simone Deponti</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/server-side-story.html</guid><category>HTTP</category><category>networking</category><category>deploy</category><category>mobile</category><category>javascript</category><category>desktop</category><category>sysadmin</category><category>json</category><category>gevent</category><category>design</category><category>software-engineering</category><category>best-practices</category><category>application-design</category><category>websockets</category><category>architecture</category></item><item><title>Python: from programmer to tamer</title><link>https://pyvideo.org/europython-2013/python-from-programmer-to-tamer.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alessandro Pisa</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/python-from-programmer-to-tamer.html</guid><category>debugging</category><category>testing</category><category>integration</category><category>scalability</category><category>tdd</category><category>optimization</category><category>design</category><category>software-engineering</category><category>best-practices</category><category>architecture</category></item><item><title>Solid Python Application Deployments For Everybody</title><link>https://pyvideo.org/europython-2013/solid-python-application-deployments-for-everybody.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hynek Schlawack</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:europython-2013/solid-python-application-deployments-for-everybody.html</guid><category>best-practices</category><category>software-engineering</category><category>project-management</category><category>principles</category><category>automation</category></item><item><title>Lessons from a massive, openly-developed project</title><link>https://pyvideo.org/pycon-italia-2018/lessons-from-a-massive-openly-developed-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenStack is a massive open source project, formed of multiple
components written in Python. Created in 2010, it attracted thousands of
developers which produced hundreds of thousands of commits. It is
completely openly-developed: there is no single organization owning it,
and anyone can participate on a level playing ground.&lt;/p&gt;
&lt;p&gt;During this wild ride, we discovered new classes of issues, crafted
novel solutions, made mistakes and learned lessons, most of them
applicable to other open source projects. Come learn about software
engineering best practices, open collaboration advice and other fun tips
and tricks based on our experience ! No prior experience with OpenStack
is needed to attend this talk.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 14:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thierry Carrez</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:pycon-italia-2018/lessons-from-a-massive-openly-developed-project.html</guid><category>quality-assurance</category><category>project-management</category><category>continuous-integration</category><category>#lessonslearned</category><category>collaboration</category><category>principles</category><category>software-engineering</category><category>best-practices</category><category>OpenStack</category><category>release-engineering</category></item><item><title>Testing, then once you got there?</title><link>https://pyvideo.org/pycon-italia-2018/testing-then-once-you-got-there.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I benefici di una testsuite completa e coerente sono un dato di fatto,
ma una volta completata la nostra test suite è lì che cominciano i veri
problemi ed è lì che diventa meno chiaro come muoversi.&lt;/p&gt;
&lt;p&gt;Che rapporto tenere tra le tipologie di test? Le Unit Test sono
efficienti per identificare problemi e garantire comportamenti
consistenti sul lungo termine, ma sono come verificare che le gambe
camminano e le braccia fanno le flessioni senza verificare che un uomo
intero riesca a camminare e fare le flessioni. I test e2e invece sono
efficacissimi nel garantire il comportamento del sistema nel suo
insieme, ma possono rapidamente diventare lenti ed insostenibili.&lt;/p&gt;
&lt;p&gt;Sappiamo bene che ci sono i mock e fake objects, ma quando veramente mi
conviene usare uno, l’altro o l’implementazione reale? Un test che
riceve dei MagicMock e ritorna un MagicMock quanto è affidabile
realmente?&lt;/p&gt;
&lt;p&gt;Se ho decine di sviluppatori quanto serve testare i feature branches
isolatamente dagli altri feature branches?&lt;/p&gt;
&lt;p&gt;Questo talk cerca di evidenziare le problematiche che si devono
affrontare quando si parla di testing di un progetto di grande
complessità, che integra decine di servizi e cerca di fornire alcune
best practices pur conscio che non c’è mai una sola risposta.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 12:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alessandro Molina</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:pycon-italia-2018/testing-then-once-you-got-there.html</guid><category>best-practices</category><category>testing</category><category>software-engineering</category><category>coverage</category><category>application-development</category></item></channel></rss>