<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 11 Oct 2019 00:00:00 +0000</lastBuildDate><item><title>Introduction to automated testing with pytest</title><link>https://pyvideo.org/pycon-de-2019/introduction-to-automated-testing-with-pytest.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Raphael Pierzina&lt;/p&gt;
&lt;p&gt;Track:PyConDE
We'll learn how to get started with developing automated tests in Python with the [pytest] test framework.&lt;/p&gt;
&lt;p&gt;[pytest]: &lt;a class="reference external" href="https://github.com/pytest-dev/pytest"&gt;https://github.com/pytest-dev/pytest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/3JUWNC"&gt;https://de.pycon.org/program/3JUWNC&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raphael Pierzina</dc:creator><pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-11:pycon-de-2019/introduction-to-automated-testing-with-pytest.html</guid></item><item><title>Advanced pytest</title><link>https://pyvideo.org/europython-2019/advanced-pytest.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are many reasons why I think pytest is a fantastic test framework:
assertion introspection, setup and teardown with fixtures, parametrized
tests. But plugins are the real game changer!&lt;/p&gt;
&lt;p&gt;We'll dive right into customizing a test suite by developing a series of
pytest plugins based on a few neat hacks. We'll learn how to
automatically add markers to slow running tests, run only tests that use
a fixture which can be specified on the CLI, generate test reports in a
custom format, and automatically create GitHub issues for test
regressions. We'll wrap up this talk by using Cookiecutter to create
Python packages from our plugins that are ready to be published on PyPI.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raphael Pierzina</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:europython-2019/advanced-pytest.html</guid><category>Test Libraries (pytest/nose/...)</category><category>Testing</category><category>python</category></item><item><title>The Challenges of Maintaining a Popular Open-Source Project</title><link>https://pyvideo.org/europython-2018/the-challenges-of-maintaining-a-popular-open-source-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I will give an insight into what it means to maintain a
popular project for me personally, what it involves and what we as a
community can do to help out and finally why I think it’s an important
discussion to have.&lt;/p&gt;
&lt;p&gt;Cookiecutter is a command-line utility that creates projects from
templates. It is free and open-source software distributed under the
terms of a permissive BSD-3 license. With around 180 individual
contributors, more than 1000 public templates on GitHub alone, and
multiple talks at conferences, it is fair to say that there is a small
community around it.&lt;/p&gt;
&lt;p&gt;But who are the people behind the project and what is it that they are
doing?&lt;/p&gt;
&lt;p&gt;It’s been three years since I was granted the commit bit by the core
team. I have learned a lot about FOSS communities and also about myself.
At times I struggle with balancing my day job as a full-time Software
Engineer and maintaining Cookiecutter and other FOSS projects in my
spare time. By now I’m OK with not responding to issues immediately and
closing pull requests. However it took me quite a while to get to this
point.&lt;/p&gt;
&lt;p&gt;Maintaining FOSS projects can be incredibly rewarding and fun, but it
can also be quite frustrating. It involves so much more than writing
code or merging PRs, and yet sometimes it feels like that’s what most
people think. The goal of this talk is to start a conversation around
this topic and hear what other EuroPython attendees think about it and
their challenges as contributors or maintainers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raphael Pierzina</dc:creator><pubDate>Fri, 27 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-27:europython-2018/the-challenges-of-maintaining-a-popular-open-source-project.html</guid></item><item><title>Hi, my name is README!</title><link>https://pyvideo.org/write-the-docs-prague-2017/hi-my-name-is-readme.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raphael Pierzina</dc:creator><pubDate>Mon, 11 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-11:write-the-docs-prague-2017/hi-my-name-is-readme.html</guid></item><item><title>Kickstarting projects with Cookiecutter</title><link>https://pyvideo.org/pydata-berlin-2017/kickstarting-projects-with-cookiecutter.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cookiecutter is a command-line utility that generates projects from templates. You can use Cookiecutter to create new Python projects and to generate the initial code for different types of applications. In this talk, I will give an introduction to Cookiecutter, how to install it from PyPI, how to use it in the CLI, and finally how to author your own template.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Writing a Python script from scratch is fairly straightforward if you have some experience working in Python. You can usually get by with very little boilerplate code. Starting a new Python project, however, can be tiring if you decide to stick to best practices and plan on submitting it to PyPI later on. It requires great diligence and occasionally gets pretty cumbersome when if you're creating new tools on a regular basis.&lt;/p&gt;
&lt;p&gt;So why not use a template for your projects?&lt;/p&gt;
&lt;p&gt;Cookiecutter is a command-line utility that creates projects from templates. It is free and open-source software distributed under the terms of a permissive BSD-3 license. With around 150 individual contributors, more than 1000 public templates on GitHub, and multiple talks at conferences, it is fair to say that there is a solid community around it.&lt;/p&gt;
&lt;p&gt;In this talk, I will give an introduction on Cookiecutter, how to install it, how to use it in the CLI, and finally how to author your own template. You can use Cookiecutter for all sorts of projects: command-line scripts, Django webapps, and even non-Python projects.&lt;/p&gt;
&lt;p&gt;The community has authored and published several templates for Data Science projects, for instance widget-cookiecutter. I will demonstrate how to use Cookiecutter to create a custom Jupyter widget using that template.&lt;/p&gt;
&lt;p&gt;The goal of this talk is to teach how to integrate Cookiecutter into your own workflow and share learnings in the form of templates with your team at work and the open source community.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raphael Pierzina</dc:creator><pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-30:pydata-berlin-2017/kickstarting-projects-with-cookiecutter.html</guid></item><item><title>Hi, my name is README! - A Look at Why Docs are So Important</title><link>https://pyvideo.org/europython-2017/hi-my-name-is-readme-a-look-at-why-docs-are-so-important.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When starting a new project, as developers we usually get right into
hacking things, like tinkering with libs that we would like to learn
or solving a particular problem as quickly a possible. Occasionally
we also decide to publish the resulting package to PyPI, so that
others can use our nifty code, submit a pull request and maybe even
form a community around the project.&lt;/p&gt;
&lt;p&gt;If you're lucky someone might find it on the front-page of PyPI or
the GitHub search or maybe even Hacker News or Reddit. What happens
next is on you really.  But what does that mean?&lt;/p&gt;
&lt;p&gt;Before jumping right to the command line and installing your package,
those who are interested usually try to find out what problems the
project is solving and how it can help them with their own. That's
what your README file is for - it's most likely the first thing
potential users read, that you control.&lt;/p&gt;
&lt;p&gt;A good README briefly and concisely explains what your software does,
how it can be installed and what API it exposes. You also want to
provide information on the requirements, the license it uses and how
the project is managed. Who are you? How to get in touch to report
problems and give feedback? Where can I find the Code of Conduct for
this project?&lt;/p&gt;
&lt;p&gt;This talk is for everyone who is interested in working on open source
projects and wants to know how documentation can help newcomers and
more experienced users use your code and to encourage them to engage
in the community.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raphael Pierzina</dc:creator><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-12:europython-2017/hi-my-name-is-readme-a-look-at-why-docs-are-so-important.html</guid></item><item><title>Come to the Dark Side! We have a whole bunch of Cookiecutters!</title><link>https://pyvideo.org/europython-2015/come-to-the-dark-side-we-have-a-whole-bunch-of-cookiecutters.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Raphael Pierzina - Come to the Dark Side! We have a whole bunch of Cookiecutters!
[EuroPython 2015]
[23 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(This talk is intended for intermediate-level participants who have a
basic understanding of the Python language and contains quotes from
Darth Vader that some attendees may find hilarious)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Writing a Python script from scratch is fairly easy and you get on
with very little boilerplate code in general. However starting a new
Python project can be tiring if you decide to stick to best practices
and plan on submitting it to PyPI. It requires great diligence and
occasionally gets pretty cumbersome if you start new tools on a
regular basis.&lt;/p&gt;
&lt;div class="section" id="you-underestimate-the-power-of-a-good-template"&gt;
&lt;h4&gt;You underestimate the power of a good template&lt;/h4&gt;
&lt;p&gt;Why not just use a template for it? Cookiecutter is a CLI tool written
in pure Python that enables you to do so. Not only is it working for
Python code, but also markdown formats and even other programming
languages. We will talk about the ideas behind Cookiecutter and go
over how you can create your very own template, so you and others can
benefit from your experience.&lt;/p&gt;
&lt;p&gt;I would like to briefly go into the technologies used and how you can
get involved in the Cookiecutter GitHub project. There are already
plenty of Cookiecutter templates, or Cookiecutters as we call them,
available online. Most of them target Python projects, but others can
be used to create C++, LaTeX or Javascript projects.&lt;/p&gt;
&lt;p&gt;The ability to destroy a planet is insignificant next to the power of
Cookiecutter.
----------------------------------------------------------------------
-------------&lt;/p&gt;
&lt;p&gt;I will show you how to use Cookiecutter and highlight some of the
amazing templates created by the community. More importantly we will
create a Cookiecutter template from scratch using the example of a
simple Kivy app and make use of advanced features such as post-gen
hooks, copy-without-render and templates in context values.&lt;/p&gt;
&lt;p&gt;Finally I will recommend resources on how to follow up on this talk
and how to get in touch in case of any queries.&lt;/p&gt;
&lt;p&gt;GitHub: [&lt;a class="reference external" href="https://github.com/hackebrot][1"&gt;https://github.com/hackebrot][1&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;Twitter: [&lt;a class="reference external" href="https://twitter.com/hackebrot][2"&gt;https://twitter.com/hackebrot][2&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;Blog: [&lt;a class="reference external" href="http://www.hackebrot.de/][3"&gt;http://www.hackebrot.de/][3&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;[1]: &lt;a class="reference external" href="https://github.com/hackebrot"&gt;https://github.com/hackebrot&lt;/a&gt;
[2]: &lt;a class="reference external" href="https://twitter.com/hackebrot"&gt;https://twitter.com/hackebrot&lt;/a&gt;
[3]: &lt;a class="reference external" href="http://www.hackebrot.de/"&gt;http://www.hackebrot.de/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raphael Pierzina</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-03:europython-2015/come-to-the-dark-side-we-have-a-whole-bunch-of-cookiecutters.html</guid></item><item><title>Pytest 3.0</title><link>https://pyvideo.org/europython-2016/pytest-30.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Raphael Pierzina - Pytest 3.0
[EuroPython 2016]
[21 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/pytest-30"&gt;https://ep2016.europython.eu//conference/talks/pytest-30&lt;/a&gt;)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;New features of pytest's upcoming major version 3.0&lt;/li&gt;
&lt;li&gt;Breaking changes and other important information&lt;/li&gt;
&lt;li&gt;Recap of the first developer sprint in June, 2016&lt;/li&gt;
&lt;li&gt;Thank you notes to all who have contributed to the fundraiser&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Pytest is a mature testing framework for Python that is developed by a
thriving and ever-growing community of volunteers. Following the
principle of &amp;quot;no API is the best API&amp;quot; it uses plain assert statements
and regular Python comparisons. Writing tests with pytest requires
little to no boilerplate code and powerful features allow easy
parametrization and intelligent test selection.&lt;/p&gt;
&lt;p&gt;In this talk we will have an in-depth look at new features of pytest
3.0 and live demo possible use cases. We will also learn about
important bugfixes and other enhancements of the upcoming major
release. Backwards-incompatible changes will be addressed and changes
made to the documentation will be highlighted.&lt;/p&gt;
&lt;p&gt;If you are already familiar with pytest, you will be happy to hear
about significant improvements of the fixture and hook system but also
what's in store for a better integration with tox, an important tool
that allows testing across different Python versions.&lt;/p&gt;
&lt;p&gt;In June, 2016 more than 25 Pythonistas from around the globe gather in
Freiburg, Germany to work on the release and set the path for future
developments of the core framework. This is a big step forward for the
project made posssible by a fundraiser that reached 108% of it's
initial goal.&lt;/p&gt;
&lt;p&gt;I will share our experiences from the developer sprint while they are
still fresh and explain why these events are incredibly important for
a community and give advice on how to organize your own.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raphael Pierzina</dc:creator><pubDate>Thu, 04 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-04:europython-2016/pytest-30.html</guid></item></channel></rss>