<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Vinícius Gubiani Ferreira</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 17 May 2024 00:00:00 +0000</lastBuildDate><item><title>Effective Code Reviews</title><link>https://pyvideo.org/europython-2020/effective-code-reviews.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The edge between hard skills and soft skills&lt;/p&gt;
&lt;p&gt;Does your company uses code review? In this talk I will demonstrate why it should start using them immediately, share the many benefits and situations we've gone through, besides good practices that should be used for effective code reviews, that add quality to the product/service that is being delivered.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vinicius Gubiani Ferreira</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/effective-code-reviews.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Agile</category><category>Best Practice</category><category>Clean Code</category><category>Code Analysis</category><category>Communication</category></item><item><title>PEP 683: Immortal Objects - A new approach for memory managing</title><link>https://pyvideo.org/pycon-us-2024/pep-683-immortal-objects-a-new-approach-for-memory-managing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For most people that use Python, worrying about memory is not an issue.
But that's not the case when you have to handle a lot of requests on a
large scale. So how do you reduce memory consumption without affecting
the CPU?&lt;/p&gt;
&lt;p&gt;In this presentation I'll discuss about memory management in Python from
the basics, where the necessity for PEP 683 came from, and the changes
introduced by it. I also intend to discuss why this PEP is so important
for the language, and what we'll be able to achieve with it in the
future, such as changes to the GIL and true parallelism.&lt;/p&gt;
&lt;p&gt;The talk is targeted for folks who are intermediate/advanced
pythonistas. People who are just starting with Python (maybe less than
1.5 years) may feel a bit lost. Even so, curious learners are more than
welcome to join, and I'll try my best to make it easy for all audiences
on this advanced topic. After this presentation, participants will learn
a bit more about how memory management works under the hood in python,
and how it may change in the next couple of years.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vinícius Gubiani Ferreira</dc:creator><pubDate>Fri, 17 May 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-05-17:/pycon-us-2024/pep-683-immortal-objects-a-new-approach-for-memory-managing.html</guid><category>PyCon US 2024</category></item><item><title>Getting started with Fuzz testing</title><link>https://pyvideo.org/pygotham-2021/getting-started-with-fuzz-testing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Is your project safe against unforeseen scenarios? Are you sure? How about
if we take it for a ride then? There is almost no software completely error
free. And catch all of the possible errors is hard, not to say almost
impossible, but what if we use tools that help us bring possible issues to
our attention? Those that might cause security issues, or bad user
experience.&lt;/p&gt;
&lt;p&gt;In this presentation I'll discuss how to get started with fuzz testing: The
art of hitting software with invalid, unexpected, or random data and seeing
how it reacts. I'll present valid scenarios for fixing the bugs found, some
of the existing tools, and how to integrate fuzz testing with our existing
tests.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vinicius Gubiani Ferreira</dc:creator><pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-10-02:/pygotham-2021/getting-started-with-fuzz-testing.html</guid><category>PyGotham 2021</category></item></channel></rss>