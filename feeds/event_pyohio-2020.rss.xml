<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - PyOhio 2020</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 25 Jul 2020 00:00:00 +0000</lastBuildDate><item><title>A Day Has Only 24±1 Hours</title><link>https://pyvideo.org/pyohio-2020/a-day-has-only-24-1-hours.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;On the first Sunday of November you may get “one more hour of sleep” but
as well may spend much more time debugging code dealing with the time
zones, daylight saving time shifts and datetime stuff in general. We'll
look at a few pitfalls you may encounter when working with datetimes in
Python. We'll dissect the pytz library, explain why it contains over 400
individual time zones while focusing on the 29 entries in the USA. We'll
also find the reason why pytz is not part of the standard Python, why it
gets updated so often and why even that won't solve all your problems.
And no, PEP 615 will not save you either. Two centuries of short-sighted
propaganda and long-term chaos in ten minutes. Maybe that will make you
want to avoid time zones in your code altogether!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miroslav Šedivý</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/a-day-has-only-24-1-hours.html</guid><category>PyOhio 2020</category></item><item><title>Apply for Grants To Fund Open Source Work</title><link>https://pyvideo.org/pyohio-2020/apply-for-grants-to-fund-open-source-work.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When I tell people about grants they could get to help fund work on open
source software projects, sometimes they are surprised because they
didn't know such grants existed. I share:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sample foundations and funders (such as
&lt;a class="reference external" href="https://www.mozilla.org/moss"&gt;Mozilla&lt;/a&gt;, the &lt;a class="reference external" href="https://chanzuckerberg.com/eoss/"&gt;Chan Zuckerberg
Initiative&lt;/a&gt;,
&lt;a class="reference external" href="https://nlnet.nl/"&gt;NLNet&lt;/a&gt;, and
&lt;a class="reference external" href="https://innovationfund.comcast.com/"&gt;Comcast&lt;/a&gt;) who want to fund
open source software projects, and how much they're paying out&lt;/li&gt;
&lt;li&gt;a quick case study on how the Python Software Foundation got funding
from Open Tech Fund to &lt;a class="reference external" href="https://wiki.python.org/psf/PackagingWG#Warehouse:_OTF_grant"&gt;improve security, accessibility, and
localization for
PyPI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;key steps in figuring out a good project idea, budgeting, hiring, and
submitting&lt;/li&gt;
&lt;li&gt;how the new &lt;a class="reference external" href="https://wiki.python.org/psf/ProjectFundingWG"&gt;Project Funding Working
Group&lt;/a&gt; at the PSF
can help you along the way&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sumana Harihareswara</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/apply-for-grants-to-fund-open-source-work.html</guid><category>PyOhio 2020</category></item><item><title>Are We Conditioning Our Children to Accept Biases?</title><link>https://pyvideo.org/pyohio-2020/are-we-conditioning-our-children-to-accept-biases.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Language being the center of human interactions can be used
affirmatively or destructively. It’s usage forms the basis of our
societies, our stories and our narratives. When children grow up in a
world where the stories consistently entitle them or belittle them, they
will internalize these beliefs without question. NLP considerably
automates the analysis that is paramount to setting the world right when
it comes to these societal beliefs. NLP has the potential to be an
excellent equalizer. Most children pick up notions from their
educational texts and the rules at their educational institute. Thus,
analyzing, identifying and eliminating cultural biases in the literature
used to educate would be among the first steps to fostering an equal
world. This presentation has an interdisciplinary basis, borrowing
concepts from psychology, linguistics, literature, statistics and
computer science.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aroma Rodrigues</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/are-we-conditioning-our-children-to-accept-biases.html</guid><category>PyOhio 2020</category></item><item><title>Behind the Scenes of Spell Checks!</title><link>https://pyvideo.org/pyohio-2020/behind-the-scenes-of-spell-checks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever missed rectifying a spelling mistake in an important email but were
super relieved that it got auto-corrected? Let’s understand what happens
under the hood. This talk introduces the algorithm behind handling
typos, the various Natural Language Processing techniques available and
how you can tweak them for your use-case!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Niharika Krishnan</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/behind-the-scenes-of-spell-checks.html</guid><category>PyOhio 2020</category></item><item><title>Big Data, No Big Deal: PySpark</title><link>https://pyvideo.org/pyohio-2020/big-data-no-big-deal-pyspark.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sick of feeling like those Big Data programmers must be way smarter than
you? Good news, you can catch up in five minutes. Spark is for big data
but the PySpark library makes using it no big deal.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catherine Devlin</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/big-data-no-big-deal-pyspark.html</guid><category>PyOhio 2020</category></item><item><title>Brain-Computer-Interface: Reading Human Brains Using Deep Learning</title><link>https://pyvideo.org/pyohio-2020/brain-computer-interface-reading-human-brains-using-deep-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Idea : Using deep learning to train and build a model that could read
the human brain&lt;/p&gt;
&lt;p&gt;1 in 8 people in the US alone suffers from muteness today. Statistics
related to the number of cases of Autism and other speaking disorder is
quite disappointing too. In recent years, researchers and scientists
have successfully used deep learning to read brain signals and translate
them into human-readable language like English. Hence, Deep learning has
given us all the hope to provide voiceless the voice.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hitesh Khandelwal</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/brain-computer-interface-reading-human-brains-using-deep-learning.html</guid><category>PyOhio 2020</category></item><item><title>Building Procedural Games with Python and Godot</title><link>https://pyvideo.org/pyohio-2020/building-procedural-games-with-python-and-godot.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn how to use Python with the open-source Godot game engine -
leverage the power of Python's ecosystem to build procedural content and
learn the basics of Godot.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.dropbox.com/s/z4p1iogjho4wkq7/Godot%20Python%20Resources.zip?dl=0"&gt;Download Talk Resources
Here&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Ridenour</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/building-procedural-games-with-python-and-godot.html</guid><category>PyOhio 2020</category></item><item><title>Civic Hacking &amp; Urban Informatics: Mapping Data with GeoPandas</title><link>https://pyvideo.org/pyohio-2020/civic-hacking-urban-informatics-mapping-data-with-geopandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As more and more communities are experiencing rapid urban sprawl, the
management of infrastructure and resources provided is becoming crucial.
Open source datasets are imperative to monitoring and implementing
change throughout cities; in fact, a large majority of these datasets
can be mapped spatially. But how can you visualize multiple datasets
spatially without skills in ArcGIS? This 10 minute thunder talk
highlights how to harness libraries in Python to visualize data
spatially through an urban informatics case study on bike sharing
systems.&lt;/p&gt;
&lt;p&gt;Mapping data geographically at industry level is performed in ArcGIS,
but ArcGIS is a complex, costly application. Mapping data helps us
understand how socio-technical systems are disrupted or improved by
laws, policies, and infrastructure projects. For example, in ArcGIS you
can map the percentage of the population within a high-crime
neighborhood or understand how the location of public transit correlates
to a neighborhood’s socioeconomic status. But, you can also map this
data using libraries in Python.&lt;/p&gt;
&lt;p&gt;This talk is geared towards those who have a basic understanding of data
science and data visualization, but want to dive deeper into the realms
of mapping data science for social good. From briefly reviewing methods
in Pandas to diving deep into methods in GeoPandas, the audience will
gain a better understanding of how to derive a spatial component from a
dataset, how to turn shapefiles into GeoDataFrames and plot them, and
how to create quantitative and thematic maps.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katelyn Morrison</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/civic-hacking-urban-informatics-mapping-data-with-geopandas.html</guid><category>PyOhio 2020</category></item><item><title>Create a Custom Chat Bot With Python and Azure Bot Service</title><link>https://pyvideo.org/pyohio-2020/create-a-custom-chat-bot-with-python-and-azure-bot-service.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With an abundance of chat bot options on the market, it can be hard to
evaluate which platform is the best fit. Finding an option which has
pre-built domains and services, but also allows for customization, will
help you decrease the level of effort and time to implement while still
providing complete control over the resulting product.&lt;/p&gt;
&lt;p&gt;In this talk, you will learn how Python NLP can be used in conjunction
with Azure Chat Bot services to quickly spin up a chat bot that can be
customized for your specific use case. Gaby Lio will review the
different options on the market, highlight the benefits of Azure Chat
Bot, and finish with an architectural overview and quick demo.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gabriella Lio</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/create-a-custom-chat-bot-with-python-and-azure-bot-service.html</guid><category>PyOhio 2020</category></item><item><title>Dealing with Fear: a Primer</title><link>https://pyvideo.org/pyohio-2020/dealing-with-fear-a-primer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the things we encounter both as developers and human beings is
fear. Fear is one of our most natural reactions to uncertainty and the
unknown. But how could five minutes help us learn how to deal with the
fear we experience as developers? Craig Maloney will talk about some
source of fear, recognizing where fear appears, and some tips for
embracing the fears we're facing.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Craig Maloney</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/dealing-with-fear-a-primer.html</guid><category>PyOhio 2020</category></item><item><title>DevPI -- The Tool You Never Knew You Needed</title><link>https://pyvideo.org/pyohio-2020/devpi-the-tool-you-never-knew-you-needed.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the family summer camp, there is no internet, but great childcare. I
had time to write code, but no way to get packages from PyPI. I learned
about DevPI, a flexible Python package repository, which scales down to
one laptop in a summer camp, and up to a proxy for your thousand-person
company.&lt;/p&gt;
&lt;p&gt;The talk will cover diverse use cases for DevPI and how to implement
them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Moshe Zadka</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/devpi-the-tool-you-never-knew-you-needed.html</guid><category>PyOhio 2020</category></item><item><title>Everything You Know About MongoDB is Wrong!</title><link>https://pyvideo.org/pyohio-2020/everything-you-know-about-mongodb-is-wrong.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MongoDB is webscale, right? It's a JSON database, it uses map-reduce,
it's eventually consistent. Oh, and it's insecure.&lt;/p&gt;
&lt;p&gt;Let me take 10 minutes to clear up some things: MongoDB is an
ACID-compliant database with transactions, schemas &amp;amp; relationships. It
includes a powerful aggregation query language. MongoDB doesn't speak or
store JSON, and nowadays it comes with pretty good security defaults (we
think).&lt;/p&gt;
&lt;p&gt;I'll cover all of this and more, so you know what you need to if you're
considering MongoDB for your next (or current) project.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Smith</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/everything-you-know-about-mongodb-is-wrong.html</guid><category>PyOhio 2020</category></item><item><title>Flask in Five</title><link>https://pyvideo.org/pyohio-2020/flask-in-five.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to build a basic portfolio website using python and flask, in five
minutes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bethany Poulin</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/flask-in-five.html</guid><category>PyOhio 2020</category></item><item><title>Great Scott! Delorean for Datetime Manipulation in Python</title><link>https://pyvideo.org/pyohio-2020/great-scott-delorean-for-datetime-manipulation-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working with dates and times in Python can lead to frustration,
heartache, and, ironically, lost time – but it doesn’t have to! This
brief demo introduces Delorean, a library constructed to make datetime
manipulation in Python easier. Participants will discover how they can
use Delorean&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;to do datetime arithmetic,&lt;/li&gt;
&lt;li&gt;to handle time zone shifts,&lt;/li&gt;
&lt;li&gt;to convert datetimes into human language like “3 days from now,” and&lt;/li&gt;
&lt;li&gt;to generate equally spaced datetime intervals.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kimberly Fessel</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/great-scott-delorean-for-datetime-manipulation-in-python.html</guid><category>PyOhio 2020</category></item><item><title>How the Python Software Foundation Fared Through the Impact of the Pandemic</title><link>https://pyvideo.org/pyohio-2020/how-the-python-software-foundation-fared-through-the-impact-of-the-pandemic.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python Software Foundation was impacted by the pandemic like so many
other non-profits. This lightning talk will give an overview of the
PSF's finances, our plans for the remainder of the year and how they
have changed, and how we are approaching PyCon 2021.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ewa Jodlowska</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/how-the-python-software-foundation-fared-through-the-impact-of-the-pandemic.html</guid><category>PyOhio 2020</category></item><item><title>How to Run Your Favorite Python Package in R</title><link>https://pyvideo.org/pyohio-2020/how-to-run-your-favorite-python-package-in-r.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Reticulate is a package for R that allows you to run Python code inside
of R. Since both Python and R are very popular for common data science
tasks, it makes sense that you would want to use them together. In this
talk, I'll demo how to run a Python package inside of R.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica Garson</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/how-to-run-your-favorite-python-package-in-r.html</guid><category>PyOhio 2020</category></item><item><title>How to Write a Test Case</title><link>https://pyvideo.org/pyohio-2020/how-to-write-a-test-case.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing is vital for any type of software. Python has frameworks like
unittest and pytest for automating tests, too. But how can we write
&lt;em&gt;good&lt;/em&gt; test cases? One of the best patterns to follow is to write
independent test cases using the &lt;em&gt;Arrange-Act-Assert&lt;/em&gt; pattern. It works
for any kind of functional test. I'll show how it's done so that you can
write tests like a champ!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pandy Knight</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/how-to-write-a-test-case.html</guid><category>PyOhio 2020</category></item><item><title>It's Time for Py: Time Series Clustering and Anomaly Detection in Python</title><link>https://pyvideo.org/pyohio-2020/its-time-for-py-time-series-clustering-and-anomaly-detection-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Time series data provides helpful insights about trends, seasonality and
variance in applications varying from finance to the environment to
personal sensors. But what do you do when you have hundreds or thousands
of time series?&lt;/p&gt;
&lt;p&gt;Enter time series clustering. In this talk, Susan Devitt, Senior Data
Scientist, will introduce two algorithms for time series clustering -
Shape Based Distance and Dynamical Time Warp - implemented in the python
package dtwclust. Taking a real world example using daily financial
transaction data, she will show you when to consider clustering and how
it can be used for anomaly detection.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Susan Cameron Devitt</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/its-time-for-py-time-series-clustering-and-anomaly-detection-in-python.html</guid><category>PyOhio 2020</category></item><item><title>Let's Write an IPython Extension (in IPython)</title><link>https://pyvideo.org/pyohio-2020/lets-write-an-ipython-extension-in-ipython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;IPython is a Python REPL on steroids. It has many features, but if they
are not enough, you can easily add new ones by writing an extension. In
this talk, I will show you how to write one. We will build a simple code
profiler that will measure the execution time of each command. And, for
an additional challenge, I will do everything without closing IPython.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Witowski</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/lets-write-an-ipython-extension-in-ipython.html</guid><category>PyOhio 2020</category></item><item><title>Managing Your Finances Using Python</title><link>https://pyvideo.org/pyohio-2020/managing-your-finances-using-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quick run through of the beancount and fava packages&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Setting up beancount/fava&lt;/li&gt;
&lt;li&gt;seeing tables / charts / graphs in fava of your finances&lt;/li&gt;
&lt;li&gt;Show the beancount query language&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Ryall</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/managing-your-finances-using-python.html</guid><category>PyOhio 2020</category></item><item><title>MapReduce in 10 Minutes</title><link>https://pyvideo.org/pyohio-2020/mapreduce-in-10-minutes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MapReduce is actually extremely simple! Understand it in 10 minutes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Evan Smith</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/mapreduce-in-10-minutes.html</guid><category>PyOhio 2020</category></item><item><title>MPI Meets Python - How to Use MPI in the Python Universe</title><link>https://pyvideo.org/pyohio-2020/mpi-meets-python-how-to-use-mpi-in-the-python-universe.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Message Passing Interface (MPI) is a programming paradigm used in
Parallel applications to allow for communication amongst processes. In
order to process large amounts of data and efficiently deal with complex
operations, the Message Passing Interface (MPI) provides primitives
optimized specifically to handle such cases. The increasing need for
applying parallelism to applications with growing complexity, is handled
through the use of MPI to scale across machines and to efficiently
utilize all available resources.&lt;/p&gt;
&lt;p&gt;In this talk, we will detail various MPI primitives and delve into their
use cases that are applicable for modern-day high performance computing
needs. We will explore the MPI layer in the realm of Python and define
available means to utilize MPI with python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kawthar Shafie Khorassani</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/mpi-meets-python-how-to-use-mpi-in-the-python-universe.html</guid><category>PyOhio 2020</category></item><item><title>Object-Oriented Python Using functools.partial</title><link>https://pyvideo.org/pyohio-2020/object-oriented-python-using-functoolspartial.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In Python, &lt;strong&gt;everything&lt;/strong&gt; is an object -- &lt;tt class="docutils literal"&gt;int&lt;/tt&gt;s, &lt;tt class="docutils literal"&gt;bool&lt;/tt&gt;s,
&lt;tt class="docutils literal"&gt;class&lt;/tt&gt;es, and, yes even &lt;tt class="docutils literal"&gt;function&lt;/tt&gt;s. This has many benefits,
but it also allows us to write un-Pythonic code that is hard to follow.&lt;/p&gt;
&lt;p&gt;This talk will demonstrate HOWTO design Object-Oriented solutions using
only functions, built-in data structures, and the standard library.&lt;/p&gt;
&lt;p&gt;After this talk, attendees will have a better understanding of how
Python classes &lt;tt class="docutils literal"&gt;function&lt;/tt&gt; behind the scenes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aly Sivji</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/object-oriented-python-using-functoolspartial.html</guid><category>PyOhio 2020</category></item><item><title>Open Source Fights COVID-19</title><link>https://pyvideo.org/pyohio-2020/open-source-fights-covid-19.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From health professionals and protective equipment to tests and
ventilators, the COVID-19 pandemic is stretching our finite health care
resources dangerously thin. As a result, this unprecedented test of our
health care system is forcing us to be agile and adaptable. One of the
weapons we have in our arsenal is open source technology. This talk will
highlight two such efforts - which is being used to help fight the
virus:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Low cost ventilators and the other is&lt;/li&gt;
&lt;li&gt;Use of AI to figure out, track and learn about this new virus.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sharan Kalwani</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/open-source-fights-covid-19.html</guid><category>PyOhio 2020</category></item><item><title>Pillow Basics</title><link>https://pyvideo.org/pyohio-2020/pillow-basics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will go over the basics of image manipulation with Pillow.&lt;/p&gt;
&lt;p&gt;We'll go over&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Loading Images&lt;/li&gt;
&lt;li&gt;Resizing Images&lt;/li&gt;
&lt;li&gt;Converting Image Formats&lt;/li&gt;
&lt;li&gt;Modifying Colors&lt;/li&gt;
&lt;li&gt;Merging Images&lt;/li&gt;
&lt;li&gt;Saving Images&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joe Aylor</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/pillow-basics.html</guid><category>PyOhio 2020</category></item><item><title>Python in Education for Generation Z</title><link>https://pyvideo.org/pyohio-2020/python-in-education-for-generation-z.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The students who belong to Generation Z or post-millennials have access
to gadgets such as smartphones even before they go to school. This makes
them technology savvy and at the same time they get bored easily in
traditional classroom settings. It becomes necessary to use modern tools
and techniques in the classroom to engage students in activities. Also
governments are promoting “Bring Your Own Device (BYOD)” concept in
education which can be a boon to those who cannot afford a computer or
laptop. In this lightning talk I will introduce the QPython which can be
installed on smartphone to execute Python programs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gajendra Deshpande</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/python-in-education-for-generation-z.html</guid><category>PyOhio 2020</category></item><item><title>The Gems of the Python Standard Library</title><link>https://pyvideo.org/pyohio-2020/the-gems-of-the-python-standard-library.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You may know about a lot of the amazing standard libraries such as
&lt;tt class="docutils literal"&gt;collections&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;json&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;sqlite3&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;argparse&lt;/tt&gt;, etc.&lt;/p&gt;
&lt;p&gt;But what about the more unknown libraries, such as &lt;tt class="docutils literal"&gt;sched&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;struct&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;enum&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;bisect&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;heapq&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;decimal&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;statistics&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;pathlib&lt;/tt&gt;, and many more!&lt;/p&gt;
&lt;p&gt;This talk will go through, at a high level, the usage of some of these
libraries and how they can allow you to performs some tasks more
computationally efficient or hack together solutions faster without
needing additionally third party libraries.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Zharichenko</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/the-gems-of-the-python-standard-library.html</guid><category>PyOhio 2020</category></item><item><title>There’s a Snake in the Birdhouse! Building a Python Culture at Vrbo</title><link>https://pyvideo.org/pyohio-2020/theres-a-snake-in-the-birdhouse-building-a-python-culture-at-vrbo.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all love Python, but not everyone is fortunate enough to use it at
their day job. Come and listen as I detail the journey I took to
establish Python as an onroad option at my company. Viewers will leave
having learned from my experiences—both successes and mistakes—and with
a solid plan for implementing Python at their job.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mason Egger</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/theres-a-snake-in-the-birdhouse-building-a-python-culture-at-vrbo.html</guid><category>PyOhio 2020</category></item></channel></rss>