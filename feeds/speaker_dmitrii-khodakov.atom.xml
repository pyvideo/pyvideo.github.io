<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_dmitrii-khodakov.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-06-22T00:00:00+00:00</updated><entry><title>Tornado vs Aiohttp</title><link href="https://pyvideo.org/pycon-russia-2018/tornado-vs-aiohttp.html" rel="alternate"></link><published>2018-06-22T00:00:00+00:00</published><updated>2018-06-22T00:00:00+00:00</updated><author><name>Дмитрий Ходаков</name></author><id>tag:pyvideo.org,2018-06-22:pycon-russia-2018/tornado-vs-aiohttp.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Дмитрий Ходаков&lt;/strong&gt; , Авито&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/hodakov/"&gt;**Tornado vs Aiohttp**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;На дворе 2018й год, кругом микросервисы в kubernetes и машинное
обучение. У нас в Авито полно и того, и другого. Когда у вас на руках
несколько десятков нагруженных микросервисов поневоле задумаешься о
производительности асинхронных приложений.&lt;/p&gt;
&lt;p&gt;В докладе я расскажу про:&lt;/p&gt;
&lt;p&gt;— типичные проблемы и подводные камни при построении нагруженного
микросервисного фреймворка;&lt;/p&gt;
&lt;p&gt;— профилирование асинхронных приложений;&lt;/p&gt;
&lt;p&gt;— фундаментальные отличия асинхронности tornado и aiohttp;&lt;/p&gt;
&lt;p&gt;— честное сравнение tornado vs aiohttp в условиях, приближенных к
боевым.&lt;/p&gt;
&lt;p&gt;Доклад будет полезен опытным разработчикам Python, которые имеют дело с
асинхронностью и микросервисами, которые сталкиваются с проблемами
масштабирования и отладки асинхронных приложений.&lt;/p&gt;
</summary></entry></feed>