<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_juan-luis-cano.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-06-15T00:00:00+00:00</updated><entry><title>Is it a bird? Is it a plane? Accelerating Python with Numba</title><link href="https://pyvideo.org/pylondinium-2019/is-it-a-bird-is-it-a-plane-accelerating-python-with-numba.html" rel="alternate"></link><published>2019-06-15T00:00:00+00:00</published><updated>2019-06-15T00:00:00+00:00</updated><author><name>Juan Luis Cano</name></author><id>tag:pyvideo.org,2019-06-15:pylondinium-2019/is-it-a-bird-is-it-a-plane-accelerating-python-with-numba.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We are lucky there are very diverse solutions to make Python faster that have been in use for a while: from wrapping compiled languages (NumPy), to altering the Python syntax to make it more suitable to compilers (Cython), to using a subset of it which can in turn be accelerated (numba), and many many more. However, each of these options has a tradeoff, and there is no silver bullet.&lt;/p&gt;
&lt;p&gt;Some years ago I chose numba for poliastro, my personal project, because of its simplicity, effectiveness, and not having to learn a hybrid dialect of Python. numba compiles numerical Python code on the fly using the LLVM machinery, producing extremely performant code... when it works!&lt;/p&gt;
&lt;p&gt;On the other hand, even though it is quite mature as a library and most of the Python syntax and NumPy functions are supported, there are still some limitations that affect its usage. In particular, I strive to offer a high-level API with support for physical units (extensions of NumPy) and reusable functions which can be passed as arguments, which sometimes require using complex objects or introspective Python behavior which is not available.&lt;/p&gt;
&lt;p&gt;In this talk we will introduce numba, describe its basic usage, and then discuss the strategies and workarounds we have developed to overcome its limitations, as well as some advanced numba features we can leverage. We will focus mostly on CPUs, and mention very briefly its GPU capabilities.&lt;/p&gt;
</summary></entry><entry><title>Catch that asteroid with poliastro</title><link href="https://pyvideo.org/pyastro-2018/catch-that-asteroid-with-poliastro.html" rel="alternate"></link><published>2018-04-30T00:00:00+00:00</published><updated>2018-04-30T00:00:00+00:00</updated><author><name>Juan Luis Cano</name></author><id>tag:pyvideo.org,2018-04-30:pyastro-2018/catch-that-asteroid-with-poliastro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="http://docs.poliastro.space/"&gt;poliastro&lt;/a&gt; is a Python library for Astrodynamics focused on interplanetary trajectories, interactive visualization and user friendliness. It features core algorithms like propagation (Kepler problem), orbit determination (Lambert problem), orbital maneuvers computation (Hohmann, bielliptic) and conversion between classical, equinoctial and cartesian orbital elements. It also ships simple methods for orbit plotting and makes heavy use of astropy.units, astropy.time and astropy.coordinates for correctness.&lt;/p&gt;
&lt;p&gt;In this talk I will present benchmarks of some poliastro algorithms accelerated with numba against its FORTRAN counterparts, review its interactive plotting capabilities and comment about the validation strategies used for the algorithms.&lt;/p&gt;
</summary><category term="poliastro"></category></entry><entry><title>Jupyter (IPython): how a notebook is changing science</title><link href="https://pyvideo.org/pydata-london-2015/jupyter-ipython-how-a-notebook-is-changing-science.html" rel="alternate"></link><published>2015-06-21T00:00:00+00:00</published><updated>2015-06-21T00:00:00+00:00</updated><author><name>Juan Luis Cano</name></author><id>tag:pyvideo.org,2015-06-21:pydata-london-2015/jupyter-ipython-how-a-notebook-is-changing-science.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;IPython was born as an Interactive Python shell on steroids 14 years
ago, but its notebook tool is shaping the way scientists, developers
and even journalists communicate and explore science. After its
rebirth as the Jupyter project, we will examine its importance and
future in Open Science and scientific publishing now that Nature
highlighted its awesome features!&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is both a shortened version of the recent history of the
Jupyter project (previously IPython) and a case for reproducibility in
science. We will glance at the recent milestones of the project, address
some common myths still heard in business environments regarding open
source, show the possibilities of Jupyter as an environment for several
different languages (specially Julia and R) and talk about possible
future developments.&lt;/p&gt;
</summary></entry><entry><title>Lightning Talks</title><link href="https://pyvideo.org/pydata-london-2015/lightning-talks.html" rel="alternate"></link><published>2015-06-21T00:00:00+00:00</published><updated>2015-06-21T00:00:00+00:00</updated><author><name>Philip Nye</name></author><id>tag:pyvideo.org,2015-06-21:pydata-london-2015/lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks! 5 minutes! GO!&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why would a journalist want to learn Python? —&amp;nbsp;Philip Nye&lt;/li&gt;
&lt;li&gt;Story detection using LDAs —&amp;nbsp;Hendrik Heuer&lt;/li&gt;
&lt;li&gt;A model may be right, but irrelevant — Maria Koroliuk&lt;/li&gt;
&lt;li&gt;Why I love the days I get to optimise things —&amp;nbsp;Gemma Hentsch&lt;/li&gt;
&lt;li&gt;Ethics? &amp;amp; Data Science ... —&amp;nbsp;Roelof Pieters&lt;/li&gt;
&lt;li&gt;Love letter to Russel Winder —&amp;nbsp;Tony Simpson&lt;/li&gt;
&lt;li&gt;Let's go to Mars — Juan Luis Cano&lt;/li&gt;
&lt;li&gt;Testing with Hypothesis —&amp;nbsp;David McGiver&lt;/li&gt;
&lt;li&gt;Introducing (Plotly) Widgets —&amp;nbsp;Carole Griffiths&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;... DONE!&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Clausura - PyConES 2017</title><link href="https://pyvideo.org/pycon-es-2017/clausura-pycones-2017.html" rel="alternate"></link><published>2017-09-24T16:30:00+02:00</published><updated>2017-09-24T16:30:00+02:00</updated><author><name>Juan Luis Cano</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/clausura-pycones-2017.html</id><summary type="html"></summary><category term="closing ceremony"></category></entry><entry><title>Código abierto: Mucho camino por delante</title><link href="https://pyvideo.org/pycon-es-2017/codigo-abierto-mucho-camino-por-delante.html" rel="alternate"></link><published>2017-09-24T15:30:00+02:00</published><updated>2017-09-24T15:30:00+02:00</updated><author><name>Juan Luis Cano</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/codigo-abierto-mucho-camino-por-delante.html</id><summary type="html"></summary><category term="keynote"></category></entry><entry><title>¡Atrapa ese asteroide con poliastro!</title><link href="https://pyvideo.org/pycon-es-2017/atrapa-ese-asteroide-con-poliastro.html" rel="alternate"></link><published>2017-09-23T15:30:00+02:00</published><updated>2017-09-23T15:30:00+02:00</updated><author><name>Antonio Hidalgo</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/atrapa-ese-asteroide-con-poliastro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;poliastro es una biblioteca de código abierto escrita en Python puro utilizada para hacer cálculos orbitales. Este año participó en el Summer of Code de la Agencia Espacial Europea (SOCIS), un programa parecido al de Google que otorga becas a estudiantes para desarrollar código abierto en verano. En esta charla hablaremos de la API que se ha desarrollado durante el verano para descargar datos de asteroides, cometas y otros objetos ¡incluyendo alguna demo!&lt;/p&gt;
</summary><category term="poliastro"></category></entry><entry><title>Per Shaolin ad Astra</title><link href="https://pyvideo.org/pycon-es-2016/per-shaolin-ad-astra.html" rel="alternate"></link><published>2016-10-09T00:00:00+00:00</published><updated>2016-10-09T00:00:00+00:00</updated><author><name>Guillem Durán</name></author><id>tag:pyvideo.org,2016-10-09:pycon-es-2016/per-shaolin-ad-astra.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will show how it is possible to build an interactive 3D model of the solar system using the python packages shaolin and poliastro.&lt;/p&gt;
&lt;p&gt;At EuroPython Juan Luis Cano asked for a 3D visualization module for poliastro, and now we are finally presenting the first version of the poliastro 3D models build using plotly and vpython.&lt;/p&gt;
&lt;p&gt;We will review the data presented at EuroPython 2016 with an interactive model of the solar system for representing planets and its orbits.&lt;/p&gt;
&lt;p&gt;Materials available at &lt;a class="reference external" href="https://github.com/Guillem-db/PyconEs-2016"&gt;https://github.com/Guillem-db/PyconEs-2016&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://2016.es.pycon.org/"&gt;http://2016.es.pycon.org/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Empaquetar es fácil, si sabes cómo</title><link href="https://pyvideo.org/pycon-es-2013/empaquetar-es-facil-si-sabes-como.html" rel="alternate"></link><published>2013-12-31T00:00:00+00:00</published><updated>2013-12-31T00:00:00+00:00</updated><author><name>Juan Luis Cano</name></author><id>tag:pyvideo.org,2013-12-31:pycon-es-2013/empaquetar-es-facil-si-sabes-como.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Autor: Juan Luis Cano&lt;/p&gt;
&lt;p&gt;Track: Produban (Básico)&lt;/p&gt;
&lt;p&gt;Empaquetar una biblioteca en Python puede ser un proceso confuso lleno de incertidumbres y propenso a tomar decisiones equivocadas, pero va mejorando. En esta charla vamos a diferenciar claramente lo que está obsoleto de lo que no, explicando el presente y mirando al futuro.&lt;/p&gt;
</summary></entry><entry><title>Python + Ciencia = \o/</title><link href="https://pyvideo.org/pycon-es-2013/python-ciencia-o.html" rel="alternate"></link><published>2013-12-27T00:00:00+00:00</published><updated>2013-12-27T00:00:00+00:00</updated><author><name>Juan Luis Cano</name></author><id>tag:pyvideo.org,2013-12-27:pycon-es-2013/python-ciencia-o.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Autor: Juan Luis Cano&lt;/p&gt;
&lt;p&gt;Track: BityVip (Científico)&lt;/p&gt;
&lt;p&gt;Python como lenguaje mola mucho más que MATLAB y no digo ya FORTRAN 77. Python engancha, sobre todo si te dedicas a la ciencia y la ingeniería: vamos a dar un breve repaso a las posibilidades que ofrece en este campo, y por qué seguirá creciendo en los próximos años.&lt;/p&gt;
</summary></entry><entry><title>Per Python ad Astra</title><link href="https://pyvideo.org/europython-2016/per-python-ad-astra.html" rel="alternate"></link><published>2016-08-01T00:00:00+00:00</published><updated>2016-08-01T00:00:00+00:00</updated><author><name>Juan Luis Cano</name></author><id>tag:pyvideo.org,2016-08-01:europython-2016/per-python-ad-astra.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Juan Luis Cano - Per Python ad Astra
[EuroPython 2016]
[20 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/per-python-ad-astra"&gt;https://ep2016.europython.eu//conference/talks/per-python-ad-astra&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;In the intersection of mechanics, mathematics and &amp;quot;cool stuff that
travels through space&amp;quot; lies Astrodynamics, a beautiful branch of
physics that studies the motion of spacecraft. In this talk we will
describe poliastro, a pure Python library we can use to compute
orbital maneuvers, plot trajectories and much more. The role of JIT
compiling (using numba) to drop the previously used FORTRAN algorithms
will also be discussed, as well as the importance of open source in
scientific discoveries.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;In the intersection of mechanics, mathematics and &amp;quot;cool stuff that
travels through space&amp;quot; lies Astrodynamics, a beautiful branch of
physics that studies the motion of spacecraft. Rocket launches have
never been so popular thanks to companies like Space X, more and more
investors pay attention to aerospace startups and amazing missions
explore our planet and our Solar System every day. In this talk we
will describe poliastro, a pure Python library we can use to compute
orbital maneuvers, plot trajectories and much more. The role of JIT
compiling (using numba) to drop the previously used FORTRAN algorithms
will also be discussed, as well as the importance of open source in
scientific discoveries.&lt;/p&gt;
</summary></entry><entry><title>IPython: How a notebook is changing science</title><link href="https://pyvideo.org/pycon-se-2015/ipython-how-a-notebook-is-changing-science.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Juan Luis Cano</name></author><id>tag:pyvideo.org,2015-05-25:pycon-se-2015/ipython-how-a-notebook-is-changing-science.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;IPython was born as an Interactive Python shell on steroids 14 years
ago, but its notebook tool is shaping the way scientists, developers and
even journalists communicate and explore science. Let us examine
IPython's importance in Open Science now that Nature highlighted one of
its awesome features!&lt;/p&gt;
</summary></entry></feed>