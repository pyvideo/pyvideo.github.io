<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 06 Nov 2019 00:00:00 +0000</lastBuildDate><item><title>Advanced Software Testing for Data Scientists</title><link>https://pyvideo.org/pydata-new-york-city-2019/advanced-software-testing-for-data-scientists.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The journey to deploy a model to production starts with testing it rigorously, including its code implementation. In this tutorial, you will learn about state of the art software testing approach. You will learn how to write unit tests with enhanced diagnostics, leverage validation tools from numpy, pandas, scikit-learn, apply test doubles and generate test cases using property-based testing.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raoul-Gabriel Urma</dc:creator><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/advanced-software-testing-for-data-scientists.html</guid><category>tutorial</category></item><item><title>An Introduction to Probability and Statistics</title><link>https://pyvideo.org/pydata-new-york-city-2019/an-introduction-to-probability-and-statistics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will offer a quick overview of many of the essentials of statistics used to solve real world problems. We'll start by looking at how to build a simple hypothesis test based on a practical e-commerce problem. Then we'll see how we can expand on this simple test using one of the most powerful tools in statistics: the linear model. No previous experience with statistics required!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Will Kurt</dc:creator><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/an-introduction-to-probability-and-statistics.html</guid><category>tutorial</category></item><item><title>How to Prove You’re Right: A/B Testing with SciPy</title><link>https://pyvideo.org/pydata-new-york-city-2019/how-to-prove-youre-right-ab-testing-with-scipy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So you want to run an A/B test! How long should you run it for? How will you know if an observed difference is real? Does it matter what my A/B test is measuring? All of these questions and more can be answered by learning about Hypothesis Testing in SciPy. You might have heard of T-Tests, Chi Squared, and ANOVA in your high school stats class, but you've never heard them explained like this!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hillary Green-Lerman</dc:creator><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/how-to-prove-youre-right-ab-testing-with-scipy.html</guid><category>tutorial</category></item><item><title>Introduction to Language Modeling</title><link>https://pyvideo.org/pydata-new-york-city-2019/introduction-to-language-modeling.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this two part tutorial we will start with introduction of language models, how they are used and why they are important in the domain of Natural Language Processing. In the second half we will be taking the attendees through a hands-on workshop where they will develop a language model based on a sample dataset and talk through some of the results and gotchas of working with language models.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aditi Khullar</dc:creator><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/introduction-to-language-modeling.html</guid><category>tutorial</category></item><item><title>Introduction to NLP</title><link>https://pyvideo.org/pydata-new-york-city-2019/introduction-to-nlp.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Curious about Natural Language Processing (NLP) but don't know where to start? This tutorial is for you! This tutorial will provide an overview of what NLP is, why it's useful, as well as several major NLP libraries and topics. You'll also have the opportunity to get hands-on with some basic NLP methods using Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariel Frank</dc:creator><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/introduction-to-nlp.html</guid><category>tutorial</category></item><item><title>Introduction to pandas</title><link>https://pyvideo.org/pydata-new-york-city-2019/introduction-to-pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is a hands on introduction to pandas. pandas is a fast, powerful, flexible and easy to use data analysis and manipulation tool, built on top of the Python programming language.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garcia</dc:creator><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/introduction-to-pandas.html</guid><category>tutorial</category></item><item><title>Visualizing the 2019 Measles Outbreak in NYC (with Python)</title><link>https://pyvideo.org/pydata-new-york-city-2019/visualizing-the-2019-measles-outbreak-in-nyc-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The US is amid its largest measles outbreak since 1992, with 1,250 cases as of Oct 3, 2019. Most cases (649) were in NYC, where the outbreak was declared over on Sep 3, 2019. This tutorial creates data visualizations to help understand the measles outbreak in NYC. Bubble maps and bar charts are created using Python (bokeh, matplotlib) and following principles of clarity and context.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carlos Afonso</dc:creator><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/visualizing-the-2019-measles-outbreak-in-nyc-with-python.html</guid><category>tutorial</category></item><item><title>The anatomy of a #deepfake</title><link>https://pyvideo.org/pydata-london-2019/the-anatomy-of-a-deepfake.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A first-hand exploration of the world of #deepfake and post-truth technologies, looking at the latest developments in art and ML-modelling. Including details of a #deepfake project for a forthcoming BBC programme and revealing some tips and tricks (and pitfalls) involved in bending reality with some Tensorflow and a GPU.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Drass</dc:creator><pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-14:pydata-london-2019/the-anatomy-of-a-deepfake.html</guid><category>Tutorial</category></item><item><title>Bayesian Data Science: Probabilistic Programming</title><link>https://pyvideo.org/scipy-2019/bayesian-data-science-probabilistic-programming.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will introduce you to the wonderful world of Bayesian data science through the lens of probabilistic programming. In the first hour of the tutorial, we will begin reintroduce the key concept of probability distributions via hacker statistics, hands-on simulation and telling stories of the data-generation processes. We will also cover the basics joint and conditional probability, and Bayes' rule and Bayesian inference. In the latter 2/3 of the tutorial, we will use a series of models to build your familiarity with PyMC3, showcasing how to perform the foundational inference tasks of group comparison and arbitrary curve regression. By the end of this tutorial, you will be equipped with a solid grounding in Bayesian inference, able to write arbitrary models, and have experienced basic model checking workflow.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hugo Browne Anderson</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/bayesian-data-science-probabilistic-programming.html</guid><category>tutorial</category></item><item><title>Bayesian Statistics Made Simple</title><link>https://pyvideo.org/scipy-2019/bayesian-statistics-made-simple.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bayesian statistical methods are becoming more common, but there are not many resources to help beginners get started. People who know Python can use their programming skills to get a head start. In this tutorial, I introduce Bayesian methods using grid algorithms, which help develop understanding, and MCMC, which is a powerful algorithm for real-world problems.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/bayesian-statistics-made-simple.html</guid><category>tutorial</category></item><item><title>Complexity Science</title><link>https://pyvideo.org/scipy-2019/complexity-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Complexity Science is an approach to modeling systems using tools from discrete mathematics and computer science, including networks, cellular automata, and agent-based models. It has applications in many areas of natural and social science. Python is a particularly good language for exploring and implementing models of complex systems. In this tutorial, I present material from the second edition of &lt;em&gt;Think Complexity&lt;/em&gt; and from a class I teach at Olin College. We will work with random networks using NetworkX, with cellular automata using NumPy, and we will implement simple agent-based models.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/complexity-science.html</guid><category>tutorial</category></item><item><title>Deep Learning Fundamentals: Forward Model, Differentiable Loss Function &amp; Optimization Routine</title><link>https://pyvideo.org/scipy-2019/deep-learning-fundamentals-forward-model-differentiable-loss-function-optimization-routine.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Does deep learning feel like a mystical topic with a myriad of jargon? If so, then this tutorial is for you. We will dive deeply into the foundational ideas that power any deep learning model: a model specification, a differentiable loss function, and an optimization routine. To make the core and ancillary ideas concrete, we will be writing our own NumPy-based implementations of the relevant models and algorithms. By the end of the tutorial, your mastery of the foundational ideas should set you free to use any framework to write any arbitrary model that you want.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/deep-learning-fundamentals-forward-model-differentiable-loss-function-optimization-routine.html</guid><category>tutorial</category></item><item><title>Getting Started with JupyterLab</title><link>https://pyvideo.org/scipy-2019/getting-started-with-jupyterlab.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;JupyterLab is a new frontend for Jupyter. JupyterLab provides notebooks, text editors, terminals, and custom components arranged using tabs and collapsible sidebars. These components can be used together or separately (for example, a user can send code from a file to a console with a keystroke, or can pop out an output from a notebook to work with it alone). Users can install or write third-party plugins to view custom file formats, interact with external services, or display their data, such as interactive maps, tables, or plots. We'll walk users through JupyterLab and discuss the powerful new features in JupyterLab.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthias Bussonnier</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/getting-started-with-jupyterlab.html</guid><category>tutorial</category></item><item><title>Intermediate Methods for Geospatial Data Analysis</title><link>https://pyvideo.org/scipy-2019/intermediate-methods-for-geospatial-data-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will provide attendees with tricks, tips, and techniques that are often necessary to work with geographic data in Python. These methods will range from the basics of reading &amp;amp; writing spatial data to the mechanics of combining and summarizing disparate geographic data types and representations. Overall, participants will gain a better understanding of practical methods to bring many different geographic datasets together for analysis.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Serge Rey</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/intermediate-methods-for-geospatial-data-analysis.html</guid><category>tutorial</category></item><item><title>Intro to Bayesian Model Evaluation, Visualization, &amp; Comparison Using ArviZ</title><link>https://pyvideo.org/scipy-2019/intro-to-bayesian-model-evaluation-visualization-comparison-using-arviz.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial we will build your expertise in handling, diagnosing, and understanding Bayesian models. It is intended for Bayesian modelers that know how to fit models, but desire further understanding on model criticism and visualization techniques. We will cover how to work with model data, how to evaluate model fit and how to communicate results. Attendees learn how to 1. Evaluate and visualize models 2. Understand plots commonly encountered in Bayesian contexts Bayesian modeling expertise is not required. Knowledge of python syntax and Numpy/Pandas are helpful to complete activities in this tutorial. Even without coding experience attendees may find value in learning how to interpret Bayesian model diagnoses and visualizations created by others.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Colin Carroll</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/intro-to-bayesian-model-evaluation-visualization-comparison-using-arviz.html</guid><category>tutorial</category></item><item><title>Introduction to Data Processing in Python with Pandas</title><link>https://pyvideo.org/scipy-2019/introduction-to-data-processing-in-python-with-pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is a tutorial for beginners on using the Pandas library in Python for data manipulation. We will go from the basics of how to load and look at a dataset in pandas (python) for the first time, and begin the process of preparing data for analysis. The topics covered are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Load and look at slices and views of data&lt;/li&gt;
&lt;li&gt;Groupby aggregates to summarize data&lt;/li&gt;
&lt;li&gt;Tidy and reshape data&lt;/li&gt;
&lt;li&gt;Write functions and apply them to data&lt;/li&gt;
&lt;li&gt;Plotting data using Seaborn&lt;/li&gt;
&lt;li&gt;Encode dummy variables to prepare for analysis and model fit&lt;/li&gt;
&lt;li&gt;Fitting a model using sklearn&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By the end of this tutorial, you should have a solid foundation on working with datasets in Python. The last topic of encoding dummy variables segues into using other libraries, such as scikit-learn and statsmodels to fit models on your data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Chen</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/introduction-to-data-processing-in-python-with-pandas.html</guid><category>tutorial</category></item><item><title>Introduction to Matplotlib</title><link>https://pyvideo.org/scipy-2019/introduction-to-matplotlib.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Users will learn how to plot some of the most common types of data- such as discrete, continuous and categorical, in 1D and 2D - using Matplotlib. In doing so, this tutorial will unpack some of the fundamental concepts that underlie the architecture of Matplotlib. Using these concepts, attendees will learn how to change the &amp;quot;look and feel&amp;quot; of plots. The concepts taught in this tutorial will lay the foundation for creating effective visualizations using Matplotlib.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hannah Aizenman</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/introduction-to-matplotlib.html</guid><category>tutorial</category></item><item><title>Introduction to Numerical Computing with NumPy</title><link>https://pyvideo.org/scipy-2019/introduction-to-numerical-computing-with-numpy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NumPy provides Python with a powerful array processing library and an elegant syntax that is well suited to expressing computational algorithms clearly and efficiently. We'll introduce basic array syntax and array indexing, review some of the available mathematical functions in NumPy, and discuss how to write your own routines. Along the way, we'll learn just enough about matplotlib to display results from our examples.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Chabot-Leclerc</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/introduction-to-numerical-computing-with-numpy.html</guid><category>tutorial</category></item><item><title>Introduction to Python</title><link>https://pyvideo.org/scipy-2019/introduction-to-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is a gentle introduction to Python for folks who are completely new to it and may not have much experience programming. We’ll work in a Jupyter Notebook, one of the most popular tools in scientific Python. You’ll learn how to write beautiful Python while practicing loops, if’s, functions, and usage of Python’s built-in features in a series of fun, interactive exercises. By the end of the tutorial we think you’ll be ready to write your own basic Python -- but most importantly, we want you to learn the form and vocabulary of Python so that you can understand Python documentation and interpret code written by others. To continue learning more about Python as it’s applied to data and science, join our companion tutorial titled Introduction to Scientific Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Davis</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/introduction-to-python.html</guid><category>tutorial</category></item><item><title>Land on Vector Spaces: Practical Linear Algebra with Python</title><link>https://pyvideo.org/scipy-2019/land-on-vector-spaces-practical-linear-algebra-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Linear algebra is the foundational mathematical subject that everyone needs to know today. Get lost, calculus! Conventional presentations of linear algebra in undergraduate STEM curricula are overly focused on rules and memorization, overloaded with nomenclature, and slowed down by pen-and-paper methods. This tutorial skips the rule-based procedures and instead uses a visualization-rich approach and computation with NumPy to illuminate the concepts and usefulness of linear algebra. We promise a launching pad for participants to venture into this subject and continue learning after, with a solid conceptual grasp and none of the slog. You don't need previous experience in the subject; some recollection of having learned about matrices and linear systems of equations could help, but is not required.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lorena Barba</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/land-on-vector-spaces-practical-linear-algebra-with-python.html</guid><category>tutorial</category></item><item><title>Lights Camera Action! Scrape, Explore, and Model to Predict Oscar Winners</title><link>https://pyvideo.org/scipy-2019/lights-camera-action-scrape-explore-and-model-to-predict-oscar-winners.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Jupyter notebooks, HTTP requests, BeautifulSoup, NumPy, Pandas,
scikit learn, and matplotlib, you’ll predict whether a movie is likely
to &lt;a class="reference external" href="http://oscarpredictor.github.io/"&gt;win an Oscar&lt;/a&gt; or be a box office hit. We’ll step through the
creation of an effective dataset: asking a question your data can
answer, writing a web scraper, and answering those questions using
nothing but Python libraries and data from the Internet.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Deborah Hanus</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/lights-camera-action-scrape-explore-and-model-to-predict-oscar-winners.html</guid><category>tutorial</category></item><item><title>Modern Time Series Analysis</title><link>https://pyvideo.org/scipy-2019/modern-time-series-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will cover the newest and most successful methods of time series analysis. 1. Bayesian methods for time series 2. Adapting common machine learning methods for time series 3. Deep learning for time series These methods are producing state-of-the-art results in a variety of disciplines, and attendees will learn both the underlying concepts and the Python implementations and uses of these analytical approaches to generate forecasts and estimate uncertainty for a variety of scientific time series.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aileen Nielsen</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/modern-time-series-analysis.html</guid><category>tutorial</category></item><item><title>Testing your Python Code with PyTest</title><link>https://pyvideo.org/scipy-2019/testing-your-python-code-with-pytest.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every developer has heard the saying that “untested software is broken software.” In this tutorial we will show you the best practices for software testing in Python using the pytest framework. Learners will write tests for several existing functions in a provided library, including testing strings, integers, floats, lists, and arrays. We will also use the pytest-mpl library to test matplotlib plotting functions with image comparison. Topics such as test fixtures, parameterization, and test coverage will also be demonstrated. Finally, students will implement new functionality in the example library and employ test-driven-development practices. This course is targeted at anyone writing code for their own scientific use or for a scientific library and wants to learn effective ways to test that code. Learners are expected to have a grasp on the Python language features, be able to write functions, be able to create and run python scripts, and be comfortable with the command line. Learners are also encouraged to have a GitHub account and be comfortable with git, though it is not necessary for the core testing materials that will be taught. By the end of this tutorial, learners will be able to write tests for numerical and string returning functions, write image tests for plotting functions, and check the coverage of their existing codebase. This knowledge will equip them to be able to implement a test suite on their new or legacy code bases.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Leeman</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/testing-your-python-code-with-pytest.html</guid><category>tutorial</category></item><item><title>Using SatPy to Process Earth observing Satellite Data</title><link>https://pyvideo.org/scipy-2019/using-satpy-to-process-earth-observing-satellite-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to SatPy, a python library for easily reading and working with earth-observing satellite data like that of the NOAA-20 VIIRS or GOES-16 ABI instruments. It is aimed at scientific users who would like to simplify some of their satellite data processing tasks. No previous experience with SatPy is needed. During this tutorial we’ll work through common satellite processing tasks using SatPy using Jupyter Notebook examples with real instrument data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Hoese</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/using-satpy-to-process-earth-observing-satellite-data.html</guid><category>tutorial</category></item><item><title>Visualize any Data Easily, from Notebooks to Dashboards</title><link>https://pyvideo.org/scipy-2019/visualize-any-data-easily-from-notebooks-to-dashboards.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial you will see how to visualize and communicate your data easily and effectively using Python tools. You'll learn how to use Panel to lay out your existing plots with widgets to make apps in the notebook or as deployed dashboards, hvPlot to make your Pandas or Xarray .plot() API calls return interactive, explorable plots, HoloViews and GeoViews to help you explore multidimensional data naturally without having to build a plot for each combination or sample of the data space, and Datashader to visualize even the very largest datasets faithfully in a web browser. See pyviz.org for links to all these tools and more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Bednar</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/visualize-any-data-easily-from-notebooks-to-dashboards.html</guid><category>tutorial</category></item><item><title>Xonsh: Bringing Python Data Science to your Shell</title><link>https://pyvideo.org/scipy-2019/xonsh-bringing-python-data-science-to-your-shell.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Xonsh is an interactive, cross-platform Python/Unix Shell hybrid language that makes it easy to switch between Python operations and command line interfaces. While Python has a wealth of data science libraries and tools, there are still plenty of utilities that live outside of the scientific Python ecosystem. Xonsh provides a way of gluing ALL of your tools together. Additionally, as a shell, xonsh comes with batteries-included features that are important in a scientific context. If you are new to shells, want to use Python for &lt;em&gt;everything&lt;/em&gt;, or just plain fed up with sh-lang syntax, this tutorial is for you!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gilbert Forsyth</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/xonsh-bringing-python-data-science-to-your-shell.html</guid><category>tutorial</category></item><item><title>An Overview to Simulations and Generating Synthetic Data Sets</title><link>https://pyvideo.org/scipy-2019/an-overview-to-simulations-and-generating-synthetic-data-sets.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wanted to simulate a system but didn't know how to get started? Or maybe you wanted to create a data set with certain characteristics but weren't sure how to get the characteristics you had in mind. This tutorial will give you an overview of the mathematics and programming involved in simulating systems and generating synthetic data. Attendees of this tutorial will understand how simulations are built, the fundamental techniques of crafting probabilistic systems, and the options available for generating synthetic data sets. The skills of simulation and synthesis of data are both invaluable in generating and testing hypotheses about scientific data sets.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aileen Nielsen</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:scipy-2019/an-overview-to-simulations-and-generating-synthetic-data-sets.html</guid><category>tutorial</category></item><item><title>Escape from Auto manual Testing with Hypothesis!</title><link>https://pyvideo.org/scipy-2019/escape-from-auto-manual-testing-with-hypothesis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hypothesis is a testing package that will search for counterexamples to your assertions – so you can write tests that provide a high-level description of your code or system, and let the computer attempt a Popperian falsification. If it fails, your code is (probably) OK… and if it succeeds you have a minimal input to debug. Come along and learn the principles of property-based testing, how to use Hypothesis, and how to use it to check scientific code – whether highly-polished or quick-and-dirty!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zac Hatfield-Dodds</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:scipy-2019/escape-from-auto-manual-testing-with-hypothesis.html</guid><category>tutorial</category></item><item><title>Hands-on Satellite Imagery Analysis</title><link>https://pyvideo.org/scipy-2019/hands-on-satellite-imagery-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Satellite data is more widely available than ever before, and it is now possible for the public to access sub-weekly and even daily imagery of the Earth's entire landmass. In this tutorial, gain hands-on experience exploring Planet’s publicly-available satellite imagery and using Python tools for geospatial and time-series analysis of medium- and high-resolution imagery data. Using free &amp;amp; open source libraries, learn how to perform foundational imagery analysis techniques and apply these techniques to real satellite data. At the end of the workshop, we’ll demonstrate how the skills you've learned can be applied to investigate real-world environmental and humanitarian challenges.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Samapriya Roy</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:scipy-2019/hands-on-satellite-imagery-analysis.html</guid><category>tutorial</category></item><item><title>Image Analysis in Python with SciPy and Scikit Image</title><link>https://pyvideo.org/scipy-2019/image-analysis-in-python-with-scipy-and-scikit-image.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From telescopes to satellite cameras to electron microscopes, scientists are producing more images than they can manually inspect. This tutorial will introduce image analysis using the idea that &amp;quot;images are just NumPy arrays&amp;quot;. Then we will run through various fundamental image analysis operations (filters, morphology, segmentation), and finally we will demonstrate one or two advanced real-world examples. This tutorial is aimed at people who are familiar with NumPy, SciPy, and Matplotlib, but it does not require any previous knowledge of image analysis or image processing.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Nunez-Iglesias</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:scipy-2019/image-analysis-in-python-with-scipy-and-scikit-image.html</guid><category>tutorial</category></item><item><title>Multi-dimensional Linked Data Exploration with Glue (Tutorial)</title><link>https://pyvideo.org/scipy-2019/multi-dimensional-linked-data-exploration-with-glue-tutorial.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We have developed an open-source multi-disciplinary Python package named glue (&lt;a class="reference external" href="http://glueviz.org"&gt;http://glueviz.org&lt;/a&gt;) that allows users to explore relationships within and across related datasets, making it easy for them to create multi-dimensional linked visualizations of datasets, select subsets of data interactively or programmatically in 1, 2, or 3 dimensions, and to see those selections propagate live across all open visualizations of the data (e.g., graphs, maps, diagnostics charts, etc.). In this tutorial, participants will learn how to use and customize the desktop and Jupyter version of glue, using example data as well as their own data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Robitaille</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:scipy-2019/multi-dimensional-linked-data-exploration-with-glue-tutorial.html</guid><category>tutorial</category></item><item><title>Network Analysis Made Simple</title><link>https://pyvideo.org/scipy-2019/network-analysis-made-simple.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wondered about how those data scientists at Facebook and LinkedIn make friend recommendations? Or how epidemiologists track down patient zero in an outbreak? If so, then this tutorial is for you. In this tutorial, we will use a variety of datasets to help you understand the fundamentals of network thinking, with a particular focus on constructing, summarizing, and visualizing complex networks. Finally, at the end of the tutorial, allow yourself to be entertained and hopefully also enlightened by the link between applied network science and linear algebra!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:scipy-2019/network-analysis-made-simple.html</guid><category>tutorial</category></item><item><title>RAPIDS: Open GPU Data Science</title><link>https://pyvideo.org/scipy-2019/rapids-open-gpu-data-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The RAPIDS suite of open source software libraries gives you the freedom to execute end-to-end data science pipelines entirely on GPUs. RAPIDS is incubated by NVIDIA® based on years of accelerated data science experience. RAPIDS relies on NVIDIA CUDA® primitives for low-level compute optimization, GPU parallelism, and high-bandwidth memory speed through user-friendly Python interfaces. This tutorial will teach you how to use the RAPIDS software stack from Python, including cuDF (a DataFrame library interoperable with Pandas), dask-cudf (for distributing DataFrame work over many GPUs), and cuML (a machine learning library that provides GPU-accelerated versions of the algorithms in scikit-learn).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anthony Scopatz</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:scipy-2019/rapids-open-gpu-data-science.html</guid><category>tutorial</category></item><item><title>Reproducible Data Science in Python</title><link>https://pyvideo.org/scipy-2019/reproducible-data-science-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The expectation of reproducibility in scientific work has been long established, and, increasingly, communities and funding sources are actually demanding it. Within the Python ecosystem, there are a variety of tools available to support reproducible data science, but choosing and using one is not always straightforward. In this tutorial, we will take a closer look at the concept of _reproducibility_, and, we will examine the technologies that provide building blocks and survey the landscape of tools. We spend the majority of the time looking at two solutions in particular, Code Ocean and Renku, and work through end-to-end scenarios in both.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Xu Fei</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:scipy-2019/reproducible-data-science-in-python.html</guid><category>tutorial</category></item><item><title>The Jupyter Interactive Widget Ecosystem</title><link>https://pyvideo.org/scipy-2019/the-jupyter-interactive-widget-ecosystem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to using widgets in Jupyter and JupyterLab to provide a rich interface for interactive data visualization.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Maarten Breddels</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:scipy-2019/the-jupyter-interactive-widget-ecosystem.html</guid><category>tutorial</category></item><item><title>Introducción a Python Científico</title><link>https://pyvideo.org/pycon-ar-2013/introduccion-a-python-cientifico.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En los últimos años, Python se ha popularizado en múltiples áreas temáticas, destacándose el auge de su utilización en el &amp;quot;ambiente científico&amp;quot;, que se debe, principalmente, al ajuste entre las características diferenciales que provee el lenguaje y las necesidades del científico en el modelado de sistemas físicos, químicos y biológicos, entre otros. El objetivo de esta charla es introducir las herramientas disponibles para la realización de las &amp;quot;tareas científicas&amp;quot;: IPython, Numpy, Scipy, Matplotlib, detallando sus principales características, ventajas y desventajas, así como la integración de dichas herramientas para la construcción de modelos en múltiples áreas del conocimiento.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/DKnh/"&gt;http://amara.org/v/DKnh/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damián Avila</dc:creator><pubDate>Thu, 24 Oct 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-10-24:pycon-ar-2013/introduccion-a-python-cientifico.html</guid><category>tutorial</category></item><item><title>Advanced Machine Learning</title><link>https://pyvideo.org/scipy-japan-2019/advanced-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scikit-learn is a powerful machine learning library in Python. In this 3.5h tutorials, we will cover some advanced topics of the library, such as pipelines, grid search, and cross validation to make reproducible analyses. We will also discuss feature selection to reduce computation time and prevent overfitting. Finally, we will use some of the scikit-learn built-in functionality to work with text data.&lt;/p&gt;
&lt;p&gt;Prerequisites: This tutorial assumes prior experience with the scikit-learn API. We will review it at the beginning of the tutorial to make sure everyone is on the same page. It also assumes that the participants are comfortable using NumPy, Pandas, and matplotlib. Some knowledge of Seaborn is also useful, but not essential.
​
Alexandre Chabot-Leclerc is a Python trainer and developer at Enthought. He holds a Ph.D. in Electrical Engineering from the Technical University of Denmark. His graduate research was in the field of hearing research, where he developed models of human speech perception. Alexandre's interests include teaching, psychoacoustics, and rock climbing.&lt;/p&gt;
&lt;div class="section" id="connect-with-us"&gt;
&lt;h4&gt;Connect with us!&lt;/h4&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/enthought"&gt;https://twitter.com/enthought&lt;/a&gt;
&lt;a class="reference external" href="https://www.facebook.com/Enthought/"&gt;https://www.facebook.com/Enthought/&lt;/a&gt;
&lt;a class="reference external" href="https://www.linkedin.com/company/enthought"&gt;https://www.linkedin.com/company/enthought&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexandre Chabot-Lerclerc</dc:creator><pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-04-24:scipy-japan-2019/advanced-machine-learning.html</guid><category>tutorial</category></item><item><title>Intro to Visualization</title><link>https://pyvideo.org/scipy-japan-2019/intro-to-visualization.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Visualizations in Python using Jupyter Notebooks.&lt;/p&gt;
&lt;div class="section" id="connect-with-us"&gt;
&lt;h4&gt;Connect with us!&lt;/h4&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/enthought"&gt;https://twitter.com/enthought&lt;/a&gt;
&lt;a class="reference external" href="https://www.facebook.com/Enthought/"&gt;https://www.facebook.com/Enthought/&lt;/a&gt;
&lt;a class="reference external" href="https://www.linkedin.com/company/enthought"&gt;https://www.linkedin.com/company/enthought&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Manabu Terada</dc:creator><pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-04-24:scipy-japan-2019/intro-to-visualization.html</guid><category>tutorial</category></item><item><title>Advanced NumPy</title><link>https://pyvideo.org/scipy-japan-2019/advanced-numpy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A hands on tutorial covering broadcasting rules, strides / stride tricks and advanced indexing.
​
Prerequisites: Comfortable with Python syntax, and some familiarity with NumPy / array computing.
​
Bio: Juan Nunez-Iglesias is a Research Fellow and CZI Imaging Software Fellow at Monash University in Melbourne, Australia. He is a core developer of scikit-image and has taught scientific Python at SciPy, EuroSciPy, the G-Node Summer School, and at other workshops. He is the co-author of the O'Reilly title &amp;quot;Elegant SciPy&amp;quot;.&lt;/p&gt;
&lt;div class="section" id="connect-with-us"&gt;
&lt;h4&gt;Connect with us!&lt;/h4&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/enthought"&gt;https://twitter.com/enthought&lt;/a&gt;
&lt;a class="reference external" href="https://www.facebook.com/Enthought/"&gt;https://www.facebook.com/Enthought/&lt;/a&gt;
&lt;a class="reference external" href="https://www.linkedin.com/company/enthought"&gt;https://www.linkedin.com/company/enthought&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Nuñez-Iglesias</dc:creator><pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-04-23:scipy-japan-2019/advanced-numpy.html</guid><category>tutorial</category></item><item><title>Tensorflow</title><link>https://pyvideo.org/scipy-japan-2019/tensorflow.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A hands-on introduction to TensorFlow 2.0. In this 3.5 hour tutorial, we will briefly introduce TensorFlow, then dive in to training neural networks. This tutorial is targeted at folks new to TensorFlow, and/or Deep Learning. Our goal is to help attendees get started efficiently and effectively, so they can continue learning on your own. Attendees will need a laptop with an internet connection, there is nothing to install in advance.
Prerequisites: Prior machine learning experience is not assumed. We will do our best to introduce relevant concepts as needed. The goal of our tutorial is not to teach you everything you need to know, but to get attendees started and overcome any initial barriers so they can continue learning on their own.&lt;/p&gt;
&lt;p&gt;Bio: Josh Gordon works on the TensorFlow team at Google, and teaches Applied Deep Learning at Columbia University. He has over a decade of machine learning experience to share. You can find him on Twitter at &lt;a class="reference external" href="https://twitter.com/random_forests"&gt;https://twitter.com/random_forests&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="connect-with-us"&gt;
&lt;h4&gt;Connect with us!&lt;/h4&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/enthought"&gt;https://twitter.com/enthought&lt;/a&gt;
&lt;a class="reference external" href="https://www.facebook.com/Enthought/"&gt;https://www.facebook.com/Enthought/&lt;/a&gt;
&lt;a class="reference external" href="https://www.linkedin.com/company/enthought"&gt;https://www.linkedin.com/company/enthought&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Gordon</dc:creator><pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-04-23:scipy-japan-2019/tensorflow.html</guid><category>tutorial</category></item><item><title>Final Remarks and Conference Close for PyCon 2019</title><link>https://pyvideo.org/pycon-us-2019/final-remarks-and-conference-close-for-pycon-2019.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ernest W. Durbin III</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-us-2019/final-remarks-and-conference-close-for-pycon-2019.html</guid><category>coding</category><category>ernest</category><category>pycon</category><category>python</category><category>tutorial</category></item><item><title>Programación para periodistas: el uso de Python en la extracción y análisis de reportajes</title><link>https://pyvideo.org/pycon-us-2019/programacion-para-periodistas-el-uso-de-python-en-la-extraccion-y-analisis-de-reportajes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Por el gran volumen de datos o la falta de estos de forma más accesible, los periodistas vienen mejorando sus conocimientos en el área de la tecnología en la búsqueda de buenos reportajes. En las redacciones, las viejas planillas no siempre dan cuenta, y el uso de la programación es cada vez más necesario en la búsqueda de la información.&lt;/p&gt;
&lt;p&gt;El uso de programación en el análisis y raspado de datos se ha convertido en una práctica cada vez más común en los medios de comunicación brasileños, promoviendo grandes reportajes que no se lograrían sin el uso de estos medios.&lt;/p&gt;
&lt;p&gt;El diario Folha de S.Paulo, en sociedad con Google News Lab, promovió un curso de Periodismo de Datos para periodistas de todo el país. A través del uso de Python, el fruto de ese trabajo fueron materias investigativas sobre la falta de secreto de la justicia brasileña y el uso de análisis de sentimientos en Twitter, que tuvieron alcance nacional.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Judite Macedo Cypreste</dc:creator><pubDate>Fri, 03 May 2019 14:35:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-03:pycon-us-2019/programacion-para-periodistas-el-uso-de-python-en-la-extraccion-y-analisis-de-reportajes.html</guid><category>tutorial</category></item><item><title>Planea el próximo eclipse con Jupyter y geopandas.</title><link>https://pyvideo.org/pycon-us-2019/planea-el-proximo-eclipse-con-jupyter-y-geopandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Los mapas son herramientas poderosas que usamos todos los días. Python está bien equipado para manejar datos espaciales y tiene muchas bibliotecas para ayudarte a realizar un análisis espacial y crear hermosos mapas. En esta charla, descubriremos el fascinante mundo del análisis espacial resolviendo un problema divertido: ¿dónde podemos ir para ver el próximo eclipse solar? A lo largo del camino, aprenderemos sobre temas de mapeo como proyecciones y sistemas de coordenadas, mejores prácticas para hacer mapas y complejidades de datos espaciales.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christy Heaton</dc:creator><pubDate>Fri, 03 May 2019 10:50:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-03:pycon-us-2019/planea-el-proximo-eclipse-con-jupyter-y-geopandas.html</guid><category>tutorial</category></item><item><title>Applied Deep Learning for NLP Using PyTorch</title><link>https://pyvideo.org/pycon-us-2019/applied-deep-learning-for-nlp-using-pytorch.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Natural language processing (NLP) has experienced a rapid growth over
the last few years and has become an important skill to build
applications that range from social features to clinical and health
solutions. In this tutorial, we will introduce PyTorch as a tool to
build and experiment with various modern NLP techniques by building deep
learning architectures based on convolutional neural networks (CNNs),
recurrent neural networks (RNNs), and bidirectional long short-term
memory networks (biLSTMs).&lt;/p&gt;
&lt;p&gt;We will cover a wide range of topics with the purpose of providing
participants with enough fundamental knowledge and skills to be able to
apply modern NLP to real-world problems using PyTorch. Some concepts and
topics include but not limited to data loaders, vectorization,
computation graphs, sentiment analysis, fine-grained emotion
classification, and neural machine translation.&lt;/p&gt;
&lt;p&gt;Nowadays, it is just not enough to arbitrarily train a model and deploy
it for production use without properly debugging it. This tutorial also
aims to provide hands-on examples and well-organized exercises that
teach students how to properly test, train and evaluate NLP models using
best practices. Once models are properly trained and evaluated they will
be efficiently transformed, stored, and then restored to obtain
inferences from real-world, natural language data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Elvis Saravia</dc:creator><pubDate>Thu, 02 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/applied-deep-learning-for-nlp-using-pytorch.html</guid><category>tutorial</category></item><item><title>Data Science Best Practices with pandas</title><link>https://pyvideo.org/pycon-us-2019/data-science-best-practices-with-pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The pandas library is a powerful tool for multiple phases of the data
science workflow, including data cleaning, visualization, and
exploratory data analysis. However, the size and complexity of the
pandas library makes it challenging to discover the best way to
accomplish any given task.&lt;/p&gt;
&lt;p&gt;In this tutorial, you'll use pandas to answer questions about multiple
real-world datasets. Through each exercise, you'll learn important data
science skills as well as &amp;quot;best practices&amp;quot; for using pandas. By the end
of the tutorial, you'll be more fluent at using pandas to correctly and
efficiently answer your own data science questions.&lt;/p&gt;
&lt;p&gt;Participants should have an intermediate knowledge of pandas and an
interest in data science, but are not required to have any experience
with the data science workflow. Datasets will be provided by the
instructor.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Markham</dc:creator><pubDate>Thu, 02 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/data-science-best-practices-with-pandas.html</guid><category>tutorial</category></item><item><title>Escape from auto-manual testing with Hypothesis!</title><link>https://pyvideo.org/pycon-us-2019/escape-from-auto-manual-testing-with-hypothesis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you’ve ever written some tests, or discovered that tested code can
still have bugs, this tutorial is for you. &lt;a class="reference external" href="https://hypothesis.readthedocs.io/"&gt;Hypothesis&lt;/a&gt; lets you write
tests that should pass for every case… then finds bugs by generating
inputs you wouldn’t have looked for. Even better, you get to save time
by writing fewer but more powerful tests, so this process improves your
productivity as well as your code!&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Learn what property-based testing is, and how it relates to &lt;a class="reference external" href="https://www.hillelwayne.com/post/a-bunch-of-tests/"&gt;other
kinds of tests&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;Write your first property-based test, with example code and an
overview of common tactics!&lt;/li&gt;
&lt;li&gt;Describe inputs - use and compose strategies, then define your own or
infer them from other code!&lt;/li&gt;
&lt;li&gt;Use &lt;tt class="docutils literal"&gt;hypothesis.stateful&lt;/tt&gt; to generate and test whole programs&lt;/li&gt;
&lt;li&gt;Get the low-down on Hypothesis: performance tips, debugging tools,
and more!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You’ll be ready to find real bugs by half way through the tutorial; and
by the end you’ll be ready to use Hypothesis in ways we never imagined.&lt;/p&gt;
&lt;p&gt;There will be dedicated time for Q&amp;amp;A about applying Hypothesis (or PBT
ideas) in your domain, testing anything from web apps to big data
pipelines to other languages, before you leave to drag the world kicking
and screaming into a new and terrifying age of high quality software.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zac Hatfield-Dodds</dc:creator><pubDate>Thu, 02 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/escape-from-auto-manual-testing-with-hypothesis.html</guid><category>tutorial</category></item><item><title>Faster Python Programs - Measure, don't Guess</title><link>https://pyvideo.org/pycon-us-2019/faster-python-programs-measure-dont-guess.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Optimization can often help to make Python programs faster or use less
memory. Developing a strategy, establishing solid measuring and
visualization techniques as well as knowing about algorithmic basics and
datastructures are the foundation for a successful optimization. The
tutorial will cover these topics. Examples will give you a hands-on
experience on how to approach efficiently.&lt;/p&gt;
&lt;p&gt;Python is a great language. But it can be slow compared to other
languages for certain types of tasks. If applied appropriately,
optimization may reduce program runtime or memory consumption
considerably. But this often comes at a price. Optimization can be time
consuming and the optimized program may be more complicated. This, in
turn, means more maintenance effort. How do you find out if it is
worthwhile to optimize your program? Where should you start? This
tutorial will help you to answer these questions. You will learn how to
find an optimization strategy based on quantitative and objective
criteria. You will experience that one's gut feeling what to optimize is
often wrong.&lt;/p&gt;
&lt;p&gt;The solution to this problem is: „Measure, Measure, and Measure!“. You
will learn how to measure program run times as well as profile CPU and
memory. There are great tools available. You will learn how to use some
of them. Measuring is not easy because, by definition, as soon as you
start to measure, you influence your system. Keeping this impact as
small as possible is important. Therefore, we will cover different
measuring techniques.&lt;/p&gt;
&lt;p&gt;Furthermore, we will look at algorithmic improvements. You will see that
the right data structure for the job can make a big difference. Finally,
you will learn about different caching techniques.&lt;/p&gt;
&lt;div class="section" id="software-requirements"&gt;
&lt;h4&gt;Software Requirements&lt;/h4&gt;
&lt;p&gt;You will need Python 3.7 installed on your laptop. Python 2.7 or 3.5/3.6
should also work. Python 3.x is strongly preferred. You may use Python
3.8 if is released at the time of the tutorial and all dependencies can
be installed.&lt;/p&gt;
&lt;div class="section" id="jupyterlab"&gt;
&lt;h5&gt;JupyterLab&lt;/h5&gt;
&lt;p&gt;I will use a JupyterLab for the tutorial because it makes a very good
teaching tool. You are welcome to use the setup you prefer, i.e editor,
IDE, REPL. If you also like to use a JupyterLab, I recommend &lt;tt class="docutils literal"&gt;conda&lt;/tt&gt;
for easy installation. Similarly to &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;conda&lt;/tt&gt; allows
creating isolated environments but allows binary installs for all
platforms.&lt;/p&gt;
&lt;p&gt;There are two ways to install &lt;tt class="docutils literal"&gt;Jupyter&lt;/tt&gt; via &lt;tt class="docutils literal"&gt;conda&lt;/tt&gt;:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Use &lt;a class="reference external" href="https://conda.io/miniconda.html"&gt;Minconda&lt;/a&gt;. This is a small
install and (after you installed it) you can use the command
&lt;tt class="docutils literal"&gt;conda&lt;/tt&gt; to create an environment:
&lt;tt class="docutils literal"&gt;conda create &lt;span class="pre"&gt;-n&lt;/span&gt; pycon2019 python=3.7&lt;/tt&gt; Now you can change into this
environment: &lt;tt class="docutils literal"&gt;conda activate pycon2019&lt;/tt&gt;. The prompt should change
to &lt;tt class="docutils literal"&gt;(pycon2019)&lt;/tt&gt;. Now you can install JupyterLab:
&lt;tt class="docutils literal"&gt;conda install jupyterlab&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Install &lt;a class="reference external" href="https://www.anaconda.com/download/"&gt;Anaconda&lt;/a&gt; and you are
ready to go if you don't mind installing lots of packages from the
scientific field.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Personally, I prefer the Miniconda approach.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="working-witch-conda-environments"&gt;
&lt;h5&gt;Working witch &lt;tt class="docutils literal"&gt;conda&lt;/tt&gt; environments&lt;/h5&gt;
&lt;p&gt;After creating a new environment, the system might still work with some
stale settings. Even when the command &lt;tt class="docutils literal"&gt;which&lt;/tt&gt; tells you that you are
using an executable from your environment, this might actually not be
the case. If you see strange behavior using a command line tool in your
environment, use &lt;tt class="docutils literal"&gt;hash &lt;span class="pre"&gt;-r&lt;/span&gt;&lt;/tt&gt; and try again.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tools"&gt;
&lt;h5&gt;Tools&lt;/h5&gt;
&lt;p&gt;You can install these with &lt;tt class="docutils literal"&gt;conda&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; (in the active &lt;tt class="docutils literal"&gt;conda&lt;/tt&gt;
environment):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jiffyclub.github.io/snakeviz/"&gt;SnakeViz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pypi.python.org/pypi/line_profiler/"&gt;line_profiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pypi.python.org/pypi/Pympler"&gt;Pympler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pypi.python.org/pypi/memory_profiler"&gt;memory_profiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="linux"&gt;
&lt;h6&gt;Linux&lt;/h6&gt;
&lt;p&gt;Using the package manager of your OS is alternative if you prefer this
approach.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Müller</dc:creator><pubDate>Thu, 02 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/faster-python-programs-measure-dont-guess.html</guid><category>tutorial</category></item><item><title>Hands-on Intro to aiohttp</title><link>https://pyvideo.org/pycon-us-2019/hands-on-intro-to-aiohttp.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Asyncio is a relatively new feature in Python, with the &lt;tt class="docutils literal"&gt;async&lt;/tt&gt; and
&lt;tt class="docutils literal"&gt;await&lt;/tt&gt; syntaxes only recently became proper keywords in Python 3.7.
Asyncio allows you to write asynchronous programs in Python. In this
tutorial, we’ll introduce you to an asyncio web library called
&lt;tt class="docutils literal"&gt;aiohttp&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;aiohttp&lt;/tt&gt; is a library for building web client and server using Python
and asyncio. We’ll introduce you to several key features of &lt;tt class="docutils literal"&gt;aiohttp&lt;/tt&gt;;
including routing, session handling, templating, using middlewares,
connecting to database, and making HTTP GET/POST requests. We’ll provide
best practises in building your &lt;tt class="docutils literal"&gt;aiohttp&lt;/tt&gt; application, as well as how
to write tests for your application.&lt;/p&gt;
&lt;p&gt;We’ll use all new Python 3.7 features to build web services with asyncio
and aiohttp.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariatta</dc:creator><pubDate>Thu, 02 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/hands-on-intro-to-aiohttp.html</guid><category>tutorial</category></item><item><title>Hands-On Web Application Security with Django</title><link>https://pyvideo.org/pycon-us-2019/hands-on-web-application-security-with-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;XSS, SQL Injections and Improper Authorization, oh my! Between the OWASP
Top 10, CSRF, stealing sessions, and DDOS attacks, have you ever felt
that the world of web security was too complex to understand? Do you
find yourself wishing that you understood what those acronyms &lt;em&gt;really&lt;/em&gt;
translate to in a live web application?&lt;/p&gt;
&lt;p&gt;If so, then this is the tutorial you've been waiting for. In this
tutorial, we'll cover essential topics in web security, including the
majority of the OWASP Top 10, but we &lt;em&gt;won't&lt;/em&gt; be doing it in a
theoretical manner. We'll take a live, deliberately insecure web
application, identify the vulnerabilities, exploit them, and finally fix
them. Sound cool? It is!&lt;/p&gt;
&lt;p&gt;Topics include the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Cross-site scripting (XSS)&lt;/li&gt;
&lt;li&gt;Cross-site request forgery (CSRF)&lt;/li&gt;
&lt;li&gt;Cookies and how they can be abused&lt;/li&gt;
&lt;li&gt;Why default passwords are dangerous&lt;/li&gt;
&lt;li&gt;Improper authorization checking&lt;/li&gt;
&lt;li&gt;Incorrect Session Management&lt;/li&gt;
&lt;li&gt;SQL Injection&lt;/li&gt;
&lt;li&gt;How to abuse Pickle&lt;/li&gt;
&lt;li&gt;And more!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You'll also learn next steps and we'll provide suggested resources for
continuing your security education.&lt;/p&gt;
&lt;p&gt;While previous experience with Django is not required, it is
recommended. You should have an understanding of how web applications
work in general and have completed the official &lt;a class="reference external" href="https://docs.djangoproject.com/en/2.1/intro/tutorial01/"&gt;Django
Tutorial&lt;/a&gt; or
something substantially similar.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacinda Shelly</dc:creator><pubDate>Thu, 02 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/hands-on-web-application-security-with-django.html</guid><category>tutorial</category></item><item><title>Open the Black Box: an Introduction to Model Interpretability in Python</title><link>https://pyvideo.org/pycon-us-2019/open-the-black-box-an-introduction-to-model-interpretability-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What's the use of sophisticated machine learning models if you can't
interpret them?&lt;/p&gt;
&lt;p&gt;In fact, many industries including finance and healthcare require clear
explanations of why a decision is made. This tutorial covers recent
model interpretability techniques that are essentials in your data
scientist toolbox: Eli5, LIME (Local Interpretable Model-Agnostic
Explanations) and SHAP (SHapley Additive exPlanations).&lt;/p&gt;
&lt;p&gt;You will learn how to apply these techniques in Python on real-world
data science problems in order to debug your models and explain their
decisions.&lt;/p&gt;
&lt;p&gt;You will also learn the conceptual background behind these techniques so
you can better understand when they are appropriate.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Lemagnen</dc:creator><pubDate>Thu, 02 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/open-the-black-box-an-introduction-to-model-interpretability-in-python.html</guid><category>tutorial</category></item><item><title>What To Expect When You’re Expecting: A Hands-On Guide to Regression Testing</title><link>https://pyvideo.org/pycon-us-2019/what-to-expect-when-youre-expecting-a-hands-on-guide-to-regression-testing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all know we should be testing our applications, but testing is hard
and great testing is even harder. Take a deep dive into what and how to
test your Django apps, plus learn how to leverage modern headless
browser libraries and automated visual diff-ing to get (and keep)
pixel-perfect apps.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Emily Morehouse</dc:creator><pubDate>Thu, 02 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/what-to-expect-when-youre-expecting-a-hands-on-guide-to-regression-testing.html</guid><category>tutorial</category></item><item><title>Meg Ray - Keynote - PyCon 2019</title><link>https://pyvideo.org/pycon-us-2019/meg-ray-keynote-pycon-2019.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The zen od Python open education resources&lt;/p&gt;
&lt;p&gt;Creating resources that work&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Meg Ray</dc:creator><pubDate>Thu, 02 May 2019 09:15:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/meg-ray-keynote-pycon-2019.html</guid><category>keynote</category><category>tutorial</category></item><item><title>Building Evolutionary API with GraphQL and Python</title><link>https://pyvideo.org/pycon-us-2019/building-evolutionary-api-with-graphql-and-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You are a developer. Maybe you're building a rich web experience, like a
single page app using JavaScript and a framework like React, Angular or
Vue. Maybe you have multiple clients besides web on mobile platforms
like iOS or Android. Maybe you have an external facing public API for
use by clients with many diverse needs. One things is for sure: you need
a robust API.&lt;/p&gt;
&lt;p&gt;That API should be able to evolve over time to meet the growing and
changing demands of the business and your clients. The frameworks and
paradigms we choose as we develop any software can help or hinder that
change. A well-designed GraphQL API enables flexibility and stability
across changes, as well as easy service discovery and thinner clients
with less responsibilities, ensuring that your application grows
successfully over time.&lt;/p&gt;
&lt;p&gt;The tutorial will focus on building a GraphQL API using the &lt;strong&gt;Python&lt;/strong&gt;
library &lt;strong&gt;Graphene&lt;/strong&gt; with a &lt;strong&gt;Django&lt;/strong&gt; backend as a vehicle for teaching
the principals of evolutionary API that can be applied across any tech
stack, including REST, as well as the more practical concerns of working
with &lt;strong&gt;Graphene&lt;/strong&gt; and designing your API for GraphQL.&lt;/p&gt;
&lt;p&gt;A frontend, built using &lt;strong&gt;JavaScript&lt;/strong&gt; with &lt;strong&gt;React&lt;/strong&gt; and the &lt;strong&gt;Apollo&lt;/strong&gt;
GraphQL client library, will be made available so users can understand
the full-stack considerations of building this API and reacting to
evolving concerns over time. Writing JavaScript will not be required,
but being comfortable reading it and setting up a local environment will
help get more out of this tutorial.&lt;/p&gt;
&lt;p&gt;We'll attempt to answer questions such as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;When is using GraphQL for an API most effective?&lt;/li&gt;
&lt;li&gt;How do I get started with GraphQL in Python?&lt;/li&gt;
&lt;li&gt;What does it mean for an API to be Relay-compliant? What benefits are
there? Drawbacks if we don't comply?&lt;/li&gt;
&lt;li&gt;How can we make use of field arguments for sorting, filtering and
other concerns?&lt;/li&gt;
&lt;li&gt;What kinds of changes are safe to make to my API as clients begin
consuming it?&lt;/li&gt;
&lt;li&gt;How can I ensure my GraphQL API performs well and we avoid the
dreaded &lt;em&gt;N+1 As A Service&lt;/em&gt; problem?&lt;/li&gt;
&lt;li&gt;How should I design mutation responses for my GraphQL API to serve
client needs?&lt;/li&gt;
&lt;li&gt;How can multiple stakeholders decide how to evolve the API together?&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Anderson</dc:creator><pubDate>Thu, 02 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/building-evolutionary-api-with-graphql-and-python.html</guid><category>tutorial</category></item><item><title>Hello World of Machine Learning Using Scikit Learn</title><link>https://pyvideo.org/pycon-us-2019/hello-world-of-machine-learning-using-scikit-learn.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;*Welcome to the Machine Learning tutorial for absolute beginners.*&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
This tutorial will not make you an expert in Machine Learning but
will cover enough things to acquaint, enable and empower you to
understand, explore and exploits the concept and idea behind it.&lt;/blockquote&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;strong&gt;We'll be learning by generating our own data with bare minimal data
points (5 - 10) so that we can manually verify our machine learning
algorithms to understand it better.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This will also help us to see how changes in data can impact our
Machine Learning Algorithms. At the end of this tutorial, we'll also be
using one real-world Dataset and play with it.&lt;/em&gt;&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;em&gt;In this tutorial, I'll be covering at least 3 well-known ML
algorithms(KNN, Linear and Logistic Regression) along with all the maths
behind it. We'll end the tutorial with a real-world mapping application&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;There is no major prerequisite for attending this, you just need to
know the basics of python language and I'll cover the rest. We'll be
using Scikit Learn for simplicity purpose, again, you don't need to have
any prior experience with Scikit Learn or for that matter with Machine
Learning&lt;/em&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Deepak K Gupta</dc:creator><pubDate>Thu, 02 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/hello-world-of-machine-learning-using-scikit-learn.html</guid><category>tutorial</category></item><item><title>Introduction to Data Science with Python</title><link>https://pyvideo.org/pycon-us-2019/introduction-to-data-science-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wish to perform Data Science but don’t know how to? Have a dataset that
you really want to analyze but not sure how to start? This hands-on
session teaches how to explore datasets, use Machine Learning algorithms
and derive insights from models using popular Python tools like Jupyter,
pandas, sklearn and numpy. Aimed at budding data scientists with prior
programming experience in any language.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Grishma Jena</dc:creator><pubDate>Thu, 02 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/introduction-to-data-science-with-python.html</guid><category>tutorial</category></item><item><title>IPython and Jupyter in Depth: High productivity, interactive Python</title><link>https://pyvideo.org/pycon-us-2019/ipython-and-jupyter-in-depth-high-productivity-interactive-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;IPython and Jupyter provide tools for interactive computing that are
widely used in scientific computing, education, and data science, but
can benefit any Python developer.&lt;/p&gt;
&lt;p&gt;In this tutorial we will introduce you to the latest developement in
IPython and Jupyter, get you up to speed on how to install jupyter on
your machine and where to seek help for larger deployment. Then we will
dive into intermediate features that makes the power of IPython and
Jupyter.&lt;/p&gt;
&lt;p&gt;We will dive into how to make the best use of features like&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Async REPL (New in IPython 7)&lt;/li&gt;
&lt;li&gt;And how to tie that into the Visualisation capabilities of Jupyter,
and the new JupyterLab interface.&lt;/li&gt;
&lt;li&gt;Widgets (building simple interactive dashboards based on ipywidgets)&lt;/li&gt;
&lt;li&gt;Magics&lt;/li&gt;
&lt;li&gt;Multilanguage integration,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The notebooks also allow for code in multiple languages allowing to mix
Python with Cython, C, R and other programming languages to access
features hard to obtain from Python.&lt;/p&gt;
&lt;div class="section" id="more-info"&gt;
&lt;h4&gt;More info&lt;/h4&gt;
&lt;p&gt;For full details about IPython including documentation, previous
presentations and videos of talks, please see &lt;a class="reference external" href="http://ipython.org"&gt;the project
website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The materials for this tutorial will be &lt;a class="reference external" href="https://github.com/ipython/ipython-in-depth"&gt;available on a github
repository&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthias Bussonnier</dc:creator><pubDate>Thu, 02 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/ipython-and-jupyter-in-depth-high-productivity-interactive-python.html</guid><category>tutorial</category></item><item><title>Practical API Security</title><link>https://pyvideo.org/pycon-us-2019/practical-api-security.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the dominance of Mobile Apps, Single Page Apps for the Web, and
Micro-Services, we are all building more APIs than ever before. Like
many other developers, I had struggled with finding the right mix of
security and simplicity for securing APIs. Some standards from the IETF
have made it possible to accomplish both. Let me show you how to utilize
existing libraries to lock down you API without writing a ton of code.
In this tutorial, you will learn how to write a secure API with future
proof security utilizing JOSE. JOSE is a collection of complimentary
standards: JWT, JWE, JWS, JWA, and JWK. JOSE is used by OAuth, OpenID,
and others to secure communications between APIs and consumers. Now you
can use it to secure your API.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Englander</dc:creator><pubDate>Thu, 02 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/practical-api-security.html</guid><category>tutorial</category></item><item><title>Python by Immersion</title><link>https://pyvideo.org/pycon-us-2019/python-by-immersion.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A very fast introduction to Python for software developers with
experience in other languages. Instead of a traditional top-down
presentation of Python's features, syntax, and semantics, students are
immersed in the language bottom-up with hundreds of small examples using
the interactive interpreter to quickly gain familiarity with most of the
core language features. Special attention is given to concepts in Python
that often trip up those new to the language.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stuart Williams</dc:creator><pubDate>Thu, 02 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/python-by-immersion.html</guid><category>tutorial</category></item><item><title>To trust or to test?: Automated testing of scientific projects with pytest</title><link>https://pyvideo.org/pycon-us-2019/to-trust-or-to-test-automated-testing-of-scientific-projects-with-pytest.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many researchers rely strongly on numerical computations. Unfortunately,
testing scientific code is a hard task. Often there is no ground truth
available for comparison and the end result of the simulation is unknown
even to the code developer herself/himself. Often the user-base of the
scientific code is small and the work environment does not provide
incentives for testing.&lt;/p&gt;
&lt;p&gt;However, there are always parts of the code that are relatively easy to
cover by Unit Tests. Scientific pipelines could and should have
Regressions Tests, which ensure that previously developed software still
performs after changes in the code, or in external libraries and
computational environment. An automatic test suite should not be a
burden and can become a game-changer even for a small programming
project.&lt;/p&gt;
&lt;p&gt;This tutorial is meant to be an introduction to testing in general and
to pytest library. Pytest is a full feature tool to test the Python
code, it offers a simple way to get started and scales from simple unit
testing to complex functional testing. We will begin with simple assert
statements and finish with pytest.fixture and pytest.parametrization.
The tutorial will also cover a simple integration of the tests suit with
Continuous Integration platforms using GitHub and Travis/CircleCI.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience:&lt;/strong&gt; The tutorial is designed for scientist and data scientists
who would like incorporate testing to their everyday work. We expect
that people know basic Python and NumPy, and are familiar with simple
shell commands. Basic knowledge of Git/GitHub will be useful in the
second half of the tutorial.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dorota Jarecka</dc:creator><pubDate>Thu, 02 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/to-trust-or-to-test-automated-testing-of-scientific-projects-with-pytest.html</guid><category>tutorial</category></item><item><title>Python Certification</title><link>https://pyvideo.org/pycon-us-2019/python-certification.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Certification a view from Virginia Public Schools&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Elkner</dc:creator><pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/python-certification.html</guid><category>Education Summit</category><category>tutorial</category></item><item><title>Analyzing Census Data with Pandas</title><link>https://pyvideo.org/pycon-us-2019/analyzing-census-data-with-pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="section" id="census-2020-is-coming"&gt;
&lt;h4&gt;Census 2020 is coming!&lt;/h4&gt;
&lt;p&gt;Did you know the government budgeted &lt;strong&gt;12.5 billion&lt;/strong&gt; dollars to count
&lt;strong&gt;EVERY SINGLE PERSON IN THE COUNTRY&lt;/strong&gt; in 2020? Imagine how much data
you could acquire with 12.5 billion dollars.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="not-so-excited-about-census-data-how-about-cool-pandas-tricks"&gt;
&lt;h4&gt;Not so excited about Census data? How about cool &lt;tt class="docutils literal"&gt;pandas&lt;/tt&gt; tricks?&lt;/h4&gt;
&lt;p&gt;&lt;img alt="pandas_gif" src="https://media1.tenor.com/images/60379b3ecd5b8d9d886d90018dba63ab/tenor.gif?itemid=5274556" /&gt;&lt;/p&gt;
&lt;p&gt;In this tutorial you will go from a simple data exploration and analysis
workflow to learning more advanced techniques social scientists apply
when dealing with Census data.&lt;/p&gt;
&lt;p&gt;If you've been interested in honing your &lt;tt class="docutils literal"&gt;pandas&lt;/tt&gt; skills or you'd just
&lt;strong&gt;*love&lt;/strong&gt;* to learn how to calculate the demographically-adjusted
employment rate gap for your county using &lt;tt class="docutils literal"&gt;python&lt;/tt&gt;, well you've come
to the right place.&lt;/p&gt;
&lt;p&gt;This tutorial is perfect for novice data analysts, pythonistas, social
scientists, and journalists that want to learn about the powerful
&lt;tt class="docutils literal"&gt;pandas&lt;/tt&gt; library and how to use it to analyze public use micro-data,
and for those who've been using it but could learn a trick or two to
make their workflow even more effective.&lt;/p&gt;
&lt;p&gt;Does the acronyms ACS, CPS, PUMA, or IPUMS mean anything to you? If not,
the more reason to join! Come learn something new!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sergio Sánchez</dc:creator><pubDate>Wed, 01 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/analyzing-census-data-with-pandas.html</guid><category>tutorial</category></item><item><title>Bayesian Data Science by Simulation</title><link>https://pyvideo.org/pycon-us-2019/bayesian-data-science-by-simulation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an Introduction to Bayesian data science through the
lens of simulation or hacker statistics. We will become familiar with
many common probability distributions through i) matching them to
real-world stories &amp;amp; ii) simulating them. We will work with
joint/conditional probabilities, Bayes Theorem, prior/posterior
distributions and likelihoods, while seeing their applications in
real-world data analyses. We’ll see the utility of Bayesian inference in
parameter estimation and comparing groups and we’ll wrap up with a dive
into the wonderful world of probabilistic programming.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Wed, 01 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/bayesian-data-science-by-simulation.html</guid><category>tutorial</category></item><item><title>Build Your Own 2D Platformer Game</title><link>https://pyvideo.org/pycon-us-2019/build-your-own-2d-platformer-game.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Use Python and the &lt;a class="reference external" href="http://arcade.academy"&gt;Arcade&lt;/a&gt; library to create
your own 2D platformer. Learn to work with Sprites and the &lt;a class="reference external" href="https://www.mapeditor.org/"&gt;Tiled Map
Editor&lt;/a&gt; to create your own games. Add
coins, ramps, moving platforms, enemies, and more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Vincent Craven</dc:creator><pubDate>Wed, 01 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/build-your-own-2d-platformer-game.html</guid><category>tutorial</category></item><item><title>Dealing with Datetimes</title><link>https://pyvideo.org/pycon-us-2019/dealing-with-datetimes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dealing with dates and times is famously complicated. In this tutorial,
you'll work through a few common datetime-handling tasks and handle some
edge cases you are likely to encounter at some point in your career.&lt;/p&gt;
&lt;p&gt;This tutorial will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Working with time zones&lt;/li&gt;
&lt;li&gt;Serializing and deserializing datetimes&lt;/li&gt;
&lt;li&gt;Datetime arithmetic&lt;/li&gt;
&lt;li&gt;Scheduling recurring events&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The format will be a mix of short lectures and hands-on exercises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Ganssle</dc:creator><pubDate>Wed, 01 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/dealing-with-datetimes.html</guid><category>tutorial</category></item><item><title>Design Patterns in Python for the Untrained Eye</title><link>https://pyvideo.org/pycon-us-2019/design-patterns-in-python-for-the-untrained-eye.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Design patterns are prepackaged solutions to common software design
problems. We get two important benefits when using them. Firstly, we get
a way to solve typical software development issues by using a proven
solution. Secondly, we get a shared vocabulary that allows us to
communicate more effectively with other software designers. Getting
acquainted with design patterns is the next step to become a better
object oriented programmer.&lt;/p&gt;
&lt;p&gt;In this tutorial we'll answer some of the most important questions
surrounding design patterns: What are they? How can we use them in our
programs? When should we avoid them? We'll also have the opportunity to
explore and play with the Python implementations of some of the
classical design patterns made famous by the Gang of Four (Gamma, Helm,
Johnson &amp;amp; Vlissides) while learning relevant design principles at the
same time. Don't forget to bring your own laptop with your preferred
Python 3 development environment.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ariel Ortiz</dc:creator><pubDate>Wed, 01 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/design-patterns-in-python-for-the-untrained-eye.html</guid><category>tutorial</category></item><item><title>Lazy Looping in Python: Making and Using Generators and Iterators</title><link>https://pyvideo.org/pycon-us-2019/lazy-looping-in-python-making-and-using-generators-and-iterators.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When processing large amounts of data in Python, we often reach for
lists. Unfortunately, processing data using large lists make for ugly
code that can be memory inefficient and slow. Python's solution to this
problem is lazy looping using generators and iterators.&lt;/p&gt;
&lt;p&gt;During this tutorial we'll learn a number of lazy looping techniques
which will help you write more efficient and more readable Python code.
We'll get practice creating generators, playing with iterators, and
using generators and iterators to drastically restructure our code in a
more descriptive data-centric way.&lt;/p&gt;
&lt;p&gt;You'll walk out of this tutorial with hands-on experience with Python's
various lazy looping constructs and a greater appreciation for how
looping works under the hood in Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trey Hunner</dc:creator><pubDate>Wed, 01 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/lazy-looping-in-python-making-and-using-generators-and-iterators.html</guid><category>tutorial</category></item><item><title>Scikit-learn, wrapping your head around machine learning</title><link>https://pyvideo.org/pycon-us-2019/scikit-learn-wrapping-your-head-around-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A gentle introduction to machine learning through scikit-learn. This
tutorial will enable attendees to understand the capabilities and
limitations of machine learning through hands-on code examples and fun
and interesting datasets. Learn when to turn to machine learning and
which tools apply to your problem. Also learn about gotchas and problems
that are likely to show up when attempting to use machine learning.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chalmer Lowe</dc:creator><pubDate>Wed, 01 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/scikit-learn-wrapping-your-head-around-machine-learning.html</guid><category>tutorial</category></item><item><title>Writing about Python (Even When You Hate Writing)</title><link>https://pyvideo.org/pycon-us-2019/writing-about-python-even-when-you-hate-writing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to writing about Python: we'll cover
potential pitfalls in documentation and other technical writing,
practice writing non-technical content (from blog posts to job
listings), and testing our writing for readability and accessibility.
We'll even cover where writing can fit into your workflow and a few
tricks for reducing your writing workload.&lt;/p&gt;
&lt;p&gt;After this tutorial, you'll be equipped to write about Python for both
technical and nontechnical audiences. You might even enjoy writing by
the time we're done!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thursday Bram</dc:creator><pubDate>Wed, 01 May 2019 13:20:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/writing-about-python-even-when-you-hate-writing.html</guid><category>tutorial</category></item><item><title>Beginning Python for Human People with Feelings</title><link>https://pyvideo.org/pycon-us-2019/beginning-python-for-human-people-with-feelings.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is for people who are &lt;strong&gt;brand new to Python&lt;/strong&gt;. It's for
people with curioisty to feed, anxiety to overcome, and worlds to
change. It's for people named Edna. (And others not named Edna.)&lt;/p&gt;
&lt;p&gt;During this tutorial you'll be encouraged to &lt;strong&gt;bring your whole self to
learning&lt;/strong&gt;. We'll start with the very basics of Python, keeping your
fingers on the keyboard to gain as much practice as possible. Between
strings, functions, and other fun Python-y things, we'll discuss
learning deeply, nourishing our brains, and boosting happiness with
science.&lt;/p&gt;
&lt;p&gt;No prior experience required; come just as you are. This about being a
whole person. It's about learning Python, because Python is really cool.
It's also about staying afloat. Being productive. Focusing. It's about
finding joy in the error codes.&lt;/p&gt;
&lt;p&gt;Come play. It'll be awesome.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Melanie Crutchfield</dc:creator><pubDate>Wed, 01 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/beginning-python-for-human-people-with-feelings.html</guid><category>tutorial</category></item><item><title>Building data pipelines in Python: Airflow vs scripts soup</title><link>https://pyvideo.org/pycon-us-2019/building-data-pipelines-in-python-airflow-vs-scripts-soup.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In data science (in its all its variants) a significant part of an
individual’s time is spent preparing data into a digestible format. In
general, a data science pipeline starts with the acquisition of raw data
which is then manipulated through ETL processes and leads to a series of
analytics. Good data pipelines can be used to automate and schedule
these steps, help with monitoring tasks, and even to dynamically train
models. On top of that, they make the analyses easier to reproduce and
productise.&lt;/p&gt;
&lt;p&gt;In this workshop, you will learn how to migrate from ‘scripts soups’ (a
set of scripts that should be run in a particular order) to robust,
reproducible and easy-to-schedule data pipelines in Airflow. First, we
will learn how to write simple recurrent ETL pipelines. We will then
integrate logging and monitoring capabilities. And we will end using
Airflow along with Jupyter Notebooks and paper mill to produce
reproducible analytics reports.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tania Allard</dc:creator><pubDate>Wed, 01 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/building-data-pipelines-in-python-airflow-vs-scripts-soup.html</guid><category>tutorial</category></item><item><title>Getting started with Kubernetes and container orchestration</title><link>https://pyvideo.org/pycon-us-2019/getting-started-with-kubernetes-and-container-orchestration.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You've started to &amp;quot;containerize&amp;quot; your applications by writing a
Dockerfile or two, and now you want to run your containers in a cluster.
But Kubernetes is quite different from Docker: the smallest unit of
deployment is not a container, but a &lt;em&gt;pod&lt;/em&gt;; pods are accessed through
specialized load balancers called &lt;em&gt;services&lt;/em&gt;; there are &lt;em&gt;labels&lt;/em&gt; and
&lt;em&gt;selectors&lt;/em&gt; everywhere; and everything is created by expressing desired
state with YAML, lots of YAML.&lt;/p&gt;
&lt;p&gt;In this hands-on tutorial, we will learn about Kubernetes and its key
concepts, both in theory (we will become familiar with all the things
evoked in the previous paragraph) and in practice (we will know how to
use them to deploy and scale our applications).&lt;/p&gt;
&lt;p&gt;Kubernetes has the reputation of being a complex system with a steep
learning curve. We will see that it is, indeed, a complex system, but
that it is possible to tame its most essential features in just a few
hours.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jérôme Petazzoni</dc:creator><pubDate>Wed, 01 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/getting-started-with-kubernetes-and-container-orchestration.html</guid><category>tutorial</category></item><item><title>Lambda Calculus from the Ground Up</title><link>https://pyvideo.org/pycon-us-2019/lambda-calculus-from-the-ground-up.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;These days, programming style guides are all the rage. However, what if
your style guide was so restrictive that it only gave you
single-argument functions and nothing else? No modules, no classes, no
control flow, no data structures, and not even any primitives like
integers or regular expressions. Just functions. Could you actually
program anything at all? Surprisingly, the answer is yes. In this
tutorial, you'll learn how as you work through a ground-up derivation of
the lambda calculus in Python.&lt;/p&gt;
&lt;p&gt;You will learn nothing practically useful in this tutorial. No
packaging. No tools. No libraries. No deployment. No magic Python
programming techniques. And certainly learn nothing you would ever want
to apply to a real project. You will, on the other hand, have a lot of
fun, be completely amazed, and learn some foundational computer science
that is a jumping off point for further explorations of functional
programming, type theory, programming languages, and more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Beazley</dc:creator><pubDate>Wed, 01 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/lambda-calculus-from-the-ground-up.html</guid><category>tutorial</category></item><item><title>Network Analysis Made Simple</title><link>https://pyvideo.org/pycon-us-2019/network-analysis-made-simple.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wondered about how those data scientists at Facebook and
LinkedIn make friend recommendations? Or how epidemiologists track down
patient zero in an outbreak? If so, then this tutorial is for you. In
this tutorial we will use a variety of datasets to help you understand
the fundamentals of network thinking, with a particular focus on
constructing, summarizing, and visualizing complex networks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mridul Seth</dc:creator><pubDate>Wed, 01 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/network-analysis-made-simple.html</guid><category>tutorial</category></item><item><title>Pandas is for Everyone</title><link>https://pyvideo.org/pycon-us-2019/pandas-is-for-everyone.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data Science and Machine learning have been synonymous with languages
like Python. Libraries like Numpy and Pandas have become the de facto
standard when working with data. The DataFrame object provided by Pandas
gives us the ability to work with heterogeneous unstructured data that
is commonly used in &amp;quot;real world&amp;quot; data.&lt;/p&gt;
&lt;p&gt;New learners are often drawn to Python and Pandas because of all the
different and exciting types of models and insights the language can do
and provide, but are awestruck when faced with the initial learning
curve.&lt;/p&gt;
&lt;p&gt;This tutorial aims to guide the learner from using spreadsheets to using
the Pandas DataFrame. Not only does moving to a programming language
allow the user to have a more reproducible workflow, but as datasets get
larger, some cannot even be opened in a spreadsheet program. The goal is
to have an absolute beginner proficient enough with Pandas that they can
start working with data in Python.&lt;/p&gt;
&lt;p&gt;We will cover how to load and view our data and introduce what Dr.
Hadley Wickham has coined &amp;quot;tidy data&amp;quot;. Tidy data is an important concept
because the process of tidying data will fix a host of data problems
that are needed to perform analytics. We then cover functions and
applying methods to our data with a focus on data cleaning, and how we
can use the concept of split-apply-combine (groupby) to summarize or
reduce our data.&lt;/p&gt;
&lt;p&gt;Finally, we cover the role of Pandas in analysis packages such as scikit
learn. The tutorial will end with a fitted model.&lt;/p&gt;
&lt;p&gt;The goal is to get people familiar with Python and Pandas so they can
learn and explore many other parts of the Python ecosystem (e.g., scikit
learn, dask, seaborn, etc).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Chen</dc:creator><pubDate>Wed, 01 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/pandas-is-for-everyone.html</guid><category>tutorial</category></item><item><title>Pythonic Objects: idiomatic OOP in Python</title><link>https://pyvideo.org/pycon-us-2019/pythonic-objects-idiomatic-oop-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Objects and classes are part of Python since version 1 -- not an
afterthought. But all languages implement and support OOP in different
ways. &amp;quot;Classic&amp;quot; patterns that make sense elsewhere may not be as useful
in Python, and Python provides unique solutions to some familiar
problems.&lt;/p&gt;
&lt;p&gt;This tutorial is about modern, idiomatic OOP in Python 3.7. Most of the
discussion will be relevant to previous versions all the way to Python
2.7, but newer features will be highlighted.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luciano Ramalho</dc:creator><pubDate>Wed, 01 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/pythonic-objects-idiomatic-oop-in-python.html</guid><category>tutorial</category></item><item><title>Writing Command Line Applications that Click</title><link>https://pyvideo.org/pycon-us-2019/writing-command-line-applications-that-click.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Click is a Python package that helps you create well-behaved command
line interfaces with minimal code.&lt;/p&gt;
&lt;p&gt;In this tutorial you will:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Learn what makes a command line application &amp;quot;well-behaved&amp;quot;&lt;/li&gt;
&lt;li&gt;Build an application that exercises the most commonly-used features
of Click&lt;/li&gt;
&lt;li&gt;Get an overview of the more advanced functionality available&lt;/li&gt;
&lt;li&gt;Package and install the application&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You will leave with an example application that you can use as a basis
for your own command line development.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Forgac</dc:creator><pubDate>Wed, 01 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-01:pycon-us-2019/writing-command-line-applications-that-click.html</guid><category>tutorial</category></item><item><title>Getting started with Plone CMS development - Part 1</title><link>https://pyvideo.org/europython-2013/getting-started-with-plone-cms-development-part-1.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nejc Zupan</dc:creator><pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-05:europython-2013/getting-started-with-plone-cms-development-part-1.html</guid><category>scm</category><category>web</category><category>continuous-integration</category><category>testing</category><category>buildout</category><category>javascript</category><category>framework</category><category>html</category><category>zope</category><category>best-practices</category><category>CMS</category><category>plone</category><category>tutorial</category></item><item><title>Getting started with Plone CMS development - Part 2</title><link>https://pyvideo.org/europython-2013/getting-started-with-plone-cms-development-part-2.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nejc Zupan</dc:creator><pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-05:europython-2013/getting-started-with-plone-cms-development-part-2.html</guid><category>scm</category><category>web</category><category>continuous-integration</category><category>testing</category><category>buildout</category><category>javascript</category><category>framework</category><category>html</category><category>zope</category><category>best-practices</category><category>CMS</category><category>plone</category><category>tutorial</category></item><item><title>Sink or swim: 5 life jackets to throw to New Coders</title><link>https://pyvideo.org/europython-2013/sink-or-swim-5-life-jackets-to-throw-to-new-coders.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lynn Root</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:europython-2013/sink-or-swim-5-life-jackets-to-throw-to-new-coders.html</guid><category>tutorial</category></item><item><title>Around the World in 80 Ways: An Introduction to Working w/ Geodata &amp; Cartopy</title><link>https://pyvideo.org/scipy-2018/around-the-world-in-80-ways-an-introduction-to-working-w-geodata-cartopy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;On the 1st of October 1872, Jules Verne’s character Phileas Fogg embarks on an adventure to circumnavigate the world in just 80 days. Travelling exclusively by sea and rail, Fogg voyages from the misty alleys of Victorian London to the exotic subcontinent and the Wild West in a race against the clock. Despite fastidiously counting each sunrise, he famously neglects the effect of crossing the dateline and thus arrives on a different day to the one he calculated. The mistreatment of the dateline is far from unique to Phileas Fogg; it is not just the 24hr time discontinuity that we struggle with - the antimeridian is also a longitudinal discontinuity of 360 degrees for coordinate systems centered at the Greenwich Prime meridian. Whilst Cartesian treatment of geospatial data is a reasonable assumption with an appropriately transformed coordinate system and at large scale (small area), the discontinuities of the antimeridian and the poles frequently wreak havoc on our Cartesian tools when we treat larger area (global / small scale) data. In this tutorial, join Phileas Elson on our own epic adventure by tracking Fogg’s travel log with careful non-Cartesian treatment as we go. Along the way, we will discover how many of the python libraries we may already know and love can be used in conjunction with cartopy to provide a powerful suite of open source geospatial tools. We will cover many of the core concepts in cartopy, including topics such as: coordinate reference systems and projections; the matplotlib interface; geospatial image, data (NetCDF) and raster treatment; as well as geometry predicates and transformations. The knowledge developed from this tutorial will be applicable to a broad range of geospatial analyses (both raster and vector), and will provide hands-on experience of tools such as numpy, proj.4, matplotlib and shapely to name a few. The tutorial will be applicable to a broad range of experiences, but familiarity with numpy and matplotlib will be essential to enable progress through the exercises. A prior awareness of tools such as shapely, proj.4, geopandas, and xarray/Iris will help, though are by no means essential. The tutorial will be made up of a number of exercises with each being designed to accommodate a broad range of expertise. Prerequisite skills: NumPy, matplotlib&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philip Elson</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/around-the-world-in-80-ways-an-introduction-to-working-w-geodata-cartopy.html</guid><category>tutorial</category></item><item><title>PyViz: Easy Visualization and Exploration for all your Data</title><link>https://pyvideo.org/scipy-2018/pyviz-easy-visualization-and-exploration-for-all-your-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial, you will learn how to use the PyViz suite of tools to quickly build simple or complex visualizations that reveal and give insight into your data. You'll start by using the HoloViews library to annotate your numpy, pandas, or xarray data and make it have an instantly available visual representation. These declarative objects make it easy to visualize how different sets of data relate to each other, by flexibly overlaying and laying out data in any combination. Once you have these objects, you can select, slice, or sample your data as needed, quickly making new types of plots so that you can fully understand your data. You'll be able to choose between Matplotlib plots suitable for publications, or Bokeh plots that support interactive exploration in Jupyter Notebooks or as separate dashboard apps. You'll then see how to use HoloViews and related tools to transform your data for viewing in different ways, defining complex analysis pipelines if needed that preserve the raw data while making each step visible for analysis. When your datasets are too large for web browsers, we'll show how to use Datashader to reveal &lt;em&gt;all&lt;/em&gt; of the data faithfully, rendering it into an image that can be displayed safely even for billions of datapoints. When it is time to share your results with non-developer colleagues, we'll show how to use Param to add interactive widgets to let them explore parameter spaces, how to link plots to respond to user selections and events, and how to put plots and widgets together into a separately launchable dashboard. Throughout, we will demonstrate how to customize plots as needed, how to follow up on specific topics to get more information, and how and when to use each of the libraries described. The aim is to give users the tools and know-how to effectively explore, analyze and visualize even large and complex datasets easily, concisely, and reproducibly. You can see a detailed breakdown of the topics included, including the full training materials as Jupyter notebooks, at &lt;a class="reference external" href="https://pyviz.github.io/pyviz/tutorial/00_Welcome.html"&gt;https://pyviz.github.io/pyviz/tutorial/00_Welcome.html&lt;/a&gt; .&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James A. Bednar</dc:creator><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-12:scipy-2018/pyviz-easy-visualization-and-exploration-for-all-your-data.html</guid><category>tutorial</category></item><item><title>Introduction to Geospatial Data Analysis with Python</title><link>https://pyvideo.org/scipy-2018/introduction-to-geospatial-data-analysis-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to geospatial data analysis in Python,
with a focus on tabular vector data. It is the first part in a series of
two tutorials; this part focuses on introducing the participants to the
different libraries to work with geospatial data and will cover munging
geo-data and exploring relations over space. This includes importing
data in different formats (e.g. shapefile, GeoJSON), visualizing,
combining and tidying them up for analysis, and will use libraries such
as &lt;tt class="docutils literal"&gt;pandas&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;geopandas&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;shapely&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;PySAL&lt;/tt&gt;, or &lt;tt class="docutils literal"&gt;rasterio&lt;/tt&gt;.
The second part will built upon this and focus on more more advanced
geographic data science and statistical methods to gain insight from the
data. No previous experience with those geospatial python libraries is
needed, but basic familiarity with geospatial data and concepts
(shapefiles, vector vs raster data) and pandas will be
helpful.Presenter(s): Speaker: Serge Rey, University of California,
Riverside Speaker: Dani Arribas- Bel, University of Liverpool Speaker:
Joris Van den Bossche, Université Paris- Saclay Center for Data Science
Speaker: Levi Wolf, University of Bristol&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Serge Rey</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/introduction-to-geospatial-data-analysis-with-python.html</guid><category>tutorial</category></item><item><title>Machine Learning with scikit-learn Part 1</title><link>https://pyvideo.org/scipy-2018/machine-learning-with-scikit-learn-part-1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial aims to provide an introduction to machine learning and
scikit- learn &amp;quot;from the ground up&amp;quot;. We will start with core concepts of
machine learning, some example uses of machine learning, and how to
implement them using scikit-learn. Going in detail through the
characteristics of several methods, we will discuss how to pick an
algorithm for your application, how to set its hyper-parameters, and how
to evaluate performance. This is a two part tutorial. Please register
for part one and part two. Prerequisite skills: NumPy, matplotlib
Presenter(s): Speaker: Andreas Mueller, Columbia University Speaker:
Guillaume Lemaitre, INRIA Saclay - Parietal team&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/machine-learning-with-scikit-learn-part-1.html</guid><category>tutorial</category></item><item><title>Machine Learning with scikit-learn Part 2</title><link>https://pyvideo.org/scipy-2018/machine-learning-with-scikit-learn-part-2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial aims to provide an introduction to machine learning and
scikit- learn &amp;quot;from the ground up&amp;quot;. We will start with core concepts of
machine learning, some example uses of machine learning, and how to
implement them using scikit-learn. Going in detail through the
characteristics of several methods, we will discuss how to pick an
algorithm for your application, how to set its hyper-parameters, and how
to evaluate performance. This is a two part tutorial. Please register
for part one and part two. Prerequisite skills: NumPy,
matplotlibPresenter(s): Speaker: Andreas Mueller, Columbia University
Speaker: Guillaume Lemaitre, INRIA Saclay - Parietal team&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/machine-learning-with-scikit-learn-part-2.html</guid><category>tutorial</category></item><item><title>The Sheer Joy of Packaging</title><link>https://pyvideo.org/scipy-2018/the-sheer-joy-of-packaging.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building packages in Python used to be hard, especially the ones
including compiled extensions. Fortunately, it is getting easier thanks
to efforts in the scientific Python community. However, there are still
a lot of challenges and complexities facing the package builder.There
are at least two major packaging systems (pip/wheel and conda), and lots
of different ways to do work with these systems. This tutorial will
cover packaging from start to finish for both PyPI and conda, including
setup.py, flit, wheels, twine, conda-build, scikit-build, anaconda
cloud, and conda-forge. Particular attention will be paid to critical
details, such as binary compatibility and platform
differences.Presenter(s): Speaker: Michael Sarahan, Anaconda, Inc.
Speaker: Matthew McCormick, Kitware, Inc. Speaker: Jean-Christophe
Fillion-Robin, Kitware, Inc. Speaker: Filipe Fernandes, SECOORA Speaker:
Chris Barker, NOAA Speaker: Matt Craig, Minnesota State University
Moorhead Speaker: Jonathan Helmus, Anaconda, Inc. Speaker: Ray Donnelly,
Anaconda, Inc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Sarahan</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/the-sheer-joy-of-packaging.html</guid><category>tutorial</category></item><item><title>3D Visualization with Mayavi</title><link>https://pyvideo.org/scipy-2018/3d-visualization-with-mayavi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will introduce the participants to 3D visualization using
Mayavi (&lt;a class="reference external" href="https://github.com/enthought/mayavi"&gt;https://github.com/enthought/mayavi&lt;/a&gt;). Mayavi is an Open Source,
Python package for general purpose 3D visualization. Mayavi uses VTK
(&lt;a class="reference external" href="http://www.vtk.org"&gt;http://www.vtk.org&lt;/a&gt;) under the covers and provides a very
Python-friendly API. At the end of the tutorial users will be able to
use Mayavi effectively to produce 3D visualizations and hopefully be
able to represent their data in a suitable format so it may be
visualized with Mayavi/VTK. Prerequisite skills: NumPyPresenter(s):
Speaker: Prabhu Ramachandran, Enthought and IIT Bombay&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Prabhu Ramachandran</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:scipy-2018/3d-visualization-with-mayavi.html</guid><category>tutorial</category></item><item><title>Bayesian Data Science Two Ways: Simulation and Probabilistic Programming</title><link>https://pyvideo.org/scipy-2018/bayesian-data-science-two-ways-simulation-and-probabilistic-programming.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial, Hugo and Eric will build participants’ knowledge of Bayesian inference, workflows and decision making under uncertainty. We will start with the basics of probability via simulation and analysis of real-world datasets, building up to an understanding of Bayes’ theorem. We will then introduce the use of probabilistic programming to do statistical modelling. Throughout this tutorial, we will use a mixture of instructional time and hands-on time. During instructional time, we will use a variety of datasets to anchor our instruction; during hands-on time, which immediately follow instructional time, our participants will apply the concepts learned to the Darwin’s finches dataset, which will permeate the entire tutorial. For maximal benefit, participants are expected to have experience writing for-loops and working with numpy arrays. The necessary syntax will be introduced during the tutorial, but familiarity will help. No knowledge of statistics is necessary. However, the most important and beneficial prerequisite is a will to learn new things. If you have this quality, you'll definitely get something out of this tutorial!&lt;/p&gt;
&lt;p&gt;Prerequisite skills: NumPy, Pandas, matplotlib&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-09:scipy-2018/bayesian-data-science-two-ways-simulation-and-probabilistic-programming.html</guid><category>tutorial</category></item><item><title>Accelerating Scientific Code with Numba</title><link>https://pyvideo.org/pydata-london-2015/accelerating-scientific-code-with-numba.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Numba is a just-in-time Python compiler that can be used to speed up
a wide range of scientific and other numerical applications. This
tutorial is intended to provide an introduction to using Numba, and
ways of understanding of the performance of Numba-compiled code.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will provide an overview of
&lt;a class="reference external" href="http://numba.pydata.org/"&gt;Numba&lt;/a&gt;, a just-in-time Python compiler
focused on numerical computing. Originally aimed at computations using
Numpy arrays, it has been expanded to work with other Python types and
can speed up computations that require more than just fast linear
algebra operations. Numba targets both CPUs and CUDA GPUs by generating
native code using the LLVM compiler infrastructure.&lt;/p&gt;
&lt;p&gt;As there are different components of Numba that can be applied in
different circumstances, this introduction aims to span the breadth of
use cases rather than focusing on a single area in depth. This is in
order to enable the selection of appropriate portions of code to use
with Numba, and the correct selection of Numba's facilities in each
case.&lt;/p&gt;
&lt;p&gt;Areas that will be covered include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An overview of the type system, with a view to understanding and
overcoming typing issues,&lt;/li&gt;
&lt;li&gt;Compilation of Python functions using the &lt;tt class="docutils literal"&gt;&amp;#64;jit&lt;/tt&gt; decorator,&lt;/li&gt;
&lt;li&gt;Creation of Numpy ufuncs in Python using the &lt;tt class="docutils literal"&gt;&amp;#64;vectorize&lt;/tt&gt;
decorator,&lt;/li&gt;
&lt;li&gt;Understanding and measuring the performance of Numba-compiled code,&lt;/li&gt;
&lt;li&gt;Debugging facilities in Numba.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tutorial is intended for an audience of programmers and data
scientists who have an interest in speeding up numerical routines, and
people with a general interest in high-performance Python. In order to
get started quickly, it is recommended that attendees install the
&lt;a class="reference external" href="https://store.continuum.io/cshop/anaconda/"&gt;Anaconda Python
distribution&lt;/a&gt; or
&lt;a class="reference external" href="http://conda.pydata.org/miniconda.html"&gt;Miniconda&lt;/a&gt;, as this provides
a robust mechanism for installing Numba on Linux, Mac OS X and Windows.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Markall</dc:creator><pubDate>Fri, 19 Jun 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-06-19:pydata-london-2015/accelerating-scientific-code-with-numba.html</guid><category>tutorial</category></item><item><title>Analysis and transformation of geospatial data using Python</title><link>https://pyvideo.org/pydata-london-2015/analysis-and-transformation-of-geospatial-data-using-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A tutorial covering some general concepts of geospatial data, main
formats in which it is distributed and some common places where this
data can be acquired. We will also learn how to read, process and
visualise this data using Python and QGIS. This talk will cover some
typical problems one can experience when working with geospatial
data.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;ol class="arabic simple"&gt;
&lt;li&gt;Installing tools and packages (ansible scripts/cloud machine will be
provided)&lt;/li&gt;
&lt;li&gt;Basic concepts&lt;/li&gt;
&lt;li&gt;geometries. Fixing invalid geometries.&lt;/li&gt;
&lt;li&gt;basic operations (union, intersection, difference)&lt;/li&gt;
&lt;li&gt;advanced operations (buffer, convex hull, skeleton, voronoi)&lt;/li&gt;
&lt;li&gt;Formats and tools&lt;/li&gt;
&lt;li&gt;Shapefile&lt;/li&gt;
&lt;li&gt;GeoJSON&lt;/li&gt;
&lt;li&gt;TopoJSON&lt;/li&gt;
&lt;li&gt;GeoTIFF&lt;/li&gt;
&lt;li&gt;OSM data&lt;/li&gt;
&lt;li&gt;Projections&lt;/li&gt;
&lt;li&gt;common projections and their use&lt;/li&gt;
&lt;li&gt;how to chose the projection&lt;/li&gt;
&lt;li&gt;reprojecting datasets&lt;/li&gt;
&lt;li&gt;Using geospatial index&lt;/li&gt;
&lt;li&gt;Open Geospatial datasets&lt;/li&gt;
&lt;li&gt;UK specific datasets&lt;/li&gt;
&lt;li&gt;OpenStreetMap&lt;/li&gt;
&lt;li&gt;elevation data&lt;/li&gt;
&lt;li&gt;Geocoding&lt;/li&gt;
&lt;li&gt;Storing geospatial data in databases (PostgreSQL, SpatiaLite,
MongoDB, ElasticSearch)&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Demeter Sztanko</dc:creator><pubDate>Fri, 19 Jun 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-06-19:pydata-london-2015/analysis-and-transformation-of-geospatial-data-using-python.html</guid><category>tutorial</category></item><item><title>Getting Started with Cloud Foundry for Data Science</title><link>https://pyvideo.org/pydata-london-2015/getting-started-with-cloud-foundry-for-data-science.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Cloud Foundry is an open source Platform-as-a-Service that can be
used to easily deliver data driven applications. In this tutorial we
will learn how to push an application to a real CF instance, how to
connect to managed data services like Redis and PostgreSQL and how to
deploy PyData and R projects using community buildpacks.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="http://cloudfoundry.org/"&gt;Cloud Foundry&lt;/a&gt; is an open source
Platform-as-a- Service that can be used to easily deliver data driven
applications. In this tutorial we will learn how to push an application
to a real CF instance, how to connect to managed data services like
Redis and PostgreSQL and how to deploy PyData and R projects using
community buildpacks.&lt;/p&gt;
&lt;p&gt;By the end of the tutorial participants will know how to _ deploy your
first app using Cloud Foundry, _ connect to databases and other data
services, _ use PyData packages with a Heroku-style buildpack, _ find
public and private Cloud Foundry installation options.&lt;/p&gt;
&lt;p&gt;Participants will need to register on a public Cloud Foundry instance to
follow along with the tutorial. Detailed instructions will be provided
for &lt;a class="reference external" href="http://run.pivotal.io/"&gt;Pivotal Web Services&lt;/a&gt; which offers a 60
day free trial. Other options include IBM Bluemix and HP Helion
Development Platform.&lt;/p&gt;
&lt;p&gt;Participants should be comfortable on the command line and download and
install the &lt;a class="reference external" href="http://docs.cloudfoundry.org/devguide/installcf/install-go-cli.html"&gt;CF CLI
tools&lt;/a&gt;
before the tutorial.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ian Huston</dc:creator><pubDate>Fri, 19 Jun 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-06-19:pydata-london-2015/getting-started-with-cloud-foundry-for-data-science.html</guid><category>tutorial</category></item><item><title>How “good” is your model, and how can you make it better?</title><link>https://pyvideo.org/pydata-london-2015/how-good-is-your-model-and-how-can-you-make-it-better.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This hands-on tutorial will show you how to use scikit-learn’s model
evaluation functions to evaluate different models in terms of
accuracy and generalisability, and search for optimal parameter
configurations.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The objective of this tutorial is to give participants the skills
required to validate, evaluate and fine-tune models using scikit-learn’s
evaluation metrics and parameter search capabilities. It will combine
both the theoretical rationale behind these methods and their code
implementation.&lt;/p&gt;
&lt;p&gt;The session will be structured as follows (rough timings in
parentheses):&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Explanation of over-fitting and the bias-variance trade-off, followed
by a brief conceptual overview of cross-validation, bootstrapping,
and ensemble methods, in particular with respect to bias and
variance. Pointers to the corresponding scikit-learn functions will
also be given. (20 minutes)&lt;/li&gt;
&lt;li&gt;Implementation of cross-validation and grid-search method for
parameter tuning, using KNN classification as an illustrative
example. Participants will train two KNN neighbours with different
numbers of neighbours on preprocessed data (provided). They will then
be guided through cross-validation, plotting of results, and
grid-search to find the best neighbour and weight configuration(s).
(30 minutes)&lt;/li&gt;
&lt;li&gt;Comparison of different classification models using cross-validation.
Participants will implement a logistic regression, linear and
non-linear support vector machine (SVM) or neural network model and
apply the same cross-validation and grid search method as in the
guided KNN example. Participants will then compare their plots,
evaluate their results and discuss which model they might choose for
different objectives, trading off generalisability, accuracy, speed
and randomness. (70 minutes)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We assume participants will be familiar with numpy, matplotlib, and at
least the intuition behind some of the main classification algorithms.
Before the tutorial, participants with github accounts should fork from
&lt;a class="reference external" href="https://github.com/cambridgecoding/pydata-tutorial"&gt;https://github.com/cambridgecoding/pydata-tutorial&lt;/a&gt; or download the files
and iPython notebook so they can participate in the hands on activities.
Required libraries: numpy, scikit-learn, matplotlib, pandas, scipy,
multilayer_perceptron (provided)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chih-Chun Chen</dc:creator><pubDate>Fri, 19 Jun 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-06-19:pydata-london-2015/how-good-is-your-model-and-how-can-you-make-it-better.html</guid><category>tutorial</category></item><item><title>Bokeh - Interactive Visualization for Large Datasets</title><link>https://pyvideo.org/pydata-london-2014/bokeh-interactive-visualization-for-large-datasets.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bokeh is a Python interactive visualization library for large datasets
that natively uses the latest web technologies. Its goal is to provide
elegant, concise construction of novel graphics in the style of
Protovis/D3, while delivering high-performance interactivity over large
data to thin clients. This tutorial will walk users through the steps to
create different kinds of interactive plots using Bokeh. We will cover
using Bokeh for static HTML output, the IPython notebook, and plot
hosting and embedding using the Bokeh server.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bryan Van De Ven</dc:creator><pubDate>Fri, 21 Feb 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-02-21:pydata-london-2014/bokeh-interactive-visualization-for-large-datasets.html</guid><category>tutorial</category></item><item><title>Keras</title><link>https://pyvideo.org/euroscipy-2017/keras.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Goal of the Tutorial&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Introduce&lt;/strong&gt; main features of Keras APIs to build Neural Networks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Learn&lt;/strong&gt; how to implement simple and complex Deep Neural Networks
Architectures using Keras.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Discover&lt;/strong&gt; Keras Implementation and Internals.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: examples and hands-on exercises will be provided along the
way.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;em&gt;Multi-layer Fully Connected Networks (and the ``backends``)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Bottleneck features and Embeddings&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Convolutional Networks&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Transfer Learning and Fine Tuning&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Residual Networks&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Recursive Neural Networks&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;[Variational] AutoEncoders and Adversarials&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Multi-Modal Networks&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Custom Layers and Optimisers&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Interactive Networks and Callbacks&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="description"&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Multi-layer Fully Connected Networks&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;In this notebook we will learn the basic building blocks of Keras
APIs to create deep neural networks. We will learn how to use the
&lt;tt class="docutils literal"&gt;Sequential&lt;/tt&gt; object as well as &lt;em&gt;Functional&lt;/em&gt; and &lt;tt class="docutils literal"&gt;keras.backend&lt;/tt&gt;
APIs. First examples of MLP and Fully Connected Networks will be
presented.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Bootleneck Features and Embeddings&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;After having played a bit with Keras APIs for building networks, we
start learn how to inspect network's internals. In details, we will
learn (1) how to iterate over layers; (2) how to initialise and get
weights; (3) how to extract bottleneck features and create
embeddings.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Convolutional Networks&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;This notebook will teach how to build CNN (Convolutional Neural
Networks). Convolutional, Pooling, DropOut layers will be
presented, along with clear description on how to properly apply
convolutions on images, depending on &lt;tt class="docutils literal"&gt;image_dim_ordering&lt;/tt&gt;
setting.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Transfer Learning and Fine Tuning&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;The Keras implementation of some famous Deep Convolutional Networks
will be presented (i.e. &lt;tt class="docutils literal"&gt;keras.applications.vgg16&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;keras.applications.vgg19&lt;/tt&gt;, and
&lt;tt class="docutils literal"&gt;keras.applications.inceptionv3&lt;/tt&gt;). We will learn how to leverage
on these models for transfer learning and fine tuning using Keras
&lt;tt class="docutils literal"&gt;Layer&lt;/tt&gt; APIs.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Residual Networks&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;In this notebook, Residual Networks will be presented. In
particular, the Keras implementation of the residual network
topology will be explained. Then, ResNet
(&lt;tt class="docutils literal"&gt;keras.applications.resnet50&lt;/tt&gt;) Keras implementation will be
detailed.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Recurrent Neural Networks&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;Recurrent Neural Networks (i.e. LSTM and GRU) are the main topic of
this notebook. The Keras implementation of these two types of
network will be presented along with working examples combining
Word Embeddings and Convolutional Layers (i.e.
&lt;tt class="docutils literal"&gt;keras.layers.convolutional_recurrent&lt;/tt&gt;)&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;[Variational] AutoEncoders and Adversarials&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;This notebook will be devoted to show how to implement AutoEncoders
in Keras. In particular, the implementation of Stacked
AutoEncoders, Variational AutoEncoders and Generative Adversarial
Networks will be presented.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Multi-Modal Networks&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;Multi-Input and Multi-task Networks are the fundamental steps for
advanced deep networks. This notebook will provide implementation
recipes and examples.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Custom Layers and Optimisers&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;This notebook will provide details and examples of Keras internals.
In particular, we will learn how to implement a Custom Layer in
Keras, and custom Activation functions, and custom optimisers.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Interactive Networks and Callbacks&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;In this last notebook, &lt;tt class="docutils literal"&gt;keras.callbacks&lt;/tt&gt; will be explained.
Callbacks to track and monitor network performances during the
training process will be built and integrated inside a web app.
Finally, an example of &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;keras-js&lt;/span&gt;&lt;/tt&gt; will be described, detailing
functions in Keras to export models and weights (in &lt;tt class="docutils literal"&gt;json&lt;/tt&gt; and
&lt;tt class="docutils literal"&gt;hdf5&lt;/tt&gt; formats).&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="requirements"&gt;
&lt;h4&gt;Requirements&lt;/h4&gt;
&lt;p&gt;This tutorial requires the following packages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;Python version 3.5.x&lt;/div&gt;
&lt;div class="line"&gt;- Python 3.4 is fine as well&lt;/div&gt;
&lt;div class="line"&gt;- likely Python 2.7 would also be fine, but &lt;em&gt;who knows&lt;/em&gt;? :P&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;numpy&lt;/tt&gt; version 1.10 or later: &lt;a class="reference external" href="http://www.numpy.org/"&gt;http://www.numpy.org/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;scipy&lt;/tt&gt; version 0.16 or later: &lt;a class="reference external" href="http://www.scipy.org/"&gt;http://www.scipy.org/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;matplotlib&lt;/tt&gt; version 1.4 or later: &lt;a class="reference external" href="http://matplotlib.org/"&gt;http://matplotlib.org/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;pandas&lt;/tt&gt; version 0.16 or later: &lt;a class="reference external" href="http://pandas.pydata.org"&gt;http://pandas.pydata.org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;scikit-learn&lt;/span&gt;&lt;/tt&gt; version 0.15 or later: &lt;a class="reference external" href="http://scikit-learn.org"&gt;http://scikit-learn.org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;keras&lt;/tt&gt; version 1.0 or later: &lt;a class="reference external" href="http://keras.io"&gt;http://keras.io&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;tensorflow&lt;/tt&gt; version 0.9 or later: &lt;a class="reference external" href="https://www.tensorflow.org"&gt;https://www.tensorflow.org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt;/&lt;tt class="docutils literal"&gt;jupyter&lt;/tt&gt; version 4.0 or later, with notebook support&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Optional but recommended):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;pyyaml&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;hdf5&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;h5py&lt;/tt&gt; (required if you use model saving/loading
functions in keras)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The easiest way to get (most) these is to use an all-in-one installer
such as &lt;a class="reference external" href="http://www.continuum.io/downloads"&gt;Anaconda&lt;/a&gt; from Continuum.
These are available for multiple architectures.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Valerio Maggio</dc:creator><pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-31:euroscipy-2017/keras.html</guid><category>tutorial</category></item><item><title>Matplotlib</title><link>https://pyvideo.org/euroscipy-2017/matplotlib.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is for Python users who would like to create nice 2d plots
with Python.&lt;/p&gt;
&lt;div class="section" id="audience-level"&gt;
&lt;h4&gt;Audience Level&lt;/h4&gt;
&lt;p&gt;Students should have a working knowledge of Python. NumPy knowledge is
helpful but not required.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prerequisites"&gt;
&lt;h4&gt;Prerequisites&lt;/h4&gt;
&lt;p&gt;Please bring your laptop with the operating system of your choice
(Linux, Mac OS X, Windows). In addition to Python 3.6 (2.7 works if
really want to use it), we need:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a current versions of matplotlib (&lt;a class="reference external" href="http://matplotlib.sourceforge.net"&gt;http://matplotlib.sourceforge.net&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Jupyter (&lt;a class="reference external" href="http://jupyter.org/"&gt;http://jupyter.org/&lt;/a&gt;) and&lt;/li&gt;
&lt;li&gt;NumPy (&lt;a class="reference external" href="http://numpy.scipy.org"&gt;http://numpy.scipy.org&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you use Anaconda you should have all requirements installed. If you
use a new &lt;tt class="docutils literal"&gt;conda&lt;/tt&gt; environment install with:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;conda install jupyter numpy matplotlib&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The same goes for &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;pip install jupyter numpy matplotlib&lt;/tt&gt;&lt;/p&gt;
&lt;div class="section" id="method"&gt;
&lt;h5&gt;Method&lt;/h5&gt;
&lt;p&gt;This is a hands-on course. Students are strongly encouraged to work
along with the trainer at the interactive prompt. There will be
exercises the students need to do on their own. Experience shows that
this active involvement is essential for an effective learning.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="content"&gt;
&lt;h5&gt;Content&lt;/h5&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The library matplotlib provides many different types of diagrams from
within Python with only few lines of code. Examples are used to
exercise the use of this library. The tutorial provides an overview
how to create plots . Using matplotlib from Jupyter Notebook provides
an interactive environment for fast testing of ideas. We will be using
this for most of the tutorial.&lt;/div&gt;
&lt;div class="line"&gt;With a simple plot we learn how to add axis labels, titles and a
legend. The GUI offers zooming, panning, changing of plot sizes and
other interactive ways to modify the plot. We will use Python to
change properties of existing plots such as line colors, marker
symbols, or line styles. There are several ways how to place text on
plots. You will learn about the different coordinate systems relative
to the plot, the canvas or the figure. Another topic are ticks, where
to put them and how to format them to achieve publication-quality
plots. The concepts of figures, subplots, and axes and how they relate
to each other will be explained with examples.&lt;/div&gt;
&lt;div class="line"&gt;Matplotlib offers many different types of plots. The tutorial
introduces several of them with an example. A more advanced topic will
be creating your own plot types. Finally, we will create a small
animation to explore the possibilities to visualize changes.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="outline"&gt;
&lt;h5&gt;Outline&lt;/h5&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Jupyter&lt;/li&gt;
&lt;li&gt;Simple plots&lt;/li&gt;
&lt;li&gt;Properties&lt;/li&gt;
&lt;li&gt;Text&lt;/li&gt;
&lt;li&gt;Ticks&lt;/li&gt;
&lt;li&gt;Figures, subplots, and axes&lt;/li&gt;
&lt;li&gt;Other types of plots&lt;/li&gt;
&lt;li&gt;The class library&lt;/li&gt;
&lt;li&gt;Creating New Plot Types&lt;/li&gt;
&lt;li&gt;Animations&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="audience-level-novice"&gt;
&lt;h6&gt;Audience level: Novice&lt;/h6&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Müller</dc:creator><pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-31:euroscipy-2017/matplotlib.html</guid><category>tutorial</category></item><item><title>NetworkX</title><link>https://pyvideo.org/euroscipy-2017/networkx.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;working with graphs using python and the NetworkX package. This will be
a hands on tutorial and will require writing a lot of code snippets. The
participants should be comfortable with basic python (loops,
dictionaries, lists) and some(minimal) experience with working inside a
jupyter notebook.&lt;/p&gt;
&lt;p&gt;Broadly the tutorial is divided into four parts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Part A (20 mins)&lt;ul&gt;
&lt;li&gt;Basics of graph theory and various examples of networks in real life.&lt;/li&gt;
&lt;li&gt;Introduction to the NetworkX API and various data structures&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Part B (30 mins)&lt;ul&gt;
&lt;li&gt;Work with small synthetic networks (generated using random graph
generators) to understand the structure of the network.&lt;/li&gt;
&lt;li&gt;Analyse the network and study various properties of the network like
centrality, connectivity, shortest paths, cliques.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Part C (30 mins)&lt;ul&gt;
&lt;li&gt;We'll use the various techniques we have learnt so far and model a
network out of real world data like co-authorship network(
&lt;a class="reference external" href="http://www-personal.umich.edu/~mejn/netdata/cond-mat-2005.zip"&gt;http://www-personal.umich.edu/~mejn/netdata/cond-mat-2005.zip&lt;/a&gt;) and
study the structure and properties of this network.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Part D (10 mins)&lt;ul&gt;
&lt;li&gt;We'll work on some interesting problems like temporal networks and
visualisation of networks. - We'll model the US Airport Network with
respect to time and will try to make sense out of it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By the end of the tutorial everyone should be comfortable with hacking
on the NetworkX API, modelling data as networks and basic analysis on
networks using python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mridul Seth</dc:creator><pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-31:euroscipy-2017/networkx.html</guid><category>tutorial</category></item><item><title>Pandas</title><link>https://pyvideo.org/euroscipy-2017/pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is nowadays the library of choice for manipulating and analysing structured data, providing high-performance, easy-to-use data structures and data analysis tools.&lt;/p&gt;
&lt;p&gt;This hands-on tutorial will give a basic introduction to pandas, guide you through the different data structures and its manipulation, explaining the the key concepts and defining features. No prior knowledge about pandas is required.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joris Van den Bossche</dc:creator><pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-31:euroscipy-2017/pandas.html</guid><category>tutorial</category><category>pandas</category></item><item><title>Scikit-image</title><link>https://pyvideo.org/euroscipy-2017/scikit-image.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutorial materials can be found on
&lt;a class="reference external" href="https://github.com/emmanuelle/scikit-image-euroscipy2017"&gt;https://github.com/emmanuelle/scikit-image-euroscipy2017&lt;/a&gt;: you can
download a zip on
&lt;a class="reference external" href="https://github.com/emmanuelle/scikit-image-euroscipy2017/archive/master.zip"&gt;https://github.com/emmanuelle/scikit-image-euroscipy2017/archive/master.zip&lt;/a&gt;.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;If you installed Anaconda or Canopy, you already have scikit-image
installed.&lt;/div&gt;
&lt;div class="line"&gt;Otherwise, see &lt;a class="reference external" href="http://scikit-image.org/docs/stable/install.html"&gt;http://scikit-image.org/docs/stable/install.html&lt;/a&gt; for
installation instructions.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;scikit-image version 0.12 or 0.13 is preferable.&lt;/p&gt;
&lt;p&gt;Test code&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt;&amp;gt; from skimage import io, data
&amp;gt;&amp;gt;&amp;gt; camera = data.camera()
&amp;gt;&amp;gt;&amp;gt; io.imshow(camera)
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Emmanuelle Gouillart</dc:creator><pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-31:euroscipy-2017/scikit-image.html</guid><category>tutorial</category><category>scikit-image</category></item><item><title>SymPy</title><link>https://pyvideo.org/euroscipy-2017/sympy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To follow the SymPy tutorial, please go to
&lt;a class="reference external" href="https://github.com/leosartaj/euroscipy-sympy-tutorial"&gt;https://github.com/leosartaj/euroscipy-sympy-tutorial&lt;/a&gt; This link contains
all the notebooks and instructions to install the required software.
Additionally run &lt;tt class="docutils literal"&gt;python test_installation.py&lt;/tt&gt; to check your
installation. I will be updating the notebooks, so please pull the
latest copy before the tutorial.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sartaj Singh</dc:creator><pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-31:euroscipy-2017/sympy.html</guid><category>tutorial</category><category>simpy</category></item><item><title>Advanced data wrangling with pandas</title><link>https://pyvideo.org/euroscipy-2017/advanced-data-wrangling-with-pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is nowadays the library of choice for manipulating and analysing structured data, providing high-performance, easy-to-use data structures and data analysis tools.&lt;/p&gt;
&lt;p&gt;In this hands-on tutorial on using pandas for data analysis, you will be guided through some of the powerful methods and concepts in pandas, including time series manipulation (resampling and rolling operations), groupby operations, reshaping with stack/unstack/pivot, …&lt;/p&gt;
&lt;p&gt;Basic familiarity with pandas data structures (Series/DataFrame) is assumed.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joris Van den Bossche</dc:creator><pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-30:euroscipy-2017/advanced-data-wrangling-with-pandas.html</guid><category>tutorial</category></item><item><title>Scikit-learn (1/2)</title><link>https://pyvideo.org/euroscipy-2017/scikit-learn-12.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Please install the following packages (either with pip or conda):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;scikit-learn 0.19.0 (along with numpy and scipy as dependencies)&lt;/li&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;li&gt;matplotlib&lt;/li&gt;
&lt;li&gt;jupyter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check the scikit-learn version with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -c &amp;quot;import sklearn; print(sklearn.__version__)&amp;quot;
&lt;/pre&gt;
&lt;p&gt;If you have an old version you can upgrade to scikit-learn 0.19.0 with
&lt;tt class="docutils literal"&gt;conda update &lt;span class="pre"&gt;scikit-learn&lt;/span&gt;&lt;/tt&gt; if you use conda or
&lt;tt class="docutils literal"&gt;pip install &lt;span class="pre"&gt;-U&lt;/span&gt; &lt;span class="pre"&gt;scikit-learn&lt;/span&gt;&lt;/tt&gt; otherwise.&lt;/p&gt;
&lt;p&gt;We recommend using Python 3.6 but the tutorial material should also work
with older Python versions (including Python 2.7, but please please
consider using Python 3.6 instead).&lt;/p&gt;
&lt;p&gt;In addition you can also install
&lt;a class="reference external" href="https://scikit-optimize.github.io/"&gt;scikit-optimize&lt;/a&gt; (if you use a
conda environment, you need to first &lt;tt class="docutils literal"&gt;conda install pip&lt;/tt&gt; and then
&lt;tt class="docutils literal"&gt;pip install &lt;span class="pre"&gt;scikit-optimize&lt;/span&gt;&lt;/tt&gt;) in that environment. scikit-optimize
has a dependency on scikit-garden which does not yet provide any binary
package and can fail to install automatically from source on systems
that lack a properly configured C/C++ compiler. If you have trouble
installing scikit-garden and scikit-optimize, don't worry you will be
able to follow those sections on the video projector while still being
able to run the exercises of the other sections that only require
scikit-learn.&lt;/p&gt;
&lt;p&gt;The notebooks will be published on
&lt;a class="reference external" href="https://github.com/ogrisel/euroscipy_2017_sklearn"&gt;https://github.com/ogrisel/euroscipy_2017_sklearn&lt;/a&gt; (please update on
Sunday evening or at the beginning of the tutorial assuming wifi is good
enough).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-30:euroscipy-2017/scikit-learn-12.html</guid><category>tutorial</category><category>scikit-learn</category></item></channel></rss>