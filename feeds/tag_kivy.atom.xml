<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_kivy.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-11-18T00:00:00+00:00</updated><entry><title>Kivy, Python RAD per lo sviluppo di applicazioni mobile e non solo</title><link href="https://pyvideo.org/europython-2013/kivy-python-rad-per-lo-sviluppo-di-applicazioni-mobile-e-non-solo.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Davide Corio</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/kivy-python-rad-per-lo-sviluppo-di-applicazioni-mobile-e-non-solo.html</id><summary type="html"></summary><category term="mobile"></category><category term="kivy-ios"></category><category term="kivy"></category></entry><entry><title>Kivy, versatile framework for mobile and desktop</title><link href="https://pyvideo.org/europython-2013/kivy-versatile-framework-for-mobile-and-desktop.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Mathieu Virbel</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/kivy-versatile-framework-for-mobile-and-desktop.html</id><summary type="html"></summary><category term="python-for-android"></category><category term="android"></category><category term="kivy"></category><category term="iOS"></category><category term="opengl"></category></entry><entry><title>Changing the world with Python and Kivy</title><link href="https://pyvideo.org/pycon-ca-2017/changing-the-world-with-python-and-kivy.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Kjell Wooding</name></author><id>tag:pyvideo.org,2017-11-18:pycon-ca-2017/changing-the-world-with-python-and-kivy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How do you change the world using Python?&lt;/p&gt;
&lt;p&gt;There are 250 million children in the world who are not learning the basics of reading, writing, or mathematics, many of whom don't have access to schools or teachers at all. In order to provide universal basic education worldwide, the UN estimates that it would require an additional 69 million teachers by 2030. Without unprecedented investment, it is simply not possible to overcome this shortfall on a global scale.&lt;/p&gt;
&lt;p&gt;In 2015, we started a project, called Learn Leap Fly, to help address this shortfall using software running on tablets and smartphones. What’s more, we chose Python and Kivy to build our solution.&lt;/p&gt;
&lt;p&gt;In this talk, we will describe this incredible combination of technologies, and explain how Python and Kivy make it possible to build a suite of cross-platform, multi-lingual, touch-based apps targeting Android and IOS devices. What’s more, because it’s Python, we can blend in world-class machine learning and make a solution which can be applied on a Global scale. Finally, we can do it all with a tiny team, a tiny budget, and a ridiculously tight timeline.&lt;/p&gt;
&lt;p&gt;This is the story of how we are changing the world with Python and Kivy.&lt;/p&gt;
</summary><category term="kivy"></category></entry><entry><title>Exploring Kivy in the classroom - GUI and App development for Python</title><link href="https://pyvideo.org/pycon-au-2016/exploring-kivy-in-the-classroom-gui-and-app-development-for-python.html" rel="alternate"></link><published>2016-08-15T00:00:00+00:00</published><updated>2016-08-15T00:00:00+00:00</updated><author><name>Amanda Hogan</name></author><id>tag:pyvideo.org,2016-08-15:pycon-au-2016/exploring-kivy-in-the-classroom-gui-and-app-development-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Amanda Hogan
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/88/view_talk"&gt;https://2016.pycon-au.org/schedule/88/view_talk&lt;/a&gt;
Graphical User Interface with Python is a tricky business. Come and learn a bit about Kivy and learn about my successes and failures using it with my Senior Software Development students (in NSW) to introduce GUI and App development with Python.
In this workshop you'll be introduced to the Kivy library, the tagging and formatting in kv files, setting up the python classes to support the UI and passing parameters between them.
The workshop is not really suitable for the Python beginner because we need to play around with classes and methods (one of the challenges with using it in the classroom) but will otherwise be a fairly measured pace.&lt;/p&gt;
</summary><category term="kivy"></category><category term="education"></category></entry><entry><title>Server for IoT devices and Mobile devices using Wifi Network,</title><link href="https://pyvideo.org/europython-2016/server-for-iot-devices-and-mobile-devices-using-wifi-network.html" rel="alternate"></link><published>2016-08-05T00:00:00+00:00</published><updated>2016-08-05T00:00:00+00:00</updated><author><name>Joaquin Berenguer</name></author><id>tag:pyvideo.org,2016-08-05:europython-2016/server-for-iot-devices-and-mobile-devices-using-wifi-network.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Joaquin Berenguer - Server for IoT devices and Mobile devices using Wifi Network,
[EuroPython 2016]
[22 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/server-for-iot-devices-and-mobile-devices-using-wifi-network"&gt;https://ep2016.europython.eu//conference/talks/server-for-iot-devices-and-mobile-devices-using-wifi-network&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The server is developed in Python 3.4, using MySQL5.6
The mobile device application is developed using Kivy.
The application in the IoT device is developed in C.
The IoT device is a hardware device using ATSAMD21 from Atmel, and
wifi is made using ESP8266. The security used is sha256, standard in
Python. And the IoT device using the crypto device ATECC508A, that
generate also sha256.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;The server is developed in Python 3.4,  the information is stored in a
MySQL 5.6 database.
All IoT devices, Mobile Devices and Windows or Linux Desktop are
registered in the database.
All type of messages that are understood by every type of device, is
also registered.
A map between which device  could access which device is also stored
in the database.
With this info, any mobile registered could send a message to a
device. The message arrives to the server that resend the message to
the IoT device, receive the answer and resend to the Mobile device.
The Mobile device and the IoT device, could be anywhere, as the server
is public, have the registration of every device connected.
The mobile device application is developed using Kivy.
The application in the IoT device is developed in C.
The IoT device is a hardware device using ATSAMD21 from Atmel, and
wifi is made using ESP8266. The security used is sha256, standard in
Python. And the IoT device using the crypto device ATECC508A, that
generate also sha256.
The server start a thread for every device connected, the
communication between thread is made using queues.
During the presentation, the server is going to be presented, and IoT
device is shown, no demo is going to be made.
A library to manage the database, is used for easy access to the
database, and have database independence, also will be shown.
Prerequites: Python 3.4, sha256, threading, queue, mysql.connector,
relational database.&lt;/p&gt;
</summary><category term="kivy"></category></entry><entry><title>Revitalizing Python Game Development- Packaging, Performance, and Platforms</title><link href="https://pyvideo.org/pycon-us-2016/jacob-kovac-revitalizing-python-game-development-packaging-performance-and-platformsmp4.html" rel="alternate"></link><published>2016-06-20T00:00:00+00:00</published><updated>2016-06-20T00:00:00+00:00</updated><author><name>Jacob Kovac</name></author><id>tag:pyvideo.org,2016-06-20:pycon-us-2016/jacob-kovac-revitalizing-python-game-development-packaging-performance-and-platformsmp4.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Jacob Kovac&lt;/p&gt;
&lt;p&gt;With the advent of mobile platforms, as well as the prevalence of the GPU, Python has fallen almost entirely out of favor with game developers. However, there are some exciting solutions to the major issues being built on top of the Kivy GUI Framework. This talk will cover the recent developments that make it possible to build high quality, cross-platform games in Python.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</summary><category term="kivy"></category></entry><entry><title>Kivy - Creating Desktop and Mobile Apps with Python</title><link href="https://pyvideo.org/pyohio-2013/kivy-creating-desktop-and-mobile-apps-with-pyth.html" rel="alternate"></link><published>2013-07-27T00:00:00+00:00</published><updated>2013-07-27T00:00:00+00:00</updated><author><name>Ben Rousch</name></author><id>tag:pyvideo.org,2013-07-27:pyohio-2013/kivy-creating-desktop-and-mobile-apps-with-pyth.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn to create cross-platform apps with Kivy, a multitouch desktop and
mobile GUI framework for Python.&lt;/p&gt;
</summary><category term="kivy"></category><category term="tutorial"></category></entry><entry><title>Getting Python All Up in Your Mobile with Kivy</title><link href="https://pyvideo.org/pyohio-2014/getting-python-all-up-in-your-mobile-with-kivy.html" rel="alternate"></link><published>2014-07-26T00:00:00+00:00</published><updated>2014-07-26T00:00:00+00:00</updated><author><name>Ben Rousch</name></author><id>tag:pyvideo.org,2014-07-26:pyohio-2014/getting-python-all-up-in-your-mobile-with-kivy.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;You know you can use Python to make apps for desktops and the web, but
did you know you can also use it to make mobile apps? Kivy is a Python
GUI framework for making cross-platform multitouch applications. This
talk will introduce Kivy's mobile dev stack, focusing mainly on Android.
It will be made using a Kivy app on an Android device, and which was
developed entirely on an Android device.&lt;/p&gt;
</summary><category term="kivy"></category><category term="talk"></category></entry><entry><title>Deploy to Android: Adventures of a Hobbyist by Brendan Scott</title><link href="https://pyvideo.org/pycon-au-2014/deploy-to-android-adventures-of-a-hobbyist-by-br.html" rel="alternate"></link><published>2014-08-09T00:00:00+00:00</published><updated>2014-08-09T00:00:00+00:00</updated><author><name>Brendan Scott</name></author><id>tag:pyvideo.org,2014-08-09:pycon-au-2014/deploy-to-android-adventures-of-a-hobbyist-by-br.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing a program in Python targeting the Android environment is well
within your reach with the use of third party kits such as Kivy and the
Pygame Subset for Android.&lt;/p&gt;
&lt;p&gt;Kivy is an &amp;quot;Open source Python library for rapid development of
applications&amp;quot; and comes with tools which allow Kivy based programs to be
packaged as Android apks for deployment to Android devices. In this
session I will give an overview of the Kivy development and deployment
process. I will also draw inspiration from my successes and failures in
developing Python programs with Kivy to highlight Kivy's strengths,
weaknesses and idiosyncracies. Code examples will be kept to a minimum,
with a focus on illustrating the capabilities of the Kivy library and
explaining how its parts work together.&lt;/p&gt;
&lt;p&gt;I will also reserve some time to discuss the Pygame Subset for Android
and how it can be used to deploy Pygame based games to Android devices.&lt;/p&gt;
</summary><category term="kivy"></category></entry><entry><title>Kivy - Spass mit Natural User Interfaces und Python</title><link href="https://pyvideo.org/pycon-de-2011/kivy-spass-mit-natural-user-interfaces-und-pyth.html" rel="alternate"></link><published>2011-10-07T00:00:00+00:00</published><updated>2011-10-07T00:00:00+00:00</updated><author><name>Ernesto Rico-Schmidt</name></author><id>tag:pyvideo.org,2011-10-07:pycon-de-2011/kivy-spass-mit-natural-user-interfaces-und-pyth.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Kivy ist ein Framework zur schnellen Entwicklung von Natural User
Interfaces, das vor kurzen auf EuroPython in Florenz präsentiert wurde.
Kivy verfolgt einen neuen Ansatz was Eingabe-Events und Widgets
betrifft. Es unterstützt Multi-Touch Eingabegeräte und ist dank Python
plattform-unabhängig. Eine Kivy-Applikation läuft auf Linux, MacOS,
Windows und Android, ohne etwas ändern zu müssen.&lt;/p&gt;
</summary><category term="kivy"></category></entry><entry><title>Erfahrungen mit Py4A sowohl mit SL4A als auch Kivy</title><link href="https://pyvideo.org/pycon-de-2012/erfahrungen-mit-py4a-sowohl-mit-sl4a-als-auch.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Nik Klever</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/erfahrungen-mit-py4a-sowohl-mit-sl4a-als-auch.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Es werden die Erfahrungen mit der Scripting Layer for Android API (SL4A)
aus einer Lehrveranstaltung vorgestellt, die Grundlage für das
Python-for-Android (Py4A) Package ist. Die einfache SL4A API erlaubt
Studierenden die Erstellung von einfachem und schnell entwickelten
Python Code für mobile Anwendungen. Einige Eigenschaften der Android GUI
und des darunterliegenden Linux werden mit einfachen Anwendungen,u.a.
einer ortsbezogenen (GPS) Anwendung vorgestellt. Zudem wird auch der
Unterschied zwischen der Device-orientierten und der
Emulator-orientierten Entwicklung und die hierfür notwendigen Tools
angesprochen. Im zweiten Teil wird auf den Ansatz Python-For-Android aus
der Multitouch-Entwicklungsumgebung Kivy eingegangen, deren GUI
plattformübergreifend ausgelegt ist und für alle Platformen (Windows,
Mac, Linux, iOS, Android) auf OpenGL ES 2.0 aufgebaut ist. Der Vortrag
wird weniger in die Details eingehen, als eher die Möglichkeiten
aufzeigen, Python auch auf Smartphones zu nutzen und einzusetzen.&lt;/p&gt;
</summary><category term="android"></category><category term="kivy"></category><category term="py4a"></category><category term="sl4a"></category></entry><entry><title>Kivy und Arduino - Robotersteuerung mit dem Smartphone</title><link href="https://pyvideo.org/pycon-de-2013/kivy-und-arduino-robotersteuerung-mit-dem-smart.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Andreas Bresser</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/kivy-und-arduino-robotersteuerung-mit-dem-smart.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In diesem Vortrag wird gezeigt, wie man ein Robotik-Board (Arduino) über
Bluetooth durch ein Smartphone steuern kann. Hierbei kommt Kivy als
Framework für die Grafische Oberfläche zum Einsatz.&lt;/p&gt;
</summary><category term="arduino"></category><category term="bluetooth"></category><category term="kivy"></category><category term="mobile"></category><category term="robot"></category><category term="smartphone"></category></entry><entry><title>Interfaces tactiles et mobiles avec Kivy</title><link href="https://pyvideo.org/pycon-fr-2013/interfaces-tactiles-et-mobiles-avec-kivy.html" rel="alternate"></link><published>2013-11-30T00:00:00+00:00</published><updated>2013-11-30T00:00:00+00:00</updated><author><name>Gabriel Pettier</name></author><id>tag:pyvideo.org,2013-11-30:pycon-fr-2013/interfaces-tactiles-et-mobiles-avec-kivy.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Kivy est un framework multitouch fonctionnant sur la plupart des
plateformes desktop et mobiles. Entièrement écrit en python, et basé sur
opengl ES, il est facilement extensible et offre de très bonnes
performances, et permet donc de développer rapidement des applications
mobiles (android et iOS).&lt;/p&gt;
&lt;p&gt;Cette présentation de kivy pour le développement mobile présentera:&lt;/p&gt;
&lt;p&gt;Le framework lui même, et son api, via des exemples simples. - le modele
d'évenements et de property - les principeaux widgets - le language KV&lt;/p&gt;
&lt;p&gt;Les outils d'interfaces avec les plateformes mobiles - Pyjnius - Pyobjus&lt;/p&gt;
&lt;p&gt;Les outils de packaging - déploiement sur android/ios -
Python-for-android - Kivy-ios - Buildozer/cloud builder&lt;/p&gt;
</summary><category term="kivy"></category></entry><entry><title>Kivy RAD Python per lo sviluppo di applicazioni mobile e non solo.</title><link href="https://pyvideo.org/pycon-italia-2015/kivy-rad-python-per-lo-sviluppo-di-applicazioni-m.html" rel="alternate"></link><published>2015-06-09T00:00:00+00:00</published><updated>2015-06-09T00:00:00+00:00</updated><author><name>Davide Corio</name></author><id>tag:pyvideo.org,2015-06-09:pycon-italia-2015/kivy-rad-python-per-lo-sviluppo-di-applicazioni-m.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kivy è un RAD Python per lo sviluppo di applicazioni NUI (Natural User
Interface) cross-platform, caratterizzato dalla possibilità di creare
applicazioni per Android ed iOS oltre che per i principali ambienti
desktop. Scopriamo qualcosa di più su Kivy e sulle sue potenzialità.&lt;/p&gt;
</summary><category term="kivy"></category></entry><entry><title>Kivy: Building GUI and Mobile apps with Python</title><link href="https://pyvideo.org/pycon-us-2013/kivy-building-gui-and-mobile-apps-with-python.html" rel="alternate"></link><published>2013-03-15T00:00:00+00:00</published><updated>2013-03-15T00:00:00+00:00</updated><author><name>Mathieu Virbel</name></author><id>tag:pyvideo.org,2013-03-15:pycon-us-2013/kivy-building-gui-and-mobile-apps-with-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will introduce the Kivy project (&lt;a class="reference external" href="http://kivy.org"&gt;http://kivy.org&lt;/a&gt;). Kivy’s
mission is to make building graphical user interfaces on any device fun,
efficient, and pythonic.&lt;/p&gt;
&lt;p&gt;The talk will focus on giving attendees an overview of how they can use
kivy to build exiting UIs and mobile apps.&lt;/p&gt;
</summary><category term="kivy"></category><category term="talk"></category></entry><entry><title>Introduction to game programming with Kivy</title><link href="https://pyvideo.org/pycon-us-2015/introduction-to-game-programming-with-kivy.html" rel="alternate"></link><published>2015-04-12T00:00:00+00:00</published><updated>2015-04-12T00:00:00+00:00</updated><author><name>Richard Jones</name></author><id>tag:pyvideo.org,2015-04-12:pycon-us-2015/introduction-to-game-programming-with-kivy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will walk the attendees through development of a simple
game using Kivy with time left over for some experimentation and
exploration of different types of games.&lt;/p&gt;
</summary><category term="kivy"></category></entry><entry><title>Our journey to Kivy</title><link href="https://pyvideo.org/pycon-za-2013/our-journey-to-kivy.html" rel="alternate"></link><published>2013-10-03T00:00:00+00:00</published><updated>2013-10-03T00:00:00+00:00</updated><author><name>Richard Larkin</name></author><id>tag:pyvideo.org,2013-10-03:pycon-za-2013/our-journey-to-kivy.html</id><summary type="html"></summary><category term="kivy"></category><category term="pyconza"></category><category term="pyconza2013"></category></entry><entry><title>Lightning Talks</title><link href="https://pyvideo.org/pycon-za-2014/lightning-talks-17.html" rel="alternate"></link><published>2014-10-02T00:00:00+00:00</published><updated>2014-10-02T00:00:00+00:00</updated><author><name>Mike Jones</name></author><id>tag:pyvideo.org,2014-10-02:pycon-za-2014/lightning-talks-17.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Lightning Talks are fun, short, five-minute (or less) talks. Ideally
each talk should make a single point, often in a fun, quirky or
over-the-top way.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;ol class="arabic simple"&gt;
&lt;li&gt;Launch to Borderline Zombie in a Year by Mike Jones&lt;/li&gt;
&lt;li&gt;Why you're dumb if you are doing a Python GUI in anything other than
Kivy by Richard Larkin&lt;/li&gt;
&lt;li&gt;PyPy by Adam Jorgensen (slides)&lt;/li&gt;
&lt;li&gt;Sonic Pi by Simon de Haan&lt;/li&gt;
&lt;li&gt;The challenge of mathematical formula markup for African feature
phones by Jonathan Endersby&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="lightning talks"></category><category term="kivy"></category><category term="pyconza"></category><category term="pyconza2014"></category></entry><entry><title>Kivy Showcase: a short exploration of how Kivy is changing the world</title><link href="https://pyvideo.org/pycon-za-2015/kivy-showcase-a-short-exploration-of-how-kivy-is.html" rel="alternate"></link><published>2015-10-02T00:00:00+00:00</published><updated>2015-10-02T00:00:00+00:00</updated><author><name>Richard Larkin</name></author><id>tag:pyvideo.org,2015-10-02:pycon-za-2015/kivy-showcase-a-short-exploration-of-how-kivy-is.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we will look at some real-world success stories using
Kivy. From exhibition-size interactive displays to race car telemetry
systems to robotics, Kivy is being used to deliver many compelling and
innovative applications. We'll use these applications to discuss some of
the features and abilities of the framework that make it such a good
choice for a wide range of uses.&lt;/p&gt;
&lt;p&gt;We'll briefly cover some exciting projects using Kivy, namely:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Project Liatris: a new, open source project using Kivy touch devices
to control robots.&lt;/li&gt;
&lt;li&gt;RaceCapture Pro: A race car telemetry system that uses Kivy
interactive displays both in-car and in post-session analytics
interaction.&lt;/li&gt;
&lt;li&gt;Brain Trainer Plus: A mental dexterity trainer deployed to old age
homes and medical treatment facilities that has been shown effective
in treating dementia and other mental disorders, as well as bringing
a greatly enhanced quality-of-life to the aged and mentally ill.&lt;/li&gt;
&lt;li&gt;CAMI Educational products: The rich feature set and effortless
animation abilities of Kivy make developing compelling, responsive
desktop and mobile interactions easy.&lt;/li&gt;
&lt;li&gt;The Icarus touch and Touch live projects: creating radically new and
exciting interactive musical instruments.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these applications are being delivered using Kivy, a free, open
source, full stack, multi-touch, cross-platform Python/Cython framework
that runs on a watch. I kid you not.&lt;/p&gt;
</summary><category term="kivy"></category><category term="Room 215"></category></entry></feed>