<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_daniel-porteous.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-08-04T00:00:00+00:00</updated><entry><title>No time to idle about: Profiling import time in Python</title><link href="https://pyvideo.org/pycon-au-2019/no-time-to-idle-about-profiling-import-time-in-python.html" rel="alternate"></link><published>2019-08-04T00:00:00+00:00</published><updated>2019-08-04T00:00:00+00:00</updated><author><name>Daniel Porteous</name></author><id>tag:pyvideo.org,2019-08-04:pycon-au-2019/no-time-to-idle-about-profiling-import-time-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.7 added the ability to print import times at startup. But what can we do with that data, and is it enough? In this talk we'll look at how to process import time data, structure it, visualise it, and make concrete choices to improve start up time. Python need not be slow to start!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/no-time-to-idle-about-profiling-import-time-in-python"&gt;https://2019.pycon-au.org/talks/no-time-to-idle-about-profiling-import-time-in-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 14:10:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</summary></entry><entry><title>Context Managers: You Can Write Your Own!</title><link href="https://pyvideo.org/pycon-au-2018/context-managers-you-can-write-your-own.html" rel="alternate"></link><published>2018-08-25T00:00:00+00:00</published><updated>2018-08-25T00:00:00+00:00</updated><author><name>Daniel Porteous</name></author><id>tag:pyvideo.org,2018-08-25:pycon-au-2018/context-managers-you-can-write-your-own.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Did you know context managers go beyond &lt;cite&gt;with open('myfile.txt', 'r') as f&lt;/cite&gt;? In fact, you can even write your own! Context managers are an amazing tool for managing resources safely. They make your code look great, and they're now easier to write than ever thanks to contextlib! Come get contextual!&lt;/p&gt;
</summary></entry></feed>