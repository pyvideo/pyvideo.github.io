<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ryan-wang.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-06-20T00:00:00+00:00</updated><entry><title>If It Weighs the Same as a Duck: Detecting Fraud with Python and Machine Learning</title><link href="https://pyvideo.org/pydata-london-2015/if-it-weighs-the-same-as-a-duck-detecting-fraud-with-python-and-machine-learning.html" rel="alternate"></link><published>2015-06-20T00:00:00+00:00</published><updated>2015-06-20T00:00:00+00:00</updated><author><name>Ryan Wang</name></author><id>tag:pyvideo.org,2015-06-20:pydata-london-2015/if-it-weighs-the-same-as-a-duck-detecting-fraud-with-python-and-machine-learning.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Stripe's system for preventing fraudulent payments utilizes a mix of
machine learning and data analysis. This talk will describe some
technical challenges we’ve faced in building it. In particular, I
will discuss how we’ve used (and occasionally written) various Python
packages as part of a broader ecosystem to address data processing,
feature engineering, and model evaluation problems.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Stripe's system for preventing fraudulent payments utilizes a mix of
machine learning and data analysis. Over the last few years, it has
evolved from a collection of manually assembled ad-hoc rules to an
ensemble of machine- learned models based on historical data from across
the entire Stripe network. This talk will describe some of the technical
challenges we've faced in building and scaling it. In particular I will
discuss how we've used (and occasionally written) various Python
packages as part of a broader ecosystem to address data processing,
feature engineering, and model evaluation problems.&lt;/p&gt;
&lt;p&gt;Some examples:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;We use scikit-learn to train a majority of our models&lt;/li&gt;
&lt;li&gt;We use luigi to manage long-running feature generation jobs and model
training scripts&lt;/li&gt;
&lt;li&gt;We use pandas to debug models and features that generate systematic
false positives&lt;/li&gt;
&lt;li&gt;We wrote topmodel to evaluate model performance on both production
and backtested data&lt;/li&gt;
&lt;/ul&gt;
</summary></entry></feed>