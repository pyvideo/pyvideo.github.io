<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 29 Jul 2012 00:00:00 +0000</lastBuildDate><item><title>Beyond the PIL: alternative solutions for working with images and video.</title><link>https://pyvideo.org/pyohio-2012/beyond-the-pil-alternative-solutions-for-working.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Python Imaging Library is the go-to when you need to deal with
images in Python. But sometimes it falls short. Some formats (PDF) are
write-only. Some implementations (TIFF reading) are slow, or limited
(TIFF writing). And what do you do about video data? This talk explores
some alternative options, looking at strategies for using
GraphicsMagick, ImageMagick, and ffmpeg from Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Costlow</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-29:pyohio-2012/beyond-the-pil-alternative-solutions-for-working.html</guid></item><item><title>Deleting Code Is Hard And You Should Do It</title><link>https://pyvideo.org/pyohio-2012/deleting-code-is-hard-and-you-should-do-it.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Adding code is easy. Everyone gets their start by cut-n-pasting some
else's code. But every line of code you don't need is a burden. Delete
that s++t.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jack Diederich</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-29:pyohio-2012/deleting-code-is-hard-and-you-should-do-it.html</guid></item><item><title>django-cms: Friends don’t let friends use Drupal.</title><link>https://pyvideo.org/pyohio-2012/django-cms-friends-dont-let-friends-use-drupal.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;There are literally thousands of CMS options out there, so why not
choose one that’s built with Python and on the amazing Django web
framework. In this talk we’ll discuss the basics of django-cms and how
to use it to build a great CMS solution for your clients. We’ll go over
templates, menus, settings, user permissions, asset management, plugins
and extending the CMS with your own Django apps.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Schoen</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-29:pyohio-2012/django-cms-friends-dont-let-friends-use-drupal.html</guid></item><item><title>Effective Django</title><link>https://pyvideo.org/pyohio-2012/effective-django.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Django is a popular, powerful web framework for Python. It has lots of
&amp;quot;batteries&amp;quot; included, and makes it easy to get up and going. But all of
the power means you can write low quality code that still seems to work.
Effective Django development means building applications that are
testable, maintainable, and scalable. This talk-torial will cover the
skills needed to effective use Django.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan Yergler</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-29:pyohio-2012/effective-django.html</guid></item><item><title>Exploring Python Code Objects</title><link>https://pyvideo.org/pyohio-2012/exploring-python-code-objects.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python is an interpreted language, right? Wrong! In this talk, dive deep
into Python bytecode, and learn what actually happens in everyone's
favorite Python program, 'print &amp;quot;Hello world&amp;quot;'. Learn to use the
compile() and exec statement, understand what your Python code is doing
with the dis and compiler modules, and discover new ways to explore and
enjoy Python at a low level.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Crosta</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-29:pyohio-2012/exploring-python-code-objects.html</guid></item><item><title>Fun Observational Science with Python and a Webcam</title><link>https://pyvideo.org/pyohio-2012/fun-observational-science-with-python-and-a-webca.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk is a &amp;quot;how I did it&amp;quot; talk about how I took an idea, a web cam,
Python, Django, and the Python Imaging Library and created art, explored
science, and illustrated concepts that our ancestors knew by watching
the sky but we have lost.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Floehr</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-29:pyohio-2012/fun-observational-science-with-python-and-a-webca.html</guid></item><item><title>Learn Python TDD Style with Python Koans</title><link>https://pyvideo.org/pyohio-2012/learn-python-tdd-style-with-python-koans.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This is a hands-on workshop for learning Python, mixed into a Test
Driven Development setting.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Malcolm</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-29:pyohio-2012/learn-python-tdd-style-with-python-koans.html</guid></item><item><title>Lightning Talks</title><link>https://pyvideo.org/pyohio-2012/lightning-talks-0-1.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-29:pyohio-2012/lightning-talks-0-1.html</guid><category>lightning talks</category></item><item><title>Python Design Patterns 1</title><link>https://pyvideo.org/pyohio-2012/python-design-patterns-1.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Python community has learned a lot about how to use our language
since we started back in the 1990s, and this talk will use simple
one-slide programs to illustrate the crucial refactorings that can help
make a large real-life application far more testable and maintainable
while making its code easier to re-use. This will not be a re-hash of
Gang-of-Four refactorings, but specific to Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-29:pyohio-2012/python-design-patterns-1.html</guid></item><item><title>Python for Educators</title><link>https://pyvideo.org/pyohio-2012/python-for-educators.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;ol class="arabic simple"&gt;
&lt;li&gt;Why Python is a good first language for teaching.&lt;/li&gt;
&lt;li&gt;How Python is readily adaptable to project based learning.
Demonstration of some simple programs to motivate students in a
programming language program (1) simple chatbot, (2) simple web
search engine, (3) using Python with Finch robot.&lt;/li&gt;
&lt;li&gt;How Python is readily extensible, for example creating games with
Python&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Rehner</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-29:pyohio-2012/python-for-educators.html</guid></item><item><title>Python for Humans</title><link>https://pyvideo.org/pyohio-2012/python-for-humans.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Unfortunately, solving simple problems with Python isn't always 'import
antigravity'. Best practices are sometimes far from obvious. This talk
will analyze the high barriers of entry that clutter the Python
landscape. We'll discuss ways to make Python more accessible for
newcomers and less of a headache for seasoned veterans.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kenneth Reitz</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-29:pyohio-2012/python-for-humans.html</guid></item><item><title>An Introduction to the ZODB</title><link>https://pyvideo.org/pyohio-2012/an-introduction-to-the-zodb.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Zope Object Database is an object database that allows you to store
and retrieve your Python objects directly, without an intermediary
layer. It's fully ACID-compliant and features multiple backends. This
talk will familiarize the audience with ZODB programming and it's use
cases.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nolan Brubaker</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/an-introduction-to-the-zodb.html</guid></item><item><title>An Introduction to Tkinter</title><link>https://pyvideo.org/pyohio-2012/an-introduction-to-tkinter.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Python standard library provides a cross-platform toolkit for
building graphical user interfaces using Tcl/Tk. This toolkit, however,
is often avoided to being somewhat ugly on many popular platforms. This
talk will provide an introduction to working with modern Tkinter on
Python 2.7 and 3.x, focusing on building not-so-ugly, cross-platform
desktop applications using the toolkit.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Armstrong</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/an-introduction-to-tkinter.html</guid></item><item><title>Coding for everyone</title><link>https://pyvideo.org/pyohio-2012/coding-for-everyone.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Programming is hard, let's keep it simple. This is a reminder of some
common sense things we can do better, as well as observations and
examples of where we can improve our code for the next guy, even if the
next guy is you.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin W. Smith</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/coding-for-everyone.html</guid></item><item><title>Develop Games with Panda3D and Python</title><link>https://pyvideo.org/pyohio-2012/develop-games-with-panda3d-and-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In the brief amount of time available, this tutorial will take a simple
game concept and implement a multi-player game. Game development with
Panda3D will consist of writing a Python program that controls the
Panda3D library. Computer lab projects will provide hands-on experience
investigating the various components of a network game.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Carswell</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/develop-games-with-panda3d-and-python.html</guid></item><item><title>Devops or: How I Learned to Stop Worrying and Love the Ops Team</title><link>https://pyvideo.org/pyohio-2012/devops-or-how-i-learned-to-stop-worrying-and-lov.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Communication and a few engineering techniques can help greatly to ease
the burden on an operations team and make applications easier to deploy,
maintain and scale. Given from a developer's perspective this talk
focuses on some engineering techniques that will help to make
applications more robust and more operations friendly.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Crute</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/devops-or-how-i-learned-to-stop-worrying-and-lov.html</guid></item><item><title>Does Python have the secret sauce to be web scale?</title><link>https://pyvideo.org/pyohio-2012/does-python-have-the-secret-sauce-to-be-web-scale.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this talk we will understand async, evented, non-blocking style of
programming. We will look some of the popular libraries and web
frameworks that are built around this style.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pradeep Gowda</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/does-python-have-the-secret-sauce-to-be-web-scale.html</guid></item><item><title>Drive-in Double-header: Datetimes and Log analysis</title><link>https://pyvideo.org/pyohio-2012/drive-in-double-header-datetimes-and-log-analysi.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;What you need to know about datetimes: time, datetime, and calendar from
the standard library are a bit messy. Find out what to use where and how
(particularly when you have users in many timezones), and what extra
modules you might want to look into.&lt;/p&gt;
&lt;p&gt;Log analysis for web applications: Use iPython, matplotlib, and some
custom functions to slice, dice, and visualise your app through its
logs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Taavi Burns</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/drive-in-double-header-datetimes-and-log-analysi.html</guid></item><item><title>Family Project: Three Keys and a Boss</title><link>https://pyvideo.org/pyohio-2012/family-project-three-keys-and-a-boss.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;One family's project experience programming with Python. From conception
through programming through execution.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katina Mooneyham</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/family-project-three-keys-and-a-boss.html</guid></item><item><title>Leo: A paradigm shifting IDE</title><link>https://pyvideo.org/pyohio-2012/leo-a-paradigm-shifting-ide.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Leo is a pure python, open source outliner, often used as an IDE. As a
project manager, it handles all your files, no matter what language(s)
you're using. Uniquely, it lets you to organize your projects below the
file level, (elsewhere only doable informally with section comments).
Using outlines supports thinking &amp;amp; organizing, allowing big/little
picture focus shifts. Its great for code study.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Fetherston</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/leo-a-paradigm-shifting-ide.html</guid></item><item><title>Python 101/102</title><link>https://pyvideo.org/pyohio-2012/python-101102.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Are you completely new to Python? Have you been wanting to learn Python
but haven't had the time? Well give you a crash course on the basics of
Python. We'll start off with why Python is unique compared to other
languages and then quickly start into basic syntax, data types, and the
Python philosophy for coding.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Yanovich</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/python-101102.html</guid></item><item><title>Python Testing Fundamentals</title><link>https://pyvideo.org/pyohio-2012/python-testing-fundamentals.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This tutorial imparts the basics of testing Python code using assert,
unittest, and doctest.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Calloway</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/python-testing-fundamentals.html</guid></item><item><title>Really good logging</title><link>https://pyvideo.org/pyohio-2012/really-good-logging.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Really good logging means when something goes wrong in the middle of the
night, you know about it, and you have enough information to fix it even
if the problem never repeats. At the same time, really good logging
doesn't raise false alarms and doesn't require finding needles in a
haystack. Logging is important, but we usually do it wrong. Let's stop
doing that.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">W. Matthew Wilson</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/really-good-logging.html</guid></item><item><title>Starting your project right: setup and automation for all</title><link>https://pyvideo.org/pyohio-2012/starting-your-project-right-setup-and-automation.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Everyone starts hacking on their little Python library or application,
with one goal in mind: Hacking Code! However, you need to do a little
work to prepare your project for success. We'll discuss project layout,
automation with Make, and 3rd party services to help your project appear
more organized, accessible, and dare I say, professional!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rick Harding</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/starting-your-project-right-setup-and-automation.html</guid></item><item><title>Using Python on Android</title><link>https://pyvideo.org/pyohio-2012/using-python-on-android.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Join Ben Rousch as he takes you a journey of exploration through the
many ways of using Python to program on and for Android.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Rousch</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/using-python-on-android.html</guid></item><item><title>Video Production Strategies Using Image Sequences</title><link>https://pyvideo.org/pyohio-2012/video-production-strategies-using-image-sequences.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Major production houses sometimes work with digital video not in
non-linear editor format, but as large collections of image sequences in
folders. Using Python to produce video this way can be very simple and
natural once you starting thinking in image sequences. Using a series of
small scripts, I'll demonstrate using PyCairo or PySVG as well as
ImageMagick and FFMPEG to make 1080P HD video.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Winningham</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/video-production-strategies-using-image-sequences.html</guid></item><item><title>You Used Python for What?!</title><link>https://pyvideo.org/pyohio-2012/you-used-python-for-what.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Taking a break from his usual web development, James will give an
overview of some of the more unusual things he's done with Python: from
implementing other programming languages to analyzing piano
performances; from emulating an Apple ][ to the beginnings of an
operating system written in Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Tauber</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-28:pyohio-2012/you-used-python-for-what.html</guid></item></channel></rss>