<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 24 Aug 2019 00:00:00 +0000</lastBuildDate><item><title>I'm So Meta Even This Acronym...</title><link>https://pyvideo.org/kiwi-pycon-2019/im-so-meta-even-this-acronym.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever wanted to better understand metaclasses?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Curtis Maloney</dc:creator><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/im-so-meta-even-this-acronym.html</guid><category>metaclass</category><category>metaclasses</category></item><item><title>Mi primera metaclase: un ejemplo práctico</title><link>https://pyvideo.org/pyday-galicia-2016/mi-primera-metaclase-un-ejemplo-practico.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Aproximación práctica y simplificada al porqué son necesarias y como se construyen las metaclases.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miguel González Álvarez</dc:creator><pubDate>Sat, 17 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-17:pyday-galicia-2016/mi-primera-metaclase-un-ejemplo-practico.html</guid><category>metaclasses</category></item><item><title>What Is and What Can Be: An Exploration from `type` to Metaclasses</title><link>https://pyvideo.org/pycon-us-2016/dustin-ingram-what-is-and-what-can-be-an-exploration-from-type-to-metaclasses-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dustin Ingram&lt;/p&gt;
&lt;p&gt;Most of us use &lt;cite&gt;type&lt;/cite&gt; every day, but few can say they know it well. This talk explores &lt;cite&gt;type&lt;/cite&gt; and along the way, reveals how it relates to &lt;cite&gt;object&lt;/cite&gt;, &lt;cite&gt;class&lt;/cite&gt; and more, eventually arriving at deeper understanding of metaclasses in Python.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/dustin-ingram-what-is-and-what-can-be-an-exploration-from-type-to-metaclasses-pycon-2016.html</guid><category>metaclasses</category><category>metaprogramming</category><category>types</category></item><item><title>Praktische Anwendung von Metaklassen</title><link>https://pyvideo.org/pycon-de-2012/praktische-anwendung-von-metaklassen.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Metaklassen (metaclasses) in Python werden oft als exotische
Spracheigenschaft betrachtet. Der Vortrag zeigt anhand konkreter
Beispiele, wie sich Metaklassen in realen Projekten zum Debuggen und zum
Code vereinfachen einsetzen lassen.&lt;/p&gt;
&lt;div class="section" id="praktische-anwendungen-von-metaklassen"&gt;
&lt;h4&gt;Praktische Anwendungen von Metaklassen&lt;/h4&gt;
&lt;p&gt;Python besitzt mit den Metaklassen ein sehr mächtiges Werkzeug, um
orthogonale Eigenschaften eines Programms zu Implementieren. Das
Stichwort dazu lautet &amp;quot;aspektorientiertes Programmieren&amp;quot;. Leider werden
Metaklassen aber oft als komplex und schwierig angesehen.&lt;/p&gt;
&lt;p&gt;Der Vortrag zeigt an einem konkreten Beispiel, wie sich durch die
Verwendung von Metaklassen Programmentwicklung vereinfachen kann.
Konkret wird die Implementation eines einfachen Debug- und Trace
Frameworks vorgestellt.&lt;/p&gt;
&lt;p&gt;Dieses erlaubt das nachträgliche instrumentieren von Klassen-Methoden,
um eine selektive Ablaufverfolgung von Methodenaufrufen auf Objekten
ermöglicht. Dies wird erreicht, ohne das diese Debug Aufrufe im normalen
Quellcode erscheinen oder bei nicht Benutzung Performance Auswirkungen
haben.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mirko Dziadzka</dc:creator><pubDate>Tue, 30 Oct 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-10-30:pycon-de-2012/praktische-anwendung-von-metaklassen.html</guid><category>debugging</category><category>metaclasses</category></item></channel></rss>