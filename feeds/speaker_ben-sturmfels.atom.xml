<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ben-sturmfels.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-09-11T00:00:00+00:00</updated><entry><title>Preventing Cat-astrophes with GNU MediaGoblin</title><link href="https://pyvideo.org/kiwi-pycon-2016/preventing-cat-astrophes-with-gnu-mediagoblin.html" rel="alternate"></link><published>2016-09-11T00:00:00+00:00</published><updated>2016-09-11T00:00:00+00:00</updated><author><name>Ben Sturmfels</name></author><id>tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/preventing-cat-astrophes-with-gnu-mediagoblin.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ben Sturmfels
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/124/"&gt;https://kiwi.pycon.org/schedule/presentation/124/&lt;/a&gt;
What would happen to all the cat videos if YouTube were to disappear? It would be a cat-atstrophe! GNU MediaGoblin is Python-based media publishing system for artists — an alternative to centralised, censored and surveilled systems like Flickr, YouTube and SoundCloud. MediaGoblin gives people privacy, choice and control of their own media, something we need now more than ever.&lt;/p&gt;
</summary></entry><entry><title>Preventing Cat-astrophes with GNU MediaGoblin</title><link href="https://pyvideo.org/pycon-au-2016/preventing-cat-astrophes-with-gnu-mediagoblin.html" rel="alternate"></link><published>2016-08-15T00:00:00+00:00</published><updated>2016-08-15T00:00:00+00:00</updated><author><name>Ben Sturmfels</name></author><id>tag:pyvideo.org,2016-08-15:pycon-au-2016/preventing-cat-astrophes-with-gnu-mediagoblin.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ben Sturmfels
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/138/view_talk"&gt;https://2016.pycon-au.org/schedule/138/view_talk&lt;/a&gt;
What would happen to all the cat videos if YouTube were to disappear? It would be a cat-atstrophe!&lt;/p&gt;
&lt;p&gt;GNU MediaGoblin is Python-based media publishing system for artists — an alternative to centralised, censored and surveilled systems like Flickr, YouTube and SoundCloud. MediaGoblin gives people privacy, choice and control of their own media, something we need now more than ever.&lt;/p&gt;
&lt;p&gt;This talk will explore the architecture of GNU MediaGoblin, the technical challenges in implementing fully decentralised sharing and commenting through PyPump and the Pump.io API as well as work to lower the Python deployment barrier to empower normal people to escape the centralised systems (&amp;quot;userops&amp;quot;).&lt;/p&gt;
</summary></entry><entry><title>Transitioning from PHP to Django on the sly</title><link href="https://pyvideo.org/pycon-au-2013/transitioning-from-php-to-django-on-the-sly.html" rel="alternate"></link><published>2013-07-06T00:00:00+00:00</published><updated>2013-07-06T00:00:00+00:00</updated><author><name>Ben Sturmfels</name></author><id>tag:pyvideo.org,2013-07-06:pycon-au-2013/transitioning-from-php-to-django-on-the-sly.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;You know that Python and Django is the way forward for your client, but
with a mountain of legacy PHP code, where do you start?&lt;/p&gt;
&lt;p&gt;Ben spent the last 3 years working with a thriving charity organisation
to migrate their large PHP system to Django. He'd like to share some
survival strategies.&lt;/p&gt;
&lt;p&gt;This talk covers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;explaining the transition to your client&lt;/li&gt;
&lt;li&gt;first steps and initial experiments&lt;/li&gt;
&lt;li&gt;running PHP and Django in parallel&lt;/li&gt;
&lt;li&gt;why incremental migration beats the &amp;quot;big switch&amp;quot;&lt;/li&gt;
&lt;li&gt;sharing databases and authentication&lt;/li&gt;
&lt;li&gt;making the experience seamless for visitors and staff&lt;/li&gt;
&lt;li&gt;strategies for converting the code&lt;/li&gt;
&lt;/ul&gt;
</summary></entry></feed>