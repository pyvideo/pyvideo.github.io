<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_steve-barnes.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-07-26T00:00:00+00:00</updated><entry><title>Why develop a CLI (Command Line Interface) first?</title><link href="https://pyvideo.org/europython-2018/why-develop-a-cli-command-line-interface-first.html" rel="alternate"></link><published>2018-07-26T00:00:00+00:00</published><updated>2018-07-26T00:00:00+00:00</updated><author><name>Steve Barnes</name></author><id>tag:pyvideo.org,2018-07-26:europython-2018/why-develop-a-cli-command-line-interface-first.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the core concepts of Application Development, (not just in
python), is the separation between the Business Logic and the User
Interface. However there is a strong temptation to start with the user
interface and add the business logic to it some methodologies emphasize
this with the process of prototyping the (G)UI first. The danger is that
your business logic code can get too entangled with the UI and a change
of platform or framework becomes almost impossible.&lt;/p&gt;
&lt;p&gt;This presentation will show how to maintain a clear separation between
the Business Logic and the User Interface by starting with a command
line interface using argparse and growing a GUI on top.&lt;/p&gt;
&lt;p&gt;We will cover: - Why maintain the seperation - Using argparse - Adding a
GUI layer with wxPython - Automating the GUI generation - Adding a web
interface - Testing advantages of this approach - Scripting advantages -
Some packaging models.&lt;/p&gt;
&lt;p&gt;Slides and Samples all uploaded to
&lt;a class="reference external" href="https://github.com/GadgetSteve/EP2018_Talk"&gt;https://github.com/GadgetSteve/EP2018_Talk&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>