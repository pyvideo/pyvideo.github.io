<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_rafael-darder.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-27T00:00:00+00:00</updated><entry><title>Refactoring en Python</title><link href="https://pyvideo.org/pyday-rosario-2018/refactoring-en-python.html" rel="alternate"></link><published>2018-10-27T00:00:00+00:00</published><updated>2018-10-27T00:00:00+00:00</updated><author><name>Rafael Darder</name></author><id>tag:pyvideo.org,2018-10-27:pyday-rosario-2018/refactoring-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Una parte importante del material para aprender programación se centra en escribir programas desde cero. Cuando un software es útil, entra en una etapa nueva de su ciclo de vida, el de la evolución incremental. Los requerimientos cambian, y reescribir el software rara vez es una buena solución. Escribir una nueva funcionalidad y a la vez modificar el diseño del código existente es más complejo a medida que el software crece. Por tanto resulta útil partir ese proceso en dos. Refactoring es el conjunto de técnicas para poder adaptar el diseño de un software sin cambiar su funcionalidad, con miras a simplificar la segunda parte de este proceso.&lt;/p&gt;
</summary></entry></feed>