<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_lakshman-prasad.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-07-06T00:00:00+00:00</updated><entry><title>Pythonic iterators and generators</title><link href="https://pyvideo.org/pycon-au-2013/pythonic-iterators-and-generators.html" rel="alternate"></link><published>2013-07-06T00:00:00+00:00</published><updated>2013-07-06T00:00:00+00:00</updated><author><name>Lakshman  Prasad</name></author><id>tag:pyvideo.org,2013-07-06:pycon-au-2013/pythonic-iterators-and-generators.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;One of the first things you learn in programming is to apply a series of
instructions to a set of elements.&lt;/p&gt;
&lt;p&gt;Given it's ubiquitous nature and given the culture of python to simplify
such tasks, decades of development and thought has gone into making this
as convenient as possible for all possible use cases. While the
functional ways of iterating like map, reduce and filter exist,
list-comprehensions and the functions in itertools module enable several
pythonic imperative alternatives that cover a gamut of possible use
cases.&lt;/p&gt;
&lt;p&gt;This talk is an interactive exercise using iPython notebook to cover
many of these use cases to enable better iteration including writing of
your own iterators and generators and when you would want to do such a
thing.&lt;/p&gt;
</summary></entry><entry><title>Customizing the Django Admin: The How and the Why</title><link href="https://pyvideo.org/pycon-us-2013/customizing-the-django-admin-the-how-and-the-why.html" rel="alternate"></link><published>2013-03-16T00:00:00+00:00</published><updated>2013-03-16T00:00:00+00:00</updated><author><name>Lakshman Prasad</name></author><id>tag:pyvideo.org,2013-03-16:pycon-us-2013/customizing-the-django-admin-the-how-and-the-why.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The abstraction and the flexibility the Django admin offers is matched
by few software, even today after half a decade of it's introduction.
The speaker has customized it in many ways over the years. This talk
reminisces over how supposedly large real world problems could be solved
with relatively less development by leveraging the power of django admin
and using a few techniques.&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>