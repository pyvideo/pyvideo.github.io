<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - PyTexas 2022</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pytexas-2022.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-06-21T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Automating Build Tasks With Build-magic</title><link href="https://pyvideo.org/pytexas-2022/automating-build-tasks-with-build-magic.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Chris Morrow</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/automating-build-tasks-with-build-magic.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Developers like writing software but loath building software. Amongst platform specific scripts, Makefiles, and CI pipelines, there’s no shortage of fragile, frustrating processes for building a software project. Build-magic aims to simplify builds with a declarative, repeatable tool for developers.&lt;/p&gt;
&lt;p&gt;Speaker: Chris Morrow
Chris Morrow is a Staff …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Developers like writing software but loath building software. Amongst platform specific scripts, Makefiles, and CI pipelines, there’s no shortage of fragile, frustrating processes for building a software project. Build-magic aims to simplify builds with a declarative, repeatable tool for developers.&lt;/p&gt;
&lt;p&gt;Speaker: Chris Morrow
Chris Morrow is a Staff Software Developer at Q2 in Austin Texas, and previously worked at Silicon Labs and Samsung. He is a Python, Go, and Elixir developer with experience in Cybersecurity, Web Development, Statistics, Data Engineering, and Data Science. Chris is also involved in mentoring and teaching programming with organizations such as Breakthrough Central Texas and Code2College. In 2018, Chris was selected as a member of the Leadership Austin Emerge class. He also participates in Austin Young Chamber and is a supporting member of the Python Software Foundation. Chris has given previous talks on SQLAlchemy at The Austin Python Meetup and An Evening of Python Coding, as well as a talk on his open source project sci-analysis at PyTexas 2019.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>Awesome Web Testing with Playwright</title><link href="https://pyvideo.org/pytexas-2022/awesome-web-testing-with-playwright.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Andrew Knight</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/awesome-web-testing-with-playwright.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everybody gets frustrated when web apps are broken, but testing them thoroughly doesn't need to be a chore. Playwright, a new open-source browser automation tool from Microsoft, makes testing web apps fun! Playwright offers a slew of nifty features like automatic waiting, mobile emulation, and network interception. Plus, with …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everybody gets frustrated when web apps are broken, but testing them thoroughly doesn't need to be a chore. Playwright, a new open-source browser automation tool from Microsoft, makes testing web apps fun! Playwright offers a slew of nifty features like automatic waiting, mobile emulation, and network interception. Plus, with isolated browser contexts, Playwright tests can set up &lt;em&gt;much&lt;/em&gt; faster than traditional Web UI tests.&lt;/p&gt;
&lt;p&gt;Speaker: Andrew Knight
Andrew Knight is the Automation Panda and also a Developer Advocate at Applitools. He strives to help others in solving problems in software development, testing, and quality. Over the past decade, he has designed and built robust test automation projects from the ground up that can run thousands of tests continuously. He is the author of the upcoming book “The Way To Test Software” from Manning Publications, and he is also the lead developer for Boa Constrictor, the .NET Screenplay Pattern. Read his tech blog at AutomationPanda.com, and follow him on Twitter at &amp;#64;AutomationPanda.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>Choosing the Right Data Types</title><link href="https://pyvideo.org/pytexas-2022/choosing-the-right-data-types.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Josh Schneider</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/choosing-the-right-data-types.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So often, in Python, I’ve run up against the question of what type of data structure to use to express something. Does this need a tuple, a dict, a namedtuple, a dataclass, or something else? How do you select what to use, and what are the pros and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So often, in Python, I’ve run up against the question of what type of data structure to use to express something. Does this need a tuple, a dict, a namedtuple, a dataclass, or something else? How do you select what to use, and what are the pros and cons? Let’s explore the options!&lt;/p&gt;
&lt;p&gt;Speaker: Josh Schneider
Josh is a test automation architect and senior developer. He's trained several junior developers, written millions of lines of code, maintained and supported that code, and pushed for process improvements around development standards, code review, design, and support. He spend a lot of time thinking about how to do things “right”, and how to teach other people. Outside of work, he's a dad of 2 nerdy kids, a trained improv comedian, movie lover, and drinker of beer and coffee.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>Coding and the Mozart Effect</title><link href="https://pyvideo.org/pytexas-2022/coding-and-the-mozart-effect.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>PJ Hagerty</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/coding-and-the-mozart-effect.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most developers code to music...some are even musicians themselves. Is it possible to streamline workflow by adjusting how we listen to music and what music we listen to? Studies have shown that exposure to certain kinds of music can help to develop cognitive strength and improve performance of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most developers code to music...some are even musicians themselves. Is it possible to streamline workflow by adjusting how we listen to music and what music we listen to? Studies have shown that exposure to certain kinds of music can help to develop cognitive strength and improve performance of tasks. This talk will explore those studies and show what sort of things can be done to improve the listeners environment and help people to create better code.&lt;/p&gt;
&lt;p&gt;Speaker: PJ Hagerty
PJ is the founder of DevRelate.io and a board member of Open Sourcing Mental Illness (OSMIhelp.org). He is an organizer of DevOps Days Buffalo, CodeDaze, and ElixirDaze. PJ is a developer, writer, speaker, musician, and Community Advocate. He is known to travel the world speaking about programming and the way people think and interact. He is also known for wearing hats.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>Event-Driven Microservices with Flask and Apache Kafka</title><link href="https://pyvideo.org/pytexas-2022/event-driven-microservices-with-flask-and-apache-kafka.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Dave Klein</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/event-driven-microservices-with-flask-and-apache-kafka.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Implementing complex systems with microservices can be a great decision, but if we’re not careful we can end up with a distributed monolith. Let’s see how to avoid that by building lightweight, loosely coupled microservices with the Flask framework and Apache Kafka.&lt;/p&gt;
&lt;p&gt;Speaker: Dave Klein
After 28 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Implementing complex systems with microservices can be a great decision, but if we’re not careful we can end up with a distributed monolith. Let’s see how to avoid that by building lightweight, loosely coupled microservices with the Flask framework and Apache Kafka.&lt;/p&gt;
&lt;p&gt;Speaker: Dave Klein
After 28 years as a developer, architect, project manager (recovered), author, trainer, conference organizer, and homeschooling dad, Dave Klein landed his dream job as a developer advocate at Confluent. Dave is marveling in and eager to help others explore the amazing world of event streaming with Apache Kafka.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>Everyday Design Patterns: Observer Pattern</title><link href="https://pyvideo.org/pytexas-2022/everyday-design-patterns-observer-pattern.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Aly Sivji</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/everyday-design-patterns-observer-pattern.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Observer Pattern enables us to design event-driven systems using loosely coupled components. In this talk, we will learn how, when, and why to use this pattern; we will explore how popular PyPI packages use the pattern; and, we will design a decorator-based Observer to process GitHub events.&lt;/p&gt;
&lt;p&gt;Speaker …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Observer Pattern enables us to design event-driven systems using loosely coupled components. In this talk, we will learn how, when, and why to use this pattern; we will explore how popular PyPI packages use the pattern; and, we will design a decorator-based Observer to process GitHub events.&lt;/p&gt;
&lt;p&gt;Speaker: Aly Sivji
Aly Sivji is a Canadian ex-pat living in Chicago. By day, he works as a Team Lead at Narrative Science building a platform that generates narrative text using client data. By night, he co-organizes the Chicago Python Users Group (ChiPy). Aly is an active participant in the ChiPy Mentorship Program and he loves helping intermediate developers become experts. Outside of Python, Aly enjoys cycling, reading, and rewatching old TV shows.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>Great Snake Variation: Programming with python-chess</title><link href="https://pyvideo.org/pytexas-2022/great-snake-variation-programming-with-python-chess.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Great Snake Variation: Programming with python-chess</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/great-snake-variation-programming-with-python-chess.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since The Queen’s Gambit hit Netflix, the number of people playing chess online has skyrocketed. Chances are, some of them are Pythonistas! We’ll dive into python-chess: a library for representing the chess board. Along the way, I’ll show how the library also teaches useful programming concepts …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since The Queen’s Gambit hit Netflix, the number of people playing chess online has skyrocketed. Chances are, some of them are Pythonistas! We’ll dive into python-chess: a library for representing the chess board. Along the way, I’ll show how the library also teaches useful programming concepts.&lt;/p&gt;
&lt;p&gt;Speaker: William Horton
William Horton recently returned to chess during the pandemic, after a 15 year hiatus. On certain weekends he can be found in the local chess club trying his best, but getting beaten by elementary schoolers. By day he works as a Senior Machine Learning Engineer at Included Health. He is responsible for building and maintaining the Python infrastructure used by data scientists to create models from medical claims data.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>Keynote - Python Community Growth</title><link href="https://pyvideo.org/pytexas-2022/keynote-python-community-growth.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Kojo Idrissa</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/keynote-python-community-growth.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kojo Idrissa was an accountant who got an MBA and taught at university in two different countries. He's now a parent, software engineer, intercontinental keynote speaker, DjangoCon US organizer and the DEFNA North American Ambassador #NorAmGT. He's spoken at tech conferences about software engineering practices, spreadsheets, contributing to tech …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kojo Idrissa was an accountant who got an MBA and taught at university in two different countries. He's now a parent, software engineer, intercontinental keynote speaker, DjangoCon US organizer and the DEFNA North American Ambassador #NorAmGT. He's spoken at tech conferences about software engineering practices, spreadsheets, contributing to tech communities, Dungeons &amp;amp; Dragons, inclusion, and privilege.&lt;/p&gt;
&lt;p&gt;He’s made a few small FLOSS contributions to CPython &amp;amp; Jinja, as well as Drupal (a LONG time ago). He’s also made contributions to Codecombat, where he helped others make their first OSS contributions, and PyVideo, where he updated the Tags section of the Contribution guide for their Data repo.&lt;/p&gt;
&lt;p&gt;He is quite proud to have been awarded the 2018 Malcolm Tredinnick Memorial Prize and continues to try to be worthy of it. You can find him online at &lt;a class="reference external" href="http://kojoidrissa.com/"&gt;http://kojoidrissa.com/&lt;/a&gt; or as &amp;#64;KojoIdrissa on Twitter. His Twitter handle makes NO sense because his account was hacked on 2019-12-09. While he REMAINS bitter about this, KPop and Overwatch help him feel better.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>Managing the Test Data Nightmare</title><link href="https://pyvideo.org/pytexas-2022/managing-the-test-data-nightmare.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Andrew Knight</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/managing-the-test-data-nightmare.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Good test data can be a nightmare to manage! It can make-or-break testing efforts. Should we preload our databases? Should we use dynamically-generated dummy data? What about collisions? Let’s cover practical strategies for handling data both in our products and in our test cases.&lt;/p&gt;
&lt;p&gt;Speaker: Andrew Knight
Andrew …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Good test data can be a nightmare to manage! It can make-or-break testing efforts. Should we preload our databases? Should we use dynamically-generated dummy data? What about collisions? Let’s cover practical strategies for handling data both in our products and in our test cases.&lt;/p&gt;
&lt;p&gt;Speaker: Andrew Knight
Andrew Knight is the Automation Panda and also a Developer Advocate at Applitools. He strives to help others in solving problems in software development, testing, and quality. Over the past decade, he has designed and built robust test automation projects from the ground up that can run thousands of tests continuously. He is the author of the upcoming book “The Way To Test Software” from Manning Publications, and he is also the lead developer for Boa Constrictor, the .NET Screenplay Pattern. Read his tech blog at AutomationPanda.com, and follow him on Twitter at &amp;#64;AutomationPanda.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>Minimum Viable Security for Python Applications</title><link href="https://pyvideo.org/pytexas-2022/minimum-viable-security-for-python-applications.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>David Melamed</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/minimum-viable-security-for-python-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python remains a very popular programming and scripting language in the DevOps ecosystem for building CI/CD pipelines. In the same way we think about how we design and build our Python applications, we need to design, build and automate security into our applications from the ground floor.&lt;/p&gt;
&lt;p&gt;Speaker …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python remains a very popular programming and scripting language in the DevOps ecosystem for building CI/CD pipelines. In the same way we think about how we design and build our Python applications, we need to design, build and automate security into our applications from the ground floor.&lt;/p&gt;
&lt;p&gt;Speaker: David Melamed
Currently CTO and Co-Founder of Jit, the Continuous Security platform for Developers. David has a PhD in Bioinformatics and for the past 20 years has been a full-stack developer, CTO &amp;amp; technical evangelist, mostly in the cloud, and specifically in cloud security, working for leading organizations such as MyHeritage, CloudLock (acquired by Cisco) and leading the ‘advanced development team’ for the CTO of Cisco’s cloud security.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>Optimizing Code Performance for Python Internals</title><link href="https://pyvideo.org/pytexas-2022/optimizing-code-performance-for-python-internals.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Yonatan Goldschmidt</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/optimizing-code-performance-for-python-internals.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python interpreter plays a critical role in controlling the performance of your code. This talk will be a fun interactive session presented through code examples for ways to improve the performance of your Python code based on the CPython interpreter’s inherent behavior and fundamental design.&lt;/p&gt;
&lt;p&gt;Speaker: Yonatan …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python interpreter plays a critical role in controlling the performance of your code. This talk will be a fun interactive session presented through code examples for ways to improve the performance of your Python code based on the CPython interpreter’s inherent behavior and fundamental design.&lt;/p&gt;
&lt;p&gt;Speaker: Yonatan Goldschmidt
Yonatan Goldschmidt is a Team Lead at Granulate, overseeing the development and deployment of their real-time continuous optimization solution as an expert in low-level programming. Before joining Granulate, Yonatan served for nearly six years in the Israel Defense Forces as a Team Lead and R&amp;amp;D Specialist.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>Practical Pipelines: A Houseplant Soil Alerting System with ksqlDB</title><link href="https://pyvideo.org/pytexas-2022/practical-pipelines-a-houseplant-soil-alerting-system-with-ksqldb.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Danica Fine</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/practical-pipelines-a-houseplant-soil-alerting-system-with-ksqldb.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Be a better plant parent and build a practical, event-driven pipeline with Raspberry Pi and Apache Kafka! Soil moisture readings are streamed into Kafka and transformed, driving real-time alerts. Learn how ksqlDB and Kafka Connect made this pipeline possible as we dive in and get our hands dirty!&lt;/p&gt;
&lt;p&gt;Speaker …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Be a better plant parent and build a practical, event-driven pipeline with Raspberry Pi and Apache Kafka! Soil moisture readings are streamed into Kafka and transformed, driving real-time alerts. Learn how ksqlDB and Kafka Connect made this pipeline possible as we dive in and get our hands dirty!&lt;/p&gt;
&lt;p&gt;Speaker: Danica Fine
Danica Fine is a Senior Developer Advocate at Confluent where she helps others get the most out of their event-driven pipelines. Prior to this role, she served as a software engineer on a streaming infrastructure team where she predominantly worked on Kafka Streams- and Kafka Connect-based projects. Her expertise in streaming systems has taken her to a number of conferences and speaking engagements over the years, giving her the chance to express her love of Kafka to anyone who will listen. Danica is committed to increasing diversity in the technical community and actively serves as a mentor to a number of women in tech. She can be found on Twitter, tweeting about tech, plants, and baking &amp;#64;TheDanicaFine.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>PyTexas 2022 Intro</title><link href="https://pyvideo.org/pytexas-2022/pytexas-2022-intro.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/pytexas-2022-intro.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Welcome to PyTexas 2022!&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>PyTexas History</title><link href="https://pyvideo.org/pytexas-2022/pytexas-history.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Jeremy Boyd</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/pytexas-history.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyTexas Treasurer Jeremy Boyd gives his annual talk about the history of the PyTexas Foundation and the PyTexas Conference&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>Stand Back!: Building a scientific computing lab on public clouds with Pytho</title><link href="https://pyvideo.org/pytexas-2022/stand-back-building-a-scientific-computing-lab-on-public-clouds-with-pytho.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Stand Back!: Building a scientific computing lab on public clouds with Pytho</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/stand-back-building-a-scientific-computing-lab-on-public-clouds-with-pytho.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a citizen scientist, you want to learn more, but you’re hitting the limits of your computer. In this live demo, we’ll use Python to build a data lab on a public cloud. We’ll use that infrastructure to explore public data, and we’ll learn a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a citizen scientist, you want to learn more, but you’re hitting the limits of your computer. In this live demo, we’ll use Python to build a data lab on a public cloud. We’ll use that infrastructure to explore public data, and we’ll learn a bit more about “the cloud” along the way.&lt;/p&gt;
&lt;p&gt;Speaker: Laura Santamaria
As a Developer Advocate at Pulumi, Laura Santamaria loves to learn and explain how things work, bridging the gaps in engineering disciplines. She is a cohost for The Hallway Track podcast, an organizer for DevOpsDays Texas and DevOpsDays Austin, and a co-host for Cloud Austin and Austin DevOps. Previously, Laura worked as a developer advocate at LogDNA and a software developer at Rackspace where, among other things, she owned Deconst, an open-source documentation delivery platform, and MC’ed Rackspace’s internal technical conference. Apart from work, she taught Python for Women Who Code Austin for many years and has been a returning program committee member for Open Source Summit. Outside of tech, Laura runs, plays with her dogs, throws discs, and watches clouds—the real kind.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>xfail and skip: What to do with tests you know will fail</title><link href="https://pyvideo.org/pytexas-2022/xfail-and-skip-what-to-do-with-tests-you-know-will-fail.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Paul Ganssle</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/xfail-and-skip-what-to-do-with-tests-you-know-will-fail.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What do you do with a test you know will fail? Skip it? Mark it as xfail? Or wait until the test is passing before adding it to your test suite? In this talk, I’ll explain &lt;cite&gt;pytest&lt;/cite&gt;’s &lt;cite&gt;skipif&lt;/cite&gt; and &lt;cite&gt;xfail&lt;/cite&gt;, and dive into various strategies for dealing …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What do you do with a test you know will fail? Skip it? Mark it as xfail? Or wait until the test is passing before adding it to your test suite? In this talk, I’ll explain &lt;cite&gt;pytest&lt;/cite&gt;’s &lt;cite&gt;skipif&lt;/cite&gt; and &lt;cite&gt;xfail&lt;/cite&gt;, and dive into various strategies for dealing with tests that will not pass.&lt;/p&gt;
&lt;p&gt;Speaker: Paul Ganssle
Paul Ganssle is a software developer, CPython core developer, maintainer of python-dateutil and setuptools and contributor to many other open source projects. He lives just outside of Hartford, CT with his family, where he guards an ancient treasure intended to be mankind’s legacy. Expressions of opinion do not necessarily reflect the views of his employer.&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry></feed>