<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - tutorial</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_tutorial.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-08-31T00:00:00+00:00</updated><subtitle></subtitle><entry><title>How do I apply a function to a pandas Series or DataFrame?</title><link href="https://pyvideo.org/data-school/pandas-30-apply-function.html" rel="alternate"></link><published>2016-08-23T00:00:00+00:00</published><updated>2016-08-23T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-08-23:/data-school/pandas-30-apply-function.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever struggled to figure out the differences between apply, map, and applymap? In this video, I'll explain when you should use each of these methods and demonstrate a few common use cases. Watch the end of the video for three important announcements!&lt;/p&gt;
&lt;p&gt;This is video 30 of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever struggled to figure out the differences between apply, map, and applymap? In this video, I'll explain when you should use each of these methods and demonstrate a few common use cases. Watch the end of the video for three important announcements!&lt;/p&gt;
&lt;p&gt;This is video 30 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="NumPy"></category></entry><entry><title>How do I create a pandas DataFrame from another object?</title><link href="https://pyvideo.org/data-school/pandas-29-dummy-dataframe.html" rel="alternate"></link><published>2016-08-16T00:00:00+00:00</published><updated>2016-08-16T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-08-16:/data-school/pandas-29-dummy-dataframe.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever needed to create a DataFrame of &amp;quot;dummy&amp;quot; data, but without reading from a file? In this video, I'll demonstrate how to create a DataFrame from a dictionary, a list, and a NumPy array. I'll also show you how to create a new Series and attach it …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever needed to create a DataFrame of &amp;quot;dummy&amp;quot; data, but without reading from a file? In this video, I'll demonstrate how to create a DataFrame from a dictionary, a list, and a NumPy array. I'll also show you how to create a new Series and attach it to the DataFrame.&lt;/p&gt;
&lt;p&gt;This is video 29 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="NumPy"></category></entry><entry><title>How do I change display options in pandas?</title><link href="https://pyvideo.org/data-school/pandas-28-customize-display.html" rel="alternate"></link><published>2016-08-09T00:00:00+00:00</published><updated>2016-08-09T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-08-09:/data-school/pandas-28-customize-display.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wanted to change the way your DataFrame is displayed? Perhaps you needed to see more rows or columns, or modify the formatting of numbers? In this video, I'll demonstrate how to change the settings for five common display options in pandas.&lt;/p&gt;
&lt;p&gt;This is video 28 of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wanted to change the way your DataFrame is displayed? Perhaps you needed to see more rows or columns, or modify the formatting of numbers? In this video, I'll demonstrate how to change the settings for five common display options in pandas.&lt;/p&gt;
&lt;p&gt;This is video 28 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>How do I avoid a SettingWithCopyWarning in pandas?</title><link href="https://pyvideo.org/data-school/pandas-27-setting-with-copy-warning.html" rel="alternate"></link><published>2016-08-02T00:00:00+00:00</published><updated>2016-08-02T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-08-02:/data-school/pandas-27-setting-with-copy-warning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you've been using pandas for a while, you've likely encountered a SettingWithCopyWarning. The proper response is to modify your code appropriately, not to turn off the warning! In this video, I'll show you two common scenarios in which this warning arises, explain why it's occurring, and then demonstrate …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you've been using pandas for a while, you've likely encountered a SettingWithCopyWarning. The proper response is to modify your code appropriately, not to turn off the warning! In this video, I'll show you two common scenarios in which this warning arises, explain why it's occurring, and then demonstrate how to address it.&lt;/p&gt;
&lt;p&gt;This is video 27 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="missing data"></category></entry><entry><title>How do I find and remove duplicate rows in pandas?</title><link href="https://pyvideo.org/data-school/pandas-26-duplicate-data.html" rel="alternate"></link><published>2016-07-26T00:00:00+00:00</published><updated>2016-07-26T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-07-26:/data-school/pandas-26-duplicate-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;During the data cleaning process, you will often need to figure out whether you have duplicate data, and if so, how to deal with it. In this video, I'll demonstrate the two key methods for finding and removing duplicate rows, as well as how to modify their behavior to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;During the data cleaning process, you will often need to figure out whether you have duplicate data, and if so, how to deal with it. In this video, I'll demonstrate the two key methods for finding and removing duplicate rows, as well as how to modify their behavior to suit your specific needs.&lt;/p&gt;
&lt;p&gt;This is video 26 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="duplicate data"></category></entry><entry><title>How do I work with dates and times in pandas?</title><link href="https://pyvideo.org/data-school/pandas-25-dates-and-times.html" rel="alternate"></link><published>2016-07-19T00:00:00+00:00</published><updated>2016-07-19T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-07-19:/data-school/pandas-25-dates-and-times.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's say that you have dates and times in your DataFrame and you want to analyze your data by minute, month, or year. What should you do? In this video, I'll demonstrate how you can convert your data to &amp;quot;datetime&amp;quot; format, enabling you to access a ton of convenient …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's say that you have dates and times in your DataFrame and you want to analyze your data by minute, month, or year. What should you do? In this video, I'll demonstrate how you can convert your data to &amp;quot;datetime&amp;quot; format, enabling you to access a ton of convenient attributes and perform datetime comparisons and mathematical operations.&lt;/p&gt;
&lt;p&gt;This is video 25 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="data visualization"></category></entry><entry><title>How do I create dummy variables in pandas?</title><link href="https://pyvideo.org/data-school/pandas-24-dummy-variables.html" rel="alternate"></link><published>2016-07-12T00:00:00+00:00</published><updated>2016-07-12T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-07-12:/data-school/pandas-24-dummy-variables.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you want to include a categorical feature in your machine learning model, one common solution is to create dummy variables. In this video, I'll demonstrate three different ways you can create dummy variables from your existing DataFrame columns. I'll also show you a trick for simplifying your code …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you want to include a categorical feature in your machine learning model, one common solution is to create dummy variables. In this video, I'll demonstrate three different ways you can create dummy variables from your existing DataFrame columns. I'll also show you a trick for simplifying your code that was introduced in pandas 0.18.&lt;/p&gt;
&lt;p&gt;This is video 24 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="machine learning"></category></entry><entry><title>More of your pandas questions answered!</title><link href="https://pyvideo.org/data-school/pandas-23-viewer-questions.html" rel="alternate"></link><published>2016-07-05T00:00:00+00:00</published><updated>2016-07-05T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-07-05:/data-school/pandas-23-viewer-questions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, I'm answering a few of the pandas questions I've received in the YouTube comments: Could you explain how to read the pandas documentation? What is the difference between ufo.isnull() and pd.isnull(ufo)? Why are DataFrame slices inclusive when using .loc, but exclusive when using …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, I'm answering a few of the pandas questions I've received in the YouTube comments: Could you explain how to read the pandas documentation? What is the difference between ufo.isnull() and pd.isnull(ufo)? Why are DataFrame slices inclusive when using .loc, but exclusive when using .iloc? How do I randomly sample rows from a DataFrame?&lt;/p&gt;
&lt;p&gt;This is video 23 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="reproducibility"></category></entry><entry><title>How do I use pandas with scikit-learn to create Kaggle submissions?</title><link href="https://pyvideo.org/data-school/pandas-22-prepare-for-machine-learning.html" rel="alternate"></link><published>2016-06-28T00:00:00+00:00</published><updated>2016-06-28T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-06-28:/data-school/pandas-22-prepare-for-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you been using scikit-learn for machine learning, and wondering whether pandas could help you to prepare your data and export your predictions? In this video, I'll demonstrate the simplest way to integrate pandas into your machine learning workflow, and will create a submission for Kaggle's Titanic competition in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you been using scikit-learn for machine learning, and wondering whether pandas could help you to prepare your data and export your predictions? In this video, I'll demonstrate the simplest way to integrate pandas into your machine learning workflow, and will create a submission for Kaggle's Titanic competition in just a few lines of code!&lt;/p&gt;
&lt;p&gt;This is video 22 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="scikit-learn"></category><category term="machine learning"></category></entry><entry><title>How do I make my pandas DataFrame smaller and faster?</title><link href="https://pyvideo.org/data-school/pandas-21-reduce-dataframe-size.html" rel="alternate"></link><published>2016-06-21T00:00:00+00:00</published><updated>2016-06-21T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-06-21:/data-school/pandas-21-reduce-dataframe-size.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you working with a large dataset in pandas, and wondering if you can reduce its memory footprint or improve its efficiency? In this video, I'll show you how to do exactly that in one line of code using the &amp;quot;category&amp;quot; data type, introduced in pandas 0.15. I'll …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you working with a large dataset in pandas, and wondering if you can reduce its memory footprint or improve its efficiency? In this video, I'll show you how to do exactly that in one line of code using the &amp;quot;category&amp;quot; data type, introduced in pandas 0.15. I'll explain how it works, and how to know when you shouldn't use it.&lt;/p&gt;
&lt;p&gt;This is video 21 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>When should I use the "inplace" parameter in pandas?</title><link href="https://pyvideo.org/data-school/pandas-20-inplace-parameter.html" rel="alternate"></link><published>2016-06-14T00:00:00+00:00</published><updated>2016-06-14T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-06-14:/data-school/pandas-20-inplace-parameter.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We've used the &amp;quot;inplace&amp;quot; parameter many times during this video series, but what exactly does it do, and when should you use it? In this video, I'll explain how &amp;quot;inplace&amp;quot; affects methods such as &amp;quot;drop&amp;quot; and &amp;quot;dropna&amp;quot;, and why it is always False by default.&lt;/p&gt;
&lt;p&gt;This is video 20 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We've used the &amp;quot;inplace&amp;quot; parameter many times during this video series, but what exactly does it do, and when should you use it? In this video, I'll explain how &amp;quot;inplace&amp;quot; affects methods such as &amp;quot;drop&amp;quot; and &amp;quot;dropna&amp;quot;, and why it is always False by default.&lt;/p&gt;
&lt;p&gt;This is video 20 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="missing data"></category></entry><entry><title>How do I select multiple rows and columns from a pandas DataFrame?</title><link href="https://pyvideo.org/data-school/pandas-19-select-dataframe-rows-and-columns.html" rel="alternate"></link><published>2016-06-07T00:00:00+00:00</published><updated>2016-06-07T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-06-07:/data-school/pandas-19-select-dataframe-rows-and-columns.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever been confused about the &amp;quot;right&amp;quot; way to select rows and columns from a DataFrame? pandas gives you an incredible number of options for doing so, but in this video, I'll outline the current best practices for row and column selection using the loc, iloc, and ix …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever been confused about the &amp;quot;right&amp;quot; way to select rows and columns from a DataFrame? pandas gives you an incredible number of options for doing so, but in this video, I'll outline the current best practices for row and column selection using the loc, iloc, and ix methods.&lt;/p&gt;
&lt;p&gt;This is video 19 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>What do I need to know about the pandas index? (Part 2)</title><link href="https://pyvideo.org/data-school/pandas-18-index-part-2.html" rel="alternate"></link><published>2016-06-02T00:00:00+00:00</published><updated>2016-06-02T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-06-02:/data-school/pandas-18-index-part-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In part two of our discussion of the index, we'll switch our focus from the DataFrame index to the Series index. After discussing index-based selection and sorting, I'll demonstrate how automatic index alignment during mathematical operations and concatenation enables us to easily work with incomplete data in pandas.&lt;/p&gt;
&lt;p&gt;This …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In part two of our discussion of the index, we'll switch our focus from the DataFrame index to the Series index. After discussing index-based selection and sorting, I'll demonstrate how automatic index alignment during mathematical operations and concatenation enables us to easily work with incomplete data in pandas.&lt;/p&gt;
&lt;p&gt;This is video 18 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="missing data"></category></entry><entry><title>What do I need to know about the pandas index? (Part 1)</title><link href="https://pyvideo.org/data-school/pandas-17-index-part-1.html" rel="alternate"></link><published>2016-05-31T00:00:00+00:00</published><updated>2016-05-31T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-05-31:/data-school/pandas-17-index-part-1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The DataFrame index is core to the functionality of pandas, yet it's confusing to many users. In this video, I'll explain what the index is used for and why you might want to store your data in the index. I'll also demonstrate how to set and reset the index …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The DataFrame index is core to the functionality of pandas, yet it's confusing to many users. In this video, I'll explain what the index is used for and why you might want to store your data in the index. I'll also demonstrate how to set and reset the index, and show how that affects the DataFrame's shape and contents.&lt;/p&gt;
&lt;p&gt;This is video 17 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>How do I handle missing values in pandas?</title><link href="https://pyvideo.org/data-school/pandas-16-missing-values.html" rel="alternate"></link><published>2016-05-26T00:00:00+00:00</published><updated>2016-05-26T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-05-26:/data-school/pandas-16-missing-values.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most datasets contain &amp;quot;missing values&amp;quot;, meaning that the data is incomplete. Deciding how to handle missing values can be challenging! In this video, I'll cover all of the basics: how missing values are represented in pandas, how to locate them, and options for how to drop them or fill …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most datasets contain &amp;quot;missing values&amp;quot;, meaning that the data is incomplete. Deciding how to handle missing values can be challenging! In this video, I'll cover all of the basics: how missing values are represented in pandas, how to locate them, and options for how to drop them or fill them in.&lt;/p&gt;
&lt;p&gt;This is video 16 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="missing data"></category></entry><entry><title>How do I explore a pandas Series?</title><link href="https://pyvideo.org/data-school/pandas-15-explore-series.html" rel="alternate"></link><published>2016-05-24T00:00:00+00:00</published><updated>2016-05-24T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-05-24:/data-school/pandas-15-explore-series.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When you start working with a new dataset, how should you go about exploring it? In this video, I'll demonstrate some of the basic tools in pandas for exploring both numeric and non-numeric data. I'll also show you how to create simple visualizations in a single line of code …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When you start working with a new dataset, how should you go about exploring it? In this video, I'll demonstrate some of the basic tools in pandas for exploring both numeric and non-numeric data. I'll also show you how to create simple visualizations in a single line of code!&lt;/p&gt;
&lt;p&gt;This is video 15 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="data visualization"></category></entry><entry><title>When should I use a "groupby" in pandas?</title><link href="https://pyvideo.org/data-school/pandas-14-analyze-data-by-category.html" rel="alternate"></link><published>2016-05-19T00:00:00+00:00</published><updated>2016-05-19T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-05-19:/data-school/pandas-14-analyze-data-by-category.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The pandas &amp;quot;groupby&amp;quot; method allows you to split a DataFrame into groups, apply a function to each group independently, and then combine the results back together. This is called the &amp;quot;split-apply-combine&amp;quot; pattern, and is a powerful tool for analyzing data across different categories. In this video, I'll explain when …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The pandas &amp;quot;groupby&amp;quot; method allows you to split a DataFrame into groups, apply a function to each group independently, and then combine the results back together. This is called the &amp;quot;split-apply-combine&amp;quot; pattern, and is a powerful tool for analyzing data across different categories. In this video, I'll explain when you should use a groupby and then demonstrate its flexibility using four different examples.&lt;/p&gt;
&lt;p&gt;This is video 14 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="data visualization"></category></entry><entry><title>How do I change the data type of a pandas Series?</title><link href="https://pyvideo.org/data-school/pandas-13-change-data-type-of-series.html" rel="alternate"></link><published>2016-05-17T00:00:00+00:00</published><updated>2016-05-17T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-05-17:/data-school/pandas-13-change-data-type-of-series.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever tried to do math with a pandas Series that you thought was numeric, but it turned out that your numbers were stored as strings? In this video, I'll demonstrate two different ways to change the data type of a Series so that you can fix incorrect …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever tried to do math with a pandas Series that you thought was numeric, but it turned out that your numbers were stored as strings? In this video, I'll demonstrate two different ways to change the data type of a Series so that you can fix incorrect data types. I'll also show you the easiest way to convert a boolean Series to integers, which is useful for creating dummy/indicator variables for machine learning.&lt;/p&gt;
&lt;p&gt;This is video 13 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>How do I use string methods in pandas?</title><link href="https://pyvideo.org/data-school/pandas-12-string-methods.html" rel="alternate"></link><published>2016-05-12T00:00:00+00:00</published><updated>2016-05-12T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-05-12:/data-school/pandas-12-string-methods.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pandas includes powerful string manipulation capabilities that you can easily apply to any Series of strings. In this video, I'll show you how to access string methods in pandas (along with a few examples), and then end with two bonus tips to help you maximize your efficiency.&lt;/p&gt;
&lt;p&gt;This is …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pandas includes powerful string manipulation capabilities that you can easily apply to any Series of strings. In this video, I'll show you how to access string methods in pandas (along with a few examples), and then end with two bonus tips to help you maximize your efficiency.&lt;/p&gt;
&lt;p&gt;This is video 12 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="regular expressions"></category><category term="string processing"></category></entry><entry><title>How do I use the "axis" parameter in pandas?</title><link href="https://pyvideo.org/data-school/pandas-11-dataframe-axis.html" rel="alternate"></link><published>2016-05-10T00:00:00+00:00</published><updated>2016-05-10T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-05-10:/data-school/pandas-11-dataframe-axis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When performing operations on a pandas DataFrame, such as dropping columns or calculating row means, it is often necessary to specify the &amp;quot;axis&amp;quot;. But what exactly is an axis? In this video, I'll help you to build a mental model for understanding the axis parameter so that you will …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When performing operations on a pandas DataFrame, such as dropping columns or calculating row means, it is often necessary to specify the &amp;quot;axis&amp;quot;. But what exactly is an axis? In this video, I'll help you to build a mental model for understanding the axis parameter so that you will know when and how to use it.&lt;/p&gt;
&lt;p&gt;This is video 11 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>Your pandas questions answered!</title><link href="https://pyvideo.org/data-school/pandas-10-viewer-questions.html" rel="alternate"></link><published>2016-05-05T00:00:00+00:00</published><updated>2016-05-05T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-05-05:/data-school/pandas-10-viewer-questions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, I'm answering a few of the pandas questions I've received in the YouTube comments: When reading from a file, how do I read in only a subset of the columns or rows? How do I iterate through a Series or a DataFrame? How do I drop …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, I'm answering a few of the pandas questions I've received in the YouTube comments: When reading from a file, how do I read in only a subset of the columns or rows? How do I iterate through a Series or a DataFrame? How do I drop all non-numeric columns from a DataFrame? How do I know whether I should pass an argument as a string or a list?&lt;/p&gt;
&lt;p&gt;This is video 10 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>How do I apply multiple filter criteria to a pandas DataFrame?</title><link href="https://pyvideo.org/data-school/pandas-09-multiple-filter-criteria.html" rel="alternate"></link><published>2016-05-03T00:00:00+00:00</published><updated>2016-05-03T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-05-03:/data-school/pandas-09-multiple-filter-criteria.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's say that you want to filter the rows of a DataFrame by multiple conditions. In this video, I'll demonstrate how to do this using two different logical operators. I'll also explain the special rules in pandas for combining filter criteria, and end with a trick for simplifying chained …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's say that you want to filter the rows of a DataFrame by multiple conditions. In this video, I'll demonstrate how to do this using two different logical operators. I'll also explain the special rules in pandas for combining filter criteria, and end with a trick for simplifying chained conditions!&lt;/p&gt;
&lt;p&gt;This is video 9 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>How do I filter rows of a pandas DataFrame by column value?</title><link href="https://pyvideo.org/data-school/pandas-08-filter-dataframe-rows.html" rel="alternate"></link><published>2016-04-28T00:00:00+00:00</published><updated>2016-04-28T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-04-28:/data-school/pandas-08-filter-dataframe-rows.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's say that you only want to display the rows of a DataFrame which have a certain column value. How would you do it? pandas makes it easy, but the notation can be confusing and thus difficult to remember. In this video, I'll work up to the solution step-by-step …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's say that you only want to display the rows of a DataFrame which have a certain column value. How would you do it? pandas makes it easy, but the notation can be confusing and thus difficult to remember. In this video, I'll work up to the solution step-by-step using regular Python code so that you can truly understand the logic behind pandas filtering notation.&lt;/p&gt;
&lt;p&gt;This is video 8 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>How do I sort a pandas DataFrame or a Series?</title><link href="https://pyvideo.org/data-school/pandas-07-sort-dataframe-or-series.html" rel="alternate"></link><published>2016-04-26T00:00:00+00:00</published><updated>2016-04-26T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-04-26:/data-school/pandas-07-sort-dataframe-or-series.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pandas allows you to sort a DataFrame by one of its columns (known as a &amp;quot;Series&amp;quot;), and also allows you to sort a Series alone. The sorting API changed in pandas version 0.17, so in this video, I'll demonstrate both the &amp;quot;old way&amp;quot; and the &amp;quot;new way&amp;quot; to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pandas allows you to sort a DataFrame by one of its columns (known as a &amp;quot;Series&amp;quot;), and also allows you to sort a Series alone. The sorting API changed in pandas version 0.17, so in this video, I'll demonstrate both the &amp;quot;old way&amp;quot; and the &amp;quot;new way&amp;quot; to sort. I'll also show you how to sort a DataFrame by multiple columns at once!&lt;/p&gt;
&lt;p&gt;This is video 7 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>How do I remove columns from a pandas DataFrame?</title><link href="https://pyvideo.org/data-school/pandas-06-remove-dataframe-column.html" rel="alternate"></link><published>2016-04-21T00:00:00+00:00</published><updated>2016-04-21T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-04-21:/data-school/pandas-06-remove-dataframe-column.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you have DataFrame columns that you're never going to use, you may want to remove them entirely in order to focus on the columns that you do use. In this video, I'll show you how to remove columns (and rows), and will briefly explain the meaning of the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you have DataFrame columns that you're never going to use, you may want to remove them entirely in order to focus on the columns that you do use. In this video, I'll show you how to remove columns (and rows), and will briefly explain the meaning of the &amp;quot;axis&amp;quot; and &amp;quot;inplace&amp;quot; parameters.&lt;/p&gt;
&lt;p&gt;This is video 6 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>How do I rename columns in a pandas DataFrame?</title><link href="https://pyvideo.org/data-school/pandas-05-rename-dataframe-column.html" rel="alternate"></link><published>2016-04-19T00:00:00+00:00</published><updated>2016-04-19T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-04-19:/data-school/pandas-05-rename-dataframe-column.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You will often want to rename the columns of a DataFrame so that their names are descriptive, easy to type, and don't contain any spaces. In this video, I'll demonstrate three different strategies for renaming columns so that you can choose the best strategy to fit your particular situation …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You will often want to rename the columns of a DataFrame so that their names are descriptive, easy to type, and don't contain any spaces. In this video, I'll demonstrate three different strategies for renaming columns so that you can choose the best strategy to fit your particular situation.&lt;/p&gt;
&lt;p&gt;This is video 5 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>Why do some pandas commands end with parentheses (and others don't)?</title><link href="https://pyvideo.org/data-school/pandas-04-methods-and-attributes.html" rel="alternate"></link><published>2016-04-14T00:00:00+00:00</published><updated>2016-04-14T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-04-14:/data-school/pandas-04-methods-and-attributes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To access most of the functionality in pandas, you have to call the methods and attributes of DataFrame and Series objects. In this video, I'll discuss some common methods and attributes, and show you how to tell the difference between them. (Hint: It's all about the parentheses!)&lt;/p&gt;
&lt;p&gt;This is …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To access most of the functionality in pandas, you have to call the methods and attributes of DataFrame and Series objects. In this video, I'll discuss some common methods and attributes, and show you how to tell the difference between them. (Hint: It's all about the parentheses!)&lt;/p&gt;
&lt;p&gt;This is video 4 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>How do I select a pandas Series from a DataFrame?</title><link href="https://pyvideo.org/data-school/pandas-03-select-series-from-dataframe.html" rel="alternate"></link><published>2016-04-12T00:00:00+00:00</published><updated>2016-04-12T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-04-12:/data-school/pandas-03-select-series-from-dataframe.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DataFrames and Series are the two main object types in pandas for data storage: a DataFrame is like a table, and each column of the table is called a Series. You will often select a Series in order to analyze or manipulate it. In this video, I'll show you …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DataFrames and Series are the two main object types in pandas for data storage: a DataFrame is like a table, and each column of the table is called a Series. You will often select a Series in order to analyze or manipulate it. In this video, I'll show you how to select a Series using &amp;quot;bracket notation&amp;quot; and &amp;quot;dot notation&amp;quot;, and will discuss the limitations of dot notation. I'll also demonstrate how to create a new Series in a DataFrame.&lt;/p&gt;
&lt;p&gt;This is video 3 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>What is pandas? (Introduction to the Q&amp;A series)</title><link href="https://pyvideo.org/data-school/pandas-01-introduction.html" rel="alternate"></link><published>2016-04-07T00:00:00+00:00</published><updated>2016-04-07T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-04-07:/data-school/pandas-01-introduction.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pandas is a full-featured Python library for data analysis, manipulation, and visualization. This video series is for anyone who wants to work with data in Python, regardless of whether you are brand new to pandas or have some experience.&lt;/p&gt;
&lt;p&gt;This is video 1 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pandas is a full-featured Python library for data analysis, manipulation, and visualization. This video series is for anyone who wants to work with data in Python, regardless of whether you are brand new to pandas or have some experience.&lt;/p&gt;
&lt;p&gt;This is video 1 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category></entry><entry><title>How do I read a tabular data file into pandas?</title><link href="https://pyvideo.org/data-school/pandas-02-read-tabular-data-file.html" rel="alternate"></link><published>2016-04-07T00:00:00+00:00</published><updated>2016-04-07T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-04-07:/data-school/pandas-02-read-tabular-data-file.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Tabular data&amp;quot; is just data that has been formatted as a table, with rows and columns (like a spreadsheet). You can easily read a tabular data file into pandas, even directly from a URL! In this video, I'll walk you through how to do that, including how to modify …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Tabular data&amp;quot; is just data that has been formatted as a table, with rows and columns (like a spreadsheet). You can easily read a tabular data file into pandas, even directly from a URL! In this video, I'll walk you through how to do that, including how to modify some of the default arguments of the read_table function to solve common problems.&lt;/p&gt;
&lt;p&gt;This is video 2 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="data science"></category><category term="data analysis"></category><category term="data wrangling"></category><category term="data processing"></category><category term="pandas"></category><category term="tutorial"></category><category term="Data School"></category><category term="csv"></category></entry><entry><title>How to evaluate a classifier in scikit-learn</title><link href="https://pyvideo.org/data-school/scikit-learn-09-evaluating-classification-models.html" rel="alternate"></link><published>2015-10-23T00:00:00+00:00</published><updated>2015-10-23T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2015-10-23:/data-school/scikit-learn-09-evaluating-classification-models.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, you'll learn how to properly evaluate a classification model using a variety of common tools and metrics, as well as how to adjust the performance of a classifier to best match your business objectives. I'll start by demonstrating the weaknesses of classification accuracy as an evaluation …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, you'll learn how to properly evaluate a classification model using a variety of common tools and metrics, as well as how to adjust the performance of a classifier to best match your business objectives. I'll start by demonstrating the weaknesses of classification accuracy as an evaluation metric. I'll then discuss the confusion matrix, the ROC curve and AUC, and metrics such as sensitivity, specificity, and precision. By the end of the video, you will have a solid foundation for intelligently evaluating your own classification model.&lt;/p&gt;
&lt;p&gt;This is the ninth video in the series, &lt;a class="reference external" href="http://www.dataschool.io/machine-learning-with-scikit-learn/"&gt;Introduction to machine learning with scikit-learn&lt;/a&gt;. The notebook and resources shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/scikit-learn-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="machine learning"></category><category term="data science"></category><category term="scikit-learn"></category><category term="tutorial"></category><category term="Data School"></category><category term="model evaluation"></category><category term="classification"></category><category term="confusion matrix"></category><category term="ROC curve"></category><category term="AUC"></category></entry><entry><title>How to find the best model parameters in scikit-learn</title><link href="https://pyvideo.org/data-school/scikit-learn-08-parameter-tuning-with-grid-search.html" rel="alternate"></link><published>2015-07-15T00:00:00+00:00</published><updated>2015-07-15T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2015-07-15:/data-school/scikit-learn-08-parameter-tuning-with-grid-search.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, you'll learn how to efficiently search for the optimal tuning parameters (or &amp;quot;hyperparameters&amp;quot;) for your machine learning model in order to maximize its performance. I'll start by demonstrating an exhaustive &amp;quot;grid search&amp;quot; process using scikit-learn's GridSearchCV class, and then I'll compare it with RandomizedSearchCV, which can …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, you'll learn how to efficiently search for the optimal tuning parameters (or &amp;quot;hyperparameters&amp;quot;) for your machine learning model in order to maximize its performance. I'll start by demonstrating an exhaustive &amp;quot;grid search&amp;quot; process using scikit-learn's GridSearchCV class, and then I'll compare it with RandomizedSearchCV, which can often achieve similar results in far less time.&lt;/p&gt;
&lt;p&gt;This is the eighth video in the series, &lt;a class="reference external" href="http://www.dataschool.io/machine-learning-with-scikit-learn/"&gt;Introduction to machine learning with scikit-learn&lt;/a&gt;. The notebook and resources shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/scikit-learn-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="machine learning"></category><category term="data science"></category><category term="scikit-learn"></category><category term="tutorial"></category><category term="Data School"></category><category term="cross-validation"></category><category term="model evaluation"></category><category term="parameter tuning"></category><category term="grid search"></category></entry><entry><title>Selecting the best model in scikit-learn using cross-validation</title><link href="https://pyvideo.org/data-school/scikit-learn-07-model-evaluation-with-cross-validation.html" rel="alternate"></link><published>2015-06-28T00:00:00+00:00</published><updated>2015-06-28T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2015-06-28:/data-school/scikit-learn-07-model-evaluation-with-cross-validation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, we'll learn about K-fold cross-validation and how it can be used for selecting optimal tuning parameters, choosing between models, and selecting features. We'll compare cross-validation with the train/test split procedure, and we'll also discuss some variations of cross-validation that can result in more accurate estimates …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, we'll learn about K-fold cross-validation and how it can be used for selecting optimal tuning parameters, choosing between models, and selecting features. We'll compare cross-validation with the train/test split procedure, and we'll also discuss some variations of cross-validation that can result in more accurate estimates of model performance.&lt;/p&gt;
&lt;p&gt;This is the seventh video in the series, &lt;a class="reference external" href="http://www.dataschool.io/machine-learning-with-scikit-learn/"&gt;Introduction to machine learning with scikit-learn&lt;/a&gt;. The notebook and resources shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/scikit-learn-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="machine learning"></category><category term="data science"></category><category term="scikit-learn"></category><category term="tutorial"></category><category term="Data School"></category><category term="cross-validation"></category><category term="model evaluation"></category><category term="feature selection"></category><category term="parameter tuning"></category></entry><entry><title>Data science in Python: pandas, seaborn, scikit-learn</title><link href="https://pyvideo.org/data-school/scikit-learn-06-data-science-pipeline.html" rel="alternate"></link><published>2015-05-28T00:00:00+00:00</published><updated>2015-05-28T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2015-05-28:/data-school/scikit-learn-06-data-science-pipeline.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, we'll cover the data science pipeline from data ingestion (with pandas) to data visualization (with seaborn) to machine learning (with scikit-learn). We'll learn how to train and interpret a linear regression model, and then compare three possible evaluation metrics for regression problems. Finally, we'll apply the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, we'll cover the data science pipeline from data ingestion (with pandas) to data visualization (with seaborn) to machine learning (with scikit-learn). We'll learn how to train and interpret a linear regression model, and then compare three possible evaluation metrics for regression problems. Finally, we'll apply the train/test split procedure to decide which features to include in our model.&lt;/p&gt;
&lt;p&gt;This is the sixth video in the series, &lt;a class="reference external" href="http://www.dataschool.io/machine-learning-with-scikit-learn/"&gt;Introduction to machine learning with scikit-learn&lt;/a&gt;. The notebook and resources shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/scikit-learn-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="machine learning"></category><category term="data science"></category><category term="scikit-learn"></category><category term="tutorial"></category><category term="Data School"></category><category term="pandas"></category><category term="seaborn"></category><category term="linear regression"></category><category term="model evaluation"></category><category term="feature selection"></category><category term="visualization"></category></entry><entry><title>Comparing machine learning models in scikit-learn</title><link href="https://pyvideo.org/data-school/scikit-learn-05-comparing-machine-learning-models.html" rel="alternate"></link><published>2015-05-14T00:00:00+00:00</published><updated>2015-05-14T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2015-05-14:/data-school/scikit-learn-05-comparing-machine-learning-models.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We've learned how to train different machine learning models and make predictions, but how do we actually choose which model is &amp;quot;best&amp;quot;? We'll cover the train/test split process for model evaluation, which allows you to avoid &amp;quot;overfitting&amp;quot; by estimating how well a model is likely to perform on …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We've learned how to train different machine learning models and make predictions, but how do we actually choose which model is &amp;quot;best&amp;quot;? We'll cover the train/test split process for model evaluation, which allows you to avoid &amp;quot;overfitting&amp;quot; by estimating how well a model is likely to perform on new data. We'll use that same process to locate optimal tuning parameters for a KNN model, and then we'll re-train our model so that it's ready to make real predictions.&lt;/p&gt;
&lt;p&gt;This is the fifth video in the series, &lt;a class="reference external" href="http://www.dataschool.io/machine-learning-with-scikit-learn/"&gt;Introduction to machine learning with scikit-learn&lt;/a&gt;. The notebook and resources shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/scikit-learn-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="machine learning"></category><category term="data science"></category><category term="scikit-learn"></category><category term="tutorial"></category><category term="Data School"></category><category term="model evaluation"></category><category term="overfitting"></category></entry><entry><title>Training a machine learning model with scikit-learn</title><link href="https://pyvideo.org/data-school/scikit-learn-04-training-a-machine-learning-model.html" rel="alternate"></link><published>2015-04-29T00:00:00+00:00</published><updated>2015-04-29T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2015-04-29:/data-school/scikit-learn-04-training-a-machine-learning-model.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Now that we're familiar with the famous iris dataset, let's actually use a classification model in scikit-learn to predict the species of an iris! We'll learn how the K-nearest neighbors (KNN) model works, and then walk through the four steps for model training and prediction in scikit-learn. Finally, we'll …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Now that we're familiar with the famous iris dataset, let's actually use a classification model in scikit-learn to predict the species of an iris! We'll learn how the K-nearest neighbors (KNN) model works, and then walk through the four steps for model training and prediction in scikit-learn. Finally, we'll see how easy it is to try out a different classification model, namely logistic regression.&lt;/p&gt;
&lt;p&gt;This is the fourth video in the series, &lt;a class="reference external" href="http://www.dataschool.io/machine-learning-with-scikit-learn/"&gt;Introduction to machine learning with scikit-learn&lt;/a&gt;. The notebook and resources shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/scikit-learn-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="machine learning"></category><category term="data science"></category><category term="scikit-learn"></category><category term="tutorial"></category><category term="Data School"></category><category term="classification"></category><category term="KNN"></category></entry><entry><title>Getting started in scikit-learn with the famous iris dataset</title><link href="https://pyvideo.org/data-school/scikit-learn-03-getting-started-with-machine-learning.html" rel="alternate"></link><published>2015-04-21T00:00:00+00:00</published><updated>2015-04-21T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2015-04-21:/data-school/scikit-learn-03-getting-started-with-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Now that we've set up Python for machine learning, let's get started by loading an example dataset into scikit-learn! We'll explore the famous &amp;quot;iris&amp;quot; dataset, learn some important machine learning terminology, and discuss the four key requirements for working with data in scikit-learn.&lt;/p&gt;
&lt;p&gt;This is the third video in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Now that we've set up Python for machine learning, let's get started by loading an example dataset into scikit-learn! We'll explore the famous &amp;quot;iris&amp;quot; dataset, learn some important machine learning terminology, and discuss the four key requirements for working with data in scikit-learn.&lt;/p&gt;
&lt;p&gt;This is the third video in the series, &lt;a class="reference external" href="http://www.dataschool.io/machine-learning-with-scikit-learn/"&gt;Introduction to machine learning with scikit-learn&lt;/a&gt;. The notebook and resources shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/scikit-learn-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="machine learning"></category><category term="data science"></category><category term="scikit-learn"></category><category term="tutorial"></category><category term="Data School"></category><category term="NumPy"></category></entry><entry><title>Setting up Python for machine learning: scikit-learn and IPython Notebook</title><link href="https://pyvideo.org/data-school/scikit-learn-02-machine-learning-setup.html" rel="alternate"></link><published>2015-04-15T00:00:00+00:00</published><updated>2015-04-15T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2015-04-15:/data-school/scikit-learn-02-machine-learning-setup.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Want to get started with machine learning in Python? I'll discuss the pros and cons of the scikit-learn library, show how to install my preferred Python distribution, and demonstrate the basic functionality of the IPython Notebook. If you don't yet know any Python, I'll also provide four recommended resources …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Want to get started with machine learning in Python? I'll discuss the pros and cons of the scikit-learn library, show how to install my preferred Python distribution, and demonstrate the basic functionality of the IPython Notebook. If you don't yet know any Python, I'll also provide four recommended resources for learning Python.&lt;/p&gt;
&lt;p&gt;This is the second video in the series, &lt;a class="reference external" href="http://www.dataschool.io/machine-learning-with-scikit-learn/"&gt;Introduction to machine learning with scikit-learn&lt;/a&gt;. The notebook and resources shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/scikit-learn-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="machine learning"></category><category term="data science"></category><category term="scikit-learn"></category><category term="tutorial"></category><category term="Data School"></category><category term="IPython notebook"></category><category term="Jupyter notebook"></category></entry><entry><title>What is machine learning, and how does it work?</title><link href="https://pyvideo.org/data-school/scikit-learn-01-what-is-machine-learning.html" rel="alternate"></link><published>2015-04-07T00:00:00+00:00</published><updated>2015-04-07T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2015-04-07:/data-school/scikit-learn-01-what-is-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you heard of &amp;quot;machine learning&amp;quot;, and you're trying to figure out exactly what that means? I'll give you my definition, provide some examples of machine learning, and explain at a high level how machine learning &amp;quot;works&amp;quot;.&lt;/p&gt;
&lt;p&gt;This is the first video in the series, &lt;a class="reference external" href="http://www.dataschool.io/machine-learning-with-scikit-learn/"&gt;Introduction to machine learning …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you heard of &amp;quot;machine learning&amp;quot;, and you're trying to figure out exactly what that means? I'll give you my definition, provide some examples of machine learning, and explain at a high level how machine learning &amp;quot;works&amp;quot;.&lt;/p&gt;
&lt;p&gt;This is the first video in the series, &lt;a class="reference external" href="http://www.dataschool.io/machine-learning-with-scikit-learn/"&gt;Introduction to machine learning with scikit-learn&lt;/a&gt;. The notebook and resources shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/scikit-learn-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="Data School"></category><category term="machine learning"></category><category term="data science"></category><category term="scikit-learn"></category><category term="tutorial"></category><category term="Data School"></category><category term="supervised learning"></category><category term="unsupervised learning"></category></entry><entry><title>Matplotlib Plot Tutorial: Histograms, Scatter Plots &amp; Legend</title><link href="https://pyvideo.org/datacamp/Matplotlib-Plot-Tutorial-For-Beginners.html" rel="alternate"></link><published>2016-02-01T00:00:00+00:00</published><updated>2016-02-01T00:00:00+00:00</updated><author><name>Filip Schouwenaars</name></author><id>tag:pyvideo.org,2016-02-01:/datacamp/Matplotlib-Plot-Tutorial-For-Beginners.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Matplotlib makes it easy to create meaningful and insightful plots. In this beginner video, you will learn how to build various types of data visualizations such as histograms, scatter plots and line plots. You will also see how to customize them to make them more visually appealing and interpretable …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Matplotlib makes it easy to create meaningful and insightful plots. In this beginner video, you will learn how to build various types of data visualizations such as histograms, scatter plots and line plots. You will also see how to customize them to make them more visually appealing and interpretable.&lt;/p&gt;
&lt;p&gt;Want to do the corresponding exercises? Go to our &lt;cite&gt;Python For Data Science Tutorial &amp;lt;https://www.datacamp.com/courses/intro-to-python-for-data-science&amp;gt;&lt;/cite&gt; where you can do them for free.&lt;/p&gt;
</content><category term="DataCamp"></category><category term="Matplotlib"></category><category term="data science"></category><category term="data visualization"></category><category term="tutorial"></category><category term="DataCamp"></category></entry><entry><title>Objects and classes in Python (and JavaScript)</title><link href="https://pyvideo.org/europython-2011/objects-and-classes-in-python-and-javascript.html" rel="alternate"></link><published>2011-07-21T00:00:00+00:00</published><updated>2011-07-21T00:00:00+00:00</updated><author><name>Jonathan Fine</name></author><id>tag:pyvideo.org,2011-07-21:/europython-2011/objects-and-classes-in-python-and-javascript.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Jonathan Fine - 23 June 2011 in &amp;quot;Training Pizza Napoli&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has a well-thought out system for classes. Beginners can use it
without understanding it all. Experts can use it to produce code that is
both elegant and powerful (such as models and class-based views in
Django …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Jonathan Fine - 23 June 2011 in &amp;quot;Training Pizza Napoli&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has a well-thought out system for classes. Beginners can use it
without understanding it all. Experts can use it to produce code that is
both elegant and powerful (such as models and class-based views in
Django). Python classes can be used for many purposes.&lt;/p&gt;
&lt;p&gt;This tutorial arises from the author's experience in using classes to
solve problems, such as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Add custom methods and attributes to objects that are, at root, just an integer&lt;/li&gt;
&lt;li&gt;Construct dictionaries whose values are functions&lt;/li&gt;
&lt;li&gt;Construct classes on-the-fly&lt;/li&gt;
&lt;li&gt;Implement JavaScript object semantics in Python (advanced topic)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The outline syllabus is:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Review of the class statement in Python (and decorators)&lt;/li&gt;
&lt;li&gt;Subclassing built-in types such as int and tuple&lt;/li&gt;
&lt;li&gt;How to define classes without using a class statement&lt;/li&gt;
&lt;li&gt;How to define a dispatch dictionary using a class statement&lt;/li&gt;
&lt;li&gt;Metaclasses as syntactic sugar for class construction&lt;/li&gt;
&lt;li&gt;Metaclasses to provide new class semantics&lt;/li&gt;
&lt;li&gt;Review of JavaScript object semantics&lt;/li&gt;
&lt;li&gt;Using Python classes to implement JavaScript object semantics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For Guido on the history of Python classes see:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python-history.blogspot.com/2010/06/new-style-classes.html"&gt;http://python-history.blogspot.com/2010/06/new-style-classes.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python-history.blogspot.com/2010/06/inside-story-on-new-style-classes.html"&gt;http://python-history.blogspot.com/2010/06/inside-story-on-new-style-classes.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python-history.blogspot.com/2010/06/method-resolution-order.html"&gt;http://python-history.blogspot.com/2010/06/method-resolution-order.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tutorial is for Intermediate or Advanced Python programmers.
(Beginners will find it very hard going.) The aim of the course is to
explain exactly what happens when a class in constructed, and to learn
ways of using this knowledge.&lt;/p&gt;
</content><category term="EuroPython 2011"></category><category term="dictionaries"></category><category term="javascript"></category><category term="tutorial"></category></entry><entry><title>PyPy hands-on</title><link href="https://pyvideo.org/europython-2011/pypy-hands-on.html" rel="alternate"></link><published>2011-07-21T00:00:00+00:00</published><updated>2011-07-21T00:00:00+00:00</updated><author><name>Antonio Cuni</name></author><id>tag:pyvideo.org,2011-07-21:/europython-2011/pypy-hands-on.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Antonio Cuni,Armin Rigo - 21 June 2011 in &amp;quot;Training
Pizza Margherita&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The session is divided into two parts, of roughly 2 hours each. People
who are interested only in the first part, can leave the session after
it. However, the first part is a prerequisite for …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Antonio Cuni,Armin Rigo - 21 June 2011 in &amp;quot;Training
Pizza Margherita&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The session is divided into two parts, of roughly 2 hours each. People
who are interested only in the first part, can leave the session after
it. However, the first part is a prerequisite for the second one, thus
people are not advised to join in the middle of the session.&lt;/p&gt;
&lt;p&gt;The session is meant to be highly interactive. People are invited to
bring their own laptop and try things by themselves.&lt;/p&gt;
&lt;div class="section" id="part-1-run-your-application-under-pypy"&gt;
&lt;h4&gt;Part 1: Run your application under PyPy&lt;/h4&gt;
&lt;p&gt;This tutorial is targeted to Python users who want to run their favorite
Python application under PyPy, and exploit the most of it. The following
topics will be covered:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
- how to fix/avoid CPython implementation details (e.g., refcounting)

- general overview of how the PyPy JIT works

- how to optimize your program for the PyPy JIT

- how to view and interpret the traces produced by the JIT

- how to tweak the parameters of the JIT and the GC

- how to use existing CPython C extensions on PyPy, and fix them if necessary
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="part-2-write-your-own-interpreter-with-pypy"&gt;
&lt;h4&gt;Part 2: Write your own interpreter with PyPy&lt;/h4&gt;
&lt;p&gt;PyPy is not only a Python interpreter, but also a toolchain to implement
dynamic languages. This tutorial is targeted to people who want to
implement their own programming languages, or who simply want to know
more about how the PyPy JIT works internally.&lt;/p&gt;
&lt;p&gt;The students will be given the source code for a toy language
implemented in RPython. They will learn:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
- how to translate it to C using the PyPy translation toolchain

- what are the &amp;quot;hints&amp;quot; needed by the JIT generator, and how to place them
&lt;/pre&gt;
&lt;p&gt;Then, they will be challenged to add the proper hints to the toy
interpreter, to get the best result with the JIT.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;THINGS TO DO BEFORE THE TRAINING&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You are encouraged to bring your laptop to the training session.&lt;/p&gt;
&lt;p&gt;Make sure that the following prerequisites are met:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Install PyPy 1.5:&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pypy.org/download.html"&gt;http://pypy.org/download.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://doc.pypy.org/en/latest/getting-started.html#installing-pypy"&gt;http://doc.pypy.org/en/latest/getting-started.html#installing-pypy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Make sure that &lt;tt class="docutils literal"&gt;setuptools&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;distribute&lt;/tt&gt; are installed (look
at the URL above for instructions)&lt;/li&gt;
&lt;li&gt;Clone the pypy repository, and update to the 1.5 version:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$ hg clone &lt;a class="reference external" href="http://bitbucket.org/pypy/pypy"&gt;http://bitbucket.org/pypy/pypy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;$ cd pypy&lt;/p&gt;
&lt;p&gt;$ hg up -r release-1.5&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Clone the jitviewer repository and install it on pypy:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$ hg clone &lt;a class="reference external" href="http://bitbucket.org/pypy/jitviewer"&gt;http://bitbucket.org/pypy/jitviewer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;$ cd jitviewer&lt;/p&gt;
&lt;p&gt;$ /path/to/pypy-1.5/bin/pypy setup.py develop&lt;/p&gt;
&lt;p&gt;If you intend to follow also the second part (&amp;quot;Write your own
interpreter with PyPy&amp;quot;), you need to make sure you have a working
&lt;a class="reference external" href="http://doc.pypy.org/en/latest/getting-started-python.html%20#translating-the-pypy-python-interpreter"&gt;developing
environment&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="EuroPython 2011"></category><category term="cd"></category><category term="cpython"></category><category term="extensions"></category><category term="hg"></category><category term="jit"></category><category term="optimize"></category><category term="pypy"></category><category term="setup.py"></category><category term="tutorial"></category></entry><entry><title>Advanced Python</title><link href="https://pyvideo.org/europython-2011/advanced-python.html" rel="alternate"></link><published>2011-07-20T00:00:00+00:00</published><updated>2011-07-20T00:00:00+00:00</updated><author><name>Raymond Hettinger</name></author><id>tag:pyvideo.org,2011-07-20:/europython-2011/advanced-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Raymond Hettinger - 21 June 2011 in &amp;quot;Training Pizza
Margherita&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will work through a series of real-world examples, showing
how an understanding of the tools built into the Python interpreter or
included in the standard library can be combined to solve difficult
problems clearly and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Raymond Hettinger - 21 June 2011 in &amp;quot;Training Pizza
Margherita&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will work through a series of real-world examples, showing
how an understanding of the tools built into the Python interpreter or
included in the standard library can be combined to solve difficult
problems clearly and Pythonically. We will also discuss when and how to
reach beyond the standard library when needed to address difficult
algorithmic and optimization problems.&lt;/p&gt;
</content><category term="EuroPython 2011"></category><category term="optimization"></category><category term="tutorial"></category></entry><entry><title>Experiences making CPU-bound tasks run much faster</title><link href="https://pyvideo.org/europython-2011/experiences-making-cpu-bound-tasks-run-much-faste.html" rel="alternate"></link><published>2011-07-18T00:00:00+00:00</published><updated>2011-07-18T00:00:00+00:00</updated><author><name>Ian Ozsvald</name></author><id>tag:pyvideo.org,2011-07-18:/europython-2011/experiences-making-cpu-bound-tasks-run-much-faste.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Ian Ozsvald - 22 June 2011 in &amp;quot;Training Pizza
Margherita &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UPDATE - post-event I've created a &lt;a class="reference external" href="http://ianozsvald.com/2011/06/29/high-performance-python-tutorial-v0-1%20-from-my-4-hour-tutorial-at-europython-2011/"&gt;49 page PDF write-
up&lt;/a&gt;
which summarises the 4 hour tutorial&lt;/p&gt;
&lt;p&gt;As a long-time R&amp;amp;D consultant I'm often working to make slow,
experimental code run faster for tasks like physics simulation …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Ian Ozsvald - 22 June 2011 in &amp;quot;Training Pizza
Margherita &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UPDATE - post-event I've created a &lt;a class="reference external" href="http://ianozsvald.com/2011/06/29/high-performance-python-tutorial-v0-1%20-from-my-4-hour-tutorial-at-europython-2011/"&gt;49 page PDF write-
up&lt;/a&gt;
which summarises the 4 hour tutorial&lt;/p&gt;
&lt;p&gt;As a long-time R&amp;amp;D consultant I'm often working to make slow,
experimental code run faster for tasks like physics simulation, flood
modeling and natural language processing. Python allows a smooth
progression from rough-and-ready (but slow) algorithms through to finely
tuned tasks that efficiently use as much CPU power as you can bring to
bear. Speed-ups of 10-500* can be expected for the Mandelbrot code
we'll use.&lt;/p&gt;
&lt;p&gt;In this talk I'll cover a set of libraries that make CPU-bound tasks run
much faster. We'll begin with a look at profiling using RunSnakeRun and
line_profiler to identify our bottleneck. We'll take a look at slow
algorithms in Python and how they can run faster using numpy and
numexpr.&lt;/p&gt;
&lt;p&gt;Next we'll cover the use of multiprocessing to utilise multiple CPU
cores along with Cython or ShedSkin to easily use C code in a friendly
Python wrapper. Multiprocessing on a quad-core system can often provide
a 4* speed-up for the right tasks. Next parallelpython will let us run
our code on a network of machines.&lt;/p&gt;
&lt;p&gt;Finally we'll look at pyCUDA to utilise an NVIDIA GPU. CUDA can give the
best improvements for mathematical problems (over 100* on the right
tasks) but works on a narrower set of problems.&lt;/p&gt;
&lt;p&gt;How it'll work: The tutorial will be hands on, you'll be converting
example files from normal Python to faster variants using the tools
below. All of it is optional, you'll get the most benefit by having
everything installed. We'll work in groups and open discussion is
encouraged.&lt;/p&gt;
&lt;p&gt;NOTE - you are expected to have all these tools installed &lt;em&gt;before&lt;/em&gt; the
tutorial (if you don't, you might find it hard to follow what's going
on!).&lt;/p&gt;
&lt;p&gt;I'll be using Python 2.7.1 on a Macbook (Snow Leopard). All of these
tools run on Windows and Linux, as long as your versions are fairly
recent everything should run just fine.&lt;/p&gt;
&lt;p&gt;My versions (roughly ordered by importance):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python 2.7.1&lt;/li&gt;
&lt;li&gt;RunSnakeRun 2.0.1b6 (with wxPython 2.8.12.0 Unicode)&lt;/li&gt;
&lt;li&gt;line_profiler (1.0b2)&lt;/li&gt;
&lt;li&gt;Cython 0.14.1&lt;/li&gt;
&lt;li&gt;ShedSkin 0.7.1&lt;/li&gt;
&lt;li&gt;numpy 1.5.1&lt;/li&gt;
&lt;li&gt;numexpr 1.4.2&lt;/li&gt;
&lt;li&gt;ParallelPython 1.6.1&lt;/li&gt;
&lt;li&gt;pyCUDA HEAD from git as of 14th June 2011 (with CUDA 4.0 drivers)&lt;/li&gt;
&lt;li&gt;PyPy 1.5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some background reading:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ianozsvald.com/2010/07/14/22937-faster-python-math-using-pycuda/"&gt;http://ianozsvald.com/2010/07/14/22937-faster-python-math-using-pycuda/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ianozsvald.com/2008/11/17/making-python-math-196-faster-with-shedskin/"&gt;http://ianozsvald.com/2008/11/17/making-python-math-196-faster-with-shedskin/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="EuroPython 2011"></category><category term="cython"></category><category term="git"></category><category term="multiprocessing"></category><category term="network"></category><category term="numpy"></category><category term="nvidia"></category><category term="profiling"></category><category term="pycuda"></category><category term="runsnakerun"></category><category term="tutorial"></category><category term="windows"></category><category term="wxpython"></category></entry><entry><title>Programmazione MapReduce in Python con Pydoop</title><link href="https://pyvideo.org/europython-2011/programmazione-mapreduce-in-python-con-pydoop.html" rel="alternate"></link><published>2011-07-13T00:00:00+00:00</published><updated>2011-07-13T00:00:00+00:00</updated><author><name>Simone Leo</name></author><id>tag:pyvideo.org,2011-07-13:/europython-2011/programmazione-mapreduce-in-python-con-pydoop.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Simone Leo - 23 June 2011 in &amp;quot;Track Italiana Big Mac &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hadoop è la principale implementazione open source di MapReduce, il
paradigma di calcolo distribuito su larga scala di Google. L'API nativa
di Hadoop è in Java e le opzioni built-in per la programmazione in
Python - Streaming …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Simone Leo - 23 June 2011 in &amp;quot;Track Italiana Big Mac &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hadoop è la principale implementazione open source di MapReduce, il
paradigma di calcolo distribuito su larga scala di Google. L'API nativa
di Hadoop è in Java e le opzioni built-in per la programmazione in
Python - Streaming e Jython - presentano diversi inconvenienti: la prima
consente di accedere solo a un piccolo sottoinsieme delle funzionalità
di Hadoop, mentre la seconda ha tutte le limitazioni di Jython rispetto
a CPython.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pydoop.sourceforge.net"&gt;Pydoop&lt;/a&gt; è un'API per Hadoop che rende
disponibile buona parte delle funzionalità di Hadoop al programmatore
Python, consentendo lo sviluppo in CPython. I suoi moduli di base sono
wrapper Boost.Python per l'interfaccia C/C++ di Hadoop.&lt;/p&gt;
&lt;p&gt;Il talk consiste in un tutorial su MapReduce/Hadoop e in una
presentazione dell'API Pydoop, con l'obiettivo principale di avvicinare
le community di Hadoop e Python. Può essere utile, anche se non
strettamente necessaria, una conoscenza di base della programmazione
distribuita.&lt;/p&gt;
</content><category term="EuroPython 2011"></category><category term="community"></category><category term="hadoop"></category><category term="java"></category><category term="jython"></category><category term="mapreduce"></category><category term="python,"></category><category term="tutorial"></category></entry><entry><title>Python MapReduce Programming with Pydoop</title><link href="https://pyvideo.org/europython-2011/python-mapreduce-programming-with-pydoop.html" rel="alternate"></link><published>2011-07-13T00:00:00+00:00</published><updated>2011-07-13T00:00:00+00:00</updated><author><name>Simone Leo</name></author><id>tag:pyvideo.org,2011-07-13:/europython-2011/python-mapreduce-programming-with-pydoop.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Simone Leo - 24 June 2011 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hadoop is the leading open source implementation of MapReduce, Google's
large scale distributed computing paradigm. Hadoop's native API is in
Java, and its built-in options for Python programming - Streaming and
Jython - have several drawbacks: the former allows to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Simone Leo - 24 June 2011 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hadoop is the leading open source implementation of MapReduce, Google's
large scale distributed computing paradigm. Hadoop's native API is in
Java, and its built-in options for Python programming - Streaming and
Jython - have several drawbacks: the former allows to access only a
small subset of Hadoop's features, while the latter carries with it all
of the limitations of Jython with respect to CPython.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pydoop.sourceforge.net"&gt;Pydoop&lt;/a&gt; is an API for Hadoop that
makes most of its features available to Python programmers while
allowing CPython development. Its core consists of Boost.Python wrappers
for Hadoop's C/C++ interface.&lt;/p&gt;
&lt;p&gt;The talk consists of a MapReduce/Hadoop tutorial and a presentation of
the Pydoop API, with the main goal of bridging the gap between the
Hadoop and Python communities. A basic knowledge of distributed
programming is helpful but not strictly required.&lt;/p&gt;
</content><category term="EuroPython 2011"></category><category term="api"></category><category term="cpython"></category><category term="distributed"></category><category term="hadoop"></category><category term="jython"></category><category term="mapreduce"></category><category term="tutorial"></category></entry><entry><title>Getting started with Plone CMS development - Part 1</title><link href="https://pyvideo.org/europython-2013/getting-started-with-plone-cms-development-part-1.html" rel="alternate"></link><published>2013-07-05T00:00:00+00:00</published><updated>2013-07-05T00:00:00+00:00</updated><author><name>Nejc Zupan</name></author><id>tag:pyvideo.org,2013-07-05:/europython-2013/getting-started-with-plone-cms-development-part-1.html</id><content type="html"></content><category term="EuroPython 2013"></category><category term="scm"></category><category term="web"></category><category term="continuous-integration"></category><category term="testing"></category><category term="buildout"></category><category term="javascript"></category><category term="framework"></category><category term="html"></category><category term="zope"></category><category term="best-practices"></category><category term="CMS"></category><category term="plone"></category><category term="tutorial"></category></entry><entry><title>Getting started with Plone CMS development - Part 2</title><link href="https://pyvideo.org/europython-2013/getting-started-with-plone-cms-development-part-2.html" rel="alternate"></link><published>2013-07-05T00:00:00+00:00</published><updated>2013-07-05T00:00:00+00:00</updated><author><name>Nejc Zupan</name></author><id>tag:pyvideo.org,2013-07-05:/europython-2013/getting-started-with-plone-cms-development-part-2.html</id><content type="html"></content><category term="EuroPython 2013"></category><category term="scm"></category><category term="web"></category><category term="continuous-integration"></category><category term="testing"></category><category term="buildout"></category><category term="javascript"></category><category term="framework"></category><category term="html"></category><category term="zope"></category><category term="best-practices"></category><category term="CMS"></category><category term="plone"></category><category term="tutorial"></category></entry><entry><title>Sink or swim: 5 life jackets to throw to New Coders</title><link href="https://pyvideo.org/europython-2013/sink-or-swim-5-life-jackets-to-throw-to-new-coders.html" rel="alternate"></link><published>2013-07-02T00:00:00+00:00</published><updated>2013-07-02T00:00:00+00:00</updated><author><name>Lynn Root</name></author><id>tag:pyvideo.org,2013-07-02:/europython-2013/sink-or-swim-5-life-jackets-to-throw-to-new-coders.html</id><content type="html"></content><category term="EuroPython 2013"></category><category term="tutorial"></category></entry><entry><title>Keras</title><link href="https://pyvideo.org/euroscipy-2017/keras.html" rel="alternate"></link><published>2017-08-31T00:00:00+00:00</published><updated>2017-08-31T00:00:00+00:00</updated><author><name>Valerio Maggio</name></author><id>tag:pyvideo.org,2017-08-31:/euroscipy-2017/keras.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Goal of the Tutorial&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Introduce&lt;/strong&gt; main features of Keras APIs to build Neural Networks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Learn&lt;/strong&gt; how to implement simple and complex Deep Neural Networks
Architectures using Keras.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Discover&lt;/strong&gt; Keras Implementation and Internals.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: examples and hands-on exercises will be provided along the
way.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;em&gt;Multi-layer Fully Connected Networks (and the …&lt;/em&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Goal of the Tutorial&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Introduce&lt;/strong&gt; main features of Keras APIs to build Neural Networks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Learn&lt;/strong&gt; how to implement simple and complex Deep Neural Networks
Architectures using Keras.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Discover&lt;/strong&gt; Keras Implementation and Internals.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: examples and hands-on exercises will be provided along the
way.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;em&gt;Multi-layer Fully Connected Networks (and the ``backends``)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Bottleneck features and Embeddings&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Convolutional Networks&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Transfer Learning and Fine Tuning&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Residual Networks&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Recursive Neural Networks&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;[Variational] AutoEncoders and Adversarials&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Multi-Modal Networks&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Custom Layers and Optimisers&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Interactive Networks and Callbacks&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="description"&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Multi-layer Fully Connected Networks&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;In this notebook we will learn the basic building blocks of Keras
APIs to create deep neural networks. We will learn how to use the
&lt;tt class="docutils literal"&gt;Sequential&lt;/tt&gt; object as well as &lt;em&gt;Functional&lt;/em&gt; and &lt;tt class="docutils literal"&gt;keras.backend&lt;/tt&gt;
APIs. First examples of MLP and Fully Connected Networks will be
presented.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Bootleneck Features and Embeddings&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;After having played a bit with Keras APIs for building networks, we
start learn how to inspect network's internals. In details, we will
learn (1) how to iterate over layers; (2) how to initialise and get
weights; (3) how to extract bottleneck features and create
embeddings.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Convolutional Networks&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;This notebook will teach how to build CNN (Convolutional Neural
Networks). Convolutional, Pooling, DropOut layers will be
presented, along with clear description on how to properly apply
convolutions on images, depending on &lt;tt class="docutils literal"&gt;image_dim_ordering&lt;/tt&gt;
setting.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Transfer Learning and Fine Tuning&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;The Keras implementation of some famous Deep Convolutional Networks
will be presented (i.e. &lt;tt class="docutils literal"&gt;keras.applications.vgg16&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;keras.applications.vgg19&lt;/tt&gt;, and
&lt;tt class="docutils literal"&gt;keras.applications.inceptionv3&lt;/tt&gt;). We will learn how to leverage
on these models for transfer learning and fine tuning using Keras
&lt;tt class="docutils literal"&gt;Layer&lt;/tt&gt; APIs.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Residual Networks&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;In this notebook, Residual Networks will be presented. In
particular, the Keras implementation of the residual network
topology will be explained. Then, ResNet
(&lt;tt class="docutils literal"&gt;keras.applications.resnet50&lt;/tt&gt;) Keras implementation will be
detailed.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Recurrent Neural Networks&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;Recurrent Neural Networks (i.e. LSTM and GRU) are the main topic of
this notebook. The Keras implementation of these two types of
network will be presented along with working examples combining
Word Embeddings and Convolutional Layers (i.e.
&lt;tt class="docutils literal"&gt;keras.layers.convolutional_recurrent&lt;/tt&gt;)&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;[Variational] AutoEncoders and Adversarials&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;This notebook will be devoted to show how to implement AutoEncoders
in Keras. In particular, the implementation of Stacked
AutoEncoders, Variational AutoEncoders and Generative Adversarial
Networks will be presented.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Multi-Modal Networks&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;Multi-Input and Multi-task Networks are the fundamental steps for
advanced deep networks. This notebook will provide implementation
recipes and examples.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Custom Layers and Optimisers&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;This notebook will provide details and examples of Keras internals.
In particular, we will learn how to implement a Custom Layer in
Keras, and custom Activation functions, and custom optimisers.&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;&lt;em&gt;Interactive Networks and Callbacks&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;In this last notebook, &lt;tt class="docutils literal"&gt;keras.callbacks&lt;/tt&gt; will be explained.
Callbacks to track and monitor network performances during the
training process will be built and integrated inside a web app.
Finally, an example of &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;keras-js&lt;/span&gt;&lt;/tt&gt; will be described, detailing
functions in Keras to export models and weights (in &lt;tt class="docutils literal"&gt;json&lt;/tt&gt; and
&lt;tt class="docutils literal"&gt;hdf5&lt;/tt&gt; formats).&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="requirements"&gt;
&lt;h4&gt;Requirements&lt;/h4&gt;
&lt;p&gt;This tutorial requires the following packages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;Python version 3.5.x&lt;/div&gt;
&lt;div class="line"&gt;- Python 3.4 is fine as well&lt;/div&gt;
&lt;div class="line"&gt;- likely Python 2.7 would also be fine, but &lt;em&gt;who knows&lt;/em&gt;? :P&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;numpy&lt;/tt&gt; version 1.10 or later: &lt;a class="reference external" href="http://www.numpy.org/"&gt;http://www.numpy.org/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;scipy&lt;/tt&gt; version 0.16 or later: &lt;a class="reference external" href="http://www.scipy.org/"&gt;http://www.scipy.org/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;matplotlib&lt;/tt&gt; version 1.4 or later: &lt;a class="reference external" href="http://matplotlib.org/"&gt;http://matplotlib.org/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;pandas&lt;/tt&gt; version 0.16 or later: &lt;a class="reference external" href="http://pandas.pydata.org"&gt;http://pandas.pydata.org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;scikit-learn&lt;/span&gt;&lt;/tt&gt; version 0.15 or later: &lt;a class="reference external" href="http://scikit-learn.org"&gt;http://scikit-learn.org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;keras&lt;/tt&gt; version 1.0 or later: &lt;a class="reference external" href="http://keras.io"&gt;http://keras.io&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;tensorflow&lt;/tt&gt; version 0.9 or later: &lt;a class="reference external" href="https://www.tensorflow.org"&gt;https://www.tensorflow.org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt;/&lt;tt class="docutils literal"&gt;jupyter&lt;/tt&gt; version 4.0 or later, with notebook support&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Optional but recommended):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;pyyaml&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;hdf5&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;h5py&lt;/tt&gt; (required if you use model saving/loading
functions in keras)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The easiest way to get (most) these is to use an all-in-one installer
such as &lt;a class="reference external" href="http://www.continuum.io/downloads"&gt;Anaconda&lt;/a&gt; from Continuum.
These are available for multiple architectures.&lt;/p&gt;
&lt;/div&gt;
</content><category term="EuroSciPy 2017"></category><category term="tutorial"></category></entry><entry><title>Matplotlib</title><link href="https://pyvideo.org/euroscipy-2017/matplotlib.html" rel="alternate"></link><published>2017-08-31T00:00:00+00:00</published><updated>2017-08-31T00:00:00+00:00</updated><author><name>Mike Müller</name></author><id>tag:pyvideo.org,2017-08-31:/euroscipy-2017/matplotlib.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is for Python users who would like to create nice 2d plots
with Python.&lt;/p&gt;
&lt;div class="section" id="audience-level"&gt;
&lt;h4&gt;Audience Level&lt;/h4&gt;
&lt;p&gt;Students should have a working knowledge of Python. NumPy knowledge is
helpful but not required.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prerequisites"&gt;
&lt;h4&gt;Prerequisites&lt;/h4&gt;
&lt;p&gt;Please bring your laptop with the operating system of your choice
(Linux, Mac OS X …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is for Python users who would like to create nice 2d plots
with Python.&lt;/p&gt;
&lt;div class="section" id="audience-level"&gt;
&lt;h4&gt;Audience Level&lt;/h4&gt;
&lt;p&gt;Students should have a working knowledge of Python. NumPy knowledge is
helpful but not required.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prerequisites"&gt;
&lt;h4&gt;Prerequisites&lt;/h4&gt;
&lt;p&gt;Please bring your laptop with the operating system of your choice
(Linux, Mac OS X, Windows). In addition to Python 3.6 (2.7 works if
really want to use it), we need:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a current versions of matplotlib (&lt;a class="reference external" href="http://matplotlib.sourceforge.net"&gt;http://matplotlib.sourceforge.net&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Jupyter (&lt;a class="reference external" href="http://jupyter.org/"&gt;http://jupyter.org/&lt;/a&gt;) and&lt;/li&gt;
&lt;li&gt;NumPy (&lt;a class="reference external" href="http://numpy.scipy.org"&gt;http://numpy.scipy.org&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you use Anaconda you should have all requirements installed. If you
use a new &lt;tt class="docutils literal"&gt;conda&lt;/tt&gt; environment install with:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;conda install jupyter numpy matplotlib&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The same goes for &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;pip install jupyter numpy matplotlib&lt;/tt&gt;&lt;/p&gt;
&lt;div class="section" id="method"&gt;
&lt;h5&gt;Method&lt;/h5&gt;
&lt;p&gt;This is a hands-on course. Students are strongly encouraged to work
along with the trainer at the interactive prompt. There will be
exercises the students need to do on their own. Experience shows that
this active involvement is essential for an effective learning.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="content"&gt;
&lt;h5&gt;Content&lt;/h5&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The library matplotlib provides many different types of diagrams from
within Python with only few lines of code. Examples are used to
exercise the use of this library. The tutorial provides an overview
how to create plots . Using matplotlib from Jupyter Notebook provides
an interactive environment for fast testing of ideas. We will be using
this for most of the tutorial.&lt;/div&gt;
&lt;div class="line"&gt;With a simple plot we learn how to add axis labels, titles and a
legend. The GUI offers zooming, panning, changing of plot sizes and
other interactive ways to modify the plot. We will use Python to
change properties of existing plots such as line colors, marker
symbols, or line styles. There are several ways how to place text on
plots. You will learn about the different coordinate systems relative
to the plot, the canvas or the figure. Another topic are ticks, where
to put them and how to format them to achieve publication-quality
plots. The concepts of figures, subplots, and axes and how they relate
to each other will be explained with examples.&lt;/div&gt;
&lt;div class="line"&gt;Matplotlib offers many different types of plots. The tutorial
introduces several of them with an example. A more advanced topic will
be creating your own plot types. Finally, we will create a small
animation to explore the possibilities to visualize changes.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="outline"&gt;
&lt;h5&gt;Outline&lt;/h5&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Jupyter&lt;/li&gt;
&lt;li&gt;Simple plots&lt;/li&gt;
&lt;li&gt;Properties&lt;/li&gt;
&lt;li&gt;Text&lt;/li&gt;
&lt;li&gt;Ticks&lt;/li&gt;
&lt;li&gt;Figures, subplots, and axes&lt;/li&gt;
&lt;li&gt;Other types of plots&lt;/li&gt;
&lt;li&gt;The class library&lt;/li&gt;
&lt;li&gt;Creating New Plot Types&lt;/li&gt;
&lt;li&gt;Animations&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="audience-level-novice"&gt;
&lt;h6&gt;Audience level: Novice&lt;/h6&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="EuroSciPy 2017"></category><category term="tutorial"></category></entry><entry><title>NetworkX</title><link href="https://pyvideo.org/euroscipy-2017/networkx.html" rel="alternate"></link><published>2017-08-31T00:00:00+00:00</published><updated>2017-08-31T00:00:00+00:00</updated><author><name>Mridul Seth</name></author><id>tag:pyvideo.org,2017-08-31:/euroscipy-2017/networkx.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;working with graphs using python and the NetworkX package. This will be
a hands on tutorial and will require writing a lot of code snippets. The
participants should be comfortable with basic python (loops,
dictionaries, lists) and some(minimal) experience with working inside a
jupyter notebook.&lt;/p&gt;
&lt;p&gt;Broadly the tutorial …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;working with graphs using python and the NetworkX package. This will be
a hands on tutorial and will require writing a lot of code snippets. The
participants should be comfortable with basic python (loops,
dictionaries, lists) and some(minimal) experience with working inside a
jupyter notebook.&lt;/p&gt;
&lt;p&gt;Broadly the tutorial is divided into four parts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Part A (20 mins)&lt;ul&gt;
&lt;li&gt;Basics of graph theory and various examples of networks in real life.&lt;/li&gt;
&lt;li&gt;Introduction to the NetworkX API and various data structures&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Part B (30 mins)&lt;ul&gt;
&lt;li&gt;Work with small synthetic networks (generated using random graph
generators) to understand the structure of the network.&lt;/li&gt;
&lt;li&gt;Analyse the network and study various properties of the network like
centrality, connectivity, shortest paths, cliques.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Part C (30 mins)&lt;ul&gt;
&lt;li&gt;We'll use the various techniques we have learnt so far and model a
network out of real world data like co-authorship network(
&lt;a class="reference external" href="http://www-personal.umich.edu/~mejn/netdata/cond-mat-2005.zip"&gt;http://www-personal.umich.edu/~mejn/netdata/cond-mat-2005.zip&lt;/a&gt;) and
study the structure and properties of this network.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Part D (10 mins)&lt;ul&gt;
&lt;li&gt;We'll work on some interesting problems like temporal networks and
visualisation of networks. - We'll model the US Airport Network with
respect to time and will try to make sense out of it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By the end of the tutorial everyone should be comfortable with hacking
on the NetworkX API, modelling data as networks and basic analysis on
networks using python.&lt;/p&gt;
</content><category term="EuroSciPy 2017"></category><category term="tutorial"></category></entry><entry><title>Pandas</title><link href="https://pyvideo.org/euroscipy-2017/pandas.html" rel="alternate"></link><published>2017-08-31T00:00:00+00:00</published><updated>2017-08-31T00:00:00+00:00</updated><author><name>Joris Van den Bossche</name></author><id>tag:pyvideo.org,2017-08-31:/euroscipy-2017/pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is nowadays the library of choice for manipulating and analysing structured data, providing high-performance, easy-to-use data structures and data analysis tools.&lt;/p&gt;
&lt;p&gt;This hands-on tutorial will give a basic introduction to pandas, guide you through the different data structures and its manipulation, explaining the the key concepts and defining …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is nowadays the library of choice for manipulating and analysing structured data, providing high-performance, easy-to-use data structures and data analysis tools.&lt;/p&gt;
&lt;p&gt;This hands-on tutorial will give a basic introduction to pandas, guide you through the different data structures and its manipulation, explaining the the key concepts and defining features. No prior knowledge about pandas is required.&lt;/p&gt;
</content><category term="EuroSciPy 2017"></category><category term="tutorial"></category><category term="pandas"></category></entry><entry><title>Scikit-image</title><link href="https://pyvideo.org/euroscipy-2017/scikit-image.html" rel="alternate"></link><published>2017-08-31T00:00:00+00:00</published><updated>2017-08-31T00:00:00+00:00</updated><author><name>Emmanuelle Gouillart</name></author><id>tag:pyvideo.org,2017-08-31:/euroscipy-2017/scikit-image.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutorial materials can be found on
&lt;a class="reference external" href="https://github.com/emmanuelle/scikit-image-euroscipy2017"&gt;https://github.com/emmanuelle/scikit-image-euroscipy2017&lt;/a&gt;: you can
download a zip on
&lt;a class="reference external" href="https://github.com/emmanuelle/scikit-image-euroscipy2017/archive/master.zip"&gt;https://github.com/emmanuelle/scikit-image-euroscipy2017/archive/master.zip&lt;/a&gt;.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;If you installed Anaconda or Canopy, you already have scikit-image
installed.&lt;/div&gt;
&lt;div class="line"&gt;Otherwise, see &lt;a class="reference external" href="http://scikit-image.org/docs/stable/install.html"&gt;http://scikit-image.org/docs/stable/install.html&lt;/a&gt; for
installation instructions.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;scikit-image …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutorial materials can be found on
&lt;a class="reference external" href="https://github.com/emmanuelle/scikit-image-euroscipy2017"&gt;https://github.com/emmanuelle/scikit-image-euroscipy2017&lt;/a&gt;: you can
download a zip on
&lt;a class="reference external" href="https://github.com/emmanuelle/scikit-image-euroscipy2017/archive/master.zip"&gt;https://github.com/emmanuelle/scikit-image-euroscipy2017/archive/master.zip&lt;/a&gt;.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;If you installed Anaconda or Canopy, you already have scikit-image
installed.&lt;/div&gt;
&lt;div class="line"&gt;Otherwise, see &lt;a class="reference external" href="http://scikit-image.org/docs/stable/install.html"&gt;http://scikit-image.org/docs/stable/install.html&lt;/a&gt; for
installation instructions.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;scikit-image version 0.12 or 0.13 is preferable.&lt;/p&gt;
&lt;p&gt;Test code&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt;&amp;gt; from skimage import io, data
&amp;gt;&amp;gt;&amp;gt; camera = data.camera()
&amp;gt;&amp;gt;&amp;gt; io.imshow(camera)
&lt;/pre&gt;
</content><category term="EuroSciPy 2017"></category><category term="tutorial"></category><category term="scikit-image"></category></entry><entry><title>SymPy</title><link href="https://pyvideo.org/euroscipy-2017/sympy.html" rel="alternate"></link><published>2017-08-31T00:00:00+00:00</published><updated>2017-08-31T00:00:00+00:00</updated><author><name>Sartaj Singh</name></author><id>tag:pyvideo.org,2017-08-31:/euroscipy-2017/sympy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To follow the SymPy tutorial, please go to
&lt;a class="reference external" href="https://github.com/leosartaj/euroscipy-sympy-tutorial"&gt;https://github.com/leosartaj/euroscipy-sympy-tutorial&lt;/a&gt; This link contains
all the notebooks and instructions to install the required software.
Additionally run &lt;tt class="docutils literal"&gt;python test_installation.py&lt;/tt&gt; to check your
installation. I will be updating the notebooks, so please pull the
latest copy before the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To follow the SymPy tutorial, please go to
&lt;a class="reference external" href="https://github.com/leosartaj/euroscipy-sympy-tutorial"&gt;https://github.com/leosartaj/euroscipy-sympy-tutorial&lt;/a&gt; This link contains
all the notebooks and instructions to install the required software.
Additionally run &lt;tt class="docutils literal"&gt;python test_installation.py&lt;/tt&gt; to check your
installation. I will be updating the notebooks, so please pull the
latest copy before the tutorial.&lt;/p&gt;
</content><category term="EuroSciPy 2017"></category><category term="tutorial"></category><category term="simpy"></category></entry><entry><title>Advanced data wrangling with pandas</title><link href="https://pyvideo.org/euroscipy-2017/advanced-data-wrangling-with-pandas.html" rel="alternate"></link><published>2017-08-30T00:00:00+00:00</published><updated>2017-08-30T00:00:00+00:00</updated><author><name>Joris Van den Bossche</name></author><id>tag:pyvideo.org,2017-08-30:/euroscipy-2017/advanced-data-wrangling-with-pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is nowadays the library of choice for manipulating and analysing structured data, providing high-performance, easy-to-use data structures and data analysis tools.&lt;/p&gt;
&lt;p&gt;In this hands-on tutorial on using pandas for data analysis, you will be guided through some of the powerful methods and concepts in pandas, including time series …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is nowadays the library of choice for manipulating and analysing structured data, providing high-performance, easy-to-use data structures and data analysis tools.&lt;/p&gt;
&lt;p&gt;In this hands-on tutorial on using pandas for data analysis, you will be guided through some of the powerful methods and concepts in pandas, including time series manipulation (resampling and rolling operations), groupby operations, reshaping with stack/unstack/pivot, …&lt;/p&gt;
&lt;p&gt;Basic familiarity with pandas data structures (Series/DataFrame) is assumed.&lt;/p&gt;
</content><category term="EuroSciPy 2017"></category><category term="tutorial"></category></entry><entry><title>Scikit-learn (1/2)</title><link href="https://pyvideo.org/euroscipy-2017/scikit-learn-12.html" rel="alternate"></link><published>2017-08-30T00:00:00+00:00</published><updated>2017-08-30T00:00:00+00:00</updated><author><name>Olivier Grisel</name></author><id>tag:pyvideo.org,2017-08-30:/euroscipy-2017/scikit-learn-12.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Please install the following packages (either with pip or conda):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;scikit-learn 0.19.0 (along with numpy and scipy as dependencies)&lt;/li&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;li&gt;matplotlib&lt;/li&gt;
&lt;li&gt;jupyter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check the scikit-learn version with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -c &amp;quot;import sklearn; print(sklearn.__version__)&amp;quot;
&lt;/pre&gt;
&lt;p&gt;If you have an old version you can upgrade to scikit-learn 0.19 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Please install the following packages (either with pip or conda):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;scikit-learn 0.19.0 (along with numpy and scipy as dependencies)&lt;/li&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;li&gt;matplotlib&lt;/li&gt;
&lt;li&gt;jupyter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check the scikit-learn version with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -c &amp;quot;import sklearn; print(sklearn.__version__)&amp;quot;
&lt;/pre&gt;
&lt;p&gt;If you have an old version you can upgrade to scikit-learn 0.19.0 with
&lt;tt class="docutils literal"&gt;conda update &lt;span class="pre"&gt;scikit-learn&lt;/span&gt;&lt;/tt&gt; if you use conda or
&lt;tt class="docutils literal"&gt;pip install &lt;span class="pre"&gt;-U&lt;/span&gt; &lt;span class="pre"&gt;scikit-learn&lt;/span&gt;&lt;/tt&gt; otherwise.&lt;/p&gt;
&lt;p&gt;We recommend using Python 3.6 but the tutorial material should also work
with older Python versions (including Python 2.7, but please please
consider using Python 3.6 instead).&lt;/p&gt;
&lt;p&gt;In addition you can also install
&lt;a class="reference external" href="https://scikit-optimize.github.io/"&gt;scikit-optimize&lt;/a&gt; (if you use a
conda environment, you need to first &lt;tt class="docutils literal"&gt;conda install pip&lt;/tt&gt; and then
&lt;tt class="docutils literal"&gt;pip install &lt;span class="pre"&gt;scikit-optimize&lt;/span&gt;&lt;/tt&gt;) in that environment. scikit-optimize
has a dependency on scikit-garden which does not yet provide any binary
package and can fail to install automatically from source on systems
that lack a properly configured C/C++ compiler. If you have trouble
installing scikit-garden and scikit-optimize, don't worry you will be
able to follow those sections on the video projector while still being
able to run the exercises of the other sections that only require
scikit-learn.&lt;/p&gt;
&lt;p&gt;The notebooks will be published on
&lt;a class="reference external" href="https://github.com/ogrisel/euroscipy_2017_sklearn"&gt;https://github.com/ogrisel/euroscipy_2017_sklearn&lt;/a&gt; (please update on
Sunday evening or at the beginning of the tutorial assuming wifi is good
enough).&lt;/p&gt;
</content><category term="EuroSciPy 2017"></category><category term="tutorial"></category><category term="scikit-learn"></category></entry><entry><title>Scikit-learn (2/2)</title><link href="https://pyvideo.org/euroscipy-2017/scikit-learn-22.html" rel="alternate"></link><published>2017-08-30T00:00:00+00:00</published><updated>2017-08-30T00:00:00+00:00</updated><author><name>Olivier Grisel</name></author><id>tag:pyvideo.org,2017-08-30:/euroscipy-2017/scikit-learn-22.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Please install the following packages (either with pip or conda):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;scikit-learn 0.19.0 (along with numpy and scipy as dependencies)&lt;/li&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;li&gt;matplotlib&lt;/li&gt;
&lt;li&gt;jupyter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check the scikit-learn version with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -c &amp;quot;import sklearn; print(sklearn.__version__)&amp;quot;
&lt;/pre&gt;
&lt;p&gt;If you have an old version you can upgrade to scikit-learn 0.19 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Please install the following packages (either with pip or conda):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;scikit-learn 0.19.0 (along with numpy and scipy as dependencies)&lt;/li&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;li&gt;matplotlib&lt;/li&gt;
&lt;li&gt;jupyter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check the scikit-learn version with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -c &amp;quot;import sklearn; print(sklearn.__version__)&amp;quot;
&lt;/pre&gt;
&lt;p&gt;If you have an old version you can upgrade to scikit-learn 0.19.0 with
&lt;tt class="docutils literal"&gt;conda update &lt;span class="pre"&gt;scikit-learn&lt;/span&gt;&lt;/tt&gt; if you use conda or
&lt;tt class="docutils literal"&gt;pip install &lt;span class="pre"&gt;-U&lt;/span&gt; &lt;span class="pre"&gt;scikit-learn&lt;/span&gt;&lt;/tt&gt; otherwise.&lt;/p&gt;
&lt;p&gt;We recommend using Python 3.6 but the tutorial material should also work
with older Python versions (including Python 2.7, but please please
consider using Python 3.6 instead).&lt;/p&gt;
&lt;p&gt;In addition you can also install
&lt;a class="reference external" href="https://scikit-optimize.github.io/"&gt;scikit-optimize&lt;/a&gt; (if you use a
conda environment, you need to first &lt;tt class="docutils literal"&gt;conda install pip&lt;/tt&gt; and then
&lt;tt class="docutils literal"&gt;pip install &lt;span class="pre"&gt;scikit-optimize&lt;/span&gt;&lt;/tt&gt;) in that environment. scikit-optimize
has a dependency on scikit-garden which does not yet provide any binary
package and can fail to install automatically from source on systems
that lack a properly configured C/C++ compiler. If you have trouble
installing scikit-garden and scikit-optimize, don't worry you will be
able to follow those sections on the video projector while still being
able to run the exercises of the other sections that only require
scikit-learn.&lt;/p&gt;
&lt;p&gt;The notebooks will be published on
&lt;a class="reference external" href="https://github.com/ogrisel/euroscipy_2017_sklearn"&gt;https://github.com/ogrisel/euroscipy_2017_sklearn&lt;/a&gt; (please update on
Sunday evening or at the beginning of the tutorial assuming wifi is good
enough).&lt;/p&gt;
</content><category term="EuroSciPy 2017"></category><category term="tutorial"></category><category term="scikit-learn"></category></entry><entry><title>Introducción a Python Científico</title><link href="https://pyvideo.org/pycon-ar-2013/introduccion-a-python-cientifico.html" rel="alternate"></link><published>2013-10-24T00:00:00+00:00</published><updated>2013-10-24T00:00:00+00:00</updated><author><name>Damián Avila</name></author><id>tag:pyvideo.org,2013-10-24:/pycon-ar-2013/introduccion-a-python-cientifico.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En los últimos años, Python se ha popularizado en múltiples áreas temáticas, destacándose el auge de su utilización en el &amp;quot;ambiente científico&amp;quot;, que se debe, principalmente, al ajuste entre las características diferenciales que provee el lenguaje y las necesidades del científico en el modelado de sistemas físicos, químicos y …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En los últimos años, Python se ha popularizado en múltiples áreas temáticas, destacándose el auge de su utilización en el &amp;quot;ambiente científico&amp;quot;, que se debe, principalmente, al ajuste entre las características diferenciales que provee el lenguaje y las necesidades del científico en el modelado de sistemas físicos, químicos y biológicos, entre otros. El objetivo de esta charla es introducir las herramientas disponibles para la realización de las &amp;quot;tareas científicas&amp;quot;: IPython, Numpy, Scipy, Matplotlib, detallando sus principales características, ventajas y desventajas, así como la integración de dichas herramientas para la construcción de modelos en múltiples áreas del conocimiento.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/DKnh/"&gt;http://amara.org/v/DKnh/&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon Ar 2013"></category><category term="tutorial"></category></entry><entry><title>PyConAU 2010: App Engine 101</title><link href="https://pyvideo.org/pycon-au-2010/pyconau-2010--app-engine-101.html" rel="alternate"></link><published>2010-06-26T00:00:00+00:00</published><updated>2010-06-26T00:00:00+00:00</updated><author><name>Brian Quinlan</name></author><id>tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--app-engine-101.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;App Engine 101&lt;/p&gt;
&lt;p&gt;Presented by Brian K Quinlan (Google)&lt;/p&gt;
&lt;p&gt;App Engine lets you run your Python web applications on Google's
infrastructure.&lt;/p&gt;
&lt;p&gt;This tutorial will provide an overview on how to create, configure and
deploy applications on App Engine using a simple (but useful!) example
application.&lt;/p&gt;
</content><category term="PyCon AU 2010"></category><category term="appengine"></category><category term="gae"></category><category term="pyconau"></category><category term="pyconau2010"></category><category term="tutorial"></category><category term="web"></category></entry><entry><title>How to maintain big app stacks without losing your mind</title><link href="https://pyvideo.org/pycon-au-2011/how-to-maintain-big-app-stacks-without-losing-you.html" rel="alternate"></link><published>2011-08-22T00:00:00+00:00</published><updated>2011-08-22T00:00:00+00:00</updated><author><name>Dylan Jay</name></author><id>tag:pyvideo.org,2011-08-22:/pycon-au-2011/how-to-maintain-big-app-stacks-without-losing-you.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;zc.buildout is a powerful build/configure/deployment tool for creating
applications from multiple parts, some not python. It's perfect for
sharing a development environment or deploy applications to many hosts.
This tutorial will cover basic concepts, similarity to other tools such
as virtual-env, puppet etc as well as …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;zc.buildout is a powerful build/configure/deployment tool for creating
applications from multiple parts, some not python. It's perfect for
sharing a development environment or deploy applications to many hosts.
This tutorial will cover basic concepts, similarity to other tools such
as virtual-env, puppet etc as well as practical examples. zc.buildout
has successful been used with web applications such as Plone, django and
pyramid.&lt;/p&gt;
</content><category term="PyCon AU 2011"></category><category term="deploy"></category><category term="django"></category><category term="puppet"></category><category term="tutorial"></category><category term="web"></category><category term="zc.buildout"></category></entry><entry><title>Pyramid: Lighter, faster, better web apps</title><link href="https://pyvideo.org/pycon-au-2011/pyramid-lighter-faster-better-web-apps.html" rel="alternate"></link><published>2011-08-22T00:00:00+00:00</published><updated>2011-08-22T00:00:00+00:00</updated><author><name>Dylan Jay</name></author><id>tag:pyvideo.org,2011-08-22:/pycon-au-2011/pyramid-lighter-faster-better-web-apps.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Introduction to the Pyramid, the new web framework taking the python
world by storm. This tutorial will cover the basics of a hello world app
and cover some of the advanced features of pyramid that give it it's
power such as traversal. Pyramid is part of the pylons project …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Introduction to the Pyramid, the new web framework taking the python
world by storm. This tutorial will cover the basics of a hello world app
and cover some of the advanced features of pyramid that give it it's
power such as traversal. Pyramid is part of the pylons project and is a
successor to pylons and a continuation of the BFG framework. It's very
simple to learn, runs fast yet has powerful concepts which help keep
large web app creation a sane process..&lt;/p&gt;
</content><category term="PyCon AU 2011"></category><category term="framework"></category><category term="pylons"></category><category term="pyramid"></category><category term="tutorial"></category><category term="web"></category></entry><entry><title>PyCon 2009: Django in the Real World (Part 1 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--django-in-the-real-world--part-1-of-3.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--django-in-the-real-world--part-1-of-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's plenty of material (documentation, blogs, books) out there
that'll help you write a site using Django... but then what? You've
still got to test, deploy, monitor, and tune the site; failure at
deployment time means all your beautiful code is for naught. This
tutorial examines how best to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's plenty of material (documentation, blogs, books) out there
that'll help you write a site using Django... but then what? You've
still got to test, deploy, monitor, and tune the site; failure at
deployment time means all your beautiful code is for naught. This
tutorial examines how best to cope when the Real World intrudes on your
carefully designed website.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: blurry vga]&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="tutorial"></category></entry><entry><title>PyCon 2009: Django in the Real World (Part 2 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--django-in-the-real-world--part-2-of-3.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--django-in-the-real-world--part-2-of-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's plenty of material (documentation, blogs, books) out there
that'll help you write a site using Django... but then what? You've
still got to test, deploy, monitor, and tune the site; failure at
deployment time means all your beautiful code is for naught. This
tutorial examines how best to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's plenty of material (documentation, blogs, books) out there
that'll help you write a site using Django... but then what? You've
still got to test, deploy, monitor, and tune the site; failure at
deployment time means all your beautiful code is for naught. This
tutorial examines how best to cope when the Real World intrudes on your
carefully designed website.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: blurry vga]&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="tutorial"></category></entry><entry><title>PyCon 2009: Django in the Real World (Part 3 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--django-in-the-real-world--part-3-of-3.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--django-in-the-real-world--part-3-of-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's plenty of material (documentation, blogs, books) out there
that'll help you write a site using Django... but then what? You've
still got to test, deploy, monitor, and tune the site; failure at
deployment time means all your beautiful code is for naught. This
tutorial examines how best to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's plenty of material (documentation, blogs, books) out there
that'll help you write a site using Django... but then what? You've
still got to test, deploy, monitor, and tune the site; failure at
deployment time means all your beautiful code is for naught. This
tutorial examines how best to cope when the Real World intrudes on your
carefully designed website.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: blurry vga]&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="tutorial"></category></entry><entry><title>PyCon 2009: Internet Programming with Python (Part 1 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--internet-programming-with-python--pa0.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Wesley J. Chun</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--internet-programming-with-python--pa0.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Internet Programming with Python (part 1 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Wesley J. Chun&lt;/p&gt;
&lt;p&gt;This tutorial introduces current Python programmers to 3-4 distinct
areas of Internet programming, each in self-contained (approximately)
1-hour lectures (unless otherwise noted) with a demonstration of code on
each lecture topic.&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="tutorial"></category><category term="webprogramming"></category></entry><entry><title>PyCon 2009: Internet Programming with Python (Part 3 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--internet-programming-with-python--pa1.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Wesley J. Chun</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--internet-programming-with-python--pa1.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Internet Programming with Python (part 3 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Wesley J. Chun&lt;/p&gt;
&lt;p&gt;This tutorial introduces current Python programmers to 3-4 distinct
areas of Internet programming, each in self-contained (approximately)
1-hour lectures (unless otherwise noted) with a demonstration of code on
each lecture topic.&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="tutorial"></category><category term="webprogramming"></category></entry><entry><title>PyCon 2009: Internet Programming with Python (Part 2 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--internet-programming-with-python--par.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Wesley J. Chun</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--internet-programming-with-python--par.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Internet Programming with Python (part 2 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Wesley J. Chun&lt;/p&gt;
&lt;p&gt;This tutorial introduces current Python programmers to 3-4 distinct
areas of Internet programming, each in self-contained (approximately)
1-hour lectures (unless otherwise noted) with a demonstration of code on
each lecture topic.&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="tutorial"></category><category term="webprogramming"></category></entry><entry><title>PyCon 2009: Introduction to SQLAlchemy (Part 1 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-1-of.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-1-of.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit
for Python. SQLAlchemy exposes the full power of SQL while remaining
easy to use for the basics, and is flexible enough to work with existing
database schemas as well as fresh designs. SQLAlchemy is used in
production by …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit
for Python. SQLAlchemy exposes the full power of SQL while remaining
easy to use for the basics, and is flexible enough to work with existing
database schemas as well as fresh designs. SQLAlchemy is used in
production by leading Python web frameworks Pylons and Turbogears as
well as many other web and non-web developers. This tutorial teaches
SQLAlchemy's object-relational mapping to automate painlessly loading
and persisting objects from and to your database, even when complex
relationships exist.&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="sqlalchemy"></category><category term="tutorial"></category></entry><entry><title>PyCon 2009: Introduction to SQLAlchemy (Part 2 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-2-of.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-2-of.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit
for Python. SQLAlchemy exposes the full power of SQL while remaining
easy to use for the basics, and is flexible enough to work with existing
database schemas as well as fresh designs. SQLAlchemy is used in
production by …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit
for Python. SQLAlchemy exposes the full power of SQL while remaining
easy to use for the basics, and is flexible enough to work with existing
database schemas as well as fresh designs. SQLAlchemy is used in
production by leading Python web frameworks Pylons and Turbogears as
well as many other web and non-web developers. This tutorial teaches
SQLAlchemy's object-relational mapping to automate painlessly loading
and persisting objects from and to your database, even when complex
relationships exist.&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="sqlalchemy"></category><category term="tutorial"></category></entry><entry><title>PyCon 2009: Introduction to SQLAlchemy (Part 3 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-3-of.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--introduction-to-sqlalchemy--part-3-of.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit
for Python. SQLAlchemy exposes the full power of SQL while remaining
easy to use for the basics, and is flexible enough to work with existing
database schemas as well as fresh designs. SQLAlchemy is used in
production by …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit
for Python. SQLAlchemy exposes the full power of SQL while remaining
easy to use for the basics, and is flexible enough to work with existing
database schemas as well as fresh designs. SQLAlchemy is used in
production by leading Python web frameworks Pylons and Turbogears as
well as many other web and non-web developers. This tutorial teaches
SQLAlchemy's object-relational mapping to automate painlessly loading
and persisting objects from and to your database, even when complex
relationships exist.&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="sqlalchemy"></category><category term="tutorial"></category></entry><entry><title>PyCon 2009: Introduction to TurboGears2 and WSGI (Part 2 of 2)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-turbogears2-and-wsgi-.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--introduction-to-turbogears2-and-wsgi-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: annoying noise starting at 1:17 (2nd half)] Are you
interested in building web applications with modern libraries and tools?
Do you want to build on top of the work that many others have done? Have
you done some basic web development, but want to be …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: annoying noise starting at 1:17 (2nd half)] Are you
interested in building web applications with modern libraries and tools?
Do you want to build on top of the work that many others have done? Have
you done some basic web development, but want to be more productive. If
so this is the class for you. TurboGears 2 provides a well defined set
of the best libraries for web development python has to offer. But more
importantly it brings them together in a clean, well documented way that
allows for developing reusable TurboGears 2 components. The result is a
powerful, flexible, set of tools that helps make it easy to build
dynamic web applications.&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="turbogears"></category><category term="tutorial"></category><category term="wsgi"></category></entry><entry><title>PyCon 2009: Introduction to TurboGears2 and WSGI (Part 1 of 2)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--introduction-to-turbogears2-and-wsgi0.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--introduction-to-turbogears2-and-wsgi0.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: annoying noise starting at 1:17 (2nd half)] Are you
interested in building web applications with modern libraries and tools?
Do you want to build on top of the work that many others have done? Have
you done some basic web development, but want to be …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: annoying noise starting at 1:17 (2nd half)] Are you
interested in building web applications with modern libraries and tools?
Do you want to build on top of the work that many others have done? Have
you done some basic web development, but want to be more productive. If
so this is the class for you. TurboGears 2 provides a well defined set
of the best libraries for web development python has to offer. But more
importantly it brings them together in a clean, well documented way that
allows for developing reusable TurboGears 2 components. The result is a
powerful, flexible, set of tools that helps make it easy to build
dynamic web applications.&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="turbogears"></category><category term="tutorial"></category><category term="wsgi"></category></entry><entry><title>PyCon 2009: py.test II - cross-platform and distributed testing (Part 3 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--py-test-ii---cross-platform-and-dist0.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--py-test-ii---cross-platform-and-dist0.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;py.test II - cross-platform and distributed testing (part 3 of 3)&lt;/p&gt;
&lt;p&gt;Want to know more about advanced automated testing with Python? Use a
tool that allows you to ad-hoc distribute tests to multiple CPUs for
speed and to multiple platforms for compatibility checks? With tons of
debugging help in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;py.test II - cross-platform and distributed testing (part 3 of 3)&lt;/p&gt;
&lt;p&gt;Want to know more about advanced automated testing with Python? Use a
tool that allows you to ad-hoc distribute tests to multiple CPUs for
speed and to multiple platforms for compatibility checks? With tons of
debugging help in failure situations? This tutorial provides in-depth
information on advanced usages of the popular py.test tool. We highlight
its current feature set including using and writing extensions for
generating HTML pages, testing Javascript or ReST documents. We showcase
and discuss ways of distributing tests across CPUs and platforms and
will leave time to discuss and tackle specific scenarios brought up
during the session. The tutorial format will be an interactive lecture
with plenty of time for questions.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ]&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="pytest"></category><category term="py.test"></category><category term="testing"></category><category term="tutorial"></category></entry><entry><title>PyCon 2009: py.test II - cross-platform and distributed testing (Part 1 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--py-test-ii---cross-platform-and-dist1.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--py-test-ii---cross-platform-and-dist1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;py.test II - cross-platform and distributed testing (part 1 of 3)&lt;/p&gt;
&lt;p&gt;Want to know more about advanced automated testing with Python? Use a
tool that allows you to ad-hoc distribute tests to multiple CPUs for
speed and to multiple platforms for compatibility checks? With tons of
debugging help in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;py.test II - cross-platform and distributed testing (part 1 of 3)&lt;/p&gt;
&lt;p&gt;Want to know more about advanced automated testing with Python? Use a
tool that allows you to ad-hoc distribute tests to multiple CPUs for
speed and to multiple platforms for compatibility checks? With tons of
debugging help in failure situations? This tutorial provides in-depth
information on advanced usages of the popular py.test tool. We highlight
its current feature set including using and writing extensions for
generating HTML pages, testing Javascript or ReST documents. We showcase
and discuss ways of distributing tests across CPUs and platforms and
will leave time to discuss and tackle specific scenarios brought up
during the session. The tutorial format will be an interactive lecture
with plenty of time for questions.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ]&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="pytest"></category><category term="py.test"></category><category term="testing"></category><category term="tutorial"></category></entry><entry><title>PyCon 2009: py.test II - cross-platform and distributed testing (Part 2 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--py-test-ii---cross-platform-and-distr.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--py-test-ii---cross-platform-and-distr.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;py.test II - cross-platform and distributed testing (part 2 of 3)&lt;/p&gt;
&lt;p&gt;Want to know more about advanced automated testing with Python? Use a
tool that allows you to ad-hoc distribute tests to multiple CPUs for
speed and to multiple platforms for compatibility checks? With tons of
debugging help in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;py.test II - cross-platform and distributed testing (part 2 of 3)&lt;/p&gt;
&lt;p&gt;Want to know more about advanced automated testing with Python? Use a
tool that allows you to ad-hoc distribute tests to multiple CPUs for
speed and to multiple platforms for compatibility checks? With tons of
debugging help in failure situations? This tutorial provides in-depth
information on advanced usages of the popular py.test tool. We highlight
its current feature set including using and writing extensions for
generating HTML pages, testing Javascript or ReST documents. We showcase
and discuss ways of distributing tests across CPUs and platforms and
will leave time to discuss and tackle specific scenarios brought up
during the session. The tutorial format will be an interactive lecture
with plenty of time for questions.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ]&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="pytest"></category><category term="py.test"></category><category term="testing"></category><category term="tutorial"></category></entry><entry><title>PyCon 2009: The Big F'ing Tutorial: Development Using the repoze.bfg Web Framework (Part 2 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--the-big-f--39-ing-tutorial--developm0.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Chris McDonough</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--the-big-f--39-ing-tutorial--developm0.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Big F'ing Tutorial: Development Using repoze.bfg Web Framework (Part
2 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Chris McDonough&lt;/p&gt;
&lt;p&gt;Are you a Python web developer who thinks there might be some great
stuff hidden away in Zope but you consider it inaccessible to you
because you feel that Zope imposes …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Big F'ing Tutorial: Development Using repoze.bfg Web Framework (Part
2 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Chris McDonough&lt;/p&gt;
&lt;p&gt;Are you a Python web developer who thinks there might be some great
stuff hidden away in Zope but you consider it inaccessible to you
because you feel that Zope imposes too many foreign concepts for your
tastes? Are you a more- or-less happy Zope developer that has the
nagging feeling that much of Zope is unnecessary &amp;quot;baggage&amp;quot; on your
current project? Maybe you're a Plone developer who feels that Plone is
unsuitable for one of your current projects because it's too
complicated? This tutorial will present everything you need to know
about repoze.bfg, a small Python web framework in the spirit of Pylons.
The goals of repoze.bfg are simplicity, familiarity to Zope programmers
(but no Zope experience is required), execution speed, and complete,
comprehensive, and up-to-date documentation. In this tutorial, we'll
explain the core concepts in repoze.bfg, then we'll lead a guided
development session where we make a small application using the
framework. We'll also cover packaging and deployment of the application.
Questions are highly encouraged during the presentation.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ]&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="repoze"></category><category term="repoze.bfg"></category><category term="tutorial"></category><category term="zope"></category></entry><entry><title>PyCon 2009: The Big F'ing Tutorial: Development Using the repoze.bfg Web Framework (Part 3 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--the-big-f--39-ing-tutorial--developm1.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Chris McDonough</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--the-big-f--39-ing-tutorial--developm1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Big F'ing Tutorial: Development Using repoze.bfg Web Framework (Part
3 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Chris McDonough&lt;/p&gt;
&lt;p&gt;Are you a Python web developer who thinks there might be some great
stuff hidden away in Zope but you consider it inaccessible to you
because you feel that Zope imposes …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Big F'ing Tutorial: Development Using repoze.bfg Web Framework (Part
3 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Chris McDonough&lt;/p&gt;
&lt;p&gt;Are you a Python web developer who thinks there might be some great
stuff hidden away in Zope but you consider it inaccessible to you
because you feel that Zope imposes too many foreign concepts for your
tastes? Are you a more- or-less happy Zope developer that has the
nagging feeling that much of Zope is unnecessary &amp;quot;baggage&amp;quot; on your
current project? Maybe you're a Plone developer who feels that Plone is
unsuitable for one of your current projects because it's too
complicated? This tutorial will present everything you need to know
about repoze.bfg, a small Python web framework in the spirit of Pylons.
The goals of repoze.bfg are simplicity, familiarity to Zope programmers
(but no Zope experience is required), execution speed, and complete,
comprehensive, and up-to-date documentation. In this tutorial, we'll
explain the core concepts in repoze.bfg, then we'll lead a guided
development session where we make a small application using the
framework. We'll also cover packaging and deployment of the application.
Questions are highly encouraged during the presentation.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ]&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="repoze"></category><category term="repoze.bfg"></category><category term="tutorial"></category><category term="zope"></category></entry><entry><title>PyCon 2009: The Big F'ing Tutorial: Development Using the repoze.bfg Web Framework (Part 1 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--the-big-f--39-ing-tutorial--developme.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Chris McDonough</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--the-big-f--39-ing-tutorial--developme.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Big F'ing Tutorial: Development Using repoze.bfg Web Framework (Part
1 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Chris McDonough&lt;/p&gt;
&lt;p&gt;Are you a Python web developer who thinks there might be some great
stuff hidden away in Zope but you consider it inaccessible to you
because you feel that Zope imposes …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Big F'ing Tutorial: Development Using repoze.bfg Web Framework (Part
1 of 3)&lt;/p&gt;
&lt;p&gt;Presented by Chris McDonough&lt;/p&gt;
&lt;p&gt;Are you a Python web developer who thinks there might be some great
stuff hidden away in Zope but you consider it inaccessible to you
because you feel that Zope imposes too many foreign concepts for your
tastes? Are you a more- or-less happy Zope developer that has the
nagging feeling that much of Zope is unnecessary &amp;quot;baggage&amp;quot; on your
current project? Maybe you're a Plone developer who feels that Plone is
unsuitable for one of your current projects because it's too
complicated? This tutorial will present everything you need to know
about repoze.bfg, a small Python web framework in the spirit of Pylons.
The goals of repoze.bfg are simplicity, familiarity to Zope programmers
(but no Zope experience is required), execution speed, and complete,
comprehensive, and up-to-date documentation. In this tutorial, we'll
explain the core concepts in repoze.bfg, then we'll lead a guided
development session where we make a small application using the
framework. We'll also cover packaging and deployment of the application.
Questions are highly encouraged during the presentation.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: ]&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="pycon"></category><category term="pycon2009"></category><category term="repoze"></category><category term="repoze.bfg"></category><category term="tutorial"></category><category term="zope"></category></entry><entry><title>PyCon 2009: Using Twisted Deferreds (Part 1 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--using-twisted-deferreds--part-1-of-3.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--using-twisted-deferreds--part-1-of-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While the documentation about deferreds is good, it is still not enough
for many. In this interactive tutorial, I will cover both the basics of
deferreds and many non-trivial use-cases, with discussion of various
approaches. Common mistakes, gotchas and other issues will be explained,
as well as good idioms …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While the documentation about deferreds is good, it is still not enough
for many. In this interactive tutorial, I will cover both the basics of
deferreds and many non-trivial use-cases, with discussion of various
approaches. Common mistakes, gotchas and other issues will be explained,
as well as good idioms and techniques to use deferreds without pain.
Deferreds bring asynchronous APIs the clarity and programming power that
is sometimes lost when using event-based programming. They are an idea
taken from many other programming languages, and made into a Pythonic
solution If you are using Twisted, or would like to use Twisted, this
tutorial can help you with one of the most subtle issues inherent in its
APIs - Deferreds.&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="asynchronous"></category><category term="deferreds"></category><category term="pycon"></category><category term="pycon2009"></category><category term="tutorial"></category><category term="twisted"></category></entry><entry><title>PyCon 2009: Using Twisted Deferreds (Part 2 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--using-twisted-deferreds--part-2-of-3.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--using-twisted-deferreds--part-2-of-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;` &amp;lt;&lt;a class="reference external" href="http://blip.tv/file/1997952"&gt;http://blip.tv/file/1997952&lt;/a&gt;&amp;gt;`__&lt;/p&gt;
&lt;p&gt;While the documentation about deferreds is good, it is still not enough
for many. In this interactive tutorial, I will cover both the basics of
deferreds and many non-trivial use-cases, with discussion of various
approaches. Common mistakes, gotchas and other issues will be …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;` &amp;lt;&lt;a class="reference external" href="http://blip.tv/file/1997952"&gt;http://blip.tv/file/1997952&lt;/a&gt;&amp;gt;`__&lt;/p&gt;
&lt;p&gt;While the documentation about deferreds is good, it is still not enough
for many. In this interactive tutorial, I will cover both the basics of
deferreds and many non-trivial use-cases, with discussion of various
approaches. Common mistakes, gotchas and other issues will be explained,
as well as good idioms and techniques to use deferreds without pain.
Deferreds bring asynchronous APIs the clarity and programming power that
is sometimes lost when using event-based programming. They are an idea
taken from many other programming languages, and made into a Pythonic
solution If you are using Twisted, or would like to use Twisted, this
tutorial can help you with one of the most subtle issues inherent in its
APIs - Deferreds.&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="asynchronous"></category><category term="deferreds"></category><category term="pycon"></category><category term="pycon2009"></category><category term="tutorial"></category><category term="twisted"></category></entry><entry><title>PyCon 2009: Using Twisted Deferreds (Part 3 of 3)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--using-twisted-deferreds--part-3-of-3.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:/pycon-us-2009/pycon-2009--using-twisted-deferreds--part-3-of-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While the documentation about deferreds is good, it is still not enough
for many. In this interactive tutorial, I will cover both the basics of
deferreds and many non-trivial use-cases, with discussion of various
approaches. Common mistakes, gotchas and other issues will be explained,
as well as good idioms …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While the documentation about deferreds is good, it is still not enough
for many. In this interactive tutorial, I will cover both the basics of
deferreds and many non-trivial use-cases, with discussion of various
approaches. Common mistakes, gotchas and other issues will be explained,
as well as good idioms and techniques to use deferreds without pain.
Deferreds bring asynchronous APIs the clarity and programming power that
is sometimes lost when using event-based programming. They are an idea
taken from many other programming languages, and made into a Pythonic
solution If you are using Twisted, or would like to use Twisted, this
tutorial can help you with one of the most subtle issues inherent in its
APIs - Deferreds.&lt;/p&gt;
</content><category term="PyCon US 2009"></category><category term="asynchronous"></category><category term="deferreds"></category><category term="pycon"></category><category term="pycon2009"></category><category term="tutorial"></category><category term="twisted"></category></entry><entry><title>Creating Rich Client Applications Using Dabo</title><link href="https://pyvideo.org/pycon-us-2010/creating-rich-client-applications-using-dabo.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Ed Leafe</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/creating-rich-client-applications-using-dabo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Creating Rich Client Applications Using Dabo&lt;/p&gt;
&lt;p&gt;Presented by Ed Leafe and Paul McNett&lt;/p&gt;
&lt;p&gt;While web applications seem to get all the attention these days, many
businesses still rely on desktop, or &amp;quot;rich client&amp;quot;, applications to run
their business. For those who prefer to do their coding with Python,
Dabo …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Creating Rich Client Applications Using Dabo&lt;/p&gt;
&lt;p&gt;Presented by Ed Leafe and Paul McNett&lt;/p&gt;
&lt;p&gt;While web applications seem to get all the attention these days, many
businesses still rely on desktop, or &amp;quot;rich client&amp;quot;, applications to run
their business. For those who prefer to do their coding with Python,
Dabo is the only full-featured desktop app framework.&lt;/p&gt;
&lt;p&gt;In this tutorial, we'll cover the general structure and approach to
application development used in Dabo, including lots of interactive work
where we will all develop applications that will be able to query a
database, display the results, allow the user to edit the data, and then
save it back to the database. We will cover the various tools available
in Dabo to help you develop your applications, and how they work
together.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Developers with basic to intermediate Python experience.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;p&gt;Introduction: The thinking and design approach behind the framework. (15
min).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Explanation of the framework design. Frameworks are great if you're
working with them, but not if you're constantly fighting them! We'll
outline the various parts of the framework, and how they work
together to create applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Building an app in 30 seconds. (15 min)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You can use the AppWizard to create a completely functional CRUD
application in less than 30 seconds. We'll demonstrate how to use the
AppWizard, and how you can build on and further customize the
application it creates.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The primary non-UI classes in Dabo (15 min)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;There are lots of classes in Dabo, but only a few main ones that are
used in every app. This section will cover them: the application
class, the business object class, and the DBAPI data adapter class.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Introduction to the Dabo Tools (30 min)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;One of the benefits of a framework is that the mundane, repetitive
tasks are handled by the framework, leaving you to focus on the
creative parts of app development. In this section we'll discuss
several of the visual tools available to help you create Dabo
applications faster and easier.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Developing an actual application, part 1 (15 min)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Talk is fine, but here's where we begin creating an actual
application. Attendees will learn how to create a new Dabo app, along
with database connections, menus and a main form. In the second half
of the tutorial we'll use this app as the basis for more complex
development.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;REFRESHMENT BREAK&lt;/p&gt;
&lt;p&gt;Overview of UI Classes (30 min)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This is where we talk about the &amp;quot;rich&amp;quot; in &amp;quot;rich client&amp;quot;. Dabo has a
full set of UI widgets, based on the wxPython toolkit. We've taken
those widget classes and added a consistent interface, so that the
developer uses the same properties and methods to accomplish the same
thing in all the classes, making developing smoother and more
intuitive. We'll cover all of the most-commonly used controls, and
how to work with them.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Developing an actual application, part 2 (30 min)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The basic app created in the first half was an impressive result for
such a short amount of time, but here's where we'll start to make it
more interesting. We'll create several related business objects, bind
them to the UI elements, and have it all work seamlessly with a
database. After that, we'll show how to create and run reports
against that same data. We'll then wrap up by explaining how to
deploy your finished application.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rich Client Web Applications with Dabo (10 min)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;HTML web apps are trying to get a richer client experience through
the increased use and sophistication of Javascript-based tools.
That's great if you like spending your time in Javascript, but not so
great if you are a Python dev. We take the opposite approach: taking
our rich-client apps and deploying them over the web so that users
can run them without first installing the app.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Future plans for Dabo (5 min)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Dabo is being actively developed, and we have plans for future
enhancements that we'll cover here.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Wrap-up and Final Questions (15 min)&lt;/p&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Students do not need to have a computer, but they will not get as much
out of the session if they cannot actively participate in creating the
example applications. They should have the following prerequisites
installed, using the latest available stable releases except where
specific version numbers are indicated:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python 2.5.4&lt;/li&gt;
&lt;li&gt;wxPython 2.8.10.1 unicode&lt;/li&gt;
&lt;li&gt;MySQLdb&lt;/li&gt;
&lt;li&gt;reportlab&lt;/li&gt;
&lt;li&gt;Python Imaging Library&lt;/li&gt;
&lt;li&gt;Dabo 0.9.2&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyCon US 2010"></category><category term="dabo"></category><category term="pycon"></category><category term="pycon2010"></category><category term="tutorial"></category></entry><entry><title>Faster Python Programs Through Optimization</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--faster-python-programs-through-optimi.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--faster-python-programs-through-optimi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Faster Python Programs Through Optimization&lt;/p&gt;
&lt;p&gt;Mike MÃ¼ller&lt;/p&gt;
&lt;p&gt;Although Python programs may be slow for certain types of tasks, there
are many different ways to improve performance. This tutorial will
introduce optimization strategies and demonstrate techniques to
implement them. Another of the objectives of this course is to give
participants …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Faster Python Programs Through Optimization&lt;/p&gt;
&lt;p&gt;Mike MÃ¼ller&lt;/p&gt;
&lt;p&gt;Although Python programs may be slow for certain types of tasks, there
are many different ways to improve performance. This tutorial will
introduce optimization strategies and demonstrate techniques to
implement them. Another of the objectives of this course is to give
participants the ability to decide what might be the optimal solution
for a certain performance problem. Participants are strongly recommended
to bring laptops because all techniques are introduced with examples and
exercises.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Python programmers with intermediate knowledge.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How Fast is Fast Enough?&lt;/li&gt;
&lt;li&gt;Optimization Guidelines&lt;ul&gt;
&lt;li&gt;Premature optimization&lt;/li&gt;
&lt;li&gt;Optimization rules&lt;/li&gt;
&lt;li&gt;Seven steps for incremental optimization&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Optimization strategy&lt;ul&gt;
&lt;li&gt;Measuring in stones&lt;/li&gt;
&lt;li&gt;Profiling CPU usage&lt;/li&gt;
&lt;li&gt;Profiling memory usage&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Algorithms and Anti-patterns&lt;ul&gt;
&lt;li&gt;String Concatenation&lt;/li&gt;
&lt;li&gt;List and Generator Comprehensions&lt;/li&gt;
&lt;li&gt;The Right Data Structure&lt;/li&gt;
&lt;li&gt;Caching&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The Example&lt;/li&gt;
&lt;li&gt;Testing Speed&lt;/li&gt;
&lt;li&gt;Pure Python&lt;/li&gt;
&lt;li&gt;Meet Psyco, the JIT&lt;/li&gt;
&lt;li&gt;Numpy for Numeric Arrays&lt;/li&gt;
&lt;li&gt;Using multiple CPUs with pyprocessing/multiprocessing&lt;/li&gt;
&lt;li&gt;Combination of optimization strategies&lt;/li&gt;
&lt;li&gt;Results of Different Example Implementations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following third-party packages are needed:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;psyco (version 1.5.2 or higher)&lt;/li&gt;
&lt;li&gt;numpy (version 1.2 or higher)&lt;/li&gt;
&lt;li&gt;pyprocessing (2.5 or lower only)&lt;/li&gt;
&lt;li&gt;Guppy_PE framework&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyCon US 2010"></category><category term="optimization"></category><category term="pycon"></category><category term="pycon2010"></category><category term="tutorial"></category></entry><entry><title>Hacking the Social Web with Python</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--hacking-the-social-web-with-python.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>David Recordon</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--hacking-the-social-web-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Open Stack: Hacking the Social Web&lt;/p&gt;
&lt;p&gt;Presented by David Recordon/Mike Malone&lt;/p&gt;
&lt;p&gt;In this tutorial we'll explain what the Open Stack is and how you can
use tools like OAuth, OpenID, and Portable Contacts to integrate your
app with the rest of the web. We'll cover each component in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Open Stack: Hacking the Social Web&lt;/p&gt;
&lt;p&gt;Presented by David Recordon/Mike Malone&lt;/p&gt;
&lt;p&gt;In this tutorial we'll explain what the Open Stack is and how you can
use tools like OAuth, OpenID, and Portable Contacts to integrate your
app with the rest of the web. We'll cover each component in depth, and
walk through example Python implementations for a variety of scenarios.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Beginning to intermediate Python programmers interested in Web
Development&lt;/li&gt;
&lt;li&gt;Python programmers who provide or consumer web service APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Intro: what is the &amp;quot;Open Stack&amp;quot;&lt;/li&gt;
&lt;li&gt;Working with HTTP in Python&lt;/li&gt;
&lt;li&gt;Working with responses: JSON, XML, Atom, RSS, HTML&lt;/li&gt;
&lt;li&gt;Decentralized identity with OpenID&lt;ul&gt;
&lt;li&gt;Implementing a Provider in Python&lt;/li&gt;
&lt;li&gt;Implementing a Relying Party in Python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Delegated authorization with OAuth&lt;ul&gt;
&lt;li&gt;Implementing a Provider in Python&lt;/li&gt;
&lt;li&gt;Implementing a Consumer in Python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Exchanging contacts with Portable Contacts&lt;/li&gt;
&lt;li&gt;Aggregating activity with Activity Streams&lt;/li&gt;
&lt;li&gt;Discovering how to communicate: LRDD + XRD&lt;/li&gt;
&lt;li&gt;Making markup structured: microformats&lt;/li&gt;
&lt;li&gt;The future of the Open Stack&lt;/li&gt;
&lt;li&gt;Learn more &amp;amp; get involved: resources and communities&lt;/li&gt;
&lt;li&gt;Q&amp;amp;A;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Some experience doing web development or working with web service APIs&lt;/p&gt;
</content><category term="PyCon US 2010"></category><category term="atom"></category><category term="http"></category><category term="json"></category><category term="oauth"></category><category term="openid"></category><category term="pycon"></category><category term="pycon2010"></category><category term="rss"></category><category term="tutorial"></category><category term="xml"></category></entry><entry><title>Implementing Domain Specific Languages In Python</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--implementing-domain-specific-language.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Sean Jensen-Grey</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--implementing-domain-specific-language.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Implementing Domain Specific Languages In Python&lt;/p&gt;
&lt;p&gt;Presented by Sean Jensen-Grey&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What are DSLs? Internal/External&lt;/li&gt;
&lt;li&gt;Why DSLs?&lt;/li&gt;
&lt;li&gt;How can they be expressed in Python?&lt;/li&gt;
&lt;li&gt;Mini Language Design&lt;/li&gt;
&lt;li&gt;Implementing External DSLs&lt;/li&gt;
&lt;li&gt;Web / AI / Enterprise&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;li&gt;Documenting&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Students should have their own computer with Python …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Implementing Domain Specific Languages In Python&lt;/p&gt;
&lt;p&gt;Presented by Sean Jensen-Grey&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What are DSLs? Internal/External&lt;/li&gt;
&lt;li&gt;Why DSLs?&lt;/li&gt;
&lt;li&gt;How can they be expressed in Python?&lt;/li&gt;
&lt;li&gt;Mini Language Design&lt;/li&gt;
&lt;li&gt;Implementing External DSLs&lt;/li&gt;
&lt;li&gt;Web / AI / Enterprise&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;li&gt;Documenting&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Students should have their own computer with Python 2.6 installed&lt;/p&gt;
</content><category term="PyCon US 2010"></category><category term="dsl"></category><category term="pycon"></category><category term="pycon2010"></category><category term="tutorial"></category></entry><entry><title>Introduction to Django</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--introduction-to-django.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Chander Ganesan</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--introduction-to-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Django&lt;/p&gt;
&lt;p&gt;Presented by Chander Ganesan&lt;/p&gt;
&lt;p&gt;The Django framework is a fast, flexible, easy to learn, and easy to use
framework for designing and deploying web sites and services using
Python. In this session, we'll cover the fundamentals of development
with Django, generate a Django data model, and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Django&lt;/p&gt;
&lt;p&gt;Presented by Chander Ganesan&lt;/p&gt;
&lt;p&gt;The Django framework is a fast, flexible, easy to learn, and easy to use
framework for designing and deploying web sites and services using
Python. In this session, we'll cover the fundamentals of development
with Django, generate a Django data model, and put together a simple web
site using the framework.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Beginner to Intermediate Python programmers&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Django Overview and Basic Introduction (~ 5 min)&lt;/li&gt;
&lt;li&gt;Downloading &amp;amp; Installing Dango (~ 10 min)&lt;/li&gt;
&lt;li&gt;Creating a new project (~ 5 min)&lt;/li&gt;
&lt;li&gt;Choosing a database (~ 5 min)&lt;/li&gt;
&lt;li&gt;Creating a new application (~ 5 min)&lt;/li&gt;
&lt;li&gt;Installing &amp;amp; Using Django contrib applications (~ 7 min)&lt;/li&gt;
&lt;li&gt;Overview of Django flow (i.e., URLconf expression, view function,
HTTPResponse object, etc.) (~7 min)&lt;/li&gt;
&lt;li&gt;Generating Simple Dango Views (~ 5 min)&lt;/li&gt;
&lt;li&gt;Configuring a URLConf for basic views (~ 5 min)&lt;/li&gt;
&lt;li&gt;Creating Django Templates (template syntax, common filters and tags,
loops, etc) (~ 10 min)&lt;/li&gt;
&lt;li&gt;Creating &amp;amp; using Template Context objects (~ 5 min)&lt;/li&gt;
&lt;li&gt;Introduction to Django Models (~ 10 min)&lt;/li&gt;
&lt;li&gt;Defining basic Django models (~ 15 min)&lt;/li&gt;
&lt;li&gt;Understanding basic model fields &amp;amp; options (~ 15 min)&lt;/li&gt;
&lt;li&gt;Generating &amp;amp; Reviewing Model SQL (~ 5 min)&lt;/li&gt;
&lt;li&gt;Adding data to a model (~ 7 min)&lt;/li&gt;
&lt;li&gt;Simple data retrieval using models (~ 7 min)&lt;/li&gt;
&lt;li&gt;Working with QUerySets (filters, slicing, ordering, common methods)
(~ 10 min)&lt;/li&gt;
&lt;li&gt;Overview of Q objects (~ 5 min)&lt;/li&gt;
&lt;li&gt;Using the Admin interface (~ 10 min)&lt;/li&gt;
&lt;li&gt;Using Generic views (~ 10 min)&lt;/li&gt;
&lt;li&gt;Access control with sessions &amp;amp; users (~ 10 min)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Attendees wishing to try the examples should have Python 2.6
pre-installed (&lt;a class="reference external" href="http://www.python.org"&gt;http://www.python.org&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Attendees should have Django pre-downloaded or pre-installed.
(&lt;a class="reference external" href="http://www.djangoproject.com"&gt;http://www.djangoproject.com&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyCon US 2010"></category><category term="pycon"></category><category term="pycon2010"></category><category term="tutorial"></category></entry><entry><title>Introduction to Internet Programming</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--introduction-to-internet-programming.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--introduction-to-internet-programming.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Internet Programming (Wesley J. Chun)&lt;/p&gt;
&lt;p&gt;Python is an interpreted, cross-platform, object-oriented programming
language that is popular for a wide range of applications, one of which
is Internet programming. This tutorial introduces current Python
programmers to 3-4 distinct areas of Internet programming, each in
self-contained lectures with a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Internet Programming (Wesley J. Chun)&lt;/p&gt;
&lt;p&gt;Python is an interpreted, cross-platform, object-oriented programming
language that is popular for a wide range of applications, one of which
is Internet programming. This tutorial introduces current Python
programmers to 3-4 distinct areas of Internet programming, each in
self-contained lectures with a demonstration of code following each
lecture topic. Intended Audience&lt;/p&gt;
&lt;p&gt;Developers familiar with Python who are interested in exploring
client/server network programming with sockets, Internet client (FTP,
NNTP, e-mail), development and web programming.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;p&gt;Python is an interpreted, cross-platform, object-oriented programming
language that is popular for a wide range of applications, one of which
is Internet programming. This tutorial introduces current Python
programmers to distinct areas of Internet programming, each in
self-contained lectures with a demonstration of code following these
lecture topics (each ranging from 20-60min in length):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Network Programming using Sockets&lt;/li&gt;
&lt;li&gt;Internet Client Programming&lt;/li&gt;
&lt;li&gt;Web/CGI Programming and Concepts&lt;/li&gt;
&lt;li&gt;Intro to Django (time-permitting)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We start at the lowest layer, where one creates communication channels
directly between clients and servers using sockets then move up one
level to discuss well-known Internet protocols such as FTP. Then we move
up even higher to address the concept of web programming, including a
description and purpose of all &amp;quot;CGI&amp;quot; interfaces, and finally, if there's
time, to give a high-level quick introduction to one of the most popular
Python web frameworks today, Django. We'll try build and implement a
simple blog in 15-20 minutes! This is especially for those of you who
couldn't sign up for the intro to Django tutorial at this PyCon which
will likely be full.&lt;/p&gt;
&lt;p&gt;About the Instructor&lt;/p&gt;
&lt;p&gt;WESLEY J. CHUN, MSCS, is the author of Prentice Hall's bestseller, &amp;quot;Core
Python Programming&amp;quot;, its video training course, &amp;quot;Python Fundamentals&amp;quot;
(LiveLessons DVD), and co-author of &amp;quot;Python Web Development with
Django&amp;quot;. In addition to being a software architect and Developer
Advocate for Google, he runs CyberWeb, a consulting business
specializing in Python software engineering and technical training. He
has over 25 years of programming, teaching, and writing experience,
including more than a decade of Python. While at Yahoo!, he helped
create Yahoo! Mail and Yahoo! People Search using Python. He holds
degrees in Computer Science, Mathematics, and Music from the University
of California.&lt;/p&gt;
</content><category term="PyCon US 2010"></category><category term="pycon"></category><category term="pycon2010"></category><category term="tutorial"></category><category term="web"></category></entry><entry><title>Introduction to SQLAlchemy</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--introduction-to-sqlalchemy.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Johnathan Ellis</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--introduction-to-sqlalchemy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to SQLAlchemy&lt;/p&gt;
&lt;p&gt;Presented by Johnathan Ellis&lt;/p&gt;
&lt;p&gt;SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the
full power of SQL while remaining easy to use for the basics, and is
flexible enough to work with existing database schemas as well as fresh
designs. SQLAlchemy is used in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to SQLAlchemy&lt;/p&gt;
&lt;p&gt;Presented by Johnathan Ellis&lt;/p&gt;
&lt;p&gt;SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the
full power of SQL while remaining easy to use for the basics, and is
flexible enough to work with existing database schemas as well as fresh
designs. SQLAlchemy is used in production by leading Python web
frameworks Pylons and Turbogears as well as many other web and non-web
developers.&lt;/p&gt;
&lt;p&gt;This tutorial teaches SQLAlchemy's object-relational mapping to automate
painlessly loading and persisting objects from and to your database,
even when complex relationships exist.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Python experience: intermediate. You should already have some hands-on
experience with Python and be comfortable reading modern Python code.&lt;/p&gt;
&lt;p&gt;SQL experience: beginning. You should know how to SELECT, INSERT, and
DELETE, and how to read queries involving JOINs, but we will only be
reading the SQL generated by SA, not writing our own.&lt;/p&gt;
&lt;p&gt;ORM experience: prior experience with an object-relational mapper is not
necessary.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;p&gt;Introduction:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Philosophy&lt;/li&gt;
&lt;li&gt;SA features&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fundamentals:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to ORM&lt;/li&gt;
&lt;li&gt;Data Mapper pattern vs Active Record&lt;/li&gt;
&lt;li&gt;Tables&lt;/li&gt;
&lt;li&gt;Mapping basics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Queries:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Conditions, operators&lt;/li&gt;
&lt;li&gt;Joins&lt;/li&gt;
&lt;li&gt;lazy / eager loading&lt;/li&gt;
&lt;li&gt;Relation-based queries&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sessions &amp;amp; identity map:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;detatching, attaching objects&lt;/li&gt;
&lt;li&gt;Lifecycle relations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More Mapping:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;one to one, many to many&lt;/li&gt;
&lt;li&gt;backreferences&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Extensions, etc.:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;DDL&lt;/li&gt;
&lt;li&gt;Migrate&lt;/li&gt;
&lt;li&gt;FormAlchemy&lt;/li&gt;
&lt;li&gt;SqlSoup&lt;/li&gt;
&lt;li&gt;Elixir&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Laptop with Python 2.5 or 2.6 and SQLAlchemy 0.6 installed. Code samples
may also work with Python 2.4 but will not be tested on that platform.
SQLAlchemy also supports Jython and cPython 3.x, but this tutorial will
be using &amp;quot;classic&amp;quot; cPython.&lt;/p&gt;
</content><category term="PyCon US 2010"></category><category term="ddl"></category><category term="elixer"></category><category term="formalchemy"></category><category term="migrate"></category><category term="orm"></category><category term="pycon"></category><category term="pycon2010"></category><category term="sqlalchemy"></category><category term="sqlsoup"></category><category term="tutorial"></category></entry><entry><title>Introduction to Traits</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--introduction-to-traits.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Corran Webster</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--introduction-to-traits.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Traits&lt;/p&gt;
&lt;p&gt;Presented by Corran Webster&lt;/p&gt;
&lt;p&gt;The Traits project allows you to simply add validation, initialization,
delegation, notification and a graphical user interface to Python object
attributes. In this tutorial we will explore the Traits toolset and
learn how to dramatically reduce the amount of boilerplate code you …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Traits&lt;/p&gt;
&lt;p&gt;Presented by Corran Webster&lt;/p&gt;
&lt;p&gt;The Traits project allows you to simply add validation, initialization,
delegation, notification and a graphical user interface to Python object
attributes. In this tutorial we will explore the Traits toolset and
learn how to dramatically reduce the amount of boilerplate code you
write, do rapid GUI application development, and understand the ideas
which underly other parts of the Enthought Tool Suite (such as MayaVi
and Chaco plotting toolkits).&lt;/p&gt;
&lt;p&gt;Traits and the Enthought Tool Suite are open source projects licensed
under a BSD-style license.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Intermediate to advanced Python programmers&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to ETS and Traits&lt;/li&gt;
&lt;li&gt;Basic Traits + Trait types + Property Traits + Trait Validation&lt;/li&gt;
&lt;li&gt;Traits UI + Basic Traits UI + Tour of the Trait editors + Advanced
Trait editors&lt;/li&gt;
&lt;li&gt;Notification in Traits + Static notification + Dynamic notification&lt;/li&gt;
&lt;li&gt;Advanced Traits UI + Customizing Views, Groups and Items + Traits UI
Handlers + Buttons, Menus and Toolbars + Drag and Drop&lt;/li&gt;
&lt;li&gt;Q&amp;amp;A;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Laptop recommended (any major OS is fine), with the following software
installed:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python 2.5 or 2.6 (www.python.org)&lt;/li&gt;
&lt;li&gt;Either wxPython (&lt;a class="reference external" href="http://www.wxpython.org/"&gt;http://www.wxpython.org/&lt;/a&gt;) or PyQt
(&lt;a class="reference external" href="http://www.riverbankcomputing.co.uk/software/pyqt/intro"&gt;http://www.riverbankcomputing.co.uk/software/pyqt/intro&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Numpy and Scipy (&lt;a class="reference external" href="http://www.scipy.org"&gt;http://www.scipy.org&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Enthought Tool Suite 3.2 or higher
(&lt;a class="reference external" href="http://code.enthought.com/projects"&gt;http://code.enthought.com/projects&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All required software can be obtained by installing the free trial
version of the Enthought Python Distribution v5 or later
(&lt;a class="reference external" href="http://www.enthought.com/products/epd.php"&gt;http://www.enthought.com/products/epd.php&lt;/a&gt;).&lt;/p&gt;
</content><category term="PyCon US 2010"></category><category term="pycon"></category><category term="pycon2010"></category><category term="traits"></category><category term="tutorial"></category></entry><entry><title>Introduction to Twisted</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--introduction-to-twisted.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Chander Ganesan</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--introduction-to-twisted.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Twisted&lt;/p&gt;
&lt;p&gt;Presented by Chander Ganesan&lt;/p&gt;
&lt;p&gt;Interested in faster networking with Python? Twisted is an event-driven
networking engine written in Python that allows developers to quickly
and easily develop and deploy network services.&lt;/p&gt;
&lt;p&gt;In this tutorial, attendees will learn what twisted is, why to use it,
how it …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Twisted&lt;/p&gt;
&lt;p&gt;Presented by Chander Ganesan&lt;/p&gt;
&lt;p&gt;Interested in faster networking with Python? Twisted is an event-driven
networking engine written in Python that allows developers to quickly
and easily develop and deploy network services.&lt;/p&gt;
&lt;p&gt;In this tutorial, attendees will learn what twisted is, why to use it,
how it works, and how to install, develop, and deploy simple clients and
servers using Twisted.&lt;/p&gt;
&lt;p&gt;Attendees should bring a laptop if possible, to try out code examples in
class.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Intermediate Python Programmers with an understanding of Pythons object
oriented syntax (classes, inheritance, etc.)&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to Twisted (15 min) - Basic Concepts&lt;ul&gt;
&lt;li&gt;Event-Driven model, cooperative multi-tasking&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Installing Twisted &amp;amp; Verifying Installation (10 min)&lt;/li&gt;
&lt;li&gt;Starting the Event loop (10 min)&lt;/li&gt;
&lt;li&gt;Timed Events (10 min)&lt;/li&gt;
&lt;li&gt;Understanding Twisted Factories &amp;amp; their use (15 min)&lt;/li&gt;
&lt;li&gt;Understanding Protocol Objects &amp;amp; their use (15 min)&lt;/li&gt;
&lt;li&gt;Creating a simple Twisted Client (25 min)&lt;ul&gt;
&lt;li&gt;Using twisted.internet.reactor.connectTCP()&lt;/li&gt;
&lt;li&gt;Creating a Client Factory&lt;/li&gt;
&lt;li&gt;Creating a Protocol&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Creating a simple Twisted Server (Server Factory) (25 min)&lt;ul&gt;
&lt;li&gt;Using twisted.internet.reactor.listenTCP()&lt;/li&gt;
&lt;li&gt;Creating a Server Factory&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Using Twisted SMTP to Send Mail (15 min)&lt;/li&gt;
&lt;li&gt;Twisted Web Basics (25 min)&lt;/li&gt;
&lt;li&gt;Introduction to the twist Daemonizer &amp;amp; tac files (15 min)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An understanding of Object Oriented Python (OOP concepts,
inheritance, classes, etc.)&lt;/li&gt;
&lt;li&gt;Attendees wishing to try the examples should have Python 2.4 or newer
and Twisted pre-installed.&lt;/li&gt;
&lt;li&gt;Attendees wishing to try the examples should have Python 2.4 or newer
and Twisted pre-downloaded (we'll go over installation)&lt;/li&gt;
&lt;li&gt;Twisted may be downloaded at
&lt;a class="reference external" href="http://www.twistedmatrix.com"&gt;http://www.twistedmatrix.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows users will require the Win32 extensions for Python as well
&lt;a class="reference external" href="http://starship.python.net/crew/mhammond/win32/Downloads.html"&gt;http://starship.python.net/crew/mhammond/win32/Downloads.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyCon US 2010"></category><category term="pcyon2010"></category><category term="pycon"></category><category term="tutorial"></category><category term="twisted"></category></entry><entry><title>Mastering Python 3 I/O (part 1)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--mastering-python-3-i-o.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>David Beazley</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--mastering-python-3-i-o.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mastering Python 3 I/O&lt;/p&gt;
&lt;p&gt;Presented by David Beazley&lt;/p&gt;
&lt;p&gt;As most Python programmers know, Python 3 breaks backwards compatibility
with Python 2 in a number of significant ways. Although guides to Python
3 tend to focus on superficial incompatibilities such as the new print
function, changes to exception handling …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mastering Python 3 I/O&lt;/p&gt;
&lt;p&gt;Presented by David Beazley&lt;/p&gt;
&lt;p&gt;As most Python programmers know, Python 3 breaks backwards compatibility
with Python 2 in a number of significant ways. Although guides to Python
3 tend to focus on superficial incompatibilities such as the new print
function, changes to exception handling, or new language features, the
most substantial changes concern the strict separation of Unicode and
bytes as well as the new I/O stack. Not only do these changes have
far-reaching effects throughout the standard library, but changes to I/O
are likely to be the most major source of problems for anyone porting an
existing Python application to Python 3. In this tutorial, we're going
to take a top-to-bottom tour of the entire Python 3 I/O system. We'll
focus on how to properly handle both text and binary data, changes to
standard library modules, examine advanced features such as the buffer
API, perform some performance experiments, and end with practical advice
for programmers working on porting applications from Python 2 to 3.
Intended Audience&lt;/p&gt;
&lt;p&gt;Intermediate to advanced Python programmers who are either developing
new applications or contemplating a migration to Python 3. Attendees
should already be familiar with the basics of Python programming
including standard datatypes and commonly used library modules. A
background in systems programming topics such as file handling,
subprocesses, and socket programming is also recommended. Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introducing Python 3 (with a focus on I/O)&lt;/li&gt;
&lt;li&gt;Text Processing&lt;/li&gt;
&lt;li&gt;Binary Data Handling&lt;/li&gt;
&lt;li&gt;Dealing with System Interfaces and External Programs&lt;/li&gt;
&lt;li&gt;The New io library&lt;/li&gt;
&lt;li&gt;Network programming&lt;/li&gt;
&lt;li&gt;The revised buffer API and direct I/O&lt;/li&gt;
&lt;li&gt;Porting from Python 2 to 3.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyCon US 2010"></category><category term="io"></category><category term="pycon"></category><category term="pycon2010"></category><category term="python3"></category><category term="tutorial"></category></entry><entry><title>py.test - Rapid Testing with Minimal Effort</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--py-test---rapid-testing-with-minimal-.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Holger Krekel</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--py-test---rapid-testing-with-minimal-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;py.test I - rapid testing with minimal effort&lt;/p&gt;
&lt;p&gt;Presented by Holger Krekel&lt;/p&gt;
&lt;p&gt;Want to learn writing tests in Python? This tutorial introduces basic
practises using the popular py.test (&lt;a class="reference external" href="http://pytest.org"&gt;http://pytest.org&lt;/a&gt;) tool. We start
with an overview on testing and tools in Python and then discuss and
exercise …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;py.test I - rapid testing with minimal effort&lt;/p&gt;
&lt;p&gt;Presented by Holger Krekel&lt;/p&gt;
&lt;p&gt;Want to learn writing tests in Python? This tutorial introduces basic
practises using the popular py.test (&lt;a class="reference external" href="http://pytest.org"&gt;http://pytest.org&lt;/a&gt;) tool. We start
with an overview on testing and tools in Python and then discuss and
exercise basic idioms in a step-by-step manner. We cover the basic
writing, organisation and running of tests and debugging options. In the
second part we discuss setup and teardown of test state, usage and
configuration of test functions arguments and introduce coverage
testing. We will close with time to answer questions and discuss topics
from the participants.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;beginner programmers&lt;/p&gt;
&lt;p&gt;Perequisites/knowledge: basic knowledge of python programming&lt;/p&gt;
&lt;p&gt;Requirements: Laptop with Python 2.4 or greater installed. Pairing
welcome. outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;why automated testing?&lt;/li&gt;
&lt;li&gt;Developer oriented automated tests&lt;/li&gt;
&lt;li&gt;The test tool question&lt;/li&gt;
&lt;li&gt;py.test basics&lt;/li&gt;
&lt;li&gt;py.test fundamental features&lt;/li&gt;
&lt;li&gt;cross-project test tool&lt;/li&gt;
&lt;li&gt;A Typical Python test layout&lt;/li&gt;
&lt;li&gt;Another typical test layout&lt;/li&gt;
&lt;li&gt;Choosing a test layout&lt;/li&gt;
&lt;li&gt;automatic test discovery&lt;/li&gt;
&lt;li&gt;mind the &lt;strong&gt;init&lt;/strong&gt;.py files&lt;/li&gt;
&lt;li&gt;no boilerplate python test code&lt;/li&gt;
&lt;li&gt;assert introspection&lt;/li&gt;
&lt;li&gt;asserting expected exceptions&lt;/li&gt;
&lt;li&gt;print() debugging / output capturing&lt;/li&gt;
&lt;li&gt;Getting Started, basic usage [0]&lt;/li&gt;
&lt;li&gt;Failure / Traceback Demo [0]&lt;/li&gt;
&lt;li&gt;Skipping tests&lt;/li&gt;
&lt;li&gt;Dynamically skipping tests&lt;/li&gt;
&lt;li&gt;Marking test functions&lt;/li&gt;
&lt;li&gt;Marking a test for conditional skip&lt;/li&gt;
&lt;li&gt;Marking a test as expected to fail&lt;/li&gt;
&lt;li&gt;Conditional expected to fail&lt;/li&gt;
&lt;li&gt;Marking / Skipping exercise [0]&lt;/li&gt;
&lt;li&gt;Applying Marks to classes or modules&lt;/li&gt;
&lt;li&gt;break&lt;/li&gt;
&lt;li&gt;warm up: boilerplate test code&lt;/li&gt;
&lt;li&gt;&amp;quot;myscan&amp;quot; Exercises of this tutorial&lt;/li&gt;
&lt;li&gt;sketching our &amp;quot;myscan&amp;quot; project&lt;/li&gt;
&lt;li&gt;Starting Exercise [1]&lt;/li&gt;
&lt;li&gt;The example Solution [1]&lt;/li&gt;
&lt;li&gt;The &amp;quot;test setup&amp;quot; and fixture Problem&lt;/li&gt;
&lt;li&gt;test functions and funcargs&lt;/li&gt;
&lt;li&gt;How do funcargs work?&lt;/li&gt;
&lt;li&gt;funcarg factory notes&lt;/li&gt;
&lt;li&gt;builtin funcargs&lt;/li&gt;
&lt;li&gt;usage example: per-test temporary directory&lt;/li&gt;
&lt;li&gt;next step: adding more tests [2]&lt;/li&gt;
&lt;li&gt;observation on new tmpdir-using tests&lt;/li&gt;
&lt;li&gt;The mysetup pattern&lt;/li&gt;
&lt;li&gt;How the mysetup pattern works&lt;/li&gt;
&lt;li&gt;next step: introducing &amp;quot;mysetup&amp;quot; pattern [3]&lt;/li&gt;
&lt;li&gt;The new test function using &amp;quot;mysetup&amp;quot;&lt;/li&gt;
&lt;li&gt;a simple hook: adding a command line opt&lt;/li&gt;
&lt;li&gt;the py.test config object&lt;/li&gt;
&lt;li&gt;exercise: implement a new command line option [4]&lt;/li&gt;
&lt;li&gt;myscan example completed&lt;/li&gt;
&lt;li&gt;py.test hooks and plugins&lt;/li&gt;
&lt;li&gt;Installing &amp;quot;global&amp;quot; plugins&lt;/li&gt;
&lt;li&gt;exercise: use the &amp;quot;figleaf&amp;quot; plugin&lt;/li&gt;
&lt;li&gt;local plugins: conftest.py&lt;/li&gt;
&lt;li&gt;a simple config: ignoring directories&lt;/li&gt;
&lt;li&gt;a simple default option: verbose&lt;/li&gt;
&lt;li&gt;quick discussion of advanced usages&lt;/li&gt;
&lt;li&gt;Summary / questions and answers&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyCon US 2010"></category><category term="pycon"></category><category term="pycon2010"></category><category term="py.test"></category><category term="tutorial"></category></entry><entry><title>Python 101</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--python-101.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Stuart Williams</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--python-101.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 101&lt;/p&gt;
&lt;p&gt;Presented by Stuart Williams&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents the basics of Python to beginning and
intermediate programmers. It pairs well with ''Python 102'' which
follows a similar outline but goes much deeper.&lt;/p&gt;
&lt;p&gt;Rather than starting with &amp;quot;Hello, world!&amp;quot;, we use the interactive Python
interpreter shell to get …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 101&lt;/p&gt;
&lt;p&gt;Presented by Stuart Williams&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents the basics of Python to beginning and
intermediate programmers. It pairs well with ''Python 102'' which
follows a similar outline but goes much deeper.&lt;/p&gt;
&lt;p&gt;Rather than starting with &amp;quot;Hello, world!&amp;quot;, we use the interactive Python
interpreter shell to get hands-on familiarity with much of core Python
before covering blocks and scripts.&lt;/p&gt;
&lt;p&gt;The tutorial is divided into short sections, each with presentation and
hands- on exercises, to quickly cover lots of ground.&lt;/p&gt;
&lt;p&gt;Advanced topics are introduced throughout and covered in &amp;quot;extra credit&amp;quot;
exercises such that more advanced participants can learn at their own
pace.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Programmers with experience in other languages who want a fast hands-on
introduction to Python. Content will target both Python 3.1 and 2.6.&lt;/p&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Bring a laptop computer with Python 2.6 or 3.1 installed. Try to get as
much of an overview of Python before the tutorial as you have time to in
order to get more out of the tutorial. Two angles on this are the Python
Quick Reference and the Python website's tutorial.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Numbers and operators&lt;/li&gt;
&lt;li&gt;Strings - immutability, operators, methods, functions, and formatting&lt;/li&gt;
&lt;li&gt;Introspection/Discovery&lt;/li&gt;
&lt;li&gt;Tuples and Lists&lt;/li&gt;
&lt;li&gt;List Comprehensions&lt;/li&gt;
&lt;li&gt;Objects and Names&lt;/li&gt;
&lt;li&gt;Dictionaries&lt;/li&gt;
&lt;li&gt;Loops and Blocks&lt;/li&gt;
&lt;li&gt;Iterables&lt;/li&gt;
&lt;li&gt;Generator Expressions&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Generators&lt;/li&gt;
&lt;li&gt;Namespaces&lt;/li&gt;
&lt;li&gt;Simple Classes&lt;/li&gt;
&lt;li&gt;Exceptions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The handouts at
&lt;a class="reference external" href="http://swilliams.ca%20/python-tutorials"&gt;http://swilliams.ca/python-tutorials&lt;/a&gt;.
If you're interested in the software I wrote to deliver the talk drop me
a line. My address is in the handouts.&lt;/p&gt;
</content><category term="PyCon US 2010"></category><category term="pycon"></category><category term="pycon2010"></category><category term="python-basics"></category><category term="tutorial"></category></entry><entry><title>Python 102</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--python-102.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Stuart Williams</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--python-102.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 102&lt;/p&gt;
&lt;p&gt;Presented by Stuart Williams&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents intermediate and some advanced features
of Python to beginning and intermediate programmers. It pairs well with
Python 101 which follows a similar outline but at a more introductory
level.&lt;/p&gt;
&lt;p&gt;Rather than starting with &amp;quot;Hello, world!&amp;quot;, we use the interactive …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 102&lt;/p&gt;
&lt;p&gt;Presented by Stuart Williams&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents intermediate and some advanced features
of Python to beginning and intermediate programmers. It pairs well with
Python 101 which follows a similar outline but at a more introductory
level.&lt;/p&gt;
&lt;p&gt;Rather than starting with &amp;quot;Hello, world!&amp;quot;, we use the interactive Python
interpreter shell to get hands-on familiarity with much of core Python
before covering blocks and scripts.&lt;/p&gt;
&lt;p&gt;The tutorial is divided into short sections, each with presentation and
hands- on exercises, to quickly cover lots of ground.&lt;/p&gt;
&lt;p&gt;Advanced topics are introduced throughout and covered in &amp;quot;extra credit&amp;quot;
exercises such that more advanced participants can learn at their own
pace.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Programmers with experience in other languages who want a fast hands-on
introduction to intermediate and some advanced features of Python.
Content will target both Python 3.1 and 2.6.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Numbers and Strings - operators, functions and methods&lt;/li&gt;
&lt;li&gt;Introspection&lt;/li&gt;
&lt;li&gt;Sequences - overview, concepts, and methods&lt;/li&gt;
&lt;li&gt;Objects&lt;/li&gt;
&lt;li&gt;Dictionaries&lt;/li&gt;
&lt;li&gt;Files&lt;/li&gt;
&lt;li&gt;Classes&lt;/li&gt;
&lt;li&gt;Namespaces&lt;/li&gt;
&lt;li&gt;Dynamic Classes&lt;/li&gt;
&lt;li&gt;Iterators and Generators&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Exceptions&lt;/li&gt;
&lt;li&gt;Standard Library&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Bring a laptop computer with Python 2.6 or 3.1 installed. Try to get as
much of an overview of Python before the tutorial as you have time to in
order to get more out of the tutorial. Two angles on this are the Python
Quick Reference and the Python website's tutorial.&lt;/p&gt;
</content><category term="PyCon US 2010"></category><category term="pycon"></category><category term="pycon2010"></category><category term="python-basics"></category><category term="tutorial"></category></entry><entry><title>Python 201: How to Solve It Using Python</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--python-201--how-to-solve-it-using-pyt.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Senthil Kumaran</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--python-201--how-to-solve-it-using-pyt.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 201: How to Solve it using Python&lt;/p&gt;
&lt;p&gt;Presented by Senthil Kumaran&lt;/p&gt;
&lt;p&gt;One good way to develop applications is to divide the problem into
smaller manageable chunks and the build those. Once we identify and
define those smaller piece of tasks, our problem becomes incredibly
easy.&lt;/p&gt;
&lt;p&gt;But we are …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 201: How to Solve it using Python&lt;/p&gt;
&lt;p&gt;Presented by Senthil Kumaran&lt;/p&gt;
&lt;p&gt;One good way to develop applications is to divide the problem into
smaller manageable chunks and the build those. Once we identify and
define those smaller piece of tasks, our problem becomes incredibly
easy.&lt;/p&gt;
&lt;p&gt;But we are still faced with the question of what is the best way to do
that smaller task in Python? This tutorial will answer those questions.&lt;/p&gt;
&lt;p&gt;In this tutorial, we will identify the commonly occurring tasks that
would fit into to bigger problems and learn how do we solve it using
Python.&lt;/p&gt;
&lt;p&gt;The aim of the tutorial is help you develop the correct intuition when
developing applications using Python.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Beginning to intermediate Python Programmers. Familiarity with Python's
syntax and usage is assumed.&lt;/p&gt;
&lt;p&gt;This tutorial will use Python 3.1 examples (with changes from Python 2.6
explained, when it is required).&lt;/p&gt;
&lt;p&gt;The source code and the handout will contain the snippets written in
both Python 2.6 and Python 3.1.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Outline of the Tutorial and a Brief Overview of Standard Library.&lt;/li&gt;
&lt;li&gt;Lets start with Strings.&lt;/li&gt;
&lt;li&gt;Files - We deal with them often.&lt;/li&gt;
&lt;li&gt;Date time related tasks.&lt;/li&gt;
&lt;li&gt;Dealing with Database stuff.&lt;/li&gt;
&lt;li&gt;Process Handling.&lt;/li&gt;
&lt;li&gt;Processing XMLs.&lt;/li&gt;
&lt;li&gt;Web Programming&lt;/li&gt;
&lt;li&gt;Programming tasks.&lt;/li&gt;
&lt;li&gt;Unit Testing&lt;/li&gt;
&lt;li&gt;How to Convert Python 2 to Python 3.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Attendees are welcome to bring their laptops with Python installed (
version 3.1 and version 2.6 both installed).&lt;/p&gt;
&lt;p&gt;Some snippets will be using Twisted Matrix Framework, those who would
like to try those recipes, would like to have Twisted Package installed
for their Python Distribution.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Some missing sections of video due to technical
issues (approx 3 mins in)]&lt;/p&gt;
</content><category term="PyCon US 2010"></category><category term="pycon"></category><category term="pycon2010"></category><category term="python-basics"></category><category term="testing"></category><category term="tutorial"></category><category term="xml"></category></entry><entry><title>Relational Database Applications</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--relational-database-applications.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Chris Perkins</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--relational-database-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Turbogears Database Applications (Relational Database Applications)&lt;/p&gt;
&lt;p&gt;Presented by Chris Perkins&lt;/p&gt;
&lt;p&gt;TurboGears2 provides a rich toolset to provide developers with a
platform for developing web applications with existing databases. This
â€œun-tutorialâ€ has a simple goal. The participants may bring in their
own databases, and we will explore how TurboGears …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Turbogears Database Applications (Relational Database Applications)&lt;/p&gt;
&lt;p&gt;Presented by Chris Perkins&lt;/p&gt;
&lt;p&gt;TurboGears2 provides a rich toolset to provide developers with a
platform for developing web applications with existing databases. This
â€œun-tutorialâ€ has a simple goal. The participants may bring in their
own databases, and we will explore how TurboGears can use this database
to create a working web application. If the student does not want to use
her own database, one will be provided. This tutorial will focus on the
TurboGears Admin system, along with relational databases.&lt;/p&gt;
&lt;p&gt;This tutorial is intended to be an un-tutorial. The idea is simple.
Bring a public database, (or 4) and share with the class as we explore
the new admin- level RESTful features that TurboGears2 employs.&lt;/p&gt;
&lt;p&gt;At the end of the class, the goal is for everyone to have a working TG2
application, with a working admin, at least one customized form or
table, based on a database they, or another student brought to class.&lt;/p&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Laptop with Python 2.5 or 2.6 installed. Database system of your choice
(Postgres, Sqlite, MySQL) Python drivers for your desired database
system installed. (psychopg2, pg8000, pysqlite, mysql-python)&lt;/p&gt;
</content><category term="PyCon US 2010"></category><category term="database"></category><category term="pycon"></category><category term="pycon2010"></category><category term="turbogears"></category><category term="tutorial"></category></entry><entry><title>wxPython II: Introduction to GUI Programming and MVC</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--wxpython-ii--introduction-to-gui-prog.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>David Goodger</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010--wxpython-ii--introduction-to-gui-prog.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;wxPython II: Introduction to GUI Programming and MVC&lt;/p&gt;
&lt;p&gt;Presented by David Goodger&lt;/p&gt;
&lt;p&gt;wxPython is an open-source graphical user interface (GUI) toolkit that
runs on multiple platforms, including Linux, Windows, and Mac OS X. By
the end of this tutorial, attendees will understand the concepts behind
the Model-View- Controller (MVC …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;wxPython II: Introduction to GUI Programming and MVC&lt;/p&gt;
&lt;p&gt;Presented by David Goodger&lt;/p&gt;
&lt;p&gt;wxPython is an open-source graphical user interface (GUI) toolkit that
runs on multiple platforms, including Linux, Windows, and Mac OS X. By
the end of this tutorial, attendees will understand the concepts behind
the Model-View- Controller (MVC) design pattern and will have built a
complex wxPython application.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Python programmers (of any level; familiarity with Python is assumed)
with some wxPython experience. Attending the &amp;quot;wxPython I&amp;quot; tutorial is
recommended.&lt;/p&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Attendees are welcome to bring a laptop loaded with Python 2.4+ and
wxPython 2.6+ to follow along, but this is not required.&lt;/p&gt;
</content><category term="PyCon US 2010"></category><category term="pycon"></category><category term="pycon2010"></category><category term="tutorial"></category><category term="wxpython"></category></entry><entry><title>PyCon 2010:Advanced SQL Alchemy</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010-advanced-sql-alchemy.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Michael Bayer</name></author><id>tag:pyvideo.org,2010-02-19:/pycon-us-2010/pycon-2010-advanced-sql-alchemy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Advanced SQLAlchemy&lt;/p&gt;
&lt;p&gt;Presented by Michael Bayer&lt;/p&gt;
&lt;p&gt;SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the
full power of SQL while remaining easy to use for the basics, and is
flexible enough to work with existing database schemas as well as fresh
designs. SQLAlchemy is used in production …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Advanced SQLAlchemy&lt;/p&gt;
&lt;p&gt;Presented by Michael Bayer&lt;/p&gt;
&lt;p&gt;SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the
full power of SQL while remaining easy to use for the basics, and is
flexible enough to work with existing database schemas as well as fresh
designs. SQLAlchemy is used in production by leading Python web
frameworks Pylons and TurboGears as well as many other web and non-web
developers.&lt;/p&gt;
&lt;p&gt;This tutorial discusses current data mapping techniques, advanced Query
techniques, Session/transaction usage, and maximizing schema usage with
SQLAlchemy's event model.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Python experience: intermediate. You should already have some hands-on
experience with Python and be comfortable reading modern Python code.&lt;/p&gt;
&lt;p&gt;SQL experience: intermediate. We will use subselects and outer joins as
part of the SQL layer.&lt;/p&gt;
&lt;p&gt;ORM experience: prior experience with SQLAlchemy is recommended.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;p&gt;Declarative Mapping&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Initial configuration&lt;/li&gt;
&lt;li&gt;Basic mapping&lt;/li&gt;
&lt;li&gt;Building a many-to-many relation&lt;/li&gt;
&lt;li&gt;Using late-evaluated configuration arguments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Advanced queries&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Selecting objects, selecting columns&lt;/li&gt;
&lt;li&gt;Thinking generatively&lt;/li&gt;
&lt;li&gt;Joining like a Pro&lt;/li&gt;
&lt;li&gt;Power Eager Loading&lt;/li&gt;
&lt;li&gt;Selecting from Anything&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Session Techniques&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Transaction lifecycle&lt;/li&gt;
&lt;li&gt;Scoping objects in and out of caches using merge()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inheritance Mapping&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Single Table Inheritance&lt;/li&gt;
&lt;li&gt;Joined Table Inheritance&lt;/li&gt;
&lt;li&gt;High Level/Low Level Joined Queries&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Extending SQL&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Creating new SQL constructs&lt;/li&gt;
&lt;li&gt;Creating new DDL constructs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Extending the ORM&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Using SessionExtension to populate denormalized views&lt;/li&gt;
&lt;li&gt;Subclassing Query to Suit Your Needs&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyCon US 2010"></category><category term="advanced"></category><category term="pycon"></category><category term="pycon2010"></category><category term="sqlalchemy"></category><category term="tutorial"></category></entry><entry><title>A Gentle Introduction to Computer Vision</title><link href="https://pyvideo.org/pycon-us-2013/a-gentle-introduction-to-computer-vision.html" rel="alternate"></link><published>2013-03-14T00:00:00+00:00</published><updated>2013-03-14T00:00:00+00:00</updated><author><name>Katherine Scott</name></author><id>tag:pyvideo.org,2013-03-14:/pycon-us-2013/a-gentle-introduction-to-computer-vision.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Do you want to create a script to warp your photos, scrape your photo
archive for images of cats, or create a dart turret that follows your
face? This tutorial will show you how to do this and a whole lot more
with computer vision. The tutorial will be …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Do you want to create a script to warp your photos, scrape your photo
archive for images of cats, or create a dart turret that follows your
face? This tutorial will show you how to do this and a whole lot more
with computer vision. The tutorial will be suitable for all levels of
developers and is a great way for python novice’s to explore the world
of computer vision.&lt;/p&gt;
</content><category term="PyCon US 2013"></category><category term="tutorial"></category></entry></feed>