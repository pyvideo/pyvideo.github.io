<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Parul Gupta</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_parul-gupta.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-09-27T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Python Scientific Sorcery With Efficient Code</title><link href="https://pyvideo.org/north-bay-python-2025/python-scientific-sorcery-with-efficient-code.html" rel="alternate"></link><published>2025-04-26T00:00:00+00:00</published><updated>2025-04-26T00:00:00+00:00</updated><author><name>Parul Gupta</name></author><id>tag:pyvideo.org,2025-04-26:/north-bay-python-2025/python-scientific-sorcery-with-efficient-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Parul Gupta&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pretalx.northbaypython.org/nbpy-2025/talk/BSDCJQ"&gt;https://pretalx.northbaypython.org/nbpy-2025/talk/BSDCJQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Looking to make your scientific code faster and more efficient for training and prototyping? In the AI era, computing requirements and expenses are outpacing available resources. To stay ahead, efficient code is no longer a luxury - it has become a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Parul Gupta&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pretalx.northbaypython.org/nbpy-2025/talk/BSDCJQ"&gt;https://pretalx.northbaypython.org/nbpy-2025/talk/BSDCJQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Looking to make your scientific code faster and more efficient for training and prototyping? In the AI era, computing requirements and expenses are outpacing available resources. To stay ahead, efficient code is no longer a luxury - it has become a NECESSITY.&lt;/p&gt;
&lt;p&gt;We will delve into the best practices and techniques for an optimized utilization of Python scientific libraries, including NumPy, Pandas, and SciPy highlighting common pitfalls and failure modes that can hinder performance. By going through some live demos (&amp;quot;what could possibly go wrong?&amp;quot; - North Bay Python 2024), we will learn how simple changes to our code can lead to significant optimizations, resulting in faster and more capacity-friendly solutions. We will gain insights into advanced programming concepts, such as NumPy vectorization, column-based vs row-based data frames and arrays, and many more.&lt;/p&gt;
&lt;p&gt;Whether you're a data scientist, machine learning engineer, researcher, or software engineer, we will showcase tips and strategies that can improve the efficiency of your code and accelerate your AI projects.&lt;/p&gt;
&lt;p&gt;Sat Apr 26 13:40:00 2025 at Reis River Ranch&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
</content><category term="North Bay Python 2025"></category></entry><entry><title>Accelerating ML Prototyping: The Pythonic Way</title><link href="https://pyvideo.org/pybay-2024/accelerating-ml-prototyping-the-pythonic-way.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Parul Gupta</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/accelerating-ml-prototyping-the-pythonic-way.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Effective machine learning (ML) prototyping is critical for developing successful models and applications. Python, with its robust ecosystem of tools, plays a significant role in this process.&lt;/p&gt;
&lt;p&gt;This talk will bring a fresh perspective on how we, at Meta, provide tools for efficient ML prototyping for our researchers and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Effective machine learning (ML) prototyping is critical for developing successful models and applications. Python, with its robust ecosystem of tools, plays a significant role in this process.&lt;/p&gt;
&lt;p&gt;This talk will bring a fresh perspective on how we, at Meta, provide tools for efficient ML prototyping for our researchers and ML engineers. We will first go through a comprehensive overview of the ML lifecycle and then deep dive into the ML prototyping phase, emphasizing on its significance. We will focus on conda for environment management and jupyter notebooks for interactive development — two powerful tools that streamline development and experimentation at Meta and in the industry, in general. In the last part of the talk, I will highlight interesting examples of improvements made to these tools at Meta for efficient prototyping, accelerating the developer productivity in the AI space.&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Python Packaging Expressway: A Path Worth Taking</title><link href="https://pyvideo.org/pybeach-2025/python-packaging-expressway-a-path-worth-taking.html" rel="alternate"></link><published>2025-09-27T00:00:00+00:00</published><updated>2025-09-27T00:00:00+00:00</updated><author><name>Parul Gupta</name></author><id>tag:pyvideo.org,2025-09-27:/pybeach-2025/python-packaging-expressway-a-path-worth-taking.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python's popularity comes from its vast ecosystem of open-source packages, especially for the development for AI modeling and support. However, many Python programmers struggle to share their scripts and packages with others due to a lack of understanding about Python packaging.
Join me on a journey to demystify modern …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python's popularity comes from its vast ecosystem of open-source packages, especially for the development for AI modeling and support. However, many Python programmers struggle to share their scripts and packages with others due to a lack of understanding about Python packaging.
Join me on a journey to demystify modern Python packaging and learn the end-to-end mechanism of creating, publishing, and managing Python packages. Whether you are new to Python packaging or want to sharpen your skills around modern Python packaging techniques or are a curious Pythonista, I hope for everyone to learn something new here or just have fun with packaging!&lt;/p&gt;
</content><category term="PyBeach 2025"></category></entry><entry><title>PyLadies Panel: Experiences and Roles within the Tech Community and Open Source</title><link href="https://pyvideo.org/pycascades-2025/pyladies-panel-experiences-and-roles-within-the-tech-community-and-open-source.html" rel="alternate"></link><published>2025-02-09T00:00:00+00:00</published><updated>2025-02-09T00:00:00+00:00</updated><author><name>Tammy Do</name></author><id>tag:pyvideo.org,2025-02-09:/pycascades-2025/pyladies-panel-experiences-and-roles-within-the-tech-community-and-open-source.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tammy Do, Drishti Jain, Parul Gupta, Lilinoe Harbottle, and Nasim&lt;/p&gt;
</content><category term="PyCascades 2025"></category></entry></feed>