<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Jakub Nabaglo</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 06 Sep 2020 00:00:00 +0000</lastBuildDate><item><title>What not to do, and how to do it</title><link>https://pyvideo.org/pycon-au-2019/what-not-to-do-and-how-to-do-it.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has powerful tools that let our programs inspect and modify themselves. These can be used for good or evil. We study a few of these tools, and some examples of how not to use them.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/what-not-to-do-and-how-to-do-it"&gt;https://2019.pycon-au.org/talks/what-not-to-do-and-how-to-do-it&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 11:50:00 2019 at Cockle Bay&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jakub Nabaglo</dc:creator><pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-04:/pycon-au-2019/what-not-to-do-and-how-to-do-it.html</guid><category>PyCon AU 2019</category></item><item><title>Why the float did it NaN?</title><link>https://pyvideo.org/pycon-au-2020/why-the-float-did-it-nan.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jakub Nabaglo&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/RTT87N"&gt;https://2020.pycon.org.au/program/RTT87N&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Floating point numbers are designed to be magic. For most mundane tasks, your calculations ‘just work’, and you are not supposed to think too much about it.&lt;/p&gt;
&lt;p&gt;From time to time though, the magic stops working. The maths that’s correct on a sheet of paper no longer gives the right results when done on a computer. Results of NaN or Inf, division by zero errors, and inaccurate answers have caused great frustration to many.&lt;/p&gt;
&lt;p&gt;To see why this happens, we will look under the hood of floating point numbers. Their structure in memory, and how it affects the accuracy of different operations. This is particularly relevant to data science, which entails lots of number crunching.&lt;/p&gt;
&lt;p&gt;We will see why subtraction is sometimes dangerous, why you should avoid multiplying probabilities, and why you should never invert a matrix. We will explore the tools Python, NumPy, and SciPy give us to avoid these pitfalls, such as LU decomposition and the LogAddExp trick.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 12:45:00 2020 at Curlyboi&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jakub Nabaglo</dc:creator><pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-09-06:/pycon-au-2020/why-the-float-did-it-nan.html</guid><category>PyCon AU 2020</category><category>JakubNabaglo</category><category>PyCon</category><category>PyConAU</category><category>PyConline</category><category>Python</category><category>pyconau</category><category>pyconau_2020</category></item></channel></rss>