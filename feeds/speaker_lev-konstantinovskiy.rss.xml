<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 28 Apr 2018 00:00:00 +0000</lastBuildDate><item><title>Sentence embeddings for automated factchecking</title><link>https://pyvideo.org/pydata-london-2018/sentence-embeddings-for-automated-factchecking.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are a lot of models for individual word embeddings but few that
encode the meaning of the whole sentence. i will introduce InferSent
embedding for deciding if one sentence infers another. I will apply it
to detecting factual claim sentence in text. It's the first step in
automating a fact-checking process at Full Fact as only 15% of political
TV subtitles contain verfiable claims.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lev Konstantinovskiy</dc:creator><pubDate>Sat, 28 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-28:pydata-london-2018/sentence-embeddings-for-automated-factchecking.html</guid></item><item><title>Text similiarity with the next generation of word embeddings in Gensim</title><link>https://pyvideo.org/pydata-berlin-2017/text-similiarity-with-the-next-generation-of-word-embeddings-in-gensim.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is the closest word to &amp;quot;king&amp;quot;? Is it &amp;quot;Canute&amp;quot; or is it &amp;quot;crowned&amp;quot;? There are many ways to define &amp;quot;similar words&amp;quot; and &amp;quot;similar texts&amp;quot;. Depending on your definition you should choose a word embedding to use. There is a new generation of word embeddings added to Gensim open source NLP package using morphological information and learning-to-rank: Facebook's FastText, VarEmbed and WordRank.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are many ways to find similar words/docs with an open-source Natural Language processing library Gensim that I maintain. I will give an overview of modern word embeddings like Google's Word2vec, Facebook's FastText, GloVe, WordRank, VarEmbed and discuss what business tasks fit them best.&lt;/p&gt;
&lt;p&gt;What is the most similar word to &amp;quot;king&amp;quot;? It depends on what you mean by similar. &amp;quot;King&amp;quot; can be interchanged with &amp;quot;Canute&amp;quot;, but it's attribute is &amp;quot;crown&amp;quot;. We will discuss how to achieve these two kinds of similarity from word embeddings.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lev Konstantinovskiy</dc:creator><pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-30:pydata-berlin-2017/text-similiarity-with-the-next-generation-of-word-embeddings-in-gensim.html</guid></item><item><title>Lightning talks May 19th, 2017 Evening session</title><link>https://pyvideo.org/pycon-us-2017/lightning-talks-may-19th-2017-evening-session.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks 2017-05-19 Evening&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="12%" /&gt;
&lt;col width="23%" /&gt;
&lt;col width="65%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head" rowspan="2"&gt;Start&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Speakers&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Subject&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;0:55&lt;/td&gt;
&lt;td rowspan="3"&gt;Katy&lt;/td&gt;
&lt;td rowspan="3"&gt;&lt;strong&gt;Emoji Archeology 101 - A lightning talk cover&lt;/strong&gt;
- A call to revolution against the Unicode emoji.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;5:55&lt;/td&gt;
&lt;td rowspan="4"&gt;Daniel Whitenack&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Taking Over the Data World with Containerized&lt;/strong&gt;
&lt;strong&gt;Python&lt;/strong&gt;
- Using Kubernetes cluster with Pachyderm.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;11:20&lt;/td&gt;
&lt;td rowspan="4"&gt;Fang-Pen Lin&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Bugbuzz - A modern web-based debugger for Python&lt;/strong&gt;
- Adding just a couple lines triggers a web based
debugger with basic functionality.  Uses PubNub.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;16:45&lt;/td&gt;
&lt;td rowspan="5"&gt;Kojo Idrissa&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Software Engineering for Beginners&lt;/strong&gt;
- Focus on common tools like version control, in-code
documentation, testing &amp;amp; TDD, dependency management &amp;amp;
deployment, and finally OS stuff.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="8"&gt;21:50&lt;/td&gt;
&lt;td rowspan="8"&gt;Cameron Dershem&lt;/td&gt;
&lt;td rowspan="8"&gt;&lt;strong&gt;Community Level Development:  What Python Should&lt;/strong&gt;
&lt;strong&gt;Learn From Rust&lt;/strong&gt;
- Please learn From Rust. Rust is the best community.
Devs are on chat and enforce good attitude; cool thank
you page; roadmap; 'how should this be taught' section
in RFCs; mentorship for starter maintainers; great
opensource book.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;26:30&lt;/td&gt;
&lt;td rowspan="4"&gt;Al Sweigart&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;How to Do PyCon&lt;/strong&gt;
- Skip talks and meet people; use shirt trick; don't
eat alone; Twitter is great for followup.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;31:53&lt;/td&gt;
&lt;td rowspan="4"&gt;Myron Walker&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Faking Python Imports&lt;/strong&gt;
- Fake for modules and callables not available on test
environment. Use directory of local fakes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;35:12&lt;/td&gt;
&lt;td rowspan="4"&gt;Vince Salvino&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Help Wanted: A PyPI Vulnerability DB&lt;/strong&gt;
- Like WPScan, it would be nice to a central DB and
tool for known PyPI security issues. Talk to me.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;37:50&lt;/td&gt;
&lt;td rowspan="5"&gt;Lev
Konstantinovskiy&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Same Content, Different Words&lt;/strong&gt;
- Is 'Ice cream' the same as 'Gelato' in different
reviews? Use Word Mover's Distance in GenSim to find
out.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;43:20&lt;/td&gt;
&lt;td rowspan="5"&gt;Mario&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Randomize Your Decisions&lt;/strong&gt;
- We spammed ourselves by having too many alerts, had
hacked users, bugs everywhere, bad SEO. Still, it was
worth making a website.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;48:30&lt;/td&gt;
&lt;td rowspan="5"&gt;Tim Head&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Bayesian Optimization: Coffee&lt;/strong&gt;
- Tweak settings with Bayesian Optimization, easily.
Made scikit-optimize with simpler calls than scikit-
learn.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;53:35&lt;/td&gt;
&lt;td rowspan="4"&gt;Meg Ray&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Teaching Python to Children&lt;/strong&gt;
- Use both teacher pedagogy and developer technical
skills to train K-12 teachers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie McLaughlin</dc:creator><pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-19:pycon-us-2017/lightning-talks-may-19th-2017-evening-session.html</guid><category>lightning talks</category></item><item><title>Next generation of word embeddings in Gensim</title><link>https://pyvideo.org/pydata-london-2017/next-generation-of-word-embeddings-in-gensim.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Filmed at PyData London 2017
www.pydata.org&lt;/p&gt;
&lt;p&gt;Description
There are many ways to find similar words/docs with an open-source Natural Language processing library Gensim that I maintain. I will give an overview of modern word embeddings like Google's Word2vec, Facebook's FastText, GloVe, WordRank, VarEmbed and discuss what business tasks fit them best.&lt;/p&gt;
&lt;p&gt;Abstract
What is the most similar word to &amp;quot;king&amp;quot;? It depends on what you mean by similar. &amp;quot;King&amp;quot; can be interchanged with &amp;quot;Canute&amp;quot;, but it's attribute is &amp;quot;crown&amp;quot;. We will discuss how to achieve these two kinds of similarity from word embeddings. Also touch on how to deal with the common issues of rare, frequent and out of vocabulary words&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lev Konstantinovskiy</dc:creator><pubDate>Sun, 07 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-07:pydata-london-2017/next-generation-of-word-embeddings-in-gensim.html</guid></item><item><title>Word Embedding For Fun and Profit</title><link>https://pyvideo.org/pydata-london-2017/word-embedding-for-fun-and-profit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Filmed at PyData London 2017&lt;/p&gt;
&lt;p&gt;Word Embedding For Fun and Profit&lt;/p&gt;
&lt;p&gt;www.pydata.org&lt;/p&gt;
&lt;p&gt;PyData is a gathering of users and developers of data analysis tools in Python. The goals are to provide Python enthusiasts a place to share ideas and learn from each other about how best to apply our language and tools to ever-evolving challenges in the vast realm of data management, processing, analytics, and visualization.&lt;/p&gt;
&lt;p&gt;We aim to be an accessible, community-driven conference, with tutorials for novices, advanced topical workshops for practitioners, and opportunities for package developers and users to meet in person.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lev Konstantinovskiy</dc:creator><pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-05:pydata-london-2017/word-embedding-for-fun-and-profit.html</guid></item><item><title>Word Embeddings for fun and profit in Gensim</title><link>https://pyvideo.org/pydata-london-2016/lev-konstantinovskiy-word-embeddings-for-fun-and-profit-in-gensim.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData London 2016&lt;/p&gt;
&lt;p&gt;Python has great open source libraries to extract data from its most raw format - the human readable text. We will discuss a family of algorithms called word embeddings - Word2Vec being most famous and how they can be used in practice using Gensim package&lt;/p&gt;
&lt;p&gt;A tour of word embeddings, their Python implementations and their use in the industry.&lt;/p&gt;
&lt;p&gt;We will start with theory and academic results for word2vec, glove, swivel and Word Movers Distance. Then proceed to their Python open source implementations mainly in the Gensim package&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="https://speakerdeck.com/tmylk/word-embeddings-for-fun-and-profit-with-gensim-pydata-london-2016"&gt;https://speakerdeck.com/tmylk/word-embeddings-for-fun-and-profit-with-gensim-pydata-london-2016&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lev Konstantinovskiy</dc:creator><pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-12:pydata-london-2016/lev-konstantinovskiy-word-embeddings-for-fun-and-profit-in-gensim.html</guid></item></channel></rss>