<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 06 Aug 2015 00:00:00 +0000</lastBuildDate><item><title>External authentication for Django projects</title><link>https://pyvideo.org/europython-2015/external-authentication-for-django-projects.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jan Pazdziora - External authentication for Django projects
[EuroPython 2015]
[24 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;When applications get deployed in enterprise environment or in large
organizations, they need to support user accounts and groups that are
managed externally, in existing directory services like FreeIPA or
Active Directory, or federated via protocols like SAML. While it is
possible to  add support for these individual setups and protocols
directly to application code or to Web frameworks or libraries, often
it is better to delegate the authentication and identity operations to
a frontend server and just assume that the application has to be able
to consume results of the external authentication and identity
lookups.&lt;/p&gt;
&lt;p&gt;In this talk, we will look at Django Web framework and how with few
small changes to the framework and to the application we can extend
the functionality of existing RemoteUserMiddleware and
RemoteUserBackend to consume users coming from enterprise identity
management systems. We will focus on using proven OS-level components
such as SSSD for Web applications, but will also show setup using
federation.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan Pazdziora</dc:creator><pubDate>Thu, 06 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-06:europython-2015/external-authentication-for-django-projects.html</guid></item></channel></rss>