<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_navid-nobani.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-11-02T00:00:00+00:00</updated><entry><title>Python + Neo4j: How a Graph DB Can Make a Transit App More Intelligent</title><link href="https://pyvideo.org/pycon-fr-2019/python-neo4j-how-a-graph-db-can-make-a-transit-app-more-intelligent.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Navid Nobani</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/python-neo4j-how-a-graph-db-can-make-a-transit-app-more-intelligent.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Although there are tens of transit applications available in national and global levels, most of them (more or less) perform in the same way: mapping the desired path asked by the user (origin, destination) on the timetable provided by the transportation company and providing official schedules to the user. While this process was acceptable years ago, with the advances in the computer science and evolution of unstructured databases we can expect to receive something more robust than a digital version of the (train, bus, …) timetable, something that provide us with the expected delays based on the current situation (weather, temperature, events,…)&lt;/p&gt;
&lt;p&gt;In this talk, I show you how I’ve used python to create a database for various parameters impacting transportation delays using web scrapping and how using Neo4j, I’ve created a transportations network which is used for finding the best path based on transportation times.&lt;/p&gt;
&lt;p&gt;Topics: - Scrapping and data storage (structures and Unstructured): Getting weather, temperature, local events, planned maintenances and saving them in MongoDB and SQL databases - Creating a Neo4j database: Mapping the actual connections between transportation means - Finding the best path: using Dijkstra and A* algorithms to find the best paths, minimizing the travel time.&lt;/p&gt;
&lt;p&gt;Level of expected Audience: Basic knowledge of Python and databases&lt;/p&gt;
</summary></entry></feed>