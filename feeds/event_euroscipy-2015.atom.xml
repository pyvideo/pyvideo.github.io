<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_euroscipy-2015.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-10-07T00:00:00+00:00</updated><entry><title>Image Processing with Scikit Image</title><link href="https://pyvideo.org/euroscipy-2015/image-processing-with-scikit-image.html" rel="alternate"></link><published>2015-10-07T00:00:00+00:00</published><updated>2015-10-07T00:00:00+00:00</updated><author><name>Emmanuelle Gouillart</name></author><id>tag:pyvideo.org,2015-10-07:euroscipy-2015/image-processing-with-scikit-image.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From telescopes to satellite cameras to electron microscopes, scientists are producing large datasets of images to be processed and analyzed. This tutorial will introduce image processing using the &amp;quot;images as numpy arrays&amp;quot; abstraction, run through various fundamental image analysis operations (filters, morphology, segmentation), and finally complete one or two more advanced real-world examples.&lt;/p&gt;
&lt;p&gt;Access materials here:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/jni/skimage-tutorials/blob/euroscipy2015/2015-euroscipy/index.ipynb"&gt;https://github.com/jni/skimage-tutorials/blob/euroscipy2015/2015-euroscipy/index.ipynb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/jni/skimage-tutorials/blob/a7ab20a6da21222c4006537cba2c6ca85c7b9d33/lectures/00_images_are_arrays.ipynb"&gt;https://github.com/jni/skimage-tutorials/blob/a7ab20a6da21222c4006537cba2c6ca85c7b9d33/lectures/00_images_are_arrays.ipynb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/jni/skimage-tutorials/blob/a7ab20a6da21222c4006537cba2c6ca85c7b9d33/lectures/1_image_filters.ipynb"&gt;https://github.com/jni/skimage-tutorials/blob/a7ab20a6da21222c4006537cba2c6ca85c7b9d33/lectures/1_image_filters.ipynb&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</summary></entry><entry><title>Evidence Based Teaching What We Know and How to Use</title><link href="https://pyvideo.org/euroscipy-2015/evidence-based-teaching-what-we-know-and-how-to-use.html" rel="alternate"></link><published>2015-10-06T00:00:00+00:00</published><updated>2015-10-06T00:00:00+00:00</updated><author><name>Greg Wilson</name></author><id>tag:pyvideo.org,2015-10-06:euroscipy-2015/evidence-based-teaching-what-we-know-and-how-to-use.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What are the cognitive differences between novices, competent practitioners, and experts? Do different people really have different learning styles? Do flipped classrooms actually work better than regular lectures? This tutorial will explore recent research in these areas and more, and show participants how to apply that research in the classroom to improve teaching.&lt;/p&gt;
</summary></entry><entry><title>A Pure Python GUI Tookit Based on Web Technology</title><link href="https://pyvideo.org/euroscipy-2015/a-pure-python-gui-tookit-based-on-web-technology.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Almar Klein</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/a-pure-python-gui-tookit-based-on-web-technology.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk describes a cross-platform, pure Python toolkit for creating graphical user interfaces (GUI's), that uses web technology for its rendering. You can use it to create desktop applications, web apps, and add widgets to the IPython/Jupyter notebook.&lt;/p&gt;
</summary></entry><entry><title>Big Data in Little Laptop: A Streaming Story in Python</title><link href="https://pyvideo.org/euroscipy-2015/big-data-in-little-laptop-a-streaming-story-in-python.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Juan Nunez-Iglesias</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/big-data-in-little-laptop-a-streaming-story-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python contains nice primitives for streaming data processing. &amp;#64;mrocklin's Toolz library extends them to enable gorgeous, concise, memory-frugal code. I'll present an intuitive approach to streaming analysis in Python, starting with a &amp;quot;hello world&amp;quot;-level example, moving through image correction and streaming sklearn classifiers, and finally analysing a complete genome in a few minutes.&lt;/p&gt;
</summary></entry><entry><title>Bokeh for Data Storytelling</title><link href="https://pyvideo.org/euroscipy-2015/bokeh-for-data-storytelling.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Bryan Van de Ven</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/bokeh-for-data-storytelling.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Bokeh visualization library (&lt;a class="reference external" href="http://bokeh.pydata.org"&gt;http://bokeh.pydata.org&lt;/a&gt;) has grown into a large, successful open source project. This talk will describe Bokeh and show how it can enable domain experts to easily create novel and powerful visualizations that extract insight from remote, possibly large data sets, to be published to the web for others to explore and interact with.&lt;/p&gt;
</summary><category term="bokeh"></category></entry><entry><title>Building Complex Visualizations Easily</title><link href="https://pyvideo.org/euroscipy-2015/building-complex-visualizations-easily.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Philipp Rudiger</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/building-complex-visualizations-easily.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scientific visualization typically requires large amounts of custom coding that obscures the underlying principles of the work and makes it more difficult to share and reproduce the results. Here we describe how the new HoloViews Python package, combined with the IPython Notebook, provides a rich interface for flexible and nearly code-free visualization of your results while storing a full record.&lt;/p&gt;
</summary></entry><entry><title>Dashboarding w/ IPython Notebook</title><link href="https://pyvideo.org/euroscipy-2015/dashboarding-w-ipython-notebook.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Thomas Greg Corcoran</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/dashboarding-w-ipython-notebook.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will demonstrate the use of IPython notebook widgets for the monitoring of long-running processes such as parameter search in machine learning and model-based computational science. This use of the IPython notebook widget technology allows the introspection of experiments in an interactive manner from within a familiar platform thereby allowing a rapid iteration of scientific code.&lt;/p&gt;
</summary></entry><entry><title>Data Cleaning on Text to Prepare for Analysis and Machine Learning</title><link href="https://pyvideo.org/euroscipy-2015/data-cleaning-on-text-to-prepare-for-analysis-and-machine-learning.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Ian Ozsvald</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/data-cleaning-on-text-to-prepare-for-analysis-and-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dirty data makes analysis and machine learning harder (or impossible!) and more prone to failure. I'll talk on the techniques we use at ModelInsight to fix badly encoded, inconsistent and hard-to-parse text data that enable us to prepare real-world industrial data for research.&lt;/p&gt;
</summary></entry><entry><title>Get Native with Cython</title><link href="https://pyvideo.org/euroscipy-2015/get-native-with-cython-euroscipy-2015-stefan-behnel.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Stefan Behnel</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/get-native-with-cython-euroscipy-2015-stefan-behnel.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cython is not only an excellent and widely used tool to speed up computational Python code, it’s also a very comfortable way to talk to native code and libraries. This tutorial by a Cython core developer introduces the Cython programming language and its compiler and leads the participants all the way from their first Python extension to an efficient integration with native C/C++ code.&lt;/p&gt;
</summary></entry><entry><title>Getting More Out of Matplotlib with GR</title><link href="https://pyvideo.org/euroscipy-2015/getting-more-out-of-matplotlib-with-gr-euroscipy-2015-josef-heinen.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Josef Heinen</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/getting-more-out-of-matplotlib-with-gr-euroscipy-2015-josef-heinen.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Matplotlib is the most popular graphics library for Python. It is the workhorse plotting utility of the scientific Python world. However, depending on the field of application, the software may be reaching its limits. This is the point where the GR framework will help. GR can be used as a backend for Matplotlib applications and significantly improve the performance and expand their capabilities.&lt;/p&gt;
</summary><category term="matplotlib"></category></entry><entry><title>How “Good” is Your Model</title><link href="https://pyvideo.org/euroscipy-2015/how-good-is-your-model.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>C. Chen</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/how-good-is-your-model.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What distinguishes “true artists” from “one-hit wonders” in machine learning is an understanding of how a model performs with respect to different data. This hands-on tutorial will show you how to use scikit-learn’s model evaluation functions to evaluate different models in terms of accuracy and generalisability, and search for optimal parameter configurations.&lt;/p&gt;
</summary></entry><entry><title>Introduction</title><link href="https://pyvideo.org/euroscipy-2015/introduction.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Didrik Pinte</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/introduction.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The EuroSciPy meeting is a cross-disciplinary gathering focused on the use and development of the Python language in scientific research. This event strives to bring together both users and developers of scientific tools, as well as academic research and state of the art industry.&lt;/p&gt;
</summary></entry><entry><title>JyNI - Prepare Jython for Scientific Code</title><link href="https://pyvideo.org/euroscipy-2015/jyni-prepare-jython-for-scientific-code.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Stefan Richthofer</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/jyni-prepare-jython-for-scientific-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jython is the most seamless Java/Python integration that currently exists. Its main drawback is the missing support for CPython's C-extension API - a fact that prevents most scientific code from running. While the C-API is hard to implement/emulate for various reasons, JyNI (Jython Native Interface) explores solutions for each of them and demonstrates a workable approach.&lt;/p&gt;
</summary></entry><entry><title>Keynote - Pieter Hintjens</title><link href="https://pyvideo.org/euroscipy-2015/keynote-pieter-hintjens.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Pieter Hintjens</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/keynote-pieter-hintjens.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pieter Hintjens' keynote addresses the development of open-source communities.&lt;/p&gt;
</summary></entry><entry><title>Keynote - Randy LeVeque</title><link href="https://pyvideo.org/euroscipy-2015/keynote-randy-leveque.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Randy LeVeque</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/keynote-randy-leveque.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter notebooks for teaching, documentation, and reproducible research.&lt;/p&gt;
</summary></entry><entry><title>klepto Unified Persistent Storage to Memory, Disk, or Database</title><link href="https://pyvideo.org/euroscipy-2015/klepto-unified-persistent-storage-to-memory-disk-or-database.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Mike McKerns</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/klepto-unified-persistent-storage-to-memory-disk-or-database.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;klepto is a new python package that provides a unified programming interface to caching and archiving to memory, disk, or database. klepto provides a dictionary interface to caches and archives, where all caches can also be applied to any python callable as a decorator. klepto can be used to create dual caching strategies for speed and robustness, with design abstractions for things like multiple&lt;/p&gt;
</summary></entry><entry><title>Modeling Living Tissues with Python: An Ongoing Project</title><link href="https://pyvideo.org/euroscipy-2015/modeling-living-tissues-with-python-an-ongoing-project.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Guillaume Gay</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/modeling-living-tissues-with-python-an-ongoing-project.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;During morphogenesis, living tissues undergo dramatic changes in shape and organization. Cells divide, migrate or die to achieve the formation of organs of complex shape. Here I will show how scientific python was used to model the mechanical effects of programmed cell death during the formation of folds in a tissue.&lt;/p&gt;
</summary></entry><entry><title>Modelling Complex Geochemical Processes</title><link href="https://pyvideo.org/euroscipy-2015/modelling-complex-geochemical-processes.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Anne Weber</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/modelling-complex-geochemical-processes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A PyQt based GUI was developed to enhance the accessibility of complex scientific water quality models. With the help of the GUI a non-scientific audience can simulate scenarios for in-situ removal of dissolved iron from groundwater. I will also focus on how the special design of a GUI and the data handling behind can structure complex processes, guide the user and minimize runtime errors.&lt;/p&gt;
</summary></entry><entry><title>Parallel Implementation in Python of a Pseudo-Spectral DNS Code</title><link href="https://pyvideo.org/euroscipy-2015/parallel-implementation-in-python-of-a-pseudo-spectral-dns-code.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Mikael Mortensen</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/parallel-implementation-in-python-of-a-pseudo-spectral-dns-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Direct Numerical Simulations (DNS) of the Navier Stokes equations is a valuable research tool in fluid dynamics, but there are very few publicly available codes and, due to heavy number crunching, codes are usually written in low-level languages. In this talk I will describe a pure Python DNS code that nearly matches the performance of pure C for thousands of processors and billions of unknowns.&lt;/p&gt;
</summary></entry><entry><title>Poster Sessions</title><link href="https://pyvideo.org/euroscipy-2015/poster-sessions.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Various Contributors</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/poster-sessions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quick overview presentations made by the poster creators at EuroSciPy 2015.&lt;/p&gt;
</summary></entry><entry><title>Probabilistic Programming and Sports Analytics</title><link href="https://pyvideo.org/euroscipy-2015/probabilistic-programming-and-sports-analytics.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Peadar Coyle</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/probabilistic-programming-and-sports-analytics.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How do you use Probabilistic Programming and PyMC to predict the Six Nations Rugby?&lt;/p&gt;
</summary></entry><entry><title>PyFR</title><link href="https://pyvideo.org/euroscipy-2015/pyfr.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Freddie Witherden</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/pyfr.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will describe PyFR a high-order accurate compressible fluid flow solver for mixed unstructured grids being developed at Imperial College London and authored in Python. We will outline the techniques employed to allow PyFR to run heterogeneously on CPUs, GPUs and the Intel Xeon Phi, with an emphasis on run-time code generation.&lt;/p&gt;
</summary></entry><entry><title>pyMIC</title><link href="https://pyvideo.org/euroscipy-2015/pymic.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Michael Klemm</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/pymic.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Intel Xeon Phi coprocessor strives to provide additional compute power to HPC applications. This talk introduces the pyMIC module for offloading to the coprocessor from scientific Python codes. Its easy-to-use interface to invoke compute kernels, while handling data transfers in a flexible yet performant way. We will describe pyMIC's design and show how to use pyMIC in Python HPC applications.&lt;/p&gt;
</summary></entry><entry><title>Quantum Transport Simulations</title><link href="https://pyvideo.org/euroscipy-2015/quantum-transport-simulations.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Christoph Groth</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/quantum-transport-simulations.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kwant (&lt;a class="reference external" href="http://kwant-project.org/"&gt;http://kwant-project.org/&lt;/a&gt;), a package for quantum transport, is a recent addition to the scientific Python universe. I will demonstrate how our library allows to solve non-trivial problems with a few lines of code and explain why it is faster, more general, and easier to use than alternatives written in pure C/C++ or Fortran and how your own non-quantum programs can profit from it.&lt;/p&gt;
</summary></entry><entry><title>ReciPy Effortless Provenance Tracking for Python</title><link href="https://pyvideo.org/euroscipy-2015/recipy-effortless-provenance-tracking-for-python.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Robin Wilson</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/recipy-effortless-provenance-tracking-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever run a Python script to produce some outputs and then forgotten exactly how you created them? For example, you created plot.png a few weeks ago and now you want to use it in a publication. By adding a single line of code to your script, ReciPy will log your inputs, outputs and code each time you run it. Come and find out how to use it, how it hooks into Python, and how you can help.&lt;/p&gt;
</summary></entry><entry><title>ReScience Initiative</title><link href="https://pyvideo.org/euroscipy-2015/rescience-initiative.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Nicolas Rougier</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/rescience-initiative.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ReScience is a peer-reviewed journal that target computational research and encourage the explicit reproduction of already published research promoting new and open-source implementations in order to ensure the original research is reproducible. To achieve such a goal, the whole editing chain is radically different from any other traditional scientific journal and ReScience lives on github.&lt;/p&gt;
</summary></entry><entry><title>Reverse Engineering Animal Vision with Virtual Reality</title><link href="https://pyvideo.org/euroscipy-2015/reverse-engineering-animal-vision-with-virtual-reality.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Santiago Villalba</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/reverse-engineering-animal-vision-with-virtual-reality.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We present python tools for analyzing large collections of stimulus-response time series. The PyData ecosystem proves proficient at all levels of the data processing pipeline: from collection to discriminative analysis and interpretation. We introduce two new libraries: &amp;quot;whatami&amp;quot;, for easy computation provenance tracking, and &amp;quot;pyopy&amp;quot;, for seamless talking to useful octave/matlab libraries&lt;/p&gt;
</summary></entry><entry><title>Space Mission Design with Python</title><link href="https://pyvideo.org/euroscipy-2015/space-mission-design-with-python.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Helge Eichhorn</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/space-mission-design-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Designing a space mission is a computation-heavy task. Software tools that conduct the necessary numerical simulations and optimizations are therefore indispensable. Since the beginning of computational astrodynamics the language of choice has been Fortran and more recently MATLAB. This talk explores how Python's unique strengths and its ecosystem make it a viable alternative for future missions.&lt;/p&gt;
</summary></entry><entry><title>Spimagine Interactive GPU Based Visualization and Processing</title><link href="https://pyvideo.org/euroscipy-2015/spimagine-interactive-gpu-based-visualization-and-processing.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Martin Weigert</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/spimagine-interactive-gpu-based-visualization-and-processing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will present Spimagine, a python package to interactively visualize and process time lapsed volumetric data as generated with modern light sheet microscopes. The package provides a 3D+t data viewer as well as denoising and deconvolution methods and makes use of GPU acceleration via OpenCL.&lt;/p&gt;
</summary></entry><entry><title>Statistics in Python</title><link href="https://pyvideo.org/euroscipy-2015/statistics-in-python.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Gaël Varoquaux</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/statistics-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will focus on inferential and exploratory statistics in Python: modelling statistical relationship between variables. It will give an introduction to pandas for consistent manipulation of heterogeneous set of variables (for example gender and age) and to statsmodel to estimate a test statistical models.&lt;/p&gt;
</summary></entry><entry><title>Tutorial | Basic Bokeh</title><link href="https://pyvideo.org/euroscipy-2015/tutorial-basic-bokeh.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Bryan Van de Ven</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/tutorial-basic-bokeh.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to use Bokeh to create interactive visualizations and data applications.&lt;/p&gt;
</summary></entry><entry><title>Want drugs? Use Python</title><link href="https://pyvideo.org/euroscipy-2015/want-drugs-use-python.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Michal Nowotka</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/want-drugs-use-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We describe how Python is leveraged to streamline the modelling of drug discovery data and the development of tools for the scientific community. We look at various examples, e.g. chemistry toolkits, machine-learning applications and web frameworks and show how Python can glue it all together to create efficient data science pipelines.&lt;/p&gt;
</summary></entry></feed>