<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_stefanie-luck.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-10-30T00:00:00+00:00</updated><entry><title>Python for standalone applications</title><link href="https://pyvideo.org/pycon-de-2016/python-for-standalone-applications.html" rel="alternate"></link><published>2016-10-30T00:00:00+00:00</published><updated>2016-10-30T00:00:00+00:00</updated><author><name>Stefanie Lück</name></author><id>tag:pyvideo.org,2016-10-30:pycon-de-2016/python-for-standalone-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many end users are used to applications with a graphical user interface (GUI). This is especially true in fields such as life science or humanistic disciplines. Therefore, the development of user-friendly GUI’s is a common task for some Python programmers. While a modern web application could be an alternative , often a permanent Internet access is not possible or not desired because of data confidentiality issues. In such cases a standalone application is required.Although several powerful and feature-rich GUI toolkits, such as Qt, or plotting libraries like matplotlib exist, they are often too low-level and add considerable complexity, especially for small and simple applications. Combined with the efforts for deploying the software on different operation systems, developing the interface may take significantly more time than writing the core application logic. Again, this effect is stronger the smaller the applications.
Therefore, we would like to initiate a discussion in the Python community about assembling and adapting of existing libraries into a compact and easy to use package which features: - Simple development of a contemporary looking GUI - Simple integration of plotting basic but modern looking scientific plots - Simple cross-platform deployment Such a package may facilitate the development of lightweight applications significantly. Furthermore, it can be of a great help for anyone who makes his/her first steps in Python programming, and thus to increase the popularity of the language.In this talk, we present several standalone bioinformatics applications with a graphical user interface. We provide examples of the problems we faced and how we overcame them. Furthermore, we demonstrate the repeated workflow steps for creating the GUI and making the application stand-alone for different platforms. Based on these experiences, we propose a high-level framework that greatly facilitates the development of such kinds of applications.&lt;/p&gt;
</summary></entry><entry><title>RISCy Business: Development of a RNAi design and off-target prediction software</title><link href="https://pyvideo.org/europython-2014/riscy-business-development-of-a-rnai-design-and.html" rel="alternate"></link><published>2014-07-24T00:00:00+00:00</published><updated>2014-07-24T00:00:00+00:00</updated><author><name>Stefanie Lück</name></author><id>tag:pyvideo.org,2014-07-24:europython-2014/riscy-business-development-of-a-rnai-design-and.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;RNA interference (RNAi) is a biological mechanism for targeted
inhibition of gene expression. It has also been used routinely to
discover genes involved in the interaction of plants with pathogenic
fungi. To minimize the miss-targeting of unrelated genes and to maximize
the RNAi efficiency, we have developed a PyQt based cross- platform
software tool called “si-Fi”. Our aim of the talk is to show that also
hobby programmers can use Python in a very useful way.&lt;/p&gt;
</summary></entry><entry><title>Identifizierung von Duplikaten automatisch aufgenommener Mikroskop-Farbbilder</title><link href="https://pyvideo.org/pycon-de-2011/identifizierung-von-duplikaten-automatisch-aufgen.html" rel="alternate"></link><published>2011-10-06T00:00:00+00:00</published><updated>2011-10-06T00:00:00+00:00</updated><author><name>Stefanie Lück</name></author><id>tag:pyvideo.org,2011-10-06:pycon-de-2011/identifizierung-von-duplikaten-automatisch-aufgen.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Der Getreidemehltau kann viele Gräserarten befallen. Um dies zu
Untersuchen verwenden wir ein transientes Testverfahren, welches auf
mikroskopische Phänotypisierung beruht. Zur manuellen Kontrolle eines
automatischen Hochdurchsatz Screeningsystems implementierten wir in
Python eine Annotationssoftware mit integriertem
Kreuzkorrelationsalgorithmus, welcher aufgenommene Bildduplikate
ausschließt.&lt;/p&gt;
</summary></entry></feed>