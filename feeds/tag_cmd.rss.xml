<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 30 Jul 2011 00:00:00 +0000</lastBuildDate><item><title>PyOhio 2011: Interactive command-line interpreters with cmd and cmd2</title><link>https://pyvideo.org/pyohio-2011/pyohio-2011--interactive-command-line-interpreter.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Interactive command-line interpreters with cmd and cmd2&lt;/p&gt;
&lt;p&gt;Presented by Catherine Devlin&lt;/p&gt;
&lt;p&gt;How should your Python program receive commands and deliver results? If
an interactive command-line interpreter is right for you, you're in luck
- Python's got some great batteries included for you.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catherine Devlin</dc:creator><pubDate>Sat, 30 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-30:pyohio-2011/pyohio-2011--interactive-command-line-interpreter.html</guid><category>cmd</category><category>cmd2</category><category>commandline</category><category>interpreters</category><category>pyohio</category><category>pyohio2011</category></item><item><title>plac: more than just another command-line arguments parser</title><link>https://pyvideo.org/europython-2011/plac-more-than-just-another-command-line-argumen.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Michele Simionato - 21 June 2011 in &amp;quot;Track Ravioli&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;plac is general purpose tool than can be used to define command-oriented
domain specific languages (DSLs). In its simplest form it can be used as
a command-line arguments parser with an easier-to-use API than argparse.
It can also be used to replace the cmd module in the standard library.
Moreover it can be used to automatize functional tests and for much
more. The talk will touch upon many use cases where plac can make your
life as a developer simpler and better. Technically Plac is a wrapper
over argparse and works in all versions of Python starting from Python
2.3 up to Python 3.2. In Python 3.X it takes advantage of function
annotations to define the parser in a declarative way, instead of the
imperative way of argparse. In Python 2.X it uses decorators instead, to
reach the same goal. The talk is a hands-on interactive demonstration of
plac capabilities.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michele Simionato</dc:creator><pubDate>Wed, 13 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-13:europython-2011/plac-more-than-just-another-command-line-argumen.html</guid><category>api</category><category>argparse</category><category>cmd</category><category>decorators</category><category>parser</category></item><item><title>Easy command-line applications with cmd and cmd2 (#153)</title><link>https://pyvideo.org/pycon-us-2010/pycon-2010--easy-command-line-applications-with-c.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Easy command-line applications with cmd and cmd2&lt;/p&gt;
&lt;p&gt;Presented by Catherine Devlin (IntelliTech Systems)&lt;/p&gt;
&lt;p&gt;The Python Standard Library's cmd module makes it absurdly simple to
write command-line interpreters - non-graphical programs that
communicate with users interactively through a simple text interface.
The third-party cmd2 module adds high-powered &amp;quot;batteries&amp;quot; to
applications written for cmd.&lt;/p&gt;
&lt;p&gt;This presentation teaches attendees how to easily make their own
powerful command-line interpreters with cmd and cmd2. It also describes
the tricks cmd2 uses for some of its more interesting functionality so
that they can implement them in their own programs (even unrelated
ones). It ends with a brief demonstration of sqlpython, a cmd2-based
application that improves on existing ad-hoc SQL applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catherine Devlin</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--easy-command-line-applications-with-c.html</guid><category>cmd</category><category>cmd2</category><category>pycon</category><category>pycon2010</category></item><item><title>Hidden Treasures in the Standard Library</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--hidden-treasures-in-the-standard-libr.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hidden Treasures in the Standard Library&lt;/p&gt;
&lt;p&gt;Presented by Doug Hellmann&lt;/p&gt;
&lt;p&gt;This presentation covers features of the standard library not widely
known or used. Each feature is presented with a short demonstration
program and explanation.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The standard library contains many hidden gems that are not widely used,
either because they are not publicized enough or because they are deep
in a module that programmers haven't had cause to study or use. This
presentation covers 8-10 selected topics of this nature in about 25
minutes (leaving time for a couple of questions). Demonstration code is
included for every item.&lt;/p&gt;
&lt;p&gt;Possible tips include, in no particular order:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Using hmac to verify pickled data before unpacking it.&lt;/li&gt;
&lt;li&gt;Using uuid4 to generate session tokens.&lt;/li&gt;
&lt;li&gt;Regular expression look-ahead/behind matches.&lt;/li&gt;
&lt;li&gt;pdb startup files&lt;/li&gt;
&lt;li&gt;Reading files with mmap&lt;/li&gt;
&lt;li&gt;Using csv dialects&lt;/li&gt;
&lt;li&gt;The robotparser module&lt;/li&gt;
&lt;li&gt;The rlcompleter module&lt;/li&gt;
&lt;li&gt;Using locale to format numbers and currency&lt;/li&gt;
&lt;li&gt;The cgitb module&lt;/li&gt;
&lt;li&gt;pkgutil.getdata&lt;/li&gt;
&lt;li&gt;contextlib.contextmanager&lt;/li&gt;
&lt;li&gt;The cmd module&lt;/li&gt;
&lt;li&gt;The fileinput module&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Doug Hellmann</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--hidden-treasures-in-the-standard-libr.html</guid><category>cgitb</category><category>cmd</category><category>contextlib.contextmanager</category><category>csv</category><category>fileinput</category><category>hmac</category><category>locale</category><category>pdb</category><category>pkgutil.getdata</category><category>pycon</category><category>pycon2011</category><category>rlcompleter</category><category>robotparser</category><category>uuid4</category></item></channel></rss>