<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 04 Oct 2019 00:00:00 +0000</lastBuildDate><item><title>Taming Irreversibility with Feature Flags</title><link>https://pyvideo.org/pygotham-2019/taming-irreversibility-with-feature-flags.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's been 10 years since Flickr’s development team documented the use of
Feature Flags in their software. Tech giants like Google and Facebook have
also stated their use, yet weirdly enough there seems to be only but few
around the community benefitting from feature flipping.&lt;/p&gt;
&lt;p&gt;Flags make toggling whole features on and off without touching the code
possible. This can help the development team not only by cutting down on
response time to disasters but also by loading on peace of mind for
developers. There are also great improvements on code sync frequency and in
the launching flow of new features - especially in applications with a large
sum of users.&lt;/p&gt;
&lt;p&gt;Along with these great benefits, feature flags also raise some concerns:
there are multiple strategies to implement them and numerous new things to
worry about when developing new gated features. From the tools you can use
to store and retrieve your flags to the way you can maintain your
application’s consistency in edge cases scenarios.&lt;/p&gt;
&lt;p&gt;This talk focuses on some of the benefits and challenges faced when using
feature flags on team projects, and how to extract their best value without
losing sight of code quality.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hugo Bessa</dc:creator><pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-04:pygotham-2019/taming-irreversibility-with-feature-flags.html</guid></item></channel></rss>