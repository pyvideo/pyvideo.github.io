<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Tue, 19 May 2015 00:00:00 +0000</lastBuildDate><item><title>Documentation, Disrupted: How Two Technical Writers Changed Google Engineering Culture</title><link>https://pyvideo.org/write-the-docs-2015/documentation-disrupted-how-two-technical-writers-changed-google-engineering-culture.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Riona MacNamara
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwxg/"&gt;http://lanyrd.com/2015/writethedocs/sdmwxg/&lt;/a&gt;
Last year, we were inspired to action by a presentation at Write the Docs. This talk will tell the story of what happened next: how, in two quarters, we worked with a small self-forming team of amazing writers and engineers to build a platform in six months is well on the way to becoming a part of the standard Google engineering workflow. We’ll share how that platform transformed our role as technical writers and our relationship with engineering. We’ll cover design and implementation details, but we’ll also talk about our experience - how we learned that being audacious (but not reckless), focused (but open and generous), and unafraid could revitalize our whole approach to work and save us from burnout.
We&amp;amp;#39;ll talk about our ever-growing appetite for disruption: How it changed beyond recognition our relationships with engineers, fellow writers, and senior leadership, making us fall in love again with our roles as documentarians.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Riona MacNamara</dc:creator><pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-19:write-the-docs-2015/documentation-disrupted-how-two-technical-writers-changed-google-engineering-culture.html</guid></item><item><title>Elevating the Hedgehog: Creativity in Tech Writing</title><link>https://pyvideo.org/write-the-docs-2015/elevating-the-hedgehog-creativity-in-tech-writing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tana Franko
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwxf/"&gt;http://lanyrd.com/2015/writethedocs/sdmwxf/&lt;/a&gt;
&amp;amp;quot;People who hope to thrive in the Conceptual Age must understand the connections between diverse, and seemingly separate, disciplines.&amp;amp;quot; So says Daniel Pink in his book, A Whole New Mind: Why Right-Brainers Will Rule the Future. In this talk, I assert that tech writers are a natural fit to help their organizations transition from the Information Age to the Conceptual Age. I&amp;amp;#39;ll also give and seek ideas on how we as writers can apply Pink&amp;amp;#39;s six aptitudes -- storytelling, empathy, design, humor, games, and finding meaning -- to make our work more fulfilling, if not more competitive.
The key underlying message for those who attend this talk is: YOU are a designer. Even if you haven&amp;amp;#39;t traditionally seen yourself in this role, writers are information designers who serve a unique, user-focused and holistic function on development teams. By recognizing that fact, and opening up space in your work life for creativity, you can have an even bigger impact and a more fulfilling career.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tana Franko</dc:creator><pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-19:write-the-docs-2015/elevating-the-hedgehog-creativity-in-tech-writing.html</guid></item><item><title>Entry points and guide posts: Helping new contributors find their way</title><link>https://pyvideo.org/write-the-docs-2015/entry-points-and-guide-posts-helping-new-contributors-find-their-way.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Janet Swisher
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwxh/"&gt;http://lanyrd.com/2015/writethedocs/sdmwxh/&lt;/a&gt;
How did Mozilla Developer Network (MDN) achieve a 46% increase in active editors and a 90% increase in translation contributions in 2014? Many factors helped, but a major element was the support we added for new contributors.
“Scratch your own itch” is the proverbial invitation to contribute to open source projects. How well this works for contributing to code is open to debate, but it rarely makes sense for open source documentation, especially for well-established projects. Not only is it unhelpful for the project, which typically has plans (or at least wishlists) for improving the docs, but it provides very little guidance to the contributor as to what they might do, what they personally are able to do, and what would be most helpful to do.
In the 10 years that MDN has been a wiki (some of the content pre-dates the wiki), the community has always welcomed constructive contributions by anyone who bothers to create a user account. Over the years, we’ve created meta-documentation about contributing to the site, including wishlists of things we’d like to see documented. However, these didn’t necessarily help newcomers gain traction.
Only in the last year or so have we created documentation to help new contributors specifically. Our aim is to help newcomers find the right match among:
Topics and tasks the person is interested in (what they like)
Tasks the person has the skills and time to do (what they can do)
Tasks that help MDN meet the goals that Mozilla has set (what we need/want)
I’ll describe the features we’ve put in place to achieve this, as well as things we’re still working on. I’ll leave space for discussion so we can all share ideas and successes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Janet Swisher</dc:creator><pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-19:write-the-docs-2015/entry-points-and-guide-posts-helping-new-contributors-find-their-way.html</guid></item><item><title>How GitHub uses GitHub to document GitHub</title><link>https://pyvideo.org/write-the-docs-2015/how-github-uses-github-to-document-github.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Garen J. Torikian
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwxc/"&gt;http://lanyrd.com/2015/writethedocs/sdmwxc/&lt;/a&gt;
Everyone knows that GitHub is the place to host your project&amp;amp;#39;s code. What you may not know is that the same workflow developers use to create, update, and manage their software is also used to create, update, and manage GitHub&amp;amp;#39;s documentation.
&lt;a class="reference external" href="https://help.github.com"&gt;https://help.github.com&lt;/a&gt; is GitHub&amp;amp;#39;s second-most viewed site--after the main website itself. I&amp;amp;#39;d like to provide a somewhat opinionated look on how our valiant Documentation team writes and releases content for features on GitHub.com and GitHub Enterprise. I&amp;amp;#39;ll go over:
How our teams (Development, Security, Docs, etc) coordinate before launching a feature
The importance of opening pull requests early
The review/edit cycle with peers
How we incorporate DITA best practices into our Markdown documentation
Validating content through CI and automated tests
How we incorporate feedback from our users&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Garen J. Torikian</dc:creator><pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-19:write-the-docs-2015/how-github-uses-github-to-document-github.html</guid></item><item><title>Keep 'em playing</title><link>https://pyvideo.org/write-the-docs-2015/keep-em-playing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Torrey Podmajersky
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwwx/"&gt;http://lanyrd.com/2015/writethedocs/sdmwwx/&lt;/a&gt;
When people have to stop to understand labels and instructions, they can&amp;amp;#39;t stay engaged in their experiences. My job shipping Xbox One was to use words so well, people wouldn&amp;amp;#39;t notice them at all. In this talk, I&amp;amp;#39;ll show the only 3 reasons I use words in user interfaces, how I find the right words, and how I increase engagement by respecting people’ intent.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Torrey Podmajersky</dc:creator><pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-19:write-the-docs-2015/keep-em-playing.html</guid></item><item><title>Keynote: The Federated Wiki</title><link>https://pyvideo.org/write-the-docs-2015/keynote-the-federated-wiki.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ward Cunningham
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwxk/"&gt;http://lanyrd.com/2015/writethedocs/sdmwxk/&lt;/a&gt;
Just as the first wiki changed how people write, our new wiki will change how people work. By pushing steadily on two fundamental ideas, refactoring to ease improvement and federation to ease sharing, we have once again uncovered a simpler and more powerful internet.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ward Cunningham</dc:creator><pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-19:write-the-docs-2015/keynote-the-federated-wiki.html</guid></item><item><title>Lightning Talks Write the Docs 2015-05-19</title><link>https://pyvideo.org/write-the-docs-2015/lightning-talks-write-the-docs-2015-05-19.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmxzh/"&gt;http://lanyrd.com/2015/writethedocs/sdmxzh/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-19:write-the-docs-2015/lightning-talks-write-the-docs-2015-05-19.html</guid><category>lightning talks</category></item><item><title>Martial Arts Philosophy Forged an Ad Hoc Writing Team that Writes Great Docs</title><link>https://pyvideo.org/write-the-docs-2015/martial-arts-philosophy-forged-an-ad-hoc-writing-team-that-writes-great-docs.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gaylin Walli
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwwz/"&gt;http://lanyrd.com/2015/writethedocs/sdmwwz/&lt;/a&gt;
At Fastly, a San Francisco-based content delivery network startup company, I’ve learned that almost every one of my co-workers, regardless of their job function, is willing to write our company’s documentation. Whether they realize it or not, each one of them has ventured onto the path of becoming a “writing team black belt.”
In this talk I’ll discuss how my company has unwittingly followed the seven (and a half) rules I normally associate with becoming a great martial artist. I’ll discuss how we’ve been using these rules to forge an amazing ad-hoc documentation team with no formal department and no squad of strategically placed technical writers. I’ll talk about how my company has managed it despite the obstacles of startup life, including moving seven times and growing from less than 30 employees when I first joined to a throng of more than 150 a mere year and a half later. Finally, I’ll point out some of our successes, a few of our failures, and how each of the seven (and a half) rules has taught us what it means to write Fastly.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gaylin Walli</dc:creator><pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-19:write-the-docs-2015/martial-arts-philosophy-forged-an-ad-hoc-writing-team-that-writes-great-docs.html</guid></item><item><title>Start Your Own Write The Docs Meetup Group</title><link>https://pyvideo.org/write-the-docs-2015/start-your-own-write-the-docs-meetup-group.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mike Jang
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwwy/"&gt;http://lanyrd.com/2015/writethedocs/sdmwwy/&lt;/a&gt;
With just a little work, you can feel the joy of Write The Docs all year!
I started the Write The Docs PDX Meetup Group back in May of 2014, just after last year’s conference. As the only writer in my office, I often feel alone. At Write The Docs NA 2014 conference, I felt the joy of interacting with documentarians like myself, people who were facing similar challenges. I wanted to continue feeling that joy.
I’ll describe my experiences creating a Write The Docs Meetup group in Portland. I’ll show you how easy⃰ it is to create a Meetup group, attract members, get sponsors, find speakers, and make sure all members of your group feel welcome. I’ll tell you about the Meetups we’ve had, and what we learned from each other.
More importantly, I’ll lay out the ways you can continue the conversation we’ve had during WTD 2015. I’ll share my best practices for excellent Meetups for Documentarians.
⃰Yes, “easy” is a euphemism for a lot of hard work. But the people you’ll meet and the contacts that you’ll make can reward you and your company in other ways.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Jang</dc:creator><pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-19:write-the-docs-2015/start-your-own-write-the-docs-meetup-group.html</guid></item><item><title>Success is more than not-failing</title><link>https://pyvideo.org/write-the-docs-2015/success-is-more-than-not-failing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Heidi Waterhouse
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmpdt/"&gt;http://lanyrd.com/2015/writethedocs/sdmpdt/&lt;/a&gt;
We talk a lot about minimum viable products, and building our products up from small features. We talk a lot about failure, and how to learn from it and not replicate failures over and over again. But what I haven’t heard a lot of discussion about is how we know we’ve succeeded. Is it market share? Usable product? Could understanding and setting a measurable, achievable goals help us overcome imposter syndrome, second sock syndrome, and feature creep?
This talk provides some metrics on identifying success, documenting what it will look like when you get there, preserving the idea, and dealing with the inevitable distractions and changes in direction that may prevent you from ending up where you expect.
I plan to speak on how documentation can serve a crucial function at both defining and driving success. We need to stop believing that agile is the end of the answer and embrace it as part of building what we want to have in the end.
Continuous improvement can have a victory condition, if we build it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Heidi Waterhouse</dc:creator><pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-19:write-the-docs-2015/success-is-more-than-not-failing.html</guid></item><item><title>What Can Brownfield Do For You?</title><link>https://pyvideo.org/write-the-docs-2015/what-can-brownfield-do-for-you.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mo Nishiyama
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwxd/"&gt;http://lanyrd.com/2015/writethedocs/sdmwxd/&lt;/a&gt;
As documentarians, we are rarely afforded an opportunity to thrive in a pristine greenfield environment. Sometimes we are asked to resurrect an existing documentation system which had fallen into a derelict state over many years. To turn this ship around, we must shepherd contents, customer base, and internal Subject Matter Experts into a future state where outdated, neglected, and ambiguous support documents are transformed into timely, relevant, and pleasing works of art.
The role of the documentarian is to help execute this transformation. However, we are often asked (or voluntold) by our organizations to wear other hats beyond our primary writing duties: repair and build relationships, analyze business processes, learn about how others react to change, discover unknown troves of documentation, train and encourage the next generation of writers, gather and crunch data, tell stories, design workflows, and perform “other duties as needed.” Some may respond with an exasperated “I wasn’t trained on this!!!” or “That’s not part of my job!” But those of us who embrace the opportunity to stretch beyond our areas of expertise and learn new peripheral skills may realize that working on a documentation equivalent of a cleaning up Superfund site can turn into super fun.
In this talk, I will share my experiences and lessons learned as a technical writer who is witnessing this documentation culture change, one conversation at a time. Wearing many hats can be exhilarating and rewarding.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mo Nishiyama</dc:creator><pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-19:write-the-docs-2015/what-can-brownfield-do-for-you.html</guid></item><item><title>A brief history of math writing: symbol, structure, and proof</title><link>https://pyvideo.org/write-the-docs-2015/a-brief-history-of-math-writing-symbol-structure-and-proof.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Emily Hoffmann, Alfonso Roman
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwyb/"&gt;http://lanyrd.com/2015/writethedocs/sdmwyb/&lt;/a&gt;
A mathematical proof is a logically rigorous way of showing that something is true. It begins with a statement of the desired result and any assumptions that must be made. It guides the reader through a set of logical sequential steps, supported by figures to aid intuition or cross-references for prerequisite knowledge. It ends by declaring that the desired result has been achieved. At risk of insulting every mathematician who ever lived, in many ways a proof is not so different from a grand, abstract how-to document.
Perhaps surprisingly, for most of human history mathematical proofs and mathematics itself have been written in prose. Even those of us who cringe at the memory of high school algebra can agree that “10x + y^2 = 3” is more user-friendly than “the sum of an unknown quality multiplied by ten and another unknown quantity multiplied by itself is equal to three”. The first part of this talk explores the development of mathematical writing, which can be divided into improvements in symbolic representation and improvements in structure. This discussion is partly inspired by Bret Victor’s observation that the most influential breakthroughs in the history of mathematics were actually breakthroughs in “UI design”, for example the invention of arabic numerals (0, 1, 2, 3,...) as a replacement for clunky roman numerals (I, II, III, IV…).
Proofs and rigorous documentation empower their readers to greater understanding by never relying on authority or persuasion. A mathematical proof, unlike a scientific experiment or a souffle recipe, must show that the desired result is always achieved when the right steps are executed under the right conditions. Users of computer applications certainly expect documentation to live up to the same standards. The second part of this talk explores the concept of mathematical proof in more depth. We will look at how proofs are structured and use logic in a particular way to minimize ambiguity and maximize credibility, and how the writing process is itself a powerful tool to root out hidden assumptions and errors in thinking.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Emily Hoffmann</dc:creator><pubDate>Mon, 18 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-18:write-the-docs-2015/a-brief-history-of-math-writing-symbol-structure-and-proof.html</guid></item><item><title>A Developers Approach to Documentation: From Passive to Dynamic</title><link>https://pyvideo.org/write-the-docs-2015/a-developers-approach-to-documentation-from-passive-to-dynamic.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gregory Koberger
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwxz/"&gt;http://lanyrd.com/2015/writethedocs/sdmwxz/&lt;/a&gt;
The era of O’Reilly books is done, finito, kaput. With so much of the developer experience online, we know a great deal about each individual user and about the code we document. Why, then, do we documentarians persist in providing the same walls of text to each of our readers, especially when there are so many more personalized ways of describing technical tools and code?
This talk addresses the move from passive to dynamic documentation. As code goes mainstream, more and more consumers of APIs and technical writing will be non-technical. Technical writing bears a responsibility to reduce the learning curve as much as possible for these readers, and it can do that by being much more intimate about its relationship with them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gregory Koberger</dc:creator><pubDate>Mon, 18 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-18:write-the-docs-2015/a-developers-approach-to-documentation-from-passive-to-dynamic.html</guid></item><item><title>Designing Information for Growth</title><link>https://pyvideo.org/write-the-docs-2015/designing-information-for-growth.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Marya DeVoto
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwyg/"&gt;http://lanyrd.com/2015/writethedocs/sdmwyg/&lt;/a&gt;
Every tech company or organization organically produces docs in some form, but as scale increases, the information design decisions you started with will almost certainly serve some information consumers better than others. Depending on who&amp;amp;#39;s creating information and who&amp;amp;#39;s using it, the approach to designing and delivering information can be dramatically different, with very different outcomes that probably won&amp;amp;#39;t work across an entire larger organization. Be aware of the information design decisions you&amp;amp;#39;re making so you can plan for growth. Design by default is not a good strategy!
This talk discusses how:
Information inherently includes design, whether or not you meant to do it. Information also requires design, no matter how simple and straightforward it may seem.
Technical information can be roughly sorted into modes such as descriptive, defensive, procedural, and tutorial. (These are different from concept-task-reference.)
Each of these modes has different design implications that address different audiences and needs.
Being aware of your design priorities can help you understand how to make your stakeholders happier as your documentation base grows with the organization.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marya DeVoto</dc:creator><pubDate>Mon, 18 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-18:write-the-docs-2015/designing-information-for-growth.html</guid></item><item><title>How to Write Documentation for People that Don't Read</title><link>https://pyvideo.org/write-the-docs-2015/how-to-write-documentation-for-people-that-dont-read.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kevin Burke
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwxy/"&gt;http://lanyrd.com/2015/writethedocs/sdmwxy/&lt;/a&gt;
It&amp;amp;#39;s 3AM, do you know where your users are? If people want to learn how to use your product, where are they looking for help? Are they on your site, and if they&amp;amp;#39;re on your site, are they finding the right page?
Usability researchers have known for decades that users don&amp;amp;#39;t read word by word - they scan for the content they want.
If users can&amp;amp;#39;t make heads or tails of your documentation, they&amp;amp;#39;ll give up (a loss of revenue), remain ignorant of product features (another loss of revenue) or ask needless support questions (an increased cost).
In this talk we&amp;amp;#39;ll examine the findability of your documentation, and the text on the pages in your documentation. We&amp;amp;#39;ll examine usability research into how users read, look at several ways your documentation is failing busy users, and the lessons I learned conducting user tests at Twilio. We&amp;amp;#39;ll learn more about how users find the answers they are looking for, and the importance of spreading clear writing across not just your documentation, but your headlines and error messages in your API.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Burke</dc:creator><pubDate>Mon, 18 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-18:write-the-docs-2015/how-to-write-documentation-for-people-that-dont-read.html</guid></item><item><title>Introduction</title><link>https://pyvideo.org/write-the-docs-2015/introduction.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Eric Holscher
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmxyz/"&gt;http://lanyrd.com/2015/writethedocs/sdmxyz/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Holscher</dc:creator><pubDate>Mon, 18 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-18:write-the-docs-2015/introduction.html</guid></item><item><title>Keynote: We Are All Abbott and Costello</title><link>https://pyvideo.org/write-the-docs-2015/keynote-we-are-all-abbott-and-costello.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Marcia Riefer Johnston
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwxm/"&gt;http://lanyrd.com/2015/writethedocs/sdmwxm/&lt;/a&gt;
Documentarians and technical writers have seen many changes in our professions in recent years, and there’s no sign of change slowing down. One thing endures: the writer&amp;amp;#39;s goal of communicating to understanding. It’s not as easy as it sounds. Because we are all Abbott and Costello.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marcia Riefer Johnston</dc:creator><pubDate>Mon, 18 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-18:write-the-docs-2015/keynote-we-are-all-abbott-and-costello.html</guid></item><item><title>Let’s Tell a Story: Scenario-Based Documentation</title><link>https://pyvideo.org/write-the-docs-2015/lets-tell-a-story-scenario-based-documentation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Matt Ness
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwxx/"&gt;http://lanyrd.com/2015/writethedocs/sdmwxx/&lt;/a&gt;
To new users, complex software products can seem like dark woods on a stormy day. As tech writers, we often spend a lot of time talking about the overall shape of the forest and the variety of paths within it (conceptual docs), creating detailed catalogs of local tree species (reference docs), and providing step-by-step guides to things like “how to cross a river” or “how to knock on a door” (task-based docs).
But none of that helps your customers when they just want to know how to get to Grandmother’s house, without getting lost in the forest, falling into the river, and accidentally going to the other cabin in the woods, where the lycanthropic senior citizens live.
In other words, your customers need a narrative. And maybe they need lots of them. When you’re dealing with products that can be run and configured in a bewildering variety of ways, a single getting started manual might not do the trick. It’s like giving people a Choose Your Own Adventure book and only allowing them to choose one path through to the end.
For my talk I’ll explain how we became aware of the need for better scenario-based documentation, and how we ended up building a prototype during a hack week project. Now we’re on our way to creating a collection of short stories that show users how to string sets of features and procedures together to solve complex problems. We’ll cover some of the things we’ve learned along the way and offer best practices for those who want to tell a few stories of their own.
Matt Ness is a technical writer with over twenty years of experience at places like PeopleSoft, Oracle, and Intuit. He&amp;amp;#39;s currently a writer for Splunk, a leader in the machine data analytics sector.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Ness</dc:creator><pubDate>Mon, 18 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-18:write-the-docs-2015/lets-tell-a-story-scenario-based-documentation.html</guid></item><item><title>Lightning Talks Write the Docs 2015-05-18</title><link>https://pyvideo.org/write-the-docs-2015/lightning-talks-write-the-docs-2015-05-18.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmxzg/"&gt;http://lanyrd.com/2015/writethedocs/sdmxzg/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Mon, 18 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-18:write-the-docs-2015/lightning-talks-write-the-docs-2015-05-18.html</guid><category>lightning talks</category></item><item><title>Tech writing in a continuous deployment world</title><link>https://pyvideo.org/write-the-docs-2015/tech-writing-in-a-continuous-deployment-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Christine Burwinkle
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwyf/"&gt;http://lanyrd.com/2015/writethedocs/sdmwyf/&lt;/a&gt;
Here at Atlassian, we’ve been moving ever closer to a world of continuous deployment for our software products. Five years ago, releases took months. Now, many products are releasing every two weeks at a minimum. In addition, the past year has seen features being deployed as soon as they pass testing. What’s a tech writer to do!?
In true agile fashion, the response to these challenges varies across products and writers within Atlassian. This gives us a breadth of stories and examples I can share about our experiences in this world. Here’s a high-level look at what I’ll share:
A brief discussion of continuous deployment: what does it mean, especially for tech writers and others involved in the process?
A look at some things that have worked for us. Making the mental shift from releases to features has been an absolute necessity. We’ve also had to change the tooling we use, the processes we follow, and the way we communicate. This journey has also forced us to consider what the documentation equivalent of an MVP (minimal viable product in Agile development) looks like.
There are a few things that haven’t worked out very well! Resource-heavy deliverables (like videos and tutorials) are really difficult to maintain. Communication also increases in importance in a rapidly-paced cycle. These and other areas provide us with some good lessons learned.
The jury is still out on a few experiments! Things like investing more heavily in in-app help and automating doc publication in tandem with code deployment are among the experiments we’re attempting to get better at this new world.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christine Burwinkle</dc:creator><pubDate>Mon, 18 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-18:write-the-docs-2015/tech-writing-in-a-continuous-deployment-world.html</guid></item><item><title>User-Story Driven Docs</title><link>https://pyvideo.org/write-the-docs-2015/user-story-driven-docs.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Joao Fernandes
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwyd/"&gt;http://lanyrd.com/2015/writethedocs/sdmwyd/&lt;/a&gt;
At OutSystems we make an awesome development platform, but our documentation wasn&amp;amp;#39;t that awesome. We focused on describing each button available on the user interface, and not the user intentions and goals.
A clear example of this, was that we had a full documentation page for the find text feature (CTRL+F). It described in excruciating detail every option available on the UI, but didn&amp;amp;#39;t told our users how they could actually find what they needed!
For us it was a nightmare to maintain the docs. Our development environment was constantly changing and we couldn&amp;amp;#39;t keep up with the changes.
More importantly, we weren&amp;amp;#39;t meeting the user needs. And that was clear from pages with a single-digit page view, and from the feedback we got from our customers.
Due to this approach, we also ended up having page titles that were feature-oriented, which is not the best for SEO. For instance, the doc page for the find text feature was called &amp;amp;quot;Find Tool&amp;amp;quot;. Who in their right mind would search for that on Google?
In this talk I&amp;amp;#39;ll tell you the story of how we stopped trying to document the UI, and started creating user-story driven docs. We now focus on what the user wants to achieve and how to achieve it, independently of how many windows or buttons they need to go through.
I&amp;amp;#39;ll cover:
How you can check if you&amp;amp;#39;re documenting the UI, and why you should avoid doing it
Why users stories work better for our users
How focusing on user stories changed the culture of our team and allowed us to work on what really matters.
I&amp;amp;#39;ll also share some unexpected outcomes, like how this lead us to work closer than ever with the development teams. Now our users get twice the cake: better features and better docs!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joao Fernandes</dc:creator><pubDate>Mon, 18 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-18:write-the-docs-2015/user-story-driven-docs.html</guid></item><item><title>Writer, Meet Tester</title><link>https://pyvideo.org/write-the-docs-2015/writer-meet-tester.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Arthur Louie, Jody Bleyle
&lt;a class="reference external" href="http://lanyrd.com/2015/writethedocs/sdmwxp/"&gt;http://lanyrd.com/2015/writethedocs/sdmwxp/&lt;/a&gt;
A software tester can be a tech writer’s best friend, and vice versa. Jody (writer) and Arthur (tester) work together on APIs at Salesforce.com, and we’ll talk about the tools and techniques we use to improve the quality of both our software and our documentation at the same time.
While our APIs are still in development, we gather feedback internally. We established an API design review board to approve every API change -- this made a huge difference in ensuring that we offer a consistent, easy-to-consume programmatic interface to our users. We also conduct regular “dogfooding” sessions in which users are provided with draft documentation and asked to find both doc and product bugs.
Our testers created an automated mechanism to alert us of any API changes in case anything slipped past the review board. It’s proven to be invaluable for both doc and testing to keep up with the various teams who are building functionality into the API.
Once our APIs are publicly available, we take pride in listening to our users in help forums, on Twitter, and through pilot programs. We’ve clarified our documentation and added test cases numerous times based on customer pain points.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Arthur Louie</dc:creator><pubDate>Mon, 18 May 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-05-18:write-the-docs-2015/writer-meet-tester.html</guid></item></channel></rss>