<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 24 Jul 2014 00:00:00 +0000</lastBuildDate><item><title>User to framework author in four hours - Part 1</title><link>https://pyvideo.org/europython-2013/user-to-framework-author-in-four-hours-part-1.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fredrik Håård</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/user-to-framework-author-in-four-hours-part-1.html</guid><category>best-practices</category><category>framework</category><category>python3</category><category>interactive</category></item><item><title>User to framework author in four hours - Part 2</title><link>https://pyvideo.org/europython-2013/user-to-framework-author-in-four-hours-part-2.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fredrik Håård</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/user-to-framework-author-in-four-hours-part-2.html</guid><category>best-practices</category><category>framework</category><category>python3</category><category>interactive</category></item><item><title>Minimalism in software development, or why you should do less</title><link>https://pyvideo.org/europython-2012/minimalism-in-software-development-or-why-you-sh.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2012] Fredrik Haard - 5 JULY 2012 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lean and agile promises - when implemented right - to reduce the pain of
process and management overhead. As agile proponents say (the better of
them at least), this does not actually solve all our problems, it merely
lets us see them clearer. And one thing that we can see clear once
management overhead goes down, is that we are perfectly able to create
our own, technical, overhead. Developer culture and a tendency of
solving problems ‘the usual way’ can - and does - create complicated
solutions to simple problems, and regularly leaves us in configuration
hell. This is a talk about frameworks and API:s, programming languages
and data storage, and why we - developers - spend a large amount of time
not creating value. Even if we have the most perfect of agile
implementations with zero process overhead (yeah, right!), we still
waste time in development, and its all our own fault. I will discuss
what we spend our time on, why any framework should be approached with
trepidation, and how we can do better than keep repeating the mistakes
of yesteryear.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fredrik Haard</dc:creator><pubDate>Fri, 06 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-06:europython-2012/minimalism-in-software-development-or-why-you-sh.html</guid></item><item><title>Jython in practice</title><link>https://pyvideo.org/europython-2014/jython-in-practice.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A lot of people have heard of Jython, some have tried it, but it seems
few have actually deployed it in a corporate environment. In this talk
I'll share my experiences in using Jython as a testbed for Java
applications, for rapid prototyping in Java desktop and web
environments, and for embedding scripting capabilities in Java products.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Not everyone gets paid to work with Python all the time, but if you find
yourself in a Java project, there are good chances you could benefit
from Python without throwing out the Java stack. Using Jython, you can
do rapid prototyping without the long edit-compile-test cycles normally
associated with large Java projects, whether on the web or the desktop,
and when testing an application might become a nightmare of scaffolding
in Java, a little Jython may be just what you need to be able to run
your tests smoothly.&lt;/p&gt;
&lt;p&gt;At the end of this talk, I will put on my politician´s hat and bring up
the best - and worst - arguments to use to get permission to use Jython
in a corporate environment.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fredrik Håård</dc:creator><pubDate>Thu, 24 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-24:europython-2014/jython-in-practice.html</guid></item></channel></rss>