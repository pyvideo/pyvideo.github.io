<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_salt.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-06-04T00:00:00+00:00</updated><entry><title>Learning to Control Any Device With Python and Salt</title><link href="https://pyvideo.org/pycon-israel-2018/learning-to-control-any-device-with-python-and-salt.html" rel="alternate"></link><published>2018-06-04T00:00:00+00:00</published><updated>2018-06-04T00:00:00+00:00</updated><author><name>Mike Place</name></author><id>tag:pyvideo.org,2018-06-04:pycon-israel-2018/learning-to-control-any-device-with-python-and-salt.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From data centers with tens of thousands of servers, to cloud deployments with millions of containers and from IoT weather stations across Africa to computers labs in universities and home offices -- people use Python and Salt to control a myriad of devices.&lt;/p&gt;
&lt;p&gt;In this talk, we'll show people without any previous systems management experience how easy it is to leverage Salt and Python to write basic modules to control anything from a laptop to a datacenter. Attendees will come away with practical knowledge about how translate their Python knowledge into systems management know-how that can be applied straight away.&lt;/p&gt;
</summary><category term="salt"></category></entry><entry><title>Komponenten einer komplexen Web-Applikation</title><link href="https://pyvideo.org/pycon-de-2013/komponenten-einer-komplexen-web-applikation.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Daniel Hepper</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/komponenten-einer-komplexen-web-applikation.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Komplexe Web-Applikationen bestehen aus mehr als einem Webserver, einer
Datenbank und etwas Code. Dieser Vortrag gibt einen Überblick über die
typischen Bausteine wie Celery als Task Queue, Haystack für
Volltextsuche, Sentry als Log-Diensten und automatischem Deployment mit
Fabric und Salt. Die vorgestellte Komponenten werden anhand einer
Django-Applikation erläutert, sind jedoch zum Großteil auch mit anderen
Frameworks nutzbar.&lt;/p&gt;
</summary><category term="celery"></category><category term="deployment"></category><category term="django"></category><category term="elasticsearch"></category><category term="fabric"></category><category term="haystack"></category><category term="salt"></category><category term="search"></category><category term="sentry"></category><category term="solr"></category></entry></feed>