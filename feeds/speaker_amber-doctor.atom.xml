<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_amber-doctor.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-05-30T00:00:00+00:00</updated><entry><title>Getting Started with Cassandra and Python</title><link href="https://pyvideo.org/depy-2015/getting-started-with-cassandra-and-python.html" rel="alternate"></link><published>2015-05-30T00:00:00+00:00</published><updated>2015-05-30T00:00:00+00:00</updated><author><name>Amber Doctor</name></author><id>tag:pyvideo.org,2015-05-30:depy-2015/getting-started-with-cassandra-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will covers why to use Cassandra, basic Cassandra
architecture, setting up Cassandra, and basic crud operations with a
python web framework. The Apache Cassandra database is the right choice
when you need scalability and high availability without compromising
performance. Linear scalability and proven fault-tolerance on commodity
hardware or cloud infrastructure make it the perfect platform for
mission-critical data. Cassandra's support for replicating across
multiple datacenters is best-in-class, providing lower latency for your
users and the peace of mind of knowing that you can survive regional
outages. Cassandra's data model offers the convenience of column indexes
with the performance of log-structured updates, strong support for
denormalization and materialized views, and powerful built-in caching.&lt;/p&gt;
</summary></entry></feed>