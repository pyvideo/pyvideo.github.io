<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 04 Jul 2012 00:00:00 +0000</lastBuildDate><item><title>Getting the logging module to do your bidding</title><link>https://pyvideo.org/europython-2012/getting-the-logging-module-to-do-your-bidding.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2012] M Sandford - 3 JULY 2012 in &amp;quot;Track Tagliatelle&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python logging module is a useful tool for getting all kinds of
information out of your program; everything from error notifications
through to debug information. The standard facilities are useful out of
the box, but, sometimes, you need a bit more. Not surprisingly, it turns
out that the logging module is designed to be extended. This
presentation shows some of the things you can do; things like gathering
statistics on message type, directing emails to different recipients
depending on severity, dynamic updating of attributes, and logging to a
database. The examples are based on the notification facilities in
Lokai. The talk covers: an overview of why I thought I needed the extra
features, a look at the logger structures that need to be changed, and
some actual code that does the job. I’m sure there are many different
ways of doing this. Some of the code might be obvious in retrospect, and
some might be surprising. Whatever the case, if you havn’t thought of
doing this before you might be encouraged to give it a go. And if you
have done it before you can always come and heckle.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M Sandford</dc:creator><pubDate>Wed, 04 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-04:europython-2012/getting-the-logging-module-to-do-your-bidding.html</guid></item></channel></rss>