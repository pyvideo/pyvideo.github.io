<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 04 Aug 2019 00:00:00 +0000</lastBuildDate><item><title>Teaching Python with tiny, occult pandas</title><link>https://pyvideo.org/pycon-au-2019/teaching-python-with-tiny-occult-pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Microcontrollers, web development, data science and machine learning – with Python you really can do it all, and soon every teacher and student in the ACT will have the curriculum, resources and support they need to do amazing things with a great programming language!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/teaching-python-with-tiny-occult-pandas"&gt;https://2019.pycon-au.org/talks/teaching-python-with-tiny-occult-pandas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sun Aug  4 13:30:00 2019 at Cockle Bay&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bruce Fuda</dc:creator><pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-04:pycon-au-2019/teaching-python-with-tiny-occult-pandas.html</guid></item><item><title>Teaching Object-Oriented Programming with Python</title><link>https://pyvideo.org/pycon-au-2017/teaching-object-oriented-programming-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From 2018, most teachers across Australian will be required to report against the Australian Curriculum: Digital Technologies. There are many resources available on the Internet to help teachers, but when it comes to Object-Oriented programming, there are few accessible examples that dive into fundamental concepts such as inheritance, encapsulation and polymorphism. Considering the lack of experience and confidence in some teachers, particularly in regional areas or where forma training in computer science is minimal, it’s no surprise there is some trepidation about how effectively schools will deliver on the promises of the curriculum.&lt;/p&gt;
&lt;p&gt;If we want students to properly understand the key ideas of the paradigm, it is imperative we provide relevant and meaningful activities for students to engage with. Since I began my teaching career in 2005, I’ve tried a number of different approaches with students in years 9-12 to introduce OO concepts, with my most recent successes realised through a simple game inventory system.&lt;/p&gt;
&lt;p&gt;In this talk I’ll demonstrate the approach we’ve used, and how we ensure students grasp the fundamental concepts of the OO paradigm. I will explain how students are able to explore these ideas further through their own investigations, and share the assessment task I’ve used to evaluate student understanding. I’ll also showcase some student work, and point to a couple of useful online resources that have been effective in a primarily student-driven environment.&lt;/p&gt;
&lt;p&gt;Python is an ideal language for this not only due to its ease of syntax and readability, but because students who have been using it as a scripting language and written simple functions already understand most of the language structures needed to implement objects. This allows the focus to be on conceptual understanding, not the specifics of the language. The breadth of adoption of Python in different domains such as web development and data analysis also means that students can use this knowledge in a variety of contexts, such as allowing them to implement dynamic websites using an MVC architecture.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bruce Fuda</dc:creator><pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-04:pycon-au-2017/teaching-object-oriented-programming-with-python.html</guid></item><item><title>A Project-Driven Approach to Teaching Python: A Showcase of Student Work and Achievements</title><link>https://pyvideo.org/pycon-au-2016/a-project-driven-approach-to-teaching-python-a-showcase-of-student-work-and-achievements.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bruce Fuda
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/124/view_talk"&gt;https://2016.pycon-au.org/schedule/124/view_talk&lt;/a&gt;
One of the greatest advantages the teaching of the Digital Technologies has over most other schooling disciplines is the ease and speed with which students can see the result of their learning. New knowledge and skills go from being concepts they've never seen before to working code and applications very quickly, resources to assist them are everywhere, and feedback throughout the learning process is immediate. This presentation demonstrates some of the work graduating students from my Year 12 class have produced in their final year - projects that demonstrate mastery of computer science concepts like path finding, Bayesian spam filters, Markov chain-based predictive text generators and Artificial Intelligence algorithms. With the right support and guidance, students can go from programming novices to Python ninjas in a time frame as short as two years. Come along and see what high school students are capable of, and how we can help them get there!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bruce Fuda</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/a-project-driven-approach-to-teaching-python-a-showcase-of-student-work-and-achievements.html</guid></item><item><title>Teaching Python: Ten+ Years of Successes, Trials and Tribulations</title><link>https://pyvideo.org/pycon-au-2016/teaching-python-ten-years-of-successes-trials-and-tribulations.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bruce Fuda
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/125/view_talk"&gt;https://2016.pycon-au.org/schedule/125/view_talk&lt;/a&gt;
Teaching programming has always been a challenge given the lack of experience, understanding and knowledge students in schools generally have about what is involved and what it means to be studying &amp;quot;IT&amp;quot;. It hasn't been helped by a lack of robust curriculum in most states and territories in Australia. With the recent endorsement of the Australian Curriculum: Digital Technologies, most states and territories have implementation timelines as early as 2017, and this means that teachers (and those who want to support them in their classrooms) now have an obligation to deliver ambitious, engaging and rigorous learning activities in their classrooms. Having been in the enviable situation of being supported and encouraged to design and implement innovative computer science curricula for students in years 6-12, I'll be sharing the reasons why I choose to use Python as my primary teaching language in high school, and identify the tips, tricks and traps teachers need to watch out for when using it as the basis for learning not just programming skills, but computational thinking more generally. This includes an explanation of the importance of a project-driven approach, and demonstration of the techniques I use and projects my students work on in class.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bruce Fuda</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/teaching-python-ten-years-of-successes-trials-and-tribulations.html</guid><category>education</category></item></channel></rss>