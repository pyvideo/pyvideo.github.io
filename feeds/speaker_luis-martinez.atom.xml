<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Luis Martinez</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_luis-martinez.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-05-17T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Django Asíncrono: Desbloqueando el Poder de la Programación Async</title><link href="https://pyvideo.org/pycon-us-2025/django-asincrono-desbloqueando-el-poder-de-la-programacion-async.html" rel="alternate"></link><published>2025-05-17T00:00:00+00:00</published><updated>2025-05-17T00:00:00+00:00</updated><author><name>Luis Martinez</name></author><id>tag:pyvideo.org,2025-05-17:/pycon-us-2025/django-asincrono-desbloqueando-el-poder-de-la-programacion-async.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Con la llegada de Django 3.1, el framework dio un gran salto hacia el futuro al integrar soporte para asincronismo. Pero, ¿qué significa esto para quienes desarrollamos aplicaciones web? En esta charla, te voy a enseñar cómo usar las herramientas de asincronismo en Django para construir aplicaciones más …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Con la llegada de Django 3.1, el framework dio un gran salto hacia el futuro al integrar soporte para asincronismo. Pero, ¿qué significa esto para quienes desarrollamos aplicaciones web? En esta charla, te voy a enseñar cómo usar las herramientas de asincronismo en Django para construir aplicaciones más rápidas y eficientes.&lt;/p&gt;
&lt;p&gt;Empezaremos con una breve introducción a asyncio, la base del asincronismo en Python. ¿Qué son los event loops? ¿Qué hacen async y await? Si nunca has trabajado con código asíncrono, no te preocupes, aquí lo explicaremos de forma simple.&lt;/p&gt;
&lt;p&gt;Después, entraremos directo en el mundo de Django: * Escribiremos vistas asíncronas (async def) y exploraremos casos prácticos donde el asincronismo realmente marca la diferencia. * Compararemos el rendimiento entre vistas síncronas y asíncronas mediante pruebas reales, mostrando cómo manejar múltiples peticiones a APIs externas de manera eficiente. * Veremos cómo Django adopta la convención de agregar una &amp;quot;a&amp;quot; a los métodos asíncronos del ORM (como aget, afirst, alast) para diferenciarlos de sus versiones síncronas. * Discutiremos las limitaciones actuales del ORM de Django (spoiler: sigue siendo síncrono) y cómo manejarlas en proyectos modernos.&lt;/p&gt;
&lt;p&gt;Para cerrar, incluiré una demostración práctica y ejemplos de código reales que puedes llevarte a casa.&lt;/p&gt;
&lt;p&gt;Esta charla está pensada para desarrolladores de nivel intermedio que quieran llevar sus proyectos Django al siguiente nivel y entender cómo el asincronismo puede transformar la manera en que construimos aplicaciones web.&lt;/p&gt;
</content><category term="PyCon US 2025"></category></entry></feed>