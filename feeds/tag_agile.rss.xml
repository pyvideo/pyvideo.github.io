<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - agile</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 03 Jun 2022 00:00:00 +0000</lastBuildDate><item><title>Come costruire un'azienda distribuita con Python</title><link>https://pyvideo.org/europython-2011/come-costruire-unazienda-distribuita-con-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Maurizio Delmonte - 22 June 2011 in &amp;quot;Track Italiana
Big Mac &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il nostro gruppo di lavoro, composto da varie figure professionali, da
anni lavora su più progetti in parallelo, e con team di persone che si
incontrano solo virtualmente.&lt;/p&gt;
&lt;p&gt;Non è sufficiente dire: facciamolo!&lt;/p&gt;
&lt;p&gt;Per non perdere la testa, gestire in modo agile i progetti e vivere
felici affiniamo continuamente le nostre tecniche di gestione e gli
strumenti che ci permettono di tenere sotto controllo la situazione:
Extreme Management tool, Poi Tracker, Buildout sono solo alcuni degli
strumenti che rendono il nostro lavoro fluido ed efficace.&lt;/p&gt;
&lt;p&gt;Presenterò le nostre modalità operative, dimostrando che lavorare con un
team composto da persone contemporaneamente a Milano, Napoli, Torino e
Ancona è possibile. Non solo: è il futuro!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Maurizio Delmonte</dc:creator><pubDate>Thu, 07 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-07:/europython-2011/come-costruire-unazienda-distribuita-con-python.html</guid><category>EuroPython 2011</category><category>agile</category><category>ci</category></item><item><title>The ‘Agile Movement’</title><link>https://pyvideo.org/europython-2013/the-agile-movement.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Russell Sherwood</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:/europython-2013/the-agile-movement.html</guid><category>EuroPython 2013</category><category>bdd</category><category>continuous-integration</category><category>project-management</category><category>agile</category><category>testing</category><category>principles</category><category>tdd</category><category>pair-programming</category><category>XP</category></item><item><title>Modern Continuous Delivery for Python Developers</title><link>https://pyvideo.org/europython-2019/modern-continuous-delivery-for-python-developers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Deployment automation, cloud platforms, containerization, short
iterations to develop and release software—we’ve progressed a lot. And
finally it’s official: Kubernetes and OpenShift are the established
platforms to help us do scaling and zero downtime deployments with just
a few hundred lines of YAML. It’s a great time.&lt;/p&gt;
&lt;p&gt;Can we finally put all our eggs into one basket? Identify the cloud
platform that fits our needs, and jump on it? That could well backfire:
Vendor lock-in is the new waterfall, it slows you down. In future you’ll
want to jump over to the next better platform, in a matter of minutes.
Not months.&lt;/p&gt;
&lt;p&gt;This talk is about The Art of Writing deployment pipelines that will
survive Kubernetes, OpenShift and the like. It’s for Python developers
and Kubernetes enthusiasts of all levels – no domain specific knowledge
required, all you need to understand will be explained. You’ll learn how
to separate application-specific and deployment-specific configuration
details, to maximize your freedom and avoid vendor lock-in.&lt;/p&gt;
&lt;p&gt;Come see a demo of a Django project setup that covers everything from
local development to automatic scaling, flexible enough to be deployed
on any of your favorite container platforms. Take home a working,
future-proof setup for your Python applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Bittner</dc:creator><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-12:/europython-2019/modern-continuous-delivery-for-python-developers.html</guid><category>EuroPython 2019</category><category>Agile</category><category>Best Practice</category><category>Clean Code</category><category>Deployment/Continuous Integration and Delivery</category></item><item><title>The Agile comedy: from hell to paradise</title><link>https://pyvideo.org/europython-2019/the-agile-comedy-from-hell-to-paradise.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Nowadays everyone wants to bring Agile Best Practices into all the
teams, but it's a hard task to implement it and adapt based on
different teams. Setting up all necessary Agile meetings and using
buzz words is not enough for the team to be happy and successful while
working in Agile environment.&lt;/div&gt;
&lt;div class="line"&gt;Inspired by the &amp;quot;Divine Comedy&amp;quot; by Dante Alighieri, I decided to
create a short guide into Agile best practices. It will guide through
Failures, Challenges to the Success in building a happy dream team!&lt;/div&gt;
&lt;div class="line"&gt;This talk is divided into three parts:&lt;/div&gt;
&lt;div class="line"&gt;1. Failures in setting up Agile processes for a team.&lt;/div&gt;
&lt;div class="line"&gt;2. Challenges on the way to happy and successful team.&lt;/div&gt;
&lt;div class="line"&gt;3. Successful examples how to have happy and productive Agile team and
constantly deliver a great product.&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anastasiia Tymoshchuk</dc:creator><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-12:/europython-2019/the-agile-comedy-from-hell-to-paradise.html</guid><category>EuroPython 2019</category><category>Agile</category><category>Development</category><category>General</category></item><item><title>Cultivating a Culture of Creativity, Collaboration, and Captainship</title><link>https://pyvideo.org/europython-2020/cultivating-a-culture-of-creativity-collaboration-and-captainship.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In my work as a consultant, coach, and organizational leader- I work with amazing companies around the world, helping them craft and implement strategies to build high-performing teams.&lt;/p&gt;
&lt;p&gt;And when I work with these teams, I notice that there are two factors that make all the difference between a good organization and one that is changing the world.&lt;/p&gt;
&lt;p&gt;The first is having a culture of collaboration – and this means collaboration across individuals, across departments, and across teams – really - it’s a culture that’s less about competition and cutthroat political systems.. And more about helping each other achieve the extraordinary.&lt;/p&gt;
&lt;p&gt;The second quality is organizations that treat and expect their employees to act like owners. Owning not just their behaviors, actions, and responsibilities, but owning outcomes and becoming a voice for the organization.&lt;/p&gt;
&lt;p&gt;No matter where your organization is at today, the good news is– there are proven strategies to create a culture of collaborative ownership at your organization and that’s what I’m going to teach you in this course.&lt;/p&gt;
&lt;p&gt;I’ll share how you can build momentum from a carefully crafted vision and goals, I’ll help you improve communication and drive ownership, I’ll help you foster creativity, and finally, I’ll help you train up leaders in your organization and help you meet more of your goals.&lt;/p&gt;
&lt;p&gt;So, if you’re ready to transform your organization. let’s go!&lt;/p&gt;
&lt;p&gt;LEARNING OBJECTIVES:&lt;/p&gt;
&lt;p&gt;Attendees will learn: How to transform a command-obey dynamic to one of creativity and innovation through opportunities for ownership. How to collaborate with opportunities for ownership through proven methods to increase connectivity and engagement in the team. How to foster captainship within your organization. How to apply the ideas of collaborative ownership specifically in individual organizations.&lt;/p&gt;
&lt;p&gt;SESSION OUTLINE: Fostering an Ownership Culture (Creativity and Innovation)- Ownership Activity -Fostering a Collaborative Culture- Collaborative Activity - Fostering Captainship Culture - Captainship activity- The Application of Collaborative Ownership for Personal and Organizational Success- Applying Collaborative Ownership to Organizations and Self Activity -Conclusion Q&amp;amp;A&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amber Vanderburg</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/cultivating-a-culture-of-creativity-collaboration-and-captainship.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Agile</category><category>Best Practice</category><category>Business</category><category>Community</category><category>DevOps general</category></item><item><title>Effective Code Reviews</title><link>https://pyvideo.org/europython-2020/effective-code-reviews.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The edge between hard skills and soft skills&lt;/p&gt;
&lt;p&gt;Does your company uses code review? In this talk I will demonstrate why it should start using them immediately, share the many benefits and situations we've gone through, besides good practices that should be used for effective code reviews, that add quality to the product/service that is being delivered.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vinicius Gubiani Ferreira</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/effective-code-reviews.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Agile</category><category>Best Practice</category><category>Clean Code</category><category>Code Analysis</category><category>Communication</category></item><item><title>Live-coding a music synthesizer</title><link>https://pyvideo.org/europython-2020/live-coding-a-music-synthesizer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is going to be a fun live-coding session using NumPy and SoundDevice. The goal of this talk is to make the computer produce realistic-sounding instrument sounds, using nothing but math.&lt;/p&gt;
&lt;p&gt;All the code will be written live and we'll hear the audio that it produces.&lt;/p&gt;
&lt;p&gt;We’ll start with creating a simple sound using a sine wave. We’ll gradually make it sound more like a real instrument, learning a little
bit about music theory on the way. We’ll add features one-by-one until by the end of the talk, we’ll hear our synthesizer play a piece
of classical music.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ram Rachum</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/live-coding-a-music-synthesizer.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Agile</category><category>Algorithms</category><category>Fun and Humor</category><category>Physics</category><category>PyPy</category></item><item><title>PyConAU 2010: Don't Break It: Continuous Integration &amp; Deployment</title><link>https://pyvideo.org/pycon-au-2010/pyconau-2010--don--39-t-break-it--continuous-inte.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Don't Break It: Continuous Integration &amp;amp; Deployment&lt;/p&gt;
&lt;p&gt;Presented by Benno Rice&lt;/p&gt;
&lt;p&gt;So you've developed your application, it appears to work and you may
even have some tests to back that up. Now what?&lt;/p&gt;
&lt;p&gt;One part of software development that tends to receive not nearly enough
attention is the process of deploying, supporting and maintaining your
code in production. This demonstration will give an overview of using
tools such as Hudson, nose, stdeb and freshen to automate the testing,
packaging, deployment and verification of production software.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benno Rice</dc:creator><pubDate>Sat, 26 Jun 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-06-26:/pycon-au-2010/pyconau-2010--don--39-t-break-it--continuous-inte.html</guid><category>PyCon AU 2010</category><category>agile</category><category>architecture</category><category>packaging</category><category>pyconau</category><category>pyconau2010</category><category>testing</category></item><item><title>Practical DevOps</title><link>https://pyvideo.org/pycon-de-2012/practical-devops.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;DevOps ist eine aktuelle Bewegung in der IT, die sich zur Aufgabe macht,
ein Umdenken in den klassischen Lagern Entwicklung und Betrieb
einzuleiten. Der Vortrag wirft einen Blick auf die noch junge Bewegung
und zeigt mit Geschichten aus dem wahren Leben, wie sich die agile
Denkweise fortschreiben lässt, die mit SCRUM ins allgemeine Bewusstsein
getreten ist.&lt;/p&gt;
&lt;p&gt;Schlomo gibt einen Überblick über das Thema und berichtet über die
DevOps Erfolge bei der
&lt;a class="reference external" href="http://www.immobilienscout24.de"&gt;ImmobilienScout24&lt;/a&gt;. Nach 2 Jahren
agilem Umdenken in der Entwicklung zeigte sich, dass die klassische
Gewaltenteilung Plan - Build - Run einfach nicht mehr gut funktioniert
weil sich die Anforderungen und Erwartungen sowohl in der Entwicklung
als auch im Betrieb ändern und daher auch eine neue Form der
Zusammenarbeit nahe legen.&lt;/p&gt;
&lt;p&gt;Die Ideen aus der DevOps Bewegung lassen sich fast überall einsetzen, wo
bisher ein &amp;quot;über den Zaun werfen&amp;quot; gespielt wird und haben das primäre
Ziel, alle Beteiligten gemeinsam an einem Strang ziehen zu lassen. Mit
den Ideen und Erfahrungen aus dem Vortrag lassen sich sicher die ersten
Schritte in die richtige Richtung einleiten.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Schlomo Schapiro</dc:creator><pubDate>Wed, 31 Oct 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-10-31:/pycon-de-2012/practical-devops.html</guid><category>PyCon DE 2012</category><category>agile</category><category>devops</category><category>kanban</category><category>open source</category><category>python</category><category>scrum</category><category>web</category></item><item><title>Taiga e l’agile project management: join the Oompa Loompas’ Army!</title><link>https://pyvideo.org/pycon-italia-2017/taiga-e-lagile-project-management-join-the-oompa-loompas-army.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;“Taiga is a project management platform for agile developers &amp;amp; designers
and project managers who want a beautiful tool that makes work truly
enjoyable”. Nominato “best agile tool” nel 2015, Taiga si dimostra
semplice, versatile e sopratutto fedele ai framework agili. Durante il
talk si presenteranno le principali funzionalità e i modi di utilizzo
relazionandoli alle relative pratiche agili e confrontandoli con il suo
concorrente diretto: Jira.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gabriele Giaccari</dc:creator><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-09:/pycon-italia-2017/taiga-e-lagile-project-management-join-the-oompa-loompas-army.html</guid><category>PyCon Italia 2017</category><category>project-management-platform</category><category>agile</category><category>kanban</category><category>taiga</category><category>scrum</category></item><item><title>Continuous Delivery starts at your Development Environment</title><link>https://pyvideo.org/pycon-italia-2018/continuous-delivery-starts-at-your-development-environment.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Continuous Delivery is the automation of our deployment and QA, isn’t
it? The industrialized software production chain that solves all our
problems. Well, kind of. It’s more than that. Because: You still have
pain when …&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You bring new developers on board (e.g. for installing Docker and
friends, IDEs and command line tools).&lt;/li&gt;
&lt;li&gt;Your development machine behaves weird or needs an upgrade. (Can you
simply re-install it and continue working without losing a day or a
week of productivity?)&lt;/li&gt;
&lt;li&gt;You need to explain to your colleagues, or even convince them, how to
configure which of their tools?&lt;/li&gt;
&lt;li&gt;Everyone turns to you (or your admin wizard) when there are troubles
to get some tools or projects running.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talks explains how to bootstrap a super-efficient startup, SMB, or
just any development team that needs a development infrastructure.
You’ll see a demo of The Foreman, Puppet, Ansible and optionally FreeIPA
and virtualization technology, which gets you from zero to 100 in just a
few hours. This talk explains how you do infrastructure like software
development. Everything under control. Everything under version control.&lt;/p&gt;
&lt;p&gt;Come join the show, and take home the recipe that tells you how to step
up the next level of Continuous Delivery! - If you’re a beginner fear
not: this talk starts with an introduction to CI/CD and brings you up to
speed quickly.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 22 April&lt;/strong&gt; at 15:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Bittner</dc:creator><pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-22:/pycon-italia-2018/continuous-delivery-starts-at-your-development-environment.html</guid><category>PyCon Italia 2018</category><category>infrastructure</category><category>continuous-delivery</category><category>agile</category><category>ansible</category><category>puppet</category><category>free-software</category><category>FreeIPA</category><category>infrastructure-as-code</category></item><item><title>Dalla User Story al test automatico in Django: un percorso step by step per dormire sonni tranquilli</title><link>https://pyvideo.org/pycon-italia-2018/dalla-user-story-al-test-automatico-in-django-un-percorso-step-by-step-per-dormire-sonni-tranquilli.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le specifiche poco chiare o approssimative sono una delle piaghe degli
sviluppatori, e portano all’odioso fenomeno dei task non accettati o
rimandati indietro etichettati come BUG.&lt;/p&gt;
&lt;p&gt;Spesso, tuttavia, non c’è proprio nulla di rotto ma solo una serie di
incomprensioni dovute alla scarsa qualità dell’analisi, che provocano,
generalmente, molta frustrazione in chi ha scritto il codice.&lt;/p&gt;
&lt;p&gt;Nel corso del talk vedremo come tutto questo sia evitabile grazie
all’approccio &lt;strong&gt;BDD&lt;/strong&gt; , all’utilizzo di &lt;strong&gt;User Stories&lt;/strong&gt; con
&lt;strong&gt;Acceptance Tests&lt;/strong&gt; scritti usando il linguaggio &lt;em&gt;Gherkin&lt;/em&gt; e
all’esecuzione di test automatici.&lt;/p&gt;
&lt;p&gt;In più, mostreremo una applicazione pratica su un progetto &lt;em&gt;Django&lt;/em&gt;
usando &lt;em&gt;Behave&lt;/em&gt; con &lt;em&gt;behave_django&lt;/em&gt; e &lt;em&gt;Selenium&lt;/em&gt; con &lt;em&gt;splinter&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Filippo Morelli</dc:creator><pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-22:/pycon-italia-2018/dalla-user-story-al-test-automatico-in-django-un-percorso-step-by-step-per-dormire-sonni-tranquilli.html</guid><category>PyCon Italia 2018</category><category>bdd</category><category>continuous-integration</category><category>agile</category><category>selenium</category><category>django</category><category>behave</category></item><item><title>Using Python to bring democracy to the A.I. age</title><link>https://pyvideo.org/pycon-italia-2018/using-python-to-bring-democracy-to-the-ai-age.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TL;DR&lt;/p&gt;
&lt;div class="section" id="when-you-go-full-big-data-at-public-data-and-become-a-citzen"&gt;
&lt;h4&gt;When you go full Big Data at public data and become a citzen.&lt;/h4&gt;
&lt;p&gt;Audience type: developers, data scientists of any level of expertise.&lt;/p&gt;
&lt;p&gt;After a political coup Brazil drowned in scandals and political
disbelief. That was the final straw for us.&lt;/p&gt;
&lt;p&gt;We created a bot persona who uses Machine Learning to analyze public
spending, launching our own data journalism investigations. As expected
we use the internet publicize our findings and icing on it was to use
Twitter to directly engage the public and politicians under the topic of
suspicious expenses.&lt;/p&gt;
&lt;p&gt;Come with me and I’ll show some figures from Brazilian corruption, share
some code and cherry-pick the best of our toolbox to deal with public
data and machine learning. I’ll introduce our public dashboard that
makes visualization and browsing government data easy peasy. And surely
we can take a look in some tweets from Rosie, the robot, and how some
politicians are now vociferating with a ROBOT on social media.&lt;/p&gt;
&lt;p&gt;And you guessed it right: everything is open-source and our mission is
to create a global community to bring democracy to the A.I. age.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 18:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Felipe Cabral</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:/pycon-italia-2018/using-python-to-bring-democracy-to-the-ai-age.html</guid><category>PyCon Italia 2018</category><category>machine-learning</category><category>Python</category><category>agile</category><category>Data Mining</category><category>bigdata</category><category>data-visualization</category><category>OpenSource</category><category>data-analysis</category><category>e-gov</category><category>data</category></item><item><title>Addestramento d'emergenza alla fase di Discovery per sviluppatori frustrati</title><link>https://pyvideo.org/pycon-italia-2022/addestramento-demergenza-alla-fase-di-discovery-per-sviluppatori-frustrati.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Addestramento d’emergenza alla fase di Discovery per sviluppatori
frustrati - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Quante notti avete passato a produrre codice ‘importantissimo’ poi mai
andato in produzione? E la vostra idea di app del secolo che non ha mai
portato a nulla? Quanti soldi buttati per produrre software mai
utilizzato? Troppi. Ma non deve andare per forza così,e la chiave è in
una parola: Discovery! Come programmatori, tutti noi abbiamo provato la
frustrazione di lavorare col massimo dell’impegno su software che poi
nella migliore delle ipotesi non hanno prodotto i risultati sperati, e
nella peggiore non sono neanche mai andati in produzione. Giorni (e
quindi soldi) buttati a realizzare cose che non andavano fatte, a
sviluppare “requisiti” imposti dall’alto senza capirne il contesto.
Usarci come ingranaggi in una fabbrica di funzionalità, invece che come
specialisti di team che puntino a risolvere dei problemi ed avere un
impatto reale sul mondo, è uno spreco senza precedenti. Scrivere codice
nel modo corretto, fare i test, impostare pipeline di Continuous
Integration è solo una parte del nostro lavoro, ma se quel codice in
primis non andava neanche scritto, sarà tutto inutile. Da parecchi anni
ormai sono nate metodologie e strumenti che aiutano a risolvere questo
problema, dal Design Thinking al Lean Startup, l’Impact Mapping o
l’Opportunity Solution Tree. Non è una roba solo da Designer o Product
Manager, gli sviluppatori devono essere i protagonisti di questo
processo cosiddetto di Discovery anche se spesso se ne tengono alla
larga. Questo addestramento è diviso in 3 mini lezioni di 10 minuti, per
definire il contesto, la teoria e la pratica di questa fase, con
l’obiettivo di dare gli strumenti e qualche spunto per iniziare questa
piccola rivoluzione, a livello personale e di team.&lt;/p&gt;
&lt;p&gt;Speaker: Gabriele Giaccari&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gabriele Giaccari</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/addestramento-demergenza-alla-fase-di-discovery-per-sviluppatori-frustrati.html</guid><category>PyCon Italia 2022</category><category>agile</category><category>best practice</category><category>communication</category></item><item><title>La Continuous Delivery è una condizione mentale</title><link>https://pyvideo.org/pycon-italia-2022/la-continuous-delivery-e-una-condizione-mentale.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La Continuous Delivery è una condizione mentale - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In questo talk racconterò il mio percorso evolutivo da un approccio
waterfall a quello iterativo passando per i tanti errori commessi.
Mostrerò come abbiamo realizzato un template che aiuta nel processo di
Continuous Delivery utilizzando Kubernetes, Docker, Python e Terraform.
Vedo la gente passare i venerdì a fare rilasci in produzione e passare
il weekend a fare bug fixing. Vedo la gente stufa di fare sempre le
stesse attività ripetitive e perseverare nella solita routine da
developer frustrato. Ma tutto questo si può evitare con un cambio di
mentalità. Quello che voglio raccontare in questo talk è il mio percorso
evolutivo da un approccio waterfall a quello iterativo passando per i
tanti errori commessi.&lt;/p&gt;
&lt;p&gt;Racconterò come abbiamo realizzato un template che aiuta nel processo di
Continuous Delivery, dove la parola “continuous” è quella che definisce
bene l’importanza di questo processo. Nell’Agile Software Development,
il rilascio del software funzionante è uno dei punti più importanti e
questo deve avvenire spesso. Per poter rilasciare nuove funzionalità
però, dovremo scrivere tutti i test necessari, eseguirli, creare una
build e infine effettuare il deploy vero e proprio.&lt;/p&gt;
&lt;p&gt;Nello sviluppo del software moderno la Continuous Delivery (CD) è quel
processo che permette all’intero team di affrontare qualsiasi
cambiamento, come nuove feature, bugfix o esperimenti, in un modo
sostenibile, sicuro e rapido. In questo processo generalmente vengono
utilizzate tra le altre cose, due pratiche per effettuare i rilasci
continui: Continuous Integration (CI) e Continuous Deployment (CD).&lt;/p&gt;
&lt;p&gt;In questo talk racconterò come, insieme ai miei colleghi, siamo arrivati
alla costruzione di un processo automatizzato per effettuare rilasci sin
dal primo commit utilizzando Kubernetes, Docker, Python e Terraform per
la creazione di applicazioni web basate su Django e React.&lt;/p&gt;
&lt;p&gt;Slide:&lt;/p&gt;
&lt;p&gt;Speaker: Raffaele Colace&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raffaele Colace</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/la-continuous-delivery-e-una-condizione-mentale.html</guid><category>PyCon Italia 2022</category><category>agile</category><category>best practice</category><category>case study</category><category>devops</category><category>django</category></item><item><title>Python Developers vs UX/UI Designer, incontri e scontri</title><link>https://pyvideo.org/pycon-italia-2022/python-developers-vs-uxui-designer-incontri-e-scontri.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Developers vs UX/UI Designer, incontri e scontri - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Racconto la mia esperienza come UX/UI Designer che da 4 anni collabora
con un team di sviluppatori Python, due mondi affini che possono però
sentirsi distanti e parlare lingue differenti. Come, con un po’ di
impegno, siamo riusciti a trovare un equilibrio fra call, metodologie e
qualche birra. Racconto la mia esperienza con un team di sviluppatori
Python. Quando quattro anni fa ho iniziato a collaborare con loro ho
sentito per la prima volta parlare di Django, Agile, DevOps… arabo per
me che venivo da un mondo di colori e creatività. Come designer avevo
sempre lavorato da freelance con sviluppatori e agenzie, progettando
interfacce che venivano poi implementate, in molti casi il mio lavoro
finiva con la consegna del mockup che veniva “dato in pasto” a
sviluppatori nella maggior parte dei casi sconosciuti.&lt;/p&gt;
&lt;p&gt;Lavorando in un team coordinato e collaborativo siamo riusciti a trovare
dei punti di incontro fra design thinking e continuous delivery,
inserendo nel processo una fase di discovery che include indagini e
co-design per migliorare i prodotti e l’esperienza degli utenti.&lt;/p&gt;
&lt;p&gt;Speaker: Virginia Capoluongo&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Virginia Capoluongo</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/python-developers-vs-uxui-designer-incontri-e-scontri.html</guid><category>PyCon Italia 2022</category><category>agile</category><category>development</category></item><item><title>Why is our project late?</title><link>https://pyvideo.org/pycon-italia-2022/why-is-our-project-late.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why is our project late? - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Why is it so hard to respect deadlines for a dev team? Is it just a
wrong planning methodology? Are there fundamental limits in the way our
brain makes plans? Has it always been like this?&lt;/p&gt;
&lt;p&gt;We’ll investigate the way humans perceive plans and unexpected events.
Do we have biases in estimates? Why is it so hard to respect deadlines
for a dev team? Is it just a wrong planning methodology? Are there
fundamental limits in the way our brain makes plans? Has it always been
like this?&lt;/p&gt;
&lt;p&gt;We’ll investigate the way humans perceive plans and unexpected events.
We’ll find out that we have biases in the way we make plans and
predictions. Problems are not limited to the planning phase though. When
the first issues occur during the project, we tend to take decisions
like increasing the team or taking shortcut that might not have the
desired outcome.&lt;/p&gt;
&lt;p&gt;Speaker: Marco Santoni&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Santoni</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/why-is-our-project-late.html</guid><category>PyCon Italia 2022</category><category>agile</category><category>best practice</category><category>development</category></item><item><title>Agile, Scrum y Kanban</title><link>https://pyvideo.org/pyday-galicia-2016/agile-scrum-y-kanban.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Explicación desde cero de los conceptos principales y las bases de Agile, Scrum y Kanban&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pepe Doval</dc:creator><pubDate>Sat, 17 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-17:/pyday-galicia-2016/agile-scrum-y-kanban.html</guid><category>PyDay Galicia 2016</category><category>pyday</category><category>agile</category><category>scrum</category><category>kanban</category></item></channel></rss>