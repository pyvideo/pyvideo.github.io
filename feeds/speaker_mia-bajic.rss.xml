<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Mia Bajić</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 16 May 2025 00:00:00 +0000</lastBuildDate><item><title>Uncovering Python’s surprises: a deep dive into gotchas</title><link>https://pyvideo.org/pycon-fr-2023/uncovering-pythons-surprises-a-deep-dive-into-gotchas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you a Python programmer looking to expand your understanding of the language? Join us for a discussion on some of Python's most counterintuitive examples. We'll delve into how these behaviors work under the hood and explore why they don't always behave as we expect. This talk is suitable for programmers of all levels who have a curious mind and enjoy learning.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Bajić</dc:creator><pubDate>Sat, 18 Feb 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-02-18:/pycon-fr-2023/uncovering-pythons-surprises-a-deep-dive-into-gotchas.html</guid><category>PyCon FR 2023</category></item><item><title>The Standard Library Tour</title><link>https://pyvideo.org/pycon-uk-2023/the-standard-library-tour.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tired of complex code? Python's standard library has tools to simplify your tasks! Join us for a tour of the standard library where we'll dive into less-known modules that do well-known things and well-known modules that do less-known things.&lt;/p&gt;
&lt;p&gt;The Standard Library Tour is designed to provide attendees with an understanding of Python's standard library less known features. Have you ever found yourself writing complex code only to discover that Python has tools available within its library that could have made your job easier? Then this talk is for you!&lt;/p&gt;
&lt;p&gt;The outline of the talk:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Basic information about the library&lt;/li&gt;
&lt;li&gt;Well-known modules which do less-known things&lt;ul&gt;
&lt;li&gt;functools less-known features: &amp;#64;singledispatch, partial(), &amp;#64;cache&lt;/li&gt;
&lt;li&gt;itertools less-known features: product(), filterfalse(), zip_longest()&lt;/li&gt;
&lt;li&gt;collections less-known features: ChainMap, defaultdict&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Less-known modules which do well-known things&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;doctest for testing: testmod()&lt;/li&gt;
&lt;li&gt;Difflib &amp;amp; Filecmp for comparison: Difflib.SequenceMatcher, Filecmp.cmpfiles()&lt;/li&gt;
&lt;li&gt;contextlib for tasks involving the with statement: &amp;#64;contextmanager, &amp;#64;asynccontextmanager&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By attending this session, you'll gain a deeper understanding of Python's standard library and you'll discover the &amp;quot;unknown unknowns&amp;quot; - tools that you may not even know exist within Python's standard library. By becoming familiar with the library and all of its capabilities, you'll be better equipped to solve problems and build applications more efficiently, without reinventing the wheel. You'll also receive recommendations on where to find additional resources and information so you can continue learning and exploring Python's tools after the conference has ended.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Bajić</dc:creator><pubDate>Sun, 24 Sep 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-09-24:/pycon-uk-2023/the-standard-library-tour.html</guid><category>PyCon UK 2023</category></item><item><title>Combining Django ORM &amp; FastAPI in a Single App</title><link>https://pyvideo.org/pycon-us-2024/combining-django-orm-fastapi-in-a-single-app.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django is the most extensive Python framework, which is also very
opinionated and synchronous. In contrast, FastAPI emerges as a more
recent, asynchronous framework.&lt;/p&gt;
&lt;p&gt;As a developer and the maintainer of several services, one of which is a
data visualization tool deployed in production across various companies,
I have had the unique opportunity to use Django ORM with FastAPI. If you
take a look through GitHub or other resources, you’ll notice there’s not
much out there about combining Django and FastAPI — it’s a bit of an
unconventional setup. The aim of my talk is to share insights from my
experience with this setup, highlighting its practical implementation
and the lessons learned along the way.&lt;/p&gt;
&lt;p&gt;This talk is aimed at programmers from beginners to more experienced
ones familiar with either of these frameworks. You’ll gain insights into
combining asynchronous frameworks with synchronous ones, along with
understanding the benefits and challenges of this approach.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Bajić</dc:creator><pubDate>Sat, 18 May 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-05-18:/pycon-us-2024/combining-django-orm-fastapi-in-a-single-app.html</guid><category>PyCon US 2024</category></item><item><title>The Most Bizarre Software Bugs in History</title><link>https://pyvideo.org/pycon-us-2025/the-most-bizarre-software-bugs-in-history.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We've all heard that we should test our software, but what happens when we don't? Sometimes, it leads to strange and unexplainable events.&lt;/p&gt;
&lt;p&gt;Is 'testing more' always the right solution? What do these bugs reveal about software and its failures? And how can we use these lessons to build more resilient systems?&lt;/p&gt;
&lt;p&gt;Let's take a look at the most bizarre software bugs in history.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mia Bajić</dc:creator><pubDate>Fri, 16 May 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-05-16:/pycon-us-2025/the-most-bizarre-software-bugs-in-history.html</guid><category>PyCon US 2025</category></item></channel></rss>