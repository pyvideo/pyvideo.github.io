<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_martin-christen.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-10-10T00:00:00+00:00</updated><entry><title>Detecting and Analyzing Solar Panels in Switzerland using...</title><link href="https://pyvideo.org/pydata-berlin-2019/detecting-and-analyzing-solar-panels-in-switzerland-using.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Martin Christen</name></author><id>tag:pyvideo.org,2019-10-10:pydata-berlin-2019/detecting-and-analyzing-solar-panels-in-switzerland-using.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Martin Christen&lt;/p&gt;
&lt;p&gt;Track:PyData
We present a novel method for detecting solar panels and its geometry on aerial imagery. The goal is to know the exact locations, dimensions and potential of every solar installation in Switzerland.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/RJCW8U"&gt;https://de.pycon.org/program/RJCW8U&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Geospatial Analysis using Python and JupyterHub</title><link href="https://pyvideo.org/europython-2019/geospatial-analysis-using-python-and-jupyterhub.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Martin Christen</name></author><id>tag:pyvideo.org,2019-07-10:europython-2019/geospatial-analysis-using-python-and-jupyterhub.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Geospatial data is data containing a spatial component â€“ describing
objects with a reference to the planet's surface. This data usually
consists of a spatial component, of various attributes, and sometimes of
a time reference (where, what, and when). Efficient processing and
visualization of small to large-scale spatial data is a challenging
task.&lt;/p&gt;
&lt;p&gt;This talk describes how to process and visualize geospatial vector and
raster data using Python and the Jupyter Notebook.&lt;/p&gt;
&lt;p&gt;To process the data a high performance computer with 4 GPUS (NVidia
Tesla V100), 192 GB RAM, 44 CPU Cores is used to run JupyterHub.&lt;/p&gt;
&lt;p&gt;There are numerous modules available which help using geospatial data in
using low- and high-level interfaces, which are shown in this
presentation. In addition, it is shown how to use deep learning for
raster analysis using the high performance GPUs and several deep
learning frameworks.&lt;/p&gt;
</summary><category term="Analytics"></category><category term="Big Data"></category><category term="Deep Learning"></category><category term="GPU"></category><category term="Visualization"></category></entry><entry><title>Geospatial Data Processing, Analysis and Visualization using Python</title><link href="https://pyvideo.org/pycon-belarus-2019/geospatial-data-processing-analysis-and-visualization-using-python.html" rel="alternate"></link><published>2019-02-16T00:00:00+00:00</published><updated>2019-02-16T00:00:00+00:00</updated><author><name>Martin Christen</name></author><id>tag:pyvideo.org,2019-02-16:pycon-belarus-2019/geospatial-data-processing-analysis-and-visualization-using-python.html</id><summary type="html"></summary></entry><entry><title>Processing Geodata using Python</title><link href="https://pyvideo.org/pycon-de-2018/processing-geodata-using-python.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Martin Christen</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/processing-geodata-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a large amount of Python modules available suitable for spatial
data processing. In this talk, it is shown how to analyze, manipulate
and visualize geospatial data by using open source modules. The
following modules will be introduced:&lt;/p&gt;
</summary><category term="Big Data"></category><category term="Data Science"></category><category term="Jupyter"></category><category term="Python"></category><category term="Visualisation"></category></entry><entry><title>GeoPython 2019</title><link href="https://pyvideo.org/pycon-de-2018/geopython-2019.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Martin Christen</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/geopython-2019.html</id><summary type="html"></summary></entry><entry><title>Processing Geodata using Python and Open Source Modules</title><link href="https://pyvideo.org/europython-2018/processing-geodata-using-python-and-open-source-modules.html" rel="alternate"></link><published>2018-07-27T00:00:00+00:00</published><updated>2018-07-27T00:00:00+00:00</updated><author><name>Martin Christen</name></author><id>tag:pyvideo.org,2018-07-27:europython-2018/processing-geodata-using-python-and-open-source-modules.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The need for processing small-scale to large-scale spatial data is huge.
In this talk, it is shown how to analyze, manipulate and visualize
geospatial data by using Python and various open source modules.&lt;/p&gt;
&lt;p&gt;The following modules will be covered:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Shapely: Manipulation and analysis of geometric objects&lt;/li&gt;
&lt;li&gt;Fiona - The pythonic way to handle vector data&lt;/li&gt;
&lt;li&gt;rasterio - The pythonic way to handle raster data&lt;/li&gt;
&lt;li&gt;pyproj - transforming spatial reference systems&lt;/li&gt;
&lt;li&gt;Vector File Formats (Shapefiles, GeoJSON, KML, GeoPackage)&lt;/li&gt;
&lt;li&gt;Geospatial analysis with GeoPandas&lt;/li&gt;
&lt;li&gt;Creating maps using Folium&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github repo: &lt;a class="reference external" href="https://github.com/martinchristen/EP2018_Geo"&gt;https://github.com/martinchristen/EP2018_Geo&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Rendering complex 3D-Geodata using pyRT</title><link href="https://pyvideo.org/europython-2017/rendering-complex-3d-geodata-using-pyrt.html" rel="alternate"></link><published>2017-07-12T00:00:00+00:00</published><updated>2017-07-12T00:00:00+00:00</updated><author><name>Martin Christen</name></author><id>tag:pyvideo.org,2017-07-12:europython-2017/rendering-complex-3d-geodata-using-pyrt.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyRT (pronounced &amp;quot;pirate&amp;quot;) is a rather new open source project
creating a ray tracer in pure Python and some optional CPU/GPU
acceleration using bindings. Ray tracing is a technique for
generating an image by tracing the path of light.&lt;/p&gt;
&lt;p&gt;PyRT was created to render large 3D City models. In this talk, the
possibilities and experiences of ray tracing in Python using pyRT are
shown. pyRT also runs in the Jupyter Notebook.&lt;/p&gt;
&lt;p&gt;Rendering complex 3D-Geodata, such as 3D-City models with an
extremely high polygon count and a vast amount of textures at
interactive framerates is still a very challenging task, especially
on mobile devices. This talk presents an approach for processing,
caching and serving massive geospatial data in a cloud-based
environment for large scale, out-of-core, highly scalable 3D scene
rendering in a web-based solution. PyRT  is used for rendering large
amounts of geospatial data. The approach for processing, rendering
and caching 3D-City Models is shown.&lt;/p&gt;
&lt;p&gt;Screenshots:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/martinchristen/pyRT/raw/master/jupyter/img/sponza.png"&gt;https://github.com/martinchristen/pyRT/raw/master/jupyter/img/sponza.png&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/martinchristen/pyRT/blob/master/jupyter/img/Berlin_AO_small.PNG?raw=true"&gt;https://github.com/martinchristen/pyRT/blob/master/jupyter/img/Berlin_AO_small.PNG?raw=true&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Making Games with Python: Mission Impossible?</title><link href="https://pyvideo.org/europython-2017/making-games-with-python-mission-impossible.html" rel="alternate"></link><published>2017-07-11T00:00:00+00:00</published><updated>2017-07-11T00:00:00+00:00</updated><author><name>Martin Christen</name></author><id>tag:pyvideo.org,2017-07-11:europython-2017/making-games-with-python-mission-impossible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A discussion about making full-featured, commercial games in python,
both 2D and 3D.&lt;/p&gt;
&lt;p&gt;Looking at state of the art approaches to using python in gaming, we
will compare the alternatives: pygame (2D API), OpenGL (via
pygame/pySDL2), Unreal Engine 4 and the Godot Engine (with further
comparison to Unity 3D game engine).&lt;/p&gt;
&lt;p&gt;We will also look at other benefits of using python in the gaming
context, such as integration with 3D modelling software, scripting
the asset pipeline and GIS data integration.&lt;/p&gt;
&lt;p&gt;Finally, can (and should) python move beyond being the language of
plugins and scripts, and become the main language for creating game
development projects?&lt;/p&gt;
</summary></entry><entry><title>Martin Christen â€“ 3D Computer Graphics with Python â€“ SPS16</title><link href="https://pyvideo.org/swiss-python-summit-2016/martin-christen-3d-computer-graphics-with-python-sps16.html" rel="alternate"></link><published>2016-02-05T00:00:00+00:00</published><updated>2016-02-05T00:00:00+00:00</updated><author><name>Martin Christen</name></author><id>tag:pyvideo.org,2016-02-05:swiss-python-summit-2016/martin-christen-3d-computer-graphics-with-python-sps16.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;In this talk several technologies around 3D graphics for Python are presented. A brief introduction to scripting Blender shows the possibilities of creating complex 3D worlds and games. The second part shows how to create low level 3D applications and how Python is used to create preprocessed 3D worlds for the webbrowser.&amp;quot;&lt;/p&gt;
&lt;p&gt;Talk recorded at the Swiss Python Summit on February 5th, 2016.&lt;/p&gt;
&lt;p&gt;Licensed as Creative Commons Attribution 4.0 International.&lt;/p&gt;
</summary></entry></feed>