<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Jodie Putrino</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jodie-putrino.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-20T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Defying the Status Quo: How a grassroots effort can transform an organization - Jodie Putrino</title><link href="https://pyvideo.org/write-the-docs-portland-2019/defying-the-status-quo-how-a-grassroots-effort-can-transform-an-organization-jodie-putrino.html" rel="alternate"></link><published>2019-05-20T00:00:00+00:00</published><updated>2019-05-20T00:00:00+00:00</updated><author><name>Jodie Putrino</name></author><id>tag:pyvideo.org,2019-05-20:/write-the-docs-portland-2019/defying-the-status-quo-how-a-grassroots-effort-can-transform-an-organization-jodie-putrino.html</id><content type="html"></content><category term="Write the Docs Portland 2019"></category></entry><entry><title>Treating documentation like code: a practical account</title><link href="https://pyvideo.org/write-the-docs-portland-2017/treating-documentation-like-code-a-practical-account.html" rel="alternate"></link><published>2017-05-15T00:00:00+00:00</published><updated>2017-05-15T00:00:00+00:00</updated><author><name>Jodie Putrino</name></author><id>tag:pyvideo.org,2017-05-15:/write-the-docs-portland-2017/treating-documentation-like-code-a-practical-account.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you interested in developing docs like code? Are you frustrated by
the lack of available information as to what that really means and how
exactly you're supposed to do it? Welcome to the club!&lt;/p&gt;
&lt;p&gt;&amp;quot;Treating documentation like code&amp;quot; is somewhat of a buzzword bingo term
these days. You â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you interested in developing docs like code? Are you frustrated by
the lack of available information as to what that really means and how
exactly you're supposed to do it? Welcome to the club!&lt;/p&gt;
&lt;p&gt;&amp;quot;Treating documentation like code&amp;quot; is somewhat of a buzzword bingo term
these days. You can find any number of blog posts, presentations, and
articles online expounding on the theory and merits of the idea. When I
was presented with an opportunity to truly integrate documentation into
the agile development process almost 2 years ago, I couldn't find any
information that could teach me how to treat docs like code. Since then,
I've worked with a team of passionate software engineers to bring a long
list of 'awesome-future' ideas for treating documentation like code into
practice. In this presentation, I'll lay out how we create, test, build,
and publish our documentation using agile methodologies, so others
starting down the same road have a path to follow.&lt;/p&gt;
&lt;p&gt;In the beginning, we had a great idea - documentation should be
developed, tested, and built just like the products we make. The
keystone of this grand vision was the idea that docs live in the same
repositories as the code, use the same development tools and code review
processes, and follow a continuous delivery model. I'll go over the
tools we chose to write, build, and test the docs; the responsibilities
of the software engineers and technical writer, respectively, for
creating and maintaining content; the docs information architecture we
developed; how we incorporated syntax and grammar checks into code
testing; and how we build and deploy our documentation automatically.&lt;/p&gt;
</content><category term="Write the Docs Portland 2017"></category></entry></feed>