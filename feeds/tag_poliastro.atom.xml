<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_poliastro.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-04-30T00:00:00+00:00</updated><entry><title>Catch that asteroid with poliastro</title><link href="https://pyvideo.org/pyastro-2018/catch-that-asteroid-with-poliastro.html" rel="alternate"></link><published>2018-04-30T00:00:00+00:00</published><updated>2018-04-30T00:00:00+00:00</updated><author><name>Juan Luis Cano</name></author><id>tag:pyvideo.org,2018-04-30:pyastro-2018/catch-that-asteroid-with-poliastro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="http://docs.poliastro.space/"&gt;poliastro&lt;/a&gt; is a Python library for Astrodynamics focused on interplanetary trajectories, interactive visualization and user friendliness. It features core algorithms like propagation (Kepler problem), orbit determination (Lambert problem), orbital maneuvers computation (Hohmann, bielliptic) and conversion between classical, equinoctial and cartesian orbital elements. It also ships simple methods for orbit plotting and makes heavy use of astropy.units, astropy.time and astropy.coordinates for correctness.&lt;/p&gt;
&lt;p&gt;In this talk I will present benchmarks of some poliastro algorithms accelerated with numba against its FORTRAN counterparts, review its interactive plotting capabilities and comment about the validation strategies used for the algorithms.&lt;/p&gt;
</summary><category term="poliastro"></category></entry><entry><title>¡Atrapa ese asteroide con poliastro!</title><link href="https://pyvideo.org/pycon-es-2017/atrapa-ese-asteroide-con-poliastro.html" rel="alternate"></link><published>2017-09-23T15:30:00+02:00</published><updated>2017-09-23T15:30:00+02:00</updated><author><name>Antonio Hidalgo</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/atrapa-ese-asteroide-con-poliastro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;poliastro es una biblioteca de código abierto escrita en Python puro utilizada para hacer cálculos orbitales. Este año participó en el Summer of Code de la Agencia Espacial Europea (SOCIS), un programa parecido al de Google que otorga becas a estudiantes para desarrollar código abierto en verano. En esta charla hablaremos de la API que se ha desarrollado durante el verano para descargar datos de asteroides, cometas y otros objetos ¡incluyendo alguna demo!&lt;/p&gt;
</summary><category term="poliastro"></category></entry></feed>