<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Madelaine Boyd</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_madelaine-boyd.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-10-22T00:00:00+00:00</updated><subtitle></subtitle><entry><title>The Pit of Success for Per-Object Permissions in Django</title><link href="https://pyvideo.org/djangocon-us-2021/the-pit-of-success-for-per-object-permissions-in-django.html" rel="alternate"></link><published>2021-10-22T00:00:00+00:00</published><updated>2021-10-22T00:00:00+00:00</updated><author><name>Madelaine Boyd</name></author><id>tag:pyvideo.org,2021-10-22:/djangocon-us-2021/the-pit-of-success-for-per-object-permissions-in-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Privacy is important, but permissions are hard. Even more, the Django permission framework only supports subject-verb relation guards (does &lt;em&gt;someone&lt;/em&gt; have permission to &lt;em&gt;write&lt;/em&gt;) but not subject-verb-object relations (does &lt;em&gt;someone&lt;/em&gt; have permission to &lt;em&gt;write&lt;/em&gt; in this &lt;em&gt;table&lt;/em&gt;). Other existing Django middleware extensions such as django-guardian and django-rules address this …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Privacy is important, but permissions are hard. Even more, the Django permission framework only supports subject-verb relation guards (does &lt;em&gt;someone&lt;/em&gt; have permission to &lt;em&gt;write&lt;/em&gt;) but not subject-verb-object relations (does &lt;em&gt;someone&lt;/em&gt; have permission to &lt;em&gt;write&lt;/em&gt; in this &lt;em&gt;table&lt;/em&gt;). Other existing Django middleware extensions such as django-guardian and django-rules address this, but require manual and explicit permission checking for every access.&lt;/p&gt;
&lt;p&gt;Wouldn’t it be nice if &lt;cite&gt;Model.objects.all()&lt;/cite&gt; automatically only returned the set of objects which the active requesting user had permission to see? Or, if you tried to save a change to a model object you’d automatically get an error if the user doesn’t have the appropriate permissions? For this purpose, I developed a tool to do all of this as an easy-to-install and configure middleware with acceptable runtime overhead. It provides security-by-design, because it automatically takes permissions into account &lt;em&gt;system-wide&lt;/em&gt;. Through that, it drastically reduces the possibility of high impact bugs and declutters the code from privacy checks. In this talk, I’ll showcase how one can hook into Models, Managers and Descriptors to enable the ‘magic’ behind this framework. I’ll also discuss key performance considerations as well as our experience running it in production.&lt;/p&gt;
</content><category term="DjangoCon US 2021"></category></entry><entry><title>Descriptors: Why they are like Ninjas</title><link href="https://pyvideo.org/pybay-2021/descriptors-why-they-are-like-ninjas.html" rel="alternate"></link><published>2021-10-09T00:00:00+00:00</published><updated>2021-10-09T00:00:00+00:00</updated><author><name>Madelaine Boyd</name></author><id>tag:pyvideo.org,2021-10-09:/pybay-2021/descriptors-why-they-are-like-ninjas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk was presented at PyBay2021 Food Truck Edition - 6th annual Bay Area Regional Python conference. See pybay.com for more details about PyBay and click SHOW MORE for information about this talk.&lt;/p&gt;
&lt;p&gt;DESCRIPTION
Understanding descriptors is a key to a deep understanding of Python because they are basis …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk was presented at PyBay2021 Food Truck Edition - 6th annual Bay Area Regional Python conference. See pybay.com for more details about PyBay and click SHOW MORE for information about this talk.&lt;/p&gt;
&lt;p&gt;DESCRIPTION
Understanding descriptors is a key to a deep understanding of Python because they are basis for many features including functions, methods, properties, class methods, static methods, and reference to super classes. Learn how to about different descriptors that have been hiding in plain sight.&lt;/p&gt;
&lt;p&gt;SPEAKER BIO
Bit.io's founding engineer who won a rap battle by rhyming with vim, among other things.&lt;/p&gt;
&lt;p&gt;SPONSOR ACKNOWLEDGEMENT
The post production of this and other PyBay2020 videos are made possible by our sponsors:
- Carta &lt;a class="reference external" href="https://carta.com"&gt;https://carta.com&lt;/a&gt;
- Anyscale &lt;a class="reference external" href="https://anyscale.com"&gt;https://anyscale.com&lt;/a&gt;
- Goodrx &lt;a class="reference external" href="https://goodrx.com"&gt;https://goodrx.com&lt;/a&gt;
- Nginx &lt;a class="reference external" href="https://nginx.com"&gt;https://nginx.com&lt;/a&gt;
- Bit.io &lt;a class="reference external" href="https://bit.io"&gt;https://bit.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;EVENT PRODUCER ACKNOWLEDGEMENT
This community conference is produced by organizers of SF Python meetup and volunteers from around the SF Bay Area and beyond. See upcoming events here: &lt;a class="reference external" href="https://sfpythonmeetup.com"&gt;https://sfpythonmeetup.com&lt;/a&gt;&lt;/p&gt;
</content><category term="PyBay 2021"></category></entry><entry><title>The Pit of Success for Object level Permissions in Django</title><link href="https://pyvideo.org/pycon-india-2021/the-pit-of-success-for-object-level-permissions-in-django.html" rel="alternate"></link><published>2021-09-19T00:00:00+00:00</published><updated>2021-09-19T00:00:00+00:00</updated><author><name>Madelaine Boyd</name></author><id>tag:pyvideo.org,2021-09-19:/pycon-india-2021/the-pit-of-success-for-object-level-permissions-in-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk was presented at PyCon India 2021 Online.&lt;/p&gt;
&lt;p&gt;PyCon India is the largest gathering of Pythonistas in India for the Python programming language.
The 13th edition of PyCon India took place online from 17th Sept to 20th Sept 2021.&lt;/p&gt;
&lt;p&gt;Talk Detail: &lt;a class="reference external" href="https://in.pycon.org/cfp/2021/proposals/the-pit-of-success-for-object-level-permissions-in-django-how-to-make-it-easy-to-get-privacy-right~eVOAW/"&gt;https://in.pycon.org/cfp/2021/proposals …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk was presented at PyCon India 2021 Online.&lt;/p&gt;
&lt;p&gt;PyCon India is the largest gathering of Pythonistas in India for the Python programming language.
The 13th edition of PyCon India took place online from 17th Sept to 20th Sept 2021.&lt;/p&gt;
&lt;p&gt;Talk Detail: &lt;a class="reference external" href="https://in.pycon.org/cfp/2021/proposals/the-pit-of-success-for-object-level-permissions-in-django-how-to-make-it-easy-to-get-privacy-right~eVOAW/"&gt;https://in.pycon.org/cfp/2021/proposals/the-pit-of-success-for-object-level-permissions-in-django-how-to-make-it-easy-to-get-privacy-right~eVOAW/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Click here to subscribe to the PyCon India channel: &lt;a class="reference external" href="https://www.youtube.com/user/inpycon?sub_confirmation=1"&gt;https://www.youtube.com/user/inpycon?sub_confirmation=1&lt;/a&gt;
Follow PyCon India on Twitter: &lt;a class="reference external" href="https://twitter.com/pyconindia"&gt;https://twitter.com/pyconindia&lt;/a&gt;
Follow PyCon India on Facebook: &lt;a class="reference external" href="https://www.facebook.com/PyConIndia/"&gt;https://www.facebook.com/PyConIndia/&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon India 2021"></category><category term="PyConIndia"></category><category term="PyConIndia2021"></category><category term="Django"></category></entry></feed>