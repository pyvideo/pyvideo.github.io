<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 14 Aug 2016 00:00:00 +0000</lastBuildDate><item><title>Just Enough Typography</title><link>https://pyvideo.org/djangocon-us-2016/just-enough-typography.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Just Enough Typography by Joni Trythall&lt;/p&gt;
&lt;p&gt;Design is 95% typography … or something like that. Having a grasp on what makes for pleasant, easy to read typography that reinforces your brand is the first step towards building an amazing, impactful experience. Together we will explore typography fundamentals:&lt;/p&gt;
&lt;p&gt;Sizing, spacing, and rhythm to make all of our type feel cohesive.
How to improve readability and encourage the user to read.
Type families and different styles.
Choosing and pairing fonts, how many to use, and when to use them.
Much more!
These typography basics will help you better understand why some typefaces just don’t work and give you some go-to solutions for when the designer is out sick (or has gone crazy). We’ll learn a bunch but not too much, it will be just enough :grin:&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joni Trythall</dc:creator><pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-14:djangocon-us-2016/just-enough-typography.html</guid></item><item><title>Keynote: Architecting with Channels</title><link>https://pyvideo.org/djangocon-us-2016/keynote-architecting-with-channels.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Keynote: Architecting with Channels by Andrew Godwin&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Godwin</dc:creator><pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-14:djangocon-us-2016/keynote-architecting-with-channels.html</guid></item><item><title>SSL All The Things</title><link>https://pyvideo.org/djangocon-us-2016/ssl-all-the-things.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - SSL All The Things by Markus Holtermann&lt;/p&gt;
&lt;p&gt;Over the last few years SSL/TLS encryption of not only websites but many other services as well has risen tremendously. The Let’s Encrypt organization and certificate authority (CA) makes that pretty easy. Since September 2015 almost 1.8 million certificates have been issued. And you can use it, too. For free!&lt;/p&gt;
&lt;p&gt;In this talk I'll demonstrate how to integrate SSL/TLS and point out some common pitfalls. I’ll briefly layout the Let's Encrypt ACME protocol and explain what you need to set up in Django to make SSL/TLS the default and only way to access your site.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-14:djangocon-us-2016/ssl-all-the-things.html</guid></item><item><title>Angular 2 and You</title><link>https://pyvideo.org/djangocon-us-2016/angular-2-and-you.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Angular 2 and You by Pam Selle&lt;/p&gt;
&lt;p&gt;AngularJS is one of, if not the, most popular JavaScript framework out there today. But a new day is coming: The dawn of Angular 2! Angular comes with a robust community and standard of practice, but Angular 2 is something even more intriguing: a JavaScript framework based on components (not unlike React!), with an eye towards complying with future web standards.&lt;/p&gt;
&lt;p&gt;In this talk, we’ll cover the broad strokes of Angular 2, including some of the big game changers: web components and “choose your own language” support, and how it integrates into back-ends like Django to provide some structure to your front-end. You'll learn about Angular 2's approach to the &amp;quot;JavaScript framework&amp;quot; problem, how components create modularity in your application, and a little bit about the JavaScript build toolchain (mysterious to many!) that the JavaScript world is constantly debating over.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pam Selle</dc:creator><pubDate>Sat, 13 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-13:djangocon-us-2016/angular-2-and-you.html</guid></item><item><title>Atomic Wagtail</title><link>https://pyvideo.org/djangocon-us-2016/atomic-wagtail.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Atomic Wagtail by Kurt Wall&lt;/p&gt;
&lt;p&gt;WHAT IS WAGTAIL&lt;/p&gt;
&lt;p&gt;Wagtail is a Django-based CMS made by developers that were just sick of the current solutions out there for reasons from usability to extensibility. It provides a sleek and intuitive editing experience, while keeping its design open and flexible for creating custom frameworks. I'll first explain what Wagtail is, how we can use it, what features make it great, and what makes it not so great.&lt;/p&gt;
&lt;p&gt;ATOMIC DESIGN&lt;/p&gt;
&lt;p&gt;Brad Frost coined this term in reference to his taxonomical design model. The model breaks down design layouts from the simplest element to the more complex layouts. I'll briefly go over what this model is.&lt;/p&gt;
&lt;p&gt;ATOMIC WAGTAIL&lt;/p&gt;
&lt;p&gt;Atomic design lends well to the strengths and some features of Wagtail. I'll tell you how you can use Atomic design in harmony with Wagtail, with tips and pitfalls you might encounter along the way.&lt;/p&gt;
&lt;p&gt;LESSONS LEARNED&lt;/p&gt;
&lt;p&gt;Any new approach to something is going to be both fun and frustrating. I'll list some of the most frustrating aspects of Wagtail, trickled with some advice.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kurt Wall</dc:creator><pubDate>Sat, 13 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-13:djangocon-us-2016/atomic-wagtail.html</guid></item><item><title>Stress Testing Your Code of Conduct...</title><link>https://pyvideo.org/djangocon-us-2016/stress-testing-your-code-of-conduct.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Stress Testing Your Code of Conduct in Production by Ola Sendecka  &amp;amp; Baptiste Mispelon&lt;/p&gt;
&lt;p&gt;The Django and Python communities have made codes of conducts a standard feature for many years now. But what exactly is a code of conduct? How does it work in practice? Why do we need them? What you should report? What are the consequences of having one?&lt;/p&gt;
&lt;p&gt;We (Ola &amp;amp; Baptiste) have been working as CoC points of contacts at many conferences for the past few years: EuroPython 2014, DjangoCon Europe (2015 and 2016), and Django Under the Hood (2014, 2015). This has given us a unique insight into the inner workings and practical implications of codes of conducts and we want to share it with the Django community.&lt;/p&gt;
&lt;p&gt;The talk will start with a brief history of codes of conducts. From then, we'll go over some of the challenges and pitfalls of implementing a CoC in our communities or events. After that, we'll show how CoC work in practice and answer some common questions about them. We will then briefly talk about how lessons learnt from CoC world can be applied successfully in your daily job to grow supportive and strong teams. Finally, we'll finish off by showing the new standardized CoC processes that we've been working on.&lt;/p&gt;
&lt;p&gt;With this talk, we want to continue the process we've started of bringing CoC to the front of the stage, making them more transparent and less taboo. We believe that CoC are an essential part of any community and we'd like to share our vision for how we think ours should work.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ola Sendecka</dc:creator><pubDate>Sat, 13 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-13:djangocon-us-2016/stress-testing-your-code-of-conduct.html</guid></item><item><title>Walking Down the A11Y Road - Lessons Learnt From...</title><link>https://pyvideo.org/djangocon-us-2016/walking-down-the-a11y-road-lessons-learnt-from.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Walking Down the A11Y Road - Lessons Learnt From Working on Accessibility of A Django Project by Radina Matic&lt;/p&gt;
&lt;p&gt;(~ 5 minutes)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Who we are and how did we meet? WHY DO WE CARE?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(~ 10 minutes)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Universal Design as a core value&lt;/li&gt;
&lt;li&gt;Who benefits?&lt;/li&gt;
&lt;li&gt;Why making inclusive products makes business sense?&lt;/li&gt;
&lt;li&gt;What liabilities you incur for not making inclusive products? WHAT CAN YOU DO WITH AN ALREADY ROUNDED PRODUCT?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(~ 10 minutes)&lt;/p&gt;
&lt;p&gt;BABY-STEPS WITH KA LITE
Easy things you can check for and correct fast (titles, headings, aria landmarks, visible focus, alttext for images, meaningful labels for EVERYTHING...)&lt;/p&gt;
&lt;p&gt;Bit more tinkering required (menus and navigation, complex forms, accessible color schemes...)&lt;/p&gt;
&lt;p&gt;Accessible Multimedia &amp;amp; Documents (offer ALTERNATIVES!)&lt;/p&gt;
&lt;p&gt;WHAT SHOULD YOU DO RIGHT FROM THE START OF A NEW PROJECT?&lt;/p&gt;
&lt;p&gt;(~ 10 minutes)&lt;/p&gt;
&lt;p&gt;KOLIBRI FLIES FOR EVERYBODY
- Include a11y requirements into the Usability Style Guide
- Take a11y into account when choosing the libraries and frameworks
- Follow the standard web semantic
- Make accessible web components available from the beginning
- Start including a11y automated tests as soon as possible
ACCESSIBILITY IN EVERYDAY DEV TEAM LIFE&lt;/p&gt;
&lt;p&gt;(~ 10 minutes)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A11y Pills &amp;amp; lots of passion&lt;/li&gt;
&lt;li&gt;Make accessibility a &lt;em&gt;SHARED&lt;/em&gt; responsibility&lt;/li&gt;
&lt;li&gt;Start a Tools Repository (Rome wasn't built in a day)&lt;/li&gt;
&lt;li&gt;Don't rely exclusively on checklists and automated testing (Involve the USERS!)&lt;/li&gt;
&lt;li&gt;No such thing as 100% accessible&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Radina Matic</dc:creator><pubDate>Sat, 13 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-13:djangocon-us-2016/walking-down-the-a11y-road-lessons-learnt-from.html</guid></item><item><title>A New Look Into APIS - Graphene</title><link>https://pyvideo.org/djangocon-us-2016/a-new-look-into-apis-graphene.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A New Look Into APIS - Graphene by Syrus Akbary&lt;/p&gt;
&lt;p&gt;REST API's have been with us a long time. It's time to ask if we can create better API's with new paradigms. We will discuss new ways to query and manipulate data so that our code becomes simpler and easier to scale.&lt;/p&gt;
&lt;p&gt;GraphQL is a query language created by Facebook in 2012 which provides a common interface between the client and the server for data fetching and manipulations. We will do a quick overview of GraphQL and focus later on Graphene, the main GraphQL framework for Python.&lt;/p&gt;
&lt;p&gt;Graphene allows us to reuse our existing Django Models to create schemas quickly and easily. We would like to think of it as the next natural step from the Django Rest Framework.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Syrus Akbary</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/a-new-look-into-apis-graphene.html</guid></item><item><title>Building JSON APIS With Django / Pinax</title><link>https://pyvideo.org/djangocon-us-2016/building-json-apis-with-django-pinax.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building JSON APIS With Django / Pinax by Brian Rosner&lt;/p&gt;
&lt;p&gt;Javascript is a language we simply cannot ignore. It isn't just Javascript too. Objective-C, Swift and Java are all languages we are finding we need to work with to meet client expectations about a web app.&lt;/p&gt;
&lt;p&gt;The role Django (and Python) plays in this new world is becoming a bit more limited. There are plenty of great efforts to get Python running everywhere, but this talk isn't about any of that. This talk is about building the API all of these frontends need to communicate with to drive persistent and business logic.&lt;/p&gt;
&lt;p&gt;pinax-api was originally built to serve the needs of a particular client at Eldarion, but later pulled out as its own app. It provides a simple and modern interface to building an API with Django. At its core, pinax-api leverages the JSON:API spec that was built out of Ember.&lt;/p&gt;
&lt;p&gt;The talk will cover:&lt;/p&gt;
&lt;p&gt;what is JSON:API
JSON:API in pinax-api
API primitives provided by pinax-pai
how pinax-api leverages Django to its fullest
automatic documentation generation using API Blueprint
why not Django REST Framework?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Rosner</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/building-json-apis-with-django-pinax.html</guid></item><item><title>Day 3 Lightning Talks</title><link>https://pyvideo.org/djangocon-us-2016/day-3-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=fmmhxGcLTBQ&amp;amp;t=00m15s"&gt;00:15&lt;/a&gt; - Andrew Sauber&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=fmmhxGcLTBQ&amp;amp;t=05m04s"&gt;05:04&lt;/a&gt; - Dan Davis&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=fmmhxGcLTBQ&amp;amp;t=09m21s"&gt;09:21&lt;/a&gt; - Justin Caratzas&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=fmmhxGcLTBQ&amp;amp;t=14m02s"&gt;14:02&lt;/a&gt; - Kevin Daum&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=fmmhxGcLTBQ&amp;amp;t=17m10s"&gt;17:10&lt;/a&gt; - Adrienne Lowe&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=fmmhxGcLTBQ&amp;amp;t=20m52s"&gt;20:52&lt;/a&gt; - Ethan McCreadie&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=fmmhxGcLTBQ&amp;amp;t=25m02s"&gt;25:02&lt;/a&gt; - Dan Dietz&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=fmmhxGcLTBQ&amp;amp;t=29m56s"&gt;29:56&lt;/a&gt; - Philip James&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=fmmhxGcLTBQ&amp;amp;t=32m56s"&gt;32:56&lt;/a&gt; - Haris Ibrahim K.V.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Sauber</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/day-3-lightning-talks.html</guid><category>lightning talks</category></item><item><title>Django for IOT: From Hackathon to Production</title><link>https://pyvideo.org/djangocon-us-2016/django-for-iot-from-hackathon-to-production.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django for IOT: From Hackathon to Production by Anna Schneider&lt;/p&gt;
&lt;p&gt;It’s Friday night of hackathon weekend. The latest snazzy Internet-connected thingy is sitting on the table next to your beverage of choice, the device’s API docs are open in a browser tab, and your fingers are itching to write some Django. What’s the fastest way to get started? And next month when you come back to it, what will you want to upgrade?&lt;/p&gt;
&lt;p&gt;This talk will walk through a common IoT use case, sending HTTP requests to turn on and off a device in response to some external data. I do this all the time at WattTime and I'll share some of the tricks I've picked up over the last couple years.&lt;/p&gt;
&lt;p&gt;We’ll focus on two big differences from your typical blog or polls app: the data model abstractions that fit the problem, and the need to run frequent periodic tasks to hit the device’s API. I'll share a data model that's worked well for me across a bunch of IoT apps. And I'll show you two ways to run those periodic background tasks in Django: a hackathon-friendly version, and a production-friendly version using Celery. You'll walk away with a complete demo template that you can use in your own projects!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anna Schneider</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/django-for-iot-from-hackathon-to-production.html</guid></item><item><title>Django, Python, and Health Care Data</title><link>https://pyvideo.org/djangocon-us-2016/django-python-and-health-care-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django, Python, and Health Care Data by Becca Nock&lt;/p&gt;
&lt;p&gt;Data and technology can be used to improve the health of older adults and to help them to continue to live at home and in the community as they age. Predictive analytics and modeling can predict who will get sick, be hospitalized, or have adverse outcomes in the future. Once we know who is at risk, we can design interventions to decrease the likelihood of negative health outcomes.&lt;/p&gt;
&lt;p&gt;This talk will introduce you to health care data sources, such as electronic medical records and insurance claims; predictive modeling and how it can be used to improve the care we provide; and publicly available and open health data. We will talk about the D2S2 (discharge decision support system), which helps health care providers make decisions when older adults are getting ready to be discharged from the hospital; and how Django and Python can be used to visualize open health-related data.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Intro: Who I am (2 min)&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Health care data and where it comes from (5 min)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Electronic health records&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Dr. Chrono is actually built with Django!&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Claims data&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Predictive modeling and decision support (10 min)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Predicting readmissions &amp;amp; the discharge decision support system (D2S2)&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Predict whether older adults are at high risk or low risk of being readmitted to the hospital after discharge.&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Building decision support to improve hospital discharge decision-making&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Once we know a patient is at high risk of being readmitted, how do we decide what care they should receive after they leave the hospital? Use expert knowledge to develop decision support into the electronic medical record that will recommend a site for post acute care (care once the patient leaves the hospital).&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Building patient preferences into the recommendations made to health care providers about what care the patient should receive after their hospitalization.&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Brief overview of:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Predicting diabetes&lt;/li&gt;
&lt;li&gt;Likelihood of hospitalization modeling and nurse health coaching&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Django and health care data (8 min)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Overview of open and publically available health care data&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Open Data Philly (www.opendataphilly.org)&lt;/li&gt;
&lt;li&gt;HealthData.gov&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Visualizing open health data with Python and Django&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Becca Nock</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/django-python-and-health-care-data.html</guid></item><item><title>From Developer to Manager</title><link>https://pyvideo.org/djangocon-us-2016/from-developer-to-manager.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From Developer to Manager by Sean O'Connor&lt;/p&gt;
&lt;p&gt;As developers move along in their career, they are often encouraged to take on roles that involve more and more people management and less code.&lt;/p&gt;
&lt;p&gt;Stepping towards management often can be a good move to make, but it is not one that should be taken lightly. If such a move is taken without a full appreciation for what it truly is (a career change), it can lead to woe and misery for all involved.&lt;/p&gt;
&lt;p&gt;In this talk we'll follow one developer's journey from coding 40 hours/week to primarily managing humans. What worked well, what didn't work well, what was hard, and what was surprising.&lt;/p&gt;
&lt;p&gt;Attendees of this talk should expect to walk away with a better idea of if they may be suited for management and if so, how they can successfully acclimate to their new role.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sean O'Connor</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/from-developer-to-manager.html</guid></item><item><title>Git in Control, Version Control and How it Could save Your Life</title><link>https://pyvideo.org/djangocon-us-2016/git-in-control-version-control-and-how-it-could-save-your-life.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Git in Control, Version Control and How it Could save Your Life by Rachell Calhoun&lt;/p&gt;
&lt;p&gt;“You can’t break GitHub, don’t worry.” Maybe you can’t break it but you can sure get yourself into a labyrinth of git commands. Version control can be a headache but it can also save your project.&lt;/p&gt;
&lt;p&gt;There are certain pitfalls to avoid when using Git, I’ve probably found most of them and stumbled my way out. While my goal is to help you avoid them altogether, I also want to give you the skills to work through these pitfalls so you can make it out alive and with your project intact.&lt;/p&gt;
&lt;p&gt;Whether you’re working on your own project, or collaborating with others you can learn how to git survive anything. We’ll discuss the benefits version control has for your own projects as well as projects with others.&lt;/p&gt;
&lt;p&gt;For all of you awesome collaborators working with others on a project, we’ll go over important steps to take while handling others’ code and ‘gitiquette’ so you can save yourself the embarrassment of faux pas in the git world.&lt;/p&gt;
&lt;p&gt;My goal is to give you an overview of Github flow, provide solutions for potential problems you may encounter, and help you feel more comfortable with version control.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rachell Calhoun</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/git-in-control-version-control-and-how-it-could-save-your-life.html</guid><category>git</category></item><item><title>Happy Asset Deployments With Webpack &amp; Django</title><link>https://pyvideo.org/djangocon-us-2016/happy-asset-deployments-with-webpack-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Happy Asset Deployments With Webpack &amp;amp; Django by Scott Burns&lt;/p&gt;
&lt;p&gt;Webpack&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What is it?&lt;/li&gt;
&lt;li&gt;What does it do?&lt;/li&gt;
&lt;li&gt;Source transformations&lt;/li&gt;
&lt;li&gt;Output&lt;/li&gt;
&lt;li&gt;Why Djangos collectstatic is not up to the job?&lt;/li&gt;
&lt;/ul&gt;
&lt;!--  --&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Must run after deployment&lt;/li&gt;
&lt;li&gt;Doesn't do all the things&lt;/li&gt;
&lt;li&gt;Slow&lt;/li&gt;
&lt;li&gt;Integration on both sides&lt;/li&gt;
&lt;/ul&gt;
&lt;!--  --&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Webpack bundle tracker to output build stats&lt;/li&gt;
&lt;li&gt;Django Webpack bundle loader to read those files&lt;/li&gt;
&lt;li&gt;How to render links in templates.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Burns</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/happy-asset-deployments-with-webpack-django.html</guid></item><item><title>Making a Splash with your Open Source Project</title><link>https://pyvideo.org/djangocon-us-2016/making-a-splash-with-your-open-source-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making a Splash with your Open Source Project by Russell Keith Magee&lt;/p&gt;
&lt;p&gt;So you've written a bunch of code, and you think others might find it useful. You open source it, and... profit, right? Well, no. PyPI is filled with thousands of projects that have been released with the best of intentions, but never really break into the mainstream. How do you escape this trap, and maximize the chance that your project will actually be used, grow and thrive?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Russell Keith-Magee</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/making-a-splash-with-your-open-source-project.html</guid></item><item><title>Making the Most Out of Code Reviews</title><link>https://pyvideo.org/djangocon-us-2016/making-the-most-out-of-code-reviews.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making the Most Out of Code Reviews by Mariatta Wijaya&lt;/p&gt;
&lt;p&gt;Code review is like a buzzword in the programming world. Developers often talk about how important it is. But what really happens during code review? What do you achieve out of it? How can we learn during code review? This talk will present ideas of what should be the goals of a code review, and how can developers learn during code review process.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mariatta Wijaya</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/making-the-most-out-of-code-reviews.html</guid></item><item><title>People are Coming to My Beginning Workshop, What Now?</title><link>https://pyvideo.org/djangocon-us-2016/people-are-coming-to-my-beginning-workshop-what-now.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;People are Coming to My Beginning Workshop, What Now?  by Nicholle James&lt;/p&gt;
&lt;p&gt;Volunteers often love running introductory programming workshops. This talk covers how to help attendees get the most out of your volunteer time. We’ll look at how to make a tutorial easier for attendees to follow and tips that help students stay relaxed and learn effectively. The talk incorporates what I learned as a student teacher and includes a new source of help in revising newcomer material.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicholle James</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/people-are-coming-to-my-beginning-workshop-what-now.html</guid></item><item><title>Spicing up Django: An Introduction to Mezzanine CMS</title><link>https://pyvideo.org/djangocon-us-2016/spicing-up-django-an-introduction-to-mezzanine-cms.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Spicing up Django: An Introduction to Mezzanine CMS by Ed Rivas&lt;/p&gt;
&lt;p&gt;Mezzanine CMS is a popular content-management solution for Django. With a rich set of built-in features and following Django’s batteries-included approach, it can supercharge your new or existing apps for content-oriented sites.&lt;/p&gt;
&lt;p&gt;In this talk we will explore the features that Mezzanine provides by default, and how they take care of many common content-management tasks (page creation and editing, maintaining a blog, WYSIWYG editors, SEO, and more).&lt;/p&gt;
&lt;p&gt;We will also take an existing Django app and convert it into a fully integrated Mezzanine application. You’ll be surprised at how much of the work has been done for you, and how your existing Django skills will let you hit the ground running when working with Mezzanine.&lt;/p&gt;
&lt;p&gt;Outline:&lt;/p&gt;
&lt;p&gt;Mezzanine tour
Basic integration of custom models
Advanced integration of custom models
Working with templates
Review
Questions (if time permits)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ed Rivas</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/spicing-up-django-an-introduction-to-mezzanine-cms.html</guid></item><item><title>The Full Stack of User Experience</title><link>https://pyvideo.org/djangocon-us-2016/the-full-stack-of-user-experience.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Full Stack of User Experience by Alicia C  Raciti&lt;/p&gt;
&lt;p&gt;User experience(UX) has come to the forefront of the design world over the last 5-10 years. As the internet and its content have evolved, we’re asking now more than ever about user goals when they visit the websites and software we create.&lt;/p&gt;
&lt;p&gt;UX terms like Information Architecture, Interaction Design, and Research are regularly thrown around, but what are they and how does it impact a site and product?&lt;/p&gt;
&lt;p&gt;This talk will define UX and it’s sub-disciplines to bring understanding to what UX is. Practical deliverables will be shared in an effort to give attendees something that they can begin to implement into their process.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alicia C  Raciti</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/the-full-stack-of-user-experience.html</guid></item><item><title>Beyond Po: How to Make Django Work...</title><link>https://pyvideo.org/djangocon-us-2016/beyond-po-how-to-make-django-work.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Beyond Po: How to Make Django Work For Right-To-Left Languages by Cho Garcia &amp;amp; Payam&lt;/p&gt;
&lt;p&gt;LANGUAGE DETECTION&lt;/p&gt;
&lt;p&gt;How to address URL based translation and Django language detection easily.&lt;/p&gt;
&lt;p&gt;RTL LANGUAGE DIRECTION&lt;/p&gt;
&lt;p&gt;Most of them are speaking in a language which is written right to left so it’s not enough to just translate your app to their language. You should change the style of your app to display them in a correct format. Some graphic elements should be flipped horizontally to make sense for them.&lt;/p&gt;
&lt;p&gt;CHARACTER ENCODING ISSUES&lt;/p&gt;
&lt;p&gt;When you are working with a language with completely different form of alphabet and characters there is a huge chance that you face an issue if you don’t abide some encoding standards.&lt;/p&gt;
&lt;p&gt;CALENDAR SYSTEM&lt;/p&gt;
&lt;p&gt;Some of those countries have their own calendar which is completely different from gregorian calendar which is used in most of west countries. There are some apps helping you to convert unix timestamp to those different calendar format in both backend and frontend side&lt;/p&gt;
&lt;p&gt;INTERFACE DESIGN AND PROPER FONTS&lt;/p&gt;
&lt;p&gt;As their language is RTL some graphic elements need to be mirrored. Although it is true for most of layout parts but there are still some sections that needs to keep their direction, like mathematical equations, multimedia players progress bar, … Using modern frontend tools like SASS mixin to automatically float elements depending on the language direction.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cho Garcia</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/beyond-po-how-to-make-django-work.html</guid></item><item><title>Building Dynamic Dashboards With Django and D3</title><link>https://pyvideo.org/djangocon-us-2016/building-dynamic-dashboards-with-django-and-d3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Building Dynamic Dashboards With Django and D3 by Clinton Dreisbach&lt;/p&gt;
&lt;p&gt;Django does a great job of building dynamic web applications, but it's not always clear how to use it for a single-page JavaScript-driven application like a data dashboard. We will walk through a dashboard built with Django for emergency services data and dig into the following questions.&lt;/p&gt;
&lt;p&gt;How do I serve data up to my dashboard? We'll show how the Django REST Framework can make this easy.
How do I allow deep linking to particular queries on my dashboard? We'll use django-url-filter to transform a URL hash into a database query.
How do I get statistical calculations like quartiles out of Django? We'll stretch the Django ORM to use PostgreSQL's powerful statistics functions.
How do I make all of this work with D3? We'll have a brief survey of how D3 works and see how to plug data from Django into it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Clinton Dreisbach</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/building-dynamic-dashboards-with-django-and-d3.html</guid></item><item><title>Design for Non-Designers</title><link>https://pyvideo.org/djangocon-us-2016/design-for-non-designers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Design for Non-Designers by Tracy Osborn&lt;/p&gt;
&lt;p&gt;Not everyone can hire a professional designer for their websites and web apps, but we all still want our interfaces to be easy to use and attractive. However, if you want to learn a bit of design, design books jump straight into concepts like &amp;quot;the golden ratio&amp;quot; and teach proper typographic terms which, to be frank, aren't needed if you're just looking to improve your website's look and feel.&lt;/p&gt;
&lt;p&gt;This talk will cover the top quick ways to improve your website, covering both user experience as well as visual design. Quick hits, easy to understand and utilize principles that anyone can use to improve their design skills. Perhaps you too can become the next designer+developer unicorn!&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Outline Intro (5%):&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Who am I?&lt;/li&gt;
&lt;li&gt;Why is good design important?&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Overview of design terms (only the basics) (20%):&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Definitions and overview of UI, UX, and visual design.&lt;/li&gt;
&lt;li&gt;Overview of conversion, goals, and click-through rates.&lt;/li&gt;
&lt;li&gt;What's most important when you're designing?&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Easy-to-understand design principles (40%):&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Clutter is our #1 enemy. How a grid, fonts, and color can affect how cluttered our design looks.&lt;/li&gt;
&lt;li&gt;Faces and photos, and other shortcuts we can use to make beautiful designs&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Step-by-step of walkthrough of creating a website design (20%):&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Collecting ideas.&lt;/li&gt;
&lt;li&gt;Sketching your ideas efficiently.&lt;/li&gt;
&lt;li&gt;Tools to mock up your ideas.&lt;/li&gt;
&lt;li&gt;Resources to help you build your idea.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;How improve your design eye and become a better designer (10%).&lt;/li&gt;
&lt;li&gt;Resources to learn more (5%).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Attendees should have the know-how to quickly improve the design of their websites immediately as well as knowledge of resources to improve their design eye.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tracy Osborn</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/design-for-non-designers.html</guid></item><item><title>Dispelling The 'Genius Programmer' Myth Through Code Review</title><link>https://pyvideo.org/djangocon-us-2016/dispelling-the-genius-programmer-myth-through-code-review.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Dispelling The 'Genius Programmer' Myth Through Code Review by Ashwini Oruganti&lt;/p&gt;
&lt;p&gt;Open source libraries have high quality standards. And understandably so, since the more important and widely used a project becomes, the more essential it is to maintain it. But this at times affects one of the fundamental advantages of open source software - contributions. Strict quality requirements and harsh code reviews make the process of contributing patches discouraging, disappointing, and even stressful.&lt;/p&gt;
&lt;p&gt;In this talk, I will discuss tools and processes used by major Python libraries to maintain a high level of code quality and a robust code review culture. I will work through a list of people's code review fears with personal anecdotes, and how to deal with them and be more receptive to critical feedback. Through real examples taken from popular open source Python libraries, I will try to show what makes a good code review, what makes a bad code review, and what minor changes can turn the latter into the former.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ashwini Oruganti</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/dispelling-the-genius-programmer-myth-through-code-review.html</guid></item><item><title>Django and PostgreSQL: An Even-Closer Union</title><link>https://pyvideo.org/djangocon-us-2016/django-and-postgresql-an-even-closer-union.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Django and PostgreSQL: An Even-Closer Union by Christophe Pettus&lt;/p&gt;
&lt;p&gt;Django 1.8 and 1.9 include many very cool PostgreSQL-related features. Let's show them off!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christophe Pettus</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/django-and-postgresql-an-even-closer-union.html</guid></item><item><title>Django and React: Perfect Together</title><link>https://pyvideo.org/djangocon-us-2016/django-and-react-perfect-together.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Django and React: Perfect Together by Jack McCloy&lt;/p&gt;
&lt;p&gt;React is a JavaScript library that makes it much easier to build dynamic single-page sites. I won't much dive into how React works, but the main advantage is that it allows you to build your view layer in a declarative way, and with reusable components.&lt;/p&gt;
&lt;p&gt;We'll start with an overview how React works, with an eye towards how it's different from interpretive libraries like jQuery. This overview will center around how state is managed in React vs. jQuery, which is the biggest hurdle for many developers when they're learning React. So if you haven't quite wrapped your head around the difference between &amp;quot;2-way data binding&amp;quot; and &amp;quot;1-way data binding&amp;quot;, or if you've heard someone talk about &amp;quot;data-down/actions-up&amp;quot;, &amp;quot;flux&amp;quot;, or &amp;quot;redux&amp;quot; and weren't quite sure what they were talking about, this will clear all that up.&lt;/p&gt;
&lt;p&gt;Then we'll take a look at how you can integrate React into a Django project. We'll talk about how you might want to structure things if you're starting with a brand new project, but we'll also talk about ways you can start to take advantage of React's strengths even in projects that are already mature.&lt;/p&gt;
&lt;p&gt;Finally, we'll talk about some of the challenging parts of working with React for the first time - how to handle front-end permissioning in React based on your back-end API, how to think about url routing when you literally have two routers, deployment, and the general confusion that goes along with using npm and webpack for the first time.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jack McCloy</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/django-and-react-perfect-together.html</guid></item><item><title>Rub-A-Dub Rubber Duck: Don't be Afraid to Debug!</title><link>https://pyvideo.org/djangocon-us-2016/djangocon-us-2016-rub-a-dub-rubber-duck-dont-be-afraid-to-debug-by-anna-ossowski.json.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Rub-A-Dub Rubber Duck: Don't be Afraid to Debug! by Anna Ossowski&lt;/p&gt;
&lt;p&gt;Everyone of us knows this scenario, it's part of the daily life of a programmer: You build something and it doesn’t work. You run into a bug, you find a problem, you break your code - and then you have to figure out how to fix it again. This can take 5 minutes, several hours, sometimes even several days. Sometimes you get really frustrated and are about to give up but when you finally find the solution it's the greatest feeling in the world. Do you want to learn how to proceed when your code doesn’t work? Do you want to learn how you can become a better problem solver? Do you want to learn how a rubber duck can help you? Then this talk is for you :) In this talk I will present strategies on how to proceed when you run into a bug or other coding problems. I will also talk about what you can do in order to prevent frustration and how you can learn to be more confident when encountering bugs. My goal is to show that bugs are nothing to be scared of, that you can fix (almost) everything and shouldn’t be afraid of breaking things, and that debugging can be easier than you think it might be if you approach it the right way. Breaking things is the first step to learning how to fix them! This talk is inspired by a blog post I wrote a while ago, which you can find here().&lt;/p&gt;
&lt;p&gt;Introduction - Who am I? What is this talk about? (2 minutes)
What is a bug?/What is debugging? (5 minutes)
Why breaking things is great - Don’t be afraid to break things (3 minutes)
Why a rubber duck? - Debugging strategies (10 minutes)&lt;/p&gt;
&lt;p&gt;Reading error messages the right way
How Google can help
Rubber ducks, hypothesis, testing different approaches/solutions
Reproducing bugs
Breaking your code down into smaller pieces
Drawing diagrams of code/writing pseudocode
Reading documentation
Debugging tools like the django-debug toolbar
What to do when frustration kicks in (3 minutes)&lt;/p&gt;
&lt;p&gt;Where/how to get help (2 minutes)
Q&amp;amp;A (5 minutes)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anna Ossowski</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/djangocon-us-2016-rub-a-dub-rubber-duck-dont-be-afraid-to-debug-by-anna-ossowski.json.html</guid></item><item><title>Entomology 101: Effective Bug Hunting</title><link>https://pyvideo.org/djangocon-us-2016/entomology-101-effective-bug-hunting.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Entomology 101: Effective Bug Hunting by Frank Wiles&lt;/p&gt;
&lt;p&gt;From Frank's his early childhood of having a simple ant farm, up to and including his long experience in the deepest, most pristine, and undisturbed wilds of the Internet, his experience has honed his abilities to find and identify bugs. Learn some of the best tools of the trade that will help in your daily hunts.&lt;/p&gt;
&lt;p&gt;Bug hunting tech you will learn about:&lt;/p&gt;
&lt;p&gt;django-debug-toolbar
pdb/ipdb
using iPython embed
effectively using Python logging so you don't need to use the last quite so often
Bug hunting is all about visibility. You may have the best net ever invented, but you can't catch a bug you can't see. Sure, you can spend all day turning over rocks and hope for the best or you can gear up with the tried and true night vision goggles all the pros use.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Frank Wiles</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/entomology-101-effective-bug-hunting.html</guid></item><item><title>Frog and Toad Learn About Django Security</title><link>https://pyvideo.org/djangocon-us-2016/frog-and-toad-learn-about-django-security.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Frog and Toad Learn About Django Security by Philip James&lt;/p&gt;
&lt;p&gt;Django Security Talk Notes&lt;/p&gt;
&lt;p&gt;Introduction
Philip James, how long I’ve worked with Python and Django, background at EB
Introduction to the story, and the characters
Safe-ish: Talk about Django’s Security Model and how it tries to provide sane defaults for developers
Run-through of the parts of the django security model&lt;/p&gt;
&lt;p&gt;XSS (brief definition)&lt;/p&gt;
&lt;p&gt;Django escapes characters by default&lt;/p&gt;
&lt;p&gt;How?&lt;/p&gt;
&lt;p&gt;How do you turn it off? Mark Safe, | n, safe&lt;/p&gt;
&lt;p&gt;CSRF (brief definition)&lt;/p&gt;
&lt;p&gt;Django has middleware that checks POST requests for a token&lt;/p&gt;
&lt;p&gt;How?&lt;/p&gt;
&lt;p&gt;Token is stored in cookie, also&lt;/p&gt;
&lt;p&gt;Could be better? Make cookie httponly&lt;/p&gt;
&lt;p&gt;Side-effect: harder to JS. Also, only an issue if you’re already owned, so maybe not an issue?&lt;/p&gt;
&lt;p&gt;How to get around it? csrf_exempt&lt;/p&gt;
&lt;p&gt;SQLi (brief definition)&lt;/p&gt;
&lt;p&gt;Django’s ORM makes clean sql, (even when given bad data?)&lt;/p&gt;
&lt;p&gt;How?&lt;/p&gt;
&lt;p&gt;How to get around it: extra()/RawSQL()&lt;/p&gt;
&lt;p&gt;Clickjacking protection (brief definition)&lt;/p&gt;
&lt;p&gt;Django has middleware that sets headers browsers are supposed to respect&lt;/p&gt;
&lt;p&gt;Which browsers? &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.8/ref/clickjacking/#limitations"&gt;https://docs.djangoproject.com/en/1.8/ref/clickjacking/#limitations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;How to get around it: xframe_options_exempt, xframe_options_deny, xframe_options_sameorigin&lt;/p&gt;
&lt;p&gt;HTTPS&lt;/p&gt;
&lt;p&gt;This one is less &amp;quot;out of the box&amp;quot; than the others, so won’t be talked about here.
Host Header Validation (brief definition)&lt;/p&gt;
&lt;p&gt;Django verifies against allowed hosts in settings&lt;/p&gt;
&lt;p&gt;How? get_host()&lt;/p&gt;
&lt;p&gt;Session security&lt;/p&gt;
&lt;p&gt;What are django sessions?&lt;/p&gt;
&lt;p&gt;Cookie-based by design&lt;/p&gt;
&lt;p&gt;How can we make this better?&lt;/p&gt;
&lt;p&gt;Overall: Vigilance. Be aware of uses of this within your product&lt;/p&gt;
&lt;p&gt;XSS, CSRF, SQLi, Clickjacking: Have them all enabled, write rules to check for &amp;quot;escape-hatch&amp;quot; functions&lt;/p&gt;
&lt;p&gt;HTTPS:&lt;/p&gt;
&lt;p&gt;Use it!&lt;/p&gt;
&lt;p&gt;Set the correct settings&lt;/p&gt;
&lt;p&gt;SECURE_SSL_REDIRECT: How does it work?&lt;/p&gt;
&lt;p&gt;Other things&lt;/p&gt;
&lt;p&gt;django-secure&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.ponycheckup.com/"&gt;https://www.ponycheckup.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nerd.kelseyinnis.com/blog/2015/09/08/making-django-really-really-ridiculously-secure/"&gt;http://nerd.kelseyinnis.com/blog/2015/09/08/making-django-really-really-ridiculously-secure/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philip James</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/frog-and-toad-learn-about-django-security.html</guid></item><item><title>It is Darkest Before Dawn...</title><link>https://pyvideo.org/djangocon-us-2016/it-is-darkest-before-dawn.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - It is Darkest Before Dawn: Alcoholism and Addiction in Tech (CW) (TW) by Timothy Allen&lt;/p&gt;
&lt;p&gt;Technology professionals have been in high demand for several decades, and this demand for talent has caused a culture to emerge that often turns a blind eye to those who may be struggling with alcoholism and addiction. We have to come together to avoid this &amp;quot;petri dish&amp;quot; continuing to exist, by watching out for ourselves, and one another. The CDC estimates that ten percent of Americans suffer from the disease of addiction, and only nine percent of addicts ever receive treatment. This &amp;quot;petri dish&amp;quot; of technology culture makes it even harder for those of us with careers in the field.&lt;/p&gt;
&lt;p&gt;Recovery can be a wonderful journey for those of us who suffer from the disease, and I hope by sharing some of my journey, people will take a step back and consider what we can do to improve the culture for everyone.&lt;/p&gt;
&lt;p&gt;Content warnings: this will be frank discussion that may involve colorful language, and topics including drug and alcohol abuse, death from addiction and sexual abuse.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Timothy Allen</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/it-is-darkest-before-dawn.html</guid></item><item><title>Keynote</title><link>https://pyvideo.org/djangocon-us-2016/keynote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Keynote by Janice Levenhagen&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Janice Levenhagen</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/keynote.html</guid></item><item><title>Keynote: Lucky</title><link>https://pyvideo.org/djangocon-us-2016/keynote-lucky.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Keynote: Lucky by Saron Yitbarek&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Saron Yitbarek</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/keynote-lucky.html</guid></item><item><title>Pushing The Pony's Boundaries - Django Admin Customization</title><link>https://pyvideo.org/djangocon-us-2016/pushing-the-ponys-boundaries-django-admin-customization.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Pushing The Pony's Boundaries - Django Admin Customization by Ola Sitarska&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Short introduction&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Run through available extension libraries and what’s possible in them:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Django Suit&lt;/li&gt;
&lt;li&gt;Grappeli&lt;/li&gt;
&lt;li&gt;Django Admin Tools&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Quick run through available Django Admin options.&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;list_display, list_filter, list_editable, search_fields, ordering, sortable&lt;/li&gt;
&lt;li&gt;readonly_fields&lt;/li&gt;
&lt;li&gt;raw_id_fields&lt;/li&gt;
&lt;li&gt;fieldsets&lt;/li&gt;
&lt;li&gt;actions&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Customizing Django Admin on your own. Let’s create a super custom Django Admin together! The case study of DjangoGirls.org website, that supports a management system for various users who should be able to only manage pages they’re assigned to.&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Limiting objects to users&lt;/li&gt;
&lt;li&gt;Displaying computed fields in list page&lt;/li&gt;
&lt;li&gt;Limiting add/edit forms for different types of users&lt;/li&gt;
&lt;li&gt;Automatically saving information per user&lt;/li&gt;
&lt;li&gt;Custom actions&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Summary&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Instructions where to look for more information&lt;/li&gt;
&lt;li&gt;Improve Admin (code.djangoproject.com, open source wohoo!)&lt;/li&gt;
&lt;li&gt;Mention about Django Admin 2&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ola Sitarska</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/pushing-the-ponys-boundaries-django-admin-customization.html</guid></item><item><title>Readability Counts</title><link>https://pyvideo.org/djangocon-us-2016/readability-counts.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Readability Counts by Trey Hunner&lt;/p&gt;
&lt;p&gt;Most code is read many more times than it is written. Constructing readable code is important, but that doesn't mean it's easy.&lt;/p&gt;
&lt;p&gt;If you've ever found unreadable PEP8-compliant code and wondered how to fix it, this talk is for you.&lt;/p&gt;
&lt;p&gt;Long-lived code must be maintainable and readability is a prerequisite of maintainability. It's easier to identify unreadable code than it is to create readable code.&lt;/p&gt;
&lt;p&gt;Let's talk about how to shape tricky code into something more readable and more maintainable.&lt;/p&gt;
&lt;p&gt;During this talk we'll discuss:&lt;/p&gt;
&lt;p&gt;whitespace
self-documenting code
modularity
expectation management
We'll conclude this talk with a checklist of questions you can use to make your own code more readable.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trey Hunner</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/readability-counts.html</guid></item><item><title>Solving Problems With Django Forms</title><link>https://pyvideo.org/djangocon-us-2016/solving-problems-with-django-forms.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Solving Problems With Django Forms by Kirt Gittens&lt;/p&gt;
&lt;p&gt;We'll look at a few core problems that we were able to solve with Django forms.&lt;/p&gt;
&lt;p&gt;Dynamic Field Creation: What if you don't know what fields should be present on a Django form until runtime?. Solutions:&lt;/p&gt;
&lt;p&gt;Viewing a form's fields as a data structure (convert a field definition to a dictionary) Manipulate self.fields on a form to dynamically add / remove forms from a field.&lt;/p&gt;
&lt;p&gt;Pitfalls:&lt;/p&gt;
&lt;p&gt;A fields validated attributes can't be manipulated dynamically because of Validators within the forms API. Dynamic form layouts become difficult to manage, crispyforms does not scale as a solution!&lt;/p&gt;
&lt;p&gt;Validate a form via an API: How can external validations behave the same as internal errors? Solutions:&lt;/p&gt;
&lt;p&gt;form.clean() can be used for form wide errors, and form.add_error can be used to integrate those external validation errors into your existing form so that calls like is_valid() still work as expected with your external validations.&lt;/p&gt;
&lt;p&gt;Adding fields at runtime: How can the user add fields to a form after it has been rendered?&lt;/p&gt;
&lt;p&gt;Solutions:&lt;/p&gt;
&lt;p&gt;Javascript can be used for the UI, and if the fields are properly named, the same validations will work as long as the fields are part of the form.&lt;/p&gt;
&lt;p&gt;Pitfalls: Creating a solution that creates a dynamic field that is validated, but doesn't render can cause issues with your layout solution (crispyforms fails again here)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kirt Gittens</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/solving-problems-with-django-forms.html</guid></item><item><title>WebSockets: Intro to Messaging</title><link>https://pyvideo.org/djangocon-us-2016/websockets-intro-to-messaging.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - WebSockets: Intro to Messaging by Josue Balandrano Coronel&lt;/p&gt;
&lt;p&gt;Today’s web applications demand information to be delivered immediately after it is available. This is a huge step from where everything started, simple HTTP blocking requests. In order to solve this Server Side Events (SSE) and Websockets (WS) were created. SSE works from the server to the client only and it uses the HTTP protocol. WS is bidirectional and implements a layer on top of HTTP. WS started to get more momentum and now most of modern web browsers support it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josue Balandrano Coronel</dc:creator><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-10:djangocon-us-2016/websockets-intro-to-messaging.html</guid></item><item><title>The City as Cyborg: A History of Civic Technology</title><link>https://pyvideo.org/djangocon-us-2016/the-city-as-cyborg-a-history-of-civic-technology.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The City as Cyborg: A History of Civic Technology in The First Quarter of The 21st Century by Mjumbe Poe&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mjumbe Poe</dc:creator><pubDate>Wed, 20 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-20:djangocon-us-2016/the-city-as-cyborg-a-history-of-civic-technology.html</guid></item><item><title>This Old Pony: Working With Legacy Django Apps</title><link>https://pyvideo.org/djangocon-us-2016/this-old-pony-working-with-legacy-django-apps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Legacy software is software that already exists. It may be a project you've inherited after joining a team, a new client's application, or something you wrote last year, or last month. Most software developers seem to prefer &amp;quot;greenfield&amp;quot; development, where you get to start from a clean slate. The reality is that there's a lot of &amp;quot;brownfield&amp;quot; development out there, that it rarely makes sense to throw away working software, and we can control the experience quite a bit to make our lives, and the software, better. If you haven't worked with legacy software chances are pretty good you will.&lt;/p&gt;
&lt;p&gt;We'll first walk through what &amp;quot;legacy&amp;quot; means, and what this looks like specifically for Django developers and Django projects. We'll also cover some of the scenarios in which you may find yourself working with legacy codebases. This includes the types of issues you'll be presented with, both generally and specific to Django.&lt;/p&gt;
&lt;p&gt;What do we mean by legacy code?
What does a legacy Django project look like?
What kinds of issues will you need to deal with?
How to approach the codebase
Tools for working with your new legacy codebase
Introducing or fixing tests
Common issues to look for and how to solve them
Legacy deployment processes and other scary nightmares
More features! Balancing business needs and &amp;quot;perfect&amp;quot; code
Deciding when to upgrade Django and other dependency versions, and how to do this&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Lopatin</dc:creator><pubDate>Wed, 20 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-20:djangocon-us-2016/this-old-pony-working-with-legacy-django-apps.html</guid></item><item><title>Day 2 Lightning Talks by Many People</title><link>https://pyvideo.org/djangocon-us-2016/day-2-lightning-talks-by-many-people.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Day 2 Lightning Talks by Many People&lt;/p&gt;
&lt;p&gt;00:14 - Lucie Daeye
05:22 - Rostyslav Bryzgunov
08:09 - Tobias McNulty
13:10 - Kenneth Love
17:58 - Joseph Bane
21:35 - Ola Sitarska
26:13 - Rachell Calhoun
30:36 - Joe Cronyn&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lucie Daeye</dc:creator><pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-19:djangocon-us-2016/day-2-lightning-talks-by-many-people.html</guid></item><item><title>Django Supporting Virtual Reality Game Development by Rudy Mutter</title><link>https://pyvideo.org/djangocon-us-2016/django-supporting-virtual-reality-game-development-by-rudy-mutter.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django Supporting Virtual Reality Game Development by Rudy Mutter&lt;/p&gt;
&lt;p&gt;Virtual reality in 2016 is moving closer to mainstream, especially with game development due to releases from multiple companies (Oculus Rift, Playstation VR, and HTC Vive). We decided to build an entertaining, accessible virtual reality game via Google Cardboard for iOS and Android based on a classic childhood game to find hidden objects in elaborate scenes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rudy Mutter</dc:creator><pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-19:djangocon-us-2016/django-supporting-virtual-reality-game-development-by-rudy-mutter.html</guid></item><item><title>High-Availability Django</title><link>https://pyvideo.org/djangocon-us-2016/high-availability-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One year ago we completed a years-long project of migrating theatlantic.com from a sprawling PHP codebase to a Python application built on Django. Our first attempt at a load-balanced Python stack had serious flaws, as we quickly learned. Since then we have completely remade our stack from the bottom up; we have built tools that improve our ability to monitor for performance and service degradation; and we have developed a deployment process that incorporates automated testing and that allows us to push out updates without incurring any downtime. I will discuss the mistakes we made, the steps we took to identify performance problems and server resource issues, what our current stack looks like, and how we achieved the holy grail of zero-downtime deploys.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Frankie Dintino</dc:creator><pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-19:djangocon-us-2016/high-availability-django.html</guid></item><item><title>How we used NLP and Django to build a movie suggestion website &amp; Twitterbot</title><link>https://pyvideo.org/djangocon-us-2016/how-we-used-nlp-and-django-to-build-a-movie-suggestion-website-twitterbot.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Cleveland International Film Festival (CIFF) is a two-week long event featuring hundreds of foreign, independent, and new films making their debut on the silver screen. For anyone less than a film buff, choosing a movie to watch at the film fest is a hard choice: there are no reviews, no IMDb info, and no Netflix/Hulu suggestions. Yes, it’s truly byzantine in that one must actually read all the movie descriptions to decide which one to watch.&lt;/p&gt;
&lt;p&gt;With a handful of Python libraries, and 2 days, we developers at CodeRed built a movie recommendation engine for the CIFF. This talk outlines each step we took to build the recommendation engine, website, and twitterbot all centered around a Django project. Overall, this talk offers a complete look at the various parts and pieces that go into building a feature-full Django site, as well as exposure to doing entry-level Artificial Intelligence in Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vince Salvino</dc:creator><pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-19:djangocon-us-2016/how-we-used-nlp-and-django-to-build-a-movie-suggestion-website-twitterbot.html</guid></item><item><title>I Didn't Know Querysets Could do That</title><link>https://pyvideo.org/djangocon-us-2016/i-didnt-know-querysets-could-do-that.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;QuerySets and object Managers are a core part of Django, and can be extremely powerful. But I didn't always know about some of their more advanced capabilities.&lt;/p&gt;
&lt;p&gt;BASIC METHODS&lt;/p&gt;
&lt;p&gt;You have likely used filter(), exclude(), and order_by(). You've even probably used an aggregation method like Sum() or Count(). Less common, however, are query(), only()/defer(), and select_related().&lt;/p&gt;
&lt;p&gt;F EXPRESSIONS / Q OBJECTS&lt;/p&gt;
&lt;p&gt;For some more complex queries, those basic functions and filters won't cut it. How do you construct a query that needs to check for field A or field B? What do you do if you need to multiply two fields together and then sum them? Look no further than F() and Q().&lt;/p&gt;
&lt;p&gt;RAW SQL / THE EXTRA() METHOD&lt;/p&gt;
&lt;p&gt;As a last resort, it's entirely possible to use raw SQL queries to get the database results that you need. The sky's the limit, but there are definitely downsides to this approach; pitfalls include SQL injections and database backend portability issues.&lt;/p&gt;
&lt;p&gt;MANAGERS&lt;/p&gt;
&lt;p&gt;A talk on QuerySets would be incomplete without mentioning Managers, and how to leverage Manager customization to make your life easier. Writing methods on existing Managers, and creating custom ones can go a long way towards being DRY and reducing the potential for errors.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Charlie Guo</dc:creator><pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-19:djangocon-us-2016/i-didnt-know-querysets-could-do-that.html</guid></item><item><title>Mighty Model Managers</title><link>https://pyvideo.org/djangocon-us-2016/mighty-model-managers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Model Managers are an amazing part of the Django Framework. When put to use, they can bring enhanced readability, encapsulation of logic, increased security, and performance. But they're often overlooked - even by those with years of experience. Let's fix that. We'll go through examples that demonstrate how easy Model Managers are to integrate into a project and why they're so important.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shawn Inman</dc:creator><pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-19:djangocon-us-2016/mighty-model-managers.html</guid></item><item><title>The Fraud Police are Coming</title><link>https://pyvideo.org/djangocon-us-2016/the-fraud-police-are-coming.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is imposter syndrome?&lt;/p&gt;
&lt;p&gt;It's a failure to internalize your accomplishments. It's the nagging feeling you don't know enough, haven't done enough, don't have enough experience to do your job, land a new account, publish a new paper. It's feeling like a fraud and that you're about to be found out. The term was coined in a study by Pauline Rose Clance &amp;amp; Suzanne Imes in 1978 having to do with the habits and behaviors of high-achieving women, but it's recently become a hot topic in tech and career conversations - with good reason.&lt;/p&gt;
&lt;p&gt;Who does it affect?&lt;/p&gt;
&lt;p&gt;Originally a phenomenon studied among women in academic fields, studies (and anecdotal evidence) have shown it affects just about everyone. Sheryl Sandberg, Meryl Streep, and Maya Angelou have all commented about their own experiences with imposter syndrome. After we've asked, so have most of our friends and colleagues. We combine research with personal experience to provide the Big Six signs you might have imposter syndrome, so you can recognize the symptoms in yourself.&lt;/p&gt;
&lt;p&gt;How is it affecting me?&lt;/p&gt;
&lt;p&gt;Imposter syndrome can make us feel like we need to be super-people, adding and adding to our goals each day, with no end in sight. It means we might be less likely to raise our hands for new projects because we don't think we know enough. It might keep us from speaking up in meetings, seeking promotions, or talking at conferences. It can bring feelings of self-doubt, anxiety, fear, alienation, isolation, shame or despair. It can be paralyzing to a person's career.&lt;/p&gt;
&lt;p&gt;Does it get better?&lt;/p&gt;
&lt;p&gt;Thanks to the Dunning-Kruger effect, the more you learn, the more you realize how much you don't know. When combined with the imposter syndrome associated with increasing achievements over time, it usually gets worse.&lt;/p&gt;
&lt;p&gt;But...there's good news.&lt;/p&gt;
&lt;p&gt;Through identifying specific components of imposter syndrome, you can sort out what's a real area for improvement and what's mostly anxiety. Dealing with imposter syndrome is often part of the price of doing new, exciting things. We can help you figure out to cope. This talk will also help you recognize imposter syndrome in friends, colleagues, and employees, and we'll help you think about how to best support them. (Hint: responding with compliments does more harm than good.) By the end of our talk, you'll to learn how you can leverage the feelings of imposter syndrome to become a better leader, colleague and human.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amanda Clark</dc:creator><pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-19:djangocon-us-2016/the-fraud-police-are-coming.html</guid></item><item><title>The Impact of Women Learning to Code in Developing Countries</title><link>https://pyvideo.org/djangocon-us-2016/the-impact-of-women-learning-to-code-in-developing-countries.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In a continent where more than 75% of the world’s poorest countries are located all with common problems of Economic hardship, electricity issues, lack of water e.t.c and there is a global need to change the narrative not just as individual countries but as a continent. Our leaders try as it may have failed us, nothing seems to be working. The next point of action is to use Technology in whatever form to change our narrative, change our story and enhance our lives.&lt;/p&gt;
&lt;p&gt;What better way to go than to go the open source route. Already many initiatives have sprung up recently with PyCon Namibia and DjangoGirls spreading through different African countries. In this talk we highlight how Python education has gradually changed the lives of many women and hope to make suggestions on how such initiatives hope to bridge the technology gender gap in Africa and ultimately how it is being used to change our narrative.&lt;/p&gt;
&lt;p&gt;Anywhere in the world, achieving development means going through serious technological changes and innovation. That implies having qualified people to drive those changes. These qualified people exists in most of the developing countries but it’s not enough. It is indeed a sheer case of demand outweighing supply. It is no secret that in Africa there are so many untapped resources with a whooping 60% of the entire population between the ages of 15-25. At this point there is so much potential laying fallow.&lt;/p&gt;
&lt;p&gt;Globally there is a talent gap in technology with not enough people with the right skill set to fill in the role with Africa with no exemption. Furthermore, by looking closely, it’s easily noticeable that the majority of technological workforce is the men. There is therefore a considerable opportunity: WOMEN. Unfortunately, because of different reasons especially in Africa where women rights are not given due consideration, and due to unfair treatments, very few women are involved in technology. By consciously making extra efforts to enlighten and bring in more women, we can nearly double the amount of qualified people in technology, create more innovations and progress. This is in fact a no brainer solution&lt;/p&gt;
&lt;p&gt;In this talk we would talk about how workshops like Django Girls are helping increase the number of skilled people in technology and also stress the need for to create a lot more similar events and make them more “3rd world friendly” by tackling challenges such as lack of electricity, internet, proper equipment etc. In this talk we would curate information from all DjangoGirls organizers in different African countries to highlight the general challenges faced in organizing python workshops and events in various countries in Africa and also profer solutions and suggestions in tackling these issues To conclude we leave with this quote from Karen Spärck Jones, Professor of Computers and Information at Cambridge Computer Laboratory &amp;quot;I think it's very important to get more women into computing. My slogan is: Computing is too important to be left to men.&amp;quot;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aisha Bello</dc:creator><pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-19:djangocon-us-2016/the-impact-of-women-learning-to-code-in-developing-countries.html</guid></item><item><title>Things Your Mother Didn't Teach You About Sharing Your Toys</title><link>https://pyvideo.org/djangocon-us-2016/things-your-mother-didnt-teach-you-about-sharing-your-toys.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, Russell Keith-Magee will bring the experience born of 25+ years as a software developer, 10 years as a Django core developer, 5 years as DSF President, and 5 years as a business owner to expose you to some topics that every software developer should know, but often aren't covered as part of formal training. This includes legal topics such as copyrights, licensing, and trademarks, the role played by codes of conduct, and some of the non-code skills that are important for successful projects, and essential for successful entrepreneurship.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Russell Keith-Magee</dc:creator><pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-19:djangocon-us-2016/things-your-mother-didnt-teach-you-about-sharing-your-toys.html</guid></item><item><title>An Intro to Web Accessibility in Django by Annalee Flower Horne</title><link>https://pyvideo.org/djangocon-us-2016/an-intro-to-web-accessibility-in-django-by-annalee-flower-horne.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An Intro to Web Accessibility in Django by Annalee Flower Horne&lt;/p&gt;
&lt;p&gt;Like most developers, I've always known that building accessible web apps is the right thing to do, but I wasn't sure how to do it. I tried my best to add image descriptions and audio transcripts and figured that was good enough. Then I started work on a Django 1.8 project for an agency that has a low-vision website administrator. When we sat her down in front of the app's admin interface for the first time, she had a lot of trouble using it. The contrast was way too low, and control features like sort by column weren't properly labeled. After watching her navigate the admin interface and learning more about how disabled users navigate the web, I customized our app's admin interface to improve accessibility. I've since gotten training in web accessibility, and want to share some of what I've learned so we can all build more accessible apps.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Annalee Flower Horne</dc:creator><pubDate>Mon, 18 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-18:djangocon-us-2016/an-intro-to-web-accessibility-in-django-by-annalee-flower-horne.html</guid></item><item><title>Day 1 Lightning Talks by Many People</title><link>https://pyvideo.org/djangocon-us-2016/day-1-lightning-talks-by-many-people.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks by Many People&lt;/p&gt;
&lt;p&gt;00:04 - Adrienne Lowe&lt;/p&gt;
&lt;p&gt;06:33 - Russell Keith-Magee&lt;/p&gt;
&lt;p&gt;09:42 - Tom Christie&lt;/p&gt;
&lt;p&gt;15:14 - Trey Hunner&lt;/p&gt;
&lt;p&gt;18:39 - Paul Logston&lt;/p&gt;
&lt;p&gt;20:28 - Timothy Allen&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrienne Lowe</dc:creator><pubDate>Mon, 18 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-18:djangocon-us-2016/day-1-lightning-talks-by-many-people.html</guid></item><item><title>Sign Me Up - Choosing &amp; Using a Registration Package for Your Django Project</title><link>https://pyvideo.org/djangocon-us-2016/sign-me-up-choosing-using-a-registration-package-for-your-django-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Registration steps to use a web app, as well as login and password reset functionality is a common requirement, but where do you begin implementing this in Django? Walking through an actual case study with code examples, novice programmers will learn some tips and tricks for finding and implementing the right framework.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eleanor Stribling</dc:creator><pubDate>Mon, 18 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-18:djangocon-us-2016/sign-me-up-choosing-using-a-registration-package-for-your-django-project.html</guid></item><item><title>Under the Hood of Modern CSS Frameworks</title><link>https://pyvideo.org/djangocon-us-2016/under-the-hood-of-modern-css-frameworks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Together we’ll look at the code behind Bootstrap, Foundation, Semantic UI, and other CSS frameworks. We’ll identify common patterns and architectural decisions that make these systems so easy to use. Some of the things we’ll discover:&lt;/p&gt;
&lt;p&gt;What it takes to set up a good type system.
How style and structure are separated to make theming easier.
Best practices for stubbing out grid systems.
How configuration works.
How to make everything feel cohesive.
What it takes to test a framework so you can potentially test your own.
So much more!
If you’re looking to improve your skills with one of these frameworks or potentially roll your own mini-Bootstrap, this talk is for you.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Trythall</dc:creator><pubDate>Mon, 18 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-18:djangocon-us-2016/under-the-hood-of-modern-css-frameworks.html</guid></item></channel></rss>