<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Cory Zue</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 22 Oct 2021 00:00:00 +0000</lastBuildDate><item><title>Modern JavaScript for Django Developers</title><link>https://pyvideo.org/djangocon-europe-2021/modern-javascript-for-django-developers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk will include four high level parts.&lt;/p&gt;
&lt;p&gt;Part 1 is a discussion of common Django / JavaScript architectures. These include:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The most common &amp;quot;ad-hoc&amp;quot; approach, where JS just gets incrementally added to templates until you find yourself in a mess&lt;/li&gt;
&lt;li&gt;The &amp;quot;completely decoupled&amp;quot; JS front-end and Django-API back end, which is popular, but complex and unfamiliar to pure Django developers.&lt;/li&gt;
&lt;li&gt;A &amp;quot;hybrid architecture&amp;quot;, that combines modern JS with familiarity of working in Django.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Part 2 will focus on the fundamentals of JS tooling - a prerequisite to working with modern JavaScript. I'll start with explaining why it's so frustrating and confusing trying to add React to a Django project. Then introduce  the concept of a JavaScript toolchain. Why you need them and what they do. And finally do a quick overview of the most common JS toolchain: NPM, Webpack, and Babel, including what each does and the analogies in the Python world.&lt;/p&gt;
&lt;p&gt;Part 3 brings it together with a Django example, deep diving into how you can add a JS toolchain to a DJango project and introduce a React application into a Django application without all the complexity of managing separate standalone front end.&lt;/p&gt;
&lt;p&gt;Part 4 will briefly touch on some benefits of Modern JS, including using modern frameworks, dependency management, new features, extensions, ES6, React and JSX, Vue etc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Zue</dc:creator><pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-06-03:/djangocon-europe-2021/modern-javascript-for-django-developers.html</guid><category>DjangoCon Europe 2021</category><category>Django</category><category>DjangoConEU</category><category>djangoconeu2021</category></item><item><title>Modern JavaScript for Django Developers</title><link>https://pyvideo.org/djangocon-us-2021/modern-javascript-for-django-developers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Is the front end of your Django project a disorganized mess? Have you ever tried to add React to a Django project and gotten discouraged because it was too complicated? Or have you worked in a project with completely separate front and back ends and wondered why you couldn't use just Django templates and forms for simple things and had to build an API for every little thing?&lt;/p&gt;
&lt;p&gt;If so, this talk is for you.&lt;/p&gt;
&lt;p&gt;First I cover common Django / JavaScript architectures and their tradeoffs. Including:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The most common &amp;quot;ad-hoc&amp;quot; approach, where JS just gets incrementally added to templates until you find yourself in a mess.&lt;/li&gt;
&lt;li&gt;The completely decoupled JS front-end and Django-API back end, which is popular, but complex and unfamiliar to Django developers.&lt;/li&gt;
&lt;li&gt;A &amp;quot;hybrid architecture&amp;quot;, that combines modern JS with familiarity of working in Django.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The rest of the talk deep dives into building out a hybrid app with Django.&lt;/p&gt;
&lt;p&gt;This process starts with the fundamentals of JS tooling, a prerequisite to working with modern JavaScript. I'll cover why it's so frustrating and confusing trying to add React to a Django project, then introduce the concept of a JavaScript toolchain, why you need them and what they do, and finally do a quick overview of the most common JS toolchain: NPM, Webpack, and Babel.&lt;/p&gt;
&lt;p&gt;Finally, we'll bring it back to Django, showing how you can add a JS toolchain to a Django project and use a React application inside Django without all the complexity of managing a separate standalone front end. I'll also cover some of the common patterns that are used to interact with data, and the benefits and tradeoffs of the hybrid architecture over other models.&lt;/p&gt;
&lt;p&gt;Along the way, I'll also touch on some of the benefits of using modern JavaScript - and hopefully convince you that it's worth it!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Zue</dc:creator><pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-10-22:/djangocon-us-2021/modern-javascript-for-django-developers.html</guid><category>DjangoCon US 2021</category></item><item><title>Growing Pains: Scaling a Django Project and Team</title><link>https://pyvideo.org/pycon-za-2017/growing-pains-scaling-a-django-project-and-team.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I’ll describe the evolution of a Django project as it
goes from something small and simple to a full-blown multi-server,
multi-datacenter behemoth. The talk will use examples from real-world
applications I’ve either built or contributed do, and draw heavily
from my experience leading the development of &lt;a class="reference external" href="https://www.commcarehq.org/"&gt;CommCare HQ&lt;/a&gt; (an 8-year old, ~500,000 LoC
codebase currently developed and maintained by about 20 people).&lt;/p&gt;
&lt;p&gt;The goal of the talk is to try and demonstrate how and why complexity
and process seeps into projects over time and is in fact necessary as a
project’s lifecycle matures. I'll base the talk around a series of
examples that highlight a problem and then discuss how the introduction
of a new subsystem, architecture, or process helps to address that
problem. These problems / solutions will be a mix of the technical (e.g.
&amp;quot;the site is slow&amp;quot;) and human (e.g. &amp;quot;we can't ship features quickly
anymore&amp;quot;).&lt;/p&gt;
&lt;p&gt;Anyone who is part of a growing project or team should hopefully learn
something or get some ideas for what might be in store for your future!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Zue</dc:creator><pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-06:/pycon-za-2017/growing-pains-scaling-a-django-project-and-team.html</guid><category>PyCon ZA 2017</category></item></channel></rss>