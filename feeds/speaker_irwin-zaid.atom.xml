<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_irwin-zaid.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-05-09T00:00:00+00:00</updated><entry><title>DyND: Enabling complex analytics across the language barrier</title><link href="https://pyvideo.org/pydata-london-2016/irwin-zaid-dynd-enabling-complex-analytics-across-the-language-barrier.html" rel="alternate"></link><published>2016-05-09T00:00:00+00:00</published><updated>2016-05-09T00:00:00+00:00</updated><author><name>Irwin Zaid</name></author><id>tag:pyvideo.org,2016-05-09:pydata-london-2016/irwin-zaid-dynd-enabling-complex-analytics-across-the-language-barrier.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData London 2016&lt;/p&gt;
&lt;p&gt;DyND is a C++ library for dynamic, multidimensional arrays. Inspired by NumPy, it aims to be a cross-language platform for data analysis, by bringing the popularity and flexibility of the Python data science stack to other languages, such as C++, R, and Javascript.&lt;/p&gt;
&lt;p&gt;DyND is a dynamic array library for structured and semi-structured data, written with C++ as a first-class target and extended to Python with a lightweight binding. It aims to be a cross-language platform for data analysis, by bringing the popularity and flexibility of the Python data science stack to other languages, such as C++, R, and Javascript. It is inspired by NumPy, the Python array programming library at the core of the scientific Python stack, but tries to address a number of obstacles encountered by some of NumPyâ€™s users. Examples of these are support for variable-sized strings, missing values, ragged array dimensions, and versatile tools for creating functions that apply generic patterns across arrays.&lt;/p&gt;
&lt;p&gt;This talk will introduce the DyND library, motivating it with simple datasets that are hard to process with existing tools. We'll discuss its architecture, features, and a roadmap for the future.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://datashape.pydata.org/"&gt;http://datashape.pydata.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://libdynd.org/"&gt;http://libdynd.org/&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>