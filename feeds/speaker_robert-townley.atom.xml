<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_robert-townley.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-04-23T00:00:00+00:00</updated><entry><title>Frontend Development for Backend Developers</title><link href="https://pyvideo.org/djangocon-europe-2019/frontend-development-for-backend-developers.html" rel="alternate"></link><published>2019-04-23T00:00:00+00:00</published><updated>2019-04-23T00:00:00+00:00</updated><author><name>Robert Townley</name></author><id>tag:pyvideo.org,2019-04-23:djangocon-europe-2019/frontend-development-for-backend-developers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An introduction to the tools of modern frontend development for Django developers looking to incorporate UI libraries, CSS preprocessors, bundlers, and ES6 into their projects.
Until recently, I wrote frontend code like a backend developer. jQuery and Javascript were synonymous. CSS and JS dependencies were either linked from CDNs or downloaded and shoved into static file directories the ol’ fashioned way.
For those willing to take the plunge, the modern frontend ecosystem can offer better user experience design, more robust client-side code, greater test coverage, and powerful build tools that free up your time for the fun stuff.
Getting modern frontend tools to play nicely with your Django project can be challenging at first, so in this discussion, we’ll go over some steps that have helped me go from 'Frontend Dinosaur' to 'Frontend Neanderthal'.
This talk is intended for Django developers who are comfortable with Django, HTML, CSS, and JS but have little-to-no experience with frontend build tools (webpack, gulp, grunt) or frontend frameworks (react, angular, vue).&lt;/p&gt;
</summary></entry></feed>