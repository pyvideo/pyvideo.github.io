<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Krishna Kanta Singh</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 23 Jul 2020 00:00:00 +0000</lastBuildDate><item><title>Writing Extensions and Bindings for GPU made Easy</title><link>https://pyvideo.org/europython-2020/writing-extensions-and-bindings-for-gpu-made-easy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing Bindings for C and CUDA code and Packaging it with setup.py in 30 min or less&lt;/p&gt;
&lt;p&gt;As Deep Learning Engineer and Researcher we are always trying to optimize some bottleneck computation in our programs. Sometimes we are faced with situations when scientific libraries like NumPy, SciPy aren't just cutting it or worse there are no libraries that implement the esoteric function on our expensive GPU hardware. Writing Custom C and Cuda Extension becomes an important skill and necessity for applications that require really fast computation.&lt;/p&gt;
&lt;p&gt;In this talk, we go through a detailed example of image search on billions of items, we write custom C and Cuda kernel for distance computation and learn how to connect them seamlessly with our python codebase. We compare methods for writing these extensions and bindings for python in terms of both speed and ease of use. Finally, we make it all work together by hacking the setup.py file for easy deployment and sharing of the&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krishna Kanta Singh</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/writing-extensions-and-bindings-for-gpu-made-easy.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>C-Languages</category><category>Data Science</category><category>Deep Learning</category><category>GPU</category><category>Packaging</category></item></channel></rss>