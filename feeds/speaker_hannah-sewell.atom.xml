<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_hannah-sewell.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-09-16T00:00:00+00:00</updated><entry><title>Building a Twitter Bot</title><link href="https://pyvideo.org/pycon-uk-2018/building-a-twitter-bot.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Hannah Sewell</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/building-a-twitter-bot.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lessons learned from using DEFRA data to build a Twitter Bot&lt;/p&gt;
&lt;p&gt;Twitter is over run with bots, so why not add your own? Twitter bots
make up an estimated 15% of accounts on twitter partly because they’re
so easy to make. As a beginner python learner, finding a project that
was challenging but also manageable by myself was difficult, but twitter
and defra air pollution data provided the perfect answer. I built a
twitter bot that takes the air pollution every hour from the DEFRA API,
processes it and tweets it.&lt;/p&gt;
&lt;p&gt;Building a twitter bot required learning about APIs, processing data,
json, dictionaries and docker. I learned a lot about programming, but I
have also learned a lot about air pollution in Sheffield City Centre,
it’s changes over time, and what causes spikes and troughs.&lt;/p&gt;
&lt;p&gt;In this talk I’ll discuss using the package tweepy to build a bot and
how I learned about APIs, JSON, dictionaries and docker along the way.
I’ll also discuss the DEFRA air pollution data, how you can access your
local data and why the air pollution API documentation from DEFRA is
awful for beginners.&lt;/p&gt;
</summary></entry></feed>