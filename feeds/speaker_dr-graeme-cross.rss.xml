<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Tue, 04 Aug 2015 00:00:00 +0000</lastBuildDate><item><title>PyConAU 2010: Need for Speed</title><link>https://pyvideo.org/pycon-au-2010/pyconau-2010--need-for-speed.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Need for Speed&lt;/p&gt;
&lt;p&gt;Presented by Dr. Graeme Cross&lt;/p&gt;
&lt;p&gt;&amp;quot;Bottlenecks occur in surprising places, so don't try to second guess
and put in a speed hack until you have proven that's where the
bottleneck is.&amp;quot; (Rob Pike)&lt;/p&gt;
&lt;p&gt;Python is a great balance of productivity, expressiveness and
performance, but there are times when it would nice to have a Python
application run faster. This is particularly true for large scale data
processing, numerical work, controlling real world devices, and
animation.&lt;/p&gt;
&lt;p&gt;Using some real-world examples, this talk covers tools and techniques
that allow you to systematically understand where the bottlenecks are in
your code and then how to effectively optimise your code, without having
to resort to writing modules in C/C++.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Graeme Cross</dc:creator><pubDate>Sat, 26 Jun 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--need-for-speed.html</guid><category>language</category><category>optimisation</category><category>profiling</category><category>pyconau</category><category>pyconau2010</category></item><item><title>Ah! I see you have the machine that goes "BING"!</title><link>https://pyvideo.org/pycon-au-2011/ah-i-see-you-have-the-machine-that-goes-bing.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Whirrr, buzz, squelch, click, smash, bing! Python is so much more than a
language for Web 2.0 and system administration: Python can also be used
for interfacing into the real world. Learn how to connect Python up to
stepper motors, micro-fluidic pumps, A/D sensors, switches, solenoids,
vacuum/pressure valves and XYZ robots, with simple off-the-shelf control
hardware.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Graeme Cross</dc:creator><pubDate>Mon, 22 Aug 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-08-22:pycon-au-2011/ah-i-see-you-have-the-machine-that-goes-bing.html</guid><category>web</category></item><item><title>Modules 101: how to avoid spaghetti, big balls of mud and houses of straw!</title><link>https://pyvideo.org/pycon-au-2013/modules-101-how-to-avoid-spaghetti-big-balls-of.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This introductory tutorial will teach you how to effectively use modules
and packages so your code is easier to read, test, package, deploy,
reuse and maintain.&lt;/p&gt;
&lt;p&gt;We will cover the basics of structuring your code with modules and
packages, ways of using the import statement, how to document modules
and packages, and a number of tips to ensure your code is less likely to
end up a tangled mess that collapses when you need to modify or extend
it.&lt;/p&gt;
&lt;p&gt;This talk is compatible with Python 2 and 3.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Graeme Cross</dc:creator><pubDate>Sat, 06 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-06:pycon-au-2013/modules-101-how-to-avoid-spaghetti-big-balls-of.html</guid></item><item><title>Python for less than $7</title><link>https://pyvideo.org/pycon-au-2015/python-for-less-than-7.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You can now run Python 3.4 on microcontrollers that cost less than a cup
of coffee (in a up-market Parisian restaurant :)&lt;/p&gt;
&lt;p&gt;MicroPython (&lt;a class="reference external" href="http://www.micropython.org/"&gt;http://www.micropython.org/&lt;/a&gt;) is a very active port of
Python 3 to low-end microcontrollers with minimal RAM (eg. 192k RAM,
yes: &amp;quot;k&amp;quot;, as in kilobytes) but lots of useful I/O.&lt;/p&gt;
&lt;p&gt;Learn how to set up a very cheap microcontroller with wifi and a range
of I/O and then program it with MicroPython.&lt;/p&gt;
&lt;p&gt;The live demos are guaranteed to fail in spectacular ways as all live
demos do, but will hopefully show enough blinking lights to tempt you to
leave your i7 hyperthreaded clusters and join the cute but very
practical world of cheap, embedded Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Graeme Cross</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-04:pycon-au-2015/python-for-less-than-7.html</guid></item></channel></rss>