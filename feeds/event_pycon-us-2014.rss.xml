<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 13 Apr 2014 00:00:00 +0000</lastBuildDate><item><title>2D/3D graphics with Python on mobile platforms</title><link>https://pyvideo.org/pycon-us-2014/2d3d-graphics-with-python-on-mobile-platforms.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Games, application with rich graphic for mobile platforms? Yes! You can
do it for Android, iOS and other platforms with using Python. In this
talk I speak about tools you may use for developing applications with
using OpenGL ES for different platforms, the ways and concepts which are
used in those tools, some tips and tricks you may use to make a
cross-platform game with Python for fun and profit.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Niko Skrypnik</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/2d3d-graphics-with-python-on-mobile-platforms.html</guid></item><item><title>A Scenic Drive through the Django Request-Response Cycle</title><link>https://pyvideo.org/pycon-us-2014/a-scenic-drive-through-the-django-request-respons.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A simple &amp;quot;Hello World!&amp;quot; page, served via Django, passes though a
surprising number of layers &amp;amp; components. For a newcomer to the language
or the platform, this can be overwhelming at the start. Here I'll take
you on a drive through Django's request-response cycle, focusing on
using its layered model to understand what's going on and get things
done.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Langer</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/a-scenic-drive-through-the-django-request-respons.html</guid></item><item><title>Advanced techniques for Web functional testing</title><link>https://pyvideo.org/pycon-us-2014/advanced-techniques-for-web-functional-testing.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will present multiple advanced techniques for Web functional
testing. You will learn how to test a wide range of Web front-end
components, such as CSS, visuals, responsive designs and user
interactions â€” all using Python. Various practical tips will also be
presented to harness your functional tests in real project workflows.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julien Phalip</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/advanced-techniques-for-web-functional-testing.html</guid></item><item><title>Analyzing Rap Lyrics with Python</title><link>https://pyvideo.org/pycon-us-2014/analyzing-rap-lyrics-with-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Have you ever wondered which rapper is the most sexist? Come learn how
to find out by scraping rapgenius and analyzing rap lyrics using Python
with libraries like pattern and Beautiful Soup! There will be pictures
of Lil' Jon.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julie Lavoie</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/analyzing-rap-lyrics-with-python.html</guid></item><item><title>Building the App</title><link>https://pyvideo.org/pycon-us-2014/building-the-app.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this talk we'll illustrate a simple web application using SQLAlchemy,
showing off the style of development that SQLAlchemy is most geared
towards, the so-called &amp;quot;&amp;quot;foundational&amp;quot;&amp;quot; style which provides for
development and maintainance of custom conventions which then service
the needs of the model declarations and use case implementations.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Bayer</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/building-the-app.html</guid></item><item><title>Cheap Helicopters In My Living Room</title><link>https://pyvideo.org/pycon-us-2014/cheap-helicopters-in-my-living-room.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Using Python and a minimal amount of hardware hacking, it's possible to
build computer controlled helicopters you can fly around your living
room for surprisingly small amounts of money. This talk will describe
the steps you'll need to take to start the ball rolling towards Skynet
using a $20 helicopter and an Arduino.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ned Jackson Lovely</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/cheap-helicopters-in-my-living-room.html</guid></item><item><title>Closing address - PyCon 2014 (2014/04/13)</title><link>https://pyvideo.org/pycon-us-2014/closing-address-pycon-2014-20140413.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/closing-address-pycon-2014-20140413.html</guid></item><item><title>Data intensive biology in the cloud: instrumenting ALL the things</title><link>https://pyvideo.org/pycon-us-2014/data-intensive-biology-in-the-cloud-instrumentin.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Cloud computing offers some great opportunities for science, but most
cloud computing platforms are I/O and memory limited, and hence are poor
matches for data-intensive computing. After 4 years of research software
development we are now instrumenting and benchmarking our analysis
pipelines; numbers, lessons learned, and future plans will be discussed.
Everything is open source.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">C. Titus Brown</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/data-intensive-biology-in-the-cloud-instrumentin.html</guid></item><item><title>Deliver Your Software In An Envelope</title><link>https://pyvideo.org/pycon-us-2014/deliver-your-software-in-an-envelope.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Guaranteed behavior makes software modules useful. Software guarantees
are commonly incomplete with good reason: promises that are narrow and
few are most easily kept across wide ranges of platforms and long times.
We define the space of a module's allowed behavior to be its &amp;quot;behavioral
envelope&amp;quot; and show that thinking and speaking in terms of envelopes
eases maintenance and makes APIs delightful.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Augie Fackler</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/deliver-your-software-in-an-envelope.html</guid></item><item><title>Designing Django's Migrations</title><link>https://pyvideo.org/pycon-us-2014/designing-djangos-migrations.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Django finally has built-in migrations, and they're a long way from the
designs of South or django-evolution. Learn the key design decisions we
made, ideas we discarded, and the unique treatment we have to give each
of our four official database backends.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Godwin</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/designing-djangos-migrations.html</guid></item><item><title>Designing Poetic APIs</title><link>https://pyvideo.org/pycon-us-2014/designing-poetic-apis.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The language you speak determines the thoughts you can think. Thus, API
designers (and that includes you, if you've ever coined a function) have
a great duty, as language inventors, to expand the mental canvases of
those who come after. We'll concretize that into 7 hallmarks of good
APIs, pulling examples (and bloopers) from popular Python libraries.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Rose</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/designing-poetic-apis.html</guid></item><item><title>Developing Flask Extensions</title><link>https://pyvideo.org/pycon-us-2014/developing-flask-extensions.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;You can create a web application with Flask in seven lines of code, and
you can grow that app to thousands. How do you create reusable,
shareable libraries? We'll use a simple but real extension I created
(Flask-FeatureFlags) to look at the different ways you can make Flask
awesome.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rachel Sanders</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/developing-flask-extensions.html</guid></item><item><title>Discovering Python</title><link>https://pyvideo.org/pycon-us-2014/discovering-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;So, what happens when you lock a Python programmer in a secret vault
containing 1.5 TBytes of C++ source code and no internet connection?
Find out as I describe how I used Python as a secret weapon of
&amp;quot;discovery&amp;quot; in an epic legal battle.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Beazley</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/discovering-python.html</guid></item><item><title>Diving into Open Data with IPython Notebook &amp; Pandas</title><link>https://pyvideo.org/pycon-us-2014/diving-into-open-data-with-ipython-notebook-pan-0.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;I'll walk you through Python's best tools for getting a grip on data:
IPython Notebook and pandas. I'll show you how to read in data, clean it
up, graph it, and draw some conclusions, using some open data about the
number of cyclists on MontrÃ©al's bike paths as an example.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julia Evans</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/diving-into-open-data-with-ipython-notebook-pan-0.html</guid></item><item><title>Django: The good parts</title><link>https://pyvideo.org/pycon-us-2014/django-the-good-parts.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Lots of talks and tutorials try to cover Django exhaustively, going over
every component and feature. But not so many take a look at the bits
that let Django be Django. In this talk, we'll see exactly what those
bits -- some old, some new -- are, in a way that shows why it's still a
solid and popular choice for web developers nearly nine years after its
initial public release.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Bennett</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/django-the-good-parts.html</guid></item><item><title>Farewell and Welcome Home: Python in Two Genders</title><link>https://pyvideo.org/pycon-us-2014/farewell-and-welcome-home-python-in-two-genders.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;After half a lifetime &amp;quot;undercover as a man&amp;quot; I transitioned from male to
female while staying involved in the Python community. This talk
discusses that transition and explores how I found life in Python as a
woman different from my former life as a man.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Naomi Ceder</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/farewell-and-welcome-home-python-in-two-genders.html</guid></item><item><title>Fast Python, Slow Python</title><link>https://pyvideo.org/pycon-us-2014/fast-python-slow-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The common wisdom is that Python is slow. And yet people run high
performance software on it. It's hard to make Python fast, and yet there
are incredibly high performance Python VMs. This talk breaks down the
facts and the myths of Python performance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Gaynor</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/fast-python-slow-python.html</guid></item><item><title>Games for Science: Creating interactive psychology experiments</title><link>https://pyvideo.org/pycon-us-2014/games-for-science-creating-interactive-psycholog.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Have you ever wanted to play video games while also contributing to
science? In psychology experiments developed by myself and Peter
Battaglia, participants are immersed in an interactive 3D world which is
experimentally well-controlled, yet also extremely fun. This talk will
explain how we created these &amp;quot;game-like&amp;quot; experiments in Python using the
Panda3D video game engine.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica Hamrick</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/games-for-science-creating-interactive-psycholog.html</guid></item><item><title>Garbage Collection in Python</title><link>https://pyvideo.org/pycon-us-2014/garbage-collection-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will explore how garbage collection is implemented in CPython
and PyPy. See how CPython deals reference counting's shortcomings with a
special GC for cycle collection. Then dive into PyPy's sophisticated and
high-performing GC implementations. The particularly thorny issue of
finalizers in reference cycles will also be addressed.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin Peterson</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/garbage-collection-in-python.html</guid></item><item><title>Getting Started Testing</title><link>https://pyvideo.org/pycon-us-2014/getting-started-testing.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;If you've never written tests before, you probably know you &lt;em&gt;should&lt;/em&gt;,
but view the whole process as a bureaucratic paperwork nightmare to
check off on your ready-to-ship checklist. This is the wrong way to
approach testing. Tests are a solution to a problem that is important to
you: does my code work? I'll show how Python tests are written, and why.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ned Batchelder</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/getting-started-testing.html</guid></item><item><title>Hitchhikers Guide to Participating in Open Source</title><link>https://pyvideo.org/pycon-us-2014/hitchhikers-guide-to-participating-in-open-source.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Curious about being involved in open source, but haven't had the time to
make the plunge? Involved with open source but a bit hazy on the way it
all works? Open source legend Andrew Tridgell runs an annual week-long
post-graduate primer course teaching &amp;quot;&amp;quot;Free and Open Source Software
Development &amp;quot;&amp;quot;. This talk will convey as much of this course as possible
in the time available.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Elena Williams</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/hitchhikers-guide-to-participating-in-open-source.html</guid></item><item><title>In Depth PDB</title><link>https://pyvideo.org/pycon-us-2014/in-depth-pdb.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python includes a powerful debugger, but using it well requires
practice. Setting a break point and inspecting local variables is easy,
but what else can you do? What if you need to set the breakpoint in one
of your dependencies, or only fire it conditionally? How do you navigate
calls, or change them? Join me for an in depth look at how you can
better use PDB to debug and understand programs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan Yergler</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/in-depth-pdb.html</guid></item><item><title>Introduction to Docker</title><link>https://pyvideo.org/pycon-us-2014/introduction-to-docker.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Docker is a tool for sandboxing entire application environments using
Linux containers. Docker's feature set includes versioning, sharing etc.
They are light-weight and fast, you can recreate a deployment
environment in development or push your development containers to
production. Imagine never having to worry about fragmentation of servers
or syncing the versions of different libraries.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amjith Ramanujam</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/introduction-to-docker.html</guid></item><item><title>Introduction to SQLAlchemy Core</title><link>https://pyvideo.org/pycon-us-2014/introduction-to-sqlalchemy-core.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk provides a broad-based introduction to SQLAlchemy Core
library. It is focused on someone new to SQLAlchemy Core, who has
experience with other database technologies such as Django or SQLAlchemy
ORM. We'll cover the differences between the domain-centric models of
those tools compared to the schema-centric model and how we can use that
to deal with common and unusual data sources.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Myers</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/introduction-to-sqlalchemy-core.html</guid></item><item><title>It's Dangerous to Go Alone: Battling the Invisible Monsters in Tech</title><link>https://pyvideo.org/pycon-us-2014/its-dangerous-to-go-alone-battling-the-invisibl.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;It can be hard to focus on your love of coding when you are regularly
battling invisible issues like insecurity, anxiety, and lack of
confidence. This talk will identify invisible issues programmers
struggle with, talk about their impact, discuss personal experiences
dealing with them, and share some tools useful in fighting back.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julie Pagano</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/its-dangerous-to-go-alone-battling-the-invisibl.html</guid></item><item><title>Keynote - Fernando PÃ©rez</title><link>https://pyvideo.org/pycon-us-2014/keynote-fernando-perez.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fernando PÃ©rez</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/keynote-fernando-perez.html</guid></item><item><title>Keynote - Guido Van Rossum</title><link>https://pyvideo.org/pycon-us-2014/keynote-guido-van-rossum-0.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guido Van Rossum</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/keynote-guido-van-rossum-0.html</guid></item><item><title>Keynote: Python, the next generation - Jessica McKellar</title><link>https://pyvideo.org/pycon-us-2014/keynote-jessica-mckellar.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica McKellar</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/keynote-jessica-mckellar.html</guid></item><item><title>Keynote - Van Lindberg</title><link>https://pyvideo.org/pycon-us-2014/keynote-van-lindberg.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Van Lindberg</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/keynote-van-lindberg.html</guid></item><item><title>Know Thy Neighbor: Scikit and the K-Nearest Neighbor Algorithm</title><link>https://pyvideo.org/pycon-us-2014/know-thy-neighbor-scikit-and-the-k-nearest-neigh.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;One of the great features of Python is its machine learning
capabilities. Scikit is a rich Python package which allows developers to
create predictive apps. In this presentation, we will guess what type of
music do Python programmers like to listen to, using Scikit and the
k-nearest neighbor algorithm.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Portia Burton</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/know-thy-neighbor-scikit-and-the-k-nearest-neigh.html</guid></item><item><title>Lightning talks - Saturday morning</title><link>https://pyvideo.org/pycon-us-2014/lightning-talks-saturday-morning.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/lightning-talks-saturday-morning.html</guid><category>lightning talks</category></item><item><title>Lightning talks - Sunday afternoon</title><link>https://pyvideo.org/pycon-us-2014/lightning-talks-sunday-afternoon.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/lightning-talks-sunday-afternoon.html</guid><category>lightning talks</category></item><item><title>Lightning talks - Sunday morning</title><link>https://pyvideo.org/pycon-us-2014/lightning-talks-sunday-morning.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/lightning-talks-sunday-morning.html</guid><category>lightning talks</category></item><item><title>Localization Revisited</title><link>https://pyvideo.org/pycon-us-2014/localization-revisited.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Is your web app ready for a global audience? Internationalizing your
codebase with gettext (bit.ly/pyconi18n) might just be the simpler part
of the puzzle. It's hard to maintain translations in a fast paced
deployment environment without constant manual intervention. This talk
covers tools and strategies you can adopt to automate your localization
process and ensure high translation coverage.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ruchi Varshney</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/localization-revisited.html</guid></item><item><title>Multi-factor Authentication - Possession Factors</title><link>https://pyvideo.org/pycon-us-2014/multi-factor-authentication-possession-factors.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A brief overview of what multifactor authentication is, focusing
particularly on possession factors, including what common options are
available. One-time-passwords, an important concept many possession
factor types, will also be discussed.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ying Li</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/multi-factor-authentication-possession-factors.html</guid></item><item><title>My big gay adventure. Making, releasing and selling an indie game made in python.</title><link>https://pyvideo.org/pycon-us-2014/my-big-gay-adventure-making-releasing-and-selli-0.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Indie game developer Luke Miller presents a brief overview on making
point-and-click adventure games using the open source pyvida gaming
engine and uses his commercially released gay-themed adventure game &amp;quot;My
Ex-Boyfriend the Space Tyrant!&amp;quot; as a tutorial on developing, packaging,
releasing and selling a python game for Windows, Mac and Linux.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke Miller</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/my-big-gay-adventure-making-releasing-and-selli-0.html</guid></item><item><title>Outreach Program for Women: Lessons in Collaboration</title><link>https://pyvideo.org/pycon-us-2014/outreach-program-for-women-lessons-in-collaborat.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Since 2010, the GNOME Foundation's Outreach Program for Women has
provided 130 women with an opportunity to participate in remote
internships with 23 Free Software organizations. This talk will cover
the history of the program, what makes it successful, how the same
strategies can be used for engaging all new contributors, and what other
initiatives help increase diversity in Free Software.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marina Zhurakhinskaya</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/outreach-program-for-women-lessons-in-collaborat.html</guid></item><item><title>Performance Testing and Profiling: A Virtuous Cycle</title><link>https://pyvideo.org/pycon-us-2014/performance-testing-and-profiling-a-virtuous-cyc.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Donald Knuth famously said that we should avoid optimization 97% of the
time and focus on the &amp;quot;critical 3%&amp;quot;. How can we identify that 3%? How
can we best focus our optimization efforts, and avoid the &amp;quot;root of all
evil&amp;quot; that is premature optimization? This talk introduces key types of
performance testing, and demonstrates how they can be paired with
profiling techniques in a cycle of improvement.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Crosta</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/performance-testing-and-profiling-a-virtuous-cyc.html</guid></item><item><title>Postgres Performance for Humans</title><link>https://pyvideo.org/pycon-us-2014/postgres-performance-for-humans.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;To many developers the database is a black box. You expect to be able to
put data into your database, have it to stay there, and get it out when
you query it... hopefully in a performant manner. When its not
performant enough the two options are usually add some indexes or throw
some hardware at it. We'll walk through a bit of a clearer guide of how
you can understand and manage DB performance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Craig Kerstiens</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/postgres-performance-for-humans.html</guid></item><item><title>PostgreSQL is Web Scale (Really :) )</title><link>https://pyvideo.org/pycon-us-2014/postgresql-is-web-scale-really.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will outline and demonstrate usage of PostgreSQL for data
storage and processing scenarios where new common wisdom would usually
turn to &amp;quot;NoSQL&amp;quot; databases for scalability reasons. It demonstrates both
NoSQL style usage and techniques using more traditional relational
storage models with required adjustments for infinite scalability.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hannu Krosing</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/postgresql-is-web-scale-really.html</guid></item><item><title>Programming an Autonomous 20 Foot Blimp with Python</title><link>https://pyvideo.org/pycon-us-2014/programming-an-autonomous-20-foot-blimp-with-pyth.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk documents the journey of a less than conventional robotics
application in which python is used as the logical controller of an
autonomous 20 foot blimp. The blimp's autopilot features, prolonged air
time, large size, and smooth motion make it the ideal platform for
aerial photography. Giving the blimp an onboard controller reduces the
overall costs and requirements of the operation.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Lobdell</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/programming-an-autonomous-20-foot-blimp-with-pyth.html</guid></item><item><title>Pushing Python: Building a High Throughput, Low Latency System</title><link>https://pyvideo.org/pycon-us-2014/pushing-python-building-a-high-throughput-low-l.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Taba is a distributed metrics aggregator, similar in concept to statsd.
Built with Python using Redis, gevent, and Cython, it currently handles
over 6M events/sec with strong consistency guarantees. This talk will
present an overview of its design, and discuss the challenges and
solutions encountered in the process of building a high throughput, low
latency distributed service.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Ballard</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/pushing-python-building-a-high-throughput-low-l.html</guid></item><item><title>PyCon 2014 Awards</title><link>https://pyvideo.org/pycon-us-2014/pycon-2014-awards.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The awards portion of Van Lindberg's keynote at PyCon 2014.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Van Lindberg</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/pycon-2014-awards.html</guid></item><item><title>Python in the Browser: Intro to Brython</title><link>https://pyvideo.org/pycon-us-2014/python-in-the-browser-intro-to-brython.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Have you ever wished that you can write Python in the browser? Brython
is an experimental Javascript library that enables you to leverage the
elegance of Python on the client side. Novice programmers who are
familiar with Javascript will learn about Brython, how Brython measures
up against Javascript, and why getting client-side Python adopted as a
mainstream tool is really difficult.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Susan Tan</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/python-in-the-browser-intro-to-brython.html</guid></item><item><title>Python packaging simplified, for end users, app developers</title><link>https://pyvideo.org/pycon-us-2014/python-packaging-simplified-for-end-users-app-d.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk covers the practical use of Python packaging tools. You'll see
how to keep your system clean as an end user excited about installing a
Python module from the web, the purpose of setup.py, how virtualenv
makes life easier (and sometimes harder), what Ubuntu/Debian tools can
offer, and how to make a complex app easier for new contributors to run.
It is heavy on stories and recommendations.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Asheesh Laroia</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/python-packaging-simplified-for-end-users-app-d.html</guid></item><item><title>Quick Wins for Better Website Security</title><link>https://pyvideo.org/pycon-us-2014/quick-wins-for-better-website-security-0.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn quick, easy, and lesser-known techniques to improve your website's
security, protect against session hijacking, and defend against XSS and
data injection attacks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Callahan</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/quick-wins-for-better-website-security-0.html</guid></item><item><title>REST is not enough: Using Push Notifications to better support your mobile clients</title><link>https://pyvideo.org/pycon-us-2014/rest-is-not-enough-using-push-notifications-to-b.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will introduce you to Push Notifications, a very powerful way
for your Python service to communicate information to mobile devices.
You will learn how Push Notifications work, their advantages and
disadvantages and how you can implement them on your Python projects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Gomez</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/rest-is-not-enough-using-push-notifications-to-b.html</guid></item><item><title>Sane schema migrations with Alembic and SQLAlchemy</title><link>https://pyvideo.org/pycon-us-2014/sane-schema-migrations-with-alembic-and-sqlalchem.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Working with developers on schema migrations is a perennial challenge
for DBAs and developers. Devs tend to like a &amp;quot;set it and forget it&amp;quot;
tool. This talk discusses the strategies used to move from a pure SQL
and shell migration system to using SQLAlchemy and alembic for maximum
DBA and developer happiness.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Selena Deckelmann</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/sane-schema-migrations-with-alembic-and-sqlalchem.html</guid></item><item><title>See Docs Run. Run, Docs, Run!</title><link>https://pyvideo.org/pycon-us-2014/see-docs-run-run-docs-run.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Code executes. Docs just sit there looking pretty. Now it's time to blur
that boundary! Tools like the IPython Notebook, Sphinx, dexy, and
old-fashioned doctests blend code with docs, making package docs,
educational materials, and system-level docs more engaging, relevant,
and trustworthy.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catherine Devlin</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/see-docs-run-run-docs-run.html</guid></item><item><title>Set your code free: releasing and maintaining an open-source Python project</title><link>https://pyvideo.org/pycon-us-2014/set-your-code-free-releasing-and-maintaining-an.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Got some code that you've written that would be useful to others, but
actually releasing it feels like too much new stuff to figure out?
Releasing software does take some work, but this talk will take you
step-by-step through the process with specific recommendations and
tools. We'll cover preparing your code for release, packaging it,
releasing it, and maintaining it over time.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carl Meyer</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/set-your-code-free-releasing-and-maintaining-an.html</guid></item><item><title>Smart Dumpster: Employing Python to Report Real-Time Resource</title><link>https://pyvideo.org/pycon-us-2014/smart-dumpster-employing-python-to-report-real-t.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;As U. of California campuses must reach Zero-Waste by 2020, a Smart
Dumpster was designed to increase efficiency, study waste patterns, and
improve refuse reduction. Using Python, a prototype has been installed
into operations with tentative success since July 2013. Demonstrating
real-time data reporting, the talk will focus on the success, roadblocks
and campus plans for the Smart Dumpster.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bradley Angell</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/smart-dumpster-employing-python-to-report-real-t.html</guid></item><item><title>So You Want to Build an API?</title><link>https://pyvideo.org/pycon-us-2014/so-you-want-to-build-an-api.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;You might know what an API is. Maybe you've even implemented a handful
of popular APIs out there, but you are thinking about building your own
and don't know where to start. This talk will show you how easy it is to
build an API into your project using Python and Flask. We'll also
discuss best practices and design patterns for great APIs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Megan Speir</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/so-you-want-to-build-an-api.html</guid></item><item><title>Software Carpentry: Lessons Learned</title><link>https://pyvideo.org/pycon-us-2014/software-carpentry-lessons-learned.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will explain how Software Carpentry has grown to run over a
hundred training events a year, what we've learned along the way, and
how you can do it too.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Greg Wilson</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/software-carpentry-lessons-learned.html</guid></item><item><title>Software Engineering Research for Hackers: Bridging the Two Solitudes</title><link>https://pyvideo.org/pycon-us-2014/software-engineering-research-for-hackers-bridgi.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Software engineering researchers and hackers don't talk to each other as
much as they ought to. This talk aims to bridge that gap, teach
practitioners about what research is out there, and spark a &amp;quot;citizen
science&amp;quot; movement in software engineering. I'll explain how to study
your own projects and get academics to pay attention. Together, we can
learn how to develop better software.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tavish Armstrong</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/software-engineering-research-for-hackers-bridgi.html</guid></item><item><title>Subprocess to FFI: Memory, Performance, and Why You Shouldn't Shell Out</title><link>https://pyvideo.org/pycon-us-2014/subprocess-to-ffi-memory-performance-and-why-y.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Sometimes, the code you need just isn't available in Python, but
someone's written some code in another language that solves your
problem. What options do you have for interacting with this external
code from within your program? We'll examine how to call external
binaries, what happens behind the scenes at a systems level, and how
these implementation details affect performance and memory usage. In the
second part of the talk, we'll discuss the different options for more
tightly integrating external code in the form of a C library for better
performance and control.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christine Spang</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/subprocess-to-ffi-memory-performance-and-why-y.html</guid></item><item><title>Technical on-boarding, training, and mentoring.</title><link>https://pyvideo.org/pycon-us-2014/technical-on-boarding-training-and-mentoring.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This is a talk about how to make junior and new engineers into
independent and productive members of your engineering team faster and
cheaper. We will focus on python specific resources and libraries that
will help you create a simple but effective on boarding program, and
talk about case studies of companies that have had success using these
techniques.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kate Heddleston</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/technical-on-boarding-training-and-mentoring.html</guid></item><item><title>The Day of the EXE Is Upon Us</title><link>https://pyvideo.org/pycon-us-2014/the-day-of-the-exe-is-upon-us.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;It was once quite painful to build your Python app as a single .exe
file. Support forums filled with lamentations as users struggled with
primitive tools. But today, two separate tools exist for compiling your
Python to real machine language! Come learn about how one of the biggest
problems in commercial and enterprise software has now been solved and
how you can benefit from this achievement.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/the-day-of-the-exe-is-upon-us.html</guid></item><item><title>The Sorry State of SSL</title><link>https://pyvideo.org/pycon-us-2014/the-sorry-state-of-ssl.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Those web pages with shiny lock icons boasting that your data is safe
because of &amp;quot;256 bit encryption&amp;quot;? They are lying. In times of mass
surveillance and commercialized Internet crime you should know why
that's the case. This talk will give you an overview that will help you
to assess your personal security more realistically and to make your
applications as secure as possible against all odds.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hynek Schlawack</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/the-sorry-state-of-ssl.html</guid></item><item><title>Track memory leaks in Python</title><link>https://pyvideo.org/pycon-us-2014/track-memory-leaks-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Memory leaks in Python cannot be analyzed with traditional tools because
Python uses reference counters. I will present tools specific to Python
to help you to localize your memory leaks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Stinner</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/track-memory-leaks-in-python.html</guid></item><item><title>Unit Testing Makes Your Code Better</title><link>https://pyvideo.org/pycon-us-2014/unit-testing-makes-your-code-better.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Unit testing is like public transit: everyone agrees it's a good thing
for other people to do. It's easier to swallow when you see how unit
testing improves not only the correctness of your code, but the design
as well. I'll walk through a real-life case study where adding unit
tests turned a pretty good module into an even better one: easier to
understand, extend, and reuse.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Ward</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/unit-testing-makes-your-code-better.html</guid></item><item><title>Upgrade your Web Development Toolchain</title><link>https://pyvideo.org/pycon-us-2014/upgrade-your-web-development-toolchain.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;How to make our Python web development workflow less painful and more
predictable? By mixing a collection of tools and best practices for both
back and front ends like Buildout, Grunt, Bower and Ansible to automate
tasks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Blaise Laflamme</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/upgrade-your-web-development-toolchain.html</guid></item><item><title>What is coming in Python packaging</title><link>https://pyvideo.org/pycon-us-2014/what-is-coming-in-python-packaging.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In the last 18 months the Python packaging world has seen an explosion
of activity. Learn what improvements are available now and what is on
the horizon.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Noah Kantrowitz</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/what-is-coming-in-python-packaging.html</guid></item><item><title>Which messaging layer should you use if you want to build</title><link>https://pyvideo.org/pycon-us-2014/which-messaging-layer-should-you-use-if-you-want.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The objective of this session is to give the audience an idea of how
they should choose a messaging layer for their application - how to
evaluate their requirements against the features of the tools and make a
choice. I will use my experience with building messaging applications to
present a methodology which they can use&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Narahari Allamraju</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/which-messaging-layer-should-you-use-if-you-want.html</guid></item><item><title>Writing RESTful web services with Flask</title><link>https://pyvideo.org/pycon-us-2014/writing-restful-web-services-with-flask.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Flask is a web framework for Python based on Werkzeug, Jinja 2 and good
intentions. It is considered a micro-framework, but don't get the
&amp;quot;micro&amp;quot; part fool you; Flask can do everything the &amp;quot;others&amp;quot; can do, many
times in a simpler, leaner way. This session will introduce you to Flask
as an engine to build RESTful web services.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miguel Grinberg</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/writing-restful-web-services-with-flask.html</guid></item><item><title>Advanced methods for creating decorators</title><link>https://pyvideo.org/pycon-us-2014/advanced-methods-for-creat.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Dumpleton</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/advanced-methods-for-creat.html</guid></item><item><title>All Your Ducks In A Row: Data Structures in the Standard Library and Beyond</title><link>https://pyvideo.org/pycon-us-2014/all-your-ducks-in-a-row-data-structures-in-the-s.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Why are Python programmers crazy about lists and dictionaries, when
other languages tout bitmaps, linked lists, and B+ trees? Are we missing
out? Come learn how data structures are implemented on bare metal, how
to select the right data structure, how the list and dictionary cover a
wide swath of use cases, and when to dip into the Standard Library or a
third-party package for an alternative.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/all-your-ducks-in-a-row-data-structures-in-the-s.html</guid></item><item><title>An Introduction to Twisted</title><link>https://pyvideo.org/pycon-us-2014/an-introduction-to-twisted.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Twisted is an event-driven, networking library. This talk aims to
explain what that means and give an overview of some of the main Twisted
concepts. It will also describe some of the functionality that Twisted
offers out of the box.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stacey Sern</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/an-introduction-to-twisted.html</guid></item><item><title>Ansible - Python-Powered Radically Simple IT Automation</title><link>https://pyvideo.org/pycon-us-2014/ansible-python-powered-radically-simple-it-auto.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn about Ansible -- a radically simple way to deploy applications,
configure operating systems, and orchestrate IT operations including
zero downtime rolling updates. Let's bring about SkyNet faster.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Dehaan</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/ansible-python-powered-radically-simple-it-auto.html</guid></item><item><title>Application Deployment State of the Onion</title><link>https://pyvideo.org/pycon-us-2014/application-deployment-state-of-the-onion.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Deploying a moderately complex web application has become quite a
challenge over the years. As best-practices have evolved, it has become
progressively more time-consuming to keep up with what tools exist and
how to use them effectively. This talk will provide an overview of the
ecosystem and provide pointers for more information about individual
components or problems.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Noah Kantrowitz</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/application-deployment-state-of-the-onion.html</guid></item><item><title>Bayesian statistics made simple</title><link>https://pyvideo.org/pycon-us-2014/bayesian-statistics-made-simple-0.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;An introduction to Bayesian statistics using Python. Bayesian statistics
are usually presented mathematically, but many of the ideas are easier
to understand computationally. People who know Python can get started
quickly and use Bayesian analysis to solve real problems. This tutorial
is based on material and case studies from Think Bayes (O'Reilly Media).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/bayesian-statistics-made-simple-0.html</guid></item><item><title>Beyond Defaults: Creating Polished Visualizations Using Matplotlib</title><link>https://pyvideo.org/pycon-us-2014/beyond-defaults-creating-polished-visualizations.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;When people hear of matplotlib, they think rudimentary graphs that will
need to be touched up in photoshop. This tutorial aims to teach
attendees how to exploit the functionality provided by various
matplotlib libraries to create professional looking data visualizations.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hannah Aizenman</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/beyond-defaults-creating-polished-visualizations.html</guid></item><item><title>Blending art, technology, and light, Python for interactive and real time</title><link>https://pyvideo.org/pycon-us-2014/blending-art-technology-and-light-python-for-i.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Blinking colored lights bring out the child in all of us. Color LED
lighting technology is becoming more available and affordable. Layers of
hardware, lighting protocols, and effects design can make doing anything
more complex than blinking these lights tricky. Come learn about LEDs
how to control them with Python, and about building real-time control of
physical things.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Preston Holmes</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/blending-art-technology-and-light-python-for-i.html</guid></item><item><title>Build your own PiDoorbell! - Learn Home Automation with Python</title><link>https://pyvideo.org/pycon-us-2014/build-your-own-pidoorbell-learn-home-automatio.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Rupa and Akkana will walk you through the setup/code to build your own
super-cool PiDoorbell project to monitor/notify you about visitors at
your house. Learn about the RaspberryPi, PiDoorbell software/hardware
and build your own PiDoorbell to take home with you! Bring a
RaspberryPi, power cord, USB cable (USB camera optional). We will
provide the rest of the hardware (wifi, prox. sensor etc.).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Akkana Peck</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/build-your-own-pidoorbell-learn-home-automatio.html</guid></item><item><title>Building and breaking a Python sandbox</title><link>https://pyvideo.org/pycon-us-2014/building-and-breaking-a-python-sandbox.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;What does it take to make a Python sandbox that can run untrusted code?
Learn some surprising language features and experience security
challenges first-hand as we work through building a Python sandbox from
scratch. You'll leave this talk with renewed appreciation for the
dynamic nature of Python, some sneaky language tricks, and a solid
background in classes of sandboxing security issues.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica McKellar</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/building-and-breaking-a-python-sandbox.html</guid></item><item><title>By Your Bootstraps: Porting Your Application to Python3</title><link>https://pyvideo.org/pycon-us-2014/by-your-bootstraps-porting-your-application-to-p.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk is an experience report / best practices summary, based on
work porting a very large stack to Python 3.x. The stack includes the
Zope3 component architecture, ZODB, WebOb, pyramid, other dependencies,
totalling ~180 KLOC Python + ~25 KLOC C.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tres Seaver</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/by-your-bootstraps-porting-your-application-to-p.html</guid></item><item><title>Cache me if you can: memcached, caching patterns and best practices</title><link>https://pyvideo.org/pycon-us-2014/cache-me-if-you-can-memcached-caching-patterns.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Memcached is a popular, blazing fast in-RAM key/object store mainly used
in web applications (although it can be used in virtually any software).
You will walk out of this talk with a solid understanding of memcached
and what it does under the hood, and become familiar with several
patterns and best practices for making the most of it in your own Python
applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guillaume Ardaud</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/cache-me-if-you-can-memcached-caching-patterns.html</guid></item><item><title>Castle Anthrax: Dungeon Generation Techniques</title><link>https://pyvideo.org/pycon-us-2014/castle-anthrax-dungeon-generation-techniques.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Come and learn the techniques used for generating random dungeon-like
levels for games. You don't have to know what Rogue is to enjoy this
talk. Prepare yourself for a plethora of Monty Python references and
we'll have some fun.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James King</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/castle-anthrax-dungeon-generation-techniques.html</guid></item><item><title>Character encoding and Unicode in Python</title><link>https://pyvideo.org/pycon-us-2014/character-encoding-and-unicode-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Every developer will inevitably feel the pain of character encoding
issues. We will cover the fundamentals every Python developer should
know on character encoding and Unicode. We will teach you how to
identify the types of problems that occur when dealing with character
encoding and outline a set of best practices and useful libraries which
can be used to avoid and fix character encoding issues.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Esther Nam</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/character-encoding-and-unicode-in-python.html</guid></item><item><title>Computer science fundamentals for self-taught programmers</title><link>https://pyvideo.org/pycon-us-2014/computer-science-fundamentals-for-self-taught-pro.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;When people talk about Big O notation do you go cross eyed? Do you not
get the point of learning about implementing linked lists or depth first
search? Join me as I introduce the CS fundamentals that helped me ace my
Google interview, even though I didn't get a formal CS education.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Justin Abrahms</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/computer-science-fundamentals-for-self-taught-pro.html</guid></item><item><title>Contribute with me! Getting started with open source development</title><link>https://pyvideo.org/pycon-us-2014/contribute-with-me-getting-started-with-open-sou-0.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Want to contribute to a Python project or the core language, but not
sure where to start?&lt;/p&gt;
&lt;p&gt;Join us for 3 hours learning the nuts and bolts of open source
contribution. By the end of this tutorial, you'll have the tools and
practice to confidently contribute to your favorite projects.&lt;/p&gt;
&lt;p&gt;Beginning programmers are welcome and encouraged!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica McKellar</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/contribute-with-me-getting-started-with-open-sou-0.html</guid></item><item><title>Data Wrangling for Kaggle Data Science Competitions -- An etude</title><link>https://pyvideo.org/pycon-us-2014/data-wrangling-for-kaggle-data-science-competitio.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Let us mix Python analytics tools, add a dash of Machine Learning
Algorithmics &amp;amp; work on Data Science Analytics competitions hosted by
Kaggle. This tutorial introduces the intersection of Data, Inference &amp;amp;
Machine Learning, structured in a progressive mode, so that the
attendees learn by hands-on wrangling with data for interesting
inferences using scikit-learn (scipy, numpy) &amp;amp; pandas&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krishna Sankar</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/data-wrangling-for-kaggle-data-science-competitio.html</guid></item><item><title>Decorators: A Powerful Weapon in your Python Arsenal</title><link>https://pyvideo.org/pycon-us-2014/decorators-a-powerful-weapon-in-your-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Decorators are an invaluable addition to anyone's arsenal of python
tools and tricks. We will learn what a decorator is, how decorators are
created, and then explore some of the cooler applications for decorators
in our everyday projects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Colton Myers</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/decorators-a-powerful-weapon-in-your-python.html</guid></item><item><title>Distributed Computing Is Hard, Lets Go Shopping</title><link>https://pyvideo.org/pycon-us-2014/distributed-computing-is-hard-lets-go-shopping.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Distributed computing is challenging. The network can be spotty. The
servers can be pushed too hard. Race conditions can show up. Tasks can
seem to disappear. Deployment can be messy. Celery is an excellent tool
for writing distributed applications and this talk focuses on real-world
challenges faced when doing those tasks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lewis Franklin</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/distributed-computing-is-hard-lets-go-shopping.html</guid></item><item><title>Distributed task processing using Celery</title><link>https://pyvideo.org/pycon-us-2014/distributed-task-processing-using-celery.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Celery is a distributed task queue for Python that is used by a large
number of web applications to off load tasks that can be executed
asynchronously. This workshop will demonstrate how we can use Celery for
a use case that isn't a web site or a web application and is something
which could happen in a hospital or a bank or any other such large
organization.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Narahari Allamraju</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/distributed-task-processing-using-celery.html</guid></item><item><title>Django for Web Designers and Front End Developers</title><link>https://pyvideo.org/pycon-us-2014/django-for-web-designers-and-front-end-developers.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Traditional tutorials for Django usually assume some programming
experience, but what if someone is learning Python and Django with a
HTML/CSS background? This tutorial focuses on the web-based features of
Django â€” templates and the admin â€” and goes over the basic building
blocks of Django programming to get web designers excited and interested
in learning more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Wolever</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/django-for-web-designers-and-front-end-developers.html</guid></item><item><title>Dynamics and Control with Python</title><link>https://pyvideo.org/pycon-us-2014/dynamics-and-control-with-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this tutorial we will first learn how to solve, simulate, and
visualize multibody dynamics problems with Python. These methods and
techniques play an important role in the design of robots, vehicles,
spacecraft, manufacturing machines, etc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Moore</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/dynamics-and-control-with-python.html</guid></item><item><title>Enough Machine Learning to Make Hacker News Readable Again</title><link>https://pyvideo.org/pycon-us-2014/enough-machine-learning-to-make-hacker-news-reada.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;It's inevitable that online communities will change, and that we'll
remember the community with a fondness that likely doesn't accurately
reflect the former reality. We'll explore how we can take a set of
articles from an online community and winnow out the stuff we feel is
unworthy. We'll explore some of the machine learning tools that are just
a &amp;quot;pip install&amp;quot; away, such as scikit-learn and nltk.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ned Jackson Lovely</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/enough-machine-learning-to-make-hacker-news-reada.html</guid></item><item><title>Fan-in and Fan-out: The crucial components of concurrency</title><link>https://pyvideo.org/pycon-us-2014/fan-in-and-fan-out-the-crucial-components-of-con.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The most important yet underappreciated parts of concurrent APIs are
good constructs for fan-out (one thread spawns others) and fan-in (many
threads join together). This talk will show examples of fan-in and
fan-out. It will cover the successes and shortcomings of APIs that
provide concurrency. Finally, we'll discuss how the async model of
Tulip/PEP3156 is the ultimate API. The future is bright!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brett Slatkin</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/fan-in-and-fan-out-the-crucial-components-of-con.html</guid></item><item><title>Faster Python Programs through Optimization</title><link>https://pyvideo.org/pycon-us-2014/faster-python-programs-through-optimization-1.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Although Python programs may be slow for certain types of tasks, there
are many different ways to improve the performance. This tutorial will
introduce optimization strategies and demonstrate techniques to
implement them. Another objective of this course is to help the
participants to gain the ability to decide what might be the optimal
solution for a specific performance problem.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike MÃ¼ller</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/faster-python-programs-through-optimization-1.html</guid></item><item><title>Flask by Example</title><link>https://pyvideo.org/pycon-us-2014/flask-by-example.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Flask is a web framework for Python based on Werkzeug, Jinja 2 and good
intentions. It is considered a micro-framework, but don't get the
&amp;quot;micro&amp;quot; part fool you; Flask can do everything others can do, many times
in a simpler, leaner way. In this tutorial session you will follow me as
I write a complete web application in front of your eyes using the core
framework and a handful of extensions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miguel Grinberg</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/flask-by-example.html</guid></item><item><title>For Lack of a Better Name(server): DNS Explained.</title><link>https://pyvideo.org/pycon-us-2014/for-lack-of-a-better-nameserver-dns-explained.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;You've deployed! But your friends can't see it - what's wrong? I'm
betting DNS. Maybe you've fixed a couple of entries, point some records
to hostnames, waited patiently for new domains to resolve only to notice
your nameservers are incorrect. But what actually goes on with DNS? Come
to this talk to find out how DNS works, and how to interact and create a
DNS with Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lynn Root</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/for-lack-of-a-better-nameserver-dns-explained.html</guid></item><item><title>Generators: The Final Frontier</title><link>https://pyvideo.org/pycon-us-2014/generators-the-final-frontier.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python generators have long been useful for solving all sorts of
problems involving iteration and data flow. However, one of their more
powerful uses is in customizing various aspects of program control flow.
In this tutorial, we'll look at some more exotic uses of generators such
as writing context managers, inlining callback functions, eliminating
recursion, implementing actors, and more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Beazley</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/generators-the-final-frontier.html</guid></item><item><title>Getting Hy on Python: How to implement a Lisp front-end to Python</title><link>https://pyvideo.org/pycon-us-2014/getting-hy-on-python-how-to-implement-a-lisp-fro.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will cover the internals of Python, such AST, Import hooks,
creating a console, and a very brief overview of Python internal formats
(such as pyc files), by way of looking over the implementation of a Lisp
called &amp;quot;Hy&amp;quot;. No Lisp knowledge is required.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Tagliamonte</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/getting-hy-on-python-how-to-implement-a-lisp-fro.html</guid></item><item><title>Getting Started with SaltStack</title><link>https://pyvideo.org/pycon-us-2014/getting-started-with-saltstack.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Salt is the new kid on the block in the configuration management space.
Unlike the Ruby-based Chef and Puppet, Salt is written in Python, making
it easy to debug and extend for Python developers. This talk will
introduce Salt as well as explore some of the things that make it
unique.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Baumgartner</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/getting-started-with-saltstack.html</guid></item><item><title>Hands-on with Pydata: how to build a minimal</title><link>https://pyvideo.org/pycon-us-2014/hands-on-with-pydata-how-to-build-a-minimal.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this tutorial we'll set ourselves the goal of building a minimal
recommendation engine, and in the process learn about Python's excellent
Pydata and related projects and tools: NumPy, pandas, and the IPython
Notebook.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Fricke</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/hands-on-with-pydata-how-to-build-a-minimal.html</guid></item><item><title>Hello Physical World: A Crash Course on the Internet of Things</title><link>https://pyvideo.org/pycon-us-2014/hello-physical-world-a-crash-course-on-the-inter.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Live and direct from the PyCon stage learn how to connect your things to
the internet! In this talk we'll connect physical things and people to
the internet. In this talk we will live code a tiny web server that
interacts with the physical world via sensors, actuators, video, and
audio. We will explore tools in the Python ecosystem that make this
possible and show how they work together.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katherine Scott</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/hello-physical-world-a-crash-course-on-the-inter.html</guid></item><item><title>How to Get Started with Machine Learning</title><link>https://pyvideo.org/pycon-us-2014/how-to-get-started-with-machine-learning.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Provide an introduction to machine learning to clarify what it is, what
it's not and how it fits into this picture of all the hot topics around
data analytics and big data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Melanie Warrick</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/how-to-get-started-with-machine-learning.html</guid></item><item><title>Import-ant Decisions</title><link>https://pyvideo.org/pycon-us-2014/import-ant-decisions.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Suppose &lt;tt class="docutils literal"&gt;import&lt;/tt&gt; didn't exist, and we had to invent it from scratch.
We'll look at the problem - code sharing and reuse across modules - and
different ways we could solve it. We'll come up with &lt;tt class="docutils literal"&gt;import&lt;/tt&gt; from
parallel universes and then reinvent python's actual implementation.
Finally, we'll import - using python's design - without using the
&lt;tt class="docutils literal"&gt;import&lt;/tt&gt; keyword.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allison Kaptur</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/import-ant-decisions.html</guid></item><item><title>Improving automated testing with py.test</title><link>https://pyvideo.org/pycon-us-2014/improving-automated-testing-with-pytest.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Many people learn testing through the JUnit/PYUnit paradigm. Lately,
py.test's new fixture mechanisms have gained traction among many
Pythonistas. This tutorial explores py.test discusses key strategies how
to benefit from using py.test for your existing unittest/nose based code
bases.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Holger Krekel</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/improving-automated-testing-with-pytest.html</guid></item><item><title>Introduction to game programming</title><link>https://pyvideo.org/pycon-us-2014/introduction-to-game-programming.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This tutorial will walk the attendees through development of a simple
game using PyGame with time left over for some experimentation and
exploration of different types of games.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Jones</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/introduction-to-game-programming.html</guid></item></channel></rss>