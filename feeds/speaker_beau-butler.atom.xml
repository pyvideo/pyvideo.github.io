<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_beau-butler.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-09-13T00:00:00+00:00</updated><entry><title>Intro to flask-security</title><link href="https://pyvideo.org/kiwi-pycon-2014/intro-to-flask-security.html" rel="alternate"></link><published>2014-09-13T00:00:00+00:00</published><updated>2014-09-13T00:00:00+00:00</updated><author><name>Beau Butler</name></author><id>tag:pyvideo.org,2014-09-13:kiwi-pycon-2014/intro-to-flask-security.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Turning your web app into a webapp-with-users looks like an onerous
yak-shaving mission, full of DNS and email configuration, password
databases, and so on. We will use the great flask-security metamodule,
and a little bit of glue, to show just how easy this formerly-annoying
process can be, from go to whoa.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Say you’re using Flask, and your happy little app now suddenly needs an
endpoint user-secured, Because Reasons… what do you do?&lt;/p&gt;
&lt;p&gt;Either you hardcode a password in, hook up basic-auth, and go home,&lt;/p&gt;
&lt;p&gt;OR, you face the fun of users, roles, the users need to sign up, now
they’ve forgotten their passwords again, and so on. There’s really no
middle ground.&lt;/p&gt;
&lt;p&gt;Going from &amp;quot;open season&amp;quot; to &amp;quot;i want this function protected with a role
permission&amp;quot; is a big old yak-shaving mission, full of DNS configuration,
the dismaying realisation that now your app has to send email, and so
on.&lt;/p&gt;
&lt;p&gt;In the spirit of self-sufficiency and ‘DevOps’, this talk takes you from
a bare 'hello world' flask app, through to a bare 'hello world' app with
role protection for endpoints. We’ll start with a domain name and a VPS,
and end with an app that people can sign up to.&lt;/p&gt;
&lt;p&gt;We'll be using the great flask-security metamodule, and a little bit of
glue, to show just how easy this formerly-annoying process can be, from
go to whoa.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/beau-butler-intro-to-flask-security"&gt;https://speakerdeck.com/nzpug/beau-butler-intro-to-flask-security&lt;/a&gt;&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>