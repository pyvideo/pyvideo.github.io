<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 11 Jul 2019 00:00:00 +0000</lastBuildDate><item><title>Building Data-Driven Client Relationship Management in Banking with Python</title><link>https://pyvideo.org/europython-2019/building-data-driven-client-relationship-management-in-banking-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is a case study that documents how a small data science team in a
big bank took on the challenge to transform a fragmented sales process
into a data-driven one using Python and machine learning.&lt;/p&gt;
&lt;p&gt;This talk outlines the various ways Python has been instrumental in
delivering a production solution that serves advisers and relationship
manager on a continuous basis.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The Challenge&lt;/div&gt;
&lt;div class="line"&gt;- A bank has many clients with diverse needs and cost pressures mean
fewer advisers resulting in reduced client coverage.&lt;/div&gt;
&lt;div class="line"&gt;- Multiple sales channels and mixed service levels meant sales
processes were uncoordinated and driven by heuristics and often very
subjective.&lt;/div&gt;
&lt;div class="line"&gt;- And... Excel sheets everywhere!&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Solution&lt;/div&gt;
&lt;div class="line"&gt;- Go data-driven!&lt;/div&gt;
&lt;div class="line"&gt;- Learn from clients and understand product usage&lt;/div&gt;
&lt;div class="line"&gt;- Empower and inform advisers and call centre agents&lt;/div&gt;
&lt;div class="line"&gt;- Build a front-to-back sales process (no more Excels!)&lt;/div&gt;
&lt;div class="line"&gt;- How? With Python!&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The Python Bits&lt;/div&gt;
&lt;div class="line"&gt;- Scikit learn machine learning pipelines that implement two distinct
approaches to product affinity in banking and wealth management&lt;/div&gt;
&lt;div class="line"&gt;- SQL Alchemy based API for data engineering and rapid prototyping of
analytics&lt;/div&gt;
&lt;div class="line"&gt;- Pandas and Jupyter for development and collaboration&lt;/div&gt;
&lt;div class="line"&gt;- Luigi pipeline for daily processing of millions of transactions and
engineering features&lt;/div&gt;
&lt;div class="line"&gt;- Extracting features from text with NLP (Spacy)&lt;/div&gt;
&lt;div class="line"&gt;- Delivering machine learning interpretability in production, e.g.
with Random Forests and treeinterpreter&lt;/div&gt;
&lt;div class="line"&gt;- A Python module that we built with all the reusable bits: building
training and prediction datasets, developing pipelines, generating
monitoring data and enabling explainability&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Hughes</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:europython-2019/building-data-driven-client-relationship-management-in-banking-with-python.html</guid><category>Business Cases</category><category>Data Science</category><category>Machine-Learning</category><category>Scientific Libraries (Numpy/Pandas/SciKit/...)</category><category>Windows</category></item><item><title>Using Python to Teach Computational Finance</title><link>https://pyvideo.org/europython-2019/using-python-to-teach-computational-finance.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this demo-driven session, we will introduce the Probo package for
teaching Python programming and concepts from computational finance to
beginning programmers in the domain of finance. We'll show how Python is
the perfect tool for teaching computational thinking to develop deeper
quantitative reasoning. Jupyter notebooks, together with Python packages
such as NumPy and Pandas, provide the ideal learning environment.&lt;/p&gt;
&lt;p&gt;We will start by introducing the Probo package for derivative pricing
and hedging. We will demo the pricing of European and American options
via the famous Black-Scholes option pricing model. Other examples
include Monte Carlo simulation and binomial trees. Using Probo, the
answers to derivative pricing problems are right at the students'
fingertips. Students can operationalize their understanding by going
directly from the mathematics of derivative pricing theories to their
implementation in clean and simple code.&lt;/p&gt;
&lt;p&gt;We will end with a demonstration using Probo to teach the concept of
dynamic hedging. Dynamic hedging is perhaps &lt;em&gt;the&lt;/em&gt; crucial concept in
modern financial derivatives theory. It is also one of the most
difficult concepts to grasp. We'll show how developing deeper intuition
is possible with computational thinking via Monte Carlo simulation of
delta-hedging. By leveraging the power and simplicity of Python and
Jupyter notebooks, the Probo package provides the ideal learning
platform for students of computational finance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tyler Brough</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:europython-2019/using-python-to-teach-computational-finance.html</guid><category>Beginners</category><category>Business</category><category>Business Cases</category><category>Education</category><category>Jupyter</category></item></channel></rss>