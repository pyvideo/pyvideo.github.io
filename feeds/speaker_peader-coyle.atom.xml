<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_peader-coyle.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-03-26T00:00:00+00:00</updated><entry><title>The PyData map: Presenting a map of the landscape of PyData tools</title><link href="https://pyvideo.org/pydata-amsterdam-2016/the-pydata-map-presenting-a-map-of-the-landscape-of-pydata-tools.html" rel="alternate"></link><published>2016-03-26T00:00:00+00:00</published><updated>2016-03-26T00:00:00+00:00</updated><author><name>Peader Coyle</name></author><id>tag:pyvideo.org,2016-03-26:pydata-amsterdam-2016/the-pydata-map-presenting-a-map-of-the-landscape-of-pydata-tools.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Amsterdam 2016&lt;/p&gt;
&lt;p&gt;The PyData ecosystem is growing rapidly, with existing tools maturing and exciting new tools appearing on a regular basis. This talk will examine the crowded PyData ecosystem and bring some clarity to which Python data tool is the right one to reach for on any given analysis. It will focus on use-cases for pure python, toolz, Numpy, Pandas, Blaze, xray, bcolz, Castra, Dask, and Spark.&lt;/p&gt;
&lt;p&gt;The PyData ecosystem can be a bit confusing for those new to Python, or even experienced programmers moving to Python for its excellent data analysis capabilities.&lt;/p&gt;
&lt;p&gt;We often get confused by the PyData Ecosystem. This will present a detailed look with examples of some of the cool tools out there.&lt;/p&gt;
&lt;p&gt;It will touch on pure python, toolz, Numpy, Pandas, Blaze, xray, bcolz, Dask, and Spark, with a focus on the use-cases for each one.&lt;/p&gt;
&lt;p&gt;What do you do when your data doesn't fit in-memory, when do you need to use a functional programming approach - when do you need a compression? Where does Dask fit into all of this? When do you need Spark?&lt;/p&gt;
&lt;p&gt;And discuss the differences in how data is stored and where you'd use different tools. Peadar will also provide a map of the landscape inspired by the famous Machine Learning flow chart from Andreas Mueller.&lt;/p&gt;
&lt;p&gt;GitHub available here: &lt;a class="reference external" href="https://github.com/springcoil/pydataamsterdamkeynote"&gt;https://github.com/springcoil/pydataamsterdamkeynote&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>