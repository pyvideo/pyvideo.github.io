<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 11 Mar 2011 00:00:00 +0000</lastBuildDate><item><title>Documentation Driven Development</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--documentation-driven-development.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Documentation Driven Development&lt;/p&gt;
&lt;p&gt;Presented by Corey Oordt&lt;/p&gt;
&lt;p&gt;Developers usually leave documentation as a final step; one that they
will get to as soon as they are forced with threats of bodily harm.
Writing the documentation before writing the code, can lead to better
code, better implementation and, of course, actual documentation.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;&amp;quot;Documentation Driven Design&amp;quot; was coined by our team after noticing how
documenting code dramatically changed how we approached problems. By
writing the documentation first, you saw the problem from a different
perspective: the end user or programmer. This talk will focus on a few
items:&lt;/p&gt;
&lt;p&gt;Usable, not just functional. Many times developers write code that
solves the problem, but is a real pain in the neck to use. Writing the
documentation first demonstrates how easy or difficult it is to
implement the solution right away.&lt;/p&gt;
&lt;p&gt;A guide to what to write. Many developers leave documentation undone
because they don't know how to approach it. Having some idea of what
needs writing can make the task seem less daunting.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Corey Oordt</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--documentation-driven-development.html</guid><category>documentation</category><category>documentationdrivendesign</category><category>pycon</category><category>pycon2011</category></item><item><title>Pluggable Django Patterns</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--pluggable-django-patterns.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pluggable Django Patterns&lt;/p&gt;
&lt;p&gt;Presented by Corey Oordt&lt;/p&gt;
&lt;p&gt;Pluggable or reusable applications are a key feature of Django, but
there is little guidance on writing them well. We'll dig into the
different types of Django applications and coding patterns that make
writing a reusable application easier. The talk also covers ways to
avoid common implementation gotchas.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Reusable, or pluggable, applications are a powerful feature of Django.
Your code can do more if written with a few ideas and techniques in
mind. We'll cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The four qualities of a pluggable application&lt;/li&gt;
&lt;li&gt;The three types of Django applications&lt;/li&gt;
&lt;li&gt;Ten common situations in implementing reusable code and coding
patterns to handle them&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Corey Oordt</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--pluggable-django-patterns.html</guid><category>patterns</category><category>pluggable</category><category>pycon</category><category>pycon2011</category></item></channel></rss>