<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jakub-wasielak.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-07-10T00:00:00+00:00</updated><entry><title>Python Packaging - current state and overview</title><link href="https://pyvideo.org/europython-2017/python-packaging-current-state-and-overview.html" rel="alternate"></link><published>2017-07-10T00:00:00+00:00</published><updated>2017-07-10T00:00:00+00:00</updated><author><name>Jakub Wasielak</name></author><id>tag:pyvideo.org,2017-07-10:europython-2017/python-packaging-current-state-and-overview.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Historically, Python packaging has been a source of significant pain
for even the most devoted Python enthusiasts. I've found myself in
the situation, where I did know the basic concepts behind the tools,
but despite that only thing I could do was following tutorials. That
was the time to change it and that's the reason this presentation was
written.&lt;/p&gt;
&lt;p&gt;In this talk, I'll provide a quick overview of the current state of
Python packaging tools. I'll mostly focus on setuptools, pip and
wheels, putting an emphasis on their superiority over their
precursors. I'll also list down the honorable mentions of tools worth
knowing. Then I'll share examples of how you can use the features of
the Setuptools library - those well known and those we use when
pip-installing packages, but most of us can't name them.&lt;/p&gt;
&lt;p&gt;The point of this presentation is to explain how to use tools which
are all there, just waiting to make developing, testing, and
distributing our Python packages easier. Doesn't matter if you're a
Python expert or a beginner - the knowledge covered by this
presentation will be useful despite your level.&lt;/p&gt;
</summary></entry><entry><title>NoCaptcha - boty zostają za drzwiami</title><link href="https://pyvideo.org/pycon-pl-2013/nocaptcha-boty-zostaja-za-drzwiami.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Jakub Wasielak</name></author><id>tag:pyvideo.org,2013-10-17:pycon-pl-2013/nocaptcha-boty-zostaja-za-drzwiami.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tytuł/Topic: NoCaptcha - boty zostają za drzwiami
Prelegent/Speaker: Jakub Wasielak&lt;/p&gt;
&lt;p&gt;Nikt nie lubi captchy, lecz wciąż jest ona przerażająco popularna. Wielu programistom wydaje się, że jest to jedyny sposób, aby przez ich formularz nie przechodziły tysiące botów, a użytkownicy są zmuszani do wielokrotnego odczytywania kosmicznych znaczków. NoCaptcha to nowe podejście do zabezpieczeń formularza oraz gotowa do użycia paczka w Django.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pl.pycon.org/2013/pl/agenda"&gt;http://pl.pycon.org/2013/pl/agenda&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>