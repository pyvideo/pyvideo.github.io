<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jonathan-schemoul.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-06-13T00:00:00+00:00</updated><entry><title>Handling geo located data in real time using Python</title><link href="https://pyvideo.org/pycon-israel-2017/handling-geo-located-data-in-real-time-using-python.html" rel="alternate"></link><published>2017-06-13T00:00:00+00:00</published><updated>2017-06-13T00:00:00+00:00</updated><author><name>Jonathan Schemoul</name></author><id>tag:pyvideo.org,2017-06-13:pycon-israel-2017/handling-geo-located-data-in-real-time-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When we get geographic data from sensors, be it indoor positioning, GPS, or anything else, we need to handle it correctly. We (of course) have a lot of tools in Python to do so. What if you get a ton of this data coming continuously and have to display it, make real-time calculations, controls, reports and other operations ? Let's see one of the possible approaches to this problem using AsyncIO, MongoDB, a web app and Pandas reports, including how I implemented it for some clients (a live demo, if internet access permits it).&lt;/p&gt;
</summary></entry><entry><title>Python as a brain for your devices (web developement, hardware 'IoT', etc.)</title><link href="https://pyvideo.org/pycon-israel-2016/python-as-a-brain-for-your-devices-web-developement-hardware-iot-etc.html" rel="alternate"></link><published>2016-09-20T00:00:00+00:00</published><updated>2016-09-20T00:00:00+00:00</updated><author><name>Jonathan Schemoul</name></author><id>tag:pyvideo.org,2016-09-20:pycon-israel-2016/python-as-a-brain-for-your-devices-web-developement-hardware-iot-etc.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How do you talk between python and embedded apps ? I'll show an example using the very popular ESP8266 micro-controller, with popular messaging protocols (json, mqtt, etc.) and web interface using react and material ui.&lt;/p&gt;
</summary></entry><entry><title>Flow-based programming made easy with PyF 2.0</title><link href="https://pyvideo.org/europython-2011/flow-based-programming-made-easy-with-pyf-20.html" rel="alternate"></link><published>2011-07-13T00:00:00+00:00</published><updated>2011-07-13T00:00:00+00:00</updated><author><name>Jonathan Schemoul</name></author><id>tag:pyvideo.org,2011-07-13:europython-2011/flow-based-programming-made-easy-with-pyf-20.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Jonathan Schemoul - 24 June 2011 in &amp;quot;Training Pizza
Napoli &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyF is a python framework to ease flow based programming and allow
massive data crunching on multiple CPUs. We boast an optional web-based
interface to visually design processing tubes, batch scheduling, report
generation and email alerts.&lt;/p&gt;
&lt;p&gt;The Framework is easily extensible by writing plugins, a lot of features
like data persistence, reporting and web scrapping are already part of
the ecosystem.&lt;/p&gt;
&lt;p&gt;This presentation will focus on an introduction to PyF architecture and
higher-level designer ui use and how it could be useful to you.&lt;/p&gt;
&lt;p&gt;If available, an additional training session will focus on working with
the framework to create your own flow-based processes and plugins.&lt;/p&gt;
&lt;p&gt;For more information: &lt;a class="reference external" href="http://www.pyfproject.org/"&gt;http://www.pyfproject.org/&lt;/a&gt;&lt;/p&gt;
</summary><category term="architecture"></category><category term="design"></category><category term="framework"></category><category term="processing"></category><category term="ui"></category><category term="web"></category></entry><entry><title>La domotique en Python et HTML5</title><link href="https://pyvideo.org/pycon-fr-2013/la-domotique-en-python-et-html5.html" rel="alternate"></link><published>2013-11-30T00:00:00+00:00</published><updated>2013-11-30T00:00:00+00:00</updated><author><name>Jonathan Schemoul</name></author><id>tag:pyvideo.org,2013-11-30:pycon-fr-2013/la-domotique-en-python-et-html5.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;On verra comment architecturer une solution domotique simple en python
en utilisant des périphériques électroniques sur une carte avec linux
embarquée comme un Raspberry Pi ou une Beagle Bone Black.&lt;/p&gt;
&lt;p&gt;On verra également comment mettre en place un système d'évènements et un
moteur de règles en python pour la gestion domotique.&lt;/p&gt;
</summary></entry></feed>