<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 07 Oct 2017 00:00:00 +0000</lastBuildDate><item><title>A Carpenter's Approach to Teaching Python</title><link>https://pyvideo.org/florida-pycon-2017/a-carpenters-approach-to-teaching-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using evidence from Data and Software Carpentry’s training impact
surveys, this presentation explores training as a way to onboard
individuals to use Python. Attendees will walk away with a perspective
on training approaches and a feeling of empowerment to build a diverse
Python community through training. The only prerequisite knowledge you
need is your own desire to achieve equity in the Python community.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kari Jordan</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/a-carpenters-approach-to-teaching-python.html</guid></item><item><title>Detecting Asteroids with Neural Networks</title><link>https://pyvideo.org/florida-pycon-2017/detecting-asteroids-with-neural-networks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TensorFlow is an open-source software library for Machine Intelligence.
In this talk, we will learn how to use it to build and train a neural
network with the goal of correctly identifying asteroids in
astrophotography data. The dataset used will be from the Sloan Digital
Sky Survey, one of the most ambitious and influential surveys in the
history of astronomy.&lt;/p&gt;
&lt;p&gt;Using this data, we will learn how to create and featurize a training
dataset, build and fit a neural network, and train our model to
correctly identify asteroids visible from Earth.&lt;/p&gt;
&lt;p&gt;This talk is for a wide range of Python developers, from those who have
heard of machine learning, but have never experimented with it, to those
who have significant experience with neural networks, but have never
used TensorFlow before.&lt;/p&gt;
&lt;p&gt;The audience should have some basic Python knowledge, but no formal or
informal experience with machine intelligence is assumed.&lt;/p&gt;
&lt;p&gt;After watching this talk, the audience should know how to determine and
develop features, how and why to build a training dataset, how to build
and train a neural network, and some other approaches to supervised
learning.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/detecting-asteroids-with-neural-networks.html</guid></item><item><title>Feminism &amp; Functional Programming: When Paradigms Shift</title><link>https://pyvideo.org/florida-pycon-2017/feminism-functional-programming-when-paradigms-shift.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Today, developers play a bigger role than ever in shaping culture.
Often, those who don’t identify with the people who create a culture,
don’t have power within that culture. This is why diversity in tech is
so important. I’ll talk about controversial topics like feminism &amp;amp;
functional programming…&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cassandra Wilcox</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/feminism-functional-programming-when-paradigms-shift.html</guid></item><item><title>Geospatial Data Fusion - Beyond Bare Earth</title><link>https://pyvideo.org/florida-pycon-2017/geospatial-data-fusion-beyond-bare-earth.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Point clouds make for compelling 3D imagery, but there’s real
engineering information in there too! See what we are mining out of
airborne laser scanning data to enhance the resilience of coastal
communities. Dr. Stephen Medeiros, a lecturer in Civil Engineering at
the University of Central Florida, describes his team’s work in
Geospatial Data Fusion for coastal resilience. Dr. Medeiros uses
airborne laser scanning data (aka lidar) to characterize surface
roughness for use in computer models for hurricane storm surge. All of
his students are required to learn and apply Python to their data
science tasks such as ETL, machine learning, and statistical analysis of
a variety of environmental data such as wind speeds, water levels, and
3D laser scanning point clouds. By describing the coastal floodplain in
intricate detail, Dr. Medeiros and his students study how the roughness
of the landscape influence hurricane winds and storm surge behavior.
This work is carried out on the STOKES HPC at the Advanced Research
Computing Center in UCF’s Institute for Simulation and Training.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephen Medeiros</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/geospatial-data-fusion-beyond-bare-earth.html</guid></item><item><title>How Positive are Your Tweets? Sentiment Analysis with Python</title><link>https://pyvideo.org/florida-pycon-2017/how-positive-are-your-tweets-sentiment-analysis-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever wonder if tweets that are on your time line are trending positively
or negatively? Would you like to be able to see in real time if this is
happening to you or to a specific topic or hashtag? This talk will show
you how you can stream your tweets using a library called ‘tweepy’,
store them in a data frame using ‘pandas’, and then extract subjectivity
and polarity using textblob. Additionally, this talk will show you how
this can be done with python with minimal lines of code compared to this
same function being performed with R or SAS. After walking through the
steps, we will perform an actual live demo of capturing tweets using
audience participation.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ahmed Sherif</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/how-positive-are-your-tweets-sentiment-analysis-with-python.html</guid></item><item><title>How to Quickly Build Feature-Rich Interactive Command-Line Applications with cmd2</title><link>https://pyvideo.org/florida-pycon-2017/how-to-quickly-build-feature-rich-interactive-command-line-applications-with-cmd2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/python-cmd2/cmd2"&gt;cmd2&lt;/a&gt; is a tool for building
interactive command line applications in Python. Its goal is to make it
quick and easy for developers to build feature-rich and user-friendly
interactive command line applications. It provides a simple API which is
an extension of Python’s built-in
&lt;a class="reference external" href="https://docs.python.org/3/library/cmd.html"&gt;cmd&lt;/a&gt; module. cmd2
provides a wealth of features on top of cmd to make your life easier and
eliminates much of the boilerplate code which would be necessary when
using cmd.&lt;/p&gt;
&lt;p&gt;Main Features&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Searchable command history (&lt;tt class="docutils literal"&gt;history&lt;/tt&gt; command and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;lt;Ctrl&amp;gt;+r&lt;/span&gt;&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Text file scripting of your application with &lt;tt class="docutils literal"&gt;load&lt;/tt&gt; (&lt;tt class="docutils literal"&gt;&amp;#64;&lt;/tt&gt;) and
&lt;tt class="docutils literal"&gt;_relative_load&lt;/tt&gt; (&lt;tt class="docutils literal"&gt;&amp;#64;&amp;#64;&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Python scripting of your application with &lt;tt class="docutils literal"&gt;pyscript&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Run shell commands with &lt;tt class="docutils literal"&gt;!&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Pipe command output to shell commands with &lt;tt class="docutils literal"&gt;|&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Redirect command output to file with &lt;tt class="docutils literal"&gt;&amp;gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&amp;gt;&amp;gt;&lt;/tt&gt;; input from file
with &lt;tt class="docutils literal"&gt;&amp;lt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Bare &lt;tt class="docutils literal"&gt;&amp;gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&amp;gt;&amp;gt;&lt;/tt&gt; with no filename send output to paste buffer
(clipboard)&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;py&lt;/tt&gt; enters interactive Python console (opt-in &lt;tt class="docutils literal"&gt;ipy&lt;/tt&gt; for IPython
console)&lt;/li&gt;
&lt;li&gt;Multi-line, case-insensitive, and abbreviated commands&lt;/li&gt;
&lt;li&gt;Special-character command shortcuts (beyond cmd’s &lt;tt class="docutils literal"&gt;&amp;#64;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;!&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Settable environment parameters&lt;/li&gt;
&lt;li&gt;Parsing commands with flags&lt;/li&gt;
&lt;li&gt;Unicode character support ( &lt;em&gt;Python 3 only&lt;/em&gt; )&lt;/li&gt;
&lt;li&gt;Good tab-completion of commands, file system paths, and shell
commands&lt;/li&gt;
&lt;li&gt;Python 2.7 and 3.3+ support&lt;/li&gt;
&lt;li&gt;Linux, macOS and Windows support&lt;/li&gt;
&lt;li&gt;Trivial to provide built-in help for all commands&lt;/li&gt;
&lt;li&gt;Built-in regression testing framework for your applications
(transcript-based testing)&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Todd Leonhardt</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/how-to-quickly-build-feature-rich-interactive-command-line-applications-with-cmd2.html</guid></item><item><title>Not for One But for All</title><link>https://pyvideo.org/florida-pycon-2017/not-for-one-but-for-all.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a booming language in the United States and finds itself
integrated in practically every discipline involving software
engineering. When new resources come out for us to develop better or
faster we tend to forget that we build products for people who aren’t
like us or who aren’t in situations like us. This is especially true of
the web. In this talk, we will discuss how to increase our web apps
accessibility through handy techniques and tools and how you can make
use of the features of web frameworks like Flask or Django to make
anyone coming to our spot on the Internet a bit more pleasant for
everyone without it costing much more time.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Prince Wilson</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/not-for-one-but-for-all.html</guid></item><item><title>Postgres at Any Scale</title><link>https://pyvideo.org/florida-pycon-2017/postgres-at-any-scale.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Keeping your app performant is table stakes these days, but it doesn’t
have to be rocket science. We’ll look at the basics for small, medium,
and even terabytes of data for what you need to do to keep things
performing well. We’ll start with the basics you need to know as an app
developer about interacting with your database, then dig into how you
can start to analyze performance. We’ll look at things you need to know
for a small application, then the things you should be cautious of as
you start to layer in other items you need to be aware of for
performance including:&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Cache hit ratio&lt;/div&gt;
&lt;div class="line"&gt;Index hit ratio&lt;/div&gt;
&lt;div class="line"&gt;Proper use of indexes&lt;/div&gt;
&lt;div class="line"&gt;Bloat&lt;/div&gt;
&lt;div class="line"&gt;Efficient joins&lt;/div&gt;
&lt;div class="line"&gt;Sharding&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Craig Kierstens</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/postgres-at-any-scale.html</guid></item><item><title>Scraping Data from Websites</title><link>https://pyvideo.org/florida-pycon-2017/scraping-data-from-websites.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I am going to show you how to scrape data from websites
using the module BeautifulSoup. This talk assumes you know some basic
python syntax and data modeling tools. After this talk you should be
able to parse the data on a website and store whatever you need.&lt;/p&gt;
&lt;p&gt;There are different ways that we can scrape data from a website,
throughout the process we will take care not to overburden the website
and not scrape anything forbidden by the web server. We are going to use
a public library for python called “Beautiful Soup”, this is a really
good tool when we want to take some information from a site. With this
we also are going to mention how can we store this data into a CSV and
Json file.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miguel Tannous</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/scraping-data-from-websites.html</guid></item><item><title>Snooping on Digital Electronics with Machine Learning</title><link>https://pyvideo.org/florida-pycon-2017/snooping-on-digital-electronics-with-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever wondered what the chips in your electronics are saying? I trained a
classifier that can decode signals based on their tapped-in oscilloscope
voltage traces. Assuming no knowledge of machine learning, I’ll cover
which classifiers worked and which didn’t, and demonstrate some
snooping.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catherine Holloway</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/snooping-on-digital-electronics-with-machine-learning.html</guid></item><item><title>Software Craftsmanship</title><link>https://pyvideo.org/florida-pycon-2017/software-craftsmanship.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As our profession grows and matures, it becomes more and more important
for us to develop a sense of what it means to be a software
professional. Analogies to existing professions are easily drawn.
Precision and analytical problem solving are essential. So are we
engineers? Creativity and willingness to try things we’ve never done are
core to success. So are we artists? We are a new breed of professional
that draws on but is unique from what has come before.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Adsit</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/software-craftsmanship.html</guid></item><item><title>Stand Out</title><link>https://pyvideo.org/florida-pycon-2017/stand-out.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you can code your way out of a paper bag (or even if you can’t) and
want to differentiate yourself in an organization, you can. Come and
learn tips that can help you to Stand Out in your organization. These
tips can help you successfully lead changes big or small, or simply
improve your ability to get people to listen to your suggestions. All of
these can help you to Stand Out in your organization.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Doug Faist</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/stand-out.html</guid></item><item><title>Swiss Train Deployments</title><link>https://pyvideo.org/florida-pycon-2017/swiss-train-deployments.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A Swiss Train deployment is a general-purpose deployment philosophy
based on ideas from the Ember.js development process, modern browser
releases, and various open-source project releases, such as the Ubuntu
project.&lt;/p&gt;
&lt;p&gt;In this talk, we’ll explore the motivation for a Swiss Train style
deployment, the problems which it seeks to solve in existing deployment
philosophies, and the core philosophy of a Swiss Train deployment.&lt;/p&gt;
&lt;p&gt;This talk is for developers who are responsible for deploying code (not
just Python!) to production in a timely manner, while still providing a
stable ecosystem for their users.&lt;/p&gt;
&lt;p&gt;The only background knowledge required is some amount of experience
“deploying” code or releasing applications, whatever that may mean for
an individual developer (essentially, this will allow the audience
member to better empathize with the inefficiencies of current deployment
philosophies (or lack thereof) and highlight the advantage of the
proposed philosophy.&lt;/p&gt;
&lt;p&gt;After watching this talk, the audience should be able to: – understand
why it is important to have a deployment philosophy – see the
inefficiencies in current deployment philosophies – present a strong
argument for adopting Swiss Train style deployments – be able to
implement the deployment philosophy in their own workflow.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/swiss-train-deployments.html</guid></item><item><title>The JSON Transformations Project</title><link>https://pyvideo.org/florida-pycon-2017/the-json-transformations-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In 2017 there is structured data everywhere, and new data sources emerge
each day. There are lots of Python tools for processing this data:
Analytics, statistics, visualization, natural language processing,
machine learning, etc. But recent experiments have demonstrated that
there are untapped opportunities for innovation in new methods of
providing users quick access to these disparate data sources,
transforming that data, and streaming it into the wealth of existing
Python tools. This talk will discuss some of those opportunities and
demonstrate related, lesser-known, yet valuable community- based Python
tools that have just recently emerged and are now available for free.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Peterson</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/the-json-transformations-project.html</guid></item><item><title>Using Django with Modern SPA Frameworks</title><link>https://pyvideo.org/florida-pycon-2017/using-django-with-modern-spa-frameworks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Traditional web frameworks are over. Done. Right? Wrong! In this talk I
will show you how I combined an excellent Single Page Application
JavaScript framework (Vue.js) with Django and the amazing Django Rest
Framework to get the best possible results, after evaluating other
languages and frameworks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bo Milanovich</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/using-django-with-modern-spa-frameworks.html</guid></item><item><title>Using Python for Garbage Collection</title><link>https://pyvideo.org/florida-pycon-2017/using-python-for-garbage-collection.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the major things that my wife and I have looked for wherever we
move is natural beauty and a good collection of public green space. So,
when I walked by a park and creek reserve on the north end of our city,
only to find more trash than green space, I was mortified. Working
together with several individuals from Reddit we got the park to a
reasonably clean state, removing over 400 gallons of trash. The
experience made me realize, however, with over 480 parks, that as our
city grew we needed a more self-sustaining solution to this problem.&lt;/p&gt;
&lt;p&gt;After sharing the story on Reddit, one thing that struck me was how many
people were eager and capable of physically helping with the problem but
had insufficient supplies or funds, and how many people couldn’t
physically help, but were eager to throw money at the problem. I’m not
political, and I certainly don’t have the time or ability to clean up
480+ parks, but like many of you, I know how to throw some code
together. So I decided to build a tool that would connect those
individuals with the funds to help to those with the time and physical
ability. This talk is about how I created that tool, which consists of
REST API, Website, and Android/IOS application using only Python and
Open Source technologies. Finally, it is about how all of us as
programmers have the power to make a visibly positive impact in our
community even from the comfort and familiarity of our keyboards.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Timothy Crosley</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/using-python-for-garbage-collection.html</guid></item><item><title>What, Where, When, How of Stream Processing</title><link>https://pyvideo.org/florida-pycon-2017/what-where-when-how-of-stream-processing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Currently, some popular data processing frameworks such as Apache Spark
consider batch and stream processing jobs independently. The APIs across
different processing systems such as Apache Spark or Apache Flink are
also different. This forces the end user to learn a potentially new
system every time. Apache Beam [1] addresses this problem by providing a
unified programming model that can be used for both batch and streaming
pipelines. The Beam SDK allows the user to execute these pipelines
against different execution engines. Currently, Apache Beam provides a
Java and Python SDK.&lt;/p&gt;
&lt;p&gt;In the talk, we start off by providing an overview of Apache Beam using
the Python SDK and the problems it tries to address from an end user’s
perspective. We cover the core programming constructs in the Beam model
such as PCollections, ParDo, GroupByKey, windowing, and triggers. We
describe how these constructs make it possible for pipelines to be
executed in a unified fashion in both batch and streaming. Then we use
examples to demonstrate these capabilities. The examples showcase using
Beam for stream processing and real time data analysis, and how Beam can
be used for feature engineering in some Machine Learning applications
using Tensorflow. Finally, we end with Beam’s vision of creating runner
and execution independent graphs using the Beam FnApi [2].&lt;/p&gt;
&lt;p&gt;Apache Beam [1] is a top level Apache project and is completely open
source. The code for Beam can be found on Github [3].&lt;/p&gt;
&lt;p&gt;[1] &lt;a class="reference external" href="https://beam.apache.org/"&gt;https://beam.apache.org/&lt;/a&gt; [2] &lt;a class="reference external" href="http://s.apache.org/beam-fn-api"&gt;http://s.apache.org/beam-fn-api&lt;/a&gt; [3]
&lt;a class="reference external" href="https://github.com/apache/beam"&gt;https://github.com/apache/beam&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sourabh Bajaj</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/what-where-when-how-of-stream-processing.html</guid></item><item><title>Your Brain on Python, Literally</title><link>https://pyvideo.org/florida-pycon-2017/your-brain-on-python-literally.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the near future, when you get sick, you’ll be able to get treatment
that’s been personally tailored to your exact situation. This is
possible thanks to the “Body-on-a-Chip”, an emerging field of study in
which human cells with your genetic material are grown into a miniature
system that mimics the function of every major organ in your body.&lt;/p&gt;
&lt;p&gt;These little systems generate a lot of data, and Python is a great way
to gain insight into what these systems are doing and how they’re
responding to a treatment. Data from the “brain” of these systems, a
“brain-on-a-chip” made from real human neurons, is some of the most
challenging and exciting data that there is to analyze. We can gain
insight into how these brain cells are ‘talking’ to each other and how
they’re reorganizing themselves, and how their ability to do these
things changes under different conditions. These insights can help guide
treatment decisions, give understanding into the basic nature of the
brain in general, and open up exciting new opportunities for
technologies that sound like they’re from science fiction.&lt;/p&gt;
&lt;p&gt;This beginner-friendly talk will walk you through how it’s done, from
getting the raw data to the final analysis, highlighting how everyone’s
favorite language makes the whole endeavor a breeze.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Jackson</dc:creator><pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-07:florida-pycon-2017/your-brain-on-python-literally.html</guid></item></channel></rss>