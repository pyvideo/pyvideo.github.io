<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_julia-grace.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-03-16T00:00:00+00:00</updated><entry><title>Between where the Tutorials end &amp; the Wild West begins: bringing new devs up to speed on Django</title><link href="https://pyvideo.org/djangocon-us-2012/between-where-the-tutorials-end-the-wild-west-b.html" rel="alternate"></link><published>2012-09-05T00:00:00+00:00</published><updated>2012-09-05T00:00:00+00:00</updated><author><name>Julia Grace</name></author><id>tag:pyvideo.org,2012-09-05:djangocon-us-2012/between-where-the-tutorials-end-the-wild-west-b.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;4 months ago I had never even seen a Django template. But I'm an
engineer; coming up to speed couldn't be that hard, right? Wrong. Doing
so efficiently and effectively was tough. I went from zero to production
ready code used by hundreds of users everyday. I'll present my missteps
and victories, laying out how other teams can quickly bring new team
members, who don't know Django, up to speed fast.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is a rough outline of how I learned Django; 4 months ago I was a
total outsider. Through this process I made mistakes, I had breakdowns,
but I walked away with a very solid understanding of Django and have
proudly have written thousands of lines of Python that are in production
today. You'll leave this talk with lessons on how to bring new
developers to your team up speed on Django.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Read the Django docs (obviously, right?)&lt;/li&gt;
&lt;li&gt;Follow along building the sample application (Polls, Choices, yada
yada).&lt;/li&gt;
&lt;li&gt;Decide to jump into writing production ready code. Have a breakdown.
Feel like you're trying to boil the ocean with a lighter.&lt;/li&gt;
&lt;li&gt;Realize that building the sample app was cute but nothing compared
to writing a real world application with real users and real
constraints.&lt;/li&gt;
&lt;li&gt;Re-read the docs.&lt;/li&gt;
&lt;li&gt;Build a real Django app -- no more Polls. I decided to build a
single-sign on application that allowed Etsy sellers to login and
view all the photos of their all their listings in one place. I will
give background as to why I chose this app, how I built it, and what
it taught me.&lt;/li&gt;
&lt;li&gt;Start biting off small pieces of production code to figure out what
the hell is going on. Learn about commonly used Django packages such
as django-registration, django-profiles, taggit, etc. - and what
happens when you need to modify the code of those packages.&lt;/li&gt;
&lt;li&gt;Attempt to boil the ocean, again. I needed to do a massive re-
architecture of our application, combining several independent
Django applications into a single, unified Django project. My first
attempt totally failed. I will discuss why this was and key novice
mistakes.&lt;/li&gt;
&lt;li&gt;Key realization that knowing Django != knowing Python&lt;/li&gt;
&lt;li&gt;&amp;quot;When you bang your head enough against the wall, eventually the
wall comes down&amp;quot; -- me. I built a pretty kick ass Django application
and I'm quite proud of.&lt;/li&gt;
&lt;li&gt;Celebrate (with lessons learned)!&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="django"></category></entry><entry><title>Location, Location, Location</title><link href="https://pyvideo.org/pycon-us-2013/location-location-location.html" rel="alternate"></link><published>2013-03-16T00:00:00+00:00</published><updated>2013-03-16T00:00:00+00:00</updated><author><name>Julia Grace</name></author><id>tag:pyvideo.org,2013-03-16:pycon-us-2013/location-location-location.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Are you building a Django application that needs to handle geographic
location data? Are you unsure how to tackle using spatial databases, how
to jump into using GeoDjango or how to allow users to query for data by,
for example, zip code? I'll go over how to use GeoDjango, lessons
learned in using spatial databases, and how I built an API exposing
distance query functionality.&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>