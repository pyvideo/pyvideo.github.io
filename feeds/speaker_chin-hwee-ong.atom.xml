<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Chin Hwee Ong</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_chin-hwee-ong.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2020-09-06T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Speed Up Your Data Processing</title><link href="https://pyvideo.org/europython-2020/speed-up-your-data-processing.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Chin Hwee Ong</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/speed-up-your-data-processing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Parallel and Asynchronous Programming in Data Science&lt;/p&gt;
&lt;p&gt;In a data science project, one of the biggest bottlenecks (in terms of time) is the constant wait for the data processing code to finish executing. Slow code, as well as connectivity issues, affect every step of a typical data science workflow …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Parallel and Asynchronous Programming in Data Science&lt;/p&gt;
&lt;p&gt;In a data science project, one of the biggest bottlenecks (in terms of time) is the constant wait for the data processing code to finish executing. Slow code, as well as connectivity issues, affect every step of a typical data science workflow — be it for network I/O operations or computation-driven workloads. In this talk, I will be sharing about common bottlenecks in data processing within a typical data science workflow, and exploring the use of parallel and asynchronous programming using concurrent.futures module in Python to speed up your data processing pipelines so that you could focus more on getting value out of your data. Through real-life analogies, you will learn about:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Sequential vs parallel processing,&lt;/li&gt;
&lt;li&gt;Synchronous vs asynchronous execution,&lt;/li&gt;
&lt;li&gt;Network I/O operations vs computation-driven workloads in a data science workflow,&lt;/li&gt;
&lt;li&gt;When is parallelism and asynchronous programming a good idea,&lt;/li&gt;
&lt;li&gt;How to implement parallel and asynchronous programming using concurrent.futures module to speed up your data processing pipelines&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This talk assumes basic understanding of data pipelines and data science workflows. While the main target audience are data scientists and engineers building data pipelines, the talk is designed such that anyone with a basic understanding of the Python language would be able to understand the illustrated concepts and use cases.&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="ASYNC / Concurreny"></category><category term="Data"></category><category term="Data Science"></category><category term="Multi-Processing"></category><category term="Multi-Threading"></category></entry><entry><title>Speed Up Your Data Processing: Parallel and Asynchronous Programming in Data Sci – PyCon Taiwan 2020</title><link href="https://pyvideo.org/pycon-taiwan-2020/speed-up-your-data-processing-parallel-and-asynchronous-programming-in-data-sci-pycon-taiwan-2020.html" rel="alternate"></link><published>2020-09-06T00:00:00+00:00</published><updated>2020-09-06T00:00:00+00:00</updated><author><name>Chin Hwee Ong</name></author><id>tag:pyvideo.org,2020-09-06:/pycon-taiwan-2020/speed-up-your-data-processing-parallel-and-asynchronous-programming-in-data-sci-pycon-taiwan-2020.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Day 2, R3 11:10–11:40&lt;/p&gt;
&lt;p&gt;Constantly waiting for your data processing code to finish executing? Through real-life stories, we will explore how to leverage on parallel and asynchronous programming in Python to speed up your data processing pipelines - so that you could focus more on getting value …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Day 2, R3 11:10–11:40&lt;/p&gt;
&lt;p&gt;Constantly waiting for your data processing code to finish executing? Through real-life stories, we will explore how to leverage on parallel and asynchronous programming in Python to speed up your data processing pipelines - so that you could focus more on getting value out of your data. While this talk assumes a basic understanding of processes in data pipelines and data science workflows, anyone with a basic understanding of the Python language would be able to understand the concepts and use cases illustrated with analogies.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://speakerdeck.com/ongchinhwee/speed-up-your-data-processing-parallel-and-asynchronous-programming-in-python"&gt;https://speakerdeck.com/ongchinhwee/speed-up-your-data-processing-parallel-and-asynchronous-programming-in-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Speaker: Chin Hwee Ong&lt;/p&gt;
&lt;p&gt;Ong Chin Hwee is a data engineer, aspiring polymath and Industry 4.0 enthusiast who happens to be interested in things that fly (and stuff that burn to keep things flying). Hailing from a background in aerospace engineering and computational modelling, Chin Hwee has experience working on innovative projects in collaboration with academia and industry partners. Chin Hwee is a contributor to the documentation for pandas 1.0 and enjoys sharing her experiences at meetups and conferences.&lt;/p&gt;
</content><category term="PyCon Taiwan 2020"></category></entry></feed>