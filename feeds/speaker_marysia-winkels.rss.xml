<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Marysia Winkels</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 13 May 2022 00:00:00 +0000</lastBuildDate><item><title>(Serious) Time for Time Series</title><link>https://pyvideo.org/pycon-de-2022/serious-time-for-time-series.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker:: Marysia Winkels James Hayward&lt;/p&gt;
&lt;p&gt;Track: PyData: PyData &amp;amp; Scientific Libraries Stack
From inventory to website visitors, resource planning to financial data, time-series data is all around us. Knowing what comes next is key to success in this dynamically changing world. And for that we need reliable forecasting models. While complex &amp;amp; deep models may be good at forecasting, they typically give us little insight about the underlying patterns in our data. Such insights however may be a key to not only forecasting the future but shaping it.&lt;/p&gt;
&lt;p&gt;In this tutorial, we'll cover relatively simple approaches for time series analysis and seasonality modelling with Pandas.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2022 conference, April 11-13 2022.
&lt;a class="reference external" href="https://2022.pycon.de"&gt;https://2022.pycon.de&lt;/a&gt;
More details at the conference page: &lt;a class="reference external" href="https://2022.pycon.de/program/DTTQ9D"&gt;https://2022.pycon.de/program/DTTQ9D&lt;/a&gt;
Twitter: &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter: &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marysia Winkels</dc:creator><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-05-13:/pycon-de-2022/serious-time-for-time-series.html</guid><category>PyCon DE 2022</category><category>PyCon</category><category>PyConDE</category><category>pyconde2022</category><category>pydata</category><category>PyDataBerlin</category><category>pydataberlin2022</category></item><item><title>(Serious) Time for Time Series</title><link>https://pyvideo.org/pycon-us-2021/serious-time-for-time-series.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Time to take Time Series seriously!&lt;/p&gt;
&lt;p&gt;From inventory to website visitors, resource planning to financial data, time-series data is all around us. Knowing what comes next is key to success in this dynamically changing world. And for that we need reliable forecasting models. While complex &amp;amp; deep models may be good at forecasting, they typically give us little insight about the underlying patterns in our data.&lt;/p&gt;
&lt;p&gt;In this tutorial, we'll cover relatively simple yet powerful approaches for time series analysis and seasonality modeling with Pandas.&lt;/p&gt;
&lt;p&gt;At the end of this session, you will be familiar with the fundamentals of time series analysis, how to decompose time series into trend, seasonality and error component, and how to use our insights to create simple but powerful models for forecasting.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marysia Winkels</dc:creator><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-05-14:/pycon-us-2021/serious-time-for-time-series.html</guid><category>PyCon US 2021</category></item><item><title>Equivariance in CNNs: how generalising the weight-sharing...</title><link>https://pyvideo.org/pydata-berlin-2019/equivariance-in-cnns-how-generalising-the-weight-sharing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Marysia Winkels&lt;/p&gt;
&lt;p&gt;Track:PyData
In this talk, we will explore how the weight-sharing property of the convolutional layer can be generalised to achieve equivariance towards transformations beyond just translation, how to implement this, and the results on real-world data.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/RAS8UK"&gt;https://de.pycon.org/program/RAS8UK&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marysia Winkels</dc:creator><pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-10:/pydata-berlin-2019/equivariance-in-cnns-how-generalising-the-weight-sharing.html</guid><category>PyData Berlin 2019</category></item></channel></rss>