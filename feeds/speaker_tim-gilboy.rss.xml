<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Tim Gilboy</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 17 Sep 2022 00:00:00 +0000</lastBuildDate><item><title>Living With Technical Debt: Acknowledge It, Specify It, Reduce It</title><link>https://pyvideo.org/pycon-uk-2022/living-with-technical-debt-acknowledge-it-specify-it-reduce-it.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Technical debt is the elephant in the room: complex engineering problems meet awkward organizational issues. To make it more tangible, we'll divide it into 3 categories and discuss engineering and business strategies for each:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Gather info about &lt;strong&gt;vague&lt;/strong&gt; issues.&lt;/li&gt;
&lt;li&gt;Express &lt;strong&gt;antipatterns&lt;/strong&gt; as code.&lt;/li&gt;
&lt;li&gt;Automatically fix &lt;strong&gt;straightforward&lt;/strong&gt; issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;## Summary&lt;/p&gt;
&lt;p&gt;In this talk, we make tech debt more tangible by dividing it into 3 categories and showing strategies for each:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;vague issues&lt;/li&gt;
&lt;li&gt;antipatterns&lt;/li&gt;
&lt;li&gt;fixable problems&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In each category, we'll discuss not just the technical complexities, but also the business impact and the organizational challenges. We'll introduce several tools to mitigate the consequences and to eliminate parts of the tech debt.&lt;/p&gt;
&lt;p&gt;## Vague Issues: Acknowledge Them&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Make it visible when working with the code.&lt;/li&gt;
&lt;li&gt;Make it visible when taking business decisions.&lt;/li&gt;
&lt;li&gt;Acknowledge the business impact: longer development time, higher probability of bugs.&lt;/li&gt;
&lt;li&gt;Encourage open and constructive discussion.&lt;/li&gt;
&lt;li&gt;Gather info about this specific issue and recognize general patterns.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;## Identify Antipatterns And Express Them As Code&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;General vs specific to your codebase: Not an either - or, but rather a continuum.&lt;/li&gt;
&lt;li&gt;Express antipatterns as code.&lt;/li&gt;
&lt;li&gt;Find similar issues across the whole code base.&lt;/li&gt;
&lt;li&gt;Avoid adding even more debt of the same kind.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;## Automatically fix straightforward issues&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;If the antipattern can be codified, perhaps the fix can be codified as well.&lt;/li&gt;
&lt;li&gt;Roll out fixes with large-scale changes.&lt;/li&gt;
&lt;li&gt;Risks of large-scale changes.&lt;/li&gt;
&lt;li&gt;Avoid re-adding the same kind of debt.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Reka Horvath</dc:creator><pubDate>Sat, 17 Sep 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-09-17:/pycon-uk-2022/living-with-technical-debt-acknowledge-it-specify-it-reduce-it.html</guid><category>PyCon UK 2022</category></item></channel></rss>