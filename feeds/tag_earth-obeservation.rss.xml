<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 03 May 2019 00:00:00 +0000</lastBuildDate><item><title>Meet dask and distributed: the unsung heroes of Python scientific data ecosystem.</title><link>https://pyvideo.org/pycon-italia-2019/meet-dask-and-distributed-the-unsung-heroes-of-python-scientific-data-ecosystem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thanks to its world-class data tools and libraries, like Numpy, Pandas,
Jupyter, Matplotlib and xarray, Python is becoming the language of
choice in many scientific communities from Physics to Climate Science,
from Earth Observation to Economy.&lt;/p&gt;
&lt;p&gt;A turn-key but less-know component of the scientific ecosystem is the
dask library that enable seamless parallel, distributed and GPU
computing in most cases without code changes.&lt;/p&gt;
&lt;p&gt;We will use climate science as an typical example of a discipline where
simple tasks become easily big data problems and where mastering xarray,
dask and dask.distributed is the key to turn them back into simple
tasks, possibly on a large cluster of VMs (that you can easily provision
from your preferred cloud provider).&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://gitpitch.com/alexamici/talks/master?p=PyConX-2019"&gt;https://gitpitch.com/alexamici/talks/master?p=PyConX-2019&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1704"&gt;https://python.it/feedback-1704&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 17:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alessandro Amici</dc:creator><pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-03:pycon-italia-2019/meet-dask-and-distributed-the-unsung-heroes-of-python-scientific-data-ecosystem.html</guid><category>Jupyter</category><category>dask.distributed</category><category>Big-Data</category><category>xarray</category><category>dask</category><category>climate-change</category><category>earth-obeservation</category><category>pandas</category></item><item><title>Simulare l'assetto e l'orbita di un satellite con SymPy e PyEphem</title><link>https://pyvideo.org/europython-2013/simulare-lassetto-e-lorbita-di-un-satellite-con-sympy-e-pyephem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In questa presentazione descriviamo la componente geometrica di un
simulatore di immagini da satellite; in sostanza si tratta di un sistema
che restituisce dove si trova (posizione) e dove guarda (assetto) un
satellite a partire da opportune informazioni di input. La soluzione
deve essere sufficientemente flessibile da accettare leggi orarie
arbitrarie per poter simulare il movimento di satelliti differenti.&lt;/p&gt;
&lt;p&gt;Per questo motivo si è scelto di ultilizzare la libreria di calcolo
simbolico SymPy per il calcolo dell’orientamento del satellite definito
da funzioni del tempo generiche (pitch, roll, yaw), e la libreria
astronomica PyEphem il calcolo della posizione orbitale.&lt;/p&gt;
&lt;p&gt;Integrando PyEphem con SymPy è stato possibile sviluppare un sistema
dinamico duttile e di facile utilizzo, capace di gestire facilmente
molteplici sistemi di riferimento mobili, posizioni e direzioni.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aureliana Barghini</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:europython-2013/simulare-lassetto-e-lorbita-di-un-satellite-con-sympy-e-pyephem.html</guid><category>Sympy</category><category>scientific-computing</category><category>earth-obeservation</category><category>PyEphem</category></item></channel></rss>