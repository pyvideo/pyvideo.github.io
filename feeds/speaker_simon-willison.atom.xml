<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_simon-willison.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-04T12:10:00+00:00</updated><entry><title>Migrating to microservices at Eventbrite</title><link href="https://pyvideo.org/pycon-ar-2015/migrating-to-microservices-at-eventbrite.html" rel="alternate"></link><published>2015-11-14T00:00:00+00:00</published><updated>2015-11-14T00:00:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2015-11-14:pycon-ar-2015/migrating-to-microservices-at-eventbrite.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyConAr 2015 - Mendoza.
&lt;a class="reference external" href="http://ar.pycon.org"&gt;http://ar.pycon.org&lt;/a&gt;&lt;/p&gt;
</summary><category term="keynote"></category></entry><entry><title>Instant serverless APIs, powered by SQLite</title><link href="https://pyvideo.org/pycon-us-2019/instant-serverless-apis-powered-by-sqlite.html" rel="alternate"></link><published>2019-05-04T12:10:00+00:00</published><updated>2019-05-04T12:10:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2019-05-04:pycon-us-2019/instant-serverless-apis-powered-by-sqlite.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless computing is all about paying only for what you use: it can
scale up to handle millions of requests, but it can also scale down to
0, costing you nothing if your application is not receiving any traffic.&lt;/p&gt;
&lt;p&gt;Serverless tends to get expensive when databases are involved.... but if
your data is static or changes infrequently, you can use serverless
tools to provide powerful interactive APIs extremely cheaply.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://datasette.readthedocs.io/"&gt;Datasette&lt;/a&gt; is an open-source
Python tool that provides an instant, read-only JSON API for any SQLite
database. It also provides tools for packaging the database up as a
Docker container and instantly deploying that container to a number of
different serverless hosting platforms.&lt;/p&gt;
&lt;p&gt;This makes it a powerful tool for sharing interesting data online, in a
way that allows users to both explore that data themselves and build
their own interpretations of the data using the Datasette JSON API.&lt;/p&gt;
&lt;p&gt;In this session I'll show you how to use Datasette to publish data, and
illustrate examples of the exciting things people have already built
using the tool - including a number of real-world data journalism
projects.&lt;/p&gt;
&lt;p&gt;I'll also teach people how to use some of the other tools in the
Datasette ecosystem:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://publish.datasettes.com/"&gt;Datasette Publish&lt;/a&gt;, which allows
CSV data to be published using Datasette to a serverless hosting
account owned by the user, without any engineering experience
required.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pypi.org/project/csvs-to-sqlite/"&gt;csvs-to-sqlite&lt;/a&gt;, a tool
for efficiently converting large numbers of CSV files into a
Datasette-compatible SQLite database.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://sqlite-utils.readthedocs.io/"&gt;sqlite-utils&lt;/a&gt;, a library
that lets users create complex databases from custom data feeds in
just a few lines of Python code (ideal for working with Jupyter
notebooks).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'll discuss the philosophy and design behind Datasette, including how
immutable SQLite databases make for an impressively scalable solution
for inexpensively serving complex data on the internet. Finally, I'll be
exploring how Datasette takes advantage of Python 3 asyncio and the new
ASGI specification.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>"State of Django" Panel</title><link href="https://pyvideo.org/djangocon-us-2018/state-of-django-panel.html" rel="alternate"></link><published>2018-10-17T00:00:00+00:00</published><updated>2018-10-17T00:00:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2018-10-17:djangocon-us-2018/state-of-django-panel.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Join us for a panel on the State of Django: the state of the Django
codebase, but also the state of the Django community as represented by
organizations like the Django Software Foundation, Django Girls, and
DEFNA.&lt;/p&gt;
&lt;p&gt;Moderated by Simon Willison, our panelists will discuss:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;how we can continue to grow the Django community and create a
welcoming space for beginners&lt;/li&gt;
&lt;li&gt;the priorities for the continued development and maturation of Django&lt;/li&gt;
&lt;li&gt;ways to improve Django events and bring them to new regions worldwide&lt;/li&gt;
&lt;li&gt;success stories from Django communities&lt;/li&gt;
&lt;li&gt;concrete steps toward better and more effective diversity and
inclusion efforts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and much more. It’s been a long time since we gathered leaders of the
Django community on one stage to have an open-ended discussion about
Django’s present and future, and we hope you’ll join us for this special
event.&lt;/p&gt;
&lt;div class="section" id="panelists"&gt;
&lt;h4&gt;Panelists&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Andrew Godwin&lt;/li&gt;
&lt;li&gt;Anna Makarudze&lt;/li&gt;
&lt;li&gt;Frank Wiles&lt;/li&gt;
&lt;li&gt;Jeff Triplett&lt;/li&gt;
&lt;li&gt;Josue Balandrano Coronel&lt;/li&gt;
&lt;li&gt;Katherine Michel&lt;/li&gt;
&lt;li&gt;Kojo Idrissa&lt;/li&gt;
&lt;li&gt;Rachell Calhoun&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>How to Instantly Publish Data to the Internet with Datasette</title><link href="https://pyvideo.org/pybay-2018/how-to-instantly-publish-data-to-the-internet-with-datasette.html" rel="alternate"></link><published>2018-08-18T00:00:00+00:00</published><updated>2018-08-18T00:00:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2018-08-18:pybay-2018/how-to-instantly-publish-data-to-the-internet-with-datasette.html</id><summary type="html"></summary></entry><entry><title>Lightning Talks Day 3 Round 1</title><link href="https://pyvideo.org/pybay-2018/lightning-talks-day-3-round-1.html" rel="alternate"></link><published>2018-08-18T00:00:00+00:00</published><updated>2018-08-18T00:00:00+00:00</updated><author><name>Katy Lee</name></author><id>tag:pyvideo.org,2018-08-18:pybay-2018/lightning-talks-day-3-round-1.html</id><summary type="html"></summary></entry><entry><title>DjangoCon 2008 Panel: Django Technical Design</title><link href="https://pyvideo.org/djangocon-us-2008/djangocon-2008-panel-django-technical-design.html" rel="alternate"></link><published>2008-09-06T00:00:00+00:00</published><updated>2008-09-06T00:00:00+00:00</updated><author><name>Michael Trier</name></author><id>tag:pyvideo.org,2008-09-06:djangocon-us-2008/djangocon-2008-panel-django-technical-design.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Moderated by Michael Trier&lt;/p&gt;
&lt;p&gt;Panelists: Jacob Kaplan-Moss, Adrian Holovaty, Simon Willison, James Bennett, Malcolm Tredinnick&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.djangocon.org"&gt;http://www.djangocon.org&lt;/a&gt;&lt;/p&gt;
</summary><category term="Django"></category><category term="panel"></category><category term="djangocon"></category><category term="djangocon2008"></category></entry><entry><title>DjangoCon 2008 Panel: Schema Evolution</title><link href="https://pyvideo.org/djangocon-us-2008/djangocon-2008-panel-schema-evolution.html" rel="alternate"></link><published>2008-09-06T00:00:00+00:00</published><updated>2008-09-06T00:00:00+00:00</updated><author><name>Michael Trier</name></author><id>tag:pyvideo.org,2008-09-06:djangocon-us-2008/djangocon-2008-panel-schema-evolution.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Moderator:
Michael Trier&lt;/p&gt;
&lt;p&gt;Panelists:
Simon Willison, Russ Keith-Magee, Andrew Godwin&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.djangocon.org"&gt;http://www.djangocon.org&lt;/a&gt;&lt;/p&gt;
</summary><category term="Django"></category><category term="panel"></category><category term="djangocon"></category><category term="djangocon2008"></category></entry><entry><title>Exploring complex data w/ Elasticsearch &amp; Python</title><link href="https://pyvideo.org/pybay-2016/exploring-complex-data-w-elasticsearch-python.html" rel="alternate"></link><published>2016-08-20T00:00:00+00:00</published><updated>2016-08-20T00:00:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2016-08-20:pybay-2016/exploring-complex-data-w-elasticsearch-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Elasticsearch is a powerful open-source search and analytics engine with applications that stretch far beyond adding text-based search to a website. Learn how Elasticsearch can be used with Python and Django to crunch through complex datasets and quickly build powerful interfaces for exploring information.&lt;/p&gt;
&lt;p&gt;Bio
Simon Willison is an engineering director at Eventbrite, a Bay Area ticketing company working to bring the world together through live experiences. Simon works as part of a small product research and prototyping lab helping develop new concepts for Eventbrite products and features. Simon joined Eventbrite through their acquisition of Lanyrd, a Y Combinator funded company he co-founded in 2010. He is a co-creator of the Django Web Framework.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/pybay2016/simon-willison-exploring-complex-data-with-elasticsearch-and-python"&gt;https://speakerdeck.com/pybay2016/simon-willison-exploring-complex-data-with-elasticsearch-and-python&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Lightning Talks Day 1</title><link href="https://pyvideo.org/djangocon-us-2017/lightning-talks-day-1.html" rel="alternate"></link><published>2017-08-14T00:00:00+00:00</published><updated>2017-08-14T00:00:00+00:00</updated><author><name>Andrew Godwin</name></author><id>tag:pyvideo.org,2017-08-14:djangocon-us-2017/lightning-talks-day-1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2017 - Lightning Talks Day 1 by Various Speakers&lt;/p&gt;
&lt;p&gt;00:00 Andrew Godwin
04:14 Simon Willison
09:16 Katie McLaughlin
13:21 Dr. Russell Keith-Magee
18:00 Andrew Pinkham
20:27 Adam Fast
25:13 Josh Schneier
30:09 Kojo Idrissa&lt;/p&gt;
</summary></entry><entry><title>The denormalized query engine design pattern</title><link href="https://pyvideo.org/djangocon-us-2017/the-denormalized-query-engine-design-pattern.html" rel="alternate"></link><published>2017-08-14T00:00:00+00:00</published><updated>2017-08-14T00:00:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2017-08-14:djangocon-us-2017/the-denormalized-query-engine-design-pattern.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2017 - The denormalized query engine design pattern by Simon WIllison&lt;/p&gt;
&lt;p&gt;Most web applications need to offer search functionality. Open source tools like Solr and Elasticsearch are a powerful option for building custom search engines… but it turns out they can be used for way more than just search.&lt;/p&gt;
&lt;p&gt;By treating your search engine as a denormalization layer, you can use it to answer queries that would be too expensive to answer using your core relational database. Questions like “What are the top twenty tags used by my users from Spain?” or “What are the most common times of day for events to start?” or “Which articles contain addresses within 500 miles of Toronto?”.&lt;/p&gt;
&lt;p&gt;With the denormalized query engine design pattern, modifications to relational data are published to a denormalized schema in Elasticsearch or Solr. Data queries can then be answered using either the relational database or the search engine, depending on the nature of the specific query. The search engine returns database IDs, which are inflated from the database before being displayed to a user - ensuring that users never see stale data even if the search engine is not 100% up to date with the latest changes. This opens up all kinds of new capabilities for slicing, dicing and exploring data.&lt;/p&gt;
&lt;p&gt;In this talk, I’ll be illustrating this pattern by focusing on Elasticsearch - showing how it can be used with Django to bring new capabilities to your application. I’ll discuss the challenge of keeping data synchronized between a relational database and a search engine, and show examples of features that become much easier to build once you have this denormalization layer in place.&lt;/p&gt;
&lt;p&gt;Use-cases I explore will include:&lt;/p&gt;
&lt;p&gt;Finding interesting patterns in your data
Building a recommendation engine
Advanced geographical search and filtering
Reacting to recent user activity on your site
Analyzing a new large dataset using Elasticsearch and Kibana&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2017.djangocon.us/talks/the-denormalized-query-engine-design-pattern/"&gt;https://2017.djangocon.us/talks/the-denormalized-query-engine-design-pattern/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>A new default web stack</title><link href="https://pyvideo.org/pyohio-2014/a-new-default-web-stack.html" rel="alternate"></link><published>2014-07-26T00:00:00+00:00</published><updated>2014-07-26T00:00:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2014-07-26:pyohio-2014/a-new-default-web-stack.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;When building a new web application, the default set of tools used to be
a web framework such as Django and a relational database such as
PostgreSQL. In 2014, these tools are no longer enough. In this talk,
I'll present a new default stack to help build applications that are
faster, more robust, easy to scale and still support rapid iteration and
fast feature development.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Django Origins (and some things I have built with Django)</title><link href="https://pyvideo.org/django-birthday/some-things-ive-made-with-django.html" rel="alternate"></link><published>2015-07-11T00:00:00+00:00</published><updated>2015-07-11T00:00:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2015-07-11:django-birthday/some-things-ive-made-with-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How &amp;quot;The CMS&amp;quot; became Django and then what happened later.&lt;/p&gt;
</summary></entry><entry><title>Cowboy Development with Django</title><link href="https://pyvideo.org/djangocon-us-2009/cowboy-development-with-django.html" rel="alternate"></link><published>2009-09-08T00:00:00+00:00</published><updated>2009-09-08T00:00:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2009-09-08:djangocon-us-2009/cowboy-development-with-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cowboy development with Django&lt;/p&gt;
&lt;p&gt;Presented by Simon Willison&lt;/p&gt;
&lt;p&gt;Hard to describe this talk--it's very entertaining.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Audio is mostly in left speaker; lost audio at 36:45]&lt;/p&gt;
</summary><category term="djangocon"></category><category term="djangocon2009"></category></entry><entry><title>Django Technical Design Panel</title><link href="https://pyvideo.org/djangocon-us-2009/django-technical-design-panel.html" rel="alternate"></link><published>2009-09-08T00:00:00+00:00</published><updated>2009-09-08T00:00:00+00:00</updated><author><name>James Bennett</name></author><id>tag:pyvideo.org,2009-09-08:djangocon-us-2009/django-technical-design-panel.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django Technical Design Panel&lt;/p&gt;
&lt;p&gt;Featuring Joseph K, Russell Keith-Magee, Simon Willison, James Bennett,
Brian&lt;/p&gt;
&lt;p&gt;Moderated question and answer period covering a bunch of topics.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: sound only from left speaker]&lt;/p&gt;
</summary><category term="djangocon"></category><category term="djangocon2009"></category></entry><entry><title>Challenges in developing a large Django site</title><link href="https://pyvideo.org/europython-2011/challenges-in-developing-a-large-django-site.html" rel="alternate"></link><published>2011-07-20T00:00:00+00:00</published><updated>2011-07-20T00:00:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2011-07-20:europython-2011/challenges-in-developing-a-large-django-site.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Simon Willison - 22 June 2011 in &amp;quot;Track Spaghetti&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django makes it easy to build web sites and applications on tight
deadlines - but how does it deal with sites that scale up in both
traffic and complexity? Using Lanyrd.com as a case study, this talk will
explore tricks and techniques for taking advantage of what Django has to
offer while coping with the unexpected challenges raised by a highly
dynamic social web application.&lt;/p&gt;
&lt;p&gt;Topics covered will include performance monitoring and optimisation,
advanced caching tricks, denormalisation with Solr and Redis and finding
the right balance between technical elegance and pragmatism.&lt;/p&gt;
</summary><category term="django"></category><category term="monitoring"></category><category term="performance"></category><category term="redis"></category><category term="web"></category></entry><entry><title>Advanced Aspects of the Django Ecosystem: Haystack, Celery &amp; Fabric</title><link href="https://pyvideo.org/europython-2011/advanced-aspects-of-the-django-ecosystem-haystac.html" rel="alternate"></link><published>2011-07-18T00:00:00+00:00</published><updated>2011-07-18T00:00:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2011-07-18:europython-2011/advanced-aspects-of-the-django-ecosystem-haystac.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Simon Willison - 21 June 2011 in &amp;quot;Track Spaghetti&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django benefits from a thriving third-party ecosystem. This talk will
take a deep look at three of the components I have found most useful in
my own projects: Haystack for full-text search, Celery for offline
processing and Fabric for automated eployments. I'll discuss how we use
them for Lanyrd.com, and demonstrate why they deserve a permanent place
in your toolbox.&lt;/p&gt;
</summary><category term="celery"></category><category term="django"></category><category term="fabric"></category><category term="processing"></category></entry></feed>