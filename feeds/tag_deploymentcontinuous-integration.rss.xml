<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - deployment/continuous integration</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 03 Jun 2022 00:00:00 +0000</lastBuildDate><item><title>Automate creation and deployment using Python, Terraform and GitLab</title><link>https://pyvideo.org/pycon-italia-2022/automate-creation-and-deployment-using-python-terraform-and-gitlab.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Automate web projects creation, development, test and deployment using
Python, Terraform and GitLab - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;An overview of how, in 20tab, a bunch of intrepid web developers, acting
as consummate DevOps, accomplished the ten year long dream of automating
the creation, test and deployment of their projects, by integrating the
latest CI/CD solutions and technologies into Talos: the almighty company
tool. For over a decade, in 20tab, we worked on improving our company
tool for web projects scaffolding and continuous delivery flow
management. We integrated the latest solutions and technologies to
automate, speed up and strengthen the creation, development, testing and
deployment procedures. In this talk I am going to present in detail
Talos, the result of our latest challenge, and how we managed to harness
Python scripts, cookiecutter templates, Terraform configurations, GitLab
pipelines and Cloud resources.&lt;/p&gt;
&lt;p&gt;Speaker: Filippo Morelli&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Filippo Morelli</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/automate-creation-and-deployment-using-python-terraform-and-gitlab.html</guid><category>PyCon Italia 2022</category><category>aws</category><category>deployment/continuous integration</category><category>devops</category><category>django</category></item><item><title>Best practices for good(ish) and clean(ish) code</title><link>https://pyvideo.org/pycon-italia-2022/best-practices-for-goodish-and-cleanish-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Best practices for good(ish) and clean(ish) code - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;A famous book introduction says:
&lt;tt class="docutils literal"&gt;The only valid measurement of code quality: WTFs/minute&lt;/tt&gt;. In this
talk I’d like to share my past and current experience on how to write
good and clean code and what to do and not to do to achieve good shape
programs. Sounds interesting uh? Have you ever thought what is the cost
vs revenue of a well written code and of an ugly code? Nowadays, in most
companies, code bases are huge (in terms of lines of code and
complexity) and the number of contributors is also high; this means that
a well shaped code could benefit the company finance and the mental
health of the employees (AKA software engineers).&lt;/p&gt;
&lt;p&gt;Writing clean (and/or good) code requires discipline. This discipline
can be acquired and increased during your job and doing experience with
messy code, but more important is that using discipline, respecting and
following some rules you can achieve elegant and efficient code.&lt;/p&gt;
&lt;p&gt;In this talk I will cover some principles of clean code (they are too
much for 30 minutes): - Meaningful Names - Formatting - Tests and their
importance - Continuous Integration - Code Refactoring - Code Review -
Boundaries&lt;/p&gt;
&lt;p&gt;All the work contained in this talk is mostly inspired by the book
&lt;tt class="docutils literal"&gt;Clean Code - Robert C. Martin (AKA Uncle Bob)&lt;/tt&gt; and the experience I
have made during my current job and the previous one.&lt;/p&gt;
&lt;p&gt;Speaker: Ernesto Arbitrio&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ernesto Arbitrio</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/best-practices-for-goodish-and-cleanish-code.html</guid><category>PyCon Italia 2022</category><category>clean code</category><category>deployment/continuous integration</category><category>development</category><category>testing</category></item><item><title>Standardising MLOps in a start-up with Dagster and PyTorch</title><link>https://pyvideo.org/pycon-italia-2022/standardising-mlops-in-a-start-up-with-dagster-and-pytorch.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;standardising MLOps in a start-up: an example using Dagster and PyTorch
- PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Good processes and toolings allow companies to adapt and strive with
changing business requirements and short development cycles. Using
Dagster, a new workflow engine, and PyTorch, we found the perfect match
to guarantee reliable deployments with fast-changing models. Join us and
find out how! Extending a deep learning model beyond your dataset to
make it available to multiple use-cases and stakeholders requires a
structured workflow. Finding the proper workflow and tooling depends on
your use case, but what happens when your use case is dynamic?&lt;/p&gt;
&lt;p&gt;In a start-up, changing business requirements are standard, so change
the inputs, outputs, and model types: the pipeline may be outdated by
the time you have put a “model in production”.&lt;/p&gt;
&lt;p&gt;With this talk, we want to show a pipeline based on Dagster, deployed on
Kubernetes, and PyTorch, that adds little overhead when making models
available to colleagues and projects with minimal requirements, making
it flexible to handle very customized workflows if needed.&lt;/p&gt;
&lt;p&gt;Speakers: Andrea Giardini, Lorenzo Riches&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Giardini</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/standardising-mlops-in-a-start-up-with-dagster-and-pytorch.html</guid><category>PyCon Italia 2022</category><category>deep learning</category><category>deployment/continuous integration</category><category>machine learning</category></item><item><title>Using GitHub Actions and Python to keep your blogs updated</title><link>https://pyvideo.org/pycon-italia-2022/using-github-actions-and-python-to-keep-your-blogs-updated.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using GitHub Actions and Python to keep your blogs updated - PyCon
Italia 2022&lt;/p&gt;
&lt;p&gt;Se hai un blog su GitHub Pages ma vuoi avere maggiore visibilità, non
devi più copiare manualmente gli stessi contenuti sulle altre
piattaforme. Grazie a Github Actions puoi sviluppare il tuo operatore
Python che monitora la tua repository ed aggiorna tutte le tue
piattaforme di blog in automatico. GitHub Actions è il potente strumento
introdotto da GitHub per automatizzare le operazioni che riguardano una
repository GitHub. Ogni volta che un evento viene generato dalla nostra
repository (una commit, un issue, …), GitHub Actions fa partire in
automatico una sequenza di operazioni definite dall’utente. Queste
operazioni (dette “Actions”) possono essere condivise dalla community o
sviluppate personalmente, anche in Python! In questo talk voglio
mostrare come costruire la propria GitHub Action in Python per
condividere automaticamente i post di un blog su GitHub Pages su altre
piattaforme, come Medium.&lt;/p&gt;
&lt;p&gt;Speaker: Andrea Grillo&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grillo</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/using-github-actions-and-python-to-keep-your-blogs-updated.html</guid><category>PyCon Italia 2022</category><category>deployment/continuous integration</category><category>devops</category><category>open source</category></item></channel></rss>