<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_tom-offerman.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-12-30T00:00:00+00:00</updated><entry><title>Writing Custom Tracing Functions</title><link href="https://pyvideo.org/pydx-2016/writing-custom-tracing-functions.html" rel="alternate"></link><published>2016-12-30T00:00:00+00:00</published><updated>2016-12-30T00:00:00+00:00</updated><author><name>Tom Offerman</name></author><id>tag:pyvideo.org,2016-12-30:pydx-2016/writing-custom-tracing-functions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyDX 2016 talk by Tom Offerman&lt;/p&gt;
&lt;p&gt;When most Python developers want to observe the execution of their program on a function-by-function, or line-by-line, basis, they tend to reach for a debugger. But, debuggers like pdb are actually built on the trace module in the standard library. In this talk for beginner and intermediate Python programmers, learn how to use trace by writing your own custom tracing functions...and also see how tools like debuggers and coverage leverage the power of trace under the hood.&lt;/p&gt;
</summary></entry></feed>