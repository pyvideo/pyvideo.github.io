<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_radoslaw-jan-ganczarek.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-08-05T00:00:00+00:00</updated><entry><title>Code Quality in Python - tools and reasons</title><link href="https://pyvideo.org/europython-2015/code-quality-in-python-tools-and-reasons.html" rel="alternate"></link><published>2015-08-05T00:00:00+00:00</published><updated>2015-08-05T00:00:00+00:00</updated><author><name>Radosław Jan Ganczarek</name></author><id>tag:pyvideo.org,2015-08-05:europython-2015/code-quality-in-python-tools-and-reasons.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Radosław Jan Ganczarek - Code Quality in Python - tools and reasons
[EuroPython 2015]
[21 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;Beginner's guide to Python code quality. I'll talk about the tools for
code analysis, differences between them, extending them with new
features and ways to running them automatically. In the end, I'll talk
about reasons behind all of these tools and try to convince you to
using them in your projects (but if you are against it - I'll gladly
listen to your arguments).&lt;/p&gt;
</summary></entry></feed>