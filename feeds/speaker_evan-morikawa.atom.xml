<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_evan-morikawa.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-05T00:00:00+00:00</updated><entry><title>Making Sense of Flask APIs A Billion Requests at a Time</title><link href="https://pyvideo.org/pygotham-2018/making-sense-of-flask-apis-a-billion-requests-at-a-time.html" rel="alternate"></link><published>2018-10-05T00:00:00+00:00</published><updated>2018-10-05T00:00:00+00:00</updated><author><name>Evan Morikawa</name></author><id>tag:pyvideo.org,2018-10-05:pygotham-2018/making-sense-of-flask-apis-a-billion-requests-at-a-time.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You’ve got a Flask, Django, or other API. How are people using it? Is anything going wrong? How does it perform? These questions become increasingly hard to answer once manually &lt;tt class="docutils literal"&gt;tail&lt;/tt&gt;’ing your log files becomes impractical.&lt;/p&gt;
&lt;p&gt;This talk will describe how to effectively answer these questions. I’ll demonstrate a suite of tools we use to quickly visualize insights across dozens of API endpoints and billions of requests. I’ll show logging techniques to more consistently store, organize, and process the right data to make sense of it all. I’ll talk about the processes we’ve put in place to routinely revisit these questions and quickly alert when things go awry. Finally, despite all the pretty graphs I’ll show you, I’ll discuss how at the end of the day it is the team and cultural aspects that keep any API in line and growing.&lt;/p&gt;
&lt;p&gt;These stories, best practices, and advice come from my experience building and scaling the Nylas APIs. Our APIs allow developers to GET, POST and PUT email threads, calendar events, contacts, and any other item you’d find in an Exchange, GSuite, or IMAP mailbox. Hundreds of thousands of mailboxes later, and over a hundred million requests a day, making sense of what’s going on in the system at any given time present challenges I’m excited to share.&lt;/p&gt;
</summary></entry><entry><title>Making Sense of Flask APIs A Billion Requests at a Time</title><link href="https://pyvideo.org/pycon-uk-2018/making-sense-of-flask-apis-a-billion-requests-at-a-time.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Evan Morikawa</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/making-sense-of-flask-apis-a-billion-requests-at-a-time.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn how to scale Flask APIs and make sense of the data. You’ve got a
Flask, Django, or other API. How are people using it? Is anything going
wrong? How does it perform? These questions become increasingly hard to
answer once manually &lt;tt class="docutils literal"&gt;tail&lt;/tt&gt;ing your log files becomes impractical.&lt;/p&gt;
&lt;p&gt;This talk will describe how to effectively answer these questions
through a mix of team process, tools, and logging techniques. I’ll
demonstrate a suite of tools we use to quickly visualize insights across
dozens of API endpoints and billions of requests. I’ll show logging
techniques to more consistently store, organize, and process the right
data to make sense of it all. I’ll talk about the processes we’ve put in
place to routinely revisit these questions and quickly alert when things
go awry. Finally, despite all the pretty graphs I’ll show you, I’ll
discuss how at the end of the day it is the team and cultural aspects
that keep any API in line and growing.&lt;/p&gt;
&lt;p&gt;These stories, best practices, and advice come from my experience
building and scaling the Nylas APIs. Our APIs allow developers to GET,
POST and PUT email threads, calendar events, contacts, and any other
item you’d find in an Exchange, GSuite, or IMAP mailbox. Hundreds of
thousands of mailboxes later, and over a hundred million requests a day,
making sense of what’s going on in the system at any given time present
challenges I’m excited to share.&lt;/p&gt;
</summary></entry></feed>