<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_yoav-luft.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-06-12T00:00:00+00:00</updated><entry><title>Text Parsing the Case for Monads</title><link href="https://pyvideo.org/pycon-israel-2017/text-parsing-the-case-for-monads.html" rel="alternate"></link><published>2017-06-12T00:00:00+00:00</published><updated>2017-06-12T00:00:00+00:00</updated><author><name>Yoav Luft</name></author><id>tag:pyvideo.org,2017-06-12:pycon-israel-2017/text-parsing-the-case-for-monads.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pyparsing is a mature, small and useful text parsing library that let's you define a grammar easily and succinctly. Amazingly, pyparsing is using a unique design pattern called &amp;quot;Combinators&amp;quot; which is leveraged even further by monadic syntax from functional programming, while feeling Pythonic and clean. We will study this unique approach and uncover its secrets.&lt;/p&gt;
</summary><category term="pyparsing"></category></entry></feed>