<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 05 Aug 2016 00:00:00 +0000</lastBuildDate><item><title>Scaling Microservices with Crossbar.io</title><link>https://pyvideo.org/europython-2016/scaling-microservices-with-crossbario.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tobias Oberstein - Scaling Microservices with Crossbar.io
[EuroPython 2016]
[22 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/scaling-microservices-with-crossbario"&gt;https://ep2016.europython.eu//conference/talks/scaling-microservices-with-crossbario&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Microservices offer an efficient way to only scale those parts of your
application which are performance bottlenecks.&lt;/p&gt;
&lt;p&gt;We will demo and explain open source tech which allows the easy
scaling out across distributed devices. The audience will be able to
donate processor cycles from their devices to our demo application
(and win a hardware prize).&lt;/p&gt;
&lt;p&gt;The demo uses &lt;a class="reference external" href="http://crossbar.io"&gt;Crossbar.io&lt;/a&gt;, an open souce application router
(written in Python), and all demo code is open source.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Microservices offer an efficient way to only scale parts of your
applications which are hotspots. Instead of running multiple instances
of a monolithic application, with all the complexity and operational
run-time overhead that entails, you can scale only the functionality
which is a bottleneck. Today that increasingly means scaling out, not
up.&lt;/p&gt;
&lt;p&gt;We will go over open source technologies which allow the easy scaling
out across distributed devices.&lt;/p&gt;
&lt;p&gt;A live demo will allow the audience to participate with its devices
(including mobile phones) in an application. (There will be prizes for
the donors.)&lt;/p&gt;
&lt;p&gt;The demo uses &lt;a class="reference external" href="http://crossbar.io"&gt;Crossbar.io&lt;/a&gt;, an open source router for the open
&lt;a class="reference external" href="http://wamp-proto.org"&gt;Web Application Messaging Protocol (WAMP)&lt;/a&gt;
written in Python.
WAMP supports routed Remote Procedure Calls, and Crossbar.io uses
these to implement various load-balancing strategies across endpoints
which register a particular procedure.&lt;/p&gt;
&lt;p&gt;WAMP has a first-class library for Python
(&lt;a class="reference external" href="http://autobahn.ws/python"&gt;Autobahn|Python&lt;/a&gt;),
but is cross-language, with support for a total of 11 languages. This
allows you to implement polyglot and heterogenos microservices
applications, from Python to Node.js to C# right into the browser.
Microservices can run anywhere, since the outgoing connections to the
router which WAMP uses avoid NAT problems.&lt;/p&gt;
&lt;p&gt;All software used is open source, and all demo code is provided on
GitHub under the MIT license.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tobias Oberstein</dc:creator><pubDate>Fri, 05 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-05:europython-2016/scaling-microservices-with-crossbario.html</guid></item></channel></rss>