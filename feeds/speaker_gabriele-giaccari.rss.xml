<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Gabriele Giaccari</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 03 Jun 2022 00:00:00 +0000</lastBuildDate><item><title>Taiga e l’agile project management: join the Oompa Loompas’ Army!</title><link>https://pyvideo.org/pycon-italia-2017/taiga-e-lagile-project-management-join-the-oompa-loompas-army.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;“Taiga is a project management platform for agile developers &amp;amp; designers
and project managers who want a beautiful tool that makes work truly
enjoyable”. Nominato “best agile tool” nel 2015, Taiga si dimostra
semplice, versatile e sopratutto fedele ai framework agili. Durante il
talk si presenteranno le principali funzionalità e i modi di utilizzo
relazionandoli alle relative pratiche agili e confrontandoli con il suo
concorrente diretto: Jira.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gabriele Giaccari</dc:creator><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-09:/pycon-italia-2017/taiga-e-lagile-project-management-join-the-oompa-loompas-army.html</guid><category>PyCon Italia 2017</category><category>project-management-platform</category><category>agile</category><category>kanban</category><category>taiga</category><category>scrum</category></item><item><title>L'Italia, Python e la chimera dell'Agile</title><link>https://pyvideo.org/pycon-italia-2017/litalia-python-e-la-chimera-dellagile.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sono quasi certo che il proverbio “tra il dire e il fare c’è di mezzo
il mare” lo abbiano inventato pensando alle metodologie agili. Forse
in USA o in Svezia ci riescono davvero, ma in Italia? Possiamo dire
di essere agili quando di test ne facciamo “ un po’ “, i task degli
sprint li decide il cliente e il contratto prevede un budget fissato
e una deadline prestabilita? E com’è la situazione tra i pythonisti?
Ne parliamo con Marco Beri, Iacopo Spalletti, Roberto Bettazzoni e
Peter Bittner in un panel dove siete tutti invitati a partecipare e
condividere casi di successo e scheletri nell’armadio.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Iacopo Spalletti</dc:creator><pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-08:/pycon-italia-2017/litalia-python-e-la-chimera-dellagile.html</guid><category>PyCon Italia 2017</category></item><item><title>Dalla User Story al test automatico in Django: un percorso step by step per dormire sonni tranquilli</title><link>https://pyvideo.org/pycon-italia-2018/dalla-user-story-al-test-automatico-in-django-un-percorso-step-by-step-per-dormire-sonni-tranquilli.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le specifiche poco chiare o approssimative sono una delle piaghe degli
sviluppatori, e portano all’odioso fenomeno dei task non accettati o
rimandati indietro etichettati come BUG.&lt;/p&gt;
&lt;p&gt;Spesso, tuttavia, non c’è proprio nulla di rotto ma solo una serie di
incomprensioni dovute alla scarsa qualità dell’analisi, che provocano,
generalmente, molta frustrazione in chi ha scritto il codice.&lt;/p&gt;
&lt;p&gt;Nel corso del talk vedremo come tutto questo sia evitabile grazie
all’approccio &lt;strong&gt;BDD&lt;/strong&gt; , all’utilizzo di &lt;strong&gt;User Stories&lt;/strong&gt; con
&lt;strong&gt;Acceptance Tests&lt;/strong&gt; scritti usando il linguaggio &lt;em&gt;Gherkin&lt;/em&gt; e
all’esecuzione di test automatici.&lt;/p&gt;
&lt;p&gt;In più, mostreremo una applicazione pratica su un progetto &lt;em&gt;Django&lt;/em&gt;
usando &lt;em&gt;Behave&lt;/em&gt; con &lt;em&gt;behave_django&lt;/em&gt; e &lt;em&gt;Selenium&lt;/em&gt; con &lt;em&gt;splinter&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Filippo Morelli</dc:creator><pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-22:/pycon-italia-2018/dalla-user-story-al-test-automatico-in-django-un-percorso-step-by-step-per-dormire-sonni-tranquilli.html</guid><category>PyCon Italia 2018</category><category>bdd</category><category>continuous-integration</category><category>agile</category><category>selenium</category><category>django</category><category>behave</category></item><item><title>Addestramento d'emergenza alla fase di Discovery per sviluppatori frustrati</title><link>https://pyvideo.org/pycon-italia-2022/addestramento-demergenza-alla-fase-di-discovery-per-sviluppatori-frustrati.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Addestramento d’emergenza alla fase di Discovery per sviluppatori
frustrati - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Quante notti avete passato a produrre codice ‘importantissimo’ poi mai
andato in produzione? E la vostra idea di app del secolo che non ha mai
portato a nulla? Quanti soldi buttati per produrre software mai
utilizzato? Troppi. Ma non deve andare per forza così,e la chiave è in
una parola: Discovery! Come programmatori, tutti noi abbiamo provato la
frustrazione di lavorare col massimo dell’impegno su software che poi
nella migliore delle ipotesi non hanno prodotto i risultati sperati, e
nella peggiore non sono neanche mai andati in produzione. Giorni (e
quindi soldi) buttati a realizzare cose che non andavano fatte, a
sviluppare “requisiti” imposti dall’alto senza capirne il contesto.
Usarci come ingranaggi in una fabbrica di funzionalità, invece che come
specialisti di team che puntino a risolvere dei problemi ed avere un
impatto reale sul mondo, è uno spreco senza precedenti. Scrivere codice
nel modo corretto, fare i test, impostare pipeline di Continuous
Integration è solo una parte del nostro lavoro, ma se quel codice in
primis non andava neanche scritto, sarà tutto inutile. Da parecchi anni
ormai sono nate metodologie e strumenti che aiutano a risolvere questo
problema, dal Design Thinking al Lean Startup, l’Impact Mapping o
l’Opportunity Solution Tree. Non è una roba solo da Designer o Product
Manager, gli sviluppatori devono essere i protagonisti di questo
processo cosiddetto di Discovery anche se spesso se ne tengono alla
larga. Questo addestramento è diviso in 3 mini lezioni di 10 minuti, per
definire il contesto, la teoria e la pratica di questa fase, con
l’obiettivo di dare gli strumenti e qualche spunto per iniziare questa
piccola rivoluzione, a livello personale e di team.&lt;/p&gt;
&lt;p&gt;Speaker: Gabriele Giaccari&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gabriele Giaccari</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/addestramento-demergenza-alla-fase-di-discovery-per-sviluppatori-frustrati.html</guid><category>PyCon Italia 2022</category><category>agile</category><category>best practice</category><category>communication</category></item></channel></rss>