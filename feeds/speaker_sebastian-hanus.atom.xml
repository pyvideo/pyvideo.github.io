<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_sebastian-hanus.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-07-11T00:00:00+00:00</updated><entry><title>Lights Camera Action! Scrape, Explore, and Model to Predict Oscar Winners</title><link href="https://pyvideo.org/scipy-2019/lights-camera-action-scrape-explore-and-model-to-predict-oscar-winners.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Deborah Hanus</name></author><id>tag:pyvideo.org,2019-07-11:scipy-2019/lights-camera-action-scrape-explore-and-model-to-predict-oscar-winners.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Jupyter notebooks, HTTP requests, BeautifulSoup, NumPy, Pandas,
scikit learn, and matplotlib, you’ll predict whether a movie is likely
to &lt;a class="reference external" href="http://oscarpredictor.github.io/"&gt;win an Oscar&lt;/a&gt; or be a box office hit. We’ll step through the
creation of an effective dataset: asking a question your data can
answer, writing a web scraper, and answering those questions using
nothing but Python libraries and data from the Internet.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Getting started with Deep Learning: Using Keras &amp; Numpy to detect voice disorders</title><link href="https://pyvideo.org/pycon-us-2019/getting-started-with-deep-learning-using-keras-numpy-to-detect-voice-disorders.html" rel="alternate"></link><published>2019-05-04T16:15:00+00:00</published><updated>2019-05-04T16:15:00+00:00</updated><author><name>Deborah Hanus</name></author><id>tag:pyvideo.org,2019-05-04:pycon-us-2019/getting-started-with-deep-learning-using-keras-numpy-to-detect-voice-disorders.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Deep learning is a useful tool for problems in computer vision, natural
language processing, and medicine. While it might seem difficult to get
started in deep learning, Python libraries, such as Keras make deep
learning quite accessible. In this talk, we will discuss what deep
learning is, introduce NumPy and Keras, and discuss common mistakes and
debugging strategies. Throughout the talk, we will return to an example
project in the medical domain, which used deep learning on vocal data to
determine whether a patient has a voice disorder called vocal
hyperfunction.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Using Keras &amp; Numpy to Detect Voice Disorders</title><link href="https://pyvideo.org/pybay-2018/using-keras-numpy-to-detect-voice-disorders.html" rel="alternate"></link><published>2018-08-18T00:00:00+00:00</published><updated>2018-08-18T00:00:00+00:00</updated><author><name>Sebastian Hanus</name></author><id>tag:pyvideo.org,2018-08-18:pybay-2018/using-keras-numpy-to-detect-voice-disorders.html</id><summary type="html"></summary></entry><entry><title>Lights Camera Action! Scrape, explore, and model to predict Oscar winners &amp; box office hits</title><link href="https://pyvideo.org/pycon-us-2018/lights-camera-action-scrape-explore-and-model-to-predict-oscar-winners-box-office-hits.html" rel="alternate"></link><published>2018-05-09T00:00:00+00:00</published><updated>2018-05-09T00:00:00+00:00</updated><author><name>Deborah Hanus</name></author><id>tag:pyvideo.org,2018-05-09:pycon-us-2018/lights-camera-action-scrape-explore-and-model-to-predict-oscar-winners-box-office-hits.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Jupyter notebooks, HTTP requests, BeautifulSoup, NumPy, Pandas,
scikit learn, and matplotlib, you’ll predict whether a movie is likely
to &lt;a class="reference external" href="http://oscarpredictor.github.io/"&gt;win an Oscar&lt;/a&gt; or be a box office hit. We’ll step through the
creation of an effective dataset: asking a question your data can
answer, writing a web scraper, and answering those questions using
nothing but Python libraries and data from the Internet.&lt;/p&gt;
</summary></entry></feed>