<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Python Web Conf 2020</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 22 Mar 2021 00:00:00 +0000</lastBuildDate><item><title>We Have Nearly One Million Lines of Python 2 Code in Production – and Now?</title><link>https://pyvideo.org/python-web-conf-2020/we-have-nearly-one-million-lines-of-python-2-code-in-production-and-now.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;We Have Nearly One Million Lines of Python 2 Code in Production – and Now?&amp;quot; by: Michael Howitz&lt;/p&gt;
&lt;p&gt;In this talk I am going to present possible approaches for a Python 3 migration of existing Python code running on Python 2.7. I’ll evaluate which of these approaches seems suitable for a large code base and which principles should be paid attention to to increase the probability of a successful migration project.&lt;/p&gt;
&lt;p&gt;I’ll use union.cms (a content management system used by German trade unions) to show the story of a successful migration project involving nearly one million lines of Python code. The story will include the obstacles we encountered and what we learned on the way.&lt;/p&gt;
&lt;p&gt;I believe that most of the discussed ideas and experience should also be used unchanged in smaller projects as the presented principles are very much the same.&lt;/p&gt;
&lt;p&gt;Goal of the presentation: You should be able to come up with a plan for migrating your Python 2 based projects to Python 3.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Howitz</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2020/we-have-nearly-one-million-lines-of-python-2-code-in-production-and-now.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>10 Tips Learned from Running A Python [Pyramid] Web App in Production</title><link>https://pyvideo.org/python-web-conf-2020/10-tips-learned-from-running-a-python-pyramid-web-app-in-production.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;10 Tips Learned from Running A Python [Pyramid] Web App in Production&amp;quot; by: Michael Kennedy&lt;/p&gt;
&lt;p&gt;Are you new to running web apps in production? Do you have that nagging feeling that you should improve the ways you structure, deploy, and develop your app? Want to see some lessons learned from running a group of Pyramid web apps on a cluster of Linux servers? Join the talk as Michael Kennedy, founder of Talk Python, as he shares his top 10 list of lessons learned running a variety of web apps over the past 5 years.&lt;/p&gt;
&lt;p&gt;This talk is open to all frameworks. Whether you use Pyramid, Flask, or Django, most of the tips and tricks will apply to your web apps you're building and deploying today.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Kennedy</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/10-tips-learned-from-running-a-python-pyramid-web-app-in-production.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>A Brief Survey of the Web Deployment Landscape</title><link>https://pyvideo.org/python-web-conf-2020/a-brief-survey-of-the-web-deployment-landscape.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;A Brief Survey of the Web Deployment Landscape&amp;quot; by: Caleb Gosnell&lt;/p&gt;
&lt;p&gt;Beginning a new project or entering a new environment, it can be daunting to sort through the options and requirements of various deployment strategies. This talk aims to provide you with a baseline familiarity with a few popular patterns that can aid you in determining what will work well for your application and your organization. We'll discuss:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;distinguishing characteristics of various deployment methods&lt;/li&gt;
&lt;li&gt;the core value of deployment as a step in the software lifecycle&lt;/li&gt;
&lt;li&gt;the costs, benefits, and implementation of certain practices&lt;/li&gt;
&lt;li&gt;factors that might influence/restrict your choices&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Gosnell</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/a-brief-survey-of-the-web-deployment-landscape.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>A Web without JavaScript (Keynote)</title><link>https://pyvideo.org/python-web-conf-2020/a-web-without-javascript-keynote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;A Web without JavaScript (Keynote)&amp;quot; by: Russell Keith-Magee&lt;/p&gt;
&lt;p&gt;In the browser, you can use any programming language you want... as long as it's JavaScript.&lt;/p&gt;
&lt;p&gt;But what if you want to use a different language? In this talk, you'll learn how you can break out of the monolingual environment provided by the browser, and use Python (or any other language) instead.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Russell Keith-Magee</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/a-web-without-javascript-keynote.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Building a Collaborative News Platform with Python</title><link>https://pyvideo.org/python-web-conf-2020/building-a-collaborative-news-platform-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Building a Collaborative News Platform with Python&amp;quot; by: Érico Andrei&lt;/p&gt;
&lt;p&gt;In this talk, Érico will present tools and solutions used by Pendect.com, from publishing workflows to automating tagging and content categorization.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Érico Andrei</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/building-a-collaborative-news-platform-with-python.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Building State-of-the-art Event-Driven Python Microservices with Serverless in AWS</title><link>https://pyvideo.org/python-web-conf-2020/building-state-of-the-art-event-driven-python-microservices-with-serverless-in-aws.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Building State-of-the-art Event-Driven Python Microservices with Serverless in AWS&amp;quot; by: Ben Ellerby&lt;/p&gt;
&lt;p&gt;Serverless is often thought of in terms of FaaS (like AWS Lambda). There are though many other Serverless services, for instance in AWS there is DynamoDB, API Gateway, Cognito and so on. Serverless microservices can be composed of these underlying services to achieve huge flexibility and speed. However, there is the trap of building a distributed monolith if the right tooling and approach are not used. At the end of 2019 AWS launched a new Serverless service, Amazon EventBridge, making it easier to connect microservices and ingest third-party SaaS as well as AWS events.&lt;/p&gt;
&lt;p&gt;This talk will go through the steps to build a state-of-the-art Python Serverless Microservice architecture based on Amazon Eventbridge through the &amp;quot;EventBridge Storming&amp;quot; approach (an extension of Event Storming from Domain-Driven Design). From idea to code in 8 steps.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Ellerby</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/building-state-of-the-art-event-driven-python-microservices-with-serverless-in-aws.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Dead-end Streets</title><link>https://pyvideo.org/python-web-conf-2020/dead-end-streets.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Dead-end Streets&amp;quot; by: Daniele Procida&lt;/p&gt;
&lt;p&gt;Sooner or later, every technological direction we take leads to a dead-end. Dead-ends aren’t necessary bad things; it can be very pleasant to live at the end of a cul-de-sac. But, comfortable or not, a dead-end can be hard to get out of, and what’s more, the more comfortable it is, the longer we’re inclined to stay there and the harder it is to extract ourselves. This talk is about a very comfortable dead-end, and why I’ll be sorry to leave it. It’s also about the brand new direction, how we get ourselves ready for the exit.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniele Procida</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/dead-end-streets.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Fake News' Foe: Machine Learning</title><link>https://pyvideo.org/python-web-conf-2020/fake-news-foe-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Fake News' Foe: Machine Learning&amp;quot; by: Jayesh Ahire&lt;/p&gt;
&lt;p&gt;Fake news has become a huge issue in our digitally-connected world and it is no longer limited to little squabbles – fake news spreads like wildfire and is impacting millions of people every day.&lt;/p&gt;
&lt;p&gt;How do you deal with such a sensitive issue? Countless articles are being churned out every day on the internet – how do you tell real from fake? It’s not as easy as turning to a simple fact-checker which is typically built on a story-by-story basis. As developers, can we turn to machine learning?&lt;/p&gt;
&lt;p&gt;In this talk, We will try to live code an application using TensorFlow and twilio WhatsApp API to detect fake news! While going through the code we will explore various machine learning concepts and new features in TensorFlow 2.0 which simplifies our job.&lt;/p&gt;
&lt;p&gt;We will also touch base on how we can use Advanced pre-trained NLP models like BERT, GPT-2, XLNet, Grover etc, to achieve our goal! This will be insightful session for beginners as well as intermediate level audience.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jayesh Ahire</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/fake-news-foe-machine-learning.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Flask: Beyond Hello World</title><link>https://pyvideo.org/python-web-conf-2020/flask-beyond-hello-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Flask: Beyond Hello World&amp;quot; by: Randy Syring&lt;/p&gt;
&lt;p&gt;Getting started in Flask is super easy. But what happens when your application needs more than just the basics? Flask's simplicity makes it easy to get started but also means you have to do more legwork as your application's needs grow.&lt;/p&gt;
&lt;p&gt;We will start with a typical &amp;quot;Hello World&amp;quot; Flask app and then integrate common features needed for most modern web applications, including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Utilizing application factory pattern &amp;amp; blue prints&lt;/li&gt;
&lt;li&gt;Automated testing with pytest&lt;/li&gt;
&lt;li&gt;CLI integration with external packages and global options&lt;/li&gt;
&lt;li&gt;Logging&lt;/li&gt;
&lt;li&gt;Database integration with Flask-SQLAlchemy&lt;/li&gt;
&lt;li&gt;Distributed task queues for background tasks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Preparation:
A familiarity with Flask will be helpful, but not required. The presentation will mostly be focused on concepts, not on the fine details of implementation. A companion GitHub repository will be available after the talk so attendees can dig deeper into implementation if desired.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Randy Syring</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/flask-beyond-hello-world.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Flexible Tile Layouts in Plone using Mosaic</title><link>https://pyvideo.org/python-web-conf-2020/flexible-tile-layouts-in-plone-using-mosaic.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Flexible Tile Layouts in Plone using Mosaic&amp;quot; by: Chrissy Wainwright&lt;/p&gt;
&lt;p&gt;Mosaic (plone.app.mosaic) provides the ability for Plone site editors to build custom layouts without having to edit templates or build custom views.&lt;/p&gt;
&lt;p&gt;As a developer, you can construct more building blocks (tiles) that will be available to the editors in the site. But the process for creating new tiles isn’t very straightforward.&lt;/p&gt;
&lt;p&gt;This talk will walk through the steps to create a new tile - where the title, body text, and background image will be easily managed by your editors.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chrissy Wainwright</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/flexible-tile-layouts-in-plone-using-mosaic.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Incrementally Developing Your Web App With Jupyter and Klein</title><link>https://pyvideo.org/python-web-conf-2020/incrementally-developing-your-web-app-with-jupyter-and-klein.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Incrementally Developing Your Web App With Jupyter and Klein&amp;quot; by: Moshe Zadka&lt;/p&gt;
&lt;p&gt;Still restarting your app when you add or modify an endpoint? In the 1980s, we had real interactive development environment. Not editors which can run a debugger: an environment you modified by developing code. While 2015 maybe the past, come join a trip back....to the future of 1985. See how to develop an application endpoint by endpoint while it is running, leaving auto-restarting directory monitors in the 2015 past where they belong.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Moshe Zadka</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/incrementally-developing-your-web-app-with-jupyter-and-klein.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Kubernetes Clusters in Salt</title><link>https://pyvideo.org/python-web-conf-2020/kubernetes-clusters-in-salt.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Kubernetes Clusters in Salt&amp;quot; by: Gareth Greenway&lt;/p&gt;
&lt;p&gt;Kubernetes has taken the world by storm, changing the way we think about server usage and application deployments. There are many deployments of Salt around the world where it's being used to set up, manage, communicate with and maintain Kubernetes clusters.&lt;/p&gt;
&lt;p&gt;In this talk we'll look at the different Salt components that make interacting with Kubernetes extremely smooth! We'll look at ways to easily install and maintain Kubernetes clusters. We'll also look at ways we can utilize Salt to control and deploy out applications to a Kubernetes cluster.&lt;/p&gt;
&lt;p&gt;Finally, we'll look at ways to bring events from the cluster such as when containers are created or destroyed into the Salt event bus and what we can do with those events once they're available.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gareth Greenway</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/kubernetes-clusters-in-salt.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Machine Learning Madness into Web Applications on the Cloud</title><link>https://pyvideo.org/python-web-conf-2020/machine-learning-madness-into-web-applications-on-the-cloud.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Machine Learning Madness into Web Applications on the Cloud&amp;quot; by: Suman Debnath&lt;/p&gt;
&lt;p&gt;In this talk we will dive deep into one the ML algorithm(Gradient Boosting based models) using Python, and shall build a web application with the model, using Flask and shall deploy the application on the Cloud. We will walk through the whole process step by step via live code, and deploy the application with ease. The idea is to help and motivate the audience to get some glimpse of the limitless opportunity we can have, by threading machine learning intelligence to any web application to solve some interesting real world problem, and all using few lines of Python code.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Suman Debnath</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/machine-learning-madness-into-web-applications-on-the-cloud.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Open Concept Lab: Helping the world's underserved with open source python code</title><link>https://pyvideo.org/python-web-conf-2020/open-concept-lab-helping-the-worlds-underserved-with-open-source-python-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Open Concept Lab: Helping the world's underserved with open source python code&amp;quot; by: Jonathan Payne&lt;/p&gt;
&lt;p&gt;The international community and low income countries are using open source software to help solve some of the world's biggest health challenges, like HIV/AIDS, Malaria, even COVID-19. The Open Concept Lab (OCL) is an open source project that helps countries and organizations manage, publish, and use standard terminology, which is how an electronic medical record knows that &amp;quot;Complete Blood Count&amp;quot;, &amp;quot;CBC&amp;quot;, and &amp;quot;Full Hemogram&amp;quot; all mean the same thing. Getting this wrong could increase morbidity. But being able to use data, regardless of who, where, or how it was captured can save lives. OCL is part of the Open Health Information Exchange (OpenHIE) community, an online community dedicated to developing open software and standards improving the health of the underserved. Drop by if you want to geek out on terminology standards, open source python, and international development.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonathan Payne</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/open-concept-lab-helping-the-worlds-underserved-with-open-source-python-code.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Permissions &amp; Security in Plone</title><link>https://pyvideo.org/python-web-conf-2020/permissions-security-in-plone.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Permissions &amp;amp; Security in Plone&amp;quot; by: Kim Nguyen&lt;/p&gt;
&lt;p&gt;Data security makes news headlines, often for the wrong reasons, when it has not been implemented correctly, or when it has been added to systems as an afterthought.&lt;/p&gt;
&lt;p&gt;Plone is a secure, open source web content management system that is written in Python and has been under active development since 2001.&lt;/p&gt;
&lt;p&gt;One of Plone's great strengths is its baked-in security model, which is comprised of:&lt;/p&gt;
&lt;p&gt;object- and field-level permissions
roles
groups
workflow states, transitions, and guards
In this talk, I will explain the elements of Plone's time-tested security model and I will show how these elements work together to help developers create websites and web applications that are secure by default.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kim Nguyen</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/permissions-security-in-plone.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Pluggable Architecture</title><link>https://pyvideo.org/python-web-conf-2020/pluggable-architecture.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Pluggable Architecture&amp;quot; by: Aly Sivji&lt;/p&gt;
&lt;p&gt;Applications and libraries with pluggable architecture allow developers to customize software without having to modify existing code. We can use plugins to modify user interfaces, create new workflows, and interface with legacy systems. Designing a plugin is often difficult - documentation is sparse, outdated, or non-existent. You end up diving into a unfamiliar codebase to figure out what to do.&lt;/p&gt;
&lt;p&gt;This talk examines Pluggable Architecture by creating a custom plugin system: we will design an interface, think about where to hook in custom behavior, and discuss testing techniques. Understanding these principles will enable us to write custom plugins for third-party packages. Extend the functionality of your favourite library without touching existing code!&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aly Sivji</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/pluggable-architecture.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Python Web Conf supports CoderDojo</title><link>https://pyvideo.org/python-web-conf-2020/python-web-conf-supports-coderdojo.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Python Web Conf supports CoderDojo&amp;quot; with: Calvin Hendryx-Parker and Josh Qualls&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Python Web Conf supports @coderdojo with: Calvin Hendryx-Parker and Josh Qualls</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/python-web-conf-supports-coderdojo.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Python - Web - Observability (Keynote)</title><link>https://pyvideo.org/python-web-conf-2020/python-web-observability-keynote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Python - Web - Observability (Keynote)&amp;quot; by: Steve Flanders&lt;/p&gt;
&lt;p&gt;We now live in a Cloud Native world where we build and deploy software very differently from the previous generation. As companies began to build or migrate to microservice architectures they often run into operational complexity and struggle to efficiently monitor their environments. These challenges have highlighted the need to observe systems differently and lead to the rise of Observability.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Flanders</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/python-web-observability-keynote.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Small Teams Managing Security at Scale</title><link>https://pyvideo.org/python-web-conf-2020/small-teams-managing-security-at-scale.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Small Teams Managing Security at Scale&amp;quot; by: Andy Leeb&lt;/p&gt;
&lt;p&gt;Small teams often don't have the resources or ability for managing security for their applications. This talk will describe how a small team implemented a security program which includes a bug bounty program and where we were able to extract the most value.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Leeb</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/small-teams-managing-security-at-scale.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Static Typing in Python</title><link>https://pyvideo.org/python-web-conf-2020/static-typing-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Static Typing in Python&amp;quot; by: Shubhi Khanna&lt;/p&gt;
&lt;p&gt;Python is well-known as a programming language without static types. This means that you don’t need to say what a given variable will hold, or whether your function will return a string or an integer (or sometimes one, and sometimes another!). This has historically made Python a very flexible and beginner-friendly language. In this talk, we’ll discuss the advantages and disadvantages to a static type system, as well as recent efforts to introduce static typing to Python via optional “type hints” and various tools to aid in adding types to Python code. We’ll see what this means for Python, for Python programmers, and what the future has in store for Python’s type system.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shubhi Khanna</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/static-typing-in-python.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>The Zen of Python Teams: New Lessons</title><link>https://pyvideo.org/python-web-conf-2020/the-zen-of-python-teams-new-lessons.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;The Zen of Python Teams: New Lessons&amp;quot; by: Adrienne Lowe&lt;/p&gt;
&lt;p&gt;The Zen of Python, accessed by running import this, is a list of nineteen aphorisms that have guided the development of the language. It has good advice for how to organize our code, but what does it have to say about how we organize ourselves? Plenty: the Zen of Python is not only a solid set of development principles, but the other easter egg is that it’s packed with wisdom about how to build healthy teams.&lt;/p&gt;
&lt;p&gt;In this talk I draw upon my time as a Director of happy Python-focused engineering teams to tell stories of what the Zen of Python has to teach us about communication and conflict, building inclusive teams and transparent processes, and promoting psychological safety. Come ready to reflect on and feel inspired by a new interpretation of these principles, and bring what you learn back to your meetup, study group, open source project, or team.&lt;/p&gt;
&lt;p&gt;Who and Why:&lt;/p&gt;
&lt;p&gt;This talk is for anyone who works with other humans on Python projects in any capacity--at Meetups, study groups, on open source projects, or at work. No background knowledge or experience is required, only an interest in learning about communication and teamwork, and hearing examples from some teams that struggled, but found ways to work together, better.&lt;/p&gt;
&lt;p&gt;While the context of the talk is that the speaker leads Python teams, you absolutely don't have to manage or lead a development team or even be on a professional development team to learn from this talk. I hope to show how anyone can find fresh, insightful, and personal meaning in the Zen of Python to communicate more clearly, handle conflict more gracefully, document their processes more transparently, and improve their relationships.&lt;/p&gt;
&lt;p&gt;Finally, in the closing part of this talk, attendees will reflect on and develop an inspiring aphorism of their own that speaks to the team they currently work most closely with. I will suggest they share this new &amp;quot;21st aphorism&amp;quot; with their networks and team.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrienne Lowe</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/the-zen-of-python-teams-new-lessons.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>To comment or not? A data-driven look at attitudes toward code comments</title><link>https://pyvideo.org/python-web-conf-2020/to-comment-or-not-a-data-driven-look-at-attitudes-toward-code-comments.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To comment or not? A data-driven look at attitudes toward code comments&amp;quot; by: Veronica Hanus&lt;/p&gt;
&lt;p&gt;Every programmer has asked themselves “how many comments are too many?” To the newest programmers, comments may seem magical--a way of documenting without giving instructions to the computer. But commenting engages the same vulnerability as more advanced challenges (i.e. pair programming &amp;amp; code review) and is likely to pique the insecurity of many programmers (especially the copy-and-paste or tutorial-level programmer)!&lt;/p&gt;
&lt;p&gt;While most of us agree that commenting is part of writing maintainable code, it’s very difficult for someone who has not yet worked in a community-reviewed codebase to know what is good practice and not. The answers that come back often conflict each other: Code should be DRY, but well-placed comments save future devs. How can someone find the commenting style that is best for them as they learn, grow, &amp;amp; contribute? My survey of 170 long-time developers, Computer Science majors, bootcamp grads, &amp;amp; hobby programmers confirms some expectations and brings others into question. Join me for a data-based chat about the biggest pain points caused by our attitudes toward commenting and the steps we can take to encourage a growth mindset and empower programmers of all levels.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Veronica Hanus</dc:creator><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-19:/python-web-conf-2020/to-comment-or-not-a-data-driven-look-at-attitudes-toward-code-comments.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>A Deep Dive into Measuring Dependency Freshness with LibYear</title><link>https://pyvideo.org/python-web-conf-2020/a-deep-dive-into-measuring-dependency-freshness-with-libyear.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;A Deep Dive into Measuring Dependency Freshness with LibYear&amp;quot; by: Scott Ford&lt;/p&gt;
&lt;p&gt;LibYear is a dependency freshness measure which helps you learn how out of date your project’s dependencies are. While LibYear has considerable value when used as a “spot” metric, something that you just measure once, there is even more power that can be unlocked when you observe how the metric has trended over time. In this talk, we’ll explore a tool, libmetrics, which is able to compute this metric across a project’s history. The libmetrics tool supports many different dependency management tools from many different frameworks. Also during this talk, we’re going to look at graphs of LibYear over time for many different open source projects. By analyzing these graphs, we can see the long term impacts of different decisions, such as when a team decides to start using Dependabot.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Ford</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/a-deep-dive-into-measuring-dependency-freshness-with-libyear.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>AI Content Prediction for Large Websites</title><link>https://pyvideo.org/python-web-conf-2020/ai-content-prediction-for-large-websites.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;AI Content Prediction for Large Websites&amp;quot; by: Mike Moran
Large websites (tens of thousands of pages, or much. much more) are special beasts. There is no perfect information architecture or navigation that can possibly assist everyone to find what they are looking for. We can learn from Amazon and other highly successful web experiences that two techniques work very well. The first is exceptional site search that delivers on the promise to really find what users are looking for. The second is content recommendation--the ability to automatically suggest the content that the user wants to see next when they are on a certain page. It likely won't surprise you that numerous AI techniques, including Machine Learning and Natural Language Processing, are at the heart of the solution, and that large amounts of data about user activity and the content itself are needed to solve this findability problem.&lt;/p&gt;
&lt;p&gt;In this session, you'll learn how Solosegment uses content prediction to help users of large websites find what they are looking for. We'll take you under the hood to show you how content prediction works, as well as show you what APIs we make available for you to embed the data and predictions into your own applications.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Moran</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/ai-content-prediction-for-large-websites.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>CI/CD for Serverless Applications</title><link>https://pyvideo.org/python-web-conf-2020/cicd-for-serverless-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;CI/CD for Serverless Applications&amp;quot; by: Marcia Villalba
To get the most out of the agility afforded by serverless, it is essential to build CI/CD pipelines that help teams iterate on code and quickly release features. Serverless and distributed systems in production cannot be done any other way than with a good and efficient CI/CD pipeline.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marcia Villalba</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/cicd-for-serverless-applications.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Classy Abstractions (Keynote)</title><link>https://pyvideo.org/python-web-conf-2020/classy-abstractions-keynote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Classy Abstractions (Keynote)&amp;quot; by: Hynek Schlawack
Good abstractions can help us make software more correct, easier to understand, and easier to debug. Yet they appear to be widely underappreciated in the Python community. Let’s have a look together at what they can do for you, and hopefully you’ll never put a tuple into a dict ever again.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hynek Schlawack</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/classy-abstractions-keynote.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Development of LINEBot for Guessing Bicycle Theft Using Open Data</title><link>https://pyvideo.org/python-web-conf-2020/development-of-linebot-for-guessing-bicycle-theft-using-open-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Development of LINEBot for Guessing Bicycle Theft Using Open Data&amp;quot; by: Kenji Kawanobe
Do you know LINE? LINE is a messenger app used by almost all Japanese. This time, I developed a bot to estimate bicycle theft using Python, LINE and Open data with bicycle theft data. I will talk about pre-processing of open data, Implementation of bicycle theft estimation function by Mahalanobis.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kenji Kawanobe</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/development-of-linebot-for-guessing-bicycle-theft-using-open-data.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Finite State Machine (FSM) in Django</title><link>https://pyvideo.org/python-web-conf-2020/finite-state-machine-fsm-in-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Finite State Machine (FSM) in Django&amp;quot; by: Calvin Hendryx-Parker&lt;/p&gt;
&lt;p&gt;Workflows are super powerful tools for automating business processes online. Our everyday life is full of workflows such as requesting time off from work. Many of these are actually Finite State Machines that move from state to state via transitions. Popular CMS’ such as Plone have rich support for workflows, but now with django-fsm we can build quick, lightweight business workflows for our applications. Plus, we have full audit logging and even build visualizations of our workflow to confirm with the business owners generated from the code.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Calvin Hendryx-Parker</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/finite-state-machine-fsm-in-django.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category><category>Django</category></item><item><title>Fireside Chat with Carl Meyer</title><link>https://pyvideo.org/python-web-conf-2020/fireside-chat-with-carl-meyer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Fireside Chat&amp;quot; with: Carl Meyer and Calvin Hendryx-Parker&lt;/p&gt;
&lt;p&gt;Join Carl Meyer of Instagram for a Fireside Chat on their infrastructure, best practices, and more!&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fireside Chat with: Carl Meyer and Calvin Hendryx-Parker</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/fireside-chat-with-carl-meyer.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Full-Stack Web with Nothing But Python: A Deep Dive into Anvil</title><link>https://pyvideo.org/python-web-conf-2020/full-stack-web-with-nothing-but-python-a-deep-dive-into-anvil.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Full-Stack Web with Nothing But Python: A Deep Dive into Anvil&amp;quot; by: Meredydd Luff&lt;/p&gt;
&lt;p&gt;The Web stack is famously complicated, with a huge number of languages and libraries for even a simple app. What if, instead, we could do it all in Python?
I'll be taking a deep dive into Anvil, an open-source framework for building full-stack web-apps with nothing but Python. That means Python in the browser, Python on the server, Python for the database - even a Python UI toolkit! I'll be digging into how Anvil works, but &lt;em&gt;why&lt;/em&gt; it's so important to bring Pythonic values to the full web stack.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Meredydd Luff</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/full-stack-web-with-nothing-but-python-a-deep-dive-into-anvil.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Insane Customization Tricks for Plone</title><link>https://pyvideo.org/python-web-conf-2020/insane-customization-tricks-for-plone.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Insane Customization Tricks for Plone&amp;quot; by: Annette Lewis
Want a unique website but terrified of the infinity of acronyms needed just to start? Running an organization where every site needs it’s own special look and feel? Customizing web systems can be hard, but Plone’s got some tricks to make it simpler.&lt;/p&gt;
&lt;p&gt;Plone’s customization story has fresh ideas making changes through-the-web and via code. Just trying to change a logo or move a box from the left to the right? Want to make a fancy looking front page without hard coding it? Perhaps you want to change a template, but are terrified it’ll be overwritten during later software upgrades? Whether you’re a seasoned developer or just getting started, the power is in your hands.&lt;/p&gt;
&lt;p&gt;Out-of-the-box, Plone will do a fine job running a website, but why stop there. Let’s make Plone work for us. Learn the ins and outs of Plone and how to create a truly custom website.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Annette Lewis</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/insane-customization-tricks-for-plone.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Jumpstart your Django Project with Cookiecutter</title><link>https://pyvideo.org/python-web-conf-2020/jumpstart-your-django-project-with-cookiecutter.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Jumpstart your Django Project with Cookiecutter&amp;quot; by: Rob McBroom&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rob McBroom</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/jumpstart-your-django-project-with-cookiecutter.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category><category>Django</category></item><item><title>Nornir: Solve Big Problems Fast</title><link>https://pyvideo.org/python-web-conf-2020/nornir-solve-big-problems-fast.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Nornir: Solve Big Problems Fast&amp;quot; by: Brett Lykins
Managing over 60,000 network devices can be a mind-boggling and difficult task.&lt;/p&gt;
&lt;p&gt;Over the years at Rackspace, we have tried many tools and frameworks to help us wrangle this problem, with varying degrees of success.&lt;/p&gt;
&lt;p&gt;Recently, we’ve begun making use of Nornir to rapidly solve some of our complex and pressing issues.&lt;/p&gt;
&lt;p&gt;Nornir, as a native Python automation framework, allows us to leverage our existing Python based infrastructure, applications, and libraries and generate meaningful and powerful APIs and services for our end users and administrators.&lt;/p&gt;
&lt;p&gt;By utilizing Nornir’s built in Inventory, Task, and Result handling framework, we can quickly solve a problem and have an application from prototype to production in under a week.&lt;/p&gt;
&lt;p&gt;This allows our network developers to focus on solving the problem at hand, not on reinventing the wheel for every new API or application that is needed.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brett Lykins</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/nornir-solve-big-problems-fast.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Secure the Snakes! Tips for Secure Development in Python</title><link>https://pyvideo.org/python-web-conf-2020/secure-the-snakes-tips-for-secure-development-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Secure the Snakes! Tips for Secure Development in Python&amp;quot; by: Hayley Denbraver&lt;/p&gt;
&lt;p&gt;Developers are asked to solve complex problems and balance competing interests--and sometimes security may fall by the wayside. It is easy enough to consider security as &amp;quot;somebody else's problem&amp;quot;, but that attitude can come back to bite us. This talk will cover secure coding practices (for both general Python development and Django development) that you can incorporate into your work.  Every step towards more secure code is a win!&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hayley Denbraver</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/secure-the-snakes-tips-for-secure-development-in-python.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Serverless is for Pragmatists: CI/CD in the Age of IaC</title><link>https://pyvideo.org/python-web-conf-2020/serverless-is-for-pragmatists-cicd-in-the-age-of-iac.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Serverless is for Pragmatists: CI/CD in the Age of IaC&amp;quot; by: Anna Spysz and Chase Douglas&lt;/p&gt;
&lt;p&gt;Over the past 5 years, a common application development theme has emerged as the combination of both code and infrastructure to comprise applications. In particular, it's almost impossible to manage a serverless application without Infrastructure-as-Code, because any stateful application of reasonable scope will require a combination of compute resources alongside queues, pub-sub topics, databases, storage, and more.&lt;/p&gt;
&lt;p&gt;As these application architectures mature, best practices are also developing. While we may understand CI/CD processes for application code, similar mechanisms for Infrastructure-as-Code may be less familiar. This talk will present best practices that we’ve developed by working with our customers, including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Managing and isolating environments across cloud accounts for parameters, secrets, and resources&lt;/li&gt;
&lt;li&gt;Automated deployments of preview environments for PRs&lt;/li&gt;
&lt;li&gt;Auditing infrastructure templates to ensure least-privileged permissions&lt;/li&gt;
&lt;li&gt;Managing permissions and access controls for individual developers to be productive&lt;/li&gt;
&lt;li&gt;Providing controls to meet regulatory compliance like SOC-2 for modern, serverless application delivery&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our goal is to share these learnings with a broader set of people, and to reach those beyond our previous audiences within the serverless application development community. This talk will be focused on specific techniques and is meant to apply to a broad range of serverless and other IaC projects.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anna Spysz and Chase Douglas</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/serverless-is-for-pragmatists-cicd-in-the-age-of-iac.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Testing and Monitoring Web Applications in the Wild</title><link>https://pyvideo.org/python-web-conf-2020/testing-and-monitoring-web-applications-in-the-wild.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Testing and Monitoring Web Applications in the Wild&amp;quot; by Sam Clarke&lt;/p&gt;
&lt;p&gt;The development of web applications rarely ends with deploying the code to a host server, and some would say that’s when the real work actually begins. An application which works fine in a development environment could present a wide range of issues when running in the wild, some of which are easier to anticipate than others. The web application developer has many tools and techniques available to minimise the chance of failure and maximise the chance of fixing an issue quickly. This results in more robust deploys, happier customers, increased productivity and of course more developer sanity.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Testing and Monitoring Web Applications in the Wild by Sam Clarke</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/testing-and-monitoring-web-applications-in-the-wild.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Time Series Databases and Forecasting with FB Prophet</title><link>https://pyvideo.org/python-web-conf-2020/time-series-databases-and-forecasting-with-fb-prophet.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Time Series Databases and Forecasting with FB Prophet&amp;quot; by: Anais Dotis-Georgiou&lt;/p&gt;
&lt;p&gt;Data collection is only part of the battle. The other half is being able to easily perform data analysis. FB Prophet aims to make time-series forecasting simple and fast. In this latest talk, we’ll learn about time-series databases and how to make a time-series prediction with Prophet and InfluxDB.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anais Dotis-Georgiou</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/time-series-databases-and-forecasting-with-fb-prophet.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Time to get real with AI</title><link>https://pyvideo.org/python-web-conf-2020/time-to-get-real-with-ai.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Time to get real with AI&amp;quot; by: Chris Riley&lt;/p&gt;
&lt;p&gt;A lot of time conversations about Artificial Intelligence, Machine Learning, and recognition technology like Natural Language Processing (NLP) and Optical Character Recognition (OCR) seem like fairy dust. As more and more of this technology is implemented into applications, and Python - one of the leading languages for it. It is important to tie the magic with reality. In this talk, we will explore the basis of these technologies, the real world applications, and how to make sure that implementation is useful to the end-user. Expecting AI/ML to deliver magic to an application can lead to missed expectations, and poor rollout.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Riley</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/time-to-get-real-with-ai.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Unify Your Service Architecture With OpenAPI</title><link>https://pyvideo.org/python-web-conf-2020/unify-your-service-architecture-with-openapi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Unify Your Service Architecture With OpenAPI&amp;quot; by: Nathan van Gheem
This talk will go through understanding what OpenAPI and JSON Schema is, how it can help your organization write better endpoints, why it is superior to alternatives like grpc and how to utilize it in your python projects.&lt;/p&gt;
&lt;p&gt;We will also describe approaches to integrating OpenAPI and JSON schema into your python projects with simple patterns utilizing dependency injection, automatic definition testing with pytest and output validation. Also, it will demonstrate how using libraries like pydantic will also give you automatic mypy support along with JSON Schema.&lt;/p&gt;
&lt;p&gt;We’ll utilize patterns that can be translated to any Python framework.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan van Gheem</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/unify-your-service-architecture-with-openapi.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Why I talk about ethics when I talk about technology (Keynote)</title><link>https://pyvideo.org/python-web-conf-2020/why-i-talk-about-ethics-when-i-talk-about-technology-keynote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Why I talk about ethics when I talk about technology (Keynote)&amp;quot; by: Lorena Mesa&lt;/p&gt;
&lt;p&gt;In her talk, Lorena will be speaking on the ethical questions and quandaries that she has grappled with during her
career working with data in several different organizations. She will talk about the lessons that she has learned and how she now thinks about her work and the principles that guide it.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lorena Mesa</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/why-i-talk-about-ethics-when-i-talk-about-technology-keynote.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>You want to Kubernetes? You MUST know Docker!</title><link>https://pyvideo.org/python-web-conf-2020/you-want-to-kubernetes-you-must-know-docker.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;You want to Kubernetes? You MUST know Docker!&amp;quot; by: Angel Rivera&lt;/p&gt;
&lt;p&gt;Achieving velocity is the new normal in software development and release practices. DevOps teams are becoming more efficient and optimizing their ability to produce quality software consistently and faster. This velocity can be directly attributed to the adoption of DevOps and CI/CD practices and the implementation of DevOps tooling is at the core of these gains. Container orchestration platforms like Kubernetes are incredibly powerful and companies of all shapes and sizes wanting to embrace this powerful technology find it very difficult to find a starting point. Often enough this can be attributed to the lack of foundational skill sets required to succeed in their Kubernetes journey. This includes the lack of knowledge and experience with the Docker runtime and containers.&lt;/p&gt;
&lt;p&gt;Having a deep understanding of the Docker runtime and containers is a paramount in successfully adopting and operating Kubernetes. In this talk Angel will discuss the skill sets that individuals and teams must develop prior to endeavoring in their Kubernetes initiatives. Attendees will learn about the various skill sets needed to proficiently get started with Kubernetes. Angel will also discuss the critical aspects of the Docker runtime and containers along with demonstrating how to perform critical actions within the Docker runtime. Attendees will walk away with a solid grasp of the Docker runtime and containers that will better prepare them for their DevOps and Kubernetes initiatives.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Angel Rivera</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/you-want-to-kubernetes-you-must-know-docker.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Your First Plone 6 Project</title><link>https://pyvideo.org/python-web-conf-2020/your-first-plone-6-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Your First Plone 6 Project&amp;quot; by: Philip Bauer
Trying your hand at a new technology can be demanding. If you already know Python and Plone getting started with React and Volto gets much easier.&lt;/p&gt;
&lt;p&gt;In this talk I will pick some tasks from the example project of the Mastering Plone training and show you how to meet the same requirements using Volto, the new React-based front end for Plone.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philip Bauer</dc:creator><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-18:/python-web-conf-2020/your-first-plone-6-project.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>An Introduction to Django (Tutorial)</title><link>https://pyvideo.org/python-web-conf-2020/an-introduction-to-django-tutorial.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;An Introduction to Django (Tutorial)&amp;quot; by: Kojo Idrissa
This tutorial will introduce new and experienced Python developers to the Django web framework. You'll learn what you can do with Django and leave with a small working example. You'll also leave with knowledge of where to go next on your Django journey.&lt;/p&gt;
&lt;p&gt;RESOURCES: &lt;a class="reference external" href="https://2020.pythonwebconf.com/tutorials/an-introduction-to-django"&gt;https://2020.pythonwebconf.com/tutorials/an-introduction-to-django&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kojo Idrissa</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-17:/python-web-conf-2020/an-introduction-to-django-tutorial.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category><category>Django</category></item><item><title>Django Bootstrapping Done Right</title><link>https://pyvideo.org/python-web-conf-2020/django-bootstrapping-done-right.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Django Bootstrapping Done Right&amp;quot; by: Pablo Garcia&lt;/p&gt;
&lt;p&gt;We have been working with Django for many years and we discovered we were always repeating the same things at the beginning of each project. pycodestyle checks, unit tests, automated deployment, we where doing all of them over and over again and occasionally we were missing important things that would make our lives easier.&lt;/p&gt;
&lt;p&gt;That’s why we decided to create and maintain template repository with all the required tools to bootstrap a Django project. It has become very valuable for our company and that’s why we want to share it with the community. The project is now open source and we will review all it in this talk.&lt;/p&gt;
&lt;p&gt;Virtual environments.
Pyenv and Pipenv
Useful dependencies for development (debug toolbar, extensions, django-environ, etc.)
Services your application depends on
Docker quickstart
Compose example with DB (PostgreSQL), Cache (Redis), NGINX and RQ
Git hooks
Tests
Flake
PEP8
Pylint
JSCPD
Deployment
Deployment stack. Typical pieces of a small application.
Deploying to Heroku
CI/CD + Feature branch flow
Pipelines
Checkstyle tools
Slack integration&lt;/p&gt;
&lt;p&gt;RESOURCES: &lt;a class="reference external" href="https://2020.pythonwebconf.com/tutorials/django-bootstrapping-done-right"&gt;https://2020.pythonwebconf.com/tutorials/django-bootstrapping-done-right&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pablo Garcia</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-17:/python-web-conf-2020/django-bootstrapping-done-right.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category><category>Django</category></item><item><title>How to Setup a Plone Intranet in Half a Day (Tutorial)</title><link>https://pyvideo.org/python-web-conf-2020/how-to-setup-a-plone-intranet-in-half-a-day-tutorial.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;How to Setup a Plone Intranet in Half a Day (Tutorial)&amp;quot; by: Kim Nguyen
Whether at work or outside of work, we usually need to collaborate with others.&lt;/p&gt;
&lt;p&gt;This collaboration can take many forms:
- storing documents
- organizing documents
- sharing documents
- creating and filling out forms
- protecting documents and data from prying eyes
- managing access to documents and data
- finding documents and data&lt;/p&gt;
&lt;p&gt;Enterprises enable this kind of collaboration by creating an intranet. Users must log into this intranet, quickly and easily find the documents and data they need, revise them, save them, and share them out to others on their project teams. Intranet administrators create teams and set aside workspaces for those teams.
Setting up this type of intranet does NOT have to be hard nor does it have to be expensive!
Plone is a longstanding, secure, open source web content management system that lets you create intranets like this.&lt;/p&gt;
&lt;p&gt;RESOURCES: &lt;a class="reference external" href="https://2020.pythonwebconf.com/tutorials/how-to-setup-a-plone-intranet-in-half-a-day"&gt;https://2020.pythonwebconf.com/tutorials/how-to-setup-a-plone-intranet-in-half-a-day&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kim Nguyen</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-17:/python-web-conf-2020/how-to-setup-a-plone-intranet-in-half-a-day-tutorial.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Introduction to SQLAlchemy 2020 (Tutorial)</title><link>https://pyvideo.org/python-web-conf-2020/introduction-to-sqlalchemy-2020-tutorial.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Introduction to SQLAlchemy 2020 (Tutorial)&amp;quot; by: Mike Bayer
In this tutorial, we present a &amp;quot;from the ground up&amp;quot; tour of SQLAlchemy, what
the general idea of it is, how it's organized, and what it looks like to use
it.   This is the latest version of the &amp;quot;classic&amp;quot; SQLAlchemy tutorial  which
has been presented on many occasions since 2008, reworked for the current
recommended SQLAlchemy usage patterns with an emphasis on previewing the upcoming 1.4 and 2.0 releases of SQLAlchemy, which are poised to make major changes to many of SQLAlchemy's central paradigms and capabilities.
SQLAlchemy is presented in terms of a four-layered model, which include &amp;quot;Engine and Connection Basics&amp;quot;, &amp;quot;Table Metadata&amp;quot;, &amp;quot;SQL Expression Language&amp;quot;, and &amp;quot;ORM Usage&amp;quot; which is broken into two sections and API use is presented in terms of a console runner application which participants can install locally and follow along.   The tutorial will also present some of the newest in-development features of SQLAlchemy 1.4 which have only just merged.&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Bayer</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-17:/python-web-conf-2020/introduction-to-sqlalchemy-2020-tutorial.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>PyCharm Power Tips (Tutorial)</title><link>https://pyvideo.org/python-web-conf-2020/pycharm-power-tips-tutorial.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;PyCharm Power Tips (Tutorial)&amp;quot; by: Paul Everitt
Already using PyCharm and want to learn productivity tips? In this hands-on tutorial, we will show bite-sized ways to speed up your work and stay in the coding flow: general IDE tips, Django-specific tips, then a sample TDD session in pytest that puts those to work in a real coding session.&lt;/p&gt;
&lt;p&gt;RESOURCES: &lt;a class="reference external" href="https://2020.pythonwebconf.com/tutorials/how-to-become-a-pycharm-power-user"&gt;https://2020.pythonwebconf.com/tutorials/how-to-become-a-pycharm-power-user&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-17:/python-web-conf-2020/pycharm-power-tips-tutorial.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item><item><title>Testing Best Practices (Tutorial)</title><link>https://pyvideo.org/python-web-conf-2020/testing-best-practices-tutorial.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Testing Best Practices (Tutorial)&amp;quot; by: Randy Syring
We'll use a non-trivial Flask application to review general best practices when testing. In addition, we'll examine methods for testing an application when it must interact with services outside itself. In particular, we will review how to test:&lt;/p&gt;
&lt;p&gt;Database
Celery tasks
3rd party external APIs (REST/JSON)
CLI commands
Emails
Using Continuous Integration (CI) services
We will discuss both principles and implementation so that even if you don't use Flask, the principles learned can be applied to other frameworks (Django, etc.).&lt;/p&gt;
&lt;p&gt;This is an intermediate to advanced talk so attendees should feel comfortable:&lt;/p&gt;
&lt;p&gt;working in Python
cloning repos from GitHub
using pip and friends to create virtualenvs and install dependencies
running applications from the command line
using Docker and docker-compose to spin up external services (database, email, RabbitMQ) or having those services installed &amp;amp; available at the OS level
familiarity with using pytest will be helpful&lt;/p&gt;
&lt;p&gt;RESOURCES: &lt;a class="reference external" href="https://2020.pythonwebconf.com/tutorials/testing-done-right"&gt;https://2020.pythonwebconf.com/tutorials/testing-done-right&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recorded at the 2020 Python Web Conference (&lt;a class="reference external" href="https://2020.pythonwebconf.com"&gt;https://2020.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Randy Syring</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-06-17:/python-web-conf-2020/testing-best-practices-tutorial.html</guid><category>Python Web Conf 2020</category><category>PythonWebConf</category><category>PythonWebConf2020</category></item></channel></rss>