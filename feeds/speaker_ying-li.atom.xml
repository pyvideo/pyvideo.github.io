<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ying-li.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-05-12T00:00:00+00:00</updated><entry><title>Saturday Morning Lightning Talks + Keynotes</title><link href="https://pyvideo.org/pycon-us-2018/saturday-morning-lightning-talks-keynotes.html" rel="alternate"></link><published>2018-05-12T00:00:00+00:00</published><updated>2018-05-12T00:00:00+00:00</updated><author><name>Ying Li</name></author><id>tag:pyvideo.org,2018-05-12:pycon-us-2018/saturday-morning-lightning-talks-keynotes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Keynote Speakers: Ying Li, Qumisha Goss&lt;/p&gt;
</summary><category term="keynote"></category><category term="lightning talks"></category></entry><entry><title>Introduction to Threat Modeling</title><link href="https://pyvideo.org/pycon-us-2017/introduction-to-threat-modeling.html" rel="alternate"></link><published>2017-05-19T00:00:00+00:00</published><updated>2017-05-19T00:00:00+00:00</updated><author><name>Ying Li</name></author><id>tag:pyvideo.org,2017-05-19:pycon-us-2017/introduction-to-threat-modeling.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you a website or application developer? Are you worried about
security? Don’t know what you need to know, and what you can safely
leave to the experts? Come learn about how to analyze your application’s
design for potential security flaws, how to think like a security
engineer, and see some of the most common pitfalls that programs fall
victim to. In this talk we will work through the process of threat
modeling - understanding how your system might get attacked, what its
weak points are, and how to defend it.&lt;/p&gt;
</summary></entry><entry><title>When the going gets tough, get TUF going</title><link href="https://pyvideo.org/pycon-us-2016/ying-li-david-lawrence-when-the-going-gets-tough-get-tuf-going-pycon-2016.html" rel="alternate"></link><published>2016-05-30T00:00:00+00:00</published><updated>2016-05-30T00:00:00+00:00</updated><author><name>Ying Li</name></author><id>tag:pyvideo.org,2016-05-30:pycon-us-2016/ying-li-david-lawrence-when-the-going-gets-tough-get-tuf-going-pycon-2016.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speakers: Ying Li, David Lawrence&lt;/p&gt;
&lt;p&gt;The Update Framework (TUF) helps developers secure new or existing software update systems by providing integrity and freshness guarantees over package distribution. Integrate TUF into your deployment pipelines to provide integrity and version guarantees for build and deployment artifacts.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Multi-factor Authentication - Possession Factors</title><link href="https://pyvideo.org/pycon-us-2014/multi-factor-authentication-possession-factors.html" rel="alternate"></link><published>2014-04-13T00:00:00+00:00</published><updated>2014-04-13T00:00:00+00:00</updated><author><name>Ying Li</name></author><id>tag:pyvideo.org,2014-04-13:pycon-us-2014/multi-factor-authentication-possession-factors.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A brief overview of what multifactor authentication is, focusing
particularly on possession factors, including what common options are
available. One-time-passwords, an important concept many possession
factor types, will also be discussed.&lt;/p&gt;
</summary></entry><entry><title>Where in your RAM is "python san_diego.py"?</title><link href="https://pyvideo.org/pycon-us-2015/where-in-your-ram-is-python-san_diegopy.html" rel="alternate"></link><published>2015-04-12T00:00:00+00:00</published><updated>2015-04-12T00:00:00+00:00</updated><author><name>Ying Li</name></author><id>tag:pyvideo.org,2015-04-12:pycon-us-2015/where-in-your-ram-is-python-san_diegopy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gumshoes, the rogue program &lt;tt class="docutils literal"&gt;san_diego.py&lt;/tt&gt; is threatening to cause
havok! What is it doing to hide itself? What kind of things is it doing?
Who might it be communicating with? RAM is a big place - how can we even
find it, much less any of this information? Stay tuned and find out!&lt;/p&gt;
</summary></entry></feed>