<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jacob-hallen.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-07-05T00:00:00+00:00</updated><entry><title>Testing for beginners</title><link href="https://pyvideo.org/europython-2013/testing-for-beginners.html" rel="alternate"></link><published>2013-07-05T00:00:00+00:00</published><updated>2013-07-05T00:00:00+00:00</updated><author><name>Jacob Hallén</name></author><id>tag:pyvideo.org,2013-07-05:europython-2013/testing-for-beginners.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing automated tests for your code is a requirement in modern
software development and there lots of tools for collecting and running
tests. There are also lots of instructions for how to use the tools.&lt;/p&gt;
&lt;p&gt;However, there are very few places where you can find out how to write
your code so that it is testable and how to write meaningful tests.&lt;/p&gt;
&lt;p&gt;This talk will focus on best practices for writing tests and you should
come away from it with a better understanding of what kinds of test to
write, when to write them and how to think about testing problems.&lt;/p&gt;
&lt;p&gt;The talk is designed for beginner coders and people who have recently
started to learn Python. We will be using the Python unittest framework
and py.test in the examples.&lt;/p&gt;
</summary><category term="quality-assurance"></category><category term="testing"></category><category term="principles"></category></entry><entry><title>Refactoring PyChart</title><link href="https://pyvideo.org/europython-2011/refactoring-pychart.html" rel="alternate"></link><published>2011-07-24T00:00:00+00:00</published><updated>2011-07-24T00:00:00+00:00</updated><author><name>Jacob Hallén</name></author><id>tag:pyvideo.org,2011-07-24:europython-2011/refactoring-pychart.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Jacob Hallen - 23 June 2011 in &amp;quot;Track Tagliatelle&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyChart is a very nice program for producing print quality graphs.
However, it came equipped with a rather strange API, where every class
was called T. It was also using the global namespace in strange and
disturbing ways. Furthermore, it mixed multiple distinct tasks in some
classes.&lt;/p&gt;
&lt;p&gt;I will show how I went about refactoring the package in order to make a
nice and clean API. This talk is focused on teaching refactoring
methodology to beginner and intermediate level programmers. It will also
give a brief introduction to how to make beautiful graphs with PyChart.&lt;/p&gt;
</summary><category term="graphs"></category><category term="teaching"></category></entry></feed>