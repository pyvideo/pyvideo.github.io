<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 11 Mar 2011 00:00:00 +0000</lastBuildDate><item><title>Dependency management with Puppet</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--dependency-management-with-puppet.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dependency management with Puppet&lt;/p&gt;
&lt;p&gt;Presented by Richard Crowley&lt;/p&gt;
&lt;p&gt;Puppet is a configuration management tool that we'll learn to use the
easy way. We'll introduce the Puppet language and the concept of
resources like packages, files, shell commands, and more. We'll use
Puppet to build our dev environment and deploy it to production servers.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;We've all been there: religiously following the steps in some blog post
for the 47th time trying to setup a shiny new server. We thought we'd
improved the situation when we copied our Bash history into doit.sh and
committed it. Then along came Pip and requirements.txt files.&lt;/p&gt;
&lt;p&gt;That's where most of us are today. Pip can only manage Python packages
so much of our servers' behavior is left to Lady Luck. Puppet gives us
the power to efficiently and confidently specify everything our program
needs.&lt;/p&gt;
&lt;p&gt;We'll start at square one and the concept of resources, the basic unit
of configuration management. We'll learn the Puppet language's resource
syntax. We'll talk about obvious resource types like packages and files
plus less obvious types like shell commands, users, groups, and daemons.
We'll compose resources into larger ones, declare dependencies between
resources, and accommodate differences between OS X and Linux.&lt;/p&gt;
&lt;p&gt;These Puppet manifests can satisfy our program's dependencies on demand,
making them ideal parts of the deploy process. We'll walk through how
Puppet is used to build production environments both through tools such
as Fabric and Puppet's traditional client-server mode.&lt;/p&gt;
&lt;p&gt;Dependency hell doesn't have to be your reality. Consistent, reliable
environments can be had with Puppet.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Crowley</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--dependency-management-with-puppet.html</guid><category>dependencies</category><category>puppet</category><category>pycon</category><category>pycon2011</category></item></channel></rss>