<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_feature-flag-management.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-04-13T00:00:00+00:00</updated><entry><title>Intentional Deployment: Best Practices for Feature Flag Management</title><link href="https://pyvideo.org/pytexas-2019/intentional-deployment-best-practices-for-feature-flag-management.html" rel="alternate"></link><published>2019-04-13T00:00:00+00:00</published><updated>2019-04-13T00:00:00+00:00</updated><author><name>Caitlin Rubin</name></author><id>tag:pyvideo.org,2019-04-13:pytexas-2019/intentional-deployment-best-practices-for-feature-flag-management.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Feature flags can be powerful tools in mitigating risk in your development cycle: if you use them correctly. In 2012 one improperly deployed feature flag sent a $365 million dollar trading company into bankruptcy in about 45 minutes. So let's talk about how to manage and use feature flags in Python.&lt;/p&gt;
</summary><category term="deployment"></category><category term="feature flag management"></category></entry></feed>