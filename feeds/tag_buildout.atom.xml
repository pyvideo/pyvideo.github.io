<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_buildout.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-04-06T00:00:00+00:00</updated><entry><title>Getting started with Plone CMS development - Part 1</title><link href="https://pyvideo.org/europython-2013/getting-started-with-plone-cms-development-part-1.html" rel="alternate"></link><published>2013-07-05T00:00:00+00:00</published><updated>2013-07-05T00:00:00+00:00</updated><author><name>Nejc Zupan</name></author><id>tag:pyvideo.org,2013-07-05:europython-2013/getting-started-with-plone-cms-development-part-1.html</id><summary type="html"></summary><category term="scm"></category><category term="web"></category><category term="continuous-integration"></category><category term="testing"></category><category term="buildout"></category><category term="javascript"></category><category term="framework"></category><category term="html"></category><category term="zope"></category><category term="best-practices"></category><category term="CMS"></category><category term="plone"></category><category term="tutorial"></category></entry><entry><title>Getting started with Plone CMS development - Part 2</title><link href="https://pyvideo.org/europython-2013/getting-started-with-plone-cms-development-part-2.html" rel="alternate"></link><published>2013-07-05T00:00:00+00:00</published><updated>2013-07-05T00:00:00+00:00</updated><author><name>Nejc Zupan</name></author><id>tag:pyvideo.org,2013-07-05:europython-2013/getting-started-with-plone-cms-development-part-2.html</id><summary type="html"></summary><category term="scm"></category><category term="web"></category><category term="continuous-integration"></category><category term="testing"></category><category term="buildout"></category><category term="javascript"></category><category term="framework"></category><category term="html"></category><category term="zope"></category><category term="best-practices"></category><category term="CMS"></category><category term="plone"></category><category term="tutorial"></category></entry><entry><title>Buildout: Creando y desplegando configuraciones repetibles en python</title><link href="https://pyvideo.org/pycon-es-2014/buildout-creando-y-desplegando-configuraciones-repetibles-en-python.html" rel="alternate"></link><published>2015-04-06T00:00:00+00:00</published><updated>2015-04-06T00:00:00+00:00</updated><author><name>CodeSyntax</name></author><id>tag:pyvideo.org,2015-04-06:pycon-es-2014/buildout-creando-y-desplegando-configuraciones-repetibles-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Buildout es un sistema de instalación y despliegue de aplicaciones escrita en python. Desarrollado originalmente para la instalación de aplicaciones Zope, su uso se ha extendido a la instalación de todo tipo de aplicaciones, aunque la mayoría son escritas en python.&lt;/p&gt;
&lt;p&gt;En CodeSyntax utilizamos buildout para la configuración y despliegue de nuestras aplicaciones basadas en Plone y Django, porque nos permite tener una forma repetible y potente para la instalación de aplicaciones. Desde simples webs que solo usan el interfaz de administración de Django, hasta aplicaciones distribuidas en 5 servidores diferentes en las que se instala Apache, pound, haproxy, Zope o Memcache.&lt;/p&gt;
&lt;p&gt;En esta charla, explicaremos el funcionamiento y las ideas básicas de buildout, como se configuran las diferentes partes y explicaremos y mostraremos ejemplos y casos de uso reales. También compararemos buildout con otras herramientas muy usadas en entornos python como fabric.&lt;/p&gt;
</summary><category term="buildout"></category></entry><entry><title>Schlangenhochzeit in der Wolke</title><link href="https://pyvideo.org/pycon-de-2013/schlangenhochzeit-in-der-wolke.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Jens Klein</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/schlangenhochzeit-in-der-wolke.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Googles Appengine steht für hochskalierbare Anwendungen in der Cloud.
Locandy ist unser Startup für mobile Location based Games.&lt;/p&gt;
&lt;p&gt;Auf der Cloud-Platform mit ihrer sehr restriktiven Python-Umgebung haben
wir das Portal für Spieler, Autoren und Business Kunden umgesetzt.
Browser, Mobile-App und PDF-Server werden damit bedient.&lt;/p&gt;
&lt;p&gt;Dabei ist nicht alles so rund gelaufen, wie wir es gerne gehabt hätten.
Die Probleme wurden gelöst - dank Python mit seinem starken
Werkzeugkasten.&lt;/p&gt;
&lt;p&gt;Der Vortrag geht kurz auf die Anforderungen ein, zeigt auf welche
Probleme es gab und wie wir sie gelöst haben. In einem Github Repository
stelle ich ein Buildout inkl. kleiner Beispielapplikation mit den
meisten dieser Lösungen zur Verfügung.&lt;/p&gt;
</summary><category term="appengine"></category><category term="buildout"></category><category term="cloud"></category><category term="gruntjs"></category><category term="mobile"></category><category term="plone.testing"></category><category term="pyramid"></category><category term="testlayers"></category><category term="velruse"></category><category term="WebTest"></category></entry></feed>