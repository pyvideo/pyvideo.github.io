<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 05 May 2019 00:00:00 +0000</lastBuildDate><item><title>Real world Graphene - lessons learned from building a GraphQL API on top of a large Django project</title><link>https://pyvideo.org/pycon-italia-2019/real-world-graphene-lessons-learned-from-building-a-graphql-api-on-top-of-a-large-django-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Graphene is currently the most popular framework for building a GraphQL
in Python and it’s also an obvious choice for adding a GraphQL layer to
Django applications. Over the course of a year, we successfully built an
API with about 50 queries and over 100 mutations on top of existing
Django project (Saleor), but we also learned some hard lessons and had
to overcome several shortcomings of the framework along the way.&lt;/p&gt;
&lt;p&gt;In this talk, I’d like to share some practical tips to overcome the most
common problems that a Django developer might face when building an
optimized and maintainable API with Graphene, such as: - using useful
abstractions to build queries and mutations faster - optimizing database
queries in a graph - structuring a large Graphene project - unified
error handling&lt;/p&gt;
&lt;p&gt;I’d also like to bring up a few limitations of the framework that we
discovered as we were working on the project and then end the talk with
the most important benefits that adoption of GraphQL brings to modern
web applications development - both for the backend and frontend.&lt;/p&gt;
&lt;p&gt;Prerequisites: - Intermediate knowledge of Django - Familiarity with API
design and concepts in terms of web development - Basic knowledge of
GraphQL or interest in it&lt;/p&gt;
&lt;p&gt;I think the talk would be of great value to anyone working with a
Graphene framework and those who want to know more about building
GraphQL in Python.&lt;/p&gt;
&lt;p&gt;All code examples in the presentation would be based on Saleor
(&lt;a class="reference external" href="https://github.com/mirumee/saleor"&gt;https://github.com/mirumee/saleor&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1644"&gt;https://python.it/feedback-1644&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 11:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marcin Gębala</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-italia-2019/real-world-graphene-lessons-learned-from-building-a-graphql-api-on-top-of-a-large-django-project.html</guid><category>API Design</category><category>e-commerce</category><category>graphql</category><category>open-source</category><category>django</category></item><item><title>Platform intrusion detection with deep learning</title><link>https://pyvideo.org/pycon-de-2017/platform-intrusion-detection-with-deep-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Carsten Pohl&lt;/strong&gt; (&amp;#64;carstenpohl)&lt;/p&gt;
&lt;p&gt;Before joining REWE digital I worked for Zalando, Fraunhofer IML. My first computer was a VIC-20. I develop professionally software since the 90ies. I am one of the main developers of the new Big data platform of REWE digital, and have deep knowledge about all aspects of the platform. And I have no favorite member of One Direction.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;shop.rewe.de is not only visited by human customers, but also by machines. We have built a deep learning platform using python with Keras, Tensorflow, on the Google infrastructure. In this talk we would like to show you how python is used in practice, supporting 2,5 million visitors each day.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;shop.rewe.de is visited over 2 million times each day. Every visitor is producing thousands of requests in our micro service architecture. We are trying to give the best shopping experience for our customers, and try to keep our platform safe from bad bots. This is partly done by rule sets, and furthermore done by a platform that uses machine learning to classify bad behaviour. In this talk I would like to present our architecture that is not only able to fulfill this use case, but enables our data scientists in general to use our big data platform. the main scope will be the presentation of the use case. I will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;different microservices written in python using flask, google bigquery, tensorflow and keras&lt;/li&gt;
&lt;li&gt;scaling this microservices with kubernetes, that automatically starts more predictors in case of higher load&lt;/li&gt;
&lt;li&gt;implementation of quantifiers written in python, that generates data suitable for neural networks using numpy&lt;/li&gt;
&lt;li&gt;examples from the real world behaviour of this plattform with lessons learned&lt;/li&gt;
&lt;li&gt;examples how we feature engineered the data by analysing the data stored&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carsten Pohl</dc:creator><pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-25:pycon-de-2017/platform-intrusion-detection-with-deep-learning.html</guid><category>python</category><category>use-case</category><category>deep learning</category><category>e-commerce</category></item><item><title>LFS - Ein Online-Shop basierend auf Django</title><link>https://pyvideo.org/pycon-de-2012/lfs-ein-online-shop-basierend-auf-django.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;LFS ist ein Online-Shop basieren auf Python, Django und jQuery. Er
erfreut sich zunehmender Aufmerksamkeit, sowohl bei Entwicklern als auch
bei Anwendern. Laut &lt;a class="reference external" href="http://djangopackages.com"&gt;djangopackages.com&lt;/a&gt;
ist LFS der am häufigsten heruntergeladene Shop für Django. Änderungen
am Source Code verfolgen über 200 Entwickler und die Google-Gruppe hat
zur Zeit über 170 Mitglieder.&lt;/p&gt;
&lt;p&gt;LFS ist praxiserprobt. Beispiele für große und erfolgreiche Shops sind:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://demmelhuber.net"&gt;demmelhuber.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://holzimgarten.com"&gt;holzimgarten.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://anwaltakademie.de"&gt;anwaltakademie.de&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kai Diefenbach, Gründer und einer der Kern-Entwickler, gibt in diesem
Vortrag ein Überblick zu folgenden Themen:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Live-Shops. Vorstellung von einigen Live-Shops: Zahlen und Fakten.&lt;/li&gt;
&lt;li&gt;Features. Vorstellung der wichtigsten Features, beispielsweise:
Produktarten, Katalog, Zahlmethoden, Liefermethoden, Mehrwertsteuer,
Checkout, etc.&lt;/li&gt;
&lt;li&gt;Entwicklung. Alles rund um die Entwicklung: Wie geht diese vor sich?
Wie kann ich teilnehmen? Wie können Erweiterungen entwickelt werden?&lt;/li&gt;
&lt;li&gt;Ausblick. Die Zukunft von LFS: Releases, neue Features, etc.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Diefenbach</dc:creator><pubDate>Wed, 31 Oct 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-10-31:pycon-de-2012/lfs-ein-online-shop-basierend-auf-django.html</guid><category>django</category><category>e-commerce</category></item></channel></rss>