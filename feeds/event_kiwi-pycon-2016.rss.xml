<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 12 Sep 2016 00:00:00 +0000</lastBuildDate><item><title>Push Notifications in Python</title><link>https://pyvideo.org/kiwi-pycon-2016/push-notifications-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tim Penhey
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/133/"&gt;https://kiwi.pycon.org/schedule/presentation/133/&lt;/a&gt;
An in-depth exploration of implementing push notifications to mobile devices using a python stack.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Penhey</dc:creator><pubDate>Mon, 12 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-12:kiwi-pycon-2016/push-notifications-in-python.html</guid></item><item><title>A path to multi(arbitrary)-precision, distributed scientific computation with Python3.</title><link>https://pyvideo.org/kiwi-pycon-2016/a-path-to-multiarbitrary-precision-distributed-scientific-computation-with-python3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Boris Daszuta
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/138/"&gt;https://kiwi.pycon.org/schedule/presentation/138/&lt;/a&gt;
On occasion scientific computations at double(quadruple) precision are simply not sufficient. In lieu of the usual NumPy and SciPy one can instead make use of mpmath or SymPy. For a 'large-scale' calculation one must appeal to parallelism and indeed distributed resources (eg. Dask-distributed). We describe a package that provides for library delegation based on calculation requirements at runtime.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Boris Daszuta</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/a-path-to-multiarbitrary-precision-distributed-scientific-computation-with-python3.html</guid></item><item><title>Auckland Transport APIs</title><link>https://pyvideo.org/kiwi-pycon-2016/auckland-transport-apis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tomislav Skunca
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/112/"&gt;https://kiwi.pycon.org/schedule/presentation/112/&lt;/a&gt;
Presenting currently available transport-related APIs in Auckland. What is currently available, limitations, opportunities and future plans.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tomislav Skunca</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/auckland-transport-apis.html</guid></item><item><title>await kittens()</title><link>https://pyvideo.org/kiwi-pycon-2016/await-kittens.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lee Symes
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/128/"&gt;https://kiwi.pycon.org/schedule/presentation/128/&lt;/a&gt;
This talk will work through getting pictures(of kittens and other cute things) off Flickr using &lt;cite&gt;asyncio&lt;/cite&gt; in Python 3.5. Showing how to build up from synchronous code to asynchronous code and how to make use of Python 3.5's new language features like &lt;cite&gt;async for&lt;/cite&gt; and &lt;cite&gt;async with&lt;/cite&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lee Symes</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/await-kittens.html</guid></item><item><title>Bluetooth Low Energy</title><link>https://pyvideo.org/kiwi-pycon-2016/bluetooth-low-energy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jeremy Stott
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/139/"&gt;https://kiwi.pycon.org/schedule/presentation/139/&lt;/a&gt;
How does your smart watch work for tens of hours before needing to be charged? Let's check out Bluetooth Low Energy, and how to use Python to maximise fun.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeremy Stott</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/bluetooth-low-energy.html</guid></item><item><title>Brainstorm your own Artificial Neural Network in Python</title><link>https://pyvideo.org/kiwi-pycon-2016/brainstorm-your-own-artificial-neural-network-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Holger Spill
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/119/"&gt;https://kiwi.pycon.org/schedule/presentation/119/&lt;/a&gt;
Have you ever wanted to teach your computer how to recognise handwritten digits? The difficulty of visual pattern recognition becomes apparent when writing a computer program to recognize shapes. What seems easy when we do it ourselves quickly becomes complex when done programmatically. This talk will explore some of the concepts of Neural Networks with Brainstorm – an open-source Python library.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Holger Spill</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/brainstorm-your-own-artificial-neural-network-in-python.html</guid></item><item><title>Deciding between continuity and change in your Open Source communtiy</title><link>https://pyvideo.org/kiwi-pycon-2016/deciding-between-continuity-and-change-in-your-open-source-communtiy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Christopher Neugebauer
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/131/"&gt;https://kiwi.pycon.org/schedule/presentation/131/&lt;/a&gt;
When you’re a community of volunteers, it can be difficult to justify a change from outdated software to something newer. In this talk, we’ll cover how to make that decision: how to identify and engage with stakeholders within a community; the value of prototypes in maintaining interest; and what a cost-benefit analysis might look like when your currencies are human joy, and burnout prevention.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Neugebauer</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/deciding-between-continuity-and-change-in-your-open-source-communtiy.html</guid></item><item><title>Digital image processing - From atom to pixel and back</title><link>https://pyvideo.org/kiwi-pycon-2016/digital-image-processing-from-atom-to-pixel-and-back.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Alex Dong
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/125/"&gt;https://kiwi.pycon.org/schedule/presentation/125/&lt;/a&gt;
(Start cut of talk is correct; speaker wasn't introduced. Speaker requested all lights off for talk).&lt;/p&gt;
&lt;p&gt;This talk gives a brief tour to the complex technical process that happens between we take a photo with our camera and the photo gets printed onto a piece of paper. Be prepared for a fun, wild and intense session!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Dong</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/digital-image-processing-from-atom-to-pixel-and-back.html</guid></item><item><title>Ethics in the early days: politics and the computing profession</title><link>https://pyvideo.org/kiwi-pycon-2016/ethics-in-the-early-days-politics-and-the-computing-profession.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Janet Toland
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/150/"&gt;https://kiwi.pycon.org/schedule/presentation/150/&lt;/a&gt;
This presentation will consider how early computer professionals viewed their social responsibilities to the wider world, and how their decisions have influenced todays profession.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Janet Toland</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/ethics-in-the-early-days-politics-and-the-computing-profession.html</guid></item><item><title>Golang for Python Devs</title><link>https://pyvideo.org/kiwi-pycon-2016/golang-for-python-devs.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dana Garifullina
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/123/"&gt;https://kiwi.pycon.org/schedule/presentation/123/&lt;/a&gt;
Python is a popular language and we all know why, however it’s hard to ignore the hype around new programming languages like Scala, Rust and Go. Billed as competition to Python, Go was the most intriguing one for me. In this talk I share experiences, compare two languages and answer the questions: why try Go? How easy or frustrating is it? And will you end up preferring it over Python?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dana Garifullina</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/golang-for-python-devs.html</guid></item><item><title>Graphing when your Facebook friends are awake</title><link>https://pyvideo.org/kiwi-pycon-2016/graphing-when-your-facebook-friends-are-awake.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Alexander Hogue
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/115/"&gt;https://kiwi.pycon.org/schedule/presentation/115/&lt;/a&gt;
Look I’m not really sure why but I think I made a thing that makes graphs of when people are online on Facebook. It sounds kinda creepy and uh it is. We'll talk about the struggle of finding a good graphing library, so come along and roleplay as the NSA. ˙ ͜ʟ˙&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Hogue</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/graphing-when-your-facebook-friends-are-awake.html</guid></item><item><title>Hear no evil, see no evil, patch no evil: Or, how to monkey-patch safely.</title><link>https://pyvideo.org/kiwi-pycon-2016/hear-no-evil-see-no-evil-patch-no-evil-or-how-to-monkey-patch-safely.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Graham Dumpleton
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/155/"&gt;https://kiwi.pycon.org/schedule/presentation/155/&lt;/a&gt;
Monkey patching has come to have a reputation of being somewhat evil. In this talk you will learn what monkey patching is all about and whether its reputation as being evil is truly justified.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Dumpleton</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/hear-no-evil-see-no-evil-patch-no-evil-or-how-to-monkey-patch-safely.html</guid></item><item><title>Leveraging Python to Automate GIS Processes and Provide Extended Analytical Capabilities</title><link>https://pyvideo.org/kiwi-pycon-2016/leveraging-python-to-automate-gis-processes-and-provide-extended-analytical-capabilities.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hamish Kingsbury, Neal Johnston
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/117/"&gt;https://kiwi.pycon.org/schedule/presentation/117/&lt;/a&gt;
Geographical Information Systems (GIS) is a developing spatial technology that uses the Python programming language. Using commercial and open source libraries, GIS analysis and development can be automated and extended beyond the regular capabilities of desktop software. This can include spatial analysis, data mining and automatic map generation.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hamish Kingsbury</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/leveraging-python-to-automate-gis-processes-and-provide-extended-analytical-capabilities.html</guid></item><item><title>Lightning Talks Friday</title><link>https://pyvideo.org/kiwi-pycon-2016/lightning-talks-friday.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/lightning-talks-friday.html</guid><category>lightning talks</category></item><item><title>Lightning Talks Saturday</title><link>https://pyvideo.org/kiwi-pycon-2016/lightning-talks-saturday.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/lightning-talks-saturday.html</guid><category>lightning talks</category></item><item><title>Making randomly generated guitar effect patches that don't sound terrible</title><link>https://pyvideo.org/kiwi-pycon-2016/making-randomly-generated-guitar-effect-patches-that-dont-sound-terrible.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Steve Baker
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/140/"&gt;https://kiwi.pycon.org/schedule/presentation/140/&lt;/a&gt;
Modern guitar effects processors are available which have flexible and complex signal processing pipelines and can be controlled remotely via MIDI. I attempt to use python to create good and interesting sounds by randomly generating effects patches.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Baker</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/making-randomly-generated-guitar-effect-patches-that-dont-sound-terrible.html</guid></item><item><title>Making sense of setup.py</title><link>https://pyvideo.org/kiwi-pycon-2016/making-sense-of-setuppy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tim McNamara
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/122/"&gt;https://kiwi.pycon.org/schedule/presentation/122/&lt;/a&gt;
This talk will guide you through the process of wrapping your scraps and scripts into dapper Python packages. Now when you want to re-use some of the code that you've written before, you'll be able to without resorting to an ugly kludge. No more copy &amp;amp; paste, no path hacks - just beautiful, easy to install code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim McNamara</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/making-sense-of-setuppy.html</guid></item><item><title>Making the web go fast with jelly snakes and raspberry twizzlers</title><link>https://pyvideo.org/kiwi-pycon-2016/making-the-web-go-fast-with-jelly-snakes-and-raspberry-twizzlers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jack Skinner
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/114/"&gt;https://kiwi.pycon.org/schedule/presentation/114/&lt;/a&gt;
In this fun &amp;amp; playful session I’ll take you on a journey from HTTP/1.1 to HTTP/2 enjoying the sights &amp;amp; delights of its new features along the way. With features like multiplexing, yesterdays best practices are now tomorrow’s anti-patterns - so what does this mean your app or API?  HTTP/2 is changing the game for performance &amp;amp; it’s all explained of course, using jelly snakes &amp;amp; raspberry twizzlers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jack Skinner</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/making-the-web-go-fast-with-jelly-snakes-and-raspberry-twizzlers.html</guid></item><item><title>Middle-Out Python Development</title><link>https://pyvideo.org/kiwi-pycon-2016/middle-out-python-development.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ben Shaw
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/116/"&gt;https://kiwi.pycon.org/schedule/presentation/116/&lt;/a&gt;
Too often when developing Python web apps we first choose a framework and database, then code to their rules and restrictions. It's only later that we start thinking about our application's business logic. If we reverse the order and work on our logic first it can make code easier to test, and let us make more informed decisions of what frameworks and data-stores best suit our project.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Shaw</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/middle-out-python-development.html</guid></item><item><title>More testing with fewer tests</title><link>https://pyvideo.org/kiwi-pycon-2016/more-testing-with-fewer-tests.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Clinton Roy
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/113/"&gt;https://kiwi.pycon.org/schedule/presentation/113/&lt;/a&gt;
We all wish we were were testing more, but tests are ugly, a pain to write and are brittle. Property based testing helps to solve all of these problems. Now, with Hypothesis, Python has an outstanding toolkit to write property based tests.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Clinton Roy</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/more-testing-with-fewer-tests.html</guid></item><item><title>Practical Python Async for Dummies</title><link>https://pyvideo.org/kiwi-pycon-2016/practical-python-async-for-dummies.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Grant Paton-Simpson
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/121/"&gt;https://kiwi.pycon.org/schedule/presentation/121/&lt;/a&gt;
What's the point of faster computers if our code spends most of its time waiting for slower processes to complete. Shouldn't we be using asynchronous code to make lots of things happen simultaneously? Probably, but isn't that really tricky to do? The goal of this talk is to work through some very simple snippets of Python code that make common tasks much, much faster with minimal fuss.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Grant Paton-Simpson</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/practical-python-async-for-dummies.html</guid><category>async</category><category>for dummies</category></item><item><title>Preventing Cat-astrophes with GNU MediaGoblin</title><link>https://pyvideo.org/kiwi-pycon-2016/preventing-cat-astrophes-with-gnu-mediagoblin.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ben Sturmfels
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/124/"&gt;https://kiwi.pycon.org/schedule/presentation/124/&lt;/a&gt;
What would happen to all the cat videos if YouTube were to disappear? It would be a cat-atstrophe! GNU MediaGoblin is Python-based media publishing system for artists — an alternative to centralised, censored and surveilled systems like Flickr, YouTube and SoundCloud. MediaGoblin gives people privacy, choice and control of their own media, something we need now more than ever.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Sturmfels</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/preventing-cat-astrophes-with-gnu-mediagoblin.html</guid></item><item><title>PygData : Python in BigData</title><link>https://pyvideo.org/kiwi-pycon-2016/pygdata-python-in-bigdata.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Krupesh Desai
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/145/"&gt;https://kiwi.pycon.org/schedule/presentation/145/&lt;/a&gt;
A Concise overview of the term &amp;quot;Big Data&amp;quot; with simple examples followed by highlighting areas where Python is widely used in big data solutions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krupesh Desai</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/pygdata-python-in-bigdata.html</guid></item><item><title>Rust for Pythonistas</title><link>https://pyvideo.org/kiwi-pycon-2016/rust-for-pythonistas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Robert Collins
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/136/"&gt;https://kiwi.pycon.org/schedule/presentation/136/&lt;/a&gt;
Rust is a new systems programming language iniated and sponsored by Mozilla thats making some waves - its the core for servo, Firefox's new parallel render engine, amongst other things. Find out how it is relevant to Pythonistas even in these modern mypy days, as well as interop between Rust and Python, and differences in programming style.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Collins</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/rust-for-pythonistas.html</guid></item><item><title>Scientific Hooliganism - what we can learn from the first hack in history</title><link>https://pyvideo.org/kiwi-pycon-2016/scientific-hooliganism-what-we-can-learn-from-the-first-hack-in-history.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lilly Ryan
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/135/"&gt;https://kiwi.pycon.org/schedule/presentation/135/&lt;/a&gt;
In 1903, Guglielmo Marconi prepared to unveil his world-first, long-distance wireless communication technology to the Royal Institution in London. He was looking forward to roaring success - but he didn't count upon falling victim to the first hack in history. Over a century later, the tech industry is still repeating Marconi's mistakes. What can the FOSS and infosec communities learn from 1903?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lilly Ryan</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/scientific-hooliganism-what-we-can-learn-from-the-first-hack-in-history.html</guid></item><item><title>Some 10,000ft views of DNA Sequence Data using Python and R</title><link>https://pyvideo.org/kiwi-pycon-2016/some-10000ft-views-of-dna-sequence-data-using-python-and-r.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Alan McCulloch
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/132/"&gt;https://kiwi.pycon.org/schedule/presentation/132/&lt;/a&gt;
To observe interesting structure in data we often need to throw away quite alot of information !
This talk is centered around a small python library I have developed, and some
applications that use it to help find structure in large DNA datasets,  mainly as part of
quality control  strategies used in a sequencing lab.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alan McCulloch</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/some-10000ft-views-of-dna-sequence-data-using-python-and-r.html</guid></item><item><title>SSL all the things</title><link>https://pyvideo.org/kiwi-pycon-2016/ssl-all-the-things.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Markus Holtermann
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/134/"&gt;https://kiwi.pycon.org/schedule/presentation/134/&lt;/a&gt;
Over the last few years SSL/TLS encryption of websites has risen tremendously. The Let’s Encrypt organization makes that pretty easy. And you can use it, too. For free! In this talk I'll show how to integrate SSL/TLS and point out some common pitfalls.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/ssl-all-the-things.html</guid></item><item><title>Tai Chi Principles for Mindful Programmers</title><link>https://pyvideo.org/kiwi-pycon-2016/tai-chi-principles-for-mindful-programmers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Barry Warsaw
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/141/"&gt;https://kiwi.pycon.org/schedule/presentation/141/&lt;/a&gt;
I've been playing music all my life, programming for almost 40 years, using Python for more than 20, and studying tai chi for nearly 15.  These life-long pursuits continue to reveal their truths as fun and interesting vocations and avocations.  My study of tai chi has had particularly profound consequences and in this talk I'll explore some of its applications to the world of programming.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Barry Warsaw</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/tai-chi-principles-for-mindful-programmers.html</guid></item><item><title>The dangerous, exquisite art of safely handing user-uploaded files</title><link>https://pyvideo.org/kiwi-pycon-2016/the-dangerous-exquisite-art-of-safely-handing-user-uploaded-files.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tom Eastman
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/110/"&gt;https://kiwi.pycon.org/schedule/presentation/110/&lt;/a&gt;
&amp;quot;Come On, What Harm Can a User Profile photo Do?&amp;quot;.  The most dangerous thing you can do with your web application is allow people to upload files to it, not even the best web frameworks can fully protect you from the range of damage that can be done.  I'll show you every scary thing I know about that can be done with a file upload, and how to protect yourself from -- hopefully -- most of them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Eastman</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/the-dangerous-exquisite-art-of-safely-handing-user-uploaded-files.html</guid></item><item><title>The Power ⚡️ and Responsibility 😓 of Unicode Adoption ✨</title><link>https://pyvideo.org/kiwi-pycon-2016/the-power-and-responsibility-of-unicode-adoption.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Katie McLaughlin
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/107/"&gt;https://kiwi.pycon.org/schedule/presentation/107/&lt;/a&gt;
Unicode is the way of the future, with thousands of hours being spent to incorporate it into legacy systems. But what about Emoji adoption? From the technical to the social aspects, this talk will cover why the extended character set provided by the Unicode standard needs to be treated with responsibility by users and platforms alike.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie McLaughlin</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/the-power-and-responsibility-of-unicode-adoption.html</guid></item><item><title>Universal Second Factor authentication, or why 2FA today is wubalubadubdub?</title><link>https://pyvideo.org/kiwi-pycon-2016/universal-second-factor-authentication-or-why-2fa-today-is-wubalubadubdub.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Yuriy Ackermann
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/111/"&gt;https://kiwi.pycon.org/schedule/presentation/111/&lt;/a&gt;
Today main 2FA solutions are OTP(TOTP, HOTP), RSA keys and SMS. All these solutions lack UX, security and privacy, easy to phish, and mostly not standardized. In this talk we will introduce FIDO U2F protocol, talk about its key strength, overview the protocol, review current protocol support, and for desert do some demos.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yuriy Ackermann</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/universal-second-factor-authentication-or-why-2fa-today-is-wubalubadubdub.html</guid></item><item><title>Use Workflow-as-a-Service without writing python code</title><link>https://pyvideo.org/kiwi-pycon-2016/use-workflow-as-a-service-without-writing-python-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lingxian Kong
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/120/"&gt;https://kiwi.pycon.org/schedule/presentation/120/&lt;/a&gt;
Things will be in a mess if you want to implement a program that have a lot of tasks running in any language, including Python. Most of complicated processes consist of lots of steps, which should be executed in particular sequence. Mistral(implemented in Python) can automate such orchestration of steps and provide many other features, leave things to Mistral without writing your own Python code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lingxian Kong</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/use-workflow-as-a-service-without-writing-python-code.html</guid></item><item><title>Warpdrive, making Python web application deployment magically easy.</title><link>https://pyvideo.org/kiwi-pycon-2016/warpdrive-making-python-web-application-deployment-magically-easy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Graham Dumpleton
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/108/"&gt;https://kiwi.pycon.org/schedule/presentation/108/&lt;/a&gt;
Deploying Python web applications is too hard. You either have to understand some arcane configuration syntax, or have to dig through an encyclopaedic volume of options. It shouldn't have to be this hard. In this talk you will see how 'warpdrive', with the right sort of magic, can make Python web application deployment easy.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Dumpleton</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/warpdrive-making-python-web-application-deployment-magically-easy.html</guid></item><item><title>What's holding you back from connecting with others?</title><link>https://pyvideo.org/kiwi-pycon-2016/whats-holding-you-back-from-connecting-with-others.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lucy Bain
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/142/"&gt;https://kiwi.pycon.org/schedule/presentation/142/&lt;/a&gt;
We interact with people every day, let's do it a bit better! First I'll cover a bit about improving how you connect with people day to day. Then we'll move into participating in your communities and how to make it a better experience. Finally, I'll discuss some ways to organise events that work for you, so you get the most out of the experience.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lucy Bain</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/whats-holding-you-back-from-connecting-with-others.html</guid></item></channel></rss>