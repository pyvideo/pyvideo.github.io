<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ki-hwan-kim.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-07-10T00:00:00+00:00</updated><entry><title>GPU Acceleration of a Global Atmospheric Model using Python based Multi-platform</title><link href="https://pyvideo.org/europython-2017/gpu-acceleration-of-a-global-atmospheric-model-using-python-based-multi-platform.html" rel="alternate"></link><published>2017-07-10T00:00:00+00:00</published><updated>2017-07-10T00:00:00+00:00</updated><author><name>Ki-Hwan Kim</name></author><id>tag:pyvideo.org,2017-07-10:europython-2017/gpu-acceleration-of-a-global-atmospheric-model-using-python-based-multi-platform.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A global atmospheric model play an important role in short-term
weather forecasting and long-term climate prediction. The model
requires enormous computing resources because the all atmospheric
states must be calculated every time step (usually a tens of seconds
to several minutes). However, since the most atmospheric models run
only on CPU machines, they are not able to use the modern
microprocessors with high performance and low power such as NVIDIA
GPU and Intel MIC.&lt;/p&gt;
&lt;p&gt;It often costs a lot to convert codes from one machine to the other
machine.  Although it can be accelerated on GPU and MIC using OpenMP
and OpenACC directives, it is not easy to achieve peak performance. I
developed a new Python module named PyMIP (Python based Machine
Independent Platform) to integrate C, Fortran, CUDA and OpenCL codes
with a simple user interface. The main code includes configuration,
flow control, IO and MPI parallel is written by Python. Only hotspots
include huge number crunching code are written by compile language as
C, Fortran, CUDA and OpenCL. The hotspot codes are compiled and
imported using PyMIP in runtime. PyMIP enables that a user can switch
machines with simple flag.&lt;/p&gt;
&lt;p&gt;I am developing a new global atmospheric model based on PyMIP to make
it easy to utilize various modern microprocessors.  In this
presentation, I will introduce PyMIP and show the computational
performance result in NVIDIA GPU of the dynamical core of the model
developed based on PyMIP.&lt;/p&gt;
</summary></entry></feed>