<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jack-diedreich.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-11-18T00:00:00+00:00</updated><entry><title>HOWTO write a function</title><link href="https://pyvideo.org/pycon-ca-2017/howto-write-a-function.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Jack Diedreich</name></author><id>tag:pyvideo.org,2017-11-18:pycon-ca-2017/howto-write-a-function.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing a function that the compiler will accept is much easier than writing a function that will get through code review on the first pass. I've written and reviewed lots of functions and the same advice comes up again and again.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Your function should have three parts: input, transform, and output. You should do them in order and not intermingle the three.&lt;/li&gt;
&lt;li&gt;Keep the function readable by giving your reader context and keeping the amount of implied context low.&lt;/li&gt;
&lt;li&gt;You can mostly ignore cargo cult practices like one-entry-one-exit and strict function length limits. We'll talk about why those cults exist and how to defend against them in a code review.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry></feed>