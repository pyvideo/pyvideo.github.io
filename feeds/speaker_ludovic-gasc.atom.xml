<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Ludovic Gasc</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ludovic-gasc.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-09-24T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Pourquoi, mais pourquoi, async et await ont été inclu dans Python 3.5 ?</title><link href="https://pyvideo.org/pycon-fr-2016/pourquoi-mais-pourquoi-async-et-await-ont-ete-inclu-dans-python-35.html" rel="alternate"></link><published>2016-10-15T00:00:00+00:00</published><updated>2016-10-15T00:00:00+00:00</updated><author><name>Ludovic Gasc</name></author><id>tag:pyvideo.org,2016-10-15:/pycon-fr-2016/pourquoi-mais-pourquoi-async-et-await-ont-ete-inclu-dans-python-35.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Avec quelques exemples du monde réel, je vais vous expliquer l'intérêt du modèle asynchrone et quand il est intéressant de l'utiliser. De plus, je vais vous montrer pourquoi l'inclusion de async / await + AsyncIO dans le cœur de Python est un choix judicieux, d'un point de vue technique et politique …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Avec quelques exemples du monde réel, je vais vous expliquer l'intérêt du modèle asynchrone et quand il est intéressant de l'utiliser. De plus, je vais vous montrer pourquoi l'inclusion de async / await + AsyncIO dans le cœur de Python est un choix judicieux, d'un point de vue technique et politique. Enfin, je vais vous présenter quelques bibliothèques dans la boîte à outils d'AsyncIO.&lt;/p&gt;
</content><category term="PyCon FR 2016"></category></entry><entry><title>Python, c'est rapide, ou c'est lent ?</title><link href="https://pyvideo.org/pycon-fr-2016/python-cest-rapide-ou-cest-lent.html" rel="alternate"></link><published>2016-10-15T00:00:00+00:00</published><updated>2016-10-15T00:00:00+00:00</updated><author><name>Ludovic Gasc</name></author><id>tag:pyvideo.org,2016-10-15:/pycon-fr-2016/python-cest-rapide-ou-cest-lent.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dans l'inconscient collectif des développeurs, en particulier des Pythonistes, Python est considéré comme étant très lent, micro-benchmarks à l'appui. Le but de cette conférence est de montrer que la réponse n'est pas aussi binaire qu'aimerait croire les développeurs. Outre l'architecture des solutions avant le langage, il y a également …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dans l'inconscient collectif des développeurs, en particulier des Pythonistes, Python est considéré comme étant très lent, micro-benchmarks à l'appui. Le but de cette conférence est de montrer que la réponse n'est pas aussi binaire qu'aimerait croire les développeurs. Outre l'architecture des solutions avant le langage, il y a également d'autres paramètres économiques qui rentrent en jeu, que ce soit par exemple le temps/coût de développement ou de maintenance. De plus, cette conférence sera également l'opportunité de lister ce qui à disposition dans la boîte à outils de Python pour faire face aux problèmes de performances.&lt;/p&gt;
</content><category term="PyCon FR 2016"></category></entry><entry><title>Pourquoi, mais pourquoi, async et await ont été inclu dans Python 3.5 ?</title><link href="https://pyvideo.org/pycon-fr-2017/pourquoi-mais-pourquoi-async-et-await-ont-ete-inclu-dans-python-35.html" rel="alternate"></link><published>2017-09-24T00:00:00+00:00</published><updated>2017-09-24T00:00:00+00:00</updated><author><name>Ludovic Gasc</name></author><id>tag:pyvideo.org,2017-09-24:/pycon-fr-2017/pourquoi-mais-pourquoi-async-et-await-ont-ete-inclu-dans-python-35.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Avec quelques exemples du monde réel, je vais vous expliquer l'intérêt du modèle asynchrone et quand il est intéressant de l'utiliser. De plus, je vais vous montrer pourquoi l'inclusion de async / await + AsyncIO dans le cœur de Python est un choix judicieux, d'un point de vue technique et politique …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Avec quelques exemples du monde réel, je vais vous expliquer l'intérêt du modèle asynchrone et quand il est intéressant de l'utiliser. De plus, je vais vous montrer pourquoi l'inclusion de async / await + AsyncIO dans le cœur de Python est un choix judicieux, d'un point de vue technique et politique. Enfin, je vais vous présenter quelques bibliothèques dans la boîte à outils d'AsyncIO.&lt;/p&gt;
</content><category term="PyCon FR 2017"></category></entry><entry><title>Keynote: Is Python still production ready ?</title><link href="https://pyvideo.org/pyparis-2017/keynote-is-python-still-production-ready.html" rel="alternate"></link><published>2017-06-12T00:00:00+00:00</published><updated>2017-06-12T00:00:00+00:00</updated><author><name>Ludovic Gasc</name></author><id>tag:pyvideo.org,2017-06-12:/pyparis-2017/keynote-is-python-still-production-ready.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Is Python still production ready ? For Humans facing software.&lt;/p&gt;
</content><category term="PyParis 2017"></category></entry></feed>