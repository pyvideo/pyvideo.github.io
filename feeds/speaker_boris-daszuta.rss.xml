<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 11 Sep 2016 00:00:00 +0000</lastBuildDate><item><title>A path to multi(arbitrary)-precision, distributed scientific computation with Python3.</title><link>https://pyvideo.org/kiwi-pycon-2016/a-path-to-multiarbitrary-precision-distributed-scientific-computation-with-python3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Boris Daszuta
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/138/"&gt;https://kiwi.pycon.org/schedule/presentation/138/&lt;/a&gt;
On occasion scientific computations at double(quadruple) precision are simply not sufficient. In lieu of the usual NumPy and SciPy one can instead make use of mpmath or SymPy. For a 'large-scale' calculation one must appeal to parallelism and indeed distributed resources (eg. Dask-distributed). We describe a package that provides for library delegation based on calculation requirements at runtime.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Boris Daszuta</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/a-path-to-multiarbitrary-precision-distributed-scientific-computation-with-python3.html</guid></item></channel></rss>