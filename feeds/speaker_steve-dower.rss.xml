<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Tue, 05 Nov 2019 00:00:00 +0000</lastBuildDate><item><title>The Secret Life of Python</title><link>https://pyvideo.org/pydata-new-york-city-2019/the-secret-life-of-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.8 includes new features for security engineers to allow greater insight and awareness when your network is under attack (which is every day). This session will investigate the need for these hooks and how they are used to protect your production servers and your users.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Dower</dc:creator><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/the-secret-life-of-python.html</guid></item><item><title>Python on Windows is Okay, Actually</title><link>https://pyvideo.org/pycon-us-2019/python-on-windows-is-okay-actually.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Packages that won't install, encodings that don't work, installers that
ask too many questions, and having to own a PC are all great reasons to
just ignore Windows. Or they would be, if they were true.&lt;/p&gt;
&lt;p&gt;Despite community perception, more than half of Python usage is on
Windows, including web development, system administration, and data
science, just like on Linux and Mac. And for the most part, Python works
the same regardless of what operating system you happen to be using.
Still, many library developers will unnecessarily exclude half of their
potential audience by not even attempting to be compatible.&lt;/p&gt;
&lt;p&gt;This session will walk through the things to be aware of when creating
cross-platform libraries. From simple things like using &lt;tt class="docutils literal"&gt;pathlib&lt;/tt&gt;
rather than &lt;tt class="docutils literal"&gt;bytes&lt;/tt&gt;, through to all the ways you can get builds and
tests running on Windows for free, by the end of this session you will
have a checklist of easy tasks for your project that will really enable
the whole Python world to benefit from your work.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Dower</dc:creator><pubDate>Sun, 05 May 2019 13:50:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-us-2019/python-on-windows-is-okay-actually.html</guid><category>talk</category></item><item><title>Python on Windows is Okay, Actually</title><link>https://pyvideo.org/pycon-ireland-2018/python-on-windows-is-okay-actually.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Packages that won't install, encodings that don't work, installers that ask too many questions, and having to own a PC are all great reasons to just ignore Windows. Or they would be, if they were true. Despite community perception, more than half of Python usage still happens on Windows, including web development, system administration, and data science, just like on Linux and Mac. And for the most part, Python works the same regardless of what operating system you happen to be using. Still, many library developers will unnecessarily exclude half of their potential audience by not even attempting to be compatible. This session will walk through the things to be aware of when creating cross-platform libraries. From simple things like using pathlib rather than bytestrings, through to all the ways you can get builds and tests running on Windows for free, by the end of this session you will have a checklist of easy tasks for your project that will really enable the whole Python world to benefit from your work.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Dower</dc:creator><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-10:pycon-ireland-2018/python-on-windows-is-okay-actually.html</guid><category>Windows</category></item><item><title>Python on Windows is Okay, Actually</title><link>https://pyvideo.org/north-bay-python-2018/python-on-windows-is-okay-actually.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Despite more than half of Python's users being on Windows, it is
generally believed that you can't do it. In this talk, I will provide an
overview of why it's not as bad as people think, and the specific things
you can do today to make sure your projects work well for ALL Python
users, no matter where they work.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Dower</dc:creator><pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-04:north-bay-python-2018/python-on-windows-is-okay-actually.html</guid></item><item><title>Python on Windows is Okay, Actually</title><link>https://pyvideo.org/europython-2018/python-on-windows-is-okay-actually.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Packages that won’t install, encodings that don’t work, installers that
ask too many questions, and having to own a PC are all great reasons to
just ignore Windows. Or they would be, if they were true. Despite
community perception, more than half of Python usage still happens on
Windows, including web development, system administration, and data
science, just like on Linux and Mac. And for the most part, Python works
the same regardless of what operating system you happen to be using.
Still, many library developers will unnecessarily exclude half of their
potential audience by not even attempting to be compatible. This session
will walk through the things to be aware of when creating cross-platform
libraries. From simple things like using pathlib rather than
bytestrings, through to all the ways you can get builds and tests
running on Windows for free, by the end of this session you will have a
checklist of easy tasks for your project that will really enable the
whole Python world to benefit from your work.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Dower</dc:creator><pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-25:europython-2018/python-on-windows-is-okay-actually.html</guid></item><item><title>Why does Python need security transparency?</title><link>https://pyvideo.org/pydata-new-york-city-2017/why-does-python-need-security-transparency.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Imagine you could run one single command on one computer at the NSA. You would probably run &amp;quot;python&amp;quot; to use its OS and network features undetected, just like real attackers do. If someone did it on your network, would you notice? PEP 551 makes it so that admins can audit Python and detect malicious use on their systems. This session will look at why we need it and how to use it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Dower</dc:creator><pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-11-27:pydata-new-york-city-2017/why-does-python-need-security-transparency.html</guid></item><item><title>Why does Python need security transparency?</title><link>https://pyvideo.org/north-bay-python-2017/why-does-python-need-security-transparency.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The days of &amp;quot;software vulnerability&amp;quot; being a synonym for &amp;quot;buffer overflow&amp;quot; are over. Modern vulnerabilities are those that enable attackers to get into your network and stay in your network. Beyond simple bugs, any tool that can execute arbitrary code becomes a vulnerability - _especially_ if you don't know when it is doing that.&lt;/p&gt;
&lt;p&gt;Python is a popular tool with attackers, in large part because it can download encrypted code, decrypt and execute it with a single line of code. And once that entire payload is running, nobody knows exactly what it is doing.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0551/"&gt;PEP 551&lt;/a&gt; adds a range of auditing hooks to the Python runtime, enabling system administrators to see into how it is being used. You can inspect every piece of code that is compiled and executed, intercept calls that modify trace, and collect information on code that uses native through &lt;cite&gt;ctypes&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;This session will look at why we need security transparency in Python. We will look at actual examples of malware written in Python, and see how the hooks provided by PEP 551 enable administrators to detect and prevent attacks on their systems.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Dower</dc:creator><pubDate>Sat, 02 Dec 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-12-02:north-bay-python-2017/why-does-python-need-security-transparency.html</guid></item><item><title>Effective Visual Studio</title><link>https://pyvideo.org/pydata-seattle-2017/effective-visual-studio.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will walk through Visual Studio 2017, including how to set it up for use with Python and R, and the features it provides that will make you a more efficient, effective, and happier data scientist or engineer.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;According to Stack Overflow's developer survey for 2017, the majority of data scientists are working in Visual Studio, and with the latest release of Visual Studio 2017 including support for Python and R out of the box, there is a good reason for this. In this tutorial, we will walk through setting up Visual Studio 2017, its special features for Python and R developers, and the features it provides for all languages that will make you a more efficient, effective, and happier data scientist or engineer.&lt;/p&gt;
&lt;p&gt;Bring your Windows laptop or virtual machine, and to prepare ahead of time, install Visual Studio 2017 Community (or Professional/Enterprise if you have access) from visualstudio.com, and select the &amp;quot;Data Science and Analytical Applications&amp;quot; workload.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Dower</dc:creator><pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-06:pydata-seattle-2017/effective-visual-studio.html</guid></item><item><title>I Installed Python 3.6 on Windows and I Liked It</title><link>https://pyvideo.org/pycon-us-2017/i-installed-python-36-on-windows-and-i-liked-it.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has a great reputation as a cross-platform language, which for
many people means different varieties of Linux. But a huge number of
Python users are running on Windows - a fundamentally different
operating system where things do not always work the same. However,
Python has always worked incredibly well across different platforms
including Windows, going to great lengths to support and expose the
platform without making development more complex. In this session,
CPython core developer and Microsoft engineer Steve Dower will discuss
some of the reasons why cross-platform support is not an accident, and
how Python 3.6 makes it even easier to support both Windows and Linux.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Dower</dc:creator><pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-19:pycon-us-2017/i-installed-python-36-on-windows-and-i-liked-it.html</guid></item><item><title>Panel: Using, contributing to, and integrating open source in large corporate environments</title><link>https://pyvideo.org/pydata-seattle-2015/panel-using-contributing-to-and-integrating-open-source-in-large-corporate-environments.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData is a gathering of users and developers of data analysis tools in Python. The goals are to provide Python enthusiasts a place to share ideas and learn from each other about how best to apply our language and tools to ever-evolving challenges in the vast realm of data management, processing, analytics, and visualization.&lt;/p&gt;
&lt;p&gt;We aim to be an accessible, community-driven conference, with tutorials for novices, advanced topical workshops for practitioners, and opportunities for package developers and users to meet in person.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Powell</dc:creator><pubDate>Sat, 25 Jul 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-07-25:pydata-seattle-2015/panel-using-contributing-to-and-integrating-open-source-in-large-corporate-environments.html</guid></item><item><title>What's coming in Python 3.5 and why you should be excited</title><link>https://pyvideo.org/pydata-seattle-2015/whats-coming-in-python-35-and-why-you-should-be-excited.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Overview of the newest additions to Python 3.5, being released later this year.&lt;/p&gt;
&lt;p&gt;Python 3.5, the latest installment of the language and library, is just around the corner-https://www.python.org/dev/peps/pep-0478/ (though you can try out the beta now-https://www.python.org/downloads/release/python-350b2/). This session will cover some of the new syntax and library additions that should have people excited to start using it.&lt;/p&gt;
&lt;p&gt;As a teaser (come to the session for all the details), we'll look at better asynchronous programming, simpler mathematics, easier installation, better package management, formalized type hints, flexible function calls, and more!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Dower</dc:creator><pubDate>Sat, 25 Jul 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-07-25:pydata-seattle-2015/whats-coming-in-python-35-and-why-you-should-be-excited.html</guid></item><item><title>Why is Windows so broken? and what to do about it</title><link>https://pyvideo.org/pydata-san-francisco-2016/why-is-windows-so-broken-and-what-to-do-about-it.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData SF 2016&lt;/p&gt;
&lt;p&gt;Python on Windows has a reputation for being, well, pretty broken. But the good news is that things have been getting better. Join Microsoft employee and CPython core developer Steve Dower as he walks through the recent improvements to the Python ecosystem on Windows, and how things will get even better in the future.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Dower</dc:creator><pubDate>Wed, 24 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-24:pydata-san-francisco-2016/why-is-windows-so-broken-and-what-to-do-about-it.html</guid></item><item><title>Lightning Talks - Saturday evening</title><link>https://pyvideo.org/pycon-us-2013/saturday-evening-lightning-talks.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Lightning talks from Saturday evening.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Ft6-r_vksDI#t=0m"&gt;00:00&lt;/a&gt; - Young Coders at PyCon 2013 - Katie Cunningham and
Barbara Shaurette&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Ft6-r_vksDI#t=5m53s"&gt;05:53&lt;/a&gt; - Raspberry Pi connected to sensors - Jack
Minardi&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Ft6-r_vksDI#t=8m23s"&gt;08:23&lt;/a&gt; - Python &amp;amp; ArcGIS for Transit Data Analysers -
Amy Smith&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Ft6-r_vksDI#t=13m58s"&gt;13:58&lt;/a&gt; - Software Version Management - Quinn Weaver&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Ft6-r_vksDI#t=19m48s"&gt;19:48&lt;/a&gt; - Parts and Scons - Jason Kenny&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Ft6-r_vksDI#t=25m13s"&gt;25:13&lt;/a&gt; - Debugging Python on Linux with Visual Studio
- Steve Dower&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Ft6-r_vksDI#t=37m35s"&gt;37:35&lt;/a&gt; - Titan Files for App Engine - Mike Fotinakis&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Ft6-r_vksDI#t=43m40s"&gt;43:40&lt;/a&gt; - Using git as a mercurial client - Dusty
Phillips&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Cunningham</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-03-16:pycon-us-2013/saturday-evening-lightning-talks.html</guid><category>lightning talks</category></item></channel></rss>