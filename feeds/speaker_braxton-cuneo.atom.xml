<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Braxton Cuneo</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_braxton-cuneo.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-07-08T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Injecting Python Functions into a Template-Driven CUDA C++ Framework</title><link href="https://pyvideo.org/scipy-2024/injecting-python-functions-into-a-template-driven-cuda-c-framework.html" rel="alternate"></link><published>2024-07-08T00:00:00+00:00</published><updated>2024-07-08T00:00:00+00:00</updated><author><name>Braxton Cuneo</name></author><id>tag:pyvideo.org,2024-07-08:/scipy-2024/injecting-python-functions-into-a-template-driven-cuda-c-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Non-Python codebases that use metaprogramming present significant challenges to cross-language development. These challenges are further compounded with the inclusion of GPU processing. While common methods of Python/GPU interoperation are covered by popular Python frameworks, these frameworks do not trivialize this use case.&lt;/p&gt;
&lt;p&gt;In this talk, we will discuss â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Non-Python codebases that use metaprogramming present significant challenges to cross-language development. These challenges are further compounded with the inclusion of GPU processing. While common methods of Python/GPU interoperation are covered by popular Python frameworks, these frameworks do not trivialize this use case.&lt;/p&gt;
&lt;p&gt;In this talk, we will discuss the process of integrating a Python code for Monte Carlo particle transport (MCDC) (&lt;a class="reference external" href="https://github.com/CEMeNT-PSAAP/MCDC"&gt;https://github.com/CEMeNT-PSAAP/MCDC&lt;/a&gt;) with a template-based CUDA C++ framework which applies inversion of control (Harmonize) (&lt;a class="reference external" href="https://github.com/CEMeNT-PSAAP/harmonize"&gt;https://github.com/CEMeNT-PSAAP/harmonize&lt;/a&gt;). We will discuss managing the complexity of cross-language dependency injection, relevant implementation strategies, and pitfalls to avoid.&lt;/p&gt;
</content><category term="SciPy 2024"></category></entry></feed>