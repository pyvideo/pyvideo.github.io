<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_kevin-van-gundy.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-08-26T00:00:00+00:00</updated><entry><title>Building a Recommendation Engine with Neo4j and Python</title><link href="https://pyvideo.org/pydata-chicago-2016/building-a-recommendation-engine-with-neo4j-and-python.html" rel="alternate"></link><published>2016-08-26T00:00:00+00:00</published><updated>2016-08-26T00:00:00+00:00</updated><author><name>Kevin Van Gundy</name></author><id>tag:pyvideo.org,2016-08-26:pydata-chicago-2016/building-a-recommendation-engine-with-neo4j-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://www.slideshare.net/secret/DwbGswbtHTmYvy"&gt;http://www.slideshare.net/secret/DwbGswbtHTmYvy&lt;/a&gt;
Github: github.com/kevinvangundy&lt;/p&gt;
&lt;p&gt;In this session we will show how to build a meetup.com recommendation engine using Neo4j and Python. Our solution will be a hybrid approach which makes uses of both content based and collaborative filtering using Neo4j to glue all the data together, Cypher to query the dataset and Python to do analysis and pre/post processing of data.&lt;/p&gt;
</summary><category term="neo4j"></category></entry></feed>