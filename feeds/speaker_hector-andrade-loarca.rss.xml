<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 08 Jul 2018 00:00:00 +0000</lastBuildDate><item><title>LightFields.jl: Fast 3D image reconstruction for VR applications</title><link>https://pyvideo.org/pydata-berlin-2018/lightfieldsjl-fast-3d-image-reconstruction-for-vr-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Virtual Reality plays the leading role on the new media revolution with
Light Field reconstruction as a common technique for content
generation.High industrial interests make this technique hard to
understand and implement, I will present a novel method to reconstruct
the depth of objects in images.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hector Andrade Loarca</dc:creator><pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-08:pydata-berlin-2018/lightfieldsjl-fast-3d-image-reconstruction-for-vr-applications.html</guid></item><item><title>Fast Multidimensional Signal Processing using Julia with Shearlab.jl</title><link>https://pyvideo.org/pydata-berlin-2017/fast-multidimensional-signal-processing-using-julia-with-shearlabjl.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Shearlab is a Julia Library with toolbox for two- and threedimensional data processing using the Shearlet system as basis functions which generates a sparse representation of cartoon-like functions with applications on Signal Processing, Compressed Sensing, 3D Imaging, MRI Imaging and a lot more, with visible improvements with respect of the Wavelet Transform in representing multidimensional data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Shearlet Transform was proposed by the Professor Gitta Kutyniok (&lt;a class="reference external" href="http://www.tu-berlin.de/?108957"&gt;http://www.tu-berlin.de/?108957&lt;/a&gt;) and her colleagues as a multidimensional generalization of the Wavelet Transform, and since then it has been adopted by a lot of Companies and Institutes by its stable and optimal representation of multidimensional signals. Shearlab.jl is a already registered Julia package (&lt;a class="reference external" href="https://github.com/arsenal9971/Shearlab.jl"&gt;https://github.com/arsenal9971/Shearlab.jl&lt;/a&gt;) based in the most used implementation of Shearlet Transform programmed in Matlab by the Research Group of Prof. Kutyniok (&lt;a class="reference external" href="http://www.shearlab.org/software"&gt;http://www.shearlab.org/software&lt;/a&gt;), it was developed as a project apart of my PhD studies but ended up being the main computational tool of them, used mainly to reconstruct the Light Field of a 3D Scene from Sparse Photographic Samples of Different Perspectives with Stereo Vision purposes.&lt;/p&gt;
&lt;p&gt;Why I think this will be an interesting thing to present at JuliaCon 2017?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A lot of research institutes and companies have already adopted the Shearlet Transform in their work (e.g. Fraunhofer Institute in Berlin and Charité Hospital in Berlin, Mathematical Institute of TU Berlin) by its directional sensitivity, reconstruction stability and sparse representation; with applications that goes from MRI Imaging in Hospitals to Video Compression Decoding.&lt;/li&gt;
&lt;li&gt;I am convinced Shearlab.jl is the best implementation so far of Shearlet Transform, basing my arguments on the benchmarks already runned against the last Matlab version which is the most used at the moment (here benchmarks &lt;a class="reference external" href="https://github.com/arsenal9971/Shearlab.jl/blob/master/benchmarks/README.md"&gt;https://github.com/arsenal9971/Shearlab.jl/blob/master/benchmarks/README.md&lt;/a&gt;) beating it by at least double the speed on different experiments.&lt;/li&gt;
&lt;li&gt;Not everything is about performance and technical mathematics, so I also have cool usage examples to show with some algorithms that have been implemented lately, like: Image Decomposition and Recovery (&lt;a class="reference external" href="https://github.com/arsenal9971/Shearlab.jl/blob/master/examples/Shearlets/Examples%20of%20Image%20Decoding%20and%20Recovery.ipynb"&gt;https://github.com/arsenal9971/Shearlab.jl/blob/master/examples/Shearlets/Examples%20of%20Image%20Decoding%20and%20Recovery.ipynb&lt;/a&gt;), Image Denosing (&lt;a class="reference external" href="https://github.com/arsenal9971/Shearlab.jl/blob/master/examples/Shearlets/Image%20Denoising.ipynb"&gt;https://github.com/arsenal9971/Shearlab.jl/blob/master/examples/Shearlets/Image%20Denoising.ipynb&lt;/a&gt;) Image Inpainting (the coolest so far) (&lt;a class="reference external" href="https://github.com/arsenal9971/Shearlab.jl/blob/master/examples/Shearlets/Image%20Inpainting.ipynb"&gt;https://github.com/arsenal9971/Shearlab.jl/blob/master/examples/Shearlets/Image%20Inpainting.ipynb&lt;/a&gt;) which I am using at the moment for the Light Field Recovery of a sparsely sampled 3D scene.&lt;/li&gt;
&lt;li&gt;The Package was also already presented in the Berlin Julia Users MeetUp with a very good response and interest from the community (&lt;a class="reference external" href="https://www.meetup.com/es-ES/Julia-Users-Group/events/236791753/"&gt;https://www.meetup.com/es-ES/Julia-Users-Group/events/236791753/&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Héctor Andrade Loarca</dc:creator><pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-30:pydata-berlin-2017/fast-multidimensional-signal-processing-using-julia-with-shearlabjl.html</guid></item></channel></rss>