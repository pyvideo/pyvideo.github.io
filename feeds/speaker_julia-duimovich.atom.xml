<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_julia-duimovich.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-12-03T00:00:00+00:00</updated><entry><title>Obeying the Testing Goat: building a test obsessed culture at your company</title><link href="https://pyvideo.org/pycon-ca-2017/obeying-the-testing-goat-building-a-test-obsessed-culture-at-your-company.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Julia Duimovich</name></author><id>tag:pyvideo.org,2017-11-18:pycon-ca-2017/obeying-the-testing-goat-building-a-test-obsessed-culture-at-your-company.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all know we should test our code. We all know that we should have a hypothetically perfectly tested codebase. But how many people actually do? Why don't we? What's stopping us? We'll talk about the skills and mentality everyone needs to have, the infrastructure that cuts down on the amount of work that you need to do to write a test, directly influencing how many of your coworkers actually write comprehensive tests. We'll also talk about planning and the torturous process of accepting what you can't test. You'll leave this talk planning to add an onboarding session dedicated to testing, excited about test infrastructure such as factories, and looking forward to the day that you discover the tests are there, and they can help you understand the code's structure and intended usage.&lt;/p&gt;
</summary></entry><entry><title>Obeying the Testing Goat: Building a test loving culture at your company</title><link href="https://pyvideo.org/north-bay-python-2017/obeying-the-testing-goat-building-a-test-loving-culture-at-your-company.html" rel="alternate"></link><published>2017-12-03T00:00:00+00:00</published><updated>2017-12-03T00:00:00+00:00</updated><author><name>Julia Duimovich</name></author><id>tag:pyvideo.org,2017-12-03:north-bay-python-2017/obeying-the-testing-goat-building-a-test-loving-culture-at-your-company.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all know we should test our code. We all know that we should have a hypothetically perfectly tested codebase. But how many people actually do? Why don't we? What's stopping us? We'll talk about the skills and mentality everyone needs to have, the infrastructure that cuts down on the amount of work that you need to do to write a test, directly influencing how many of your coworkers actually write comprehensive tests. We'll also talk about planning and the torturous process of accepting what you can't test. You'll leave this talk planning to add an onboarding session dedicated to testing, excited about test infrastructure such as factories, and looking forward to the day that you discover the tests are there, and they can help you understand the code's structure and intended usage.&lt;/p&gt;
</summary></entry></feed>