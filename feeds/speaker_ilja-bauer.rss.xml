<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 25 May 2018 00:00:00 +0000</lastBuildDate><item><title>Day 3 Lightning Talks</title><link>https://pyvideo.org/djangocon-europe-2018/day-3-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon Europe Crew&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lacey Williams Henschel</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:djangocon-europe-2018/day-3-lightning-talks.html</guid></item><item><title>The Power of Natural Language - From ATDD to Lean Modeling</title><link>https://pyvideo.org/djangocon-europe-2014/the-power-of-natural-language-from-atdd-to-lean-modeling.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Delivering high quality software solutions that meet customer
expectations and requirements is the essential goal of any development
project. Therefore, development teams need to obtain the relevant domain
knowledge and information from their customers.&lt;/p&gt;
&lt;p&gt;As a result, initial system specifications are typically formulated
using natural language (e.g., within plain text documents). The main
challenge imposed by this process is to avoid misunderstandings,
misinterpretations and inconsistencies during the transformation of
informal requirements into formal specifications, models, and executable
code or tests.&lt;/p&gt;
&lt;p&gt;At first the talk will briefly introduce Acceptance Test-Driven
Development (ATDD) as a powerful method to bridge the gap between
requirements engineering and software testing. Following this, the
second part will push the original ATDD idea even further by introducing
the concept of “Lean Modeling”, a lightweight and pragmatic alternative
to classical software modeling and DSL tools.&lt;/p&gt;
&lt;p&gt;Examples will be presented that illustrate the usage of natural language
specifications for various django specific artifacts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;models&lt;/li&gt;
&lt;li&gt;REST Resources&lt;/li&gt;
&lt;li&gt;initial database data (fixtures)&lt;/li&gt;
&lt;li&gt;forms.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This approach can also help to improve our debugging experience and IDE
smart completion support. In addition to these advantages during
development a demo will be shown, that illustrates how customers / users
can benefit from “Lean Modeling” by creating custom forms in their
django backend with natural language.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ilja Bauer</dc:creator><pubDate>Wed, 14 May 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-05-14:djangocon-europe-2014/the-power-of-natural-language-from-atdd-to-lean-modeling.html</guid></item></channel></rss>