<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Shreya Khurana</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_shreya-khurana.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-07-26T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Train. Serve. Deploy! Story of a NLP Model ft. PyTorch, Docker, Uwsgi and Nginx</title><link href="https://pyvideo.org/europython-2020/train-serve-deploy-story-of-a-nlp-model-ft-pytorch-docker-uwsgi-and-nginx.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Shreya Khurana</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/train-serve-deploy-story-of-a-nlp-model-ft-pytorch-docker-uwsgi-and-nginx.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quickly prototype a machine translation model from scratch and learn how to serve it in production&lt;/p&gt;
&lt;p&gt;Natural language processing has seen leaps of technology progress with Machine Learning becoming the norm of solving the major problems in this area, with Machine translation being one of the major problems in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quickly prototype a machine translation model from scratch and learn how to serve it in production&lt;/p&gt;
&lt;p&gt;Natural language processing has seen leaps of technology progress with Machine Learning becoming the norm of solving the major problems in this area, with Machine translation being one of the major problems in this area. Neural machine translation systems are now used to convert sentences or phrases from one language to another, or in general, for sequence to sequence modeling. In this talk, we’ll be covering the steps from scratch to preprocess, train and serve a NMT model using PyTorch. While building a highly accurate model is a prerequisite to getting good quality translations, often in industry, we also need to make sure we can serve the model to customers without getting timeouts or delays. The practice of serving models requires creating a web app to get client requests and process them in a way the model would understand. For this, we’ll use  the various components of the application server environment - Flask, Docker, uwsgi and nginx. This talk is suitable for audience who is working in general with ML models and want to learn how to serve them or working specifically with NMT and want to learn about some quick prototyping tips.&lt;/p&gt;
&lt;p&gt;Prerequisites: Audience should be comfortable with the basic ML terminology and procedure of training models. NLP knowledge will be good, but is not a necessity as the focus will be on quick prototyping in production.&lt;/p&gt;
&lt;p&gt;By the end of the talk, the audience will have:
- Learnt how to preprocess data for NLP systems
- Learnt how to quickly prototype and train a translation model
- Learnt how to create a web app for the NLP model using Flask
- Learnt how to containerize a pytorch model using Docker
- Learnt how to serve the model as an app using uwsgi, nginx and&lt;/p&gt;
&lt;p&gt;Outline:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to translation systems, machine translation framework&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ML Modelling
- Preprocessing data
- Training
- Generating new translations&lt;/p&gt;
&lt;p&gt;Serving and prototyping
- Flask app
- Docker container
- Nginx + uwsgi + supervisord configurations
- Putting it all together&lt;/p&gt;
&lt;p&gt;Good practices
Q/A (optional?)&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Data Science"></category><category term="Deep Learning"></category><category term="Machine-Learning"></category><category term="Natural Language Processing"></category><category term="Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"></category></entry><entry><title>How multilingual is your NLP model?</title><link href="https://pyvideo.org/pycon-us-2020/how-multilingual-is-your-nlp-model.html" rel="alternate"></link><published>2020-04-17T00:00:00+00:00</published><updated>2020-04-17T00:00:00+00:00</updated><author><name>Shreya Khurana</name></author><id>tag:pyvideo.org,2020-04-17:/pycon-us-2020/how-multilingual-is-your-nlp-model.html</id><content type="html"></content><category term="PyCon US 2020"></category></entry><entry><title>Baby Steps Towards Your First FastAPI App</title><link href="https://pyvideo.org/pyohio-2022/baby-steps-towards-your-first-fastapi-app.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Shreya Khurana</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/baby-steps-towards-your-first-fastapi-app.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;FastAPI is a high-performing web framework used to build APIs in
Python3. It's &lt;a class="reference external" href="https://fastapi.tiangolo.com/"&gt;really fast&lt;/a&gt; and based on the OpenAPI standard, which
means - tada! No more manual swagger generation and validation!&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;In this talk, we'll go over some code snippets that involve:&lt;/div&gt;
&lt;div class="line"&gt;- creating simple endpoints with path and query …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;FastAPI is a high-performing web framework used to build APIs in
Python3. It's &lt;a class="reference external" href="https://fastapi.tiangolo.com/"&gt;really fast&lt;/a&gt; and based on the OpenAPI standard, which
means - tada! No more manual swagger generation and validation!&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;In this talk, we'll go over some code snippets that involve:&lt;/div&gt;
&lt;div class="line"&gt;- creating simple endpoints with path and query parameters&lt;/div&gt;
&lt;div class="line"&gt;- creating response body models based on Pydantic&lt;/div&gt;
&lt;div class="line"&gt;- logging&lt;/div&gt;
&lt;div class="line"&gt;- handling simple errors&lt;/div&gt;
&lt;div class="line"&gt;- generated swagger&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Talk code+contents &lt;a class="reference external" href="https://github.com/ShreyaKhurana/pyohio22/"&gt;here!&lt;/a&gt;&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Graph Machine Learning in All Its Glory!</title><link href="https://pyvideo.org/pyohio-2025/graph-machine-learning-in-all-its-glory.html" rel="alternate"></link><published>2025-07-26T00:00:00+00:00</published><updated>2025-07-26T00:00:00+00:00</updated><author><name>Shreya Khurana</name></author><id>tag:pyvideo.org,2025-07-26:/pyohio-2025/graph-machine-learning-in-all-its-glory.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Our world is complex: one approach to understanding and learning more
about relationships within the data is to represent it as a network or a
graph - with entities as nodes and relations between them as edges.
Network applications are abundant - Facebook, knowledge databases like
Wikipedia, traffic routes, molecular pathways …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Our world is complex: one approach to understanding and learning more
about relationships within the data is to represent it as a network or a
graph - with entities as nodes and relations between them as edges.
Network applications are abundant - Facebook, knowledge databases like
Wikipedia, traffic routes, molecular pathways, and the fun starts when
we start thinking of the physical world as graphs. Where there’s data,
there’s uncertainty and the need to predict the future to make it a
little less uncertain, which is why we need machine learning.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This talk will be about modeling one such network using a Graph Neural
Network (GNN) and making some predictions on it using Deep Graph
Library, an efficient and scalable open source framework to train and
serve GNNs. While GNNs can be used for any ML task, we’ll focus on
building a recommendation model.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;But the transition from traditional data structures to graph-based
models is not straightforward. Unlike tabular data, graphs require
adapting ML principles to accommodate their topological and relational
complexities.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;This talk will help participants gain practical insights into modeling
their data as graphs and leveraging GNNs to build a recommendation
system. After the talk, the audience should have a good understanding
about:&lt;/div&gt;
&lt;div class="line"&gt;- How to structure their data as graph components and prepare it for
modeling&lt;/div&gt;
&lt;div class="line"&gt;- What a GNN is and how do we train, evaluate and serve models in DGL&lt;/div&gt;
&lt;div class="line"&gt;- End-to-end ML tasks on graph data: best practices to avoid pitfalls&lt;/div&gt;
&lt;/div&gt;
</content><category term="PyOhio 2025"></category></entry></feed>