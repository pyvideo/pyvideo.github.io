<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_anna-gerber.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-08-04T00:00:00+00:00</updated><entry><title>Program all the things - How to develop IoT devices using MicroPython</title><link href="https://pyvideo.org/pycon-au-2017/program-all-the-things-how-to-develop-iot-devices-using-micropython.html" rel="alternate"></link><published>2017-08-04T00:00:00+00:00</published><updated>2017-08-04T00:00:00+00:00</updated><author><name>Anna Gerber</name></author><id>tag:pyvideo.org,2017-08-04:pycon-au-2017/program-all-the-things-how-to-develop-iot-devices-using-micropython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We hear a lot of hype around the Internet of Things - how that myriad of interconnected smart devices monitoring and actuating our everyday activities will transform our lives toward a blissful state of automation.  But when IoT rules the world, do you want to have to rely on third parties to provide all of these devices and to define all of the features available within your connected life? Being able to develop your own IoT devices as well as customize existing devices and applications is becoming a critical skill.&lt;/p&gt;
&lt;p&gt;MicroPython is a Free, Open Source implementation of Python 3.x that is designed to run on microcontrollers - the tiny embedded computers at the heart of many IoT devices. MicroPython is a valuable tool for rapidly prototyping device functionality and is a great way to get started with developing for the Internet of Things.&lt;/p&gt;
&lt;p&gt;In this session, we'll walk through the steps you'll need to follow to take your IoT ideas and make them into reality using MicroPython, including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;selecting hardware and developing circuits to connect sensors and actuators,&lt;/li&gt;
&lt;li&gt;getting your microcontroller set up with MicroPython on-board,&lt;/li&gt;
&lt;li&gt;developing MicroPython programs to read from sensors and control actuators,&lt;/li&gt;
&lt;li&gt;connecting your device and getting it talking with other devices and services over MQTT, and&lt;/li&gt;
&lt;li&gt;how to integrate your device within a wider IoT context, for example, integrating with popular IoT frameworks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The examples covered in the session are drawn from a healthy habits tracking companion example project developed by the speaker. This custom IoT device acts as a personal assistant that helps to track and transform personal habits like keeping fit.&lt;/p&gt;
</summary></entry><entry><title>PyBots! or how to learn to stop worrying and love coding by Anna Gerber</title><link href="https://pyvideo.org/pycon-au-2014/pybots-or-how-to-learn-to-stop-worrying-and-love.html" rel="alternate"></link><published>2014-08-09T00:00:00+00:00</published><updated>2014-08-09T00:00:00+00:00</updated><author><name>Anna Gerber</name></author><id>tag:pyvideo.org,2014-08-09:pycon-au-2014/pybots-or-how-to-learn-to-stop-worrying-and-love.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, Anna will argue how physical computing — building
interactive systems such as robots that sense and act upon, or respond
to the physical world — provides an ideal application space for teaching
and learning programming concepts and problem solving; that appeals to a
diverse audience; and that can provide a positive introduction to the
world of open source software and hardware.&lt;/p&gt;
&lt;p&gt;Drawing on her experiences teaching introductory programming with
Arduino-based robots, Anna will step through a tutorial demonstrating
how to develop a mobile PyBot - a robot programmed using Python and the
Firmata protocol, and will provide tips to help you or the apprentice
coders in your life to take the first steps towards a lifetime of loving
to code.&lt;/p&gt;
</summary></entry></feed>