<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Scott Shambaugh</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_scott-shambaugh.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-07-11T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Monaco: Quantify Uncertainty &amp; Sensitivities in Computational Models with a Monte Carlo Library</title><link href="https://pyvideo.org/scipy-2022/monaco-quantify-uncertainty-sensitivities-in-computational-models-with-a-monte-carlo-library.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Scott Shambaugh</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/monaco-quantify-uncertainty-sensitivities-in-computational-models-with-a-monte-carlo-library.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Roll the dice! Quantify uncertainty and sensitivities in your existing computational models with the “monaco” Monte Carlo library. Users define input variables randomly drawn from any of SciPy's statistical distributions, run their model in parallel anywhere from 1 to millions of times, and postprocess the outputs to obtain meaningful …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Roll the dice! Quantify uncertainty and sensitivities in your existing computational models with the “monaco” Monte Carlo library. Users define input variables randomly drawn from any of SciPy's statistical distributions, run their model in parallel anywhere from 1 to millions of times, and postprocess the outputs to obtain meaningful, statistically significant conclusions. This talk will go over why you should always be running Monte Carlos, a demo of how to set up and run a sim, and a crash course in generating relevant plots and statistics.&lt;/p&gt;
&lt;p&gt;Project repo: &lt;a class="reference external" href="https://github.com/scottshambaugh/monaco"&gt;https://github.com/scottshambaugh/monaco&lt;/a&gt;
Lots of examples: &lt;a class="reference external" href="https://github.com/scottshambaugh/monaco/tree/main/examples"&gt;https://github.com/scottshambaugh/monaco/tree/main/examples&lt;/a&gt;
API Documentation: &lt;a class="reference external" href="https://monaco.readthedocs.io"&gt;https://monaco.readthedocs.io&lt;/a&gt;
Conference paper: &lt;a class="reference external" href="https://conference.scipy.org/proceedings/scipy2022/pdfs/scott_shambaugh.pdf"&gt;https://conference.scipy.org/proceedings/scipy2022/pdfs/scott_shambaugh.pdf&lt;/a&gt;
Talk slides and notebooks: &lt;a class="reference external" href="https://github.com/scottshambaugh/monaco-scipy2022"&gt;https://github.com/scottshambaugh/monaco-scipy2022&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry></feed>