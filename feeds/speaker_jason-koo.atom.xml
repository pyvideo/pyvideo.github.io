<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Jason Koo</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jason-koo.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-04-20T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Craft Complex Mock Data</title><link href="https://pyvideo.org/pybay-2023/Craft_Complex_Mock_Data.html" rel="alternate"></link><published>2023-10-08T13:45:00+00:00</published><updated>2023-10-08T13:45:00+00:00</updated><author><name>Jason Koo</name></author><id>tag:pyvideo.org,2023-10-08:/pybay-2023/Craft_Complex_Mock_Data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Existing mock data generators can only create individual, unrelated tables of fake data. Synthetic data services that can produce interwoven datasets require real data to anonymize. This leaves only error-prone custom scripts to create realistic, interdependent datasets for development and testing.&lt;/p&gt;
&lt;p&gt;In this session learn how to define a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Existing mock data generators can only create individual, unrelated tables of fake data. Synthetic data services that can produce interwoven datasets require real data to anonymize. This leaves only error-prone custom scripts to create realistic, interdependent datasets for development and testing.&lt;/p&gt;
&lt;p&gt;In this session learn how to define a .json configuration file and leverage the graph-data-generator PyPi package to quickly create custom, deeply interconnected fake datasets for your own Python projects.&lt;/p&gt;
</content><category term="PyBay 2023"></category></entry><entry><title>Breaking Away from the Empire: Avoiding the Evil Clutches of If-Then Statements (Sponsor: neo4j)</title><link href="https://pyvideo.org/pycon-us-2023/breaking-away-from-the-empire-avoiding-the-evil-clutches-of-if-then-statements-sponsor-neo4j.html" rel="alternate"></link><published>2023-04-20T00:00:00+00:00</published><updated>2023-04-20T00:00:00+00:00</updated><author><name>Jason Koo</name></author><id>tag:pyvideo.org,2023-04-20:/pycon-us-2023/breaking-away-from-the-empire-avoiding-the-evil-clutches-of-if-then-statements-sponsor-neo4j.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Become a Rebel and learn how to create a hyperspace navigation app to
avoid Imperial patrols using the power of graphs in Python! Say goodbye
to complex if-then statements and embrace a more elegant and flexible
approach. In this talk we'll introduce graphs as a data structure, how
to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Become a Rebel and learn how to create a hyperspace navigation app to
avoid Imperial patrols using the power of graphs in Python! Say goodbye
to complex if-then statements and embrace a more elegant and flexible
approach. In this talk we'll introduce graphs as a data structure, how
to model this kind of data, and how to use them in place of more
complicated logic code. Discover how graphs can simplify decision-making
logic in your code for improved readability and extensibility.&lt;/p&gt;
&lt;p&gt;Join us on a journey to break free from the empire of if-then statements
and unlock the full potential of your data. Expand your toolset and
liberate your code!&lt;/p&gt;
</content><category term="PyCon US 2023"></category></entry><entry><title>Anarchy to Order - Organizing assorted data with Python and LLMs</title><link href="https://pyvideo.org/pytexas-2024/anarchy-to-order-organizing-assorted-data-with-python-and-llms.html" rel="alternate"></link><published>2024-04-20T00:00:00+00:00</published><updated>2024-04-20T00:00:00+00:00</updated><author><name>Jason Koo</name></author><id>tag:pyvideo.org,2024-04-20:/pytexas-2024/anarchy-to-order-organizing-assorted-data-with-python-and-llms.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Anarchy to Order - Organizing assorted data with Python and LLMs&lt;/p&gt;
&lt;p&gt;Bringing structure to chaotic, heterogeneous data is critical for fueling effective applications. This talk will show how to leverage LangChain in a Python application to take assorted file types and build a unified knowledge graph stored in a Neo4j …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Anarchy to Order - Organizing assorted data with Python and LLMs&lt;/p&gt;
&lt;p&gt;Bringing structure to chaotic, heterogeneous data is critical for fueling effective applications. This talk will show how to leverage LangChain in a Python application to take assorted file types and build a unified knowledge graph stored in a Neo4j database.&lt;/p&gt;
&lt;p&gt;Key takeaways will include:
- How to ingest/import varied data file types
- Structuring/organizing data into a graph database
- Using Langchain, GraphQL, or Cypher to use this data&lt;/p&gt;
&lt;p&gt;Speaker: Jason Koo&lt;/p&gt;
&lt;p&gt;Mobile Developer turned Pythonista, Jason Koo is a Developer Advocate Manager at Neo4j who loves all things Python! Most of the time he assists a small but mighty team of Advocates but still finds time to code and speak at developer meetups, conferences, and the occasional podcast. He also organizes and hosts a thriving Graph Database Meetup group in sunny San Diego.&lt;/p&gt;
</content><category term="PyTexas 2024"></category></entry></feed>