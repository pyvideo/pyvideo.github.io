<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-singapore-2015.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-06-19T00:00:00+00:00</updated><entry><title>Automating Jenkins CI server with python</title><link href="https://pyvideo.org/pycon-singapore-2015/automating-jenkins-ci-server-with-python.html" rel="alternate"></link><published>2015-06-19T00:00:00+00:00</published><updated>2015-06-19T00:00:00+00:00</updated><author><name>Aleksey Maksimov</name></author><id>tag:pyvideo.org,2015-06-19:pycon-singapore-2015/automating-jenkins-ci-server-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will show a set of Python libraries that will allow audience to learn how to automate Jenkins and create complex build pipelines.&lt;/p&gt;
</summary></entry><entry><title>Building a custom wrapper kernel for IPython</title><link href="https://pyvideo.org/pycon-singapore-2015/building-a-custom-wrapper-kernel-for-ipython.html" rel="alternate"></link><published>2015-06-19T00:00:00+00:00</published><updated>2015-06-19T00:00:00+00:00</updated><author><name>Hari Allamraju</name></author><id>tag:pyvideo.org,2015-06-19:pycon-singapore-2015/building-a-custom-wrapper-kernel-for-ipython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever used IPython and wondered how it worked? And if you can build your own kernel to use with the great IPython tools like notebook? This talk will walk you through how you can do that with an example kernel built by me.&lt;/p&gt;
</summary><category term="ipython"></category></entry><entry><title>Business logic with PostgreSQL and Python</title><link href="https://pyvideo.org/pycon-singapore-2015/business-logic-with-postgresql-and-python.html" rel="alternate"></link><published>2015-06-19T00:00:00+00:00</published><updated>2015-06-19T00:00:00+00:00</updated><author><name>Hubert Piotrowski</name></author><id>tag:pyvideo.org,2015-06-19:pycon-singapore-2015/business-logic-with-postgresql-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When you can't use ORM and have to have a rock solid and consistent business logic in database why not using the power of Python as part of database?&lt;/p&gt;
&lt;p&gt;Using functions and triggers and PostgreSQL magic with plpy.&lt;/p&gt;
</summary></entry><entry><title>Closing Keynote</title><link href="https://pyvideo.org/pycon-singapore-2015/closing-keynote.html" rel="alternate"></link><published>2015-06-19T00:00:00+00:00</published><updated>2015-06-19T00:00:00+00:00</updated><author><name>Andrew Godwin</name></author><id>tag:pyvideo.org,2015-06-19:pycon-singapore-2015/closing-keynote.html</id><summary type="html"></summary><category term="keynote"></category></entry><entry><title>Debugging thousand CPU hour multigigabyte analyses with Python Decorators</title><link href="https://pyvideo.org/pycon-singapore-2015/debugging-thousand-cpu-hour-multigigabyte-analyses-with-python-decorators.html" rel="alternate"></link><published>2015-06-19T00:00:00+00:00</published><updated>2015-06-19T00:00:00+00:00</updated><author><name>Michal J. Gajda</name></author><id>tag:pyvideo.org,2015-06-19:pycon-singapore-2015/debugging-thousand-cpu-hour-multigigabyte-analyses-with-python-decorators.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to handle multi-gigabyte datasets, multi-hour runs and debug them quickly using Python.&lt;/p&gt;
</summary></entry><entry><title>Faster data processing in Python</title><link href="https://pyvideo.org/pycon-singapore-2015/faster-data-processing-in-python.html" rel="alternate"></link><published>2015-06-19T00:00:00+00:00</published><updated>2015-06-19T00:00:00+00:00</updated><author><name>Anand S</name></author><id>tag:pyvideo.org,2015-06-19:pycon-singapore-2015/faster-data-processing-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will covers ways that help process and analyse visualise data faster in Python. The primary focus is on the technique (should you optimise? what to optimise? how to optimise?) while covering libraries that help with this (line_profiler, Pandas, Numba, etc.)&lt;/p&gt;
</summary><category term="pandas"></category></entry><entry><title>Machine Learning: Going Deeper with Python and Theano</title><link href="https://pyvideo.org/pycon-singapore-2015/machine-learning-going-deeper-with-python-and-theano.html" rel="alternate"></link><published>2015-06-19T00:00:00+00:00</published><updated>2015-06-19T00:00:00+00:00</updated><author><name>Martin Andrews</name></author><id>tag:pyvideo.org,2015-06-19:pycon-singapore-2015/machine-learning-going-deeper-with-python-and-theano.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many recent advances in computer vision, speech recognition and Natural Language Processing (NLP) have come from Deep Learning research. One key enabler has been the use of GPUs to train bigger models on larger datasets. The Python module &amp;quot;Theano&amp;quot; can generate GPU code automatically - so that high level ideas can be implemented in high performance code seamlessly within the Python ecosystem.&lt;/p&gt;
</summary></entry><entry><title>Network Security and Analysis with Python</title><link href="https://pyvideo.org/pycon-singapore-2015/network-security-and-analysis-with-python.html" rel="alternate"></link><published>2015-06-19T00:00:00+00:00</published><updated>2015-06-19T00:00:00+00:00</updated><author><name>Lee Yang Peng</name></author><id>tag:pyvideo.org,2015-06-19:pycon-singapore-2015/network-security-and-analysis-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Python, I have developed a program that attempts to be helpful in Deep Packet Inspection. Deep Packet Inspection is a process mainly used in network security to ensure integrity of network data sent across the network. Deep Packet Inspection is used to pre-empt and prevent malicious data from being transmitted over a network in order to ensure the security of the organization.&lt;/p&gt;
</summary></entry><entry><title>Writing interpreters for fun and profit</title><link href="https://pyvideo.org/pycon-singapore-2015/writing-interpreters-for-fun-and-profit.html" rel="alternate"></link><published>2015-06-19T00:00:00+00:00</published><updated>2015-06-19T00:00:00+00:00</updated><author><name>Terry Chia</name></author><id>tag:pyvideo.org,2015-06-19:pycon-singapore-2015/writing-interpreters-for-fun-and-profit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing a programming language interpreter is usually considered black magic. This talk aims to demystify the process by walking through the steps of building a simple interpreter from scratch using Python.&lt;/p&gt;
</summary></entry><entry><title>Concurrent Computations on Multicore Processors</title><link href="https://pyvideo.org/pycon-singapore-2015/concurrent-computations-on-multicore-processors.html" rel="alternate"></link><published>2015-06-18T00:00:00+00:00</published><updated>2015-06-18T00:00:00+00:00</updated><author><name>Christian Zielinski</name></author><id>tag:pyvideo.org,2015-06-18:pycon-singapore-2015/concurrent-computations-on-multicore-processors.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will discuss the 'multiprocessing' module, which allows parallel programming on multicore processors. We will do a comparison with the 'threading' module, then cover the core functionality and finally discuss applications and limitations.&lt;/p&gt;
</summary><category term="multiprocessing"></category></entry><entry><title>Day 1 Closing Keynote</title><link href="https://pyvideo.org/pycon-singapore-2015/day-1-closing-keynote.html" rel="alternate"></link><published>2015-06-18T00:00:00+00:00</published><updated>2015-06-18T00:00:00+00:00</updated><author><name>Jessica McKellar</name></author><id>tag:pyvideo.org,2015-06-18:pycon-singapore-2015/day-1-closing-keynote.html</id><summary type="html"></summary></entry><entry><title>Decorators Demystified</title><link href="https://pyvideo.org/pycon-singapore-2015/decorators-demystified.html" rel="alternate"></link><published>2015-06-18T00:00:00+00:00</published><updated>2015-06-18T00:00:00+00:00</updated><author><name>Anand Chitipothu</name></author><id>tag:pyvideo.org,2015-06-18:pycon-singapore-2015/decorators-demystified.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Decorators are heavily used in modern python libraries and web frameworks. But they are still mystery to many people. In this talk I plan to discuss the concept of decorators in depth.&lt;/p&gt;
</summary></entry><entry><title>Easy contributable internationalization process with Sphinx</title><link href="https://pyvideo.org/pycon-singapore-2015/easy-contributable-internationalization-process-with-sphinx.html" rel="alternate"></link><published>2015-06-18T00:00:00+00:00</published><updated>2015-06-18T00:00:00+00:00</updated><author><name>Takayuki Shimizukawa</name></author><id>tag:pyvideo.org,2015-06-18:pycon-singapore-2015/easy-contributable-internationalization-process-with-sphinx.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sphinx can extract paragraphs from sphinx document and store them into gettext format translation catalog files. Gettext format translation catalog is easy to translate from one language to other languages. Also Sphinx support internationalization by using such catalog files. You can use your favorite editors or services to translate your sphinx docs.&lt;/p&gt;
</summary><category term="sphinx"></category><category term="i18n"></category></entry><entry><title>Expanding DevOps tools with MySQL Utilities</title><link href="https://pyvideo.org/pycon-singapore-2015/expanding-devops-tools-with-mysql-utilities.html" rel="alternate"></link><published>2015-06-18T00:00:00+00:00</published><updated>2015-06-18T00:00:00+00:00</updated><author><name>Ricky Setyawan</name></author><id>tag:pyvideo.org,2015-06-18:pycon-singapore-2015/expanding-devops-tools-with-mysql-utilities.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MySQL utilities are a set of command-line utilities and a Python library for making the common tasks much easier and time-saving to accomplish. The library is written entirely in Python, meaning that it is not necessary to have any other tools or libraries installed to make it work. It is currently designed to work with Python v2.6 or later and there is no support (yet) for Python v3.1.&lt;/p&gt;
</summary></entry><entry><title>ExpEYES: Python Powered Open Source Pocket Science Lab</title><link href="https://pyvideo.org/pycon-singapore-2015/expeyes-python-powered-open-source-pocket-science-lab.html" rel="alternate"></link><published>2015-06-18T00:00:00+00:00</published><updated>2015-06-18T00:00:00+00:00</updated><author><name>Praveen Patil</name></author><id>tag:pyvideo.org,2015-06-18:pycon-singapore-2015/expeyes-python-powered-open-source-pocket-science-lab.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ExpEYES is an Open Source Pocket Science Lab for developing science experiments, classroom demonstrations and a test equipment for electronics hobbyists. ExpEYES combines the real-time measurement capability of micro-controllers with the ease and flexibility of Python programming language for data analysis and visualization. &lt;a class="reference external" href="http://www.expeyes.in/"&gt;http://www.expeyes.in/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Improve your testing with Pytest and Mock</title><link href="https://pyvideo.org/pycon-singapore-2015/improve-your-testing-with-pytest-and-mock.html" rel="alternate"></link><published>2015-06-18T00:00:00+00:00</published><updated>2015-06-18T00:00:00+00:00</updated><author><name>Gabe Hollombe</name></author><id>tag:pyvideo.org,2015-06-18:pycon-singapore-2015/improve-your-testing-with-pytest-and-mock.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing code with Pytest is an absolute pleasure. Less boilerplate makes your test more concise and its fixtures system helps you share setup code while still keeping your tests clear and understandable. I'll tell you all about how to get basic unit testing done, and I'll show you how to use Voidspace's Mock library to test collaborations between your objects, too.&lt;/p&gt;
</summary></entry><entry><title>Opening Address</title><link href="https://pyvideo.org/pycon-singapore-2015/opening-address.html" rel="alternate"></link><published>2015-06-18T00:00:00+00:00</published><updated>2015-06-18T00:00:00+00:00</updated><author><name>Victor Neo</name></author><id>tag:pyvideo.org,2015-06-18:pycon-singapore-2015/opening-address.html</id><summary type="html"></summary></entry><entry><title>Opening Keynote</title><link href="https://pyvideo.org/pycon-singapore-2015/opening-keynote.html" rel="alternate"></link><published>2015-06-18T00:00:00+00:00</published><updated>2015-06-18T00:00:00+00:00</updated><author><name>Lynn Root</name></author><id>tag:pyvideo.org,2015-06-18:pycon-singapore-2015/opening-keynote.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An insomniac software engineer for Spotify, founder of the San Francisco Chapter of PyLadies, board member of the Python Software Foundation, and member of the Django Software Foundation.&lt;/p&gt;
</summary><category term="keynote"></category></entry><entry><title>Real time stream processing with Python</title><link href="https://pyvideo.org/pycon-singapore-2015/real-time-stream-processing-with-python.html" rel="alternate"></link><published>2015-06-18T00:00:00+00:00</published><updated>2015-06-18T00:00:00+00:00</updated><author><name>Kristin Nguyen</name></author><id>tag:pyvideo.org,2015-06-18:pycon-singapore-2015/real-time-stream-processing-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Discussion on real-time stream processing and how to build a Python application to analyse data streams.&lt;/p&gt;
</summary></entry><entry><title>Short Film Production in Blender</title><link href="https://pyvideo.org/pycon-singapore-2015/short-film-production-in-blender.html" rel="alternate"></link><published>2015-06-18T00:00:00+00:00</published><updated>2015-06-18T00:00:00+00:00</updated><author><name>Sacha Goedegebure</name></author><id>tag:pyvideo.org,2015-06-18:pycon-singapore-2015/short-film-production-in-blender.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A look at Sarah's Dream. How Blender was used to create a short animation for this &amp;quot;Make a Wish Foundation&amp;quot; project. And a look at Gnome production - The art, process &amp;amp; technical challenges.&lt;/p&gt;
</summary></entry><entry><title>Understanding Non blocking IO</title><link href="https://pyvideo.org/pycon-singapore-2015/understanding-non-blocking-io.html" rel="alternate"></link><published>2015-06-18T00:00:00+00:00</published><updated>2015-06-18T00:00:00+00:00</updated><author><name>Vaidik Kapoor</name></author><id>tag:pyvideo.org,2015-06-18:pycon-singapore-2015/understanding-non-blocking-io.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wondered how the whole Non-Blocking IO thing works? As a web developer, you may have heard of Non-Blocking network libraries and web servers, you may even know what they actually do or probably you have even used them, but do you really know what is going on behind the scene? In this talk, we are going to see how Non-Blocking IO is implemented and understand the concept better.&lt;/p&gt;
</summary></entry></feed>