<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_josef-heinen.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-07-15T00:00:00+00:00</updated><entry><title>Getting More Out of Matplotlib with GR</title><link href="https://pyvideo.org/euroscipy-2015/getting-more-out-of-matplotlib-with-gr-euroscipy-2015-josef-heinen.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Josef Heinen</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/getting-more-out-of-matplotlib-with-gr-euroscipy-2015-josef-heinen.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Matplotlib is the most popular graphics library for Python. It is the workhorse plotting utility of the scientific Python world. However, depending on the field of application, the software may be reaching its limits. This is the point where the GR framework will help. GR can be used as a backend for Matplotlib applications and significantly improve the performance and expand their capabilities.&lt;/p&gt;
</summary><category term="matplotlib"></category></entry><entry><title>Getting more out of Matplotlib with GR</title><link href="https://pyvideo.org/europython-2015/getting-more-out-of-matplotlib-with-gr.html" rel="alternate"></link><published>2015-08-05T00:00:00+00:00</published><updated>2015-08-05T00:00:00+00:00</updated><author><name>Josef Heinen</name></author><id>tag:pyvideo.org,2015-08-05:europython-2015/getting-more-out-of-matplotlib-with-gr.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Josef Heinen - Getting more out of Matplotlib with GR
[EuroPython 2015]
[20 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;Python is well established in software development departments of
research and industry, not least because of the proliferation of
libraries such as &lt;em&gt;SciPy&lt;/em&gt; and &lt;em&gt;Matplotlib&lt;/em&gt;. However, when processing
large amounts of data, in particular in combination with GUI toolkits
(&lt;em&gt;Qt&lt;/em&gt;) or three-dimensional visualizations (&lt;em&gt;OpenGL&lt;/em&gt;), Python as an
interpretative programming language seems to be reaching its limits.
In particular, large amounts of data or the visualization of three-
dimensional scenes may overwhelm the system.&lt;/p&gt;
&lt;p&gt;This presentation shows how visualization applications with special
performance requirements can be designed on the basis of &lt;em&gt;Matplotlib&lt;/em&gt;
and &lt;em&gt;GR&lt;/em&gt;, a high-performance visualization library for Linux, OS X and
Windows. The lecture focuses on the development of a new graphics
backend for &lt;em&gt;Matplotlib&lt;/em&gt; based on the &lt;em&gt;GR&lt;/em&gt; framework. By combining the
power of those libraries the responsiveness of animated visualization
applications and their resulting frame rates can be improved
significantly. This in turn allows the use of &lt;em&gt;Matplotlib&lt;/em&gt; in real-
time environments, for example in the area of signal processing.&lt;/p&gt;
&lt;p&gt;Using concrete examples, the presentation will demonstrate the
benefits of the &lt;a class="reference external" href="http://gr-framework.org"&gt;GR framework&lt;/a&gt; as a companion module for
&lt;em&gt;Matplotlib&lt;/em&gt;, both in &lt;em&gt;Python&lt;/em&gt; and &lt;em&gt;Julia&lt;/em&gt;. Based on selected
applications, the suitability of the &lt;em&gt;GR framework&lt;/em&gt; will be
highlighted especially in environments where time is critical. The
system’s performance capabilities will be illustrated using demanding
live applications. In addition, the special abilities of the &lt;em&gt;GR
framework&lt;/em&gt; are emphasized in terms of interoperability with graphical
user interfaces (&lt;em&gt;Qt/PySide&lt;/em&gt;) and &lt;em&gt;OpenGL&lt;/em&gt;, which opens up new
possibilities for existing &lt;em&gt;Matplotlib&lt;/em&gt; applications.&lt;/p&gt;
</summary></entry><entry><title>GR: Plotting with Python or Julia</title><link href="https://pyvideo.org/scipy-2016/gr-plotting-with-python-or-julia-scipy-2016-josef-heinen.html" rel="alternate"></link><published>2016-07-15T00:00:00+00:00</published><updated>2016-07-15T00:00:00+00:00</updated><author><name>Josef Heinen</name></author><id>tag:pyvideo.org,2016-07-15:scipy-2016/gr-plotting-with-python-or-julia-scipy-2016-josef-heinen.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GR is a plotting package for the creation of two- and three-dimensional graphics in Python or Julia, offering unique plotting functions to visualize static or dynamic data with minimal overhead. In addition, GR can be used as a backend for other plotting interfaces or wrappers, in particular when being used in interactive notebooks. This presentation shows how visualization applications with special performance requirements can be designed on the basis of simple and easy-to-use functions as known from the MATLAB plotting library. Using quick practical examples, this talk is going to present the special features and capabilities provided by the GR framework both as a self-contained graphics library or as a fast backend for other packages. Slides may be found here: &lt;a class="reference external" href="http://pgi-jcns.fz-juelich.de/pub/doc/SciPy_2016/GR-Plotting_with_Python_or_Julia.pdf"&gt;http://pgi-jcns.fz-juelich.de/pub/doc/SciPy_2016/GR-Plotting_with_Python_or_Julia.pdf&lt;/a&gt;&lt;/p&gt;
</summary><category term="SciPy 2016"></category></entry><entry><title>GR - ein universelles Framework für Visualisierungsanwendungen</title><link href="https://pyvideo.org/pycon-de-2012/gr-einuniverselles-framework-f-r-visualisierung.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Josef Heinen</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/gr-einuniverselles-framework-f-r-visualisierung.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Zur Erstellung von Visualisierungsprogrammen existiert eine Vielzahl
freier und kommerzieller Tools und Bibliotheken. In einem heterogenen
Rechnerumfeld zeigt sich aber, dass es keine durchgängig einsetzbare
Lösung gibt, welche die speziellen Anforderungen in einem
wissenschaftlichen Umfeld abdeckt.&lt;/p&gt;
&lt;p&gt;GR ist ein universell einsetzbares Framework für plattformübergreifende
Visualisierungsanwendungen. Es bietet Entwicklern eine kompakte,
portable und einheitliche Grafik-Bibliothek für ihre Anwendungen. Das
Anwendungsspektrum reicht von der Erzeugung publikationsreifer
2D-Diagramme bis hin zur Darstellung komplexer 3D-Szenen.&lt;/p&gt;
&lt;p&gt;Der Vortrag beschreibt zunächst die Funktionalität des GR-Frameworks,
welches im wesentlichen auf einer Implementierung des graphischen
Kernsystems (GKS) sowie der Programmierschnittstelle OpenGL basiert. Es
wird aufgezeigt, wie GR als geschlossenes System schnell und einfach in
vorhandene Anwendungen – z.B. mit dem ctypes-Mechanismus in Python -
integriert werden kann. Neben dem Einsatz in imperativ programmierten
Systemen ist auch eine Integration in moderne objektorientierte Systeme,
die auf GUI Toolkits aufbauen, vorgesehen. Darüber hinaus werden die
Stärken des GR-Frameworks in Bezug auf die Interoperabilität mit
aktuellen Web-Technologien und mobilen Geräten herausgestellt.&lt;/p&gt;
</summary><category term="frameworks"></category><category term="opengl"></category><category term="visualisierung"></category></entry><entry><title>Was Sie schon immer über „Visualisierung mit Python“ wissen wollten</title><link href="https://pyvideo.org/pycon-de-2013/was-sie-schon-immer-uber-visualisierung-mit-pyth.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Josef Heinen</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/was-sie-schon-immer-uber-visualisierung-mit-pyth.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Schon lange hat sich Python in den Software-Entwicklungsabteilungen von
Forschung und Industrie etabliert, nicht zuletzt wegen der Verbreitung
von Bibliotheken wie SciPy oder Matplotlib. Bei der Verarbeitung großer
Datenmengen oder im Zusammenspiel mit GUI-Toolkits stößt man aber leicht
an die Grenzen der interpretativen Programmierung.&lt;/p&gt;
&lt;p&gt;Der Vortrag zeigt auf, wie solche Anforderung auf der Basis des &lt;em&gt;GR
Frameworks&lt;/em&gt;, einer &amp;quot;Lightweight&amp;quot;-Alternative zu Matplotlib, umgesetzt
werden können. Im Einzelnen wird beschrieben wie man mit aktuellen
Software-Technologien Echtzeit-Anwendungen oder rechenintensive
Simulationen in Python realisieren kann. So lässt sich zum Beispiel
durch die Verwendung von Just-In-Time Kompilierung mit Numba(Pro) eine
enorme Performance-Steigerung erzielen. An konkreten Beispielen werden
die Vorzüge des &lt;em&gt;GR Frameworks&lt;/em&gt; im Zusammenspiel mit JIT-Compilern,
graphischen Benutzeroberflächen (GUIs) sowie OpenGL, aber auch vor dem
Hintergrund einer stetig ansteigenden Paketflut beschrieben.&lt;/p&gt;
</summary><category term="accelerate"></category><category term="anaconda"></category><category term="numba"></category><category term="numpy"></category><category term="opengl"></category><category term="pyqt"></category><category term="python"></category><category term="visualisierung"></category></entry><entry><title>GR - A Universal Framework for Visualization Applications</title><link href="https://pyvideo.org/pycon-us-2013/gr-a-universal-framework-for-visualization-appl.html" rel="alternate"></link><published>2013-03-17T00:00:00+00:00</published><updated>2013-03-17T00:00:00+00:00</updated><author><name>Josef Heinen</name></author><id>tag:pyvideo.org,2013-03-17:pycon-us-2013/gr-a-universal-framework-for-visualization-appl.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;For the creation of visualization programs there are a number of free
and commercial tools and libraries. In a heterogeneous environment it
points out that there is no universal solution that covers the specific
needs in a scientific environment. GR is a framework for cross-platform
visualization applications ranging from publication quality 2D graphs to
the representation of complex 3D scenes.&lt;/p&gt;
</summary><category term="poster"></category></entry></feed>