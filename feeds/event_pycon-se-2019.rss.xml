<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 31 Oct 2019 00:00:00 +0000</lastBuildDate><item><title>Asyncio in the Wild</title><link>https://pyvideo.org/pycon-se-2019/asyncio-in-the-wild.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Asyncio is a fairly new tool and no often used in production. In this talk we will be aiming for use-cases and examples so people can get more confidence moving away from the synchronous world. The talk aims to solve the problem of uncertainty when getting started with asynchronous programming in Python. After the talk the audience will be equipped with new tools they can look up at home to get started with asynchronous web development in Python, also, hopefully, they will have some extra confidence in the area.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Akos Hochrein</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/asyncio-in-the-wild.html</guid><category>async</category><category>asyncio</category></item><item><title>Becoming Free</title><link>https://pyvideo.org/pycon-se-2019/becoming-free.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has become the most widely used programming language. From time to time, employed professionals consider going on their own and become a freelancer. This talk will cover the most demanded Python based services for outsourcing. Anna will also talk about the freelancer mindset together with the legal and economical aspect of being self-employed in Sweden. After the talk, you will be able to see the full picture of freelancing and decide for yourself, if it is for you.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anna Kazakova</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/becoming-free.html</guid><category>freelancing</category></item><item><title>Big Data Pipeline Design and Tuning in PySpark</title><link>https://pyvideo.org/pycon-se-2019/big-data-pipeline-design-and-tuning-in-pyspark.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PySpark is a great tool for doing big data ETL pipeline. While designing a big data pipeline, which is easy to maintain with a holistic view, simple to spot bottleneck is difficult. Not to say enable analytics on ETL pipelines. Rockie Yang will share his experiences on build effective ETL pipeline with PySpark.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rockie Yang</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/big-data-pipeline-design-and-tuning-in-pyspark.html</guid><category>pyspark</category><category>data pipeline</category><category>etl</category></item><item><title>Born to adapt: How Dathena solves the industry diversity problem</title><link>https://pyvideo.org/pycon-se-2019/born-to-adapt-how-dathena-solves-the-industry-diversity-problem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How adjust your AI solution to the new domain? How retrain your model on new industry-specific data? How to increase labeled dataset for minimum cost? Do oracles exist? We will look at these problems from the data protection point of view and bring possible solutions. We will talk about methods, which discuss how to adapt NLP and CV solutions to any type of industry.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tetiana Kodliuk</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/born-to-adapt-how-dathena-solves-the-industry-diversity-problem.html</guid><category>ai</category><category>nlp</category></item><item><title>Equip your performance toolbox - Cython vs Pybind11</title><link>https://pyvideo.org/pycon-se-2019/equip-your-performance-toolbox-cython-vs-pybind11.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Developing Python applications is handy and rapid, but its performance is always concerned, especially on the CPU bound problems. We will go through the common tricks and tips to archive the best performance on the Python level. Then the two reputable libraries, Cython and Pybind11, will be visited to archive the compiled language performance and compared with their implementation, flexibility and performance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gavin Chan</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/equip-your-performance-toolbox-cython-vs-pybind11.html</guid><category>cython</category><category>pybind11</category><category>Performance</category></item><item><title>Expressive coding extravaganza: making art with code</title><link>https://pyvideo.org/pycon-se-2019/expressive-coding-extravaganza-making-art-with-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Generative art leverages computing power to produce elegant artwork, by skillfully controlling the location and magnitude of randomness in color, shape and position. Contemporary artists are more than ever using such principles in their creative workflow, to produce image, video and sound. This talk will give you an overview of the possibilities of using code in an expressive way, and inspire you to start drawing with Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Half Scheidl</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/expressive-coding-extravaganza-making-art-with-code.html</guid><category>generative art</category></item><item><title>From bigger than 1 billion years to smaller than 1 second</title><link>https://pyvideo.org/pycon-se-2019/from-bigger-than-1-billion-years-to-smaller-than-1-second.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The goal of this talk is to empower people with over a dozen optimisation techniques which may be effectively used in a wide variety of situations, even beyond Python.  I will present best practices, typical pitfalls and common tools, but the main focus will be on a practical approach. I will showcase a small problem and a naive solution, just a few lines of Python, so that it's easily understood. Iteratively I will apply each optimisation, explain the reasoning behind it and note how execution time is reduced. By the end of the talk, one will see how the code evolved from something that would take &amp;gt;1 billion years to compute to &amp;lt;1 second on a regular laptop.  I will also compare running times between Python, PyPy and C++ implementations (one being just a few milliseconds), and show how the techniques may achieve vastly different speedups from the python versions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Isaac Bernat</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/from-bigger-than-1-billion-years-to-smaller-than-1-second.html</guid><category>Performance</category><category>optimization</category><category>optimisation</category></item><item><title>Keynote: Stories From Real World Vision Projects</title><link>https://pyvideo.org/pycon-se-2019/keynote-stories-from-real-world-vision-projects.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How do you implement an application that can pick out the interesting parts of a soccer game? What do you do when you don't have enough data, or when the data is too specific? How do you know that you are actually solving the problem, or even the right problem?  Writing a neural network in Python using Keras is very straight forward, you can do it in 20 lines or less, but is that all there is? Welcome to a journey through some real world problems and the thinking when working through them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tess Ferrandez</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/keynote-stories-from-real-world-vision-projects.html</guid><category>keynote</category></item><item><title>Keynote: The Ubiquity of Operationalizing Python Models</title><link>https://pyvideo.org/pycon-se-2019/keynote-the-ubiquity-of-operationalizing-python-models.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As we progress further into the Information Age, the number of factors involved in making important business decisions increases exponentially. We will discuss the benefits of operationalizing Python models to better inform the increasingly complicated choices that need to be made in an increasingly complicated world, as well as highlight examples that showcase the ubiquity of this approach.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shammamah Hossain</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/keynote-the-ubiquity-of-operationalizing-python-models.html</guid><category>keynote</category></item><item><title>Learning Python (or Anything) Effectively</title><link>https://pyvideo.org/pycon-se-2019/learning-python-or-anything-effectively.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When we're learning something new - even something as friendly as Python - it can be difficult to make details stick long-term. This talk will give you some tips to help you learn Python - or anything else - more effectively. Although Python beginners will benefit the most from applying these concepts to Python, this talk is for anyone who wants to hack into their potential to learn more efficiently.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica Shortz</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/learning-python-or-anything-effectively.html</guid><category>Learning</category><category>Beginners</category></item><item><title>Lightning talk 01</title><link>https://pyvideo.org/pycon-se-2019/lightning-talk-01.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Helio Loureiro</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/lightning-talk-01.html</guid><category>lightning talk</category></item><item><title>Lightning talk 02 - Creating the Next Generation of Billionaires</title><link>https://pyvideo.org/pycon-se-2019/lightning-talk-02-creating-the-next-generation-of-billionaires.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lilian Nandi</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/lightning-talk-02-creating-the-next-generation-of-billionaires.html</guid><category>lightning talk</category></item><item><title>Lightning talk 03 - Get some flavours into your applications</title><link>https://pyvideo.org/pycon-se-2019/lightning-talk-03-get-some-flavours-into-your-applications.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michal Petrucha</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/lightning-talk-03-get-some-flavours-into-your-applications.html</guid><category>lightning talk</category><category>flavours</category></item><item><title>Lightning talk 04 - Self-Documenting Code... Kinda</title><link>https://pyvideo.org/pycon-se-2019/lightning-talk-04-self-documenting-code-kinda.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juha-Matti Santala</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/lightning-talk-04-self-documenting-code-kinda.html</guid><category>lightning talk</category><category>self-documenting code</category></item><item><title>Lightning talk 05 - My programming adventure</title><link>https://pyvideo.org/pycon-se-2019/lightning-talk-05-my-programming-adventure.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Regan Ya</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/lightning-talk-05-my-programming-adventure.html</guid><category>lightning talk</category></item><item><title>Lightning talk 06 - Learning Python through MUDs and Evennia</title><link>https://pyvideo.org/pycon-se-2019/lightning-talk-06-learning-python-through-muds-and-evennia.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Griatch</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/lightning-talk-06-learning-python-through-muds-and-evennia.html</guid><category>lightning talk</category><category>evennia</category><category>mud</category></item><item><title>Lightning talk 07 - Stilus</title><link>https://pyvideo.org/pycon-se-2019/lightning-talk-07-stilus.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan Willems</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/lightning-talk-07-stilus.html</guid><category>lightning talk</category><category>stilus</category></item><item><title>Lightning talk 08 - The World's Cheapest, Simplest Pen Plotter</title><link>https://pyvideo.org/pycon-se-2019/lightning-talk-08-the-worlds-cheapest-simplest-pen-plotter.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniele Procida</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/lightning-talk-08-the-worlds-cheapest-simplest-pen-plotter.html</guid><category>lightning talk</category></item><item><title>Lightning talk 09 - Intro to JupyterHub and BinderHub</title><link>https://pyvideo.org/pycon-se-2019/lightning-talk-09-intro-to-jupyterhub-and-binderhub.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Sundell</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/lightning-talk-09-intro-to-jupyterhub-and-binderhub.html</guid><category>lightning talk</category><category>jupyterhub</category><category>binderhub</category></item><item><title>Lightning talk 10</title><link>https://pyvideo.org/pycon-se-2019/lightning-talk-10.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Isaac Bernat</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/lightning-talk-10.html</guid><category>lightning talk</category></item><item><title>Make your Python code fly at transonic speeds!</title><link>https://pyvideo.org/pycon-se-2019/make-your-python-code-fly-at-transonic-speeds.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk is particularly useful for developers of Python applications which does heavy computation, with or without NumPy - for data science, research etc.  Python extensions allows for creation of high-performance applications, which can compete with C or C++ based ones. There are more than one framework to achieve this (for example, Cython, Pythran and Numba) with similar syntaxes but different underlying implementations. The talk surveys the state of the art of creating extensions and introduces Transonic (&lt;a class="reference external" href="https://transonic.readthedocs.io"&gt;https://transonic.readthedocs.io&lt;/a&gt;). Transonic is a pure-Python package acting as a unifying front-end for writing extensions with the aim to enhance the developer experience.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ashwin Vishnu Mohanan</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/make-your-python-code-fly-at-transonic-speeds.html</guid><category>transonic</category></item><item><title>Making sense of ML Black Box: Interpreting ML Models Using SHAP</title><link>https://pyvideo.org/pycon-se-2019/making-sense-of-ml-black-box-interpreting-ml-models-using-shap.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Extracting insights from a complex machine learning model is not easy hence for many people machine learning models are in a sense black box. This is a problem especially in high stake sectors like banking and healthcare. In this talk we will discuss how we can increase transparency, auditability, and stability of the model using valuable insights we can get from SHAP and explain reasoning behind individual predictions and how this can be aggregated into powerful model-level insights. We will also see the code to calculate SHAP values.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ravi Singh</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/making-sense-of-ml-black-box-interpreting-ml-models-using-shap.html</guid><category>machine learning</category><category>SHAP</category></item><item><title>Mutation Testing - Theory and Practice</title><link>https://pyvideo.org/pycon-se-2019/mutation-testing-theory-and-practice.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is mutation testing? How does it work in practice? What is it like to actually do it? These questions will be answered!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anders Hovmöller</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/mutation-testing-theory-and-practice.html</guid><category>testing</category><category>mutation testing</category></item><item><title>PyCon Sweden 2019 closing remarks</title><link>https://pyvideo.org/pycon-se-2019/pycon-sweden-2019-closing-remarks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/pycon-sweden-2019-closing-remarks.html</guid></item><item><title>PyCon Sweden 2019 Opening</title><link>https://pyvideo.org/pycon-se-2019/pycon-sweden-2019-opening.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/pycon-sweden-2019-opening.html</guid></item><item><title>PyMacaron: microservices made easy</title><link>https://pyvideo.org/pycon-se-2019/pymacaron-microservices-made-easy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyMacaron is a microservice framework integrating Flask with swagger specifications to spawn REST apis with minimal code overhead. It comes with a deployment pipeline towards docker and amazon Beanstalk, support asynchronous tasks out of the box, and plays well with DynamoDB. PyMacaron is live and powering the backend of a couple of Swedish startups, including ksting.com and bazardelux.com.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erwan Lemonnier</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/pymacaron-microservices-made-easy.html</guid><category>pymacaron</category></item><item><title>Scaling AI @ H&amp;M</title><link>https://pyvideo.org/pycon-se-2019/scaling-ai-hm.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk is about sharing the journey &amp;amp; learnings from building a world class AI function that builds scalable software for the entire H&amp;amp;M group. In the talk we will go through the tech stack behind it and some of the key enablers for us to scale and drive value from AI.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Errol Koolmeister</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/scaling-ai-hm.html</guid><category>artificial intelligence</category><category>ai</category></item><item><title>Test Fast, Fix More - Property based testing with Hypothesis</title><link>https://pyvideo.org/pycon-se-2019/test-fast-fix-more-property-based-testing-with-hypothesis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Test Fast, Fix More – Property based in Python testing with Hypothesis Did you ever miss that corner case bug? Maybe it was a negative integer, strange timezone conversion behaviour, off by one error or something entirely else. These subtle bugs are often hard to catch and are easily missed in test cases. You like me have probably ran into plenty of code utilising only happy path testing, only to later discover subtle bugs which are easily fixed once pointed out. This is where property based testing comes into the picture.  In this talk I will focus on a wonderful Python library called Hypothesis but the concepts apply to other languages as well. Hypethesis is based on the same concept as the famous QuickCheck library for Haskell, which in turn have been ported a large number of languages. Hypothesis uses a wide range of input to find edge cases that you could otherwise easily miss, once it finds these cases it narrows down the input to the minimal breaking example to provide failures which are easier to understand.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Hultér</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/test-fast-fix-more-property-based-testing-with-hypothesis.html</guid><category>hypothesis</category><category>testing</category></item><item><title>Volumetric sculpting - Shaping a dynamic chisel</title><link>https://pyvideo.org/pycon-se-2019/volumetric-sculpting-shaping-a-dynamic-chisel.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The shape of the tool determines the outcome of the result. A story about developing a volumetric 3D modeling and animation tool for creating virtual and physical sculptures using VTK, Numpy and PyQt told through the tool itself.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Nyberg</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/volumetric-sculpting-shaping-a-dynamic-chisel.html</guid><category>3d</category></item><item><title>What is causal inference, and why should data scientists know?</title><link>https://pyvideo.org/pycon-se-2019/what-is-causal-inference-and-why-should-data-scientists-know.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With an explosion of computation power and modern algorithms more and more people are interested in AI, Analytics and Data Science. The Python ecosystem has been one of the most important driver for developing new tools and Python holds the power of modern analytics, but knowing the tools is not enough. Drawing conclusions from data is easy; getting the right conclusions is hard. Causal Inference is the art of drawing robust conclusions from nonexperimental data. This session will be an introduction to the field.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ludvig Hult</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/what-is-causal-inference-and-why-should-data-scientists-know.html</guid><category>data science</category></item><item><title>Why Python is huge in finance?</title><link>https://pyvideo.org/pycon-se-2019/why-python-is-huge-in-finance.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is huge in finance, from banks to hedge-funds to day-traders; it is often the go-to tool to get things done. This talk dives into 'why?'. First looking at several areas where Python is big, what kind of work is involved, and the challenges for developers? Then at what libraries/language aspects make Python particularly suited. Pandas gets particular attention as it is incredibly useful and can make you super productive. We finish up with a demo of how you can use Monte Carlo techniques to build a mini stock market simulation and test out your own trading ideas. After the talk, you should have a better feel for what it's like working with Python in finance and also a good set of starting point if you want to start experimenting.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Roos</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/why-python-is-huge-in-finance.html</guid><category>finance</category></item><item><title>Writing highly scalable and provenanceable data pipelines</title><link>https://pyvideo.org/pycon-se-2019/writing-highly-scalable-and-provenanceable-data-pipelines.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we are gonna explore launching and maintaining highly scalable data pipelines using Kubernetes. We are gonna go through the process of setting up a Pachyderm cluster and deploying Python-based data processing workloads. This setup enables teams to develop and maintain very robust data pipelines, with the benefits of autoscaling clusters and quick code iteration.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guilherme Caminha</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:pycon-se-2019/writing-highly-scalable-and-provenanceable-data-pipelines.html</guid><category>kubernetes</category><category>data pipeline</category></item></channel></rss>