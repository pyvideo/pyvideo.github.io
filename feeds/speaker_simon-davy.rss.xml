<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 27 Oct 2017 17:00:00 +0100</lastBuildDate><item><title>Single Malt WSGI</title><link>https://pyvideo.org/pycon-uk-2017/single-malt-wsgi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will introduce the Talisker project, which is an enhanced WSGI application runner based on standard python tools.&lt;/p&gt;
&lt;p&gt;Production WSGI applications require extras beyond just your application, like powerful logging, metrics, tracing and error reporting. Repeatedly integrating these into each new WSGI app/microservice can be dull, error prone, and inconsistent across services.&lt;/p&gt;
&lt;p&gt;Talisker aims to provide drop-in best practice support out of the box in all these areas and more. It integrates a set of popular python web tools into a single WSGI run-time.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;gunicorn&lt;/li&gt;
&lt;li&gt;requests&lt;/li&gt;
&lt;li&gt;sentry&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And optionally:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;li&gt;celery&lt;/li&gt;
&lt;li&gt;statsd&lt;/li&gt;
&lt;li&gt;prometheus_client&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It also uses a novel technique to enhance stdlib's default logging to support structured logging for all loggers.&lt;/p&gt;
&lt;p&gt;Talisker pulls all these tools together, and enhances the whole app. For example, requests and gunicorn get metrics and request id tracing on HTTP requests. Even your cron jobs can be run via Talisker, providing them with structured logging, metrics and error reporting.&lt;/p&gt;
&lt;p&gt;Designed to be simple to use, you can use it as a drop in replacement for gunicorn to run your apps gunicorn to get the benefit, and opt-in to other features as needed.&lt;/p&gt;
&lt;p&gt;The talk will introduce the motivations behind the project, the decisions we've made, and our experience running a fleet of microservices with Talisker at Canonical.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simon Davy</dc:creator><pubDate>Fri, 27 Oct 2017 17:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/single-malt-wsgi.html</guid></item><item><title>Repeatable automated deployments with Juju</title><link>https://pyvideo.org/pycon-uk-2014/repeatable-automated-deployments-with-juju.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presented by: Michael Foord &amp;amp; Simon Davy&lt;/p&gt;
&lt;p&gt;Do you deploy your Python services to Amazon EC2, or to Openstack, or even to HP cloud, joyent or Azure? Do you want to - without being tied into any one of them?&lt;/p&gt;
&lt;p&gt;What about local deployments with lxc or kvm containers. How about managing your bare metal servers through Metal As A Service and deploying to OpenStack on top? ISP grade technology for your data centre!&lt;/p&gt;
&lt;p&gt;How about managing your service deployment and infrastructure with Python code? (Devops distilled.)&lt;/p&gt;
&lt;p&gt;If any of this sounds interesting then Juju maybe for you! Treat your servers as cattle not as pets, for service oriented repeatable deployments on your choice of back-end. Orchestrate and relate your services with charms written in Python.&lt;/p&gt;
&lt;p&gt;In this talk we'll demo service deployment for a Django application and related infrastructure.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Foord</dc:creator><pubDate>Mon, 20 Oct 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-10-20:pycon-uk-2014/repeatable-automated-deployments-with-juju.html</guid><category>juju</category></item><item><title>Trouble at t'LeedsDataMill: Oompah.py ~ Big Data meets Big Brass</title><link>https://pyvideo.org/pycon-uk-2014/trouble-at-tleedsdatamill-oompahpy-big-data-meets-big-brass.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presented by: Nicholas Tollervey &amp;amp; Simon Davy&lt;/p&gt;
&lt;p&gt;We will describe and (maybe) perform via the medium of Brass Band footfall data collected from the city of Leeds.&lt;/p&gt;
&lt;p&gt;It's likely to be a loud, fun, interesting and musical exposition of big data manipulated with Python.&lt;/p&gt;
&lt;p&gt;It may involve Tubas.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicholas Tollervey</dc:creator><pubDate>Mon, 20 Oct 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-10-20:pycon-uk-2014/trouble-at-tleedsdatamill-oompahpy-big-data-meets-big-brass.html</guid></item></channel></rss>