<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_fergus-doyle.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-10-14T00:00:00+00:00</updated><entry><title>Dealing with Bug Black Boxes</title><link href="https://pyvideo.org/pycon-uk-2014/dealing-with-bug-black-boxes.html" rel="alternate"></link><published>2014-10-14T00:00:00+00:00</published><updated>2014-10-14T00:00:00+00:00</updated><author><name>Fergus Doyle</name></author><id>tag:pyvideo.org,2014-10-14:pycon-uk-2014/dealing-with-bug-black-boxes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presented by: Fergus Doyle&lt;/p&gt;
&lt;p&gt;&amp;quot;Full-stack&amp;quot; includes so much more than just client and server these days, with systems building on top of multiple database engines, caching layers, search backends, third party web services and hosting solutions to name but a few.&lt;/p&gt;
&lt;p&gt;What does this mean for infrastructure? In this talk we'll explore the impact maintaining so many independent cogs can have on a system as a whole.&lt;/p&gt;
&lt;p&gt;Weâ€™ll look at third-party components vs. those developed and maintained in-house and their similarities and differences. How can we encapsulate and efficiently test components in such disparate systems? What can we do to minimise the overhead and risk of releasing new code to individual components nested deep within the machine?&lt;/p&gt;
</summary></entry></feed>