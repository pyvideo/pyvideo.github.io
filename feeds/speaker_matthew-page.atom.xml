<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_matthew-page.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-03T16:30:00+00:00</updated><entry><title>How to JIT: Writing a Python JIT from scratch in pure Python</title><link href="https://pyvideo.org/pycon-us-2019/how-to-jit-writing-a-python-jit-from-scratch-in-pure-python.html" rel="alternate"></link><published>2019-05-03T16:30:00+00:00</published><updated>2019-05-03T16:30:00+00:00</updated><author><name>Matthew Page</name></author><id>tag:pyvideo.org,2019-05-03:pycon-us-2019/how-to-jit-writing-a-python-jit-from-scratch-in-pure-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wondered how a JIT compiler works? Production quality JIT
compilers are large, complicated pieces of software that can seem
inscrutable at first glance. However, building a simple JIT compiler is
surprisingly easy. We'll walk through how to build a template-style JIT
compiler for Python from first principles, in Python!&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>