<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-italia-2014.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-05-25T00:00:00+00:00</updated><entry><title>How your brain tricks you</title><link href="https://pyvideo.org/pycon-italia-2014/how-your-brain-tricks-you.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Anna Ravenscroft</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/how-your-brain-tricks-you.html</id><summary type="html"></summary></entry><entry><title>If code is poetry, then documentation is prose</title><link href="https://pyvideo.org/pycon-italia-2014/if-code-is-poetry-then-documentation-is-prose.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Massimiliano Pippi</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/if-code-is-poetry-then-documentation-is-prose.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Yes, code might be poetry, showing the elegance of the verses, rhythm, expressiveness; but without good documentation that explains what it does, you will likely end up with unsatisfied users or no users at all.&lt;/p&gt;
&lt;p&gt;If anyone had told me I would have spent more time writing documentation than coding, I would not have believed it, but that was before I discovered a simple but powerful law: &amp;quot;more documentation, more users, more contributors&amp;quot;.&lt;/p&gt;
&lt;p&gt;During the talk we will see which are the foundations of good documentation and how documentation can let your open source project take off.&lt;/p&gt;
</summary></entry><entry><title>Il reverendo Bayes è tuo amico (anche se non puoi andarci a cena assieme)</title><link href="https://pyvideo.org/pycon-italia-2014/il-reverendo-bayes-e-tuo-amico-anche-se-non-puoi-andarci-a-cena-assieme.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Emmanuele Somma</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/il-reverendo-bayes-e-tuo-amico-anche-se-non-puoi-andarci-a-cena-assieme.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduzione alla statistica bayesiana con Python. Mentre a scuola e nelle università di solito si perde molto tempo a studiare i dettagli matematici della statistica bayesiana, solo chi conosce un linguaggio di programmazione --e specialmente Python-- può apprezzare l'immediatezza e l'utilità dell'approccio bayesiano attraverso esempi computazionali che risolvono problemi reali. I metodi statistici bayesiani sono sempre più comuni e stanno acquistando notevole importanza in molti campi dell'informatica, ma non è sempre facile fare i primi passi in questo mondo in cui la terminologia può essere un po' ostica e alcuni risultati controintuitivi.&lt;/p&gt;
&lt;p&gt;Presenterò una serie di piccoli programmi per mostrare i concetti basilari della statistica Bayesiana e la sua applicazione in alcune importanti aree dell'informatica. I partecipanti al corso potranno arricchire gli esempi direttamente sui propri portatili attraverso il codice d'esempio messo a disposizione online.&lt;/p&gt;
&lt;p&gt;È richiesta la conoscenza basilare della programmazione Python e almeno iniziale della statistica, in pratica è sufficiente che almeno una volta nella vita si sia studiato il Teorema di Bayes, anche se non lo si ricorda correntemente a memoria. I partecipanti al corso dovrebbero essere dotati di un proprio laptop con Python 2.x e matplotlib, ed essere in grado di scaricare un programma Python e lanciarlo.&lt;/p&gt;
</summary></entry><entry><title>Introduzione a Openstack: uno IaaS provider in Python</title><link href="https://pyvideo.org/pycon-italia-2014/introduzione-a-openstack-uno-iaas-provider-in-python.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Flavio Percoco</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/introduzione-a-openstack-uno-iaas-provider-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenStack è un provider IaaS scritto in Python. Fornisce un sistema operativo scalabile e servizi quali: Image, Storage, Object, Computer, ecc.&lt;/p&gt;
&lt;p&gt;Questo talk ha come obiettivo dare alla platea un overview su OpenStack, le sue caratteristiche, i suoi moduli, il coding style, il workflow e l'organizzazione.&lt;/p&gt;
&lt;p&gt;Come caso di successo di un prodotto con sviluppo guidato dalla comunità, è assolutamente un ottimo punto di riferimento per chiunque voglia intraprendere una strada simile, o entrare per collaborare in progetti simili.&lt;/p&gt;
</summary></entry><entry><title>Kivy, applicazioni mobile cross-platform in Python</title><link href="https://pyvideo.org/pycon-italia-2014/kivy-applicazioni-mobile-cross-platform-in-python.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Davide Corio</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/kivy-applicazioni-mobile-cross-platform-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kivy è sicuramente uno dei progetti liberi, basati su python, che sta catturando maggiore attenzione. Conosciamo questo strumento, scriviamo assieme una semplice applicazione e approfondiamo le tecniche per poter pubblicare le nostre applicazioni python su marketplace come Google Play e Apple Store.&lt;/p&gt;
</summary></entry><entry><title>Lightning talks</title><link href="https://pyvideo.org/pycon-italia-2014/lightning-talks.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyCon Italia 2014 Lightning talks&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Machine Learning as a Service: fare sentiment analysys in realtime con ZMQ e NLTK</title><link href="https://pyvideo.org/pycon-italia-2014/machine-learning-as-a-service-fare-sentiment-analysys-in-realtime-con-zmq-e-nltk.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Daniel Pyrathon</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/machine-learning-as-a-service-fare-sentiment-analysys-in-realtime-con-zmq-e-nltk.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sono un appassionato di Machine Learning e Natural Language Processing. Quest'anno, per la mia tesi di laurea, ho deciso di creare una applicazione di Twitter sentiment analysis in tempo reale. Per questo motivo, nel mio talk voglio raccontare la mia esperienza nel creare un sistema di machine learning scalabile e adottabile su qualsiasi piattaforma. Lo scopo di questo talk non è quello di entrare nei dettagli dal punto di vista scientifico (perchè ovviamente sono alle prime armi) ma invece far vedere come Python e librerie fondamentali NLTK, ZMQ e MrJob mi hanno aiutato a creare un sistema distribuito e facilmente replicabile. Questo talk avrebbe benefici sia per un utente alle prime armi che per un veterano di ML: L'utente alle prime armi si porta a casa un overview di cosa è Machine learning, e tutti gli strumenti necessari per replicare il progetto a casa. L'utente più esperto si porta a casa nuove idee che può mettere in pratica e molto probabilmente creare un prodotto migliore del mio! Inoltre, a fine talk pubblicherò anche un GitHub project con slide e prodotto finito.&lt;/p&gt;
</summary></entry><entry><title>Making Python a better scripting language</title><link href="https://pyvideo.org/pycon-italia-2014/making-python-a-better-scripting-language.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Nicola Musatti</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/making-python-a-better-scripting-language.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many Python programmers wince when they hear their favourite language called a &amp;quot;scripting language&amp;quot;, but Python is indeed very convenient for scripting. Small Python scripts have a tendency to grow into full-fledged programs just because it is so easy to add new features.&lt;/p&gt;
&lt;p&gt;However there is one task in which traditional scripting languages such as the UNIX/Linux shells or even Windows's &amp;quot;cmd&amp;quot; fare better than Python: invoking external commands. String manipulations required to build command lines for os.system() or Popen seem unnecessarily complicated compared to just writing out your command line in your script, possibly sprinkled with a shell variable here and there.&lt;/p&gt;
&lt;p&gt;In this presentation I will show how my own nxpy.command package can be used to wrap external programs so that they can be invoked as Python functions whose arguments are then translated to command line arguments and options.&lt;/p&gt;
&lt;p&gt;This is also possible for interactive command interpreters; I will describe how the current command's output and error messages may be inspected to check that it terminated correctly, as well as how timing constraints may be imposed.&lt;/p&gt;
&lt;p&gt;While this approach would be overkill for simple, static command lines, it becomes convenient in the presence of multiple sub-commands that share many of their options, like svn or git. In the absence of a proper API this is an effective way of creating one quickly and incrementally.&lt;/p&gt;
</summary></entry><entry><title>Managing Millions Mobile Messages per Day with Python</title><link href="https://pyvideo.org/pycon-italia-2014/managing-millions-mobile-messages-per-day-with-python.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Massimiliano Cuzzoli</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/managing-millions-mobile-messages-per-day-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Worldwide mobile communications require solid infrastructures in terms of both performance and reliability. This case study illustrates how it is possible to build a high performance gateway component capable of dispatching million mobile messages everyday among content providers and phone companies across the world. All of this using Python.&lt;/p&gt;
&lt;p&gt;Performance is just one of the requirements to satisfy in the &amp;quot;real world&amp;quot; scenario. In fact mobile networks are frequently subject to both protocol and carrier APIs changes, so it is crucial developing software components easy to adapt and extend. We introduced the concept of Protocol Adapter as development unit to isolate and simplify the integration with each phone company API we had interact with.&lt;/p&gt;
&lt;p&gt;The key points of the talk are:&lt;/p&gt;
&lt;p&gt;Multitasking implementation of I/O bound tasks through the asynchronous main loop approach.
Efficient network communications which take advantage of the asynchronous socket layer offered by the asyncore module.
Modular component design organized in one common core and several protocol adapters, where each protocol adapter extends the basic network capabilities of the core leveraging the object oriented model offered by the Python language.
To attend this talk it is required a basic knowledge of main network protocols like TCP, HTTP. Moreover the attendees should be familiar with the concept of socket.&lt;/p&gt;
</summary></entry><entry><title>Matplotlib recipes for your graphical "soups"</title><link href="https://pyvideo.org/pycon-italia-2014/matplotlib-recipes-for-your-graphical-soups.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Valerio Maggio</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/matplotlib-recipes-for-your-graphical-soups.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The term Data Visualization (a.k.a. data viz) refers to any visual representation of data that is algorithmically drawn[Illinsky &amp;amp; Steele, 2011]. In particular, data viz is easy to regenerate (with different data); it is often aesthetically barren; and it is relatively data-rich, usually representing large volume of data [Illinsky &amp;amp; Steele, 2011].&lt;/p&gt;
&lt;p&gt;Data viz approaches are further distinguished in two distinct categories, namely static and interactive visualizations.&lt;/p&gt;
&lt;p&gt;Static visualizations can offer only precomposed views of data, so multiple static views are often needed to present a variety of perspectives on the same information [Murray, 2013]. On the other hand, (dynamic) interactive visualization tools allow the users to customize the way they want to view the plotted data.&lt;/p&gt;
&lt;p&gt;Matplotlib is a very powerful data visualization library, being so far the de-facto standard data viz library for Python code.&lt;/p&gt;
&lt;p&gt;Matplotlib offers a wide variety of 2D and 3D plots, graphics and maps (matplotlib.basemap) typically useful in case of (but not limited to) data analysis in scientific contexts. All the generated plots may be further customized (e.g., annotating charts with LateX formulas, changing fonts and colors ) in order to make them perfectly suited for the different requirements we may have.&lt;/p&gt;
&lt;p&gt;Last but not least, recent versions of the library started supporting creation of animated graphics and charts (i.e., matplotlib.animations)&lt;/p&gt;
&lt;p&gt;Most of the charts provided out-of-the-box by the library belongs to the static data viz category. However, the new MLPD3project aims at integrating Matplotlib with the D3js, the popular Javascript library to generate data-driven web pages.&lt;/p&gt;
&lt;p&gt;This talk is going to present the main features and capabilities provided by the matplotlib library in a very recipe-oriented and practical fashion. The main goal of the talk is to emphasize when and how the different Matplotlib charts could be effectively used, depending on the considered problem to tackle.&lt;/p&gt;
&lt;p&gt;To this end, several code recipes will be discussed during the presentation. Recipes using mpld3 and matplotlib.animations for the interactive data viz will be presented as well, and will conclude the talk&lt;/p&gt;
&lt;p&gt;This talk assumes a good knowledge of the Python language. Basic knowledge of numpy and scipy is also a plus.&lt;/p&gt;
</summary></entry><entry><title>PyLisp: Compilare il lisp in Python bytecode</title><link href="https://pyvideo.org/pycon-italia-2014/pylisp-compilare-il-lisp-in-python-bytecode.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Andrea Griffini</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/pylisp-compilare-il-lisp-in-python-bytecode.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In questo talk si apriranno alcune delle porte sul mondo dell'implementazione stessa di Python, in particolare relativamente alla VM e al suo bytecode. La scusa ufficiale e' quella di presentare PyLisp, un mini-compilatore di un dialetto Lisp che scavalcando la parte di parsing e il compilatore di Python permettera' di utilizzare il runtime della VM generando direttamente il bytecode.&lt;/p&gt;
</summary></entry><entry><title>Ricette di Data Viz con Matplotlib</title><link href="https://pyvideo.org/pycon-italia-2014/ricette-di-data-viz-con-matplotlib.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Valerio Maggio</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/ricette-di-data-viz-con-matplotlib.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il termine Data Visualizaiton (lett. visualizzazione dei dati), altrimenti noto come data viz, si riferisce a qualsiasi rappresentazione visuale di dati, generata in modo automatico (da un algoritmo) [Illinsky &amp;amp; Steele, 2011]. In particolare, data viz ha il pregio di essere facilmente replicabile (anche con dati differenti), e pone maggiore enfasi alla visualizzazione di (molti) dati, piuttosto che curare preminentemente l'aspetto estetico.&lt;/p&gt;
&lt;p&gt;Le tecniche di data viz sono ulteriormente distinte in due categorie, vale a dire visualizzazioni statiche e interattive. Le prime si basano su rappresentazioni di dati &amp;quot;pre-definite&amp;quot;, spesso replicate in differenti &amp;quot;formati&amp;quot; e angolazioni per fornire diversi punti di vista (e di analisi) delle medesime informazioni [Murray, 2013].&lt;/p&gt;
&lt;p&gt;Al contrario, una visualizzazione interattiva permette all'utente di personalizzazione il modo in cui si intende mostrare e analizzare i dati.&lt;/p&gt;
&lt;p&gt;Matplotlib è una libreria Python molto nota e molto potente, che rappresenta oramai lo strumento di riferimento per data viz nella comunità.&lt;/p&gt;
&lt;p&gt;Matplolib offre un'ampia varietà di strumenti per il plotting 2D e 3D, grafici, mappe (matplotlib.basemap) che trovano ampio utilizzo (ma non sono limitate a) l'analisi dei dati scientifici. Tutti i grafici generati con matplotlib possono essere ulteriormente personalizzati (ad esempio, &amp;quot;possono essere annotati con formule LateX&amp;quot;, &amp;quot;è possibile modificare font e colori&amp;quot;, &amp;quot;aggiungere note&amp;quot;, ecc.) in modo che possano essere perfettamente adatti a specifici utilizzi.&lt;/p&gt;
&lt;p&gt;Ultimo, ma non ultimo per importanza, le ultime versioni di matplotlib hanno aggiuto il supporto alle animazioni e grafici animati (matplotlib.animations).&lt;/p&gt;
&lt;p&gt;La maggior parte dei grafici disponibili in Matplotlib appartengono alla categoria degli strumenti di data viz statici. Tuttavia, il nuovo project MLPD3 mira ad integrare Matplotlib con D3js, popolare libreria Javascript per la generazione di pagine web data-driven.&lt;/p&gt;
&lt;p&gt;Questo talk ha l'intento di mostrare una serie di ricette per data viz, facendo uso di Matplotlib. In particolare, i contenuti (e le diverse ricette) saranno presentate con taglio estremamente pratico e orientato al problema, al fine di comprendere come e quando utilizzare i differenti grafici di Matplotlib.&lt;/p&gt;
&lt;p&gt;A tale scopo, differenti esempi di codice saranno descritti e discussi durante la presentazione. Esempi e ricette con mpld3 e matplotlib.animations per data viz interattivo costituiranno l'ultima parte della presentazione.&lt;/p&gt;
&lt;p&gt;Questo talk assume una buona conoscenza del linguaggio Python. Conoscenza di numpy e scipy è preferibile, ma non propedeutica.&lt;/p&gt;
</summary></entry><entry><title>Ta taaaa... chi trova fabric non lo lascia più</title><link href="https://pyvideo.org/pycon-italia-2014/ta-taaaa-chi-trova-fabric-non-lo-lascia-piu.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Simone Federici</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/ta-taaaa-chi-trova-fabric-non-lo-lascia-piu.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Poche cose cambiano radicalmente il corso della vita, una corsa a perdifiato nei boschi, il bagno alla mezzanotte di capodanno. No, ci riprovo... a volte trovi lo strumento giusto. Hai mai fatto il lavoro del sistemista? No, non farlo! Ti piace DevOps, è una parola carina? Performance Testing? Vuoi fare il deploy su 200 macchine in parallelo? Sviluppi su linux, su Mac? Ma devi rilasciare software per windows? Ti serve Fabric. Se non lo sai sallo, oppure segui il talk. Parlerò chiaramente delle mie esperienze personali... volevo dire lavorative. E' scritto in python, ma forse lo sapevi già.&lt;/p&gt;
</summary></entry><entry><title>Un grande linguaggio per un grande strumento</title><link href="https://pyvideo.org/pycon-italia-2014/un-grande-linguaggio-per-un-grande-strumento.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Marco Buttu</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/un-grande-linguaggio-per-un-grande-strumento.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il Sardinia Radio Telescope (SRT) è tra i più grandi radiotelescopi al mondo, ed è il più moderno radiotelescopio europeo sia per quanto riguarda l'equipaggiamento elettronico sia per la componentistica meccanica. E' situato in Sardegna, a circa 35 km a nord di Cagliari, e ha una imponente struttura meccanica, caratterizzata da uno specchio primario di 64 metri di diametro, un'altezza di 70 metri e un peso di 3000 tonnellate. Il SRT non è solamente un grande impianto, ma uno strumento scientifico molto complesso con un sistema software altrettanto complesso, che mette assieme diverse tecnologie e linguaggi di programmazione. Python, grazie alla sua facilità di utilizzo e la sua trasversalità, viene utilizzato in vari ambiti all'interno di questo progetto: sistema di controllo/monitoraggio, testing, interfacce grafiche, simulazioni, applicazioni web e ricerca scientifica. Lo scopo di questo talk è illustrare questi vari casi d'uso e possibili altri futuri, in fase di definizione, come la gestione dell'allocazione dei tempi di utilizzo del radiotelescopio e il sistema di archiviazione (centinaia di TB all'anno) e di accesso ai dati.&lt;/p&gt;
</summary></entry><entry><title>V-ERAS: Un ambiente virtuale per l'esplorazione planetaria</title><link href="https://pyvideo.org/pycon-italia-2014/v-eras-un-ambiente-virtuale-per-lesplorazione-planetaria.html" rel="alternate"></link><published>2014-05-25T00:00:00+00:00</published><updated>2014-05-25T00:00:00+00:00</updated><author><name>Ezio Melotti</name></author><id>tag:pyvideo.org,2014-05-25:pycon-italia-2014/v-eras-un-ambiente-virtuale-per-lesplorazione-planetaria.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The European MaRs Analogue Station for Advanced Technologies Integration (ERAS -- www.erasproject.org) is a program spearheaded by the Italian Mars Society (IMS) which main goal is to provide an effective test bed for field operation studies in preparation for manned missions to Mars.&lt;/p&gt;
&lt;p&gt;Preliminarily to ERAS construction, IMS has started the development of an immersive Virtual Reality (VR) simulation of the Station (V-ERAS). The major advantage of such virtualization isthat it will be possible to undertake training sessions with a crew that can interact with its future environment before the actual station is built. This way a more effective design of the station and associated missions and a strong reduction of costs could be obtained. The main objective of this activity will be the achievement of adequate fidelity simulations and validation of the data obtained during the training sessions so that they can be used for the design of the station itself. Many ergonomics and human factors will be considered in the virtual model in order to be verified and validated before the actual ERAS habitat construction.&lt;/p&gt;
&lt;p&gt;The development effort is currently divided in three main activities: • ERAS Station simulation using an appropriate game engine supporting a virtual reality headset • Upper body and hands gestures tracking • Integration of an omnidirectional treadmill&lt;/p&gt;
&lt;p&gt;Relevant part of the software development associated to V-ERAS will be undertaken by international students within the Google Summer of Code 2014 (GSoC) program were IMS participate as mentor organization.&lt;/p&gt;
&lt;p&gt;The final goal will be the construction of a classroom in which four (or six, depending on the targeted crew size) VR stations will be installed and the definition of appropriate crew rotations in which different training sessions are performed. The availability of a single VR station prototype is targeted for September 2014 and multi-user integration, able to support four stations, should be ready for October/November 2014.&lt;/p&gt;
&lt;p&gt;Python is the language of choice for the project, and the presentation will explain how is it used.&lt;/p&gt;
</summary></entry><entry><title>A scuola con Leap e Python</title><link href="https://pyvideo.org/pycon-italia-2014/a-scuola-con-leap-e-python.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Maurizio Boscaini</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/a-scuola-con-leap-e-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La presentazione, che non richiede particolari conoscenze di informatica, si basa su un'esperienza didattica al secondo anno di sperimentazione nelle classi intermedie del Liceo Scientifico opzione scienze applicate. L'obiettivo è quello di introdurre alle scienze dell'informazione, partendo dalla constatazione che l'insegnamento e l'apprendimento della programmazione risulta difficile, particolarmente per una generazione di cosiddetti &amp;quot;nativi digitali&amp;quot;. Il percorso parte dall'algoritmo rappresentato attraverso flowchart (purchè il numero dei blocchi non superi la decina) e pseudocodice per arrivare presto al codice Python. La novità di questa proposta consiste nell'abbinare didatticamente Leap, uno pseudocodice particolare, a Python. Leap è disponibile online e può essere utilizzato liberamente per scrivere pseudocodice, che può anche essere eseguito. Inoltre, è possibile eseguire uno pseudoprogramma passo passo e visualizzare in una tabella di traccia la sequenza delle istruzioni ed il valore delle variabili utilizzate. La presentazione vuole mettere in evidenza con esempi concreti di logica e matematica come passare dal problema all'algoritmo espresso in Leap e al programma Python. Si vuole mostrare ancora una volta che Python ben si presta molto all'insegnamento e che Leap, da parte sua, può essere un altro utile strumento nella cassetta degli attrezzi del docente e dello studente.&lt;/p&gt;
</summary></entry><entry><title>At School with Leap and Python</title><link href="https://pyvideo.org/pycon-italia-2014/at-school-with-leap-and-python.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Maurizio Boscaini</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/at-school-with-leap-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This presentation doesn't require any special knowledge in computer science and is based on a two-years-long teaching experience in intermediate classes of High School. The aim of the talk is to introduce to computer science, starting from the fact that teaching and learning of programming is difficult, particularly for a generation of so-called &amp;quot;digital natives&amp;quot;. The route starts from the algorithm represented by flowchart (as long as the number of blocks does not exceed ten) and pseudocode to arrive early to Python code. The innovation of this proposal is to combine educationally Leap, a special type of pseudocode, and Python. Leap is available online and can be used to write pseudocode, which can also be executed. In addition, you can run a pseudo-program step by step and display in a trace table the sequence of instructions and the value of the variables used. This talk will highlight concrete examples of logic and mathematics how to move from the problem to the algorithm expressed in Leap and finally to the Python program . The speaker wants to show once again that Python is very well suited for teaching and Leap, for its part, can be an other useful tool in the teacher's and student's toolbox.&lt;/p&gt;
</summary></entry><entry><title>Build di applicazioni desktop in Python con Jenkins</title><link href="https://pyvideo.org/pycon-italia-2014/build-di-applicazioni-desktop-in-python-con-jenkins.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Gioele Meoni</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/build-di-applicazioni-desktop-in-python-con-jenkins.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jenkins è uno strumento di Continuous Integration molto diffuso, un'arma molto potente per affrontare problematiche come il build ed il packaging di applicazioni desktop multipiattaforma.&lt;/p&gt;
&lt;p&gt;Durante il talk vedremo come Jenkins mi ha aiutato a gestire diversi step del ciclo di vita di un'applicazione scritta in Python utilizzando il framework Qt, quali sono stati i problemi incontrati e come Jenkins può aiutare a risolverli, quali sono le alternative e perché alla fine ho scelto proprio Jenkins.&lt;/p&gt;
</summary></entry><entry><title>Caso di successo di utilizzo di Python e Gamera per la realizzazione di un sistema OMR</title><link href="https://pyvideo.org/pycon-italia-2014/caso-di-successo-di-utilizzo-di-python-e-gamera-per-la-realizzazione-di-un-sistema-omr.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>domenico gioia</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/caso-di-successo-di-utilizzo-di-python-e-gamera-per-la-realizzazione-di-un-sistema-omr.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Elaborazione Automatica di Documenti cartacei Scansionati.&lt;/p&gt;
&lt;p&gt;Impiego di Python e delle librerie Gamera per la realizzazione di un sistema OMR che estrae in automatico informazioni da documenti cartacei compilati a mano e poi scansionati. Il sistema è attualmente utilizzato da un'azienda multinazionale che utilizza molto la carta e penna per raccogliere informazioni.&lt;/p&gt;
&lt;p&gt;Motivazioni che hanno portato ad adottare una soluzione OMR.&lt;/p&gt;
&lt;p&gt;Le motivazioni che hanno spinto ad adottare Python Gamera&lt;/p&gt;
&lt;p&gt;Approfondimenti tecnici relativi agli algoritmi utilizzati per l'elaborazione delle immagini (si parte da semplici algoritmi statistici fino ad alcuni un po' più complessi di pattern recognition).&lt;/p&gt;
&lt;p&gt;Osservazioni sulle performance&lt;/p&gt;
&lt;p&gt;Vediamo il sistema in funzione&lt;/p&gt;
&lt;p&gt;COMPETENZE RICHIESTE PER PARTECIPARE: Questa proposta di talk può essere adattata ad esporre verso utenti con pochissime competenze ma che vogliono un introduzione sommaria con tante entusiasmanti osservazioni che arricchiscono il bagaglio di esperienze; oppure può essere adattata per un pubblico esperto e competente a livello matematico, statistico ecc., che sono curiosi di osservare quali algoritmi e quali tecniche sono state adoperate per risolvere i problemi e con quali performance in termini di affidabilità.&lt;/p&gt;
</summary></entry><entry><title>Come creare API REST per tutti i gusti con Django OAuth Toolkit</title><link href="https://pyvideo.org/pycon-italia-2014/come-creare-api-rest-per-tutti-i-gusti-con-django-oauth-toolkit.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Federico Frenguelli</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/come-creare-api-rest-per-tutti-i-gusti-con-django-oauth-toolkit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il mondo si sta sponstando sempre più verso il mobile e l'esigenza di un backend che parli con la vostra applicazione si fa sempre più importante. E se vi dicessi che scrivere API REST inPpython è così facile che non dovete essere backend developer esperti? Prendete una cucchiaiata di Django, mescolate bene con Django REST Framework e alla fine una bella spolverata di Django OAuth Toolkit per cucinare l'API perfetta in pochi minuti.&lt;/p&gt;
</summary></entry><entry><title>Come fare continuos integration in ambienti IT "sfidanti" usando ansible</title><link href="https://pyvideo.org/pycon-italia-2014/come-fare-continuos-integration-in-ambienti-it-sfidanti-usando-ansible.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Cesare Placanica</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/come-fare-continuos-integration-in-ambienti-it-sfidanti-usando-ansible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Supponete di stare in un piccolo gruppo di sviluppo di una grossa organizzazione. Supponete di dipendere da un gruppo IT sparso nel mondo che vi fornisca dei server di build &amp;quot;ufficiali&amp;quot; in cui gira Jenkins, ma con accesso limitato sia ai server che a Jenkins. Supponete che vi vengano fornite solo delle virtual machine per sviluppare e alcuni directory NFS su cui mettere i tool di sviluppo. Come si puo' fare Continuos Integration in un ambiente come questo? Ansible puo' essere la risposta: con una curva di apprendimento veramente bassa e dei requisiti di amministrazione davvero minimi puo' integrarsi in un ambiente simile abbastanza facilmente. Posso farvi vedere come.&lt;/p&gt;
</summary></entry><entry><title>Creare soundscape con il python</title><link href="https://pyvideo.org/pycon-italia-2014/creare-soundscape-con-il-python.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Riccardo Lemmi</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/creare-soundscape-con-il-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Per un progetto musicale volevo creare un soundscape (paesaggio sonoro) come base su cui suonare gli strumenti tradizionali. Dopo aver provato a creare il suono con Audacity e pur essendo il risultato buono, mi sono reso conto che era &amp;quot;statico&amp;quot;, non dava l'idea di un ambiente vario e inaspettato come può essere quello di una situazione reale. Ho deciso di provare a generarne uno random con un programma Python. Fra le poche librerie disponibili Pyo fornisce una vasta gamma di funzionalità per fare &amp;quot;signal processing&amp;quot;, generazione di pattern sonori e interazione con device MIDI. In questo talk vedremo alcune delle funzionalità di Pyo e il percorso seguito per arrivare a creare il soundscape che mi serviva.&lt;/p&gt;
</summary></entry><entry><title>Da sito web a dati JSON in 30 minuti con Scrapy</title><link href="https://pyvideo.org/pycon-italia-2014/da-sito-web-a-dati-json-in-30-minuti-con-scrapy.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Emanuele Palazzetti</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/da-sito-web-a-dati-json-in-30-minuti-con-scrapy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scrapy è un framework open source che consente di estrarre dati strutturati da un sito web in maniera semplice e veloce. Sebbene nato per il web scraping, Scrapy può essere utilizzato anche per scopi diversi, dal crawling al monitoring fino al testing di applicazioni web.&lt;/p&gt;
&lt;p&gt;Il talk si aprirà con una panoramica del framework illustrandone le peculiarità e le potenzialità, in seguito verrà mostrato un caso d'uso reale a dimostrazione della rapidità con cui grazie a Scrapy è possibile implementare un sistema di crawling, analisi e storaging di dati provenienti da pagine web.&lt;/p&gt;
</summary></entry><entry><title>Divertiamoci con i Websocket (ma senza nodejs...)</title><link href="https://pyvideo.org/pycon-italia-2014/divertiamoci-con-i-websocket-ma-senza-nodejs.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/divertiamoci-con-i-websocket-ma-senza-nodejs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I Websocket sono probabilmente la feature piu' interessante del mondo HTML5. Ma perche' tutti si ostinano a presentarli usando javascript server side (nodejs)? Si possono utilizzare i websocket con qualsiasi linguaggio ed ovviamente anche python. Il talk illustrera' i vari approcci (e prodotti) disponibili e le problematiche da affrontare in questo modello di sviluppo.&lt;/p&gt;
</summary></entry><entry><title>Django meets asyncio</title><link href="https://pyvideo.org/pycon-italia-2014/django-meets-asyncio.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Marco Paolini</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/django-meets-asyncio.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Having (ab)used gevent monkey-patching combined with greenlets, we can now finally leverage async techniques using only the standard library.&lt;/p&gt;
&lt;p&gt;After a quick intro, we presend a micro http-wsgi server written using asyncio, then we analyse performance and scalability.&lt;/p&gt;
&lt;p&gt;We'll explore possible integration of the new asyncio package with django, starting from the most relevant example (pulsar). We'll also think of possible strategies for making it land in the core django.&lt;/p&gt;
&lt;p&gt;A good knowledge of bot python and backend web programming (HTTP, wsgi) is needed.&lt;/p&gt;
</summary></entry><entry><title>Eve - REST API for Humans™</title><link href="https://pyvideo.org/pycon-italia-2014/eve-rest-api-for-humanstm.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Nicola Iarocci</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/eve-rest-api-for-humanstm.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You have data stored somewhere and you want to expose it to your users through a RESTful Web API. Eve is the BSD-licensed, Flask-powered tool that allows you to quickly and easily go online.&lt;/p&gt;
&lt;p&gt;Eve provides a robust, feature rich, REST-centered API implementation. MongoDB support comes out of the box, and community-driven efforts to deliver ElasticSearch and SQLAlchemy data layers are ongoing. Eve approach is such that you only need to configure your API settings and behaviour, plug in your datasource, and you're good to go.&lt;/p&gt;
&lt;p&gt;Features such as Pagination, Sorting, Conditional Requests, Concurrency Control, Validation, HATEOAS, JSON and XML rendering, Projections, Customisable Endpoints are included. Advanced features such as custom Authentication and Authorization, Custom Validation, Embedded Resource Serialisation are also available.&lt;/p&gt;
&lt;p&gt;In my talk I will introduce the project and its community, recount why and how it's being developed, and show the current roadmap.&lt;/p&gt;
</summary></entry><entry><title>Eve - REST API per Umani™</title><link href="https://pyvideo.org/pycon-italia-2014/eve-rest-api-per-umanitm.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Nicola Iarocci</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/eve-rest-api-per-umanitm.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hai dei dati salvati da qualche parte e desideri esporli ai tuoi utenti attraverso Web Service REST. Eve è una REST API open source basata su Flask che ti consente farlo rapidamente.&lt;/p&gt;
&lt;p&gt;Eve mette i principi REST al centro dell'attenzione, offrendo un ricco set di funzionalità integrate . L'approccio che Eve vuole di offrire è quello del plug &amp;amp; play: basta configurare la tua API, collegare la sorgente dati, e sei online. Paginazione, Ordinamenti, Richieste Condizionate, Gestione della Concorrenza, Validazione, HATEOAS, JSON e XML , Proiezioni, Endpoint Personalizzati sono tutte feature già incluse, così come funzionalità più avanzate quali Autenticazione ed Autorizzazione, Validazione Custom, Risorse Embedded.&lt;/p&gt;
&lt;p&gt;MongoDB ed ElasticSearch sono già supportati, e la community sta sviluppando ai layer SQLAlchemy, Titan ed altro.&lt;/p&gt;
&lt;p&gt;Nel corso del mio talk presenterò il progetto, la sua community e vi racconterò perché e come viene sviluppato. Infine vi anticiperò i nostri piani per il futuro.&lt;/p&gt;
</summary></entry><entry><title>Machine Learning as a Service: making sentiment predictions in realtime with ZMQ and NLTK</title><link href="https://pyvideo.org/pycon-italia-2014/machine-learning-as-a-service-making-sentiment-predictions-in-realtime-with-zmq-and-nltk.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Daniel Pyrathon</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/machine-learning-as-a-service-making-sentiment-predictions-in-realtime-with-zmq-and-nltk.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I am a Machine Learning (ML) and Natural Language Processing enthusiast. For my university dissertation I created a realtime sentiment analysis classifier for Twitter. My talk will be about the experience and the lessons learned. I will explain how to build a scalable machine learning software as a service, consumable with a REST API. The purpose of this talk is not to dig into the mathematics behind machine learning (as I do not have this experience), but it's more about showing how easy it can be to build a ML SaaS by using some of the amazing libraries such as NLTK, ZMQ and MrJob that have helped me make throughout the development. This talk will give several benefits: users with no ML background will have a great introduction to the subject, they will also be able to replicate my project at home. More experienced users will gain new ideas to put in practice and (most) probably build a better system than mine! Finally, I will attach a GitHub project with the slides and a finished product.&lt;/p&gt;
&lt;p&gt;Contents:&lt;/p&gt;
&lt;p&gt;Introduction&lt;/p&gt;
&lt;p&gt;Overview
Brief demo
Introduction to Machine Learning and Natural Language processing
Naive Bayes
Offline training&lt;/p&gt;
&lt;p&gt;Overview of offline training
Pre-processing: NLTK for feature extraction, stemming, stopword removal, chi-square tests.
Training script: using MrJob for MapReduce
Testing script: accuracy, precision and recall
Classification as a service&lt;/p&gt;
&lt;p&gt;Intuition
ZeroMQ and PUSH-PULL
NodeJS for a RESTful back-end
End&lt;/p&gt;
&lt;p&gt;Things that can be improved
Q and A&lt;/p&gt;
</summary></entry><entry><title>Machine Learning Parallelo (e Distribuito) con Scikit-Learn</title><link href="https://pyvideo.org/pycon-italia-2014/machine-learning-parallelo-e-distribuito-con-scikit-learn.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Valerio Maggio</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/machine-learning-parallelo-e-distribuito-con-scikit-learn.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le tecniche di Machine Learning (ML) si concentrano sulla definizione di algoritmi per effettuare previsioni a partire dall'analisi dei dati. Le tecniche di ML si distinguono tipicamente in due categorie: tecniche di Apprendimento con Supervisione (i.e., Supervised Learning), e tecniche di Apprendimento senza Supervisione (i.e., Unsupervised Learning).&lt;/p&gt;
&lt;p&gt;Indistintamente dalla categoria di appartenenza, le tecniche di ML richiedono l'elaborazione di grandi quantità di dati per poter effettuare delle previsioni che siano veritiere e ragionevolmente affidabili. Pertanto, risulta necessario riportare su larga scala tali elaborazioni, affinché queste siano efficacemente utilizzate e utilizzabili.&lt;/p&gt;
&lt;p&gt;Fino a qualche tempo fa, le elaborazioni parallele e distribuite trovavano applicazione in contesti altamente specializzati e di alto profilo.&lt;/p&gt;
&lt;p&gt;Tuttavia, la rapida evoluzione delle architetture di calcolo, e l'avvento delle tecnologie di cloud computing, hanno favorito la proliferazione di svariate piattaforme e framework di programmazione parallela facilmente accessibili [Bekkerman et. al.].&lt;/p&gt;
&lt;p&gt;Tali fattori hanno notevolmente contribuito al sempre crescente interesse per l'applicazione di tecniche di ML su larga scala. Il tutto motivato anche dal fatto che molteplici dataset (di grandi dimensioni), sono attualmente memorizzati in maniera distribuita su differenti piattaforme di storage (a.k.a. cloud storage).&lt;/p&gt;
&lt;p&gt;Scikit-learn è una libreria Python attivamente sviluppata e robusta, costruita sulle solide fondamenta di numpy e scipy.&lt;/p&gt;
&lt;p&gt;Scikit-learn (sklearn) rappresenta una soluzione software &amp;quot;tutto incluso&amp;quot;, che mette a disposizione l'implementazione di molte delle più note tecniche di ML per l'analisi di dati.&lt;/p&gt;
&lt;p&gt;Grazie ad una API semplice ad intuitiva, tale libreria può essere agevolmente integrata in altre soluzioni Python-powered per computazioni parallele e distribuite.&lt;/p&gt;
&lt;p&gt;In questo talk saranno presentate differenti soluzioni per l'esecuzione di algoritmi di ML su larga scala, utilizzando Scikit-learn. In particolare, la scalabilità degli algoritmi sarà presentata considerando due differenti livelli di &amp;quot;complessità&amp;quot;: (1) &amp;quot;Single Machine with Multiple Cores&amp;quot;; e (2) &amp;quot;Multiple Machines with Multiple Cores&amp;quot;.&lt;/p&gt;
&lt;p&gt;Durante il talk, saranno discussi diversi esempi di codice, unitamente ad una breve descrizione delle tecniche di ML considerate. Tali esempi avranno lo scopo di mostrare l'utilizzo congiunto di sklearn con librerie quali multiprocessing, e mpi4py (per il primo setting); iPython.parallel e soluzioni basate su Map-Reduce (e.g., disco (per il secondo setting).&lt;/p&gt;
&lt;p&gt;In aggiunta, qualche accenno al GPU-computing con pycuda sarà inoltre riportato, a conclusione della presentazione.&lt;/p&gt;
&lt;p&gt;Questo talk è pensato per un livello avanzato. Sono richieste competenze di matematica di base e una buona conoscenza del linguaggio Python. Apprezzabile una buona conoscenza di numpy e scipy.&lt;/p&gt;
</summary></entry><entry><title>Metaprogrammazione di una app Django</title><link href="https://pyvideo.org/pycon-italia-2014/metaprogrammazione-di-una-app-django.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Marco Paolini</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/metaprogrammazione-di-una-app-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sei stanco di costriure gerarchie di modellli astratti e mixin per incapsulare codice coumne a più app django? Non ne puoi più di copia/incolla in urls.py e views.py? Vuoi il rispetto dei tuoi colleghi come python guru?&lt;/p&gt;
&lt;p&gt;E' il momento di osare con il meta-progamming!&lt;/p&gt;
&lt;p&gt;Creiamo programmaticamente i modelli django, gli urlpatterns e anche parti delle API python che la nostra app django espone. Capiamo insieme come fare il debugging del nostro meta-codice ed estendere le implementazioni standard con programmazione funzionale e OO.&lt;/p&gt;
&lt;p&gt;Per non perdersi nei meandri dell'argomento è preferibile aver affrontato almeno un vero progetto django+restframework.&lt;/p&gt;
</summary></entry><entry><title>Mezzanine, il CMS emergente per "tutte" le esigenze!</title><link href="https://pyvideo.org/pycon-italia-2014/mezzanine-il-cms-emergente-per-tutte-le-esigenze.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Simone Dalla</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/mezzanine-il-cms-emergente-per-tutte-le-esigenze.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Andiamo a conoscere le caratteristiche e funzionalità di questo giovane ma già molto maturo CMS costruito con Django, opensource, altamente estensibile e &amp;quot;customizzabile&amp;quot;. Vedremo come può rispondere alle più diverse esigenze...di un blogger, di una pubblica amministrazione, di una software house. Hanno detto di lui... &amp;quot;Mezzanine looks like it may be Django's killer app&amp;quot;, io sono d'accordo, lo sarete anche voi dopo averlo conosciuto?&lt;/p&gt;
</summary></entry><entry><title>Perche' deployare applicazioni web e' cosi' difficile ???</title><link href="https://pyvideo.org/pycon-italia-2014/perche-deployare-applicazioni-web-e-cosi-difficile.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/perche-deployare-applicazioni-web-e-cosi-difficile.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;E' probabilmente il rant piu' diffuso tra chi e' gia' stato convertito all'uso del pitone. E' un rant inesistente nel mondo php (piu' o meno) e da chi ancora si ostina ad usare i CGI o il vecchio asp. E' un rant inesistente tra gli sviluppatori Java, ma esplode di nuovo in chiunque di loro provi a capire come funziona il deployment di applicazioni web in ambiente Java. Mi affaccio nel mondo Ruby e osservo la stessa cosa. Che sta succedendo ? Perche' la parte meno divertente (e per molti la piu' irrilevante) dello sviluppare una applicazione web sta facendo impazzire tutti ? Cosa e' cambiato ? E' perche' alcuni individui ne sono meno affetti di altri ? Provero' a fornire le mie teorie dopo 13 anni di lotte in prima linea.&lt;/p&gt;
</summary></entry><entry><title>Post-mortem Debugging e Sviluppo Web</title><link href="https://pyvideo.org/pycon-italia-2014/post-mortem-debugging-e-sviluppo-web.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/post-mortem-debugging-e-sviluppo-web.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gli sviluppatori spesso tendono a dimenticare che gli utenti possono essere molto più creativi di loro nell'uso dei loro software. Gli utenti possono essere i migliori tester del nostro software e possiamo sfruttare le loro capacità di portare alla luce problemi a nostro favore se correttamente supportate da strumenti di logging e analisi forense appropriati.&lt;/p&gt;
&lt;p&gt;Gli strumenti di Post-Mortem debugging sono una delle funzionalità più importanti che il nostro ambiente di sviluppo dovrebbe avere, ma spesso sono sottovalutati o sconosciuti.&lt;/p&gt;
&lt;p&gt;Il talk copre alcune delle pratiche più semplici e gli strumenti necessari a metterle in atto per effettuare efficacemente debugging delle problematiche che nascono in una applicazione web sull'ambiente di produzione.&lt;/p&gt;
&lt;p&gt;Alcune delle tematiche coperte riguardano:&lt;/p&gt;
&lt;p&gt;Interactive Debuggers
Post-Mortem Debugging Best Practices
Crash logging and reporting
Performance Monitoring
Parassitaggio dei processi in esecuzione&lt;/p&gt;
</summary></entry><entry><title>Procrastination makes you better: Life of a remotee</title><link href="https://pyvideo.org/pycon-italia-2014/procrastination-makes-you-better-life-of-a-remotee.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Flavio Percoco</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/procrastination-makes-you-better-life-of-a-remotee.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nowadays, more and more companies are moving towards &amp;quot;being remote&amp;quot;. Likewise, more and more people want to work remotely. I get asked quite often what it is like to work remotely, how I manage to respect deadlines and actually do some work. Many people think that working remotely is hard and that just a small set of folks can actually do it. This is not true!&lt;/p&gt;
&lt;p&gt;Working remotely is not just about getting things done. It's more about getting yourself to the point where you're able to get things done. Going remote forces people to deal with things like having a good place to work from, being comfortable, managing their own time, defining priorities themselves and having time for themselves as well. Unfortunately, it doesn't matter how hard people try not to procrastinate, one way or another, procrastination manages to fill a huge part of the time and you know what, THAT'S FINE!&lt;/p&gt;
&lt;p&gt;In this talk, I'll share my experience as a remote developer, the things that have changed in my life since I stopped commuting every day and decided to be a prisoner of my own house. I'll go through the things I struggled with, the things I learned to deal with and how I embrace procrastination. This talk is a great opportunity for everyone to learn and share from real life experiences about this work arrangement.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;From commuting to computing
Getting out of bed
First fears and troubles as a remotee
Baby steps towards enjoying a remote position
Missing the office and dealing with it&lt;/p&gt;
</summary></entry><entry><title>PyPy status (a.k.a.: no, PyPy è ancora vivo)</title><link href="https://pyvideo.org/pycon-italia-2014/pypy-status-aka-no-pypy-e-ancora-vivo.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Antonio Cuni</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/pypy-status-aka-no-pypy-e-ancora-vivo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In questo talk presenterò le ultime novità di PyPy, con un particolare focus su quello che è accaduto negli ultimi anni. In particolare parlerò della velocità di PyPy e di quali sono le linee di sviluppo attuali, come ad esempio:&lt;/p&gt;
&lt;p&gt;lo status del JIT compiler e delle prestazioni di PyPy in generale;&lt;/p&gt;
&lt;p&gt;i miglioramenti del Garbage Collector (GC);&lt;/p&gt;
&lt;p&gt;lo status dei sottoprogetti per implementare NumPy e la compatibilità con Python 3;&lt;/p&gt;
&lt;p&gt;CFFI, che vuole essere una libreria generica per interfacciarsi con il C sia per PyPy che per CPython&lt;/p&gt;
&lt;p&gt;uno sguardo veloce al sottoprogetto STM (Software Transactional Memory), che ha mira a risolvere l'annoso problema del GIL&lt;/p&gt;
</summary></entry><entry><title>Python for Zombies: 12.000 enrolled in the first Brazilian MOOC to teach Python</title><link href="https://pyvideo.org/pycon-italia-2014/python-for-zombies-12000-enrolled-in-the-first-brazilian-mooc-to-teach-python.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Fernando Masanori</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/python-for-zombies-12000-enrolled-in-the-first-brazilian-mooc-to-teach-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Experiences of how we spread the Python community in Brazil with a non english MOOC to teach programming. Python for Zombies is the first Massive Open Online Course to teach programming with Python in Portuguese. Our first edition had 12.000 &amp;quot;zombies&amp;quot; enrolled. This course is very different from traditional MOOCs (Edx, Coursera, etc.). First is an initiative of the brazilian Python community. Besides the difference of language, it is very &amp;quot;casual&amp;quot;, as I have little time, I recorded most of the videos on my trips between meetings, conferences or at mealtimes. This MOOC is &amp;quot;brazilian&amp;quot;, in a non traditional academic way. The size of the videos is far lower than the average traditional courses too. I'm recording the Spanish version. I will show you the most funny codes that I used in MOOC classes to teach programming: hacking basic modules and classes to obtain the &amp;quot;Answer to the Ultimate Question of Life, the Universe, and Everything&amp;quot;. All material is Creative Commons Share Alike. The MOOC is based in my experience to teach programming in past six years at FATEC, a public university in Brazil, with decreasing rates of failure in the introduction to programming discipline. We have 100% class in labs, Coding Dojos to training and tests in exercises. Slides for this same title in a talk I gave in Python Education Summit at PyCon Montreal: bit.ly/python-for-zombies&lt;/p&gt;
</summary></entry><entry><title>Rendere Python un linguaggio di scripting migliore</title><link href="https://pyvideo.org/pycon-italia-2014/rendere-python-un-linguaggio-di-scripting-migliore.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Nicola Musatti</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/rendere-python-un-linguaggio-di-scripting-migliore.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Molti programmatori Python non amano che il loro linguaggio preferito venga chiamato &amp;quot;linguaggio di scripting&amp;quot;, sebbene Python sia molto pratico per questo tipo di attività. Piccoli script in Python tendono a crescere fino a diventare veri e propri programmi solo perché è molto facile aggiungere nuove funzionalità.&lt;/p&gt;
&lt;p&gt;Per contro c'è un compito nel quale linguaggi di scripting tradizionali come gli shell Unix/Linux o persino il cmd di Windows sono più pratici di Python: l'invocazione di comandi esterni. Le manipolazioni di stringhe necessarie per costruire linee di comando per os.system() o Popen paiono eccessivamente complicate rispetto allo scrivere il comando direttamente nello script, magari con una spruzzatina di variabili d'ambiente qui e là.&lt;/p&gt;
&lt;p&gt;In questa presentazione mostrerò come il mio package nxpy.command possa essere usato per creare wrapper di comandi esterni in modo che possano essere richiamati come funzioni Python, i cui argomenti vengono poi tradotti in opzioni e argomenti del comando stesso.&lt;/p&gt;
&lt;p&gt;Questo è possibile anche per gli interpreti di comandi interattivi; descriverò come ispezionare l'output e l'error del comando corrente per verificare che sia terminato correttamente, così come la possibilità di imporre vincoli temporali all'esecuzione dei comandi.&lt;/p&gt;
&lt;p&gt;Sebbene questo approccio risulti eccessivo per linee di comando semplici e fisse, diventa pratico in presenza di molteplici sotto-comandi che condividono molte delle loro opzioni, come avviene ad esempio per svn o git. In assenza di una vera e propria API questo è un modo efficace di crearne una in modo rapido ed incrementale.&lt;/p&gt;
</summary></entry><entry><title>ReNette: a web-service for network reproducibility analysis</title><link href="https://pyvideo.org/pycon-italia-2014/renette-a-web-service-for-network-reproducibility-analysis.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Ernesto Arbitrio</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/renette-a-web-service-for-network-reproducibility-analysis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Here we introduce a novel Django based web-service for differential network analysis. In order to manage extensive scientific computation tasks we design a distributed system where the computation part is independent from the front-end. In particular the complex heterogeneous system is based on the integration of python, R for scientific computing and Django, Celery and RabbitMQ for web- interface and asynchronous tasks management. The algorithms are written in R and integrated as python class through Rpy2 module. Each algorithm is mapped on a celery task which handles the communication between the web-interface and the computing server. Jobs are submitted from the web front-end to the middleware using standard HTML forms and class based Django views. Celery daemon manages the communication between the running process on the server and the web interface. In particular it provides a queue which prioritize the submission of new jobs according to the load average of the machine. Thanks to the distributed task queue system provided by the Celery daemon, the application is easily scalable in order to meet the need of more power in case a high number of processes are asked to be computed by the server. Once the process has finished the user is automatically redirected on the results web-page which returns the status of the process and a synthetic view of the submitted task.&lt;/p&gt;
&lt;p&gt;Methods &amp;amp; Implementation: The service is based on the Django Model View Controller (MVC) framework with Python version 2.7 which interacts with the core process through the celery distributed task queue. The application server was built with Apache2 web server integrated with uWSGI which allows configuration on high performance computing. The core of the service is based on the Rpy2 interface which interacts with the R package nettools. The double layer architecture is distributed on two machines: one is the web front-end which manages data communication between clients and the computing system. Front-end: Red Hat Enterprise Linux Workstation release 6.5 with kernel 2.6.32, virtual machine with 1 core, 2GB of RAM running on vmware sphere. The environment is based on Python 2.7 and Django 1.6.1.&lt;/p&gt;
&lt;p&gt;Back-end: Red Hat Enterprise Linux Workstation release 6.5 with kernel 2.6.32, phisical machine based on a 24 cores, 72 GB of RAM and 1TB of storage machine (georun). The current version 1.8 needs Python 2.7, Rpy2 2.30, Celery 3.1.7, R 3.0.2, nettools 0.9.5, igraph 0.6.6 to run correctly. The web-site is available at &lt;a class="reference external" href="https://renette.fbk.eu"&gt;https://renette.fbk.eu&lt;/a&gt;; to install the system, a complete list of the dependencies can be found on the github page &lt;a class="reference external" href="https://github.com/MPBA/renette"&gt;https://github.com/MPBA/renette&lt;/a&gt;.&lt;/p&gt;
</summary></entry><entry><title>Se il codice è poesia, la documentazione è prosa.</title><link href="https://pyvideo.org/pycon-italia-2014/se-il-codice-e-poesia-la-documentazione-e-prosa.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Massimiliano Pippi</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/se-il-codice-e-poesia-la-documentazione-e-prosa.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Perché sarà pur vero che il codice ha l'eleganza del verso, può avere un suo ritmo e la sua espressività, ma senza una buona documentazione che ne spieghi il funzionamento, difficilmente avrete degli utenti soddisfatti.&lt;/p&gt;
&lt;p&gt;Se mi avessero detto che avrei finito con lo spendere molto più tempo sulla documentazione di un progetto che sul codice non ci avrei mai creduto, ma era prima di scoprire la semplice e potente implicazione &amp;quot;più documentazione, più utenti, più contributor&amp;quot;.&lt;/p&gt;
&lt;p&gt;Durante il talk vedremo quali sono i principii alla base di una buona documentazione e come questa possa fare da volano al successo del vostro progetto.&lt;/p&gt;
</summary></entry><entry><title>There *will* be bugs</title><link href="https://pyvideo.org/pycon-italia-2014/there-will-be-bugs.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Alex Martelli</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/there-will-be-bugs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you're pushing the envelope of programming (or of your own skills)... and even when you're not... there will be bugs in your code. The speaker has lots of experience perpetrating, finding, and fixing bugs. Most schools don't cover bug-hunting in programming and computer science classes. I cover the attitudes and skills that are most helpful to minimize your bugs, track them, fix them, ensure they never recur, and deploy fixes to your users.&lt;/p&gt;
&lt;p&gt;In this talk, I describe how to start tracking down those pesky bugs, where they like to hide, how your brain tricks you, making it harder to find the bugs, and the processes that will help avoid them (or catch them early). Testing, pair programming, code reviews, open source (&amp;quot;given enough eyes all bugs are shallow&amp;quot;), when to use a bug-tracker, are just some of what I cover.&lt;/p&gt;
&lt;p&gt;Of all the advice I impart in the talk, the one most important bit: once you've confirmed the existence of a bug, never start &amp;quot;fixing&amp;quot; it until and unless you have reproduced that bug in a unit test. Often this task surprises you by showing the bug is elsewhere than you originally thought - and in any case, writing the test, ensuring it breaks, fixing the code, running the test again to confirm it now passes, and leaving the test (small, simple, fast) in your unit test suite forever, is the only way you can ensure that bug doesn't slip in again without you noticing... (Some push this even further and apply &amp;quot;test-driven&amp;quot; or &amp;quot;behavior-driven&amp;quot; programming - far from bad ideas, if you find you can be productive using them!)&lt;/p&gt;
&lt;p&gt;Most bugs tend to be concentrated in small parts of the code—the ones using too-advanced concepts, perhaps, or the ones where your original understanding of the problem (and thus the related architecture) was imperfect. You may discover where you have been too clever for your own good, and then you need to simplify those parts of the code. As Kernighan put it, &amp;quot;debugging is twice as hard as writing a program in the first place. So if you're as clever as you can be when you write it, how will you ever debug it?&amp;quot;&lt;/p&gt;
</summary></entry><entry><title>Applicazioni Web Realtime e Reattive con Python e TurboGears</title><link href="https://pyvideo.org/pycon-italia-2014/applicazioni-web-realtime-e-reattive-con-python-e-turbogears.html" rel="alternate"></link><published>2014-05-23T00:00:00+00:00</published><updated>2014-05-23T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2014-05-23:pycon-italia-2014/applicazioni-web-realtime-e-reattive-con-python-e-turbogears.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le applicazioni web diventano ogni giorno più legate ad aggiornamenti in tempo reale e feedback istantanei all'utente. Nonostante questo sia un ambito dominato da librerie e strumenti Javascript ci sono tecnologie Python che possono facilitarci la vita nel lavorare con componenti riusabili ed aggiornamenti in tempo reale senza bisogno di particolari conoscenze Javascript.&lt;/p&gt;
&lt;p&gt;Il talk copre prevalentemente due tecnologie che possono facilitarci la vita come sviluppatori:&lt;/p&gt;
&lt;p&gt;La prima, ToscaWidgets2 ci permette di creare rapidamente widgets reattivi e riusabili che si aggiornano in modo autonomo quando il loro modello di dati cambia, iniettando e gestendo in autonomia eventuali dipendenze javascript richieste dagli stessi.
La seconda, tgext.socketio ci permette di creare senza fatica applicazioni in grado di comunicare in modo bidirezionale e concorrente con l'utente ed il browser web esattamente come faremmo per qualsiasi altra view/controller del nostro sito.
Il talk spiegherà come essere immediatamente produttivi con queste tecnologie e come iniziare ad usarle tramite la realizzazione di una TodoList multi utente e reattiva che si aggiorna in tempo reale quando un qualsiasi utente effettua modifiche.&lt;/p&gt;
</summary></entry><entry><title>Conda: un gestore di pacchetti software per python e non solo</title><link href="https://pyvideo.org/pycon-italia-2014/conda-un-gestore-di-pacchetti-software-per-python-e-non-solo.html" rel="alternate"></link><published>2014-05-23T00:00:00+00:00</published><updated>2014-05-23T00:00:00+00:00</updated><author><name>Riccardo Vianello</name></author><id>tag:pyvideo.org,2014-05-23:pycon-italia-2014/conda-un-gestore-di-pacchetti-software-per-python-e-non-solo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Conda è un package manager progettato per gestire la configurazione di un ambiente di esecuzione isolato e l'installazione dei pacchetti software utilizzati.&lt;/p&gt;
&lt;p&gt;Scritto in Python e distribuito con licenza BSD, pur essendo stato creato per servire le necessità della distribuzione Python Anaconda, Conda non implementa un punto di vista preferenziale nei confronti del software Python e diversamente da altri strumenti simili può essere utilizzato per trattare generiche componenti software. In questo modo conda si propone di rendere (finalmente!) semplice la gestione delle dipendenze da librerie e altre componenti solitamente difficili da utilizzare in un ambiente isolato.&lt;/p&gt;
&lt;p&gt;Il talk illustra le caratteristiche generali di conda, l'utilizzo base dei principali comandi, alcuni casi d'uso e include cenni alla produzione e distribuzione dei pacchetti software.&lt;/p&gt;
</summary></entry><entry><title>Django per non credenti</title><link href="https://pyvideo.org/pycon-italia-2014/django-per-non-credenti.html" rel="alternate"></link><published>2014-05-23T00:00:00+00:00</published><updated>2014-05-23T00:00:00+00:00</updated><author><name>Simone Federici</name></author><id>tag:pyvideo.org,2014-05-23:pycon-italia-2014/django-per-non-credenti.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutto quello che credevate di sapere, e ancora di più. Django non va più di moda, a tutti piace Ruby, e a chi non piacerebbe, dopotutto Reinhard suonava lo swing solo con tre dita, chissà... Quest'anno al DjangoVillage ci saranno 40 talk su Django, almeno un talk base su Django facciamolo al pycon. L'obiettivo non è convincere gli amanti di Flask, Pyramid, Plone o web2py. Tutto fa buon brodo se lo conosci. Però vi svelerò un gran segreto. Perchè è Django che ... [to be continued...]&lt;/p&gt;
</summary></entry><entry><title>I bug ci sono sempre...</title><link href="https://pyvideo.org/pycon-italia-2014/i-bug-ci-sono-sempre.html" rel="alternate"></link><published>2014-05-23T00:00:00+00:00</published><updated>2014-05-23T00:00:00+00:00</updated><author><name>Alex Martelli</name></author><id>tag:pyvideo.org,2014-05-23:pycon-italia-2014/i-bug-ci-sono-sempre.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Se scrivi programmi innovativi, o ai limiti delle tue abilitá... o anche in caso contrario... i bug, nel tuo codice, ci saranno sempre. Ho molta esperienza a combinare bug, e quindi a scoprirli e rimediarli. A scuola non s'insegna come dar la caccia ai bug, quando t'insegnano programmazione e informatica... quindi, spiego quali atteggiamenti e capacitá aiutano a minimizzare i bug, trovarli, rimediarli, assicurare che non tornino mai piú, e distribuire le correzioni agli utenti del programma.&lt;/p&gt;
&lt;p&gt;In questo talk descrivo come iniziare a cercare i dannati bug, dove preferiscono nascondersi, come il tuo cervello t'imbroglia (rendendo piú difficile trovarli), e le procedure che aiutano ad evitarli (o almeno a trovarli molto presto). Testing, pair programming, code reviews, l'open source (&amp;quot;dati abbastanza occhi, tutti i bug sono facili da vedere&amp;quot;), quando usare un programma bug-tracker, sono fra gli argomenti considerati.&lt;/p&gt;
&lt;p&gt;Di tutti i consigli pratici nel tak, il piu importante: una volta confermata l'esistenza di un bug, mai cominciare a &amp;quot;ripararlo&amp;quot; fino a quando hai riprodotto il bug in un unit-test. Spesso questo compito ti stupisce, rivelando che il bug é altrove da dove pensavi - e comunque, scrivere il test, assicurarsi che non passa, riparare il codice, assicurarsi che adesso il test passa -- e lasciare il test (piccolo, semplice, veloce) per sempre nella tua suite di unit-test, é l'unico modo di assicurarsi che il bug non torni a farsi vivo senza essere notato (lo fanno, lo fanno, fidati...!). Alcuni spingono il concetto anche piú avanti e applicano tecniche &amp;quot;test driven&amp;quot; o &amp;quot;behavior driven&amp;quot; -- lungi dall'essere cattive idee, se non danneggiano la tua produttivitá.&lt;/p&gt;
&lt;p&gt;Molti bug tendono a concentrarsi in piccole parti del codice -- in quelle che usano concetti troppo avanzati, in intricati alberi di decisioni booleane, o in quelle dove l'iniziale comprensione del problema (e quindi l'architettura per affrontarlo) era imperfetta. Se scopri dove sei stato &amp;quot;troppo furbo per il tuo bene&amp;quot;, devi semplificare quelle parti del codice. Come dice Kernighan, &amp;quot;Il debug é due volte piú difficile che inizialmente scrivere il programma stesso. Quindi se sei il piú furbo possibile quando lo scrivi, come mai potrai fare a debuggarlo?&amp;quot;&lt;/p&gt;
</summary></entry><entry><title>Le applicazioni GenroPy</title><link href="https://pyvideo.org/pycon-italia-2014/le-applicazioni-genropy.html" rel="alternate"></link><published>2014-05-23T00:00:00+00:00</published><updated>2014-05-23T00:00:00+00:00</updated><author><name>Francesco Porcari</name></author><id>tag:pyvideo.org,2014-05-23:pycon-italia-2014/le-applicazioni-genropy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scrivere applicazioni web molto complesse può essere un lavoro estremamente faticoso e poco remunerativo. Con il framework GenroPy è possibile produrre in tempi rapidissimi applicazioni gestionali estremamente complete e complesse.&lt;/p&gt;
&lt;p&gt;Nel talk saranno mostrate alcune applicazioni realizzate enfatizzando tutte le feature immediatamente disponibili per il cliente finale.&lt;/p&gt;
&lt;p&gt;Il talk è finalizzato a mostrare l'aspetto utente delle applicazioni prodotte con GenroPy mentre nel training talk &amp;quot;COSTRUIRE UN'APPLICAZIONE COMPLETA CON GENROPY&amp;quot; sarà possibile realizzare l'applicazione dimostrativa che vedrete a questo link.&lt;/p&gt;
</summary></entry><entry><title>Una scelta sbagliata... rimane sbagliata</title><link href="https://pyvideo.org/pycon-italia-2014/una-scelta-sbagliata-rimane-sbagliata.html" rel="alternate"></link><published>2014-05-23T00:00:00+00:00</published><updated>2014-05-23T00:00:00+00:00</updated><author><name>Fabio Pliger</name></author><id>tag:pyvideo.org,2014-05-23:pycon-italia-2014/una-scelta-sbagliata-rimane-sbagliata.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduzione + keynote&lt;/p&gt;
</summary></entry></feed>