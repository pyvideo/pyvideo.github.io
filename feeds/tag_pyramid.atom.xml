<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_pyramid.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-01-22T00:00:00+00:00</updated><entry><title>Python web frameworks shootout</title><link href="https://pyvideo.org/python-frederick/python-web-frameworks-shootout.html" rel="alternate"></link><published>2017-10-11T00:00:00+00:00</published><updated>2017-10-11T00:00:00+00:00</updated><author><name>Matt Layman</name></author><id>tag:pyvideo.org,2017-10-11:python-frederick/python-web-frameworks-shootout.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the October 2017 Python Frederick meetup, we looked at API Star, Falcon, Flask, Django, and Pyramid and did a comparison of their features to see which would be the best fit for your future web project.&lt;/p&gt;
</summary><category term="api star"></category><category term="falcon"></category><category term="flask"></category><category term="django"></category><category term="pyramid"></category></entry><entry><title>Pyramid advanced configuration tactics for nice apps and libs</title><link href="https://pyvideo.org/europython-2013/pyramid-advanced-configuration-tactics-for-nice-apps-and-libs.html" rel="alternate"></link><published>2013-07-05T00:00:00+00:00</published><updated>2013-07-05T00:00:00+00:00</updated><author><name>Georges Dubus</name></author><id>tag:pyvideo.org,2013-07-05:europython-2013/pyramid-advanced-configuration-tactics-for-nice-apps-and-libs.html</id><summary type="html"></summary><category term="web"></category><category term="pyramid"></category><category term="case-study"></category></entry><entry><title>Take Back Control Over Your Work. Agile Tips For Python Developers.</title><link href="https://pyvideo.org/europython-2013/take-back-control-over-your-work-agile-tips-for-python-developers.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Andrew Mleczko</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/take-back-control-over-your-work-agile-tips-for-python-developers.html</id><summary type="html"></summary><category term="web"></category><category term="pyramid"></category><category term="postgresql"></category><category term="open-source"></category><category term="trac"></category><category term="framework"></category><category term="teamwork"></category></entry><entry><title>Tools for successful project development</title><link href="https://pyvideo.org/europython-2013/tools-for-successful-project-development.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Domen Kožar</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/tools-for-successful-project-development.html</id><summary type="html"></summary><category term="project-management"></category><category term="testing"></category><category term="pyramid"></category></entry><entry><title>Essere agili? Metodi, strumenti e integrazioni: Python “to rule them all”</title><link href="https://pyvideo.org/europython-2013/essere-agili-metodi-strumenti-e-integrazioni-python-to-rule-them-all.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Massimo Azzolini</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/essere-agili-metodi-strumenti-e-integrazioni-python-to-rule-them-all.html</id><summary type="html"></summary><category term="application-design"></category><category term="api"></category><category term="pyramid"></category><category term="integration"></category><category term="trac"></category></entry><entry><title>Lost in OAuth? Learn Velruse And Get Your Life Back!</title><link href="https://pyvideo.org/europython-2013/lost-in-oauth-learn-velruse-and-get-your-life-back.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Andrew Mleczko</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/lost-in-oauth-learn-velruse-and-get-your-life-back.html</id><summary type="html"></summary><category term="web"></category><category term="pyramid"></category><category term="HTTP"></category><category term="open-source"></category><category term="case-study"></category></entry><entry><title>Webフレームワークパネル</title><link href="https://pyvideo.org/pycon-japan-2012/webhuremuwakupaneru.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>Yoshifumi Yamaguchi</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/webhuremuwakupaneru.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;去年好評だったパネルディスカッションを今年も行います。
今年はFlaskの作者であり基調講演を行うArmin Ronacherを初めとした各フレームワークの第一人者を迎え、 Flask, Django, Pyramid, Google App Engine の利点と欠点を赤裸々に討論して頂きます。
この討論を聴いて頂ければ、状況に応じたwebフレームワークの選択が出来るようになるはずです。&lt;/p&gt;
</summary><category term="panel"></category><category term="framework"></category><category term="flask"></category><category term="django"></category><category term="pyramid"></category><category term="googleappengine"></category></entry><entry><title>Pyramidセキュリティ</title><link href="https://pyvideo.org/pycon-japan-2012/pyramidsekiyuritei.html" rel="alternate"></link><published>2012-09-15T00:00:00+00:00</published><updated>2012-09-15T00:00:00+00:00</updated><author><name>村岡 友介</name></author><id>tag:pyvideo.org,2012-09-15:pycon-japan-2012/pyramidsekiyuritei.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pyramidセキュリティ&lt;/p&gt;
</summary><category term="pyramid"></category><category term="security"></category></entry><entry><title>What Makes Pyramid Unique!</title><link href="https://pyvideo.org/pycon-japan-2012/what-makes-pyramid-unique.html" rel="alternate"></link><published>2012-09-15T00:00:00+00:00</published><updated>2012-09-15T00:00:00+00:00</updated><author><name>小田切 篤</name></author><id>tag:pyvideo.org,2012-09-15:pycon-japan-2012/what-makes-pyramid-unique.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pyramidについて Pyramidの特徴 PyramidのためのPythonの知識&lt;/p&gt;
</summary><category term="pyramid"></category></entry><entry><title>A Web App in Four Frameworks</title><link href="https://pyvideo.org/pycascades-2018/a-web-app-in-four-frameworks.html" rel="alternate"></link><published>2018-01-22T00:00:00+00:00</published><updated>2018-01-22T00:00:00+00:00</updated><author><name>Nicholas Hunt-Walker</name></author><id>tag:pyvideo.org,2018-01-22:pycascades-2018/a-web-app-in-four-frameworks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we take a tour of some Python web frameworks through the lens of an API for the same web application: a simple To Do list. We'll see how the same problems are handled across Django, Flask, Pyramid, and Tornado, and why you might choose one over the rest.&lt;/p&gt;
</summary><category term="framework"></category><category term="Django"></category><category term="Flask"></category><category term="Pyramid"></category><category term="Tornado"></category></entry><entry><title>How to build complex web applications having fun?</title><link href="https://pyvideo.org/europython-2011/how-to-build-complex-web-applications-having-fun.html" rel="alternate"></link><published>2011-07-21T00:00:00+00:00</published><updated>2011-07-21T00:00:00+00:00</updated><author><name>Andrew Mleczko</name></author><id>tag:pyvideo.org,2011-07-21:europython-2011/how-to-build-complex-web-applications-having-fun.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Andrew Mleczko - 22 June 2011 in &amp;quot;Track Ravioli &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web development is a complexity challenge nowadays. Growing number of
functionalities results in customer expectations increase which makes
project design more difficult. Using proper tools that suite your
customer needs is essential.&lt;/p&gt;
&lt;p&gt;In this talk I would like to present two successful stories using
closely together Pyramid and Plone. Basing on these examples I wished to
highlight the main reasons for using Plone as a CMS only and letting
Pyramid do the rest (vertical application). Moreover, I will underscore
good and bad practices during integration process and how to make
farsighted architectural decisions in a right moment.&lt;/p&gt;
&lt;p&gt;Prerequisites: be familiarized with common python web framework
concepts.&lt;/p&gt;
</summary><category term="cms"></category><category term="design"></category><category term="framework"></category><category term="plone"></category><category term="pyramid"></category><category term="rest"></category><category term="web"></category></entry><entry><title>Pyramid: Lighter, faster, better web apps</title><link href="https://pyvideo.org/pycon-au-2011/pyramid-lighter-faster-better-web-apps.html" rel="alternate"></link><published>2011-08-22T00:00:00+00:00</published><updated>2011-08-22T00:00:00+00:00</updated><author><name>Dylan Jay</name></author><id>tag:pyvideo.org,2011-08-22:pycon-au-2011/pyramid-lighter-faster-better-web-apps.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Introduction to the Pyramid, the new web framework taking the python
world by storm. This tutorial will cover the basics of a hello world app
and cover some of the advanced features of pyramid that give it it's
power such as traversal. Pyramid is part of the pylons project and is a
successor to pylons and a continuation of the BFG framework. It's very
simple to learn, runs fast yet has powerful concepts which help keep
large web app creation a sane process..&lt;/p&gt;
</summary><category term="framework"></category><category term="pylons"></category><category term="pyramid"></category><category term="tutorial"></category><category term="web"></category></entry><entry><title>Node Schmode: Pythonic Real-Time Web</title><link href="https://pyvideo.org/pycon-au-2012/node-schmode-pythonic-real-time-web.html" rel="alternate"></link><published>2012-08-22T00:00:00+00:00</published><updated>2012-08-22T00:00:00+00:00</updated><author><name>Dylan Jay</name></author><id>tag:pyvideo.org,2012-08-22:pycon-au-2012/node-schmode-pythonic-real-time-web.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Using gevent, pyramid and socket-io for a micro framework approach to
creating real-time web apps without the braces. Why is gevent so cool
and how it can let you write fast scalable apps with asynchronous IO
without twisting your mind.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using gevent, pyramid and socket-io for a micro framework approach to
creating real-time web apps without the braces. Why is gevent so cool
and how it can let you write fast scalable apps with asynchronous IO
without twisting your mind.&lt;/p&gt;
</summary><category term="gevent"></category><category term="pyramid"></category><category term="socket-io"></category></entry><entry><title>Schlangenhochzeit in der Wolke</title><link href="https://pyvideo.org/pycon-de-2013/schlangenhochzeit-in-der-wolke.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Jens Klein</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/schlangenhochzeit-in-der-wolke.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Googles Appengine steht für hochskalierbare Anwendungen in der Cloud.
Locandy ist unser Startup für mobile Location based Games.&lt;/p&gt;
&lt;p&gt;Auf der Cloud-Platform mit ihrer sehr restriktiven Python-Umgebung haben
wir das Portal für Spieler, Autoren und Business Kunden umgesetzt.
Browser, Mobile-App und PDF-Server werden damit bedient.&lt;/p&gt;
&lt;p&gt;Dabei ist nicht alles so rund gelaufen, wie wir es gerne gehabt hätten.
Die Probleme wurden gelöst - dank Python mit seinem starken
Werkzeugkasten.&lt;/p&gt;
&lt;p&gt;Der Vortrag geht kurz auf die Anforderungen ein, zeigt auf welche
Probleme es gab und wie wir sie gelöst haben. In einem Github Repository
stelle ich ein Buildout inkl. kleiner Beispielapplikation mit den
meisten dieser Lösungen zur Verfügung.&lt;/p&gt;
</summary><category term="appengine"></category><category term="buildout"></category><category term="cloud"></category><category term="gruntjs"></category><category term="mobile"></category><category term="plone.testing"></category><category term="pyramid"></category><category term="testlayers"></category><category term="velruse"></category><category term="WebTest"></category></entry><entry><title>State of Pylons/TurboGears 2/repoze.bfg</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--state-of-pylons-turbogears-2-repoze-b.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Ben Bangert</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--state-of-pylons-turbogears-2-repoze-b.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;State of Pylons/TurboGears 2/repoze.bfg&lt;/p&gt;
&lt;p&gt;Presented by Chris McDonough, Ben Bangert, and Mark Ramm&lt;/p&gt;
&lt;p&gt;A three-for-one talk by the main developers of three popular Python web
frameworks! We'll (very) briefly cover the state of each of our
individual frameworks and communities, and then we'll describe the
results of our efforts to work together and share code.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Pylons is a popular, lightweight Python web framework.&lt;/p&gt;
&lt;p&gt;TurboGears 2 is a full-stack framework built atop Pylons.&lt;/p&gt;
&lt;p&gt;repoze.bfg is a moderately popular, lightweight Python web framework.&lt;/p&gt;
&lt;p&gt;The main developers and community leaders of these frameworks have been
working together and sharing as much as possible over the course of
roughly the last year. We'll very briefly describe to the audience the
states of our individual efforts, then we'll discuss how we intend to
move forward and share more code and effort in the year to come. The
talk will be more socially- oriented than technical.&lt;/p&gt;
&lt;p&gt;It's unusual for open source code and communities to bridge minor
perceived differences in scope and style and to start sharing code and
ideas openly. If you're a user of any of these frameworks, you'll want
to be present for this talk.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2011"></category><category term="pylons"></category><category term="pyramid"></category><category term="repoze.bfg"></category><category term="turbogears"></category></entry><entry><title>The Pyramid FAQ</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--the-pyramid-faq.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Carlos de la Guardia</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--the-pyramid-faq.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Pyramid FAQ&lt;/p&gt;
&lt;p&gt;Presented by Carlos de la Guardia&lt;/p&gt;
&lt;p&gt;The #pylons IRC channel is the most common way of giving support to
users of the Pyramid framework. In this talk we take away some of the
most often discussed topics in the channel and give detailed answers to
them.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Every development project has a few questions and doubts that seem to
come up on its support channels every now and then. The Pyramid
framework is no exception.&lt;/p&gt;
&lt;p&gt;In this talk, we introduce Pyramid related FAQs using the chat logs and
proceed to discuss them in detail. Showing the logs allows us to give
the talk a lighter side and makes for an introduction to each topic
based on real user questions.&lt;/p&gt;
&lt;p&gt;Topics covered here include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Configuration objects.&lt;/li&gt;
&lt;li&gt;Object traversal versus URL dispatch.&lt;/li&gt;
&lt;li&gt;Context and views.&lt;/li&gt;
&lt;li&gt;Authentication and authorization.&lt;/li&gt;
&lt;li&gt;How much 'Zope stuff' is there in Pyramid and can we take it away?&lt;/li&gt;
&lt;li&gt;Examples of how Pyramid enables the Pylons philosophy of integrating
best of breed or preferred components.&lt;/li&gt;
&lt;li&gt;The future of Pyramid and Pylons.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="pycon"></category><category term="pycon2011"></category><category term="pyramid"></category></entry></feed>