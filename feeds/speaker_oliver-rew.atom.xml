<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Oliver Rew</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_oliver-rew.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-04-27T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Python Untethered: Building Robust Embedded Systems</title><link href="https://pyvideo.org/north-bay-python-2025/python-untethered-building-robust-embedded-systems.html" rel="alternate"></link><published>2025-04-27T00:00:00+00:00</published><updated>2025-04-27T00:00:00+00:00</updated><author><name>Oliver Rew</name></author><id>tag:pyvideo.org,2025-04-27:/north-bay-python-2025/python-untethered-building-robust-embedded-systems.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Oliver Rew&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pretalx.northbaypython.org/nbpy-2025/talk/XQKFNR"&gt;https://pretalx.northbaypython.org/nbpy-2025/talk/XQKFNR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When code finally leaves your IDE, the destination is often not the cloud or a PC, but an embedded device in a home, office, or even the wild. However, developing applications for the embedded space comes with its own unique …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Oliver Rew&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pretalx.northbaypython.org/nbpy-2025/talk/XQKFNR"&gt;https://pretalx.northbaypython.org/nbpy-2025/talk/XQKFNR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When code finally leaves your IDE, the destination is often not the cloud or a PC, but an embedded device in a home, office, or even the wild. However, developing applications for the embedded space comes with its own unique set of challenges and pitfalls. Whether designing for the home or enterprise, embedded devices require additional considerations for usability, reliability, and maintainability.&lt;/p&gt;
&lt;p&gt;In this talk, we'll explore real-world challenges of embedded Python development and provide practical solutions drawn from both DIY projects and enterprise deployments. You'll learn strategies for:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ensuring system reliability through power failure tolerance and fault handling&lt;/li&gt;
&lt;li&gt;Building secure remote access and upgrade capabilities&lt;/li&gt;
&lt;li&gt;Implementing effective monitoring and observability&lt;/li&gt;
&lt;li&gt;Managing hardware constraints and system resources&lt;/li&gt;
&lt;li&gt;Designing flexible configuration systems that work in the field&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whether you're a hobbyist looking to make your home automation more robust or a professional developer designing industrial systems, you'll walk away with concrete patterns and best practices to build more reliable embedded Python applications.&lt;/p&gt;
&lt;p&gt;Sun Apr 27 15:45:00 2025 at Reis River Ranch&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
</content><category term="North Bay Python 2025"></category></entry><entry><title>Designing a Human-Friendly CLI for API-Driven Infrastructure</title><link href="https://pyvideo.org/pycascades-2024/designing-a-human-friendly-cli-for-api-driven-infrastructure.html" rel="alternate"></link><published>2024-04-07T00:00:00+00:00</published><updated>2024-04-07T00:00:00+00:00</updated><author><name>Oliver Rew</name></author><id>tag:pyvideo.org,2024-04-07:/pycascades-2024/designing-a-human-friendly-cli-for-api-driven-infrastructure.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As Bloomberg’s infrastructure grows and evolves, the tools we use to manage it are becoming increasingly important. To streamline infrastructure management, our team set out to design a REST API and constituent CLI (Command Line Interface) that would comprise a single interface for both programmatic and human interaction …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As Bloomberg’s infrastructure grows and evolves, the tools we use to manage it are becoming increasingly important. To streamline infrastructure management, our team set out to design a REST API and constituent CLI (Command Line Interface) that would comprise a single interface for both programmatic and human interaction with our infrastructure. Traditionally, building a CLI that is tightly coupled to an API requires maintaining a separate codebase, which is tedious and error-prone. Instead, we designed a CLI that dynamically generates commands based on the OpenAPI JSON documentation. However, since APIs are designed for computer interaction, we designed our API to include the information needed to implement a human-friendly CLI. Leveraging Python, FastAPI, and numerous other open source projects, we built a stable, extensible tool that greatly improves how we interact with our infrastructure.&lt;/p&gt;
</content><category term="PyCascades 2024"></category></entry><entry><title>Designing a Human-Friendly CLI for API-Driven Infrastructure</title><link href="https://pyvideo.org/pytexas-2024/designing-a-human-friendly-cli-for-api-driven-infrastructure.html" rel="alternate"></link><published>2024-04-21T00:00:00+00:00</published><updated>2024-04-21T00:00:00+00:00</updated><author><name>Oliver Rew</name></author><id>tag:pyvideo.org,2024-04-21:/pytexas-2024/designing-a-human-friendly-cli-for-api-driven-infrastructure.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Designing a Human-Friendly CLI for API-Driven Infrastructure&lt;/p&gt;
&lt;p&gt;As Bloomberg's infrastructure grows and evolves, the tools we use to manage it are becoming increasingly important. To streamline infrastructure management, our team set out to design a REST API and constituent CLI (Command Line Interface) that would comprise a single interface …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Designing a Human-Friendly CLI for API-Driven Infrastructure&lt;/p&gt;
&lt;p&gt;As Bloomberg's infrastructure grows and evolves, the tools we use to manage it are becoming increasingly important. To streamline infrastructure management, our team set out to design a REST API and constituent CLI (Command Line Interface) that would comprise a single interface for both programmatic and human interaction with our infrastructure. Traditionally, building a CLI that is tightly coupled to an API requires maintaining a separate codebase, which is tedious and error-prone. Instead, we designed a CLI that dynamically generates commands based on the OpenAPI JSON documentation. However, since APIs are designed for computer interaction, we designed our API to include the information needed to implement a human-friendly CLI. Leveraging Python, FastAPI, and numerous other open source projects, we built a stable, extensible tool that greatly improves how we interact with our infrastructure.&lt;/p&gt;
&lt;p&gt;Speaker: Oliver Rew is a software engineer and a lifelong tinkerer/maker, I have a deep-rooted passion for building, fixing, and breaking things. I recently earned a Masters in Electrical and Computer Engineering, and have gained experience working at both small startups and large companies. I thrive on fixing hard bugs and diving deep into challenging problems.&lt;/p&gt;
&lt;p&gt;Beyond my professional work, I'm also involved in an exciting Cubesat project at Portland State University. When I'm not immersed in technology, I enjoy outdoor activities such as biking, rock-climbing, and spending quality time with my dog, Bruce.&lt;/p&gt;
</content><category term="PyTexas 2024"></category></entry><entry><title>Python Untethered: Building Robust Embedded Systems</title><link href="https://pyvideo.org/pytexas-2025/python-untethered-building-robust-embedded-systems.html" rel="alternate"></link><published>2025-04-12T00:00:00+00:00</published><updated>2025-04-12T00:00:00+00:00</updated><author><name>Oliver Rew</name></author><id>tag:pyvideo.org,2025-04-12:/pytexas-2025/python-untethered-building-robust-embedded-systems.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When code finally leaves your IDE, the destination is often not the cloud or a PC, but an embedded device in a home, office, or even the wild. However, developing applications for the embedded space comes with its own unique set of challenges and pitfalls. Whether designing for the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When code finally leaves your IDE, the destination is often not the cloud or a PC, but an embedded device in a home, office, or even the wild. However, developing applications for the embedded space comes with its own unique set of challenges and pitfalls. Whether designing for the home or enterprise, embedded devices require additional considerations for usability, reliability, and maintainability. In this talk, we'll explore real-world challenges of embedded Python development and provide practical solutions drawn from both DIY projects and enterprise deployments. You'll learn strategies for:
* Ensuring system reliability through power failure tolerance and fault handling
* Building secure remote access and upgrade capabilities
* Implementing effective monitoring and observability
* Managing hardware constraints and system resources
* Designing flexible configuration systems that work in the field
* Whether you're a hobbyist looking to make your home automation more robust or a professional developer designing industrial systems, you'll walk away with concrete patterns and best practices to build more reliable embedded Python applications.&lt;/p&gt;
</content><category term="PyTexas 2025"></category></entry></feed>