<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 24 Sep 2017 00:00:00 +0000</lastBuildDate><item><title>10 bonnes raisons de passer à python3</title><link>https://pyvideo.org/pycon-fr-2017/10-bonnes-raisons-de-passer-a-python3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3 est sorti il y a presque 10 ans, et pourtant, le code Python 2 reste très très répendu. Petit tour de 10 bonnes raisons de passer à Python 3 dès aujourd'hui.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pierre Fersing</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/10-bonnes-raisons-de-passer-a-python3.html</guid></item><item><title>Building International Teams</title><link>https://pyvideo.org/pycon-fr-2017/building-international-teams.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building a successful team is not that easy. But when your members come from countries all over the globe, it starts to become really challenging! We can all speak in English, we still have different cultures and different mindsets. However, this diversity turns out to be the greatest strength of international teams. To understand why, we need to look back in history, to travel through the ages, and see where our modern civilizations come from. At the end of our journey, we will discover what makes these teams so polyvalent, and why they can be an example for all of us.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexandre Figura</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/building-international-teams.html</guid></item><item><title>Construire et gérer un opérateur Internet en Python</title><link>https://pyvideo.org/pycon-fr-2017/construire-et-gerer-un-operateur-internet-en-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wifirst est un opérateur Internet, qui, sans grande originalité, installe une « box » chez ses clients. Si l'OS est une Debian, tous les outils métiers sont codés en Python et par effet tache d'huile, presque tous les outils utilisés ou développés le sont également en Python.&lt;/p&gt;
&lt;p&gt;Cette présentation vous propose donc de faire le tour des outils que nous utilisons, et de faire un retour d'expérience sur diverses problématiques (performance d'ansible sur 6000 équipements, le chaos des bibliothèques SNMP en Python, les fuites de mémoire avec requests, etc).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Vichot</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/construire-et-gerer-un-operateur-internet-en-python.html</guid></item><item><title>Frets On Fire (X) et son écosystème après 11 ans</title><link>https://pyvideo.org/pycon-fr-2017/frets-on-fire-x-et-son-ecosysteme-apres-11-ans.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Frets On Fire (FoF) est un clone libre du célèbre jeu vidéo Guitar Hero. FoF se joue sur ordinateur, est multi-plateforme et léger. Ah, oui, au fait, il est écrit en Python.&lt;/p&gt;
&lt;p&gt;Cette année, FoF fête ses 11 ans. C'est l'occasion de revisiter son écosystème et ses technos, montrer ce que l'on peut faire à base de logiciels libres en Python et vous redonner envie d'y jouer.
Ama⋅teur⋅trice⋅s ou pro, transformez votre clavier (ou autre périphérique) en guitare le temps d'un instant !&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Magimel</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/frets-on-fire-x-et-son-ecosysteme-apres-11-ans.html</guid></item><item><title>Kubernetes and Python: from monolithic to micro-services</title><link>https://pyvideo.org/pycon-fr-2017/kubernetes-and-python-from-monolithic-to-micro-services.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Je vais aborder les architectures micro-services avec un exemple d'application Python.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Comment découper une architecture monolithique Python?&lt;/li&gt;
&lt;li&gt;Pourquoi devrais-je utiliser une architecture micro-services?&lt;/li&gt;
&lt;li&gt;Comment gérer ces différents nouveaux micro-services?&lt;/li&gt;
&lt;li&gt;Comment handle le déploiement de ces services w/ Docker et Kubernetes?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Je vais d'abord faire une overview pendant 5 minutes sur les micro-services (notamment une super analogie avec la musique!), puis je vais décrire et commenter les guidelines que Google conseille pour découper son application. (5 min) Enfin je passerai au cas &amp;quot;pratique&amp;quot; (10 min): comment organiser ses repos, comment faire communiquer nos micro-services et enfin le déploiement de ces services avec Kubernetes/GKE.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Tortuyaux</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/kubernetes-and-python-from-monolithic-to-micro-services.html</guid></item><item><title>La puissance du scraping web avec Weboob</title><link>https://pyvideo.org/pycon-fr-2017/la-puissance-du-scraping-web-avec-weboob.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le &amp;quot;scraping&amp;quot; consiste à récupérer de façon massive des données enfermées
sur un site web.&lt;/p&gt;
&lt;p&gt;Si Weboob (Web Outside Of Browsers) est surtout connu pour ses applications finales et les modules qu'il fournit, c'est aussi un puissant framework qu'il est possible d'utiliser dans des cas de scraping massif.&lt;/p&gt;
&lt;p&gt;Vous verrez comment instrumentaliser Weboob à ces fins.&lt;/p&gt;
&lt;p&gt;Une comparaison avec les solutions existantes comme Scrapy sera faite, et les fonctionnalités qui rendent Weboob unique seront abordées.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Laurent Bachelier</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/la-puissance-du-scraping-web-avec-weboob.html</guid></item><item><title>Le Python dans le film d'animation</title><link>https://pyvideo.org/pycon-fr-2017/le-python-dans-le-film-danimation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;S'il y a bien une industrie où le Python est omniprésent c'est dans celle du film d'animation. Quand les artistes ont voulu automatiser certaines de leurs actions, ils ont eu la joie de pouvoir le faire via les langages de script propriétaires. Leur bonheur fut de courte durée quand ils constatèrent le design médiocre de ceux-ci. Heureusement Python est arrivé ! Un premier soft a permis d'écrire ses scripts en Python, puis un deuxième et enfin tous. Les graphistes découvraient un vrai langage de programmation et s'y donnait à coeur joie ! Les scripts évoluant,  les interfaces devinrent de plus en plus complexes. Qt et ses bindings Python devinrent la référence. Les graphistes les plus aguerris passèrent développeurs et continuèrent à faire leurs API et leurs outils standalones en Python. Et aujourd'hui, avec la gestion de configuration, Saltstack et Ansible envahissent les parcs informatiques.&lt;/p&gt;
&lt;p&gt;Lors de cette conférence, nous ferons l'état de la situation. Nous regarderons les outils développés avec Python et comment cela évolue. Et enfin nous regarderons les bibliothèques qui peuvent être utilisées dans d'autre contextes et donc vous intéresser.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Frank Rousseau</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/le-python-dans-le-film-danimation.html</guid></item><item><title>L'intégration continue avec Python: retour d'expérience</title><link>https://pyvideo.org/pycon-fr-2017/lintegration-continue-avec-python-retour-dexperience.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tout développement professionnel, quel qu'il soit, doit à un moment, dans l'idéal, sauter le pas de l'intégration continue (IC).&lt;/p&gt;
&lt;p&gt;Cette technique permet, comme la plupart d'entre vous le savent, de détecter au plus tôt bugs et régressions. Si pour les plus célèbres d'entre eux (Jenkins, Travis, ...) les documentations et les plugins sont nombreux, force est de constater que pour les projets Python, ils ne proposent pas grand chose.&lt;/p&gt;
&lt;p&gt;Dès lors, de multiples méthodologies, outils, et process sont possibles.&lt;/p&gt;
&lt;p&gt;Aussi, à travers cette conférence, nous vous proposons un retour d'expérience de l'IC de projets Python, tel que mis en place en interne dans la société ITLINK. Nous vous présenterons notre configuration, nos choix d'outils, l'interaction entre ces outils, et la restitution d'informations en sortie de notre IC.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexandre Galode</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/lintegration-continue-avec-python-retour-dexperience.html</guid></item><item><title>Metaprogramming for fun and profit (Python 3.6)</title><link>https://pyvideo.org/pycon-fr-2017/metaprogramming-for-fun-and-profit-python-36.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction aux techniques de metaprogramming / metaclasses&lt;/p&gt;
&lt;p&gt;Illustration avec un exemple fun - une partie très probablement en live coding&lt;/p&gt;
&lt;p&gt;Retours d'expériences sur le metaprogramming en production&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pierre-Alexandre Schembri</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/metaprogramming-for-fun-and-profit-python-36.html</guid></item><item><title>Mindmap web contrôlée par sms avec Python &amp; Twilio</title><link>https://pyvideo.org/pycon-fr-2017/mindmap-web-controlee-par-sms-avec-python-twilio.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il s'agit d'un talk pour présenter un petit projet personnel,
qui me permet de m'envoyer des notes par sms depuis mon &amp;quot;dumbphone&amp;quot;,
qui sont ensuite stockées dans un repo git et affichées sous forme de mindmap de ce type:
&lt;a class="reference external" href="https://chezsoi.org/lucas/mindmap/mindmap-viewer/"&gt;https://chezsoi.org/lucas/mindmap/mindmap-viewer/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lucas Cimon</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/mindmap-web-controlee-par-sms-avec-python-twilio.html</guid></item><item><title>nuka: libérez le vilain devops qui est en vous</title><link>https://pyvideo.org/pycon-fr-2017/nuka-liberez-le-vilain-devops-qui-est-en-vous.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;nuka est une librairie orienté «devops» utilisant ssh et les fonctionnalités asynchrone de python3.
Pourquoi une nouvelle librairie ? Comment ça marche ? La démo va-t-elle fonctionner ? Pourquoi est-il si méchant ? Autant de questions auquelles nous tenterons de répondre durant cette présentation.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gael Pasgrimaud</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/nuka-liberez-le-vilain-devops-qui-est-en-vous.html</guid></item><item><title>Plongez dans le visual novel avec Ren'Py</title><link>https://pyvideo.org/pycon-fr-2017/plongez-dans-le-visual-novel-avec-renpy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ren'Py est un moteur de Visual Novels, un genre de jeux qui peut ressemble à un livre dont vous êtes le héros et qui est entre autre, très populaire au Japon. Il permet de faire très rapidement ses premiers jeux en utilisant soit un langage de script simpliste soit en utilisant directement du python. C'est bien entendu un logiciel libre, sous licence MIT.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jean-Michel Armand</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/plongez-dans-le-visual-novel-avec-renpy.html</guid></item><item><title>PonyConf</title><link>https://pyvideo.org/pycon-fr-2017/ponyconf.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PonyConf est un outil pour organiser un appel à participation.
Il permet à l’équipe organisatrice de noter les propositions, les accepter et les refuser et les organiser en sessions.
Il est possible de centraliser les communications par e-mails avec les orateurs, les réponses étant enregistré dans PonyConf et notifiées à l’équipe organisatrice.
Pour finir, il permet de créer un programme et de l’exporter dans différent format.
Il est réalisé en python avec le framework Django.
Bien qu’encore en développement avec de nombreuses fonctionnalitées en attente d’implémentation, il a déjà été utilisé avec succès pour l’organisation du Capitole du Libre 2016 et 2017 ainsi que la PyConFR 2017.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Élie Bouttier</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/ponyconf.html</guid></item><item><title>Pourquoi et comment devenir un·e membre actif de l'AFPy</title><link>https://pyvideo.org/pycon-fr-2017/pourquoi-et-comment-devenir-une-membre-actif-de-lafpy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;L'AFPy représente une communauté assez importante dans les pays francophones. Pourtant assez peu de personnes s'investissent activement. Pendant cette présentation, je vais essayer de vous montrer les intérêts qu'on peut trouver à s'investir dans la communauté et comment s'investir sans y consacrer énormément de temps.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Arthur Vuillard</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/pourquoi-et-comment-devenir-une-membre-actif-de-lafpy.html</guid></item><item><title>Pourquoi, mais pourquoi, async et await ont été inclu dans Python 3.5 ?</title><link>https://pyvideo.org/pycon-fr-2017/pourquoi-mais-pourquoi-async-et-await-ont-ete-inclu-dans-python-35.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Avec quelques exemples du monde réel, je vais vous expliquer l'intérêt du modèle asynchrone et quand il est intéressant de l'utiliser. De plus, je vais vous montrer pourquoi l'inclusion de async / await + AsyncIO dans le cœur de Python est un choix judicieux, d'un point de vue technique et politique. Enfin, je vais vous présenter quelques bibliothèques dans la boîte à outils d'AsyncIO.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ludovic Gasc</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/pourquoi-mais-pourquoi-async-et-await-ont-ete-inclu-dans-python-35.html</guid></item><item><title>Pyrser Selector Language</title><link>https://pyvideo.org/pycon-fr-2017/pyrser-selector-language.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Existe-t'il un système équivalent aux regexes pour les structures de données python?&lt;/p&gt;
&lt;p&gt;Dans le monde web on parle de CSS Selector pour matcher une partie du DOM afin d'y appliquer un style.
Un objet python est similaire à un arbre tel que le DOM d'un navigateur (bien que différent techniquement) dans le sens où c'est une racine référençant une collection d'autres objets. On le comprends facilement quand on s'occupe de sérialisation/désérialisation d'objet.&lt;/p&gt;
&lt;p&gt;Hors beaucoup de tâche sur cette arbre reviennent à identifier des patterns de la structure et à y appliquer un traitement spécifique notamment dans tous ce qui touche à la transformation d'AST au sein d'un compilateur.
Pyrser est une boîte à outil en python destiné au SLE (Software Language Engineering) qui outre le fait de fournir de quoi faire le parsing et le typage d'un DSL fournit maintenant via son module PSL (Pyrser Selector Language) de quoi décrire facilement des passes de transformation de l'arbre. La base pour ce qu'on appel un back-end.&lt;/p&gt;
&lt;p&gt;Ce module pouvant avoir d'autres utilités qu'au sein d'un compilateur car travaillant avec n'importe quel structure de donnée python, la présentation permettra de comprendre le quoi et le comment de ce module pour un usage plus vaste au sein de la communauté.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lionel Auroux</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/pyrser-selector-language.html</guid></item><item><title>Python and Poland Directories.</title><link>https://pyvideo.org/pycon-fr-2017/python-and-poland-directories.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PythonLinks is the world's largest Python Directory.  Now that it includes a rapidly growing directory of Python companies organized by Region→Country→City-Company, along with their products, jobs, and links, such as the corporate blog, product reviews, and youtube videos, everyone really likes the site.&lt;/p&gt;
&lt;p&gt;PolandTrade.info is a directory of information about international business with Poland.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Lozinski</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/python-and-poland-directories.html</guid></item><item><title>Test d'infrastructures avec testinfra</title><link>https://pyvideo.org/pycon-fr-2017/test-dinfrastructures-avec-testinfra.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testinfra est un outil pour écrire des tests d'infrastructure en python. Il permet d'écrire de tests pour vos recettes écrites avec Puppet, Ansible, Chef ou encore Salt, ces tests sont alors réutilisables pour faire du monitoring.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://testinfra.readthedocs.io/en/latest/"&gt;https://testinfra.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philippe Pepiot</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/test-dinfrastructures-avec-testinfra.html</guid></item><item><title>Unicode and bytes démystifiés</title><link>https://pyvideo.org/pycon-fr-2017/unicode-and-bytes-demystifies.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Travailler avec l'unicode et les bytes étaient au mieux hasardeux au pire douloureux en Python 2, heureusement Python 3 arriva et mis de l'ordre dans ce bazar. Hélas, les vieilles habitudes ont la vie dure et migrer de Python 2 à Python 3 est souvent difficile quand on as pas saisit les subtilités derrière les concepts d'unicode et de bytes. Clarifions donc ceux-ci pour une migration heureuse vers Python 3 en 2017 !&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Boris Feld</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/unicode-and-bytes-demystifies.html</guid></item><item><title>Unicode, les encodages et les êtres humains</title><link>https://pyvideo.org/pycon-fr-2017/unicode-les-encodages-et-les-etres-humains.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vous savez peut-être que les êtres humains ont eu la bonne idée d'utiliser une large panoplie de langues et d'alphabets très différents les uns des autres. Lorsqu'ils ont inventé l'informatique, il leur a fallu trouver des solutions pour que les ordinateurs puissent représenter toutes ces langues à la fois. Bon, on ne va pas se le cacher, ils n'ont pas trouvé les bonnes solutions tout de suite… Mais en ces temps modernes très excitants, il est possible d'éradiquer les UnicodeDecodeError avec de la patience, de la concentration, quelques larmes de sang et les informations que vous pourrez glaner au long de cette conférence !&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guillaume Ayoub</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/unicode-les-encodages-et-les-etres-humains.html</guid></item><item><title>Weboob, le navigatueur</title><link>https://pyvideo.org/pycon-fr-2017/weboob-le-navigatueur.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nous faisons de plus en plus de choses avec un navigateur web, par opposition aux applications natives. Il en résulte des interfaces limitées, lentes et peu personnalisables qui essaient d'enfermer leurs utilisateurs.&lt;/p&gt;
&lt;p&gt;Vous verrez ce que Weboob (Web Outside Of Browsers) peut faire pour vous redonner le contrôle.
Il sera présenté le fonctionnement de Weboob, ses applications pratiques et les différentes possibilités de programmer avec.&lt;/p&gt;
&lt;p&gt;Nous ferons un point sur la genèse de Weboob, et ses évolutions futures.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Laurent Bachelier</dc:creator><pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-fr-2017/weboob-le-navigatueur.html</guid></item><item><title>As-tu déja pensé a contribuer a CPython</title><link>https://pyvideo.org/pycon-fr-2017/as-tu-deja-pense-a-contribuer-a-cpython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tu veux contribuer a un projet d'envergure mais tu ne sais pas sur quel projet, alors je vais te presenter CPython, comment y contribuer, car nous recherchons des développeurs.&lt;/p&gt;
&lt;p&gt;Seconde partie de la présentation donnée lors de PyConFR 2016.&lt;/p&gt;
&lt;p&gt;J'expliquerai aussi ce qu'il se passe dans le monde Python et que se passe-t-il depuis le passage a Github.
Nous avons maintenant le devguide qui s'y trouve, ainsi que le core-workflow et d'autres outils.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/as-tu-deja-pense-a-contribuer-a-cpython.html</guid></item><item><title>asyncio dans un système embarqué: bonne idée ?</title><link>https://pyvideo.org/pycon-fr-2017/asyncio-dans-un-systeme-embarque-bonne-idee.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Les services d'autopartage modernes comme Autolib ont besoin de communiquer avec les véhicules proposés aux clients: localisation, suivi du niveau de la batterie, déverrouillage des portes, etc. N'étant pas conçus pour cet usage, les voitures ont donc besoin d'un système embarqué s'occupant de cette communication.&lt;/p&gt;
&lt;p&gt;C'est sur ce système embarqué que nous avons mis (exclusivement) du Python 3 et de l'asyncio. Pari fou ? Idée géniale ? Petit retour d'expérience sur cette aventure.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rémi Cardona</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/asyncio-dans-un-systeme-embarque-bonne-idee.html</guid></item><item><title>C'est quoi être différent dans l'IT?</title><link>https://pyvideo.org/pycon-fr-2017/cest-quoi-etre-different-dans-lit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;On parle beaucoup des problèmatiques de diversité, parfois avec véhémence (e.g Google Manifesto). Pour une fois, j'aimerais juste revenir sur un point essentiel: c'est quoi être différent dans l'IT?
Prendre quelques minutes pour se mettre dans les chaussures d'une femme, d'une personne LGBT, d'un handicapé, d'une personne de couleur différente, de culture différente, ou même d'un milieu social différent dans un monde dominé par une culture fortement homogène avec ses propres codes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Haïkel Guémar</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/cest-quoi-etre-different-dans-lit.html</guid></item><item><title>Comment débuter avec MicroPython</title><link>https://pyvideo.org/pycon-fr-2017/comment-debuter-avec-micropython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MicroPython est un interpréteur Python conçu pour tenir sur des microcontrôleurs, des puces bon marché pouvant contrôler des composants électroniques (senseurs, moteurs, ...). Durant cette présentation, vous découvrirez en quoi consiste le projet, des idées de ce que vous pourriez réaliser avec MicroPython et des conseils pour débuter et commencer à réaliser ses premiers circuits:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Quelle carte à puce choisir ?&lt;/li&gt;
&lt;li&gt;Comment accéder à Python dessus ?&lt;/li&gt;
&lt;li&gt;Par quels types de composants commencer ? Où les trouver ?&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hugo Herter</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/comment-debuter-avec-micropython.html</guid></item><item><title>Django, d'un cauchemar à un rêve avec de bonnes pratiques.</title><link>https://pyvideo.org/pycon-fr-2017/django-dun-cauchemar-a-un-reve-avec-de-bonnes-pratiques.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Toi aussi tu connais les nuits blanches parce que tes collegues ont ecrit du code qui ne vaut rien, alors ce talk est pour toi. Comment passer d'un code legacy et non maintenu et illisible, a un code qui sent bon et qui ne flingue pas les yeux quand tu le lis.&lt;/p&gt;
&lt;p&gt;Sérieusement, c'est mon aventure depuis quelques mois que je vais te raconter et comment j'ai réussi à m'en sortir et a avoir des collègues contents.&lt;/p&gt;
&lt;p&gt;TDD, Best pratices&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/django-dun-cauchemar-a-un-reve-avec-de-bonnes-pratiques.html</guid></item><item><title>Enseigner est apprendre : devenez un·e meilleur·e dev en partageant vos connaissances</title><link>https://pyvideo.org/pycon-fr-2017/enseigner-est-apprendre-devenez-une-meilleure-dev-en-partageant-vos-connaissances.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quel que soit votre niveau en développement, écrire un cours permet d'améliorer ses compétences. Expliquer un concept incite à le voir sous un jour nouveau, hors des automatismes acquis par la pratique !
Faut-il attendre d'être &amp;quot;expert·e&amp;quot; pour publier un tutoriel ? Comment expliquer ce qui nous paraît si simple ou, à l'inverse, si compliqué ? Venez le découvrir !&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Céline Martinet Sanchez</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/enseigner-est-apprendre-devenez-une-meilleure-dev-en-partageant-vos-connaissances.html</guid></item><item><title>Faire passer de Django 1.8 à Django 1.10 un projet de plus de 150K ligne !</title><link>https://pyvideo.org/pycon-fr-2017/faire-passer-de-django-18-a-django-110-un-projet-de-plus-de-150k-ligne.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;L'un des derniers projet auquel j'ai participé consister à faire la migration de Django 1.8 à Django 1.10 pour un vraiment gros projet Django. Cette conférence sera l'occasion de détailler notre cheminement et de revenir sur cette expérience au final assez amusante. Après tout, vous aussi vous allez peut-être vouloir migrer votre gros applicatif django 1.8 ?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jean-Michel Armand</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/faire-passer-de-django-18-a-django-110-un-projet-de-plus-de-150k-ligne.html</guid></item><item><title>Formulaires et macros Jinja</title><link>https://pyvideo.org/pycon-fr-2017/formulaires-et-macros-jinja.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;L'équipe front de PeopleDoc a développé un framework UI en interne. L'ensemble des applications du groupe va progressivement migrer vers cette nouvelle interface.&lt;/p&gt;
&lt;p&gt;Nous expliquerons dans cette courte conférence comment nous avons exploité les macros de Jinja pour rendre les formulaires dans nos applications Django, ainsi que les différents tests qui ont été mis en place pour contrôler la qualité.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicolas Dubois</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/formulaires-et-macros-jinja.html</guid></item><item><title>Générer ses scénarios de test</title><link>https://pyvideo.org/pycon-fr-2017/generer-ses-scenarios-de-test.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Écrire des scénarios de test est souvent fastidieux, on écrit le scénario où tous ce passe bien, et on néglige les scénarios d'erreur. Lorsque l'on a le courage d'écrire les scénarios d'erreur, on a du mal à gérer la masse de code en commun entre chaque scénario de test. Dans cette présentation on va voir l'utilisation de Cricri, qui permet de faciliter l'écriture de scénario et de faire des tests hauts niveaux grâce au client REST.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vincent Maillol</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/generer-ses-scenarios-de-test.html</guid></item><item><title>Hooks de pre-commit pour git</title><link>https://pyvideo.org/pycon-fr-2017/hooks-de-pre-commit-pour-git.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En résumé, ma présentation abordera:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;le fonctionnement général des hooks de pre-commit git, et leur intérêt&lt;/li&gt;
&lt;li&gt;le gestionnaire de hooks open-sourcé par Yelp: &lt;a class="reference external" href="http://pre-commit.com/hooks.html"&gt;http://pre-commit.com/hooks.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;son fonctionnement interne&lt;/li&gt;
&lt;li&gt;plusieurs hooks bien utiles&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lucas Cimon</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/hooks-de-pre-commit-pour-git.html</guid></item><item><title>La philosophie de l'itération</title><link>https://pyvideo.org/pycon-fr-2017/la-philosophie-de-literation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quel est le point commun entre sorted, itertools.repeat et l'unpacking ? Quels traits du canard se cachent derrière un fichier, un dictionnaire et un générateur ? Dans le design de Python, rien n'a a été laissé au hasard, et dès qu'on s'initie à la philosophie de l'itération, on ne code plus jamais de la même façon.&lt;/p&gt;
&lt;p&gt;Oh, vous connaissez sans aucun doute la boucle for... Mais vous ne l'aviez jamais vue ainsi !&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Samuel</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/la-philosophie-de-literation.html</guid></item><item><title>Les Aventuriers du Packaging Perdu</title><link>https://pyvideo.org/pycon-fr-2017/les-aventuriers-du-packaging-perdu.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ecrire un package, c’est compliqué. Plein de questions à se poser. Nous, on s’en est posées un paquet. Twidi a écrit tout un tas de librairies open-sources et Joachim aime se creuser les méninges. Ce talk est un ensemble de conseils, trucs et astuces pour apprendre à transformer facilement les scripts.py qui traînent, en jolis packages tout propres. On voudrait que chaque pythonista, quelque soit son niveau, reparte avec une nouvelle corde à son arc et ne repousse plus au calendes grecques le passage au packaging.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joachim Jablon</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/les-aventuriers-du-packaging-perdu.html</guid></item><item><title>Les secrets d'un code pythonique</title><link>https://pyvideo.org/pycon-fr-2017/les-secrets-dun-code-pythonique.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Avez-vous déjà vu… un code pythonique ?&lt;/p&gt;
&lt;p&gt;« Pythonique », c’est un terme que l’on rencontre souvent au sein d’articles ou sur des forums, pour qualifier un code Python bien conçu, un code idiomatique (en accord avec les règles d’usage du langage, et donc compréhensible par tout développeur).&lt;/p&gt;
&lt;p&gt;Seulement, la distinction entre un bon code et un autre peut s’avérer floue, cette présentation a justement pour but de détailler les règles qui font qualifier un code de pythonique ou non.&lt;/p&gt;
&lt;p&gt;Il s'agit d'un tour d'horizon de la philosophie du langage, explicitant le fameux Zen of Python, passant par les règles de style, rappelant les autres principes à prendre en compte, appuyant les mécanismes du langage, explorant la bibliothèque standard, et s'achevant sur les bons réflexes à adopter.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Antoine Rozo</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/les-secrets-dun-code-pythonique.html</guid></item><item><title>L'interpréteur Python, quel sale type</title><link>https://pyvideo.org/pycon-fr-2017/linterpreteur-python-quel-sale-type.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;L'arrivée des annotations de fonction dans Python 3 a permi l'émergence d'outils prônant le typage statique dans Python, la plus grande réussite étant l'outil &lt;tt class="docutils literal"&gt;mypy&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;La mythologie autour du typage statique se veut rassurante, enfin on va pouvoir faire confiance au compilateur plutôt qu'à notre suite de test pour vérifier une forme de correction de programe, ce qui permettra de passer à l'échelle sereinement !&lt;/p&gt;
&lt;p&gt;Pendant cette présentation, on va s'amuser à décortiquer cette promesse de typage statique pour en faire ressortir les limites, en se basant sur l'outil &lt;tt class="docutils literal"&gt;mypy&lt;/tt&gt;, quelques paquets assez standard et quelques fonctions anodines mais pas moins coquines...&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Serge Guelton</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/linterpreteur-python-quel-sale-type.html</guid></item><item><title>Plone, 15 ans d'expérience feront toujours la différence</title><link>https://pyvideo.org/pycon-fr-2017/plone-15-ans-dexperience-feront-toujours-la-difference.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Comme tous les CMS majeurs, Plone est assez âgé, et il reste aujourd'hui le seul CMS Python d'envergure.
15 ans après sa création, Plone continue d'être une valeur sûre dans le monde concurrentiel des CMS. Loin d'être en bout de course, Plone relève aujourd'hui de nouveaux défis : passage au développement front, Zope 4, Python 3, solutions post-Zope, pile asynchrone, etc.&lt;/p&gt;
&lt;p&gt;Cette conférence fait une présentation de Plone 5, analyse les enjeux qui pèsent aujourd'hui sur le domaine des CMS, et explique les pistes que suit la communauté Plone pour l'avenir.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Bréhault</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/plone-15-ans-dexperience-feront-toujours-la-difference.html</guid></item><item><title>PostgreSQL et Python, un beau mariage</title><link>https://pyvideo.org/pycon-fr-2017/postgresql-et-python-un-beau-mariage.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vous utilisez PostgreSQL, mais savez-vous que vous pouvez utiliser et étendre PostgreSQL avec Python et PL/Python?
En tant normal, nous utilisons PostgreSQL via psycopg2, mais dans cette présentation, nous verrons comment travailler avec PostgreSQL via SQLAlchemy et Peewee, ou comment réaliser des migrations avec Alembic. De plus, je vous ferai la visite guidée de PL/Python qui vous permettra d'étendre PostgreSQL en Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/postgresql-et-python-un-beau-mariage.html</guid></item><item><title>pyroute2: configurer votre réseau sous Linux avec Python</title><link>https://pyvideo.org/pycon-fr-2017/pyroute2-configurer-votre-reseau-sous-linux-avec-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le noyau Linux a des fonctionnalités très avancées pour construire des équipements réseaux. Si des outils existent en ligne de commande pour tout faire (avec les outils iproute2, comme les commandes ip, tc, ss, ...), on est très vite limité si on tente de lancer ces commandes avec os.system ou équivalent, et d'analyser la sortie des commandes pour lire l'état du système.&lt;/p&gt;
&lt;p&gt;Heureusement, les outils iproute2 utilisent en réalité une API pour discuter avec le noyau : netlink. Cette interface est construite sur une simple socket, qui permet de recevoir des informations et d'en écrire. À travers cette socket, tout est configurable et il devient très simple de construire des applications complexes (surveillance des évènements en écoutant les messages, etc).&lt;/p&gt;
&lt;p&gt;Si la plupart des outils utilisant l'interface netlink sont écrits en C (ils n'ont qu'à reprendre les bibliothèques existantes pour iproute2), les développeurs Python ont une bibliothèque complète et 100% Python à disposition : pyroute2 (&lt;a class="reference external" href="https://github.com/svinota/pyroute2"&gt;https://github.com/svinota/pyroute2&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Cette présentation vous propose une rapide introduction à l'interface netlink et ses fonctionnalités (vous y apprendrez ainsi pourquoi ifconfig est obsolète depuis une dizaine d'année). Nous ferons ensuite le tour du fonctionnement de pyroute2, notamment comment s'effectue la construction des structures des messages netlink. Nous terminerons avec la liste des fonctionnalités et modules de pyroute2, qui permettent d'abstraire plus ou moins le système en fonction de vos besoins.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florent Fourcot</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/pyroute2-configurer-votre-reseau-sous-linux-avec-python.html</guid></item><item><title>Scalable and distributed applications in Python</title><link>https://pyvideo.org/pycon-fr-2017/scalable-and-distributed-applications-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a good language to write highly distributed applications, such as ones you can run on cloud computing platform. In this talk, I'll introduce different mechanisms, tools, and libraries that can be leveraged by Python to run code across multiple nodes and to spread workloads and handle high availability.
We'll see the traps that developers should not fall into and what are the good practice and design to distribute applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julien Danjou</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/scalable-and-distributed-applications-in-python.html</guid></item><item><title>Techniques de test avancées en Python</title><link>https://pyvideo.org/pycon-fr-2017/techniques-de-test-avancees-en-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cette conférence présente différentes techniques de test avancées en Python, telles que :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;lancer ses tests sur plusieurs versions de Python avec tox et pyenv&lt;/li&gt;
&lt;li&gt;remplacer un objet par une imitation avec unittest.mock&lt;/li&gt;
&lt;li&gt;geler le temps un instant avec freezegun&lt;/li&gt;
&lt;li&gt;simuler une API REST distante avec responses&lt;/li&gt;
&lt;li&gt;tester plusieurs scénarios avec des tests paramétrés&lt;/li&gt;
&lt;li&gt;tester des propriétés en générant automatiquement des cas aléatoires avec hypothesis&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cette conférence s'adresse aux développeurs Python de niveau intermédiaire ou avancé, qui ont déjà écrit des tests automatisés et veulent approfondir le sujet.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ronan Amicel</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/techniques-de-test-avancees-en-python.html</guid></item><item><title>Tester et simuler toute ma prod sur mon PC</title><link>https://pyvideo.org/pycon-fr-2017/tester-et-simuler-toute-ma-prod-sur-mon-pc.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En découpant notre monolithe en services disjoints, nous avons aussi rencontré le souci de bien vérifier que l'ensemble des briques fonctionnent toujours aussi bien ensemble une fois découpées: les tests unitaires sont loin d'être suffisants.&lt;/p&gt;
&lt;p&gt;Par ailleurs, comment tester un front-end qui communique avec 6 backends ? Comment simuler mon environnement de production fidèlement et rapidement ? Des synchronisations entre différentes bases de données ? Comment y intégrer de véritables objets communicants externes (une voiture par exemple) ?&lt;/p&gt;
&lt;p&gt;La réponse a été complexe à apporter; je vous propose de découvrir notre plateforme de tests fonctionnels, basée sur une VM, une standardisation de la codebase et quelques astuces malignes pour obtenir un environnement robuste, hackable, et qui permet enfin de développer vite et avec confiance des logiciels interconnectés.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Perron</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/tester-et-simuler-toute-ma-prod-sur-mon-pc.html</guid></item><item><title>Tester les performances, pourquoi et comment ?</title><link>https://pyvideo.org/pycon-fr-2017/tester-les-performances-pourquoi-et-comment.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La qualité est un avantage reconnu du logiciel libre. Les tests d'acceptance et de régression sont bien maîtrisés et utilisés par les projets libres.&lt;/p&gt;
&lt;p&gt;Mais un type de test manque encore et toujours aux projets libres : les tests de performance. Qui est content de mettre à jour son outil libre préféré pour se rendre compte qu'il lui faut maintenant deux fois plus de temps pour exécuter une commande fondamentale à son workflow ? Les performances font partie intégrante de l'expérience du développeur, les régressions y sont sournoises et douloureuses…&lt;/p&gt;
&lt;p&gt;L'une des raisons de cette lacune est la difficulté de mise en place de ce type de test. Nous l'avons expérimenté récemment dans la communauté Mercurial et nous vous proposons un retour d'expérience.&lt;/p&gt;
&lt;p&gt;Quels sont les bénéfices de la mise en place de tels tests ? Comment s'assurer que leurs résultats sont vraiment utilisables ? Quels sont les pièges à éviter ? Quelles approches pour quels besoins ? Quels outils utiliser pour collecter, analyser et visualiser les résultats ? Nous répondrons de notre mieux à toutes ces questions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Boris Feld</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/tester-les-performances-pourquoi-et-comment.html</guid></item><item><title>Une carte pour les amener tous, Et dans la connaissance les lier.</title><link>https://pyvideo.org/pycon-fr-2017/une-carte-pour-les-amener-tous-et-dans-la-connaissance-les-lier.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Née en Angleterre, la carte micro:bit est un outil mis à la disposition de 1 million d'élèves pour découvrir le monde numérique, la programmation et les objets connectés.&lt;/p&gt;
&lt;p&gt;La carte micro:bit est un formidable outil : enfants ou adultes, langages de programmation ou interfaces visuelles, codeurs ou makers tous peuvent se retrouver autour et partager un moment.&lt;/p&gt;
&lt;p&gt;Je vous propose de découvrir ce que l'on peu faire avec cette carte, son écosystème, par le biais de mes expériences avec MixTeen. L'ouverture technique des outils permettra de montrer la facilité d'évoluer de l'interface purement visuelle à des langages comme JavaScript ou Python.&lt;/p&gt;
&lt;p&gt;Les aspects communautaires et Opensource de cette carte permettront également d'aborder la question du partage des connaissances.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thierry Chantier</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/une-carte-pour-les-amener-tous-et-dans-la-connaissance-les-lier.html</guid></item><item><title>Va debugger ton Python!</title><link>https://pyvideo.org/pycon-fr-2017/va-debugger-ton-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Si tu penses que &lt;cite&gt;print()&lt;/cite&gt; est ta meilleure amie pour debugger ton script Python, alors il est vraiment necessaire que tu regardes cette presentation.&lt;/p&gt;
&lt;p&gt;Tu y decouvrira &lt;cite&gt;pdb&lt;/cite&gt; et &lt;cite&gt;gdb&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;Peut-etre aussi comment debugger en remote.&lt;/p&gt;
&lt;p&gt;En tout cas, ce talk est vraiment pour toi si tu penses que la fonction &lt;cite&gt;print()&lt;/cite&gt; est ton amie, alors je te donnerai des outils pour mieux t'aider.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/va-debugger-ton-python.html</guid></item><item><title>ZODB Ecosystem</title><link>https://pyvideo.org/pycon-fr-2017/zodb-ecosystem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ZODB is an object-oriented database written in Python and optimized in C.This talk introduces the database, presents important concepts, and reviews the tools available.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Lozinski</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/zodb-ecosystem.html</guid></item></channel></rss>