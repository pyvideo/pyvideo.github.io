<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Dan Palmer</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_dan-palmer.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-10-23T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Scaling Django to 500 apps</title><link href="https://pyvideo.org/djangocon-us-2021/scaling-django-to-500-apps.html" rel="alternate"></link><published>2021-10-23T00:00:00+00:00</published><updated>2021-10-23T00:00:00+00:00</updated><author><name>Dan Palmer</name></author><id>tag:pyvideo.org,2021-10-23:/djangocon-us-2021/scaling-django-to-500-apps.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever...
- Felt like a Django codebase is a bit of a mess?
- Struggled to find where something happens in a codebase?
- Felt like Microservices is the only way to manage your complexity?&lt;/p&gt;
&lt;p&gt;This talk is a tour of the techniques, conventions, and tools, that Thread uses to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever...
- Felt like a Django codebase is a bit of a mess?
- Struggled to find where something happens in a codebase?
- Felt like Microservices is the only way to manage your complexity?&lt;/p&gt;
&lt;p&gt;This talk is a tour of the techniques, conventions, and tools, that Thread uses to scale our Django codebase. These have helped us over the years to add more developers, more code, more functionality, and more frequent releases, while still being productive in one large Django codebase.&lt;/p&gt;
&lt;p&gt;We have nearly 500 apps, around 450 models, around 400k lines of Python, and around 1000 URL patterns. We've also had many more over the past 8 years and 120k commits. Despite this, we release around 10-20 times a day with a small engineering team.&lt;/p&gt;
&lt;p&gt;Some of the things we'll cover include:
- What goes into an app
- Structuring apps for readability
- Tools and techniques
- Issues to be aware of
- Things we got wrong when we started!
- Our wishlist for improvements to Django to better support apps&lt;/p&gt;
&lt;p&gt;This talk is targeted at those familiar with Django concepts, but those working day to day with other engineers on a Django codebase are likely to get the most out of it.&lt;/p&gt;
</content><category term="DjangoCon US 2021"></category></entry><entry><title>Scaling Django Codebases</title><link href="https://pyvideo.org/pycon-uk-2017/scaling-django-codebases.html" rel="alternate"></link><published>2017-10-27T16:30:00+01:00</published><updated>2017-10-27T16:30:00+01:00</updated><author><name>Dan Palmer</name></author><id>tag:pyvideo.org,2017-10-27:/pycon-uk-2017/scaling-django-codebases.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of Django's strengths is the clear project layout that it gives you, but there is more to staying productive on a large codebase than the Django architecture. This talk will go into some of the design decisions we've made that have helped us remain productive as we've scaled …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of Django's strengths is the clear project layout that it gives you, but there is more to staying productive on a large codebase than the Django architecture. This talk will go into some of the design decisions we've made that have helped us remain productive as we've scaled to 300 Django apps with a development team of 5. Intermediate and beginner Django developers will likely get the most out of this talk.&lt;/p&gt;
</content><category term="PyCon UK 2017"></category></entry></feed>