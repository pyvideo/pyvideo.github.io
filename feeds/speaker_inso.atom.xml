<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_inso.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-10-15T00:00:00+00:00</updated><entry><title>Qt et Asyncio avec Quamash</title><link href="https://pyvideo.org/pycon-fr-2016/qt-et-asyncio-avec-quamash.html" rel="alternate"></link><published>2016-10-15T00:00:00+00:00</published><updated>2016-10-15T00:00:00+00:00</updated><author><name>inso</name></author><id>tag:pyvideo.org,2016-10-15:pycon-fr-2016/qt-et-asyncio-avec-quamash.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Asyncio est un modèle asynchrone générique basé sur des event-loop. Il permet de s’interfacer avec n’importe quelle autre librairie proposant un mécanisme d’event-loop.
Dans cette présentation, on découvrira le potentiel de asyncio via la librairie Quamash (&lt;a class="reference external" href="https://github.com/harvimt/quamash"&gt;https://github.com/harvimt/quamash&lt;/a&gt;).
Quamash est une petite librairie développée par Mark Harviston et Arve Knudsen. Elle permet d'utiliser les mots clés &amp;quot;async&amp;quot; et &amp;quot;await&amp;quot; dans des applications Qt, mettant alors fin au Callback Hell des signaux/slots ! L’intégration de la boucle d’évènement Qt dans asyncio permet aussi d’utiliser toutes les autres librairies Asyncio dans Qt, telle que aiohttp.
On découvrira ensemble les possibilités de cette librairie. On commencera par une utilisation basique, puis  on analysera quelques décorateurs utiles pour se simplifier la vie dans l'usage de Quamash. On mélangera ensuite Qt, asyncio, et aiohttp. Enfin, on regardera comment développer des tests fonctionnels basés sur QTest et Asyncio. Le tout agrémenté de questions/réponses...&lt;/p&gt;
</summary></entry></feed>