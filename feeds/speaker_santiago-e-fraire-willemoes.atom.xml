<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_santiago-e-fraire-willemoes.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-11-02T00:00:00+00:00</updated><entry><title>Pytest: Yes Let's Go</title><link href="https://pyvideo.org/pycon-fr-2019/pytest-yes-lets-go.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Santiago E Fraire Willemoes</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/pytest-yes-lets-go.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;My intention with this talk is to help people understand how tests can help us write better code and how it can guide our designs. In this opportunity I'll show how to do this using pytest, and get most of its power.&lt;/p&gt;
&lt;p&gt;I'm a Python developer who also happens to have written some Java, which has a strong influence in how mocks came to be, and this has influenced my way of testing.&lt;/p&gt;
&lt;p&gt;Combine this with a sudden motivation to start doing TDD, and I'd say there's a lot to be shared.&lt;/p&gt;
&lt;p&gt;I will show different pytest features and how they can assist us in writing easier, and understandable tests.&lt;/p&gt;
&lt;div class="section" id="overview"&gt;
&lt;h4&gt;Overview&lt;/h4&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Some words about testing&lt;/li&gt;
&lt;li&gt;Understanding the core of pytest&lt;/li&gt;
&lt;li&gt;Tests as documentation&lt;/li&gt;
&lt;li&gt;Fixtures&lt;/li&gt;
&lt;li&gt;Parametrize&lt;/li&gt;
&lt;li&gt;Mocks / Understanding mocks / Using mocks&lt;/li&gt;
&lt;li&gt;Refactoring with tests in mind&lt;/li&gt;
&lt;li&gt;TDD&lt;/li&gt;
&lt;li&gt;Plugins&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</summary></entry></feed>