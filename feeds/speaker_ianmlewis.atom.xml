<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ianmlewis.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-09-14T00:00:00+00:00</updated><entry><title>Luigi, The Friendly Pipeline Plumber by IanMLewis</title><link href="https://pyvideo.org/pycon-apac-2013-in-japan/luigi-the-friendly-pipeline-plumber-by-ianmlewis.html" rel="alternate"></link><published>2013-09-14T00:00:00+00:00</published><updated>2013-09-14T00:00:00+00:00</updated><author><name>IanMLewis</name></author><id>tag:pyvideo.org,2013-09-14:pycon-apac-2013-in-japan/luigi-the-friendly-pipeline-plumber-by-ianmlewis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I will discuss how to make use of Luigi, which is a tool written by Spotify to manage a pipeline of long running batch processes. Luigi allows you to write long running batch processes in pure Python and provides built-in support for Hadoop mapreduce jobs and abstractions for HDFS and local file systems.
I'll show how to use Luigi to perform a simple set of chained mapreduce jobs and show how Luigi helps with dependency resolution, workflow management, and visualization.&lt;/p&gt;
</summary></entry></feed>