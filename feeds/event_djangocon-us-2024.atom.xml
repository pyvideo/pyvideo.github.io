<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - DjangoCon US 2024</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_djangocon-us-2024.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-09-25T00:00:00+00:00</updated><subtitle></subtitle><entry><title>A Brief History of Django</title><link href="https://pyvideo.org/djangocon-us-2024/a-brief-history-of-django.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Frank Wiles</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/a-brief-history-of-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We are better programmers than historians or archivists.  There are a few great stories from the very early days of Django and how we managed to get it Open Sourced.   They are told in the hallways and at dinner amongst us old timers, but as Django is poised to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We are better programmers than historians or archivists.  There are a few great stories from the very early days of Django and how we managed to get it Open Sourced.   They are told in the hallways and at dinner amongst us old timers, but as Django is poised to enter its second decade it seems appropriate to record some of these stories for posterity.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How did the make up of the team and The World Company itself impact early Django design choices?&lt;/li&gt;
&lt;li&gt;The infamous meeting where we got approval to Open Source Django&lt;/li&gt;
&lt;li&gt;Why the BSD license?&lt;/li&gt;
&lt;li&gt;Did we know what we were doing?&lt;/li&gt;
&lt;/ul&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>A Guided Tour Through Postgres Internals</title><link href="https://pyvideo.org/djangocon-us-2024/a-guided-tour-through-postgres-internals.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Elizabeth Garrett Christensen</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/a-guided-tour-through-postgres-internals.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Exercising your Postgres skills on this tour will give you a leg up in working with your Django app and understanding performance related to your database. The guide will provide all the gear, necessary commands, and queries for your adventure. You don’t want to miss the view of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Exercising your Postgres skills on this tour will give you a leg up in working with your Django app and understanding performance related to your database. The guide will provide all the gear, necessary commands, and queries for your adventure. You don’t want to miss the view of your database when we get to the top. All skill levels are welcome.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>API Maybe: Bootstrapping a Web Application circa 2024</title><link href="https://pyvideo.org/djangocon-us-2024/api-maybe-bootstrapping-a-web-application-circa-2024.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Carlton Gibson</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/api-maybe-bootstrapping-a-web-application-circa-2024.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The last couple of years seem to have changed everything. Particularly with HTMX, but also related technologies like Alpine.js and Tailwind CSS, we've rapidly gone from a world where seemingly the only option was &amp;quot;API First&amp;quot;.&lt;/p&gt;
&lt;p&gt;This is the story of bootstrapping a new application in these latter …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The last couple of years seem to have changed everything. Particularly with HTMX, but also related technologies like Alpine.js and Tailwind CSS, we've rapidly gone from a world where seemingly the only option was &amp;quot;API First&amp;quot;.&lt;/p&gt;
&lt;p&gt;This is the story of bootstrapping a new application in these latter days. On a core of almost old-school Django combined with HTMX, with a just sprinkling of Alpine.js, we've been able to build a rich and interactive web application, with hardly a JSON response or payload in sight.&lt;/p&gt;
&lt;p&gt;We'll show the integration patterns we've learnt, and what the limits of those might be.&lt;/p&gt;
&lt;p&gt;Finally, we'll look at what the future might bring. As we grow the application we're looking whether we will need edge computing, offline, and richer behaviour purely on the client. Is that the limit of the hypermedia driven approach? Is that where we need an API? It's not clear: it's still very much &amp;quot;API Maybe&amp;quot;.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Closing Remarks</title><link href="https://pyvideo.org/djangocon-us-2024/closing-remarks.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Peter Grandstaff</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/closing-remarks.html</id><content type="html"></content><category term="DjangoCon US 2024"></category></entry><entry><title>Django &amp; Celery: A love story of async proportions</title><link href="https://pyvideo.org/djangocon-us-2024/django-celery-a-love-story-of-async-proportions.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Hugo Bessa</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/django-celery-a-love-story-of-async-proportions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;### Django: A Framework for perfectionists with deadlines
1. Batteries included: Security, Authentication, Authorization, Administration, robust and mature ORM, etc.
2. Opinionated: Django defines the right path for doing things with it. And this open doors for building extensions.
3. Strong Community: Open source packages, events, meetups, active development of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;### Django: A Framework for perfectionists with deadlines
1. Batteries included: Security, Authentication, Authorization, Administration, robust and mature ORM, etc.
2. Opinionated: Django defines the right path for doing things with it. And this open doors for building extensions.
3. Strong Community: Open source packages, events, meetups, active development of the main framework&lt;/p&gt;
&lt;p&gt;### Django's performance issue is a thing. We need to be careful with:
1. Avoiding N+1s
2. Caching
3. Database indexes
4. Data denormalization
5. Running operations in the background&lt;/p&gt;
&lt;p&gt;### Why running operations in the background?
* Each Django process loads the framework core
* It's expensive to have too many processes
* Requests hold one Django process each while being processed
* Requests should be processed quickly so we don't hold a process for too long
* We need to give feedback to the user quickly, so they can move forward with other operations&lt;/p&gt;
&lt;p&gt;### What is Celery?
Asynchronous task queue or job queue which is based on distributed message passing&lt;/p&gt;
&lt;p&gt;### Why Celery?
1. Distributed: It separates async tasks execution from your application
2. Fast: Celery has a very small boilerplate and executes tasks REALLY fast
3. Integrated: You can write Celery tasks within your application, with access to models, services, functions, classes, etc&lt;/p&gt;
&lt;p&gt;### Celery 💘 Django
1. Documentation: We have dedicated docs for integrating them both
2. Django Settings: You can configure Celery from Django settings, not extra boilerplate
3. Django within tasks: Access to Django ORM and other tools on Celery tasks
4. Community: There are packages for enhancing the integration&lt;/p&gt;
&lt;p&gt;### How does it look like?
Real world example&lt;/p&gt;
&lt;p&gt;### What async tasks can be used for?
* Delegate long lasting jobs
* Execute remote API calls
* Prepare and cache values
* Spread bulk database insertions over time
* Execute recurring jobs&lt;/p&gt;
&lt;p&gt;### How does it work under the hood:
1. Django uses Celery client to queue a message on the Broker
2. Celery watches the Broker queue
3. Celery marks a task as started so other workers don't pick it
4. Celery marks a task as succeeded
5. Celery send the result to the Results Backend
6. Django may read the result from the Results Backend or not
&lt;strong&gt;Disclaimer:&lt;/strong&gt; these steps may vary depending on your configuration.&lt;/p&gt;
&lt;p&gt;### Tough love 💔: As in every good love story, it isn't always rainbows and butterflies.
* All connections between a service and the other may fail
* Concurrency becomes your enemy
* Failures may be harder to handle as they aren't sync anymore
* Issues that only happens in production
* Tasks that never finish
* Infinite retries
* Conflicting operations
* Task runs more than once
* Unbalanced queues
* Periodic tasks that are queues again before the previous one starts
* Outdated data&lt;/p&gt;
&lt;p&gt;### We're going to focus on these four problems:
1. Outdated data
3. Error feedback
2. Duplicate runs
4. Conflicting ops&lt;/p&gt;
&lt;p&gt;### Outdated data
* Sending complex data as parameters to a Celery task may result in conflicts because we cannot ensure the data doesn't change between the task being schedule and its execution.
* We must, as much as possible, pass ids and retrieve the most up-to-date data in the scope of the task.&lt;/p&gt;
&lt;p&gt;### Duplicate runs
* Depending of your Celery setup and task configuration, it may not be guaranteed that the task runs only once:
- Multiple workers may pick the same task at the same time
- A task may be interrupted and requeued&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;So we have to ensure:
- Atomicity
- Idempotence&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;### Complex feedback loops for errors
* User may receive a success message from the request but the whole operation may still fail.
* We need to develop flows that take this possibility into consideration and give the user a feedback of this error.
* We may also need to undo successful operations run by the web service.&lt;/p&gt;
&lt;p&gt;### Conflicting operations
* While a task haven't still run another operation is triggered by the user. This operation conflicts with the one that is still pending.
* Consider the following use cases:
1. User can add notes
2. User can delete a note
3. User can bulk create copies of a note&lt;/p&gt;
&lt;p&gt;#### Example of problematic interaction:
1. User creates a Note
2. User creates 10 copies of the note, this runs in a background task
3. User deletes the original note before the task to copy the 10 notes runs
4. Task runs, but the original note isn't available anymore so it cannot be copied&lt;/p&gt;
&lt;p&gt;#### There are many solutions to this:
* Implementing soft delete on the note so it's available even after delete
* Canceling pending tasks before deleting
* Locking notes with pending operations&lt;/p&gt;
&lt;p&gt;### Couples therapy pt1 (or some tips that help the relationship to flow)
* Will retry tasks? use exponential backoffs
* Tasks shouldn't raise exceptions: handle all of them and send reports
* Monitoring is essential, celery-flower can help
* ALWAYS_EAGER makes your tasks synchronous and can help on debugging and development
* RDB is a remote debugger, it can help debug celery tasks&lt;/p&gt;
&lt;p&gt;### Couples therapy pt2 (knowing the boundaries of the relationship)
* Celery is excellent for asynchronous tasks and for doing simple jobs. For complex workflows it may not be very reliable, there are open issues for that, and many complaints of lost tasks and unpredictable behaviors.
* Long running tasks may be problematic. Ideally split the task into smaller ones or use a different tool.
* Monitoring tools are very limited. You may need to implement some monitoring yourself. Ex.: queues heartbeat.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Django User Model: Past, Present, and Future</title><link href="https://pyvideo.org/djangocon-us-2024/django-user-model-past-present-and-future.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Will Vincent</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/django-user-model-past-present-and-future.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django's default User model is now 20 years old and, in the words of former Django Fellow Carlton Gibson, a &amp;quot;leaky battery.&amp;quot; This talk examines the historical basis for User and past efforts to update or replace it. It evaluates current best practices, including custom user models and third-party …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django's default User model is now 20 years old and, in the words of former Django Fellow Carlton Gibson, a &amp;quot;leaky battery.&amp;quot; This talk examines the historical basis for User and past efforts to update or replace it. It evaluates current best practices, including custom user models and third-party packages, that support modern user authentication patterns. And it looks forward to future updates to User that support Django's goal of advancing the state of the art in web development.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Hidden gems of Django 5.x</title><link href="https://pyvideo.org/djangocon-us-2024/hidden-gems-of-django-5x.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Sarah Boyce</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/hidden-gems-of-django-5x.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Did you know Django doesn't include any bug fixes or code optimisations in it's release notes?
Each feature release (.0, .1, .2) only draws attention to a handful of features and classes many as &amp;quot;minor&amp;quot;, restricting them to a very small summarising bullet point.&lt;/p&gt;
&lt;p&gt;If you're looking for more …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Did you know Django doesn't include any bug fixes or code optimisations in it's release notes?
Each feature release (.0, .1, .2) only draws attention to a handful of features and classes many as &amp;quot;minor&amp;quot;, restricting them to a very small summarising bullet point.&lt;/p&gt;
&lt;p&gt;If you're looking for more reasons to upgrade to the latest feature branch or are curious about hidden gems - this is the talk for you.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Introduction to OpenTelemetry with Django</title><link href="https://pyvideo.org/djangocon-us-2024/introduction-to-opentelemetry-with-django.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Jessica Garson</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/introduction-to-opentelemetry-with-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenTelemetry (OTel) is an observability framework for cloud-native software. It provides standardized APIs, libraries, and tools to collect telemetry data such as metrics, logs, and traces. OTel is open source and vendor neutral, designed to work with any backend system.&lt;/p&gt;
&lt;p&gt;This talk will present several examples demonstrating why logs …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenTelemetry (OTel) is an observability framework for cloud-native software. It provides standardized APIs, libraries, and tools to collect telemetry data such as metrics, logs, and traces. OTel is open source and vendor neutral, designed to work with any backend system.&lt;/p&gt;
&lt;p&gt;This talk will present several examples demonstrating why logs alone may be insufficient, along with the benefits of incorporating extra signals. These benefits include enhanced visibility into the execution flow and call timing, metrics on how users utilize services to pinpoint unnecessary ones, and the ability to detect patterns, such as peak usage times, which aids in production planning and scaling.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Keynote - The Fellowship of the Pony</title><link href="https://pyvideo.org/djangocon-us-2024/keynote-the-fellowship-of-the-pony.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Natalia Bidart</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/keynote-the-fellowship-of-the-pony.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This keynote will present the Django Fellowship program, highlighting its critical role in the maintenance and development of the Django project. It will cover the purpose and significance of the Fellowship, illustrating how it contributes to the project's overall success.&lt;/p&gt;
&lt;p&gt;The talk will explore the daily tasks and responsibilities …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This keynote will present the Django Fellowship program, highlighting its critical role in the maintenance and development of the Django project. It will cover the purpose and significance of the Fellowship, illustrating how it contributes to the project's overall success.&lt;/p&gt;
&lt;p&gt;The talk will explore the daily tasks and responsibilities of a Django Fellow, including their priorities and key activities, with a focus on the contributing process . We will reflect on how we can make the most of the current Fellowship program, which is supported by 1.5 Fellows, and also on how the active involvement of the community is essential to Django's evolution.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Lightning Talks (Wednesday)</title><link href="https://pyvideo.org/djangocon-us-2024/lightning-talks-wednesday.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Andrew Mshar</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/lightning-talks-wednesday.html</id><content type="html"></content><category term="DjangoCon US 2024"></category></entry><entry><title>Opening Remarks (Wednesday)</title><link href="https://pyvideo.org/djangocon-us-2024/opening-remarks-wednesday.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Peter Grandstaff</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/opening-remarks-wednesday.html</id><content type="html"></content><category term="DjangoCon US 2024"></category></entry><entry><title>Panel Discussion: Open, friendly, and welcoming: on the history and future of mentoring in Django</title><link href="https://pyvideo.org/djangocon-us-2024/panel-discussion-open-friendly-and-welcoming-on-the-history-and-future-of-mentoring-in-django.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Afi Maame Dufie</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/panel-discussion-open-friendly-and-welcoming-on-the-history-and-future-of-mentoring-in-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lacey Henschel will moderate a panel discussion on the history and future of communities within the Django community.
We'll explore how mentoring, community involvement, and support networks are important in keeping Django resilient. By highlighting the work of groups like Django Girls, PyLadies, Djangonaut Space, and Black Python Devs …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lacey Henschel will moderate a panel discussion on the history and future of communities within the Django community.
We'll explore how mentoring, community involvement, and support networks are important in keeping Django resilient. By highlighting the work of groups like Django Girls, PyLadies, Djangonaut Space, and Black Python Devs, we’ll see how these initiatives not only foster personal growth but also play a vital role in keeping the Django community strong and sustainable for the long term.&lt;/p&gt;
&lt;p&gt;We’ll discuss:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Panelists' unique journeys in the Django community&lt;/li&gt;
&lt;li&gt;The role of mentorship, sponsorship, and advocacy in these communities and in Django's future&lt;/li&gt;
&lt;li&gt;Successes and challenges in building supportive, sustainable communities&lt;/li&gt;
&lt;li&gt;How the Django community can keep investing in long-term success&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our panelists include:
- &lt;strong&gt;Lacey Henschel&lt;/strong&gt;, moderator, former Django Girls contributor and organizer
- &lt;strong&gt;Keanya Phelps&lt;/strong&gt;, Django Girls organizer and participant, mentor in Djangonaut Space
- &lt;strong&gt;Afi Maame Dufie&lt;/strong&gt;, involved in Django Girls, PyLadies, and Black Python Devs
- &lt;strong&gt;Sarah Boyce&lt;/strong&gt;, Django Fellow, co-founder and mentor in Djangonaut Space
- &lt;strong&gt;Carlton Gibson&lt;/strong&gt;, former Django Fellow, mentor in Djangonaut Space, mentor and coordinator of Django's efforts in Google Summer of Code, and Django Girls coach and advisory board member.
- &lt;strong&gt;Velda Kiara&lt;/strong&gt;, DEFNA director, former [AnitaB.org](&lt;a class="reference external" href="http://anitab.org/"&gt;http://anitab.org/&lt;/a&gt;) Kenya Community Lead, former Open Source Community Africa Nairobi organizer and contributor, participant in Djangonaut Space, and current contributor and leader of Black Python Devs&lt;/p&gt;
&lt;p&gt;Join us as we reflect, explore, and hopefully inspire even more excitement and support for our broader Django communities.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Streaming Video in Django | Demystified</title><link href="https://pyvideo.org/djangocon-us-2024/streaming-video-in-django-demystified.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Vaarun Sinha</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/streaming-video-in-django-demystified.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;## General details&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Level&lt;/strong&gt;: All
&lt;strong&gt;Categories&lt;/strong&gt; : Async, Django Channels, Video processing&lt;/p&gt;
&lt;p&gt;## Table of Contents&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Introduction&lt;/strong&gt;
- Brief overview of video streaming
- Explain me like I'm 5 : How does Video Streaming work?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Video Streaming Protocols&lt;/strong&gt;
- Understanding HLS (HTTP Live Streaming)
- Overview of MPEG-DASH (Dynamic Adaptive Streaming over HTTP)
- HLS vs MPEG-DASH: A …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;## General details&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Level&lt;/strong&gt;: All
&lt;strong&gt;Categories&lt;/strong&gt; : Async, Django Channels, Video processing&lt;/p&gt;
&lt;p&gt;## Table of Contents&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Introduction&lt;/strong&gt;
- Brief overview of video streaming
- Explain me like I'm 5 : How does Video Streaming work?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Video Streaming Protocols&lt;/strong&gt;
- Understanding HLS (HTTP Live Streaming)
- Overview of MPEG-DASH (Dynamic Adaptive Streaming over HTTP)
- HLS vs MPEG-DASH: A comparative analysis&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Processing Approaches&lt;/strong&gt;
- Defining the model for media processing
- Introduction to FFmpeg
- Exploring Microservices for Media Processing
- Celery Task: An asynchronous processing approach
- Async vs Sync model functions : Model Function Approach
- Handling media processing on upload
- Make the user do all the work Approach&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Video Streaming Implementation&lt;/strong&gt;
- Frontend demonstration with media file logic&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scaling Video Streaming with Django Channels&lt;/strong&gt;
- Explaining the role of Django Channels
- Diagram illustrating how Django Channels facilitates scaling
- Code samples demonstrating Django Channels in action&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;
- Summing up key points
- Emphasizing the importance of efficient video streaming architectures&lt;/li&gt;
&lt;/ol&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>WebRTC with Django, Channels, HTMX, and coturn</title><link href="https://pyvideo.org/djangocon-us-2024/webrtc-with-django-channels-htmx-and-coturn.html" rel="alternate"></link><published>2024-09-25T00:00:00+00:00</published><updated>2024-09-25T00:00:00+00:00</updated><author><name>Ken Whitesell</name></author><id>tag:pyvideo.org,2024-09-25:/djangocon-us-2024/webrtc-with-django-channels-htmx-and-coturn.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Audio/Video conferencing has become standard in many areas for augmenting communications among individuals. Modern browsers facilitate this by including support for Web Real Time Communications (WebRTC).&lt;/p&gt;
&lt;p&gt;WebRTC itself is a point-to-point protocol, which means that two browsers using this for a video call are talking directly to each …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Audio/Video conferencing has become standard in many areas for augmenting communications among individuals. Modern browsers facilitate this by including support for Web Real Time Communications (WebRTC).&lt;/p&gt;
&lt;p&gt;WebRTC itself is a point-to-point protocol, which means that two browsers using this for a video call are talking directly to each other. But, before that can happen, the those browsers need to know that each other exists and are looking to establish this connection. Then they need to negotiate the parameters for the connection.&lt;/p&gt;
&lt;p&gt;Then there are many network-related issues that can affect the ability for those two browsers to connect.  Things like firewalls and Network Address Translation (NAT) can affect how each side &amp;quot;sees&amp;quot; the other side, further complicating the situation.&lt;/p&gt;
&lt;p&gt;All these issues have known solutions. The WebRTC APIs have matured to the point where they can be considered reasonably stable and reliable. It has become practical to incorporate these solutions in a Django-based website.&lt;/p&gt;
&lt;p&gt;This session will discuss one implementation of a Django-based website that facilitates a group video conferencing system, using Channels as the signalling mechanism, HTMX for page-content management, and coturn as the NAT transveral and and gateway server.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Deploying Django migrations at Kraken scale</title><link href="https://pyvideo.org/djangocon-us-2024/deploying-django-migrations-at-kraken-scale.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Tim Bell</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/deploying-django-migrations-at-kraken-scale.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kraken is an energy retail system built on Django. It is currently in use by over 20 clients around the world, including the largest energy retailer in the UK, Octopus Energy, which developed Kraken.&lt;/p&gt;
&lt;p&gt;When Kraken started out over 8 years ago supporting a single small client, applying Django …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kraken is an energy retail system built on Django. It is currently in use by over 20 clients around the world, including the largest energy retailer in the UK, Octopus Energy, which developed Kraken.&lt;/p&gt;
&lt;p&gt;When Kraken started out over 8 years ago supporting a single small client, applying Django migrations to make database schema changes was easy. Any migration that might be slightly dangerous was deployed outside business hours when the system was relatively quiet and there was no risk of disrupting the work of customer service staff. Kraken has now grown: the code has around 350 Django apps, with over 9000 migration files between them, and some database tables have billions of rows. With Kraken operating in 8 time zones around the globe, there is now no such thing as &amp;quot;outside business hours&amp;quot;. We have needed to find other ways of deploying migrations that might be risky.&lt;/p&gt;
&lt;p&gt;There are two main risk factors with applying migrations: taking exclusive database locks, and needing a long time to apply. Exclusive locks can interrupt normal system operations, while slow migrations can hold up the deployment process, potentially preventing later deployments for a long period.&lt;/p&gt;
&lt;p&gt;This talk describes how we write migrations so that they avoid risks where possible, and how we deploy them in a scalable way, avoiding the need for manual intervention as much as possible. We describe techniques that use standard features in the Django migration system, as well as a system we have developed to complement standard Django migrations. The techniques described should be generally applicable to most large Django installations.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Django + Alpine.js + htmx Ups &amp; Downs</title><link href="https://pyvideo.org/djangocon-us-2024/django-alpinejs-htmx-ups-downs.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Karen Tracey</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/django-alpinejs-htmx-ups-downs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A few years ago we started to hear about the toolkits htmx and Alpine.js as a powerful combination that could  be used with Django to enable development of web applications that offer user experience akin to a single page application without the overhead of adopting a heavyweight front-end …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A few years ago we started to hear about the toolkits htmx and Alpine.js as a powerful combination that could  be used with Django to enable development of web applications that offer user experience akin to a single page application without the overhead of adopting a heavyweight front-end framework such as React. We were excited by the promise and adopted these tools in a few projects. In this talk we'll cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The promise we saw in this tool combination&lt;/li&gt;
&lt;li&gt;The upside: examples of exciting wins in ways of using these tools that we recommend continuing&lt;/li&gt;
&lt;li&gt;The downside: some rough edges and areas of concern where we recommend caution&lt;/li&gt;
&lt;li&gt;Our overall assessment and plans regarding continued use of this combination&lt;/li&gt;
&lt;/ul&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Django UI Components for Perfectionists with Deadlines</title><link href="https://pyvideo.org/djangocon-us-2024/django-ui-components-for-perfectionists-with-deadlines.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Hernan Lozano</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/django-ui-components-for-perfectionists-with-deadlines.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We pay great attention to how to write composable python code (with inheritance, decorators, modules, namespaces, etc). But when it comes to architecting the templates of your website, this is often overlooked, which rapidly degenerates in tons of copy&amp;amp;paste of html, css and javascript.
Some might say that …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We pay great attention to how to write composable python code (with inheritance, decorators, modules, namespaces, etc). But when it comes to architecting the templates of your website, this is often overlooked, which rapidly degenerates in tons of copy&amp;amp;paste of html, css and javascript.
Some might say that this is what React or Vue (et al) are all about and already solve, but having to render HTML on the client can increase the complexity of the application (introducing build steps, another language, more dependencies, etc).&lt;/p&gt;
&lt;p&gt;Writing reusable and composable UI components can be achieved using the good 'ol django templates, with the help of some libraries to fill in the gaps (like django-components, django-cotton and TailwindCSS) that we will explore and suggest as a possible solution.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Faster, leaner, greener: 10x lower website carbon emissions</title><link href="https://pyvideo.org/djangocon-us-2024/faster-leaner-greener-10x-lower-website-carbon-emissions.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Thibaud Colas</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/faster-leaner-greener-10x-lower-website-carbon-emissions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We’ll first look at a quantitative assessment of thousands of Django websites on the web, to get a good picture of the Django ecosystem’s overall emissions, and understand which specific aspects of a project contribute to overall power and resource usage.&lt;/p&gt;
&lt;p&gt;We’ll then dive deeper on …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We’ll first look at a quantitative assessment of thousands of Django websites on the web, to get a good picture of the Django ecosystem’s overall emissions, and understand which specific aspects of a project contribute to overall power and resource usage.&lt;/p&gt;
&lt;p&gt;We’ll then dive deeper on a single Django website’s energy use, studying djangoproject.com specifically, as a good example of a high-traffic website with a big footprint. We’ll use different performance testing, power measurement, and generic static analysis tools to understand how the site could be improved. We will review common issues, straightforward improvements, and more “pie in the sky” changes that are attainable with effort:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Energy consumption of front-end technology (React, HTMX, vanilla JS)&lt;/li&gt;
&lt;li&gt;How design affects emissions (light vs. dark mode, image assets, fonts)&lt;/li&gt;
&lt;li&gt;Application server: serverless Django options to reduce emissions&lt;/li&gt;
&lt;li&gt;Database: how SQLite and other &amp;quot;serverless&amp;quot; database options can reduce emissions&lt;/li&gt;
&lt;li&gt;Overlap with common Django performance considerations&lt;/li&gt;
&lt;/ul&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Fighting Homelessness with Django</title><link href="https://pyvideo.org/djangocon-us-2024/fighting-homelessness-with-django.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Benjamin "Zags" Zagorsky</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/fighting-homelessness-with-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;My company built CHAMP, the online application for state-aided subsidized housing for the state of Massachusetts.  We did it in Django.  This site is used to find housing for thousands of low-income and homeless applicants a year.  The site handles over 10,000 monthly users at all times of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;My company built CHAMP, the online application for state-aided subsidized housing for the state of Massachusetts.  We did it in Django.  This site is used to find housing for thousands of low-income and homeless applicants a year.  The site handles over 10,000 monthly users at all times of day.  We've supported it in production for over five years, and deployed major new features continuously throughout that time.&lt;/p&gt;
&lt;p&gt;In this talk, we'll cover the best tricks of Django we used to build the site, as well as the biggest challenges we faced and how we solved them.  This includes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Using Django with Vue&lt;/li&gt;
&lt;li&gt;Keeping the site running fast despite high user load and large data volumes&lt;/li&gt;
&lt;li&gt;Managing duplicate applications in the system&lt;/li&gt;
&lt;li&gt;Regularly replicating gigabytes of data to a data warehouse&lt;/li&gt;
&lt;li&gt;Migrating data from 230 organizations into the system&lt;/li&gt;
&lt;li&gt;Zero-downtime deployments&lt;/li&gt;
&lt;li&gt;And more!&lt;/li&gt;
&lt;/ul&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Finding 2.0</title><link href="https://pyvideo.org/djangocon-us-2024/finding-20.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Marc Gibbons</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/finding-20.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the world of library development, achieving version 2.0 often takes years, if it's achieved at all. Surprisingly, nearly 90% of packages published to PyPI using semantic versioning have a major release number of less than two. What makes reaching this milestone so elusive?&lt;/p&gt;
&lt;p&gt;If we applied software …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the world of library development, achieving version 2.0 often takes years, if it's achieved at all. Surprisingly, nearly 90% of packages published to PyPI using semantic versioning have a major release number of less than two. What makes reaching this milestone so elusive?&lt;/p&gt;
&lt;p&gt;If we applied software versioning to our lives, what version would we give ourselves? Perhaps in our formative years as students, we'd be a part of a 0.x series, and as we establish careers and become self-sufficient, we might progress to a 1.x scheme. But do we settle there?&lt;/p&gt;
&lt;p&gt;Just like software libraries, our lives require maintenance, and despite our best intentions, hacks and workarounds inevitably infiltrate our routines. As these multiply and compound, our health can suffer. Do we wait for disaster to strike? Or, can we take a proactive approach in not only addressing problem areas but also striving for more?&lt;/p&gt;
&lt;p&gt;Together, we'll explore certain risks to our wellbeing inherent to our profession as software developers: sedentary lifestyles, long work hours, and social isolation, and how we can plan and design our next major release for success.&lt;/p&gt;
&lt;p&gt;&amp;quot;Finding 2.0&amp;quot; is an invitation to reimagine what's possible across life areas. Whether facing health struggles, burnout, or feeling stuck in a rut, this talk provides practical insights and actionable steps for rewriting the code of your life and embracing a future of health and fulfillment.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>How to design and implement extensible software with plugins</title><link href="https://pyvideo.org/djangocon-us-2024/how-to-design-and-implement-extensible-software-with-plugins.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Simon Willison</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/how-to-design-and-implement-extensible-software-with-plugins.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;When to consider adding plugin support to your project&lt;/li&gt;
&lt;li&gt;Understanding [Pluggy](&lt;a class="reference external" href="https://pluggy.readthedocs.io/"&gt;https://pluggy.readthedocs.io/&lt;/a&gt;), the Python world's most mature plugin mechanism and possibly the most effective plugin framework in any language&lt;/li&gt;
&lt;li&gt;How [entrypoints](&lt;a class="reference external" href="https://packaging.python.org/en/latest/specifications/entry-points/"&gt;https://packaging.python.org/en/latest/specifications/entry-points/&lt;/a&gt;) enable simply installing …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;When to consider adding plugin support to your project&lt;/li&gt;
&lt;li&gt;Understanding [Pluggy](&lt;a class="reference external" href="https://pluggy.readthedocs.io/"&gt;https://pluggy.readthedocs.io/&lt;/a&gt;), the Python world's most mature plugin mechanism and possibly the most effective plugin framework in any language&lt;/li&gt;
&lt;li&gt;How [entrypoints](&lt;a class="reference external" href="https://packaging.python.org/en/latest/specifications/entry-points/"&gt;https://packaging.python.org/en/latest/specifications/entry-points/&lt;/a&gt;) enable simply installing a new Python package to register it as an installed plugin&lt;/li&gt;
&lt;li&gt;How to effectively design your plugin hooks: the ways in which your software can be customized by plugins&lt;/li&gt;
&lt;li&gt;Traps to avoid in implementing plugins&lt;/li&gt;
&lt;li&gt;Documentation! How to ensure potential authors have everything they need to start writing plugins&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'll illustrate the talk with examples of different plugin patterns I have tried in my own software.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>If We Had $1,000,000: What Could The DSF Do With 4x Its Budget?</title><link href="https://pyvideo.org/djangocon-us-2024/if-we-had-1000000-what-could-the-dsf-do-with-4x-its-budget.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Jacob Kaplan-Moss</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/if-we-had-1000000-what-could-the-dsf-do-with-4x-its-budget.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk comes to you in three parts:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Part 1: the DSF's budget.&lt;/strong&gt; That (roughly) $250k annual budget: where does it come from and where does it go? I'll break down our various sources of funding and the major ways we spend money. I'll look mostly at the 2024 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk comes to you in three parts:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Part 1: the DSF's budget.&lt;/strong&gt; That (roughly) $250k annual budget: where does it come from and where does it go? I'll break down our various sources of funding and the major ways we spend money. I'll look mostly at the 2024 budget, but will talk a bit about how these numbers fluctuate over time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Part 2: If We Had $1,000,000.&lt;/strong&gt; Let's imagine that magically our budget grew by 4x, to $1m a year. What would we be able to do with all that money? What a budget that size mean to Django developers and the global Django community. I'll talk about a all wish list items that I and other DSF members have -- things the DSF _could_ be doing, but isn't, because we don't have the cash.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Part 3: How Do We Get There?&lt;/strong&gt; Unfortunately, we can't magic a 4x budget increase into existence — we have to do the work. How might we -- people both within and outside the DSF -- move towards increased funding. How can we incrementally move towards a future where the DSF is able to do lots more? This won't just be a &amp;quot;you should donate to the DSF&amp;quot; section. But also it will, just a little bit.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Keynote - How To Be A Developer and Other Lies We Tell Ourselves</title><link href="https://pyvideo.org/djangocon-us-2024/keynote-how-to-be-a-developer-and-other-lies-we-tell-ourselves.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Mario Munoz</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/keynote-how-to-be-a-developer-and-other-lies-we-tell-ourselves.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the children's book &amp;quot;Am I Even A Bee?&amp;quot; by Felicity Muth, Osmia begins feeling uneasy when she notices that she doesn't look like other bees at all. She even notices that some flies, moths, or beetles look more like bees than she does. Her perspective changes when she …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the children's book &amp;quot;Am I Even A Bee?&amp;quot; by Felicity Muth, Osmia begins feeling uneasy when she notices that she doesn't look like other bees at all. She even notices that some flies, moths, or beetles look more like bees than she does. Her perspective changes when she bumps into another unlikely bee named Xyla.&lt;/p&gt;
&lt;p&gt;Our journey as developers sometimes follows a similar pattern. We may question what it means to be a developer in the first place and we're not quite sure how we fit in. On the other end, when we grow to be more experienced, we may inadvertently (or sometimes consciously) make it more difficult for others to _belong_.&lt;/p&gt;
&lt;p&gt;What is the role of community in an individual's sense of identity, and what are some of the ways that we try to come to terms with our place within the developer landscape? Let's find out... together!&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Lessons from E2E Testing Web Applications</title><link href="https://pyvideo.org/djangocon-us-2024/lessons-from-e2e-testing-web-applications.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Avindra Fernando</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/lessons-from-e2e-testing-web-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lots of companies are investing in end to end testing to release high quality software and remain competitive in today’s market. Now with libraries like Cypress and Playwright, end to end testing web applications have become very intuitive and a whole lot of fun.&lt;/p&gt;
&lt;p&gt;Over the years, after …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lots of companies are investing in end to end testing to release high quality software and remain competitive in today’s market. Now with libraries like Cypress and Playwright, end to end testing web applications have become very intuitive and a whole lot of fun.&lt;/p&gt;
&lt;p&gt;Over the years, after working with these tools, there are many lessons that I have learned the hard way. These valuable lessons taught me how to write robust and reliable tests that vastly improved the quality of my applications.&lt;/p&gt;
&lt;p&gt;In this session, let's discuss best practices that I found useful to write E2E tests. These guidelines will enable you to release high quality software to your clients.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Level Up Your Django Performance: Identifying and Taming N+1 Queries</title><link href="https://pyvideo.org/djangocon-us-2024/level-up-your-django-performance-identifying-and-taming-n1-queries.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Mohammad Ahtasham ul Hassan</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/level-up-your-django-performance-identifying-and-taming-n1-queries.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, attendees will embark on a journey to understand and overcome the notorious N+1 query problem in Django development. The session will begin with an exploration of the importance of performance optimization in Django applications, emphasizing the critical role of efficient database queries in achieving robust …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, attendees will embark on a journey to understand and overcome the notorious N+1 query problem in Django development. The session will begin with an exploration of the importance of performance optimization in Django applications, emphasizing the critical role of efficient database queries in achieving robust and scalable web solutions.&lt;/p&gt;
&lt;p&gt;We will delve into the intricacies of the N+1 query problem, unraveling its origins and impact on application performance. Through real-world examples and case studies, attendees will gain a deeper understanding of how N+1 queries manifest and the detrimental effects they can have on Django applications, such as increased latency, decreased throughput, and degraded user experience.&lt;/p&gt;
&lt;p&gt;The core of the presentation will focus on practical solutions to mitigate the N+1 query problem and optimize Django code for enhanced performance. Attendees will learn how to identify N+1 queries in their projects and understand the underlying causes behind them. We will explore a range of techniques and best practices for resolving N+1 queries, including lazy loading, prefetching, and leveraging Django's ORM features such as select_related and prefetch_related.&lt;/p&gt;
&lt;p&gt;Moreover, the attendees will discover how to utilize debugging tools and techniques, including the Django Debug Toolbar and SQL logging, to diagnose and address N+1 query issues effectively.&lt;/p&gt;
&lt;p&gt;As the presentation draws to a close, we'll leave attendees with a thought-provoking question: &amp;quot;Why do some experts caution that fixing certain N+1 queries could potentially hurt performance?&amp;quot; This question invites attendees to delve deeper into the complexities of performance optimization and encourages further research and exploration into the nuanced considerations of optimizing database queries in Django applications.&lt;/p&gt;
&lt;p&gt;By the end of the presentation, attendees will be equipped with actionable insights and practical skills to:
Identify and diagnose N+1 queries in their Django projects.
Implement effective solutions to optimize application performance and eliminate performance bottlenecks.
Utilize debugging tools and techniques to pinpoint and resolve N+1 query issues efficiently.&lt;/p&gt;
&lt;p&gt;This presentation is designed for Django developers of all experience levels, from beginners to seasoned professionals. Whether you're new to Django or a seasoned veteran, join us to deepen your understanding of Django performance optimization and elevate your development skills to the next level.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Lightning Talks (Tuesday)</title><link href="https://pyvideo.org/djangocon-us-2024/lightning-talks-tuesday.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Andrew Mshar</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/lightning-talks-tuesday.html</id><content type="html"></content><category term="DjangoCon US 2024"></category></entry><entry><title>Maps with Django</title><link href="https://pyvideo.org/djangocon-us-2024/maps-with-django.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Paolo Melchiorre</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/maps-with-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A &lt;em&gt;map&lt;/em&gt; in a website is the best way to make geographic data easily accessible to users because it represents, in a simple way, the information relating to a specific geographical area and is used by many online services.&lt;/p&gt;
&lt;p&gt;In this talk, we'll see how to create a web …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A &lt;em&gt;map&lt;/em&gt; in a website is the best way to make geographic data easily accessible to users because it represents, in a simple way, the information relating to a specific geographical area and is used by many online services.&lt;/p&gt;
&lt;p&gt;In this talk, we'll see how to create a web &lt;em&gt;map&lt;/em&gt; with the &lt;strong&gt;Python&lt;/strong&gt; based web framework &lt;strong&gt;Django&lt;/strong&gt; using its &lt;strong&gt;GeoDjango&lt;/strong&gt; module, storing geographic data in your local database on which to run geospatial queries.&lt;/p&gt;
&lt;p&gt;Through this talk, you can learn how to add a &lt;em&gt;map&lt;/em&gt; to your website, starting from a simple &lt;em&gt;map&lt;/em&gt; based on &lt;strong&gt;Spatialite/SQLite&lt;/strong&gt; up to a more complex and interactive &lt;em&gt;map&lt;/em&gt; based on &lt;strong&gt;PostGIS/PostgreSQL&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The talk will be structured like a &lt;strong&gt;hike&lt;/strong&gt; in the mountains, it will start gradually and then increase in &lt;strong&gt;difficulty&lt;/strong&gt;, stopping in key &lt;strong&gt;passages&lt;/strong&gt; and then arriving at the final &lt;strong&gt;goal&lt;/strong&gt;.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Only reliable Data: Protecting Database Integrity</title><link href="https://pyvideo.org/djangocon-us-2024/only-reliable-data-protecting-database-integrity.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Eva Nanyonga</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/only-reliable-data-protecting-database-integrity.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Database transactions are incredibly important for the reliability of financial operations. The reliability and accuracy of these tarnsactions hinge upon robust database integrity measures. This presentation will explore key concepts essential to maintaining database integrity within financial ledger environments using the Django Framework.&lt;/p&gt;
&lt;p&gt;Attendees will gain insights into the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Database transactions are incredibly important for the reliability of financial operations. The reliability and accuracy of these tarnsactions hinge upon robust database integrity measures. This presentation will explore key concepts essential to maintaining database integrity within financial ledger environments using the Django Framework.&lt;/p&gt;
&lt;p&gt;Attendees will gain insights into the following aspects:
1. Transaction Atomicity: Understanding how atomic database transactions are performed in Django to ensure data consistency.
2. Concurrency Control: Using the Django ORM to manage concurrent transactions to safeguard data against corruption.
3. Durability through Logging: Performing transaction logging to ensuring help teams recover from failures.&lt;/p&gt;
&lt;p&gt;This talk will address real-world challenges and considerations in implementing and maintaining database integrity using the Django framework. Practical examples and case studies will be shared to illustrate the application of database integrity with the help of the Django ORM.&lt;/p&gt;
&lt;p&gt;Whether the attendee is a database administrator or a developer, this session will provide valuable insights into the foundational principles and strategies for upholding database integrity in critical financial environments.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Opening Remarks (Tuesday)</title><link href="https://pyvideo.org/djangocon-us-2024/opening-remarks-tuesday.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Velda Kiara</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/opening-remarks-tuesday.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Velda will introduce Tuesday's keynote and go over any administrative notes for the day.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Operations: The Missing Django Piece</title><link href="https://pyvideo.org/djangocon-us-2024/operations-the-missing-django-piece.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Micah Lyle</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/operations-the-missing-django-piece.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I’m going to demonstrate a new perspective on how to structure Django codebases using something I call “Operations”, so that Django codebases can scale well with any amount of features or complexity inside an application as it grows over time.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Optimizing remote work: Pull Requests, Stand-ups, and emojis</title><link href="https://pyvideo.org/djangocon-us-2024/optimizing-remote-work-pull-requests-stand-ups-and-emojis.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Kasey Kelly</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/optimizing-remote-work-pull-requests-stand-ups-and-emojis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Positive asynchronous working relationships have always been a core feature of what makes Django successful. Many of us have spent our careers working asynchronously across International borders and timezones, but it's new to many of our clients, employers, and project stakeholders.&lt;/p&gt;
&lt;p&gt;In this talk, I'd like to discuss an …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Positive asynchronous working relationships have always been a core feature of what makes Django successful. Many of us have spent our careers working asynchronously across International borders and timezones, but it's new to many of our clients, employers, and project stakeholders.&lt;/p&gt;
&lt;p&gt;In this talk, I'd like to discuss an important ingredient of successful asynchronous work: clear, concise communication. We'll discuss the importance of establishing clear boundaries and expectations early and often. We'll learn how to write excellent issues and pull requests, and how to tailor your writing to various audiences and purposes that arise in every project. We'll talk about when scheduling a meeting is actually a good idea, and how to communicate your successes, status reports, and blockers to those who need to know.&lt;/p&gt;
&lt;p&gt;Clear communication is the key to good working relationships. Good working relationships make for happier, more productive teams, healthier work/life balance, and ultimately optimized profits and delivery. Let's work better together!&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>PostgreSQL Beyond Django: Strategies to Get Max Performance</title><link href="https://pyvideo.org/djangocon-us-2024/postgresql-beyond-django-strategies-to-get-max-performance.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Alvaro Justen</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/postgresql-beyond-django-strategies-to-get-max-performance.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PostgreSQL has been evolving in functionality and performance for decades, yet we often fail to extract full potential of the most advanced FL/OSS RDBMS. In this talk, I'll cover techniques for optimizing database performance and reducing space usage, beyond the basics of modeling and indexing and exploring powerful …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PostgreSQL has been evolving in functionality and performance for decades, yet we often fail to extract full potential of the most advanced FL/OSS RDBMS. In this talk, I'll cover techniques for optimizing database performance and reducing space usage, beyond the basics of modeling and indexing and exploring powerful features such as triggers and bulk data import/export (not the Django one).
If you want to handle millions of records easily and lower your infrastructure costs, this talk is for you! All the features mentioned will be presented using a simple Django app, created specifically for this talk. Topics to be covered:
- Introduction of the speaker
- Context about the dataset used on examples (52M+ rows)
- Issues caused by inadequate data modeling (from wrong types to field ordering)
- Understanding query execution
- Indexing, triggers, and other tools
- Using postgres' full-text search the right way
- Importing and exporting large amounts of data with Python&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Seamless Transition: How I Converted an Existing MySQL Database to be Fully Managed by Django Migrations Framework</title><link href="https://pyvideo.org/djangocon-us-2024/seamless-transition-how-i-converted-an-existing-mysql-database-to-be-fully-managed-by-django-migrations-framework.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Daniel Ramas</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/seamless-transition-how-i-converted-an-existing-mysql-database-to-be-fully-managed-by-django-migrations-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, I aim to demystify the complexities of database migrations in Django, catering to audiences with basic knowledge of the framework. Through a structured approach, I will delve into three key topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Understanding Django's Migration Process: I will elucidate how Django determines and executes migrations, shedding light …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, I aim to demystify the complexities of database migrations in Django, catering to audiences with basic knowledge of the framework. Through a structured approach, I will delve into three key topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Understanding Django's Migration Process: I will elucidate how Django determines and executes migrations, shedding light on the underlying mechanisms that govern this process.&lt;/li&gt;
&lt;li&gt;Managing Dependencies in Migration Files: Delving deeper, I'll explore how dependencies within migration files impact the migration process, offering insights into best practices to navigate potential challenges.&lt;/li&gt;
&lt;li&gt;Practical Steps for Migrating an Existing Database: Leveraging my own experience, I will guide attendees through a step-by-step methodology for migrating an existing database to Django. This will include:&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Ensuring consistency in the id field type and configuring the DEFAULT_AUTO_FIELD setting accordingly. I'll also address strategies for handling inconsistencies.&lt;/li&gt;
&lt;li&gt;Utilizing 'manage.py inspectdb' to generate models and incorporating them into the 'models.py' file.&lt;/li&gt;
&lt;li&gt;Transitioning models from 'managed=False' to 'managed=True' to initiate migration tracking.&lt;/li&gt;
&lt;li&gt;Handling existing Many-to-Many Relationships seamlessly.&lt;/li&gt;
&lt;li&gt;Generating initial migration files with 'manage.py makemigrations' and faking the initial migration with 'manage.py migrate --fake'.&lt;/li&gt;
&lt;li&gt;Optionally, creating ForeignKey fields and enforcing backend foreign key relationships.&lt;/li&gt;
&lt;li&gt;Addressing the cleanup of orphaned columns in preparation for conversion to Foreign Keys.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This talk will be structured with slides covering the first two topics, followed by a practical demonstration of the third topic through real-world examples and code snippets.&lt;/p&gt;
&lt;p&gt;It's important to note that while my methodology was successful with a MySQL database, variations may occur with other database languages. In the event of selection, I am committed to collaborating with a mentor to adapt the content for broader applicability.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Upgrading EOL Django: A Journey from V1 to V5</title><link href="https://pyvideo.org/djangocon-us-2024/upgrading-eol-django-a-journey-from-v1-to-v5.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Michael Riley</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/upgrading-eol-django-a-journey-from-v1-to-v5.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Finding out that an application is using a legacy version of a framework can be a stressful and intimidating task, knowing that you're going to be responsible for bringing the application back to a supported version.  This talk will cover what this type of journey would look like in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Finding out that an application is using a legacy version of a framework can be a stressful and intimidating task, knowing that you're going to be responsible for bringing the application back to a supported version.  This talk will cover what this type of journey would look like in the Django ecosystem by using a real world example of a small Django project that was acquired from its original developer. We will be covering multiple different scenarios and also be providing helpful tips for approaching legacy applications in general along the way.&lt;/p&gt;
&lt;p&gt;By the end of the talk, the attendees will be able to:
- Know where to find critical documentation for moving between Django versions
- Identify the ideal upgrade path
- Learn and Explore ways to deal with legacy code
- How to effectively evaluate which version of dependencies need to be upgraded to.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>You got that nice tech salary, now what?</title><link href="https://pyvideo.org/djangocon-us-2024/you-got-that-nice-tech-salary-now-what.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Tim Schilling</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/you-got-that-nice-tech-salary-now-what.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talking about finances is awful.&lt;/p&gt;
&lt;p&gt;There are several things I'd rather talk about with a group of strangers before finances. However, I believe that as a part of the tech community, there's a moral responsibility to make sound personal financial decisions because you earn a comfortable salary. I have …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talking about finances is awful.&lt;/p&gt;
&lt;p&gt;There are several things I'd rather talk about with a group of strangers before finances. However, I believe that as a part of the tech community, there's a moral responsibility to make sound personal financial decisions because you earn a comfortable salary. I have made several mistakes along my career, and I'm probably still making some. The goal here is to make it a bit easier for us to have these conversations.&lt;/p&gt;
&lt;p&gt;I was the first in my family to graduate from college. One of my parents attended some college. They knew how to balance a budget, and they knew to max your employer's 401k matching program. Beyond that, there wasn't much of a plan.&lt;/p&gt;
&lt;p&gt;I didn't have any financial literacy when I entered the tech industry. In fact, I fell prey to a corporate insurance provider, bought an insurance-investment type product and contributed to it for years! I've left money in my savings account because I was scared of the market.&lt;/p&gt;
&lt;p&gt;At the end of this talk you will have a basic understanding of:
- The importance of planning, budgeting and saving
- Where to put your savings
- Maximizing employer contributions
- How to evaluate an index fund&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>A Related Matter: Optimizing your webapp by using django-debug-toolbar, select_related(), and prefetch_related()</title><link href="https://pyvideo.org/djangocon-us-2024/a-related-matter-optimizing-your-webapp-by-using-django-debug-toolbar-select_related-and-prefetch_related.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Christopher Adams</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/a-related-matter-optimizing-your-webapp-by-using-django-debug-toolbar-select_related-and-prefetch_related.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What happens in an HTTP request-response cycle is often difficult to understand. Optimizing database queries is a crucial aspect of web development, yet it often remains shrouded in mystery for many beginners. By attending this talk, attendees will gain practical insights into how to leverage django-debug-toolbar to inspect an …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What happens in an HTTP request-response cycle is often difficult to understand. Optimizing database queries is a crucial aspect of web development, yet it often remains shrouded in mystery for many beginners. By attending this talk, attendees will gain practical insights into how to leverage django-debug-toolbar to inspect an HTTP request-response cycle. By revealing and fixing pathological queries, developers can improve application performance and user experience. The talk will cover indexing, select_related, prefetching, and other optimization strategies.&lt;/p&gt;
&lt;p&gt;During the session, I will guide attendees through the following key points:
1. Understanding Query Execution: Exploring the anatomy of a QuerySet, focusing on immutability, lazy evaluation, and the fact that a QuerySet is not a query.
2. Introduction to django-debug-toolbar: An overview of what django-debug-toolbar is and how it can be integrated into Django projects.
3. Identifying Pathological Queries: Techniques for using django-debug-toolbar to identify slow or inefficient database queries within an HTTP request.
4. Strategies for Optimization: Practical tips and strategies for optimizing identified queries, including indexing, select_related, prefetching, and other optimization.
5. Real-World Examples: Illustrative examples and case studies demonstrating the impact of query optimization on application performance.&lt;/p&gt;
&lt;p&gt;This talk is ideal for beginners in Django development who are looking to deepen their understanding of query optimization and improve the performance of their Django applications. Attendees should have a basic familiarity with Django concepts such as models and basic database design, but no prior experience with query optimization is required.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>An Opinionated Guide to Modern Django Forms</title><link href="https://pyvideo.org/djangocon-us-2024/an-opinionated-guide-to-modern-django-forms.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Josh Thomas</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/an-opinionated-guide-to-modern-django-forms.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django forms have experienced a significant renaissance within the Django community, after years of being what felt like an afterthought. Recent releases to Django have brought major improvements to built-in form templating and rendering. Instead of writing APIs to support forms rendered by the JS framework of the week …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django forms have experienced a significant renaissance within the Django community, after years of being what felt like an afterthought. Recent releases to Django have brought major improvements to built-in form templating and rendering. Instead of writing APIs to support forms rendered by the JS framework of the week, you can now use Django forms to render dynamic, interactive, responsive forms using only the batteries provided by Django, various third-party Django packages, and a handful of small, focused JavaScript utility libraries. And if you're willing to do a little bit of the leg work yourself, you can even get by without those third-party Django packages.&lt;/p&gt;
&lt;p&gt;In recent years, web development has started to see a shift away from complex JavaScript-heavy architectures toward more streamlined, HTML-centric approaches. Technologies like HTMX and Unpoly.js enable SPA-like experiences through server-rendered HTML, pairing nicely with Django’s template language. Similarly, libraries like Alpine.js and Stimulus enhance static HTML with dynamic behaviors inline, eliminating the need for comprehensive frameworks. Additionally, CSS frameworks like Tailwind CSS adopt a utility-first approach, simplifying the creation of  maintainable CSS.&lt;/p&gt;
&lt;p&gt;This shift towards an HTML-centric approach to building web applications is complemented nicely by the recent improvements to Django forms. By leveraging these new capabilities, Django forms can now be used to render forms that are more easily maintainable, more responsive, more accessible, and -- to the end user -- just as interactive as one built using one of the many JS frameworks.&lt;/p&gt;
&lt;p&gt;By the end of this talk, attendees will have a deeper understanding of the power and potential of Django forms, equipped with the knowledge to implement them effectively in their projects.&lt;/p&gt;
&lt;p&gt;### Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to Django forms, including a quick historical overview of where they have come&lt;/li&gt;
&lt;li&gt;Exploration of a few new Django form features: template-based form rendering and &lt;cite&gt;as_field_group&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Styling forms, fields, and errors using modern CSS features, with a focus on Tailwind CSS&lt;/li&gt;
&lt;li&gt;Dynamic behavior with minimal JavaScript, with a focus on Alpine.js&lt;/li&gt;
&lt;li&gt;Inline validation using AJAX, with a focus on HTMX&lt;/li&gt;
&lt;li&gt;Useful third-party Django form packages and why you may not need them anymore&lt;/li&gt;
&lt;li&gt;Hands-on demonstration of a simple form using all of the above&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk will be suitable for anyone who has a basic understanding of Django.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Choosing Wisely: SPA vs. HTMX for Your Next Web Project</title><link href="https://pyvideo.org/djangocon-us-2024/choosing-wisely-spa-vs-htmx-for-your-next-web-project.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Chris May</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/choosing-wisely-spa-vs-htmx-for-your-next-web-project.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As web developers, we want to select the right architecture pattern for our projects. Web applications are inherently complex, and your choice will affect how you manage that complexity.&lt;/p&gt;
&lt;p&gt;Choosing a SPA pattern offers rich user experiences with rich interactivity and navigational transitions, but it also introduces complexity in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As web developers, we want to select the right architecture pattern for our projects. Web applications are inherently complex, and your choice will affect how you manage that complexity.&lt;/p&gt;
&lt;p&gt;Choosing a SPA pattern offers rich user experiences with rich interactivity and navigational transitions, but it also introduces complexity in state management, development cost, maintenance, security, and performance.&lt;/p&gt;
&lt;p&gt;On the other hand, server-rendered applications have been around for decades and have, until recently, struggled to match the user experience of SPAs. However, thanks to the evolution of browser standards and a crop of lightweight JavaScript frameworks, server-rendered apps have caught up and are once again a compelling option.&lt;/p&gt;
&lt;p&gt;In this talk, we'll delve into the factors influencing the choice between SPAs and server-rendered apps. We'll discuss considerations such as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;State Management&lt;/strong&gt;: Your choices affect how you'll need to manage the state of today's data-rich apps.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User Experience Requirements&lt;/strong&gt;: Assess the application's level of interactivity and real-time updates and how well each pattern performs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance and Scalability&lt;/strong&gt;: Understanding the impact of page load times, network latency, server resources, and client resources on the application's performance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Project Constraints&lt;/strong&gt;: Consider time, budget, and infrastructure limitations that may influence the choice of architecture pattern.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Development Team Expertise&lt;/strong&gt;: Evaluating the team's familiarity with JavaScript frameworks and server-side rendering.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Through practical examples and case studies, we'll demonstrate how to evaluate these factors and select the most appropriate architecture pattern for a given project. Whether you're building a content-driven website, a real-time collaboration platform, or an enterprise application, this talk will provide valuable insights to help you choose between SPAs and server-rendered apps to deliver the best possible user and developer experience.&lt;/p&gt;
&lt;p&gt;## Key Points&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Understand state management in today's data-rich applications.&lt;/li&gt;
&lt;li&gt;Explain how the microservice pattern affects pattern choice.&lt;/li&gt;
&lt;li&gt;Practical guidelines and decision-making frameworks for choosing between SPAs, HTMX, and AlpineJS based on real-world scenarios.&lt;/li&gt;
&lt;li&gt;Case studies and examples illustrating the application of each architecture pattern in different types of web applications.&lt;/li&gt;
&lt;li&gt;Tips and best practices for optimizing performance, maintaining code quality, and ensuring scalability.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By the end of this talk, attendees can confidently choose when to use a SPA or server-rendered pattern based on their project's needs and constraints. They will identify the trade-offs between complexity, performance, and user experience, enabling them to deliver high-quality web applications efficiently and effectively.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Django Ledger | Uniting Developers and Accountants for Innovation.</title><link href="https://pyvideo.org/djangocon-us-2024/django-ledger-uniting-developers-and-accountants-for-innovation.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Miguel Sanda</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/django-ledger-uniting-developers-and-accountants-for-innovation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why Django Ledger?
In the world of money apps, it's not just about transactions; it's about understanding how each financial decision ripples out. It's like dropping a pebble in a pond and watching the waves spread. Every dollar spent or saved can have a bigger effect than you realize …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why Django Ledger?
In the world of money apps, it's not just about transactions; it's about understanding how each financial decision ripples out. It's like dropping a pebble in a pond and watching the waves spread. Every dollar spent or saved can have a bigger effect than you realize. Django Ledger looks at both sides of the money picture because it is a double entry accounting system. This capability makes sure the insights aren't just whole, but you can act on them right away. It's like having a financial monitor that helps you see the bigger picture to take the right steps forward.&lt;/p&gt;
&lt;p&gt;I'm a developer, why should I care?.
Developers aren't accountants, and accountants aren't exactly tech savvy. It feels like they're worlds apart. But what if we could bring them together? Imagine the power of combining the skills and knowledge of both sides to create something truly amazing and innovative.&lt;/p&gt;
&lt;p&gt;By using Django Ledger's capabilities to implement transaction blueprints, developers can easily work their magic on their projects. It's like having a toolbox filled with all the right tools to make your coding journey smoother and more efficient.&lt;/p&gt;
&lt;p&gt;I'm an accountant or business owner, why should I care?
For accountants and business owners, it's a game-changer. Adding Django Ledger to the stack means getting instant financial stats and insights whenever you need them. It's like having a financial advisor at your fingertips, ready to give you the guidance you need to make smart decisions.&lt;/p&gt;
&lt;p&gt;Best of Both Worlds&lt;/p&gt;
&lt;p&gt;Django Ledger makes it smooth for developers to blend financial stuff into their projects, while giving accountants and business owners real-time financial statements. It is like a bridge that connects these two worlds, making collaboration and understanding easier between them. It's like breaking down barriers and creating new possibilities for innovation and growth in the tech and finance world.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Django: the web framework that changed my life</title><link href="https://pyvideo.org/djangocon-us-2024/django-the-web-framework-that-changed-my-life.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Sage Abdullah</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/django-the-web-framework-that-changed-my-life.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The year was 2018. I was studying computer science at the University of Indonesia. I learned Django as part of a web programming course. At the time, Django felt just like any other framework out there – it's part of the tech stack that you use.&lt;/p&gt;
&lt;p&gt;A year later, I …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The year was 2018. I was studying computer science at the University of Indonesia. I learned Django as part of a web programming course. At the time, Django felt just like any other framework out there – it's part of the tech stack that you use.&lt;/p&gt;
&lt;p&gt;A year later, I tried my luck with Django in [Google Summer of Code](&lt;a class="reference external" href="https://g.co/gsoc"&gt;https://g.co/gsoc&lt;/a&gt;). I took a deep dive into Django's codebase to implement the cross-database &lt;cite&gt;JSONField&lt;/cite&gt;. The feature managed to make it in Django 3.1.&lt;/p&gt;
&lt;p&gt;Fast forward to now, I've got a job in the UK to work on the Django-powered Wagtail CMS.  Since then, I've had the opportunity to give talks at conferences in Europe and the US, including this one.&lt;/p&gt;
&lt;p&gt;This is a story of how Django changed ~~my life~~ people's lives – and how you played a part in it.&lt;/p&gt;
&lt;p&gt;In this talk, we'll go through:
- How Django can be used to teach web programming
- Django's participation in Google Summer of Code
- The awesome Django community and what it means for us
- What we can do to make Django change the lives of even more people&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Empowering Tertiary Students: Introducing PyClubs for Enhanced Python Skills and Community Engagement</title><link href="https://pyvideo.org/djangocon-us-2024/empowering-tertiary-students-introducing-pyclubs-for-enhanced-python-skills-and-community-engagement.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Johanan Oppong Amoateng</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/empowering-tertiary-students-introducing-pyclubs-for-enhanced-python-skills-and-community-engagement.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Description:&lt;/p&gt;
&lt;p&gt;PyClubs, an initiative spearheaded by Python Ghana, represents a groundbreaking effort to empower tertiary students across the nation through the power of Python programming. As a leading organization dedicated to promoting Python and fostering a vibrant tech ecosystem in Ghana, Python Ghana has taken the initiative to launch …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Description:&lt;/p&gt;
&lt;p&gt;PyClubs, an initiative spearheaded by Python Ghana, represents a groundbreaking effort to empower tertiary students across the nation through the power of Python programming. As a leading organization dedicated to promoting Python and fostering a vibrant tech ecosystem in Ghana, Python Ghana has taken the initiative to launch PyClubs in collaboration with universities and colleges.&lt;/p&gt;
&lt;p&gt;PyClubs serve as dynamic hubs where students can come together to enhance their Python skills, collaborate on innovative projects, and engage with a supportive community of fellow enthusiasts. Under the guidance and support of Python Ghana, PyClubs provide students with access to resources, mentorship, and networking opportunities that are essential for success in today's tech-driven world.&lt;/p&gt;
&lt;p&gt;This talk shines a spotlight on the transformative impact of PyClubs as an initiative of Python Ghana. By harnessing Python Ghana's expertise, networks, and resources, PyClubs offer students a unique platform to gain practical experience, expand their knowledge, and prepare for rewarding careers in the tech industry.&lt;/p&gt;
&lt;p&gt;Furthermore, Python Ghana's commitment to inclusivity and diversity ensures that PyClubs serve as inclusive spaces where students from all backgrounds feel valued and empowered. Through outreach programs, workshops, and community events, Python Ghana and PyClubs work hand in hand to foster a culture of diversity, equity, and inclusion in the tech community.&lt;/p&gt;
&lt;p&gt;Attendees of this talk will gain valuable insights into the collaborative efforts between Python Ghana and PyClubs in driving innovation, excellence, and inclusivity in Python education. They will be inspired to get involved in PyClubs initiatives and leverage Python Ghana's resources to unlock their full potential as future leaders in the tech industry. Join us in this exciting journey of learning, collaboration, and empowerment with PyClubs and Python Ghana.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Error Culture</title><link href="https://pyvideo.org/djangocon-us-2024/error-culture.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Ryan Cheley</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/error-culture.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In my talk titled &amp;quot;Error Culture,&amp;quot; I take a deep dive into the widespread but often overlooked issue of how organizations manage error alerts in technology and programming domains. The core of my discussion revolves around the concept of 'error culture'—the organizational tendency to ignore or minimize the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In my talk titled &amp;quot;Error Culture,&amp;quot; I take a deep dive into the widespread but often overlooked issue of how organizations manage error alerts in technology and programming domains. The core of my discussion revolves around the concept of 'error culture'—the organizational tendency to ignore or minimize the significance of error notifications due to their frequency and the false perception of irrelevance. This paradox arises from our dependency on technology and the need to be alerted to failures, which results in a deluge of alerts, many of which are false positives or not actionable, leading to a dangerous desensitization to potentially critical warnings.&lt;/p&gt;
&lt;p&gt;Through my analysis, I address the serious consequences of error culture, such as the risk it poses by allowing significant alerts to slip through the cracks and the challenges it creates in integrating new team members who lack critical, undocumented knowledge. I pinpoint several root causes behind this phenomenon, including alert fatigue, misunderstandings about the alerts' purpose, and a culture that inadvertently celebrates crisis resolution over preventive measures.&lt;/p&gt;
&lt;p&gt;My experience has led me to identify certain symptoms that indicate the presence of an error culture, such as an over reliance on email rules to filter alerts and a widespread uncertainty about why certain alerts are received in the first place. To move forward, I propose a refined strategy for managing alerts to ensure they are meaningful, actionable, and directed at the appropriate recipients. This approach involves clarifying the significance of each alert, tailoring them to the correct audience, and providing actionable resolution steps.&lt;/p&gt;
&lt;p&gt;This talk will leave you with a call to action, urging a shift towards a more mindful and efficient approach to error management. By reevaluating our interaction with technology alerts, I believe we can transform them from noise into valuable signals that enhance organizational efficiency, resilience, and growth. Join me as I outline practical steps for combating error culture and fostering a proactive error management environment within our organizations.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Keynote - Power to the People who Teach the People</title><link href="https://pyvideo.org/djangocon-us-2024/keynote-power-to-the-people-who-teach-the-people.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Sheena O'Connell</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/keynote-power-to-the-people-who-teach-the-people.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One thing I absolutely love about the Python community is the fact that there are so many people with teacher's hearts. Teaching is an amazing thing, you can change a person's life just by spending some time with them, having conversations, showing them stuff.&lt;/p&gt;
&lt;p&gt;It's normal for people with …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One thing I absolutely love about the Python community is the fact that there are so many people with teacher's hearts. Teaching is an amazing thing, you can change a person's life just by spending some time with them, having conversations, showing them stuff.&lt;/p&gt;
&lt;p&gt;It's normal for people with software development skills to take on teaching roles - this might be through formal or informal workplace mentorship, community involvement, through being hired to teach or any number of other situations. Teaching and sharing knowledge is often a part of the job.&lt;/p&gt;
&lt;p&gt;Software development and teaching are two distinct skill sets. There is a science to teaching and learning - there is a robust body of knowledge, there are techniques, mindsets and patterns that make teaching effective. And, on the flip side, there are mistakes, anti-patterns and myths that are very much worth avoiding.&lt;/p&gt;
&lt;p&gt;It's perfectly normal for software developers to take on teaching roles and responsibilities, but it's exceedingly rare for software developers to receive any training in how to teach well.&lt;/p&gt;
&lt;p&gt;I've been working in alternative education for&amp;nbsp;quite some time, I've learned a lot of lessons along the way. In this talk, I'll share some of the most impactful lessons I've learned.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Lightning Talks (Monday)</title><link href="https://pyvideo.org/djangocon-us-2024/lightning-talks-monday.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Andrew Mshar</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/lightning-talks-monday.html</id><content type="html"></content><category term="DjangoCon US 2024"></category></entry><entry><title>One Thousand and One Django Sites</title><link href="https://pyvideo.org/djangocon-us-2024/one-thousand-and-one-django-sites.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Vince Salvino</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/one-thousand-and-one-django-sites.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will touch on strategies and challenges we have encountered along our journey of hosting over 1,000 Django/Wagtail sites. Told in the storybook style of &amp;quot;One Thousand and One Nights&amp;quot; (a.k.a. &amp;quot;Arabian Nights&amp;quot;) this talk will feature real-world anecdotes about: technical architecture, business challenges …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will touch on strategies and challenges we have encountered along our journey of hosting over 1,000 Django/Wagtail sites. Told in the storybook style of &amp;quot;One Thousand and One Nights&amp;quot; (a.k.a. &amp;quot;Arabian Nights&amp;quot;) this talk will feature real-world anecdotes about: technical architecture, business challenges, financial challenges, customer support, and security challenges such as dealing with onslaughts of spammers and attack vectors.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Open-source Python tools to visualize and analyse geospatial data.</title><link href="https://pyvideo.org/djangocon-us-2024/open-source-python-tools-to-visualize-and-analyse-geospatial-data.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Samweli Mwakisambwe</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/open-source-python-tools-to-visualize-and-analyse-geospatial-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk will provide an overview of the available Python related geospatial tools that can be used to analyze location data highlighting the possibilities and the potential of this attendees will be able to grasp what tools they can use to access particular location data.
Among the available&amp;nbsp;python …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk will provide an overview of the available Python related geospatial tools that can be used to analyze location data highlighting the possibilities and the potential of this attendees will be able to grasp what tools they can use to access particular location data.
Among the available&amp;nbsp;python&amp;nbsp;geospatial tools we will discuss the main and most used in accessing location data types raster and vector, we will have a look at how these base tools can be used to access the types and their benefits.
We will then dive into one of the tools called QGIS and use it as an exemplar of how we can now interact, analyze, and visualize geospatial data in Python. A step-by-step guide on how to import and use QGIS features in Python.
QGIS is a freely downloadable open-source GIS software suite that contains a desktop option, mobile, and web components. QGIS version 3.14 was released with a Temporal Controller an interesting feature that allows immersive and creative visualization of time-based geospatial data.
Then we will see how QGIS can be used inside Django as a package. Showing how to achieve a link between the two tools.
At the end of the talk attendees should expect to have a comprehensive understanding of different Python geospatial tools, whether you are a developer or a professional learning new ways of technology, this talk will equip you with the knowledge on the right geospatial tools.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Opening Remarks (Monday)</title><link href="https://pyvideo.org/djangocon-us-2024/opening-remarks-monday.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Peter Grandstaff</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/opening-remarks-monday.html</id><content type="html"></content><category term="DjangoCon US 2024"></category></entry><entry><title>Orientation</title><link href="https://pyvideo.org/djangocon-us-2024/orientation.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Kojo Idrissa</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/orientation.html</id><content type="html"></content><category term="DjangoCon US 2024"></category></entry><entry><title>Passkeys: Your password-free future</title><link href="https://pyvideo.org/djangocon-us-2024/passkeys-your-password-free-future.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Ryan Hiebert</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/passkeys-your-password-free-future.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We'll start at the beginning, with a simple username and password login form, and explore various approaches that the web has taken to try to solve it.&lt;/p&gt;
&lt;p&gt;We'll explore briefly OpenID (remember that?), Federation, Single Sign-on, Magic Links, and Login Codes, and why each of them has usability drawbacks …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We'll start at the beginning, with a simple username and password login form, and explore various approaches that the web has taken to try to solve it.&lt;/p&gt;
&lt;p&gt;We'll explore briefly OpenID (remember that?), Federation, Single Sign-on, Magic Links, and Login Codes, and why each of them has usability drawbacks that often mean that the username and password, especially combined with a password manager, just can't be beat for its user experience.&lt;/p&gt;
&lt;p&gt;Passkeys, however, are the better option that we've been waiting for. There are still some important trade-offs, but are a much better fit for consumer applications, with a user experience that is quite comparable to using a password manager.&lt;/p&gt;
&lt;p&gt;They can be a simple login button, or they can augment a username and password dialog very similarly to a password manager's autocomplete. Finally, we have a way that gives a good user experience and doesn't have us storing a potentially shared secret!&lt;/p&gt;
&lt;p&gt;Now that we've motivated passkeys, we'll explore how we can integrate them into Django. We'll see how we can use them to log into the Django admin. Then we'll see if we can disable them entirely for Django, and how we can bootstrap our superuser account creation, so that our new Django project never has a username and password form at all!&lt;/p&gt;
&lt;p&gt;Along the way, we'll also cover some important challenges that can come up with Passkeys in development and how to address them, including dealing with localhost, and remote development environments like Codespaces.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>path('/user/&lt;user.username:user&gt;/', view_profile)</title><link href="https://pyvideo.org/djangocon-us-2024/pathuseruserusernameuser-view_profile.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Willem Van Onsem</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/pathuseruserusernameuser-view_profile.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since Django-2.0, most people use path converters instead of regexes to describe the different URL patterns, and how these will trigger views. One can use the already builtin path converters, but also define new ones to parse dates, booleans, etc. more effectively. One can not only define a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since Django-2.0, most people use path converters instead of regexes to describe the different URL patterns, and how these will trigger views. One can use the already builtin path converters, but also define new ones to parse dates, booleans, etc. more effectively. One can not only define a pattern, but also provide methods to convert between Python objects and URL fragments.&lt;/p&gt;
&lt;p&gt;That last feature can be used to automatically fetch model objects if the path contains the value for the primary key of the model object, or another unique field. We thus avoid writing queries to fetch the objects, but can also turn these into lazy objects where we postpone the roundtrip to the database, until the view needs that object, and thus save a roundtrip if the view has a codepath that does not require the object. Some databases also allow to combine multiple queries in one roundtrip, so we can combine all the objects that go to the same database, limiting the roundtrips further.&lt;/p&gt;
&lt;p&gt;A problem with path patterns in general is that often they overlap: the same path can trigger multiple patterns. In that case the first one is picked. This issue has already lead to countless hours of debugging since people expect a different view to be triggered. Since path patterns eventually compile to regexes, and one can determine if two regexes (fully) overlap, we can automatically detect if there are paths for which two or more URL patterns are triggered, and in case a pattern is fully covered by patterns above, advise to rearrange the patterns. Probably not very suprisingly we found that Django's admin pages suffer from this issue as well: if we make a model with a &lt;cite&gt;CharField&lt;/cite&gt; as primary key, then adding items with &amp;quot;remove&amp;quot; or &amp;quot;history&amp;quot; as value for the primary key, means certain views can not be used for these objects. We show some ways to mitigate this.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Product 101 for Techies and Tech Teams</title><link href="https://pyvideo.org/djangocon-us-2024/product-101-for-techies-and-tech-teams.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Amanda Savluchinske</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/product-101-for-techies-and-tech-teams.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I intend to cover basic product concepts with the goal of sparking engineers' interest in how their work can have a greater impact in their users' lives. In my opinion, everyone in tech should be able to speak a little of their colleagues' language so that …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I intend to cover basic product concepts with the goal of sparking engineers' interest in how their work can have a greater impact in their users' lives. In my opinion, everyone in tech should be able to speak a little of their colleagues' language so that we can better collaborate and be more efficient as teams. With that said, I believe any engineers who would like to become more product-minded will benefit from attending as the talk covers the most common topics in that knowledge domain, serving as an introduction to the product world.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Project Management in Open Source</title><link href="https://pyvideo.org/djangocon-us-2024/project-management-in-open-source.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Harmony Elendu</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/project-management-in-open-source.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This Session will highlight and expand on better practices of Project Management in open-source while focusing on exploring the complexities of leading projects, maximizing various forms of collaboration, decentralized decision-making, and community-driven innovation promoting inclusivity.&lt;/p&gt;
&lt;p&gt;There will be interactive sessions and case studies to provide practical insights and how …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This Session will highlight and expand on better practices of Project Management in open-source while focusing on exploring the complexities of leading projects, maximizing various forms of collaboration, decentralized decision-making, and community-driven innovation promoting inclusivity.&lt;/p&gt;
&lt;p&gt;There will be interactive sessions and case studies to provide practical insights and how to navigate various forms of challenges and opportunities to aid my  objectives which include&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Equiping project managers, developers and enthusiasts with the right information and knowledge&lt;/li&gt;
&lt;li&gt;⁠Ways of maximising diverse talents in projects&lt;/li&gt;
&lt;li&gt;⁠Fostering transparency in all areas&lt;/li&gt;
&lt;li&gt;⁠Forms of promoting and encouraging volunteer-driven teams&lt;/li&gt;
&lt;/ul&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Pygoat - Learn django security the hard way</title><link href="https://pyvideo.org/djangocon-us-2024/pygoat-learn-django-security-the-hard-way.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Adarsh Divakaran</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/pygoat-learn-django-security-the-hard-way.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pygoat is an intentionally vulnerable Python Django application that can be used to learn to secure our Django apps. In this talk, we will attack a deployed Pygoat application, identify the underlying security issues in our code, and then secure it. We will learn about common security vulnerabilities (OWASP …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pygoat is an intentionally vulnerable Python Django application that can be used to learn to secure our Django apps. In this talk, we will attack a deployed Pygoat application, identify the underlying security issues in our code, and then secure it. We will learn about common security vulnerabilities (OWASP Top 10) in Django apps and how to fix them so that we can keep our applications safe from attackers.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>The art of (not) redirecting</title><link href="https://pyvideo.org/djangocon-us-2024/the-art-of-not-redirecting.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Lorenzo Peña</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/the-art-of-not-redirecting.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;URLs are meant to never change, but change is the only constant of thriving products. As web developers we have the duty to not only design our URLs in a way that they withstand the passage of time, but also to &amp;quot;never&amp;quot; break old URLs when, in the face …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;URLs are meant to never change, but change is the only constant of thriving products. As web developers we have the duty to not only design our URLs in a way that they withstand the passage of time, but also to &amp;quot;never&amp;quot; break old URLs when, in the face of inevitable change, we are forced to re-design them in order to keep a consistent experience in our evolving products. Join me in this practical journey to master URL design and evolution.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>The Magic of Dependencies Installing Themselves</title><link href="https://pyvideo.org/djangocon-us-2024/the-magic-of-dependencies-installing-themselves.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Ilerioluwakiiye Abolade</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/the-magic-of-dependencies-installing-themselves.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When you write a Python script that has dependencies, the standard has always been to use a separate file like requirements.txt or pyproject.toml (using Tom’s Obvious, Minimal Language format) for handling the dependencies from external libraries. To share these scripts that are dependent on external libraries …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When you write a Python script that has dependencies, the standard has always been to use a separate file like requirements.txt or pyproject.toml (using Tom’s Obvious, Minimal Language format) for handling the dependencies from external libraries. To share these scripts that are dependent on external libraries or other versions of Python, the process becomes more complex since the receiver has no choice but to create a new virtual environment with all the necessary dependencies. It becomes even more cumbersome in educational settings or among collaborators, where people might have different levels of Python expertise.&lt;/p&gt;
&lt;p&gt;With the introduction of PEP 723, we’ve brought simplicity to our code, as we can now embed dependencies directly in a single file script. In this talk, we will explore this new method that enhances our productivity by making it easier to share, deploy, and work with Python scripts, making working with Django closer to being seamless.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Troubleshooting is a Lifestyle 😎</title><link href="https://pyvideo.org/djangocon-us-2024/troubleshooting-is-a-lifestyle.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Jack Linke</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/troubleshooting-is-a-lifestyle.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;## Audience Level&lt;/p&gt;
&lt;p&gt;Beginner to Intermediate&lt;/p&gt;
&lt;p&gt;This talk is suitable for anyone who wants to improve their troubleshooting skills, regardless of their industry or technical background. No prior troubleshooting experience is required, but a basic understanding of technology concepts will be helpful. We will start with general concepts, and move …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;## Audience Level&lt;/p&gt;
&lt;p&gt;Beginner to Intermediate&lt;/p&gt;
&lt;p&gt;This talk is suitable for anyone who wants to improve their troubleshooting skills, regardless of their industry or technical background. No prior troubleshooting experience is required, but a basic understanding of technology concepts will be helpful. We will start with general concepts, and move into some practical and technical examples specific to Django and Python.&lt;/p&gt;
&lt;p&gt;## Objectives&lt;/p&gt;
&lt;p&gt;By the end of this talk, attendees will understand how to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Break down complex problems into manageable parts&lt;/li&gt;
&lt;li&gt;Utilize the tools and resources available for effective troubleshooting&lt;/li&gt;
&lt;li&gt;Learn to ask for help and leverage online communities&lt;/li&gt;
&lt;li&gt;Avoid tunnel vision and maintain a broad perspective when diagnosing issues&lt;/li&gt;
&lt;li&gt;Document the troubleshooting process to track progress and learn from experiences&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;## Outline&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Introduction (4 minutes)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;My background in electronics design, radar maintenance, and software development&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;The Troubleshooting Mindset (5 minutes)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;The importance of troubleshooting skills in various fields&lt;/li&gt;
&lt;li&gt;Why troubleshooting is a lifestyle 😎, not just a job skill&lt;/li&gt;
&lt;li&gt;The importance of persistence and curiosity&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Breaking Down Problems (6 minutes)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Strategies for dissecting complex issues into manageable components&lt;/li&gt;
&lt;li&gt;The power of isolating variables and narrowing down the scope&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Utilizing Tools and Resources (10 minutes)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Introduction to a wide variety of troubleshooting tools and indicators for solving problems with Django and Python&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Asking for Help (6 minutes)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;The importance of knowing when to seek assistance&lt;/li&gt;
&lt;li&gt;How to ask for help effectively and provide the necessary information&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Avoiding Tunnel Vision (5 minutes)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Recognizing the dangers of focusing too narrowly on a single solution or part of the problem&lt;/li&gt;
&lt;li&gt;Techniques for maintaining a broad perspective and exploring alternative approaches&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Documenting The Process (5 minutes)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;The benefits of writing down your troubleshooting steps and findings&lt;/li&gt;
&lt;li&gt;How to create a troubleshooting log and learn from your experiences&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Conclusion and Q&amp;amp;A (4 minutes)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Summarize key points.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;## Prerequisites&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Basic understanding of technology concepts&lt;/li&gt;
&lt;li&gt;Curiosity and a willingness to learn&lt;/li&gt;
&lt;li&gt;Pen and paper or a digital note-taking device&lt;/li&gt;
&lt;/ul&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Unlocking Performance: Benchmarking and profiling Django for Maximum Efficiency</title><link href="https://pyvideo.org/djangocon-us-2024/unlocking-performance-benchmarking-and-profiling-django-for-maximum-efficiency.html" rel="alternate"></link><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><author><name>Ron Maravanyika</name></author><id>tag:pyvideo.org,2024-09-23:/djangocon-us-2024/unlocking-performance-benchmarking-and-profiling-django-for-maximum-efficiency.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In most cases performance issues are caused by a very small fraction of the application.  Identifying these bottlenecks can be a daunting task. Well, not anymore, we now have tools to easily identify these bottlenecks. In this talk we will talk about it all: the why, what and how …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In most cases performance issues are caused by a very small fraction of the application.  Identifying these bottlenecks can be a daunting task. Well, not anymore, we now have tools to easily identify these bottlenecks. In this talk we will talk about it all: the why, what and how to do profiling and benchmarking.&lt;/p&gt;
&lt;p&gt;We will look at &lt;cite&gt;django-silk&lt;/cite&gt; for profiling while for benchmarking we will be using the ever reliable &lt;cite&gt;pytest-benchmark&lt;/cite&gt;. We will cover the basics and slowly move into seeing things like the actual raw query buried which is buried in Django. Lastly l will share tips on how to avoid over running your services while try to optimise. This talk is suitable for intermediate to senior developers, however junior developers can also benefit.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry></feed>