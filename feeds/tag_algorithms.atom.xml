<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_algorithms.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-07-12T00:00:00+00:00</updated><entry><title>Enhancing Angklung Music Rehearsals with Python</title><link href="https://pyvideo.org/europython-2019/enhancing-angklung-music-rehearsals-with-python.html" rel="alternate"></link><published>2019-07-12T00:00:00+00:00</published><updated>2019-07-12T00:00:00+00:00</updated><author><name>Trapsilo Bumi</name></author><id>tag:pyvideo.org,2019-07-12:europython-2019/enhancing-angklung-music-rehearsals-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Angklung is a traditional musical instrument from Indonesia. This
instrument has a lot of variety in how it is performed; a common format
is the orchestral format in which 15-30 players gather to form a team.
Playing Angklung in this way is fun but also presents some challenges
that are hard to solve manually.&lt;/p&gt;
&lt;p&gt;First, I will introduce you to the instrument and how it works/how it is
played. Then, I will show you how Python-based algorithms can be used to
ease the pains of managing Angklung teams, by reading Angklung-specific
sheet music and calculating the most optimal distribution of Angklung
based on several important factors.&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Analytics"></category><category term="Beginners"></category><category term="Case Study"></category><category term="Use Case"></category></entry><entry><title>AI in Contemporary Art</title><link href="https://pyvideo.org/europython-2019/ai-in-contemporary-art.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Luba Elliott</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/ai-in-contemporary-art.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the past couple of years, there has been increasing interest in
applying the latest advances in machine learning to creative projects in
art and design. From DeepDream and style transfer to a GAN-generated
painting selling for $430,000 at auction, AI art has moved beyond the
world of research and academia and become a trend in its own right.
Meanwhile, the contemporary art world's fascination with the social
impact of facial recognition, recommendation systems and deep fakes has
encouraged artists to explore AI critically as subject matter. This talk
will give an overview of how artists and technologists are using and
thinking about machine learning, its creative potential and societal
impact.&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Computer Vision"></category><category term="Deep Learning"></category></entry><entry><title>Gamifying the study of algorithms</title><link href="https://pyvideo.org/europython-2019/gamifying-the-study-of-algorithms.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Iulia Avram</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/gamifying-the-study-of-algorithms.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you remember when you used to learn algorithms? It was probably
either back when you were studying for your degree, or when you were
brushing up for a technical interview. If you're like most of the
developers I know, solving algorithms probably went from being a fun
past-time, to a bothersome necessity, to a thing of the past. Our life
has been greatly improved by our tools and there's little need to know
all sorting methods out there, or how to search through a tree. Or maybe
we're wrong, maybe knowing these things could make a difference in how
we write code.&lt;/p&gt;
&lt;p&gt;I am going to try to dispel some of the myths surrounding the study of
algorithms and competitive programming, and argue that sharpening this
skill is something that benefits us, as software developers, outside of
passing technical tests; that knowing many algorithms makes us better
and faster problem solvers.&lt;/p&gt;
&lt;p&gt;Lastly, this talk is about resources and ways in which to gamify the
study of algorithms. Going at it the same way as for exams or interviews
makes it very bothersome very quickly. It gets easy to lose sight of the
biggest picture and to start thinking of algorithms in abstract terms,
outside their applications. All these are factors that prompt the
question: why should I carry on with it?&lt;/p&gt;
&lt;p&gt;Therefore, something needs to be changed in the way we do this.
Algorithms are fun and they don't deserve the disdain we give them.
Knowing algorithms is not only for the geniuses and innovators.&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Best Practice"></category><category term="Education"></category><category term="Fun and Humor"></category></entry><entry><title>Tips for the scientific programmer</title><link href="https://pyvideo.org/europython-2019/tips-for-the-scientific-programmer.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Michele Simionato</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/tips-for-the-scientific-programmer.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is a talk for people who need to perform large numeric
calculations. They could be scientists, developers working in close
contact with scientists, or even people working on finance and other
quantitative fields. Such people are routinely confronted with issues
like&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;1 parallelism: how to parallelize calculations efficiently&lt;/div&gt;
&lt;div class="line"&gt;2 data: how to store and manage large amounts of data efficiently&lt;/div&gt;
&lt;div class="line"&gt;3 memory: how to avoid running out of memory&lt;/div&gt;
&lt;div class="line"&gt;4 performance: how to be fast&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The goal of the talk is to teach some lessons learned after several
years of doing numeric simulations in a context were micro-optimizations
are the least important factor, while overall architecture, design
choices and good algorithms are of paramount importance.&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Architecture"></category><category term="Big Data"></category><category term="Case Study"></category><category term="Performance"></category></entry><entry><title>“When a biologist met Python”</title><link href="https://pyvideo.org/europython-2019/when-a-biologist-met-python.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Maria Molina-Contreras</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/when-a-biologist-met-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Biology and computing are closer than we usually think, for example
many algorithms are inspired in biology patterns, and complementary to
that, researchers needs special algorithms to have a better
understanding of our environment. Thus, there is a strong relation an
dependency.&lt;/div&gt;
&lt;div class="line"&gt;In the past years, Biology has been transformed into computational
biology. Therefore&lt;/div&gt;
&lt;div class="line"&gt;technological advances helps us to predict physical interactions
between atoms and DNA, because we are being able to integrate
information from biology into algorithms.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Python has become a popular programming language in biosciences because
it has a clean syntax that makes it easy to read language. In addition
to this, there are many modules (toolkits) extending to different
biological domains, like metabolomics, structure analysis,
phylogenomics, molecular biology and others. Python is currently
improving researcher’s workflow, helping us to focus on the theory or
experimental part, instead of fighting with old buggy applications.&lt;/p&gt;
&lt;p&gt;This talk aims to be oriented to all audiences (with/without biological
background) since we will go together through an amazing adventure into
the natural sciences using tools like Biopython, Bokeh, Networkx, Ecopy
and much more! Are you brave enough to follow me on this journey?&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Data Science"></category><category term="Natural Science"></category><category term="Scientific Libraries (Numpy/Pandas/SciKit/...)"></category><category term="python"></category></entry><entry><title>Bioinformatics pipeline for revealing tumour heterogeneity</title><link href="https://pyvideo.org/europython-2019/bioinformatics-pipeline-for-revealing-tumour-heterogeneity.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Mustafa Anil Tuncel</name></author><id>tag:pyvideo.org,2019-07-10:europython-2019/bioinformatics-pipeline-for-revealing-tumour-heterogeneity.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Reproducibility of research is a common issue in science, especially
in computationally expensive research fields e.g. cancer research.&lt;/div&gt;
&lt;div class="line"&gt;A comprehensive picture of the genomic aberrations that occur during
tumour progression and the resulting intra-tumour heterogeneity, is
essential for personalised and precise cancer therapies. With the
change in the tumour environment under treatment, heterogeneity allows
the tumour additional ways to evolve resistance, such that
intra-tumour genomic diversity is a cause of relapse and treatment
failure. Earlier bulk sequencing technologies were incapable of
determining the diversity in the tumour.&lt;/div&gt;
&lt;div class="line"&gt;Single-cell DNA sequencing - a recent sequencing technology - offers
resolution down to the level of individual cells and is playing an
increasingly important role in this field.&lt;/div&gt;
&lt;div class="line"&gt;We present a reproducible and scalable Python data analysis pipeline
that employs a statistical model and an MCMC algorithm to infer the
evolutionary history of copy number alterations of a tumour from
single cells. The pipeline is built using Python, Conda environment
management system and the Snakemake workflow management system. The
pipeline starts from the raw sequencing files and a settings file for
parameter configurations. After running the data analysis, pipeline
produces report and figures to inform the treatment decision of the
cancer patient.&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Algorithms"></category><category term="Analytics"></category><category term="C-Languages"></category><category term="Command-Line"></category><category term="Data Science"></category></entry><entry><title>What about recommendation engines?</title><link href="https://pyvideo.org/europython-2019/what-about-recommendation-engines.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Adriana Dorneles</name></author><id>tag:pyvideo.org,2019-07-10:europython-2019/what-about-recommendation-engines.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;How recommendation engines are taking part in our daily routine and
how companies as Netflix and Amazon implement it?&lt;/div&gt;
&lt;div class="line"&gt;This talk aims to show the elements that compound a recommendation
engine to people who have never been in touch with the matter or want
to know a bit more. At the end of this session, you might be able to
reproduce your own recommendation system and also know where to find
more about it.&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Talk structure:&lt;/div&gt;
&lt;div class="line"&gt;1. What is and why use a recommendation engine?&lt;/div&gt;
&lt;div class="line"&gt;2. Recommendation engine importance&lt;/div&gt;
&lt;div class="line"&gt;3. Steps of a recommendation&lt;/div&gt;
&lt;div class="line"&gt;4. Recommendation algorithms&lt;/div&gt;
&lt;div class="line"&gt;5. Basic Statistics for distance and correlation&lt;/div&gt;
&lt;div class="line"&gt;6. Example&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Algorithms"></category><category term="Big Data"></category><category term="Business"></category><category term="Data Science"></category><category term="Python 3"></category></entry><entry><title>AI and algorithmic art</title><link href="https://pyvideo.org/pycon-italia-2019/ai-and-algorithmic-art.html" rel="alternate"></link><published>2019-05-03T00:00:00+00:00</published><updated>2019-05-03T00:00:00+00:00</updated><author><name>Cheuk Ho</name></author><id>tag:pyvideo.org,2019-05-03:pycon-italia-2019/ai-and-algorithmic-art.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Many people think of neural networks as magic boxes, using them as such
is similar to allowing the computer or the machine to have a mind of
their own. Classification and prediction are the best-known applications
of these algorithms. But it has been demonstrated that they can also be
used in multiple creative or artistic ways such as generating pictures,
musical pieces, humour based dialogues or jokes and plays or literary
pieces. Leading to the following question: can these black boxes express
true creativity? A trait commonly associated with humans.&lt;/p&gt;
&lt;p&gt;Description&lt;/p&gt;
&lt;p&gt;Algorithmic Art (or computer generated art) refers to the use of
computer algorithms to create artistic pieces. Algorithmic art has been
around from the early 1960s, when artists used a plotter controlled by a
computer to create some visual artwork pieces. In the 80s when computer
graphics became more accessible, digital fractal artworks dominated to
become the mainstream of algorithmic art. By the end of the 80s, genetic
algorithms had matured enough to have a major influence in the
algorithmic composition of music. At the same time, the artificial
neural networks were used to explore the creation of musical
compositions. Most recently, thanks to the blooming of neural network
frameworks (e.g. tensorflow), availability of GPUs and development in
sophisticated neural network architecture, they play an important part
in academic research and data science business applications. Besides
that, these enhanced resources and frameworks have enabled the neural
networks to make significant contributions in the area of Algorithmic
Arts. Examples of this are the Deep Dream and artistic style transfer
and GANs (generative adversarial network) which can generate highly
deceptive pictures. A specially trained neural network is also capable
of composing music mimicking the style of Beethoven or generating a
modern music piece. In the same way, a neural network can be used to
generate poems or literary pieces in the true style of Shakespeare or
Hamilton. In this talk, we will go through a gallery of art and music
created by algorithms, showcasing what roles computers took in different
algorithmic art forms. From the earliest fractal art to the music and
pictures generated by the state of the art neural networks and GANs.
This talk is suitable for everyone, from the curious general public to
experts in the field of neural networks, both will find this talk
inspiring and amusing.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Slide for this talk:
&lt;a class="reference external" href="https://slides.com/cheukting_ho/ai-and-algorithmic-art/live#/"&gt;https://slides.com/cheukting_ho/ai-and-algorithmic-art/live#/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1778"&gt;https://python.it/feedback-1778&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 11:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="art"></category><category term="pydata"></category><category term="AI"></category><category term="Algorithms"></category><category term="algorithmicart"></category><category term="neural network"></category></entry><entry><title>Hearing Colours and Seeing Sounds using Python</title><link href="https://pyvideo.org/pycon-italia-2019/hearing-colours-and-seeing-sounds-using-python.html" rel="alternate"></link><published>2019-05-03T00:00:00+00:00</published><updated>2019-05-03T00:00:00+00:00</updated><author><name>Aakanksha Chouhan</name></author><id>tag:pyvideo.org,2019-05-03:pycon-italia-2019/hearing-colours-and-seeing-sounds-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;We humans are the masterpieces. We are born with awesome capabilities
and applaudable talents making us different from one another. As an
individual , nobody thinks the way others do , they have their own
intriguing ways to look at this world. Few of us have this exceptional
quality to be able to visualise sounds and map colours with the words.
It is termed as Synesthesia. It is fascinating to know how human brain
can see sounds and hear colours, how it thinks of a word, and sees
blocks of colours, and then these blocks get translated into letters.
There are few who see the letters with a halo-effect. The letters
give- off almost a glow of a certain colour.It is a striking fact that
the synesthetic brains are wired a little differently from the ones of
non-synesthetes.&lt;/div&gt;
&lt;div class="line"&gt;This talk will cover the interesting applications of python
programming by harnessing simple mathematical techniques to simulate
the synesthetic ( bridging modalities) behaviour of brain. It is
really appealing to be able to look at the world wearing colourful
shades and building an AI that does bridge these modalities (vision ,
hearing ,etc ) is truly astounding. The talk covers an interesting
viewpoint on how python can be used widely to analyse some of the
really complex human brain behaviours ,in addition to solving
comparatively trivial real world problems.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Link to the slides :
&lt;a class="reference external" href="https://speakerdeck.com/aakanksha07/hearing-colours-and"&gt;https://speakerdeck.com/aakanksha07/hearing-colours-and&lt;/a&gt;-
seeing-sounds-using-python?slide=28&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1776"&gt;https://python.it/feedback-1776&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 10:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="Algorithms"></category><category term="Artificial Intelligence"></category><category term="Machine Learning"></category></entry><entry><title>Functional programming in Python and even Haskell - Part 1</title><link href="https://pyvideo.org/europython-2013/functional-programming-in-python-and-even-haskell-part-1.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Semen Trygubenko</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/functional-programming-in-python-and-even-haskell-part-1.html</id><summary type="html"></summary><category term="Functional Programming"></category><category term="Algorithms"></category></entry><entry><title>Functional programming in Python and even Haskell - Part 2</title><link href="https://pyvideo.org/europython-2013/functional-programming-in-python-and-even-haskell-part-2.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Semen Trygubenko</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/functional-programming-in-python-and-even-haskell-part-2.html</id><summary type="html"></summary><category term="Functional Programming"></category><category term="Algorithms"></category></entry><entry><title>Never get in a battle of bits without ammunition.</title><link href="https://pyvideo.org/europython-2013/never-get-in-a-battle-of-bits-without-ammunition.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Enrico Franchi</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/never-get-in-a-battle-of-bits-without-ammunition.html</id><summary type="html"></summary><category term="cython"></category><category term="C/C++"></category><category term="nosql"></category><category term="mongodb"></category><category term="numeric"></category><category term="iPython"></category><category term="optimization"></category><category term="Algorithms"></category><category term="data-analysis"></category><category term="hpc"></category><category term="performance"></category><category term="scientific-computing"></category><category term="numpy"></category></entry><entry><title>Introduction to machine learning using Python tools</title><link href="https://pyvideo.org/europython-2013/introduction-to-machine-learning-using-python-tools.html" rel="alternate"></link><published>2013-07-02T00:00:00+00:00</published><updated>2013-07-02T00:00:00+00:00</updated><author><name>Satish Shankar</name></author><id>tag:pyvideo.org,2013-07-02:europython-2013/introduction-to-machine-learning-using-python-tools.html</id><summary type="html"></summary><category term="statistics"></category><category term="machine-learning"></category><category term="datamining"></category><category term="Algorithms"></category><category term="data-analysis"></category><category term="scientific-computing"></category><category term="sklearn"></category></entry><entry><title>Uno sguardo agli internal di RestFS</title><link href="https://pyvideo.org/europython-2013/uno-sguardo-agli-internal-di-restfs.html" rel="alternate"></link><published>2013-07-02T00:00:00+00:00</published><updated>2013-07-02T00:00:00+00:00</updated><author><name>Fabrizio Manfredi</name></author><id>tag:pyvideo.org,2013-07-02:europython-2013/uno-sguardo-agli-internal-di-restfs.html</id><summary type="html"></summary><category term="clustering"></category><category term="HTTP"></category><category term="parallelization"></category><category term="distributed"></category><category term="twisted"></category><category term="REST"></category><category term="optimization"></category><category term="Algorithms"></category><category term="scalability"></category><category term="async"></category><category term="hpc"></category><category term="performance"></category></entry><entry><title>Strongly typed datasets in a weakly typed world</title><link href="https://pyvideo.org/pycon-de-2018/strongly-typed-datasets-in-a-weakly-typed-world.html" rel="alternate"></link><published>2018-10-26T00:00:00+00:00</published><updated>2018-10-26T00:00:00+00:00</updated><author><name>Marco Neumann</name></author><id>tag:pyvideo.org,2018-10-26:pycon-de-2018/strongly-typed-datasets-in-a-weakly-typed-world.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We at Blue Yonder use Pandas quite a lot during our daily data science
and engineering work. This choice, together with Python as an underlying
programming language gives us flexibility, a feature-rich interface, and
access to a large community and ecosystem. When it comes to preserving
the data and exchanging it with different software stacks, we rely on
Parquet Datasets / Hive Tables. During the write process, there is a
shift from a rather weakly typed world to a strongly typed one. For
example, Pandas may convert integers to floats for many operations
without asking, but parquet files and the schema information stored
alongside them dictate very precise types. The type situation may get
even more &amp;quot;colorful&amp;quot;, when datasets are written by multiple code
versions or different software solutions over time. This then results in
important questions regarding type compatibility.&lt;/p&gt;
&lt;p&gt;This talk will first represent an overview on types at different layers
(like NumPy, Pandas, Arrow and Parquet) and the transition between this
layers. The second part of the talk will present examples of type
compatibility we have seen and why+how we think they should be handled.
At the end there will be a Q+A, which can be seen as the start of a
potentially longer RFC process to align different software stacks (like
Hive and Dask) to handle types in a similar way.&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Big Data"></category><category term="Data Science"></category><category term="Parallel Programming"></category></entry><entry><title>Suggestions from Python and Solr</title><link href="https://pyvideo.org/pycon-de-2018/suggestions-from-python-and-solr.html" rel="alternate"></link><published>2018-10-26T00:00:00+00:00</published><updated>2018-10-26T00:00:00+00:00</updated><author><name>Jonathan Oberländer</name></author><id>tag:pyvideo.org,2018-10-26:pycon-de-2018/suggestions-from-python-and-solr.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When a user types a query into the search box of our price comparison
website, we try to figure out what they search, and provide suggestions
as they type along. What product, what brand, from which categories?
Solr provides a SuggestComponent that is a good start, but in a lot of
situations we need fallback strategies: what should we show to a user
searching for just a brand name? Or for a singular offer we can't
actually show them? What alternatives can we dig up? And behind all this
backfill logic lurks that dreaded question: what amount of irrelevant
garbage is worse than the horror vacui of an empty result set?&lt;/p&gt;
</summary><category term="Algorithms"></category></entry><entry><title>Beyond Jupyter Notebooks - Building your own Data Science platform with Python &amp; Docker</title><link href="https://pyvideo.org/pycon-de-2018/beyond-jupyter-notebooks-building-your-own-data-science-platform-with-python-docker.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Joshua Görner</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/beyond-jupyter-notebooks-building-your-own-data-science-platform-with-python-docker.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Interactive notebooks like Jupyter have become more and more popular in
the recent past and build the core of many data scientist's workplace.
Being accessed via web browser they allow scientists to easily structure
their work by combining code and documentation.&lt;/p&gt;
&lt;p&gt;Yet notebooks often lead to isolated and disposable analysis artefacts.
Keeping the computation inside those notebooks does not allow for
convenient concurrent model training, model exposure or scheduled model
retraining.&lt;/p&gt;
&lt;p&gt;Those issues can be addressed by taking advantage of recent developments
in the discipline of software engineering. Over the past years
containerization became the technology of choice for crafting and
deploying applications. Building a data science platform that allows for
easy access (via notebooks), flexibility and reproducibility (via
containerization) combines the best of both worlds and addresses Data
Scientist's hidden needs.&lt;/p&gt;
</summary><category term="Artificial Intelligence"></category><category term="Algorithms"></category><category term="Data Science"></category><category term="DevOps"></category><category term="Infrastructure"></category><category term="Jupyter"></category><category term="Machine Learning"></category><category term="Programming"></category><category term="Python"></category></entry><entry><title>Big Data Systems Performance: The Little Shop of Horrors</title><link href="https://pyvideo.org/pycon-de-2018/big-data-systems-performance-the-little-shop-of-horrors.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Jens Dittrich</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/big-data-systems-performance-the-little-shop-of-horrors.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The confusion around terms such as like NoSQL, Big Data, Data Science,
Spark, SQL, and Data Lakes often creates more fog than clarity. However,
clarity about the underlying technologies is crucial to designing the
best technical solution in any field relying on huge amounts of data
including data science, machine learning, but also more traditional
analytical systems such as data integration, data warehousing,
reporting, and OLAP.&lt;/p&gt;
&lt;p&gt;In my presentation, I will show that often at least three dimensions are
cluttered and confused in discussions when it comes to data management:
First, buzzwords (labels &amp;amp; terms like &amp;quot;big data&amp;quot;, &amp;quot;AI&amp;quot;, &amp;quot;data lake&amp;quot;);
second, data design patterns (principles &amp;amp; best practices like:
selection push-down, materialization, indexing); and Third, software
platforms (concrete implementations &amp;amp; frameworks like: Python, DBMS,
Spark, and NoSQL-systems).&lt;/p&gt;
&lt;p&gt;Only by keeping these three dimensions apart, it is possible to create
technically-sound architectures in the field of big data analytics.&lt;/p&gt;
&lt;p&gt;I will show concrete examples, which through a simple redesign and wise
choice of the right tools and technologies, run thereby up to 1000 times
faster. This in turn triggers tremendous savings in terms of development
time, hardware costs, and maintenance effort.&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Big Data"></category><category term="Data Science"></category><category term="Infrastructure"></category><category term="Parallel Programming"></category><category term="Programming"></category><category term="Python"></category><category term="Science"></category></entry><entry><title>Data science complexity and solutions in real industrial projects</title><link href="https://pyvideo.org/pycon-de-2018/data-science-complexity-and-solutions-in-real-industrial-projects.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Artur Miller</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/data-science-complexity-and-solutions-in-real-industrial-projects.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As data scientists we usually like to apply fancy machine learning
models to well-groomed datasets. Everyone working on industrial problems
will eventually learn, that this does not reflect reality. The amount of
time spent on modeling is small compared to data gathering, -warehousing
and -cleaning. Even after training and deployment of the model, the work
is not done. Continuous monitoring of the performance and input data is
still necessary.&lt;/p&gt;
&lt;p&gt;In this talk I discuss how important data handling is for successful
data science projects. Each milestone, from finding the business case to
continuously monitoring the performance of the solution, is addressed.
This is exemplary shown on a project, with the goal of improving a
productive system.&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Big Data"></category><category term="Data Science"></category><category term="Infrastructure"></category><category term="Machine Learning"></category></entry><entry><title>Fulfilling Apache Arrow's Promises: Pandas on JVM memory without a copy</title><link href="https://pyvideo.org/pycon-de-2018/fulfilling-apache-arrows-promises-pandas-on-jvm-memory-without-a-copy.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Uwe L. Korn</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/fulfilling-apache-arrows-promises-pandas-on-jvm-memory-without-a-copy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Apache Arrow established a standard for columnar in-memory analytics to
redefine the performance and interoperability of most Big Data
technologies in early 2016. Since then implementations in Java, C++,
Python, Glib, Ruby, Go, JavaScript and Rust have been added. Although
Apache Arrow (&lt;tt class="docutils literal"&gt;pyarrow&lt;/tt&gt;) is already known to many Python/Pandas users
for reading Apache Parquet files, its main benefit is the cross-language
interoperability. With feather and PySpark, you can already benefit from
this in Python and R/Java via the filesystem or network. While they
improve data sharing and remove serialization overhead, data still needs
to be copied as it is passed between processes.&lt;/p&gt;
&lt;p&gt;In the 0.23 release of Pandas, the concept of ExtensionArrays was
introduced. They allow the extension of Pandas DataFrames and Series
with custom, user- defined typed. The most prominent example is
&lt;tt class="docutils literal"&gt;cyberpandas&lt;/tt&gt; which adds an IP dtype that is backed by the appropriate
representation using NumPy arrays. These ExtensionArrays are not limited
to arrays backed by NumPy but can take an arbitrary storage as long as
they fulfill a certain interfaces. Using Apache Arrow we can implement
ExtensionArrays that are of the same dtype as the built-in types of
Pandas but memory management is not tied to Pandas' internal
BlockManager. On the other hand Apache Arrow has a much more wider set
of efficient types that we can also expose as an ExtensionArray. These
types include a native string type as well as a arbitrarily nested types
such as &lt;tt class="docutils literal"&gt;list of …&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;struct of (…, …, …)&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;To show the real-world benefits of this, we take the example of a data
pipeline that pulls data from a relational store, transforms it and then
passes it into a machine learning model. A typical setup nowadays most
likely involves a data lake that is queried with a JVM based query
engine. The machine learning model is then normally implemented in
Python using popular frameworks like CatBoost or Tensorflow.&lt;/p&gt;
&lt;p&gt;While sometimes these query engines provide Python clients, their
performance is normally not optimized for large results sets. In the
case of a machine learning model, we will do some feature
transformations and possibly aggregations with the query engine but feed
as many rows as possible into the model. This will lead then to result
sets that have above a million rows. In contrast to the Python clients,
these engines often come with efficient JDBC drivers that can cope with
result sets of this size but then the conversion from Java objects to
Python objects in the JVM bridge will slow things down again. In our
example, we will show how to use Arrow to retrieve a large result in the
JVM and then pass it on to Python without running into these
bottlenecks.&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Big Data"></category><category term="Data Science"></category><category term="Parallel Programming"></category></entry><entry><title>Python Birdies: Codegolfing for better understanding (and fun)</title><link href="https://pyvideo.org/pycon-de-2018/python-birdies-codegolfing-for-better-understanding-and-fun.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Jonathan Oberländer</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/python-birdies-codegolfing-for-better-understanding-and-fun.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Codegolfing means taking a programming task and trying to answer it with
a byte-minimal correct solution. Such an answer often takes shortcuts,
is horribly inefficient, and definitely violates almost 100% of PEP 8.
Like any playful interaction with a subject, it can however improve your
understanding of it, as well as teach you about weird interactions
regarding operator precedence, lexer quirks and more.&lt;/p&gt;
&lt;p&gt;After going over basic definitions, I will take a small number of
well-known or straightforward programming tasks and go through the act
of golfing an answer together step by step.&lt;/p&gt;
</summary><category term="Algorithms"></category></entry><entry><title>Reproducibility, and Selection Bias in Machine Learning</title><link href="https://pyvideo.org/pycon-de-2018/reproducibility-and-selection-bias-in-machine-learning.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Valerio Maggio</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/reproducibility-and-selection-bias-in-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Reproducibility&lt;/em&gt; - the ability to recompute results — and
&lt;em&gt;replicability&lt;/em&gt; — the chances other experimenters will achieve a
consistent result[1]- are among the main important beliefs of the
&lt;em&gt;scientific method&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Surprisingly, these two aspects are often underestimated or not even
considered when setting up scientific experimental pipelines. In this,
one of the main threat to replicability is the &lt;em&gt;selection bias&lt;/em&gt; , that
is the error in choosing the individuals or groups to take part in a
study. Selection bias may come in different flavours: the selection of
the population of samples in the dataset ( &lt;em&gt;sample bias&lt;/em&gt; ); the
selection of features used by the learning models, particularly sensible
in case of high dimensionality; the selection of hyper parameter best
performing on specific dataset(s). If not properly considered, the
selection bias may strongly affect the validity of derived conclusions,
as well as the reliability of the learning model.&lt;/p&gt;
&lt;p&gt;In this talk I will provide a solid introduction to the topics of
reproducibility and selection bias, with examples taken from the
biomedical research, in which reliability is paramount.&lt;/p&gt;
&lt;p&gt;From a more technological perspective, to date the scientific Python
ecosystem still misses tools to consolidate the experimental pipelines
in in research, that can be used together with Machine and Deep learning
frameworks (e.g. &lt;tt class="docutils literal"&gt;sklearn&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;keras&lt;/tt&gt;). In this talk, I will
present &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;reproducible-lern&lt;/span&gt;&lt;/tt&gt;, a new Python frameworks for reproducible
research to be used for machine and deep learning.&lt;/p&gt;
&lt;p&gt;During the talk, the main features of the framework will be presented,
along with several examples, technical insights and implementation
choices to be discussed with the audience.&lt;/p&gt;
&lt;p&gt;The talk is intended for &lt;em&gt;intermediate&lt;/em&gt; PyData researchers and
practitioners. Basic prior knowledge of the main Machine Learning
concepts is assumed for the first part of the talk. On the other hand,
good proficiency with the Python language and with scientific python
libraries (e.g. &lt;tt class="docutils literal"&gt;numpy&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;sklearn&lt;/tt&gt;) are required for the second
part.&lt;/p&gt;
&lt;p&gt;-- &lt;a class="reference external" href="http://www.pnas.org/content/112/6/1645.full"&gt;1&lt;/a&gt; &lt;em&gt;Reproducible
research can still be wrong: Adopting a prevention approach&lt;/em&gt; by Jeffrey
T. Leek, and Roger D. Peng&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.cancer.gov/publications/dictionaries/cancer-terms?CdrID=44087"&gt;2&lt;/a&gt;
Dictionary of Cancer Terms -&amp;gt; &amp;quot;selection bias&amp;quot;&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Machine Learning"></category><category term="Science"></category></entry><entry><title>Active Learning - Building Semi-supervised Classifiers when Labeled Data is not Available</title><link href="https://pyvideo.org/pycon-de-2018/active-learning-building-semi-supervised-classifiers-when-labeled-data-is-not-available.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Dr. Hendrik Niemeyer</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/active-learning-building-semi-supervised-classifiers-when-labeled-data-is-not-available.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In many situations large datasets are available but unfortunately
labeling is expensive and time consuming. Active Learning is a concept
for building classifiers by letting the algorithm choose the training
data it uses. This achieves greater accuracy than just labeling a random
subset of the available dataset.&lt;/p&gt;
&lt;p&gt;The active learning algorithm selects some unlabeled data instances
which are then labeled by a human annotator. Given this information a
classifier is trained and new instances for the human annotator to label
are selected. This iterative process tries to label as few instances as
possible while achieving high classification accuracy.&lt;/p&gt;
&lt;p&gt;In this talk I will give a general overview of the core concepts and
techniques of active learning like algorithms for selecting the queries
and convergence criteria.&lt;/p&gt;
</summary><category term="Artificial Intelligence"></category><category term="Algorithms"></category><category term="Data Science"></category><category term="Machine Learning"></category><category term="Python"></category></entry><entry><title>Case Study in Travel Business - Understanding agent connections using NetworkX</title><link href="https://pyvideo.org/pycon-de-2018/case-study-in-travel-business-understanding-agent-connections-using-networkx.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Cheuk Ting Ho</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/case-study-in-travel-business-understanding-agent-connections-using-networkx.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Network analysis is getting more and more attention in Business
Intelligence, people hope to get information out of the structure of an
organization or a communication network. In this talk, we use the hotel
room search requests from travel agents, including online public
website, B2C, B2B and B2B2C, to build a relational network among them.
By using this network as an example, we demonstrate how insights can be
extract by studying network properties.&lt;/p&gt;
&lt;p&gt;In the first half of the talk, we will explain how the network is built
using NetworkX, an open-source python library that is designed for the
creation, manipulation, and study of the structure, dynamics, and
functions of complex networks. When 2 agents are making the same search
at the same time , a link ( or an “edge” in network analysts terms) is
made pointing form the initial searcher to the subsequent searcher.
Using a list of these searches, a directed graph is built. We will also
demonstrate how to pick the biggest connected component out form the
graph. In the second half, with the graphs created, we show how
different functions of NetworkX can be used to study the graphs. By
compare the graph properties of our graph to the other popular network
graphs, we can get the insight of how the network was created. Also by
studying the graphs, we can understand the behavior of the agents and
can even figure out which agents are acting as main hubs in the network.&lt;/p&gt;
&lt;p&gt;This talk is for people who are interested in network analysis and would
like to see how it can be used in a business case. Audiences with any
level of python experience can learn some basic concept of network
analysis work and how it can be applied to provide business insights.&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Networks"></category><category term="Python"></category></entry><entry><title>Distributed Hyperparameter search with sklearn and kubernetes</title><link href="https://pyvideo.org/pycon-de-2018/distributed-hyperparameter-search-with-sklearn-and-kubernetes.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Jakob Karalus</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/distributed-hyperparameter-search-with-sklearn-and-kubernetes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While sklearn provides a good interface to do hyperparameter search on
large &amp;amp; complex model (pipelines), doing these can take up a lot of
time. The traditional way usually includes one beefy machine and a lot
of waiting. In other cases, people tend to “manually” schedule parameter
ranges between nodes, but that can also be problematic since these won't
talk to each other. Kubernetes itself is currently the most prominent
scheduler and shines at distributing task, but is a pretty complex
system in itself.&lt;/p&gt;
&lt;p&gt;In this talk, I will show how you can harness the scheduling of
kubernetes for distributing hyperparameter search with sklearn onto a
cluster of nodes. This can be achieved quite easily and with just a few
changes to the original code, so the Data Scientist won't be bothered by
complex kubernetes internals.&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Big Data"></category><category term="Data Science"></category><category term="DevOps"></category><category term="Infrastructure"></category><category term="Machine Learning"></category></entry><entry><title>Pyccel, a Fortran static compiler for scientific High-Performance Computing</title><link href="https://pyvideo.org/pycon-de-2018/pyccel-a-fortran-static-compiler-for-scientific-high-performance-computing.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Dr. Ing. Ratnani Ahmed</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/pyccel-a-fortran-static-compiler-for-scientific-high-performance-computing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Pyccel&lt;/em&gt; is a new &lt;strong&gt;static compiler&lt;/strong&gt; for Python that uses &lt;strong&gt;Fortran&lt;/strong&gt;
as backend language while enabling High-Performance Computing &lt;strong&gt;HPC&lt;/strong&gt;
capabilities.&lt;/p&gt;
&lt;p&gt;Fortran is a computer language for scientific programming that is
tailored for efficient run-time execution on a wide variety of
processors. Even if the &lt;em&gt;2003&lt;/em&gt; and &lt;em&gt;2008&lt;/em&gt; standards added major
improvements like &lt;em&gt;OOP, Coarrays, Submodules, do concurrent&lt;/em&gt; , etc ...
they are not covered by all available compilers. Moreover, the Fortran
developer still suffers from the lack of &lt;strong&gt;meta-programming&lt;/strong&gt; compared
to &lt;strong&gt;C++&lt;/strong&gt; ones. Therefore, it is more and more difficult for applied
mathematicians and computational physicists to write applications at the
&lt;em&gt;state of art&lt;/em&gt; (targeting CPUs, GPUs, MICs) while implementing
complicated algorithms or numerical schemes.&lt;/p&gt;
&lt;p&gt;Pyccel can be used in two cases:&lt;/p&gt;
&lt;p&gt;In order to achieve the second point, we developed an internal DSL for
&lt;em&gt;types&lt;/em&gt; and &lt;em&gt;macros&lt;/em&gt;. The later is used to map sentences based on
&lt;em&gt;mpi4py&lt;/em&gt; , &lt;em&gt;scipy.linalg.blas or lapack&lt;/em&gt; onto the appropriate calls in
Fortran. Moreover, two parsers, for &lt;em&gt;OpenMP&lt;/em&gt; and &lt;em&gt;OpenACC&lt;/em&gt; , were added
too, allowing for explicit parallelism through the use of pragmas.&lt;/p&gt;
&lt;p&gt;Last but not least, Pyccel is an extension of &lt;strong&gt;Sympy&lt;/strong&gt;. Actually, it
converts a Python code to symbolic expressions/trees, from a Full Syntax
Tree ( &lt;em&gt;RedBaron&lt;/em&gt; ), then annotates the new AST using types or different
settings provided by the user.&lt;/p&gt;
&lt;p&gt;In this talk, after a brief description of Pyccel, I will show different
applications including Finite Elements (1d, 2d, 3d), Semi-Lagrangian
schemes (4d), Kronecker linear solvers, diagnostics for 5D kinetic
simulations and Machine Learning for Partial Differential Equations.&lt;/p&gt;
</summary><category term="Artificial Intelligence"></category><category term="Algorithms"></category><category term="Astronomy"></category><category term="Parallel Programming"></category><category term="Programming"></category><category term="Python"></category><category term="Science"></category></entry><entry><title>reticulate: R interface to Python</title><link href="https://pyvideo.org/pycon-de-2018/reticulate-r-interface-to-python.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Jens Bruno Wittek</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/reticulate-r-interface-to-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python and R are the preferred languages for data science. In 2018,
RStudio introduced its package reticulate and clearly demonstrates that
it favours to join forces. Both languages have strengths and weaknesses.
Tools to combine the strengths will enable easier collaboration in
projects and more possibilities to succeed. Using Python from R gives R
users wider access to functions and makes it easier for Python beginners
to just run scripts and being able to collaborate in Python projects.
The talk will show the possibilities of reticulate: The main part starts
with demonstrating the Python interpreter within R. It will show how to
source Python scripts as well as install and import modules. Then it
will deal with the most important types of Python objects, how they are
represented in R and how to further manipulate them. Thereby, a special
focus is on using Python for data science. In addition, it will be
presented how Conda environments can be created and used from R. A
further application will be the creation of reports with Markdown and
LaTeX where R and Python can be used within one document and share
objects. A last topic is about showing the possibilities for easier
development in RStudio (help regarding Python functions, auto
completion).&lt;/p&gt;
</summary><category term="Artificial Intelligence"></category><category term="Algorithms"></category><category term="Big Data"></category><category term="Deep Learning &amp; Artificial Intelligence"></category><category term="Data Science"></category><category term="NLP"></category><category term="Machine Learning"></category><category term="Visualisation"></category></entry><entry><title>Scalable Scientific Computing using Dask</title><link href="https://pyvideo.org/pycon-de-2018/scalable-scientific-computing-using-dask.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Uwe L. Korn</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/scalable-scientific-computing-using-dask.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;</summary><category term="Algorithms"></category><category term="Big Data"></category><category term="Data Science"></category><category term="Parallel Programming"></category><category term="Python"></category></entry><entry><title>Sports performance evaluation: from cognitive mechanisms to data-driven algorithms</title><link href="https://pyvideo.org/pycon-italia-2018/sports-performance-evaluation-from-cognitive-mechanisms-to-data-driven-algorithms.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Luca Pappalardo</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/sports-performance-evaluation-from-cognitive-mechanisms-to-data-driven-algorithms.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
Not everything that counts can be counted, and not everything that
can be counted counts. A. Einstein&lt;/blockquote&gt;
&lt;p&gt;Humans are routinely asked to evaluate the performance of other
individuals, separating success from failure and affecting outcomes from
science to education and sports. Yet, little is known about the aspects
that determine the human perception of performance. How do expert
reviewers, as well as ordinary people, arrive to their evaluations? To
what extent these evaluations are based on objective performance
features? How are they affected by subjective biases or contextual
influences?&lt;/p&gt;
&lt;p&gt;This talk will answer these fascinating questions focusing on &lt;em&gt;soccer&lt;/em&gt; ,
the most popular sport in the world. Firstly, we will show how machine
learning can accurately reproduce the mechanisms human judges use to
evaluate the performance of soccer players, uncovering limits and
characteristics of the human evaluation process. Second, we design a
Python package that allows, in a completely unsupervised and data-driven
way, to (i) evaluate the quality of a player’s performance and (ii) rank
soccer players based on their performances.&lt;/p&gt;
&lt;p&gt;The first part of the talk will show how soccer ratings assigned to
every player of a game by sport-specialized newspapers are associated
with a high- dimensional vector of features extracted by massive data
which describe any quantifiable aspects of soccer games. The talk will
show how, by using Scikit- learn, we can train an &lt;em&gt;artificial judge&lt;/em&gt;
which learns the relation between technical performance and soccer
ratings, hence &lt;em&gt;accurately reproducing&lt;/em&gt; the human evaluation process. By
inspecting the structure of the artificial judge, the talk will show
that the human evaluation criteria follow a simplistic cognitive process
based on a simple heuristic: judges first select a limited number of
features which attract their attention and then rate a performance based
on the presence of noticeable values, i.e., features values far from the
norm that can be easily brought to mind.&lt;/p&gt;
&lt;p&gt;The second part of the talk will show how to overcome the simplicity of
the human evaluation process presenting &lt;strong&gt;PlayeRank&lt;/strong&gt; , a Python package
which implements an unsupervised data-driven framework to evaluate the
performance of soccer players in the main European leagues. The talk
will show how to use PlayeRank to construct a data-driven ranking of
players and highlight the factors which determine why celebrated
players, like Messi and Cristiano Ronaldo, actually result to be the top
players in the world. The modules composing PlayeRank will be presented,
showing how they allow the user to define the features characterizing a
performance, to detect in an automatic way the relevance of each
player’s action to a game outcome, to detect the role of a player given
his game data, to rate every performance as well as to obtain a final
ranking of all players in Europe. A short demo will be provided during
the talk through a Jupyter notebook, exploiting interactive data
visualization with the Bokeh package.&lt;/p&gt;
&lt;p&gt;The audience will learn how to use Python to construct evaluation
algorithms entirely based on machine learning and big data, a step
forward to a thorough and objective evaluation of performance which
overcomes the biases and the limitations of human perception of
performance. Just a basic knowledge of Python and of data mining
principles is required for a full understanding of the talk.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;venerdì 20 aprile&lt;/strong&gt; at 15:15 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="mathematical-modelling"></category><category term="Python"></category><category term="bigdata"></category><category term="sports-analytics"></category><category term="Machine Learning"></category><category term="analytics"></category><category term="Algorithms"></category><category term="Data Mining"></category><category term="sklearn"></category></entry><entry><title>Learning Algorithms and Data Structures in Python</title><link href="https://pyvideo.org/pycon-japan-2012/learning-algorithms-and-data-structures-in-python.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>TienVu Ho</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/learning-algorithms-and-data-structures-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Programming languages, data structures and algorithms are the fundamentals of computer science. There are a lot of materials that cover these subjects but often do not link well with each other. This talk will explain how to use Python to learn these topics in a fast and efficient manner&lt;/p&gt;
</summary><category term="algorithms"></category><category term="data structures"></category></entry><entry><title>Python in Space - The N Body Problem</title><link href="https://pyvideo.org/pycon-de-2017/python-in-space-the-n-body-problem.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Daniel Jilg</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/python-in-space-the-n-body-problem.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Daniel Jilg&lt;/strong&gt; (&amp;#64;breakthesystem)
I've been an app developer, a CTO, and a Python developer, mostly at the same time. I've carried through it all a desire to learn, a love for data visualisation, and a knack to pass on what I learned. I want to learn, I want to mentor, and I want to create inclusive spaces for people to learn and mentor themselves. In my free time, I open tins for my cats (who have their own instagram account), visit various spaceports around the world, and occasionally dabble in some motor sports.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The N Body Problem is a computationally complex problem that we use to predict how planets and galaxies – and everything in between – move through space. I'll show you some interesting ways to calculate it, and we'll have a look at what to do, should you find yourself in a space ship's pilot seat.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The N Body Problem is one of those famously hard to solve problems in computer science. It describes the movement and interactions of n bodies in space (where n is usually greater 3). You need a lot of computational power to passably approximate the gravitational influences a group of celestial bodies exert on each other. Can Python do that?&lt;/p&gt;
&lt;p&gt;I'll give a super brief overview of the history of trying to predict the motion of moon, sun and the visible stars, and then we'll dive deep into the original N Body Problem, followed by creative ways to reduce the amount of calculation needed and still get a reasonable approximation. Doing this, we can see how to tackle some complex mathematic and algorithmic problems easily using Python.&lt;/p&gt;
&lt;p&gt;If you're a Python beginner or even very early in your career as a developer, you are going to get a first impression of efficient algorithms and complex data structures, and how to measure complexity using Big O notation. If you're more advanced, you'll be treated to a hopefully interesting way of implementing the Barnes-Hutt-algorithm, and some space nerdery.&lt;/p&gt;
&lt;p&gt;Once we have all the pieces in place, let's play with some orbits. We'll see how orbits actually behave, as opposed to what the untrained mind would expect. We can use our new algorithms to try out some manoeuvres often used by real space craft and help you be prepared for when that call from ESA or NASA finally comes, and you'll be invited to work on Python In Space!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="complexity"></category><category term="data structures"></category><category term="algorithms"></category><category term="space"></category><category term="python"></category></entry><entry><title>Why Python Has Taken Over Finance</title><link href="https://pyvideo.org/pycon-de-2017/why-python-has-taken-over-finance.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Yves Hilpisch</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/why-python-has-taken-over-finance.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Yves Hilpisch (&amp;#64;dyjh)&lt;/p&gt;
&lt;p&gt;Not too long ago, the finance field was dominated by compiled languages, such as C or C++, since they were considered to be the right choice for the implementation of computationally demanding algorithms.&lt;/p&gt;
&lt;p&gt;Over the last couple of years, Python and its fast growing eco-system of (data analysis) packages have made it today's language of choice for the financial industry.&lt;/p&gt;
&lt;p&gt;This talk illustrates, based on some simple examples, the benefits of working with a high level programming language, such as Python, for the tasks at hand in finance. The examples illustrate that really concise Python code can achieve high performance results.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="algorithms"></category><category term="performance"></category><category term="finance"></category><category term="python"></category></entry></feed>