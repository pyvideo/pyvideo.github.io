<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_asko-soukka.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-10-31T00:00:00+00:00</updated><entry><title>Nix for Python developers</title><link href="https://pyvideo.org/pycon-finland-2015/nix-for-python-developers.html" rel="alternate"></link><published>2015-10-19T00:00:00+00:00</published><updated>2015-10-19T00:00:00+00:00</updated><author><name>Asko Soukka</name></author><id>tag:pyvideo.org,2015-10-19:pycon-finland-2015/nix-for-python-developers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyCon Finland 2015
Asko Soukka - Nix for Python developers&lt;/p&gt;
&lt;p&gt;What do you do when your python project has dependencies beyond Python? Nix is a &amp;quot;purely functional&amp;quot; package manager, which can also be used like &amp;quot;virtualenv&amp;quot;, but for everything. I would cover single user installation of Nix package manager on Linux or Mac, defining Nix based development environments, generating Nix expressions for large Python projects using buildout, and finally, building minimal Docker images from SCRATCH by using those generated expressions.&lt;/p&gt;
&lt;p&gt;About the author:  I'm a system designer at University of Jyväskylä and core contributor for a Python based open source CMS called Plone. I have blogged about my topics at &lt;a class="reference external" href="https://datakurre.pandala.org/"&gt;https://datakurre.pandala.org/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>ZODB – the Python database</title><link href="https://pyvideo.org/pycon-finland-2016/zodb-the-python-database.html" rel="alternate"></link><published>2016-10-31T00:00:00+00:00</published><updated>2016-10-31T00:00:00+00:00</updated><author><name>Asko Soukka</name></author><id>tag:pyvideo.org,2016-10-31:pycon-finland-2016/zodb-the-python-database.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ZODB – the Python database by Asko Soukka&lt;/p&gt;
&lt;p&gt;ZODB is a mature and well maintained object-oriented database for transparently and persistently storing Python object trees (objects and their references). In other words, ZODB stores Python objects as they are – no object-relational mapping required. In addition to Python objects, ZODB can also store binary blobs (like images) attached to those objects.&lt;/p&gt;
&lt;p&gt;I give a small tutorial on getting started with ZODB with a simple command-line app written in Python 3. I cover the basic ZODB usage, testing and maintenance. Finally, I give a short overview of the ZODB ecosystem and demo of SubstanceD – a ZODB embracing web app framework.&lt;/p&gt;
&lt;p&gt;About the author: Asko Soukka is a system designer at University of Jyväskylä and a core contributor for Plone - an open source CMS written in Python. He has have over 10 years of experience in using ZODB in CMS context with databases up to 100 GB.&lt;/p&gt;
</summary></entry></feed>