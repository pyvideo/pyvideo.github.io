<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_frank-rousseau.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-09-24T00:00:00+00:00</updated><entry><title>Le Python dans le film d'animation</title><link href="https://pyvideo.org/pycon-fr-2017/le-python-dans-le-film-danimation.html" rel="alternate"></link><published>2017-09-24T00:00:00+00:00</published><updated>2017-09-24T00:00:00+00:00</updated><author><name>Frank Rousseau</name></author><id>tag:pyvideo.org,2017-09-24:pycon-fr-2017/le-python-dans-le-film-danimation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;S'il y a bien une industrie où le Python est omniprésent c'est dans celle du film d'animation. Quand les artistes ont voulu automatiser certaines de leurs actions, ils ont eu la joie de pouvoir le faire via les langages de script propriétaires. Leur bonheur fut de courte durée quand ils constatèrent le design médiocre de ceux-ci. Heureusement Python est arrivé ! Un premier soft a permis d'écrire ses scripts en Python, puis un deuxième et enfin tous. Les graphistes découvraient un vrai langage de programmation et s'y donnait à coeur joie ! Les scripts évoluant,  les interfaces devinrent de plus en plus complexes. Qt et ses bindings Python devinrent la référence. Les graphistes les plus aguerris passèrent développeurs et continuèrent à faire leurs API et leurs outils standalones en Python. Et aujourd'hui, avec la gestion de configuration, Saltstack et Ansible envahissent les parcs informatiques.&lt;/p&gt;
&lt;p&gt;Lors de cette conférence, nous ferons l'état de la situation. Nous regarderons les outils développés avec Python et comment cela évolue. Et enfin nous regarderons les bibliothèques qui peuvent être utilisées dans d'autre contextes et donc vous intéresser.&lt;/p&gt;
</summary></entry></feed>