<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Kim Joo-won Lee Sang-hyun</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_kim-joo-won-lee-sang-hyun.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-10-01T00:00:00+00:00</updated><subtitle></subtitle><entry><title>That, that I like ‘BWASP’</title><link href="https://pyvideo.org/pycon-korea-2022/that-that-i-like-bwasp.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Kim Joo-won Lee Sang-hyun</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/that-that-i-like-bwasp.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The web application environment is the platform with the most user contact points and security incident types, and vulnerability analysis using various automated tools has been performed for a long time. However, we realized that these tools have limitations and are not very helpful to manual diagnosticians. Therefore, we …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The web application environment is the platform with the most user contact points and security incident types, and vulnerability analysis using various automated tools has been performed for a long time. However, we realized that these tools have limitations and are not very helpful to manual diagnosticians. Therefore, we planned to create a tool that can provide manual diagnosticians with useful information in advance from a manual perspective to reduce time spent. In this presentation, we will share how we conducted research to predict vulnerabilities while developing a web vulnerability manual analysis tool and what Python modules were utilized.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Security"></category></entry></feed>