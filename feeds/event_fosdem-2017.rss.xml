<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 05 Feb 2017 00:00:00 +0000</lastBuildDate><item><title>Asynchronous programming with Coroutines in PythonA gentle introduction</title><link>https://pyvideo.org/fosdem-2017/asynchronous-programming-with-coroutines-in-pythona-gentle-introduction.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A talk about async programming, touching briefly on the history &amp;amp; Python3.4 before moving on to introducing async/await in Python3.5 (and how to test)Briefly mentions curio by DaBeaz.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ewoud Van Craeynest</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/asynchronous-programming-with-coroutines-in-pythona-gentle-introduction.html</guid></item><item><title>asynctesteasier testing of asyncio code</title><link>https://pyvideo.org/fosdem-2017/asynctesteasier-testing-of-asyncio-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;asynctest enhances the standard python package unittest with features for asyncio. This talk aims at presenting asynctest and discuss various practices around unit testing of code using asyncio.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Richard</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/asynctesteasier-testing-of-asyncio-code.html</guid></item><item><title>Cloud Native PythonThe road to being a first-class Kubernetes application</title><link>https://pyvideo.org/fosdem-2017/cloud-native-pythonthe-road-to-being-a-first-class-kubernetes-application.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverside applications are more and more likely to need to run indynamic cloud environments where they can automatically scale asrequired.  One rightfully popular approach is to run the applicationas a Docker container inside a Kubernetes cluster, giving you a lot ofoperational benefits thanks to the Kubernetes folks.For the most part it is rather easy to make your Python applicationwork inside a Docker container.  But there are a number of commonpatterns one can follow to save time by delegating more things to theruntime environment.  Furthermore you can start adding a few simplenon-intrusive features to your application which will help improve theapplication live-cycle in the cluster, ensuring smooth hand-over whenmigrating the container to different nodes or scaling it up or down.This talk will discuss how to write a Python application which willbehave well in this environment, starting with the basics steps youcan rely on the runtime for, covering logging and all the way tosupporting the service life-cycle, health checking and monitoring in aKubernetes environment.  You will see that building a cloud-nativeapplication is not very hard and something you can graduallyintroduce.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Floris Bruynooghe</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/cloud-native-pythonthe-road-to-being-a-first-class-kubernetes-application.html</guid></item><item><title>Debugging Hung Python Processes with GDB</title><link>https://pyvideo.org/fosdem-2017/debugging-hung-python-processes-with-gdb.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When things go wrong in production, it can be necessary to troubleshoot problems where they occur, instead of in a development environment. In those situations having a working knowledge of GDB, GDB Python Extensions, and strace is very helpful. You will see some  simple techniques to get insight into those situations. This talk  outlines several techniques for connecting to an already running, &amp;quot;stuck&amp;quot;, or deadlocked Python process using GDB for debugging.During the talk, we will:inspect the current state of threads withuse and demo the GDB macros for Pythoninspect a locally running process and a core dump collected from a remote machineuse strace to gather system call information about a processdiscuss  the SIGTRAP handler as a proactive way to make rpdb available in production.I have had to debug several hard-to-find bugs that were very infrequent deadlocks using Python. Furthermore it was happening on remote machines I could not have network access to. This technique was invaluable in those situations.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Bouterse</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/debugging-hung-python-processes-with-gdb.html</guid></item><item><title>GrimoireLaba Python toolset for software development analytics</title><link>https://pyvideo.org/fosdem-2017/grimoirelaba-python-toolset-for-software-development-analytics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk will explain how to analyze software development repositories of common use in the free software community with [GrimoireLab tools][&lt;a class="reference external" href="http://grimoirelab.github.io"&gt;http://grimoirelab.github.io&lt;/a&gt;], a toolset for software development analytics writting in Python. It will start by explaining how to retrieve data from git, Bugzilla, GitHub, mailing lists, StackOverflow, Gerrit, and many other repositories by, and organizing it in a database. The talk will later explain how this database can be exploited with several components of the toolset, for different purposes. In this context, special attention will be given to how to extract useful information from it using Python/Pandas and iPython/Jupyter Notebooks; and how to use ElasticSearch/Kibana to deploy actionable dashboards that show data in all its glory.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jesus M. Gonzalez-Barahona</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/grimoirelaba-python-toolset-for-software-development-analytics.html</guid></item><item><title>Hacking midi devices with StepPya step sequencer in Python</title><link>https://pyvideo.org/fosdem-2017/hacking-midi-devices-with-steppya-step-sequencer-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you're making electronic music in 2017, you're likely to have seen or used one of Native Instrument's &amp;quot;Maschine&amp;quot;, &amp;quot;Maschine Jam&amp;quot;, Novation's &amp;quot;Circuit&amp;quot;, or Ableton's &amp;quot;Push&amp;quot;...These pad-based devices allow musicians to trigger samples, and create rhythms intuitively by the means of a &amp;quot;step sequencer&amp;quot;.The said step sequencer is implemented in the box and stays in it...Thanks to &amp;quot;mido&amp;quot; and &amp;quot;portmidi&amp;quot; libraries, I designed a lightweight open source software sequencer (without a GUI), exposing abstractions for python programmers to use their existing MIDI-enabled hardware. My MiniNova, Launch Control and Quneo devices were hacked this way to create new functionality together.The talk starts with a quick explanation of MIDI and step sequencing, then describes the benefits and challenges of using Python in this context, as well as the choice of gevent against other async frameworks. It ends of course with a live demo!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yann Gravrand</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/hacking-midi-devices-with-steppya-step-sequencer-in-python.html</guid></item><item><title>How to run a stable benchmark</title><link>https://pyvideo.org/fosdem-2017/how-to-run-a-stable-benchmark.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Victor Stinner</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/how-to-run-a-stable-benchmark.html</guid></item><item><title>Introduction to Pandas. Introduction to the open source data analysis and manipulation library</title><link>https://pyvideo.org/fosdem-2017/introduction-to-pandas-introduction-to-the-open-source-data-analysis-and-manipulation-library.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will be based on open source data manipulation and analysis python library – Pandas. It will mainly focus on exploring the most commonly used features of the library like – integrated indexing using DataFrame objects, slicing and subsetting of large data sets, merging, joining and size mutability of data structures, hierarchical axis indexing to work with high-dimensional data in a lower-dimensional data, flexible reshaping and pivoting of data sets etc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sahil Dua</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/introduction-to-pandas-introduction-to-the-open-source-data-analysis-and-manipulation-library.html</guid></item><item><title>It's time for datetime. Painless working with time in python</title><link>https://pyvideo.org/fosdem-2017/its-time-for-datetime-painless-working-with-time-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working with time is not a trivial challenge. Python includes a native module in the standard library to work with it but datetime keeps being together with unicode a common source of errors. This often leads to the widespread of many other libraries in the attempt of easing the work of working with datetime. Datetime is one of those API that looks easy to use but given the many concepts around time, is it easy to get backfired if the developer has not solid knowledge about the them.In this talk we will overview the main concepts about timestamps represented through datetime objects, the limitations on the standard library and some simple steps to try to avoid the common mistakes that everyone can fall into.Naive datetimes (which the datetime API works by default with) are a great tool to represent calendar times, but when talking about timestamps (focus of this talk) timezones is n essential part of it and the datetime module can be tricky to use for that use cases.We will also speak about different standards of time, time zones, Daylight Saving Times, leap seconds, serialization and datetime arithmetics.The talk will be focused on giving the foundations that everyone knows to be able to understand and work efficiently and without making painful mistakes when dealing with time related algorithms.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mario Corchero</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/its-time-for-datetime-painless-working-with-time-in-python.html</guid></item><item><title>MSS - Software for planning research aircraft missions</title><link>https://pyvideo.org/fosdem-2017/mss-software-for-planning-research-aircraft-missions.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scientific aircraft research flights have to be planned beforehand. For that it is necessary to have model forecasts of relevant quantities such as meteorological parameters, chemical composition or particle information to guide the aircraft to the location of interest.We develop the MSS Project to make decissions easier where to investigate.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Reimar Bauer</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/mss-software-for-planning-research-aircraft-missions.html</guid></item><item><title>Optimization with PuLP</title><link>https://pyvideo.org/fosdem-2017/optimization-with-pulp.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Computer Aided Scheduling using Linear Programming with PuLP&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc-André Lemburg</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/optimization-with-pulp.html</guid></item><item><title>OSINT Tools for Security AuditingOpen Source Intelligence with python tools</title><link>https://pyvideo.org/fosdem-2017/osint-tools-for-security-auditingopen-source-intelligence-with-python-tools.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk would aim about making an introduction to open source intelligence automation tools(OSINT)  developed in Python, commenting the process we can follow to obtain, analyze and exploitpublic information in social networks and public servers.The final objective is obtain the  maximum possible of knowledge in the context we are auditing.&lt;/p&gt;
&lt;p&gt;The talking points could be:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction searching information from multiples sources with OSINT tools.&lt;/li&gt;
&lt;li&gt;OSINT tools developed with python for extracting public information from servers and domains.&lt;/li&gt;
&lt;li&gt;Advantages and limitations these tools from the user point of view.&lt;/li&gt;
&lt;li&gt;Comment how these tools are developed and the main modules used in their development.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of the tools to comment are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Censys and Shodan Python API as search engine server information.&lt;/li&gt;
&lt;li&gt;SpiderFoot and recon-ng as a tools for extracting information from multiple sources and automate the footprinting process.&lt;/li&gt;
&lt;li&gt;the Harvester as Python script for extracting emails and hostnames in a particular domain.&lt;/li&gt;
&lt;li&gt;Osrframework and Maltego OSINT visualisation tool&lt;/li&gt;
&lt;li&gt;Libraries and modules for collecting information from Tor and ZeroNet networks&lt;/li&gt;
&lt;li&gt;Tinfoleak and Tweepy as Python scripts for data extraction on twitter.&lt;/li&gt;
&lt;li&gt;FullContact API for obtain social networks profiles associated with an email address.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">José Manuel Ortega</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/osint-tools-for-security-auditingopen-source-intelligence-with-python-tools.html</guid></item><item><title>prompt_toolkit two years later</title><link>https://pyvideo.org/fosdem-2017/prompt_toolkit-two-years-later.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Two years ago at Fosdem 2015, I presented prompt_toolkit, a library for building command line applications.A lot of progress was made, and it became the foundation for the UI in many tools, including IPython, http-prompt, xonsh and others.During this talk, we'll have a look at how prompt_toolkit progressed, how it became successful, how it created a community/ecosystem of many new command line applications, and the future.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonathan Slenders</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/prompt_toolkit-two-years-later.html</guid></item><item><title>Python and Raspberry PiPhysical computing, GPIO, HATs and IoT with Python</title><link>https://pyvideo.org/fosdem-2017/python-and-raspberry-piphysical-computing-gpio-hats-and-iot-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducing Python developers to the world of physical computing and IoT using Python on the Raspberry Pi.There's great fun to be had using the Pi's GPIO pins to connect with the real world for home automation and IoT projects. Python libraries like GPIO Zero, Picamera and Sense HAT provide a simple interface to GPIO devices, HATs and more.I will demonstrate the possibilities and show the power of Python in this environment.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Nuttall</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/python-and-raspberry-piphysical-computing-gpio-hats-and-iot-with-python.html</guid></item><item><title>Python and "the SOLID principles"</title><link>https://pyvideo.org/fosdem-2017/python-and-the-solid-principles.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python and &amp;quot;the SOLID principles&amp;quot;. This is an introduction to the first five principles named by Robert C. Martin (uncle Bob).These principles are the foundation of a good software architecture. We will have a look at how this applies to Python code. We will have a look at abstract base classes, dependency inversion and so on.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonathan Slenders</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/python-and-the-solid-principles.html</guid></item><item><title>Python Data Structures implementationlist, dict: how does CPython actually implement them?</title><link>https://pyvideo.org/fosdem-2017/python-data-structures-implementationlist-dict-how-does-cpython-actually-implement-them.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Flavien Raynaud</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/python-data-structures-implementationlist-dict-how-does-cpython-actually-implement-them.html</guid></item><item><title>Python Winding Itself Around DatacubesHow to Access Massive Multi-Dimensional Arrays in a Pythonic Way</title><link>https://pyvideo.org/fosdem-2017/python-winding-itself-around-datacubeshow-to-access-massive-multi-dimensional-arrays-in-a-pythonic-way.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While python has developed into the lingua franca in Data Science there is often a paradigm break when accessing specialized tools. In particular for one of the core data categories in science and engineering, massive multi-dimensional arrays, out-of-memory solutions typically employ their own, different models.We discuss this situation on the example of the scalable open-source array engine, rasdaman (&amp;quot;raster data manager&amp;quot;) which offers access to and processing of Petascale multi-dimensional arrays through an SQL-style array query language, rasql. Such queries are executed in the server on a storage engine utilizing adaptive array partitioning and based on a processing engine implementing a &amp;quot;tile streaming&amp;quot; paradigm to allow processing of arrays massively larger than server RAM. The rasdaman QL has acted as blueprint for forthcoming ISO Array SQL and the Open Geospatial Consortium (OGC) geo analytics language, Web Coverage Processing Service, adopted in 2008. Not surprisingly, rasdaman is OGC and INSPIRE Reference Implementation for their &amp;quot;Big Earth Data&amp;quot; standards suite.Recently, rasdaman has been augmented with a python interface which allows to transparently interact with the database (credits go to Siddharth Shukla's Master Thesis at Jacobs University). Programmers do not need to know the rasdaman query language, as the operators are silently transformed, through lazy evaluation, into queries. Arrays delivered are likewise automatically transformed into their python representation.The presenter is Principal Architect of rasdaman, editor of several &amp;quot;Big Data&amp;quot; standards, and co-chair of &amp;quot;Big Data&amp;quot; relevant working groups in several high-impact bodies. In the talk, the rasdaman concept will be illustrated with the help of large-scale real-life examples of operational satellite image and weather data services, and sample python code will be demonstrated live.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Baumann</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/python-winding-itself-around-datacubeshow-to-access-massive-multi-dimensional-arrays-in-a-pythonic-way.html</guid></item><item><title>rinohtypeThe Python document processor</title><link>https://pyvideo.org/fosdem-2017/rinohtypethe-python-document-processor.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;rinohtype is a batch document processor that renders structured documents to PDF based on a document template and style sheet. rinohtype is written in Python 3 and supports CommonMark (Markdown) and reStructuredText input. A Sphinx builder is also provided that can produce PDFs from Sphinx projects, obviating the need for LaTeX.The talk will present the design of rinohtype and illustrate how the style of documents can be easily customized using document templates and style sheets.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brecht Machiels</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/rinohtypethe-python-document-processor.html</guid></item><item><title>Script the Web with WeboobYes we can use the Web outside of Browsers</title><link>https://pyvideo.org/fosdem-2017/script-the-web-with-weboobyes-we-can-use-the-web-outside-of-browsers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Weboob is a python framework for web scraping, providing command-line tools and GUI applications.It supports several types of websites, from video collections to bug trackers, online banking or parcel tracking.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Revol</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/script-the-web-with-weboobyes-we-can-use-the-web-outside-of-browsers.html</guid></item><item><title>SelinonDistributed dynamic task flow management with Python</title><link>https://pyvideo.org/fosdem-2017/selinondistributed-dynamic-task-flow-management-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Selinon is a project that is based on popular Python project Celery. Celery is a distributed task queue that offers one to run tasks. Selinon gives one a power to define flows and dependencies in flows, schedule tasks based on results of workers, success or any external events, handle errors, trace flow state and actions in a distributed environment. Its main goal is to split task logic (code) and persistence logic from data and time dependencies between tasks in flows that are stated in simple YAML configuration files.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fridolín Pokorný</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/selinondistributed-dynamic-task-flow-management-with-python.html</guid></item><item><title>Storing metrics at scale with GnocchiThe Python based time series database</title><link>https://pyvideo.org/fosdem-2017/storing-metrics-at-scale-with-gnocchithe-python-based-time-series-database.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gnocchi is a time series database written in Python, that has been created in the context of the OpenStack cloud computing project. It offers highly-scalable data storage for measurements and provides access to its data via a REST API.In this lecture, we'll discuss the features the project is offering to its users, and how they can easily be leveraged in any application. In a second part, we'll see how the project has been built to scale, how Python was leveraged and made scalable.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julien Danjou</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/storing-metrics-at-scale-with-gnocchithe-python-based-time-series-database.html</guid></item><item><title>TankerEmbrace the relational model</title><link>https://pyvideo.org/fosdem-2017/tankerembrace-the-relational-model.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tanker goal is to allow easy batch operations without compromising database modeling. For pandas users, it's like DataFrame.to_sql on steroids.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bertrand Chenal</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/tankerembrace-the-relational-model.html</guid></item><item><title>The power of duck typing and linear algrebra How linear algebra and python make a good fit</title><link>https://pyvideo.org/fosdem-2017/the-power-of-duck-typing-and-linear-algrebra-how-linear-algebra-and-python-make-a-good-fit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Algebraic operator are every where in python. + = * /Dict are every where in python.What can we achieve by combining both of them?Slides are here&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julien Tayon</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/the-power-of-duck-typing-and-linear-algrebra-how-linear-algebra-and-python-make-a-good-fit.html</guid></item><item><title>Webpush notifications for Kinto</title><link>https://pyvideo.org/fosdem-2017/webpush-notifications-for-kinto.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;After introducing the Kinto project I am working on, I will explain why push notifications can be useful in the web environment and how I integrated the web push API in Python in Kinto as well as on the client using service workers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mansimar Kaur</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/webpush-notifications-for-kinto.html</guid></item></channel></rss>