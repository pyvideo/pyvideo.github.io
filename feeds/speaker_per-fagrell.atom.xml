<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_per-fagrell.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-09-17T00:00:00+00:00</updated><entry><title>How to write actually object-oriented python</title><link href="https://pyvideo.org/pygotham-2014/how-to-write-actually-object-oriented-python.html" rel="alternate"></link><published>2014-09-17T00:00:00+00:00</published><updated>2014-09-17T00:00:00+00:00</updated><author><name>Per Fagrell</name></author><id>tag:pyvideo.org,2014-09-17:pygotham-2014/how-to-write-actually-object-oriented-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The multi-paradigm flexibility of Python can bite developers new to
Python or object-orientation, since self-restraint and design know-how
is needed to keep code style paradigm-consistent. Learn about OO
principles like SOLID and Tell-Don't-Ask and how they apply in Python
for more uniform, testable, and working OO code.&lt;/p&gt;
</summary></entry></feed>