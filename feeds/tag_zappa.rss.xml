<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 05 May 2019 00:00:00 +0000</lastBuildDate><item><title>Immagino: un racconto di serverless e codeless (più o meno).</title><link>https://pyvideo.org/pycon-italia-2019/immagino-un-racconto-di-serverless-e-codeless-piu-o-meno.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In &lt;a class="reference external" href="https://gs1it.org/"&gt;GS1 Italy&lt;/a&gt; abbiamo realizzato il servizio
&lt;a class="reference external" href="http://immagino.biz/"&gt;Immagino&lt;/a&gt;, dove vengono digitalizzati prodotti
merceologici. La parte interessante è come ci portiamo in casa le
immagini e le descrizioni: abbiamo creato una pipeline di elaborazione
con &lt;a class="reference external" href="https://aws.amazon.com/"&gt;aws&lt;/a&gt;, vedremo insieme il disegno
dell’applicazione, i servizi (sqs, sns, lambda, s3) e package (zappa,
asyncio, boto3) utilizzati. Non servono partiolari conoscenze di aws e
Python, l’obiettivo è mostrare un caso d’uso in produzione.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1690"&gt;https://python.it/feedback-1690&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 11:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Strappazzon</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-italia-2019/immagino-un-racconto-di-serverless-e-codeless-piu-o-meno.html</guid><category>aws</category><category>boto3</category><category>zappa</category><category>lambda-functions</category><category>packages</category><category>tools</category><category>pythonscripts</category></item><item><title>Deploy your Flask or Django app to AWS Lambda with Zappa</title><link>https://pyvideo.org/pycon-ca-2017/deploy-your-flask-or-django-app-to-aws-lambda-with-zappa.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Zappa makes it easy to deploy your Flask or Django (or really, any WSGI app) to Amazon AWS Lambda, by hooking into AWS API Gateway.&lt;/p&gt;
&lt;p&gt;In this talk, you'll get a brief introduction to how to use Zappa with your existing or upcoming projects, from how to install it to how to use it. If there's a stable connection, we'll even deploy a simple app during the talk, in only a few seconds.&lt;/p&gt;
&lt;p&gt;Lambda is an inexpensive and very highly concurrent way to run &amp;quot;serverless&amp;quot; applications. I'm currently using this technology to deploy an application that has a concurrency of 10,000, for one of the largest companies in the world.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sean Coates</dc:creator><pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-11-19:pycon-ca-2017/deploy-your-flask-or-django-app-to-aws-lambda-with-zappa.html</guid><category>zappa</category></item></channel></rss>