<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Cheuk Ho</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_cheuk-ho.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-06-03T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Do we have a diversity problem in Python community?</title><link href="https://pyvideo.org/europython-2019/do-we-have-a-diversity-problem-in-python-community.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Cheuk Ho</name></author><id>tag:pyvideo.org,2019-07-10:/europython-2019/do-we-have-a-diversity-problem-in-python-community.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The diversity statement quoted as follows: “The Python Software
Foundation and the global Python community welcome and encourage
participation by everyone. Our community is based on mutual respect,
tolerance, and encouragement, and we are working to help each other live
up to these principles. We want our community to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The diversity statement quoted as follows: “The Python Software
Foundation and the global Python community welcome and encourage
participation by everyone. Our community is based on mutual respect,
tolerance, and encouragement, and we are working to help each other live
up to these principles. We want our community to be more diverse:
whoever you are, and whatever your background, we welcome you.”&lt;/p&gt;
&lt;p&gt;Diversity, big deal! As an active members and event organisers (and also
on the minority side of the gender) in the Python community, we have
alway been concern by the question of: Do we truly have a problem in
diversity? Especially, gender diversity. We would like to find out the
truth, by data science, and see if we can find a clue why and how we can
fix it.&lt;/p&gt;
&lt;p&gt;First, we will show the research others did regarding the representation
of women in the R and Python communities [1]. Then, we will show the
research that we did based on our experience and statistic. Including
static analysis of the speakers diversity (regarding gender) at major
PyCon and PyData conferences. Finally, as we all care about diversity
and want improvements, we would like to find out the reason and what we
can do about it. We would propose what we, the minorities and allies,
could do against this seemingly unbalance situation and make the
community better.&lt;/p&gt;
&lt;p&gt;This talk is for all that who cares about diversity in our community.&lt;/p&gt;
&lt;p&gt;[1]
&lt;a class="reference external" href="https://reshamas.github.io/why-women-are-flourishing-in-r-community-but"&gt;https://reshamas.github.io/why-women-are-flourishing-in-r-community-but&lt;/a&gt;-
lagging-in-python/&lt;/p&gt;
&lt;p&gt;Update: slides at
&lt;a class="reference external" href="https://slides.com/cheukting_ho/do-we-have-a-diversity"&gt;https://slides.com/cheukting_ho/do-we-have-a-diversity&lt;/a&gt;-
problem-in-python-community&lt;/p&gt;
</content><category term="EuroPython 2019"></category><category term="Community"></category><category term="Conferences and Meet-Ups"></category><category term="Data Science"></category><category term="Static Analysis"></category></entry><entry><title>How to be Pythonic? Design a Query Language in Python</title><link href="https://pyvideo.org/europython-2020/how-to-be-pythonic-design-a-query-language-in-python.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Cheuk Ho</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/how-to-be-pythonic-design-a-query-language-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Query language is an important part of a database system, it is how people manage their data and how they can make the data useful to them. Starting from the 70s, the world is full of relational databases and SQL was the way to make queries. However, SQL is …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Query language is an important part of a database system, it is how people manage their data and how they can make the data useful to them. Starting from the 70s, the world is full of relational databases and SQL was the way to make queries. However, SQL is valuable to an injection attack. Lots of efforts are being used to stop those attacks and it made workflow become less efficient.&lt;/p&gt;
&lt;p&gt;We don’t want to make the same mistake. That’s why using a Python query language is good. Having the Python community in our mind, we created WOQLpy, an open-source query language that lets users build queries in Python, instead of JSON-LD which is the native query language for our TerminusDB database. Now users can store data with a knowledge graph and make graph data visualization with Python.&lt;/p&gt;
&lt;p&gt;In the first part of the talk, we will talk about what challenges we have when creating a query language in Python, the method we use, the idea and theory behind, and how WOQLpy work. This part will include a quick live demo of using WOQLpy so audiences can have an impression on how to make a query and get the task done, that is, getting a meaningful graph visualization form the source CSVs. The process of how to create a database and schema, loading the data form many CSVs, making a query and visualization, will be demonstrated using just one python script.&lt;/p&gt;
&lt;p&gt;In the second part of the talk, we want to stimulate a discussion of what is a good design in Python and what is not. This part will be more interactive with the audiences, as we want to hear from you all, what would be the best for Pythonistas. By first suggesting some possible design, we will use a live voting system to gather opinions. This part of the talk will extend to the Q &amp;amp; A sessions to allow further discussions.&lt;/p&gt;
&lt;p&gt;This talk is for Pythonista at all levels who are interested in starting to design a package in Python, no matter if the audience has published a python library or not. By attending this talk, audiences will learn about how to design a Python package that will be useful to Pythonistas and hopefully encourage more people to publish open-source packages online.&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="APIs"></category><category term="Databases"></category><category term="Graph Databases"></category><category term="Open-Source"></category><category term="Programming"></category></entry><entry><title>AI and algorithmic art</title><link href="https://pyvideo.org/pycon-italia-2019/ai-and-algorithmic-art.html" rel="alternate"></link><published>2019-05-03T00:00:00+00:00</published><updated>2019-05-03T00:00:00+00:00</updated><author><name>Cheuk Ho</name></author><id>tag:pyvideo.org,2019-05-03:/pycon-italia-2019/ai-and-algorithmic-art.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Many people think of neural networks as magic boxes, using them as such
is similar to allowing the computer or the machine to have a mind of
their own. Classification and prediction are the best-known applications
of these algorithms. But it has been demonstrated that they can also …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Many people think of neural networks as magic boxes, using them as such
is similar to allowing the computer or the machine to have a mind of
their own. Classification and prediction are the best-known applications
of these algorithms. But it has been demonstrated that they can also be
used in multiple creative or artistic ways such as generating pictures,
musical pieces, humour based dialogues or jokes and plays or literary
pieces. Leading to the following question: can these black boxes express
true creativity? A trait commonly associated with humans.&lt;/p&gt;
&lt;p&gt;Description&lt;/p&gt;
&lt;p&gt;Algorithmic Art (or computer generated art) refers to the use of
computer algorithms to create artistic pieces. Algorithmic art has been
around from the early 1960s, when artists used a plotter controlled by a
computer to create some visual artwork pieces. In the 80s when computer
graphics became more accessible, digital fractal artworks dominated to
become the mainstream of algorithmic art. By the end of the 80s, genetic
algorithms had matured enough to have a major influence in the
algorithmic composition of music. At the same time, the artificial
neural networks were used to explore the creation of musical
compositions. Most recently, thanks to the blooming of neural network
frameworks (e.g. tensorflow), availability of GPUs and development in
sophisticated neural network architecture, they play an important part
in academic research and data science business applications. Besides
that, these enhanced resources and frameworks have enabled the neural
networks to make significant contributions in the area of Algorithmic
Arts. Examples of this are the Deep Dream and artistic style transfer
and GANs (generative adversarial network) which can generate highly
deceptive pictures. A specially trained neural network is also capable
of composing music mimicking the style of Beethoven or generating a
modern music piece. In the same way, a neural network can be used to
generate poems or literary pieces in the true style of Shakespeare or
Hamilton. In this talk, we will go through a gallery of art and music
created by algorithms, showcasing what roles computers took in different
algorithmic art forms. From the earliest fractal art to the music and
pictures generated by the state of the art neural networks and GANs.
This talk is suitable for everyone, from the curious general public to
experts in the field of neural networks, both will find this talk
inspiring and amusing.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Slide for this talk:
&lt;a class="reference external" href="https://slides.com/cheukting_ho/ai-and-algorithmic-art/live#/"&gt;https://slides.com/cheukting_ho/ai-and-algorithmic-art/live#/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1778"&gt;https://python.it/feedback-1778&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 11:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon Italia 2019"></category><category term="art"></category><category term="pydata"></category><category term="AI"></category><category term="Algorithms"></category><category term="algorithmicart"></category><category term="neural network"></category></entry><entry><title>Trojan Source - Can we trust open-source anymore?</title><link href="https://pyvideo.org/pycon-italia-2022/trojan-source-can-we-trust-open-source-anymore.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Cheuk Ho</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/trojan-source-can-we-trust-open-source-anymore.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Trojan Source - Can we trust open-source anymore? - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Recently, a paper is published to demonstrate how a visibly valid
contribution can contain malicious code by exporting the Unicode control
characters. Some of these attacks has been tested on Python and it
works. Shall the Python and open-source …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Trojan Source - Can we trust open-source anymore? - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Recently, a paper is published to demonstrate how a visibly valid
contribution can contain malicious code by exporting the Unicode control
characters. Some of these attacks has been tested on Python and it
works. Shall the Python and open-source communities be concerned?
Background:&lt;/p&gt;
&lt;p&gt;After researchers at the University of Cambridge published a paper(
about a malicious attack named Trojan Source, which exploited the fact
that some program interpreters, like CPython, can handle Unicode. This
has caused concerns in the open-source community about the malicious
contribution that looks totally legitimate in human eyes but contain
invisible attacks. As a member of the Python community, we should all be
aware of that and understand how we can prevent this attack to happen.&lt;/p&gt;
&lt;p&gt;About this talk:&lt;/p&gt;
&lt;p&gt;In this talk, Cheuk will decode the finding in this paper to a level
that can be understood by everyone. She will start with a joke example
who you can mess up someone by using Unicode. She will then explain what
is Unicode and why it causes trouble. Afterwards, she will explain the
Python examples( in the paper and why it can be dangerous. Lastly, she
will open up a discussion on how we should defend ourselves from those
attacks and what we can do as a community.&lt;/p&gt;
&lt;p&gt;Outline (30 mins talk):&lt;/p&gt;
&lt;p&gt;**5 minutes - Introduction, the opening of the talk&lt;/p&gt;
&lt;p&gt;In this session, Cheuk will ask audiences to debug a code snippet that
looks absolutely fine but will not work as code. She will explain that
this is the same concept used in Trojan Source.&lt;/p&gt;
&lt;p&gt;**10 mins - What is Unicode&lt;/p&gt;
&lt;p&gt;In this session, Cheuk will give an introduction about what is Unicode,
what it is to a computer and why we need Unicode in computers. She will
also explain how the benefit of having Unicode can also be a downfall to
make us vulnerable to the Trojan Source attack.&lt;/p&gt;
&lt;p&gt;**10 mins - How Trojan Source works in Python&lt;/p&gt;
&lt;p&gt;In this session, Cheuk will show a few examples using the Trojan Source
in legitimate Python code. She will point out how the attack is hiding
in the source code and in what cases it can be dangerous.&lt;/p&gt;
&lt;p&gt;**5 mins - How to protect ourselves&lt;/p&gt;
&lt;p&gt;In this session, Cheuk will open the discussion and make a few
suggestions of how we can protect ourselves as a community. This will
lead to the Q&amp;amp;A session where the audience can weigh in on their own
thought.&lt;/p&gt;
&lt;p&gt;Target audiences&lt;/p&gt;
&lt;p&gt;From those who are curious to maintainers of open-source libraries. This
is the knowledge we should all know and be aware of. Cheuk will explain
in a way that expects no prior knowledge is needed.&lt;/p&gt;
&lt;p&gt;What will audiences learn&lt;/p&gt;
&lt;p&gt;About Trojan Source attacks and how it works. They may also learn about
how interpreters, especially Python interpreters, works with Unicode.
Plus, they may have increased awareness about security in the
open-source world.&lt;/p&gt;
&lt;p&gt;Speaker: Cheuk Ho&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="best practice"></category><category term="community"></category><category term="open source"></category><category term="security"></category></entry><entry><title>Lightning Talks 1</title><link href="https://pyvideo.org/pycon-us-2021/lightning-talks-1.html" rel="alternate"></link><published>2021-05-14T00:00:00+00:00</published><updated>2021-05-14T00:00:00+00:00</updated><author><name>Dustin Ingram</name></author><id>tag:pyvideo.org,2021-05-14:/pycon-us-2021/lightning-talks-1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Agenda of Lightning Talks  - Hosted by Dustin Ingram and Lorena Mesa&lt;/p&gt;
&lt;p&gt;André Roberge - Friendlier tracebacks&lt;/p&gt;
&lt;p&gt;Bernat Gabor - tox 4 is happening!&lt;/p&gt;
&lt;p&gt;Brett Cannon - Introducing the Python Launcher for Unix&lt;/p&gt;
&lt;p&gt;Cheuk Ho - What happens when the developer decided that your name is too short&lt;/p&gt;
&lt;p&gt;Deepa - A tale of mutability and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Agenda of Lightning Talks  - Hosted by Dustin Ingram and Lorena Mesa&lt;/p&gt;
&lt;p&gt;André Roberge - Friendlier tracebacks&lt;/p&gt;
&lt;p&gt;Bernat Gabor - tox 4 is happening!&lt;/p&gt;
&lt;p&gt;Brett Cannon - Introducing the Python Launcher for Unix&lt;/p&gt;
&lt;p&gt;Cheuk Ho - What happens when the developer decided that your name is too short&lt;/p&gt;
&lt;p&gt;Deepa - A tale of mutability and recursion&lt;/p&gt;
&lt;p&gt;Jason C. McDonald - Code Review For Great Good&lt;/p&gt;
&lt;p&gt;Jürgen Gmach - How to Maintain Many, Many, Many, Many... Many Git Repositories?&lt;/p&gt;
&lt;p&gt;Mfon Eti-mfon - Queer Struggles in Africa: Fighting Hate With Python&lt;/p&gt;
&lt;p&gt;Phil Jones - What’s new in Flask&lt;/p&gt;
&lt;p&gt;Clint Cameron - How to take ownership of security in your Python code&lt;/p&gt;
&lt;p&gt;Daniel J. Dufour - Load Django Settings from Environmental Variables with One Magical Line of Code&lt;/p&gt;
</content><category term="PyCon US 2021"></category></entry></feed>