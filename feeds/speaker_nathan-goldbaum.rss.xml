<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Nathan Goldbaum</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 16 May 2025 00:00:00 +0000</lastBuildDate><item><title>Unraveling Community Support For Free-Threaded Python</title><link>https://pyvideo.org/pycon-us-2025/unraveling-community-support-for-free-threaded-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Shipping the free-threaded build of Python 3.13 was just the first step towards unlocking scalable multithreaded parallelism in Python. To unlock improved performance for real-world compute tasks, the universe of community-maintained open source packages also needed to be updated. This is the story of the first year of that effort.&lt;/p&gt;
&lt;p&gt;We will share tools, techniques, and guidance gained from porting Cython, NumPy, SciPy, PyO3, and many other packages with C, Cython, C++, Fortran, and Rust native extensions to support free-threaded Python, illustrated by anecdotes from our experiences.&lt;/p&gt;
&lt;p&gt;Attendees will learn about tools and techniques to discover and fix thread safety issues and multithreaded scaling bottlenecks in packages with native extensions or dependencies. If you are unsure about how to support free-threaded Python in a package you maintain, we hope that this talk will give you a plan and the toolbox necessary to accomplish the task.&lt;/p&gt;
&lt;p&gt;This talk is targeted at developers and maintainers of Python packages that include native dependencies as well as people who are interested in contributing to community packages that include native code. We assume some prior knowledge with native Python extensions written in C, C++, Rust, or Cython.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lysandros Nikolaou</dc:creator><pubDate>Fri, 16 May 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-05-16:/pycon-us-2025/unraveling-community-support-for-free-threaded-python.html</guid><category>PyCon US 2025</category></item><item><title>yt: volumetric data analysis</title><link>https://pyvideo.org/scipy-2014/yt-volumetric-data-analysis.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;yt started as a tool for visualizing data from astrophysical
simulations, but it has evolved into a method for analyzing generic
volumetric data. In this talk we will present yt 3.0, which includes an
increased focus on inquiry-driven analysis and visualization, a
sympy-powered unit system, a revised user interface, and the ability to
scale to petabyte datasets and tens of thousands of cores.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;ol class="arabic simple"&gt;
&lt;li&gt;What is yt?&lt;ol class="arabic"&gt;
&lt;li&gt;&amp;quot;Lingua-franca for astrophysical simulations&amp;quot;&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://sites.google.com/site/santacruzcomparisonproject/"&gt;AGORA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Some selections from &lt;a class="reference external" href="http://yt-project.org/gallery.html"&gt;the
gallery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;105 &lt;a class="reference external" href="http://adsabs.harvard.edu/cgi-bin/nph-ref_query?bibcode=2011ApJS..192....9T&amp;amp;refs=CITATIONS&amp;amp;db_key=AST"&gt;citations to the yt method
paper&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Massively parallel&lt;ol class="arabic"&gt;
&lt;li&gt;Examples of large-scale calculations and visualizations
performed with yt&lt;/li&gt;
&lt;li&gt;Usage data on XSEDE visualization resources&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Volumetric data analysis beyond astrophysics&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.neurodome.org/"&gt;Neurodome&lt;/a&gt;, Whole-earth seismic
wave data, Weather simulation data, Nuclear engineering, Radio
astronomy&lt;/li&gt;
&lt;li&gt;??? (insert your field here!)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;What's new in yt-3.0?&lt;ol class="arabic"&gt;
&lt;li&gt;Rewrite of data selection, i/o, and field detection and creation&lt;/li&gt;
&lt;li&gt;Octree and particle support (i.e., discrete points)&lt;/li&gt;
&lt;li&gt;Unit conversions and dimensional analysis baked into the codebase&lt;/li&gt;
&lt;li&gt;Rethinking the API, 'rebranding' the project&lt;/li&gt;
&lt;li&gt;Advanced volume rendering&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Growing the Community&lt;ol class="arabic"&gt;
&lt;li&gt;The gallery&lt;/li&gt;
&lt;li&gt;Workshops&lt;/li&gt;
&lt;li&gt;Contributor statistics.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;The future&lt;ol class="arabic"&gt;
&lt;li&gt;New data styles&lt;ol class="arabic"&gt;
&lt;li&gt;Unstructured meshes&lt;/li&gt;
&lt;li&gt;Finite element analysis&lt;/li&gt;
&lt;li&gt;Spectral codes&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;New domain-specific functionality (beyond astrophysics)&lt;/li&gt;
&lt;li&gt;Browser GUIs powered by IPython&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan Goldbaum</dc:creator><pubDate>Mon, 14 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-14:/scipy-2014/yt-volumetric-data-analysis.html</guid><category>SciPy 2014</category></item><item><title>The Demeshening The Next Generation of Particle Support in yt</title><link>https://pyvideo.org/scipy-2017/the-demeshening-the-next-generation-of-particle-support-in-yt.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Large N-body particle datasets present a unique challenge for analysis and visualization. With multi-terabyte datasets becoming increasingly common, the goal of performing large-scale analysis and visualization of such large quantities of data becomes increasingly challenging.&lt;/p&gt;
&lt;p&gt;In this talk we describe a new particle indexing scheme we have designed for yt, a python toolkit for the analysis and visualization of 3D simulation data. By making use of compressed Morton bitmaps to index the locations of particles, we substantially decrease the overhead to perform spatial chunking. By rethinking the high-level yt API for N-body data to be more particle-centric, we are able to scale analysis and visualization to datasets containing very large numbers of particles while reaping performance improvements and decreased memory overhead when working with smaller datasets.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan Goldbaum</dc:creator><pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-14:/scipy-2017/the-demeshening-the-next-generation-of-particle-support-in-yt.html</guid><category>SciPy 2017</category><category>yt</category></item><item><title>From no CPython C API experience to shipping a new DType in NumPy 2.0</title><link>https://pyvideo.org/scipy-2024/from-no-cpython-c-api-experience-to-shipping-a-new-dtype-in-numpy-20.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Support for string data in NumPy has long been a sore spot for the community. At the beginning of 2023 I was given the task to solve that problem by writing a new UTF-8 variable-length string DType leveraging the new NumPy DType API. I will offer my personal narrative of how I accomplished that goal over the course of 2023 and offer my experience as a model for others to take on difficult projects in the scientific python ecosystem, offering tips for how to get help when needed and contribute productively to an established open source community.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan Goldbaum</dc:creator><pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-07-08:/scipy-2024/from-no-cpython-c-api-experience-to-shipping-a-new-dtype-in-numpy-20.html</guid><category>SciPy 2024</category></item></channel></rss>