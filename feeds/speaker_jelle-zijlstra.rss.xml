<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Jelle Zijlstra</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 27 Apr 2022 00:00:00 +0000</lastBuildDate><item><title>Panel Discussion: What is Static Typing in Python?</title><link>https://pyvideo.org/pybay-2017/panel-discussion-what-is-static-typing-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This panel discussion was MC by Daniel Pyrathon and held as part of the opening night at PyBay, SF Bay Area's regional Python Conference, on Friday, August 11, 2017.  For more information on PyBay, visit &lt;a class="reference external" href="https://pybay.com"&gt;https://pybay.com&lt;/a&gt;, subscribe to be notified of upcoming conferences.&lt;/p&gt;
&lt;p&gt;What is static typing in Python?&lt;/p&gt;
&lt;p&gt;Python added support for annotation as part of function definitions with PEP 3107. PEP 484 later provided a standard syntax for type annotations, bringing static analysis, runtime type checking, and faster refactoring to Python. Since Python is a dynamic programming language, type hints don’t have any influence at runtime, but they allow certain tools to save time with fewer bugs. For example, IDEs such as PyCharm are able to perform safer refactoring, and static analysis tools such as Mypy can perform further type checks during build phases.&lt;/p&gt;
&lt;p&gt;So far, static typing has been adopted by some renowned open source projects such as Zulip and is used at companies such as Google, Instagram, Lyft, and Quora.&lt;/p&gt;
&lt;p&gt;What will we be speaking about during this panel?&lt;/p&gt;
&lt;p&gt;We’ll be making this panel discussion accessible to everyone, so expect the panel to start with an introduction to static typing and then go deeper into best practices, support, and experience from open source project maintainers and companies. Since this feature has been a topic of substantial debate in the community, we’ll be discussing not only the pros but also the cons of this feature. Indeed, there are situations where type hinting may do more harm than good, and our panelists will be sharing with us their words of advice on this topic.&lt;/p&gt;
&lt;p&gt;Why might this panel discussion be interesting to you?&lt;/p&gt;
&lt;p&gt;Type hints are one of the new additions to the Python syntax may drastically increase the speed at which you program. Beginners will learn more about where the language development is heading.
Open source project maintainers and contributors will learn the tooling, support, and best “getting started” advice from our expert panelists.&lt;/p&gt;
&lt;p&gt;Project managers, CTOs, and engineers will learn how type hints can make their team more productive. We know companies spend a huge amount of money recruiting and sourcing engineers, and I’m sure they would do everything possible to make their onboarding experience more enjoyable, easier and faster since employees can expect to be more productive with an annotated codebase.
This panel will not only help developers learn more about static typing, but also help identify areas where static type checking isn’t doing a good job, and learn how we can all improve it together.&lt;/p&gt;
&lt;p&gt;Our panelists
And now for the part that I’m most proud of, our list of panelists:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Łukasz Langa&lt;/p&gt;
&lt;p&gt;Łukasz is one of the PEP484 authors, a Python core developer, and currently a Production Engineer at Facebook. Łukasz has also been using mypy at work and I imagine has also been part of the latest push to port Instagram’s code base to Python 3! Łukasz is a long-time Python contributor, was a mentor for the Python Software Foundation for Google Summer of Code, and has spoken about Python around the world.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Jelle Zijlstra&lt;/p&gt;
&lt;p&gt;Jelle is a Staff Engineer at Quora, where he works on infrastructure, internationalization, development tools, and ML infrastructure. He’s a contributor to mypy and has also used mypy at Quora. Jelle will offer his perspective on advocating for static type checking at a great engineering organization like Quora and will also be talking about typeshed, a project that hosts type stubs for the standard library and major third-party libraries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Ethan Smith&lt;/p&gt;
&lt;p&gt;Ethan has been involved with mypy for a while and has been working on typical, a project that uses the frame evaluation API (PEP 523) to dynamically generate stubs. While Ethan is still in college, he has been doing some amazing work to improve the support of type hints.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Andrey Vlasovskikh&lt;/p&gt;
&lt;p&gt;Andrey is the PyCharm community lead and maintainer of IdeaVim. PyCharm is used by many Python developers and its support for type checking “out of the box” makes it easy for developers to adopt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Matthias Kramm&lt;/p&gt;
&lt;p&gt;Matthias is the author of pytype, one of the maintainers of typeshed, and has been working on Python static analysis tools for Google. Pytype is used in a few hundred projects at Google, including YouTube! Matthias will give us great insight into adopting type checking “at scale”!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Łukasz Langa</dc:creator><pubDate>Fri, 11 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-11:/pybay-2017/panel-discussion-what-is-static-typing-in-python.html</guid><category>PyBay 2017</category><category>panel</category><category>static-typing</category></item><item><title>Lightning talks May 20th 2017 Morning session</title><link>https://pyvideo.org/pycon-us-2017/lightning-talks-may-20th-2017-morning-session.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks 2017-05-20 Morning&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="12%" /&gt;
&lt;col width="23%" /&gt;
&lt;col width="65%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head" rowspan="2"&gt;Start&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Speakers&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Subject&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;0:15&lt;/td&gt;
&lt;td rowspan="3"&gt;James Powell&lt;/td&gt;
&lt;td rowspan="3"&gt;&lt;strong&gt;penv:  a stupid (but useful?) tool&lt;/strong&gt;
- A teaser for a script to replace virtualenv.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="6"&gt;5:45&lt;/td&gt;
&lt;td rowspan="6"&gt;Amber Brown&lt;/td&gt;
&lt;td rowspan="6"&gt;&lt;strong&gt;Falsehoods Developers Have About Identity&lt;/strong&gt;
- Human identities have complexities, including
changing names, different forms and surname orders,
changing timezones and country names.  Developers
should not make assumptions.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;11:15&lt;/td&gt;
&lt;td rowspan="5"&gt;Jelle Zijlstra&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Fun with Type Annotations&lt;/strong&gt;
- Python has type annotations, which aids
documentation and restructuring and also provides an
oportunity to contribute to open source.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;14:15&lt;/td&gt;
&lt;td rowspan="3"&gt;Mark Kohdev&lt;/td&gt;
&lt;td rowspan="3"&gt;&lt;strong&gt;Music Data, Metadata, and Morrrreeeee&lt;/strong&gt;
- Spotify has a lot of free metadata about music.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;18:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Nate Smith&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Tildetown&lt;/strong&gt;
- tilde.town is an intentional digital community
accessible over SSH.   Non-commercial.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="6"&gt;24:00&lt;/td&gt;
&lt;td rowspan="6"&gt;Patrick Laban&lt;/td&gt;
&lt;td rowspan="6"&gt;&lt;strong&gt;What do we hate?  Time Zones!&lt;/strong&gt;
- Time zones are weirdly set up, e.g., daylight
savings, Indian reservations, China, offsets by crazed
weasels, and strange compromises. They are insane -
don't roll your own timezone code.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Powell</dc:creator><pubDate>Sat, 20 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-20:/pycon-us-2017/lightning-talks-may-20th-2017-morning-session.html</guid><category>PyCon US 2017</category><category>lightning talks</category></item><item><title>Lightning Talks - Day 3</title><link>https://pyvideo.org/pycon-us-2022/lightning-talks-day-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are a ~ 5 minutes long, on any topic of interest to other Python people. It doesn't have to be about something that you wrote, it can be something that you learned, or a technique you think other people will be interested in.&lt;/p&gt;
&lt;p&gt;Speakers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:23 - Pandy Knight - How to write a test case&lt;/li&gt;
&lt;li&gt;05:09 - Shreya Batra - The Effects of Computational THinking&lt;/li&gt;
&lt;li&gt;09:36 - Patrick Arminio - The fastest way to fetch the latest python version&lt;/li&gt;
&lt;li&gt;11:57 - Ray McLendon - Not all data is created equal&lt;/li&gt;
&lt;li&gt;16:24 - Geir Arne Hjelle - Reading PEPs&lt;/li&gt;
&lt;li&gt;21:30 - Jonathan Helmus - Pip install Python?&lt;/li&gt;
&lt;li&gt;26:07 - Jelle Zijlstra - PEP 688: Typing for the buffer protocol&lt;/li&gt;
&lt;li&gt;29:30 - Nick Muoh - Post pandemic meetuup&lt;/li&gt;
&lt;li&gt;33:25 - multiple speakers talking about Regional Python Conferences&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pandy Knight</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-04-27:/pycon-us-2022/lightning-talks-day-3.html</guid><category>PyCon US 2022</category><category>lightning talks</category></item><item><title>Typing Summit</title><link>https://pyvideo.org/pycon-us-2022/typing-summit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Schedule of presentations:&lt;/p&gt;
&lt;p&gt;0:00 - “New typing features in Python 3.10 and 3.11”, David Foster&lt;/p&gt;
&lt;p&gt;17:51 - “Typing of Tensor Shapes and Type Arithmetic”, Alfonso Castaño&lt;/p&gt;
&lt;p&gt;39:15 - “Too small for a PEP: minor new typing features in Python 3.11”, Jelle Zijlstra&lt;/p&gt;
&lt;p&gt;1:00:43 - Extending PEP 647: User-Defined Type Guards”, Rebecca Chen&lt;/p&gt;
&lt;p&gt;1:19:07 - “The future of TypedDict&amp;quot; and &amp;quot;Runtime uses for type annotations: A survey of tools”, David Foster&lt;/p&gt;
&lt;p&gt;1:50:30 - “Runtime Annotations: PEP 563 &amp;amp; 649 Overview”, Carl Meyer&lt;/p&gt;
&lt;p&gt;2:21:05 - “Beyond Subtyping”, Kevin Millikin&lt;/p&gt;
&lt;p&gt;2:50:44 - “Panel: Typing-sig and Python Core Dev”, Guido van Rossum, Pablo Galindo Salgado, Thomas Wouters, Jelle Zijlstra, Pradeep Kumar Srinivasan, Matthew Rahtz&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Foster</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-04-27:/pycon-us-2022/typing-summit.html</guid><category>PyCon US 2022</category></item><item><title>Asynchronous Python at Quora</title><link>https://pyvideo.org/pyninsula-2017/asynchronous-python-at-quora.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jelle Zijlstra</dc:creator><pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-31:/pyninsula-2017/asynchronous-python-at-quora.html</guid><category>Pyninsula 2017</category></item></channel></rss>