<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_bhargav-srinivasa-desikan.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-22T00:00:00+00:00</updated><entry><title>Why You Should Do Text Analysis in Python (Even if You Don't Want to)</title><link href="https://pyvideo.org/pydata-la-2018/why-you-should-do-text-analysis-in-python-even-if-you-dont-want-to.html" rel="alternate"></link><published>2018-10-22T00:00:00+00:00</published><updated>2018-10-22T00:00:00+00:00</updated><author><name>Bhargav Srinivasa Desikan</name></author><id>tag:pyvideo.org,2018-10-22:pydata-la-2018/why-you-should-do-text-analysis-in-python-even-if-you-dont-want-to.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The explosion in Artificial Intelligence and Machine Learning is
unprecedented now - and text analysis is likely the most easily
accessible and understandable part of this. And with python, it is crazy
easy to do this - python has been used as a parsing language forever,
and with the rich set of NLP, ML and Computational Linguistic tools,
it's worth doing text analysis even if you don't want to.&lt;/p&gt;
</summary></entry><entry><title>Tips, Tricks and Topics in Text Analysis</title><link href="https://pyvideo.org/pydata-la-2018/tips-tricks-and-topics-in-text-analysis.html" rel="alternate"></link><published>2018-10-21T00:00:00+00:00</published><updated>2018-10-21T00:00:00+00:00</updated><author><name>Bhargav Srinivasa Desikan</name></author><id>tag:pyvideo.org,2018-10-21:pydata-la-2018/tips-tricks-and-topics-in-text-analysis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Not only is there an abundance of textual data, there is also an
abundance of tools help analyse this data - and it is tough to choose
the right tool for the right task. In this workshop we will be dealing
with the entire text analysis process - this means we'll start with
finding data, set up a pipeline to clean our text, annotate it, and then
have it ready to do some more advanced analysis.&lt;/p&gt;
</summary></entry><entry><title>Tricks, tips and topics in Text Analysis</title><link href="https://pyvideo.org/pydata-berlin-2018/tricks-tips-and-topics-in-text-analysis.html" rel="alternate"></link><published>2018-07-06T00:00:00+00:00</published><updated>2018-07-06T00:00:00+00:00</updated><author><name>Bhargav Srinivasa Desikan</name></author><id>tag:pyvideo.org,2018-07-06:pydata-berlin-2018/tricks-tips-and-topics-in-text-analysis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is an abundance of easily mineable text data (Whatsapp, twitter,
and even our own e-mails!), and we have no excuse to not analyse it. In
this workshop, we will learn some tips and tricks to deal with messy
text data, before moving on to some lesser looked at text analysis
techniques, such as text summarisation, working with distance metrics,
and an old personal favorite - topic models.&lt;/p&gt;
</summary></entry><entry><title>Text Analysis With SpaCy, NLTK, Gensim, Skearn...</title><link href="https://pyvideo.org/pycon-israel-2018/text-analysis-with-spacy-nltk-gensim-skearn.html" rel="alternate"></link><published>2018-06-05T00:00:00+00:00</published><updated>2018-06-05T00:00:00+00:00</updated><author><name>Bhargav Srinivasa Desikan</name></author><id>tag:pyvideo.org,2018-06-05:pycon-israel-2018/text-analysis-with-spacy-nltk-gensim-skearn.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Text Analysis With SpaCy, NLTK, Gensim, Skearn, Keras and TensorFlow&lt;/p&gt;
&lt;p&gt;The explosion in Artificial Intelligence and Machine Learning is unprecedented now - and text analysis is likely the most easily accessible and understandable part of this. And with python, it is crazy easy to do this - python has been used as a parsing langauge forever, and with the rich set of Natural Language Processing and Computational Linguistic tools, it's worth doing text analysis even if you don't want to.&lt;/p&gt;
&lt;p&gt;The purpose of this talk is to convince the python community to do text analysis - and explain both the hows and the whys. Python has traditionally been a very good parsing language, aruguably replacing perl for all text file handling tasks. Reading files, regular expressions, writring to files, crawling on the web for textual data have all been standard ways to use python - and now with the Machine Learning and AI explosion - we have a great set of tools in python to understand all the textual data we can so easily play with.&lt;/p&gt;
&lt;p&gt;I will be briefly talking aboubt the merits, de-merits and use-cases of the most popular text processing libraries. In particular, these will be spaCy, NLTK, gensim. I will also talk about how to use traditional Machine Learning libraries for text analysis, such as scikit-learn, Keras and TensorFlow.&lt;/p&gt;
&lt;p&gt;Pre-processing is the one of the most important steps of Text Analysis, and I will talk more about this - after all, garbage in, garbage out!&lt;/p&gt;
&lt;p&gt;The final part of the talk will be about where to get your data - and how to create your own textual data as well. You could analyse anything, from your own emails and whatsapp conversations to freely available British Parliament transcripts!&lt;/p&gt;
</summary></entry><entry><title>Tricks, tips and topics in Text Analysis</title><link href="https://pyvideo.org/pydata-amsterdam-2018/tricks-tips-and-topics-in-text-analysis.html" rel="alternate"></link><published>2018-05-26T00:00:00+00:00</published><updated>2018-05-26T00:00:00+00:00</updated><author><name>Bhargav Srinivasa Desikan</name></author><id>tag:pyvideo.org,2018-05-26:pydata-amsterdam-2018/tricks-tips-and-topics-in-text-analysis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is an abundance of easily mineable text data (Whatsapp, twitter, and even our own e-mails!), and we have no excuse to not analyze it. In this workshop, we will learn some tips and tricks to deal with messy text data, before moving on to some lesser looked at text analysis techniques, such as text summarization, working with distance metrics, and an old personal favorite - topic models.&lt;/p&gt;
</summary></entry><entry><title>Topic Modelling (and more) with NLP framework Gensim</title><link href="https://pyvideo.org/pydata-berlin-2017/topic-modelling-and-more-with-nlp-framework-gensim.html" rel="alternate"></link><published>2017-06-30T00:00:00+00:00</published><updated>2017-06-30T00:00:00+00:00</updated><author><name>Bhargav Srinivasa Desikan</name></author><id>tag:pyvideo.org,2017-06-30:pydata-berlin-2017/topic-modelling-and-more-with-nlp-framework-gensim.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/bhargavvader/personal/tree/master/notebooks/text_analysis_tutorial"&gt;https://github.com/bhargavvader/personal/tree/master/notebooks/text_analysis_tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This tutorial will guide you through the process of analysing your textual data through topic modelling - from finding and cleaning your data, pre-processing using spaCy, applying topic modelling algorithms using gensim - before moving on to more advanced textual analysis techniques.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Topic Modelling is a great way to analyse completely unstructured textual data - and with the python NLP framework Gensim, it's very, very easy to do this. The purpose of this tutorial is to guide one through the whole process of topic modelling - right from pre-processing your raw textual data, creating your topic models, evaluating the topic models, to visualising them. Advanced topic modelling techniques will also be covered in this tutorial, such as Dynamic Topic Modelling, Topic Coherence, Document Word Coloring, and LSI/HDP.&lt;/p&gt;
&lt;p&gt;The python packages used during the tutorial will be spaCy (for pre-processing), gensim (for topic modelling), and pyLDAvis (for visualisation). The interface for the tutorial will be an Jupyter notebook.&lt;/p&gt;
&lt;p&gt;The takeaway from the tutorial would be the participants ability to get their hands dirty with analysing their own textual data, through the entire lifecycle of cleaning raw data to visualising topics.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Lightning talks: Google Summer of Code</title><link href="https://pyvideo.org/pycon-sk-2017/lightning-talks-google-summer-of-code.html" rel="alternate"></link><published>2017-03-12T00:00:00+00:00</published><updated>2017-03-12T00:00:00+00:00</updated><author><name>Bhargav Srinivasa Desikan</name></author><id>tag:pyvideo.org,2017-03-12:pycon-sk-2017/lightning-talks-google-summer-of-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks: Bhargav Srinivasa Desikan - Google Summer of Code&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Topic Modelling with Gensim</title><link href="https://pyvideo.org/pycon-sk-2017/topic-modelling-with-gensim.html" rel="alternate"></link><published>2017-03-12T00:00:00+00:00</published><updated>2017-03-12T00:00:00+00:00</updated><author><name>Bhargav Srinivasa Desikan</name></author><id>tag:pyvideo.org,2017-03-12:pycon-sk-2017/topic-modelling-with-gensim.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Topic Modelling is an information retrieval technique to identify key topics in a large corpus of text documents. It is a very handy technique to model unstructured textual data, and is used heavily in both industry and in research to both understand trends in textual data and analyse new documents via their topics. Gensim is an open-source python NLP framework which provides an API to do robust, industry-grade Topic Modelling which is memory independent and super fast, while being very simple to use. The best part of gensim and python for Topic Modelling is it’s ease of usage and effectiveness. I would propose a small talk to explain how to effectively do topic modelling in python using Gensim framework- especially - after identifying topics from a large dataset, and then leveraging to perform un-supervised clustering, colouring topic-words in a document, and better understanding textual data for subsequent usage. All of this will be supported with examples from research and industry. [ My relationship with Gensim is through the Google Summer of Code 2016 program, where I am implementing Dynamic Topic Models for them ]&lt;/p&gt;
</summary></entry><entry><title>Topic Modelling with Python and Gensim</title><link href="https://pyvideo.org/pycon-fr-2016/topic-modelling-with-python-and-gensim.html" rel="alternate"></link><published>2016-10-15T00:00:00+00:00</published><updated>2016-10-15T00:00:00+00:00</updated><author><name>Bhargav SRINIVASA DESIKAN</name></author><id>tag:pyvideo.org,2016-10-15:pycon-fr-2016/topic-modelling-with-python-and-gensim.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Topic Modelling is an information retrieval technique to identify key topics in a large corpus of text documents. It is a very handy technique to model unstructured textual data, and is used heavily in both industry and in research to both understand trends in textual data and analyse new documents via their topics.
Gensim is an open-source python NLP framework which provides an API to do robust, industry-grade Topic Modelling which is memory independent and super fast, while being very simple to use.
The best part of gensim and python for Topic Modelling is it’s ease of usage and effectiveness. I would propose a small talk to explain how to effectively do topic modelling in python using Gensim framework- especially - after identifying topics from a large dataset, and then leveraging to perform un-supervised clustering, colouring topic-words in a document, and better understanding textual data for subsequent usage. All of this will be supported with examples from research and industry.
[ My relationship with Gensim is through the Google Summer of Code 2016 program, where I am implementing Dynamic Topic Models for them ]&lt;/p&gt;
</summary></entry></feed>