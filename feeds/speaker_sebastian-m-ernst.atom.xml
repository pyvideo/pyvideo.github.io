<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_sebastian-m-ernst.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-09-05T00:00:00+00:00</updated><entry><title>Enhancing &amp; re-designing the QGIS user interface – a deep dive</title><link href="https://pyvideo.org/euroscipy-2019/enhancing-re-designing-the-qgis-user-interface-a-deep-dive.html" rel="alternate"></link><published>2019-09-05T00:00:00+00:00</published><updated>2019-09-05T00:00:00+00:00</updated><author><name>Sebastian M. Ernst</name></author><id>tag:pyvideo.org,2019-09-05:euroscipy-2019/enhancing-re-designing-the-qgis-user-interface-a-deep-dive.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Having been around for two decades, QGIS clearly is an organically grown
project. It has primarily been fulfilling the various special needs of
its developers. From an outsider's perspective, it is an amazingly rich
patchwork of features. However, some are deeply hidden in numerous
layers of user interface elements, requiring intense training for
getting used to. Others are only accessibly through APIs, requiring not
only training but also programming skills.&lt;/p&gt;
&lt;p&gt;Being confronted with QGIS as professional users on a regular basis, we
thought about what would make working with QGIS more attractive. What if
QGIS has a pleasant, coherent theme, including not only colors but also
icons? What if QGIS had the ability to store workbench configurations?
What if QGIS had dedicated interface configurations for specific
workflows? What if much more of the API's functionality was accessible
through the GUI in a well-organized way? How could QGIS work in a useful
manner with ribbons? How could the incredible amount of dialogs be tamed
into tabs?&lt;/p&gt;
&lt;p&gt;We demonstrate (live) a series of user interface experiments – all of
which are or will be &lt;a class="reference external" href="https://github.com/qgist"&gt;available online&lt;/a&gt; as
Python plugins.&lt;/p&gt;
&lt;p&gt;In this context, the current state of play with respect to Python and
QGIS is explained in detail. The way QGIS is typically being distributed
puts quite a few unusual limitations on Python plugin code. The case is
made that some of those limitations are simply out of date and must be
overcome, which may require help from the broader (scientific) Python
community.&lt;/p&gt;
&lt;p&gt;We seek a conversation with the audience.&lt;/p&gt;
&lt;p&gt;How can one of the largest code bases in open source Geographical
Information Science – QGIS – be enhanced and re-designed? Through the
powers of Python plugins. This talk demonstrates concepts on how to make
QGIS more user- friendly.&lt;/p&gt;
</summary></entry></feed>