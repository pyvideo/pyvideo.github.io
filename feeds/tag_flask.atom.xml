<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_flask.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-03T00:00:00+00:00</updated><entry><title>Python web frameworks shootout</title><link href="https://pyvideo.org/python-frederick/python-web-frameworks-shootout.html" rel="alternate"></link><published>2017-10-11T00:00:00+00:00</published><updated>2017-10-11T00:00:00+00:00</updated><author><name>Matt Layman</name></author><id>tag:pyvideo.org,2017-10-11:python-frederick/python-web-frameworks-shootout.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the October 2017 Python Frederick meetup, we looked at API Star, Falcon, Flask, Django, and Pyramid and did a comparison of their features to see which would be the best fit for your future web project.&lt;/p&gt;
</summary><category term="api star"></category><category term="falcon"></category><category term="flask"></category><category term="django"></category><category term="pyramid"></category></entry><entry><title>Porting your Python web app to serverless in 30 minutes</title><link href="https://pyvideo.org/pycon-italia-2019/porting-your-python-web-app-to-serverless-in-30-minutes.html" rel="alternate"></link><published>2019-05-03T00:00:00+00:00</published><updated>2019-05-03T00:00:00+00:00</updated><author><name>Alex Casalboni</name></author><id>tag:pyvideo.org,2019-05-03:pycon-italia-2019/porting-your-python-web-app-to-serverless-in-30-minutes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This live-coding session will guide you through the process of migrating
an existing Flask application to AWS Lambda.&lt;/p&gt;
&lt;p&gt;We will analyze the existing application, decompose it into individual
microservices, adapt authentication, frontend, tests, and data model,
and finally deploy it to the Cloud.&lt;/p&gt;
&lt;p&gt;Throughout this step-by-step process, you will learn the benefits of
serverless and how it will change the way you think of scalability,
availability, security, infrastructure management, and cost
optimization.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1620"&gt;https://python.it/feedback-1620&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 10:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="serverless"></category><category term="web"></category><category term="flask"></category><category term="aws"></category><category term="live-coding"></category><category term="cloud"></category></entry><entry><title>Turn your Flask App into Async using Quart</title><link href="https://pyvideo.org/pycon-philippines-2019/turn-your-flask-app-into-async-using-quart.html" rel="alternate"></link><published>2019-02-23T00:00:00+00:00</published><updated>2019-02-23T00:00:00+00:00</updated><author><name>Doni Rubiagatra</name></author><id>tag:pyvideo.org,2019-02-23:pycon-philippines-2019/turn-your-flask-app-into-async-using-quart.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you already use our beloved micro-framework Flask but have a problem with the speed and scalability? We hear a lot of buzz with the new fancy asynchronous Python programming using async/await keyword to make our Python code run faster. But really how async works are still not spread well and the majority of Python programmer still not familiar using async/await keyword. In this talks, because Flask is not intended to support async (yet), we are will explore Quart, the Python ASGI web microframework. It is intended to provide the easiest way to use asyncio functionality in a web context, especially with existing Flask apps. This is possible as the Quart API is a superset of the Flask API. So you can instantly migrate your Flask app easily!&lt;/p&gt;
</summary><category term="quart"></category><category term="flask"></category><category term="async"></category></entry><entry><title>Powering up your Python web applications</title><link href="https://pyvideo.org/pycon-ireland-2018/powering-up-your-python-web-applications.html" rel="alternate"></link><published>2018-11-10T00:00:00+00:00</published><updated>2018-11-10T00:00:00+00:00</updated><author><name>Allyn Hunt</name></author><id>tag:pyvideo.org,2018-11-10:pycon-ireland-2018/powering-up-your-python-web-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;App structure best practices: Benefits of using the Flask application factory. Creating a (Flask-Script) migrate.py to handle database connections. Easily move between production and development environments and database connections. Separating your app into Blueprints, to create webpage, API and logged in routes. Adding asynchronous tasks: Focusing on a real world application use case, using Redis as a message broker and Celery as an asynchronous task queue. Setting up your server connection and creating asynchronous and scheduled tasks. Adding in a JavaScript frontend: Adding a React JavaScript front end. Creating API endpoints that return JSON data. How to anchor our server rendered content to our React components and fetching data from out API. Pro's and cons of using react. Using jQuery as an alternative to React.&lt;/p&gt;
</summary><category term="flask"></category><category term="jquery"></category></entry><entry><title>Bringing Spatial Love to your Python Application</title><link href="https://pyvideo.org/europython-2013/bringing-spatial-love-to-your-python-application.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Steven Citron-Pousty</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/bringing-spatial-love-to-your-python-application.html</id><summary type="html"></summary><category term="flask"></category><category term="mongodb"></category><category term="geospatial"></category><category term="REST"></category></entry><entry><title>Coding for the Modern Warzone</title><link href="https://pyvideo.org/europython-2013/coding-for-the-modern-warzone.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Gemma Hentsch</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/coding-for-the-modern-warzone.html</id><summary type="html"></summary><category term="udp"></category><category term="networking"></category><category term="flask"></category><category term="tcp"></category><category term="application-design"></category><category term="architecture"></category><category term="resilience"></category></entry><entry><title>Python in the cloud with PaaS - Part 1</title><link href="https://pyvideo.org/europython-2013/python-in-the-cloud-with-paas-part-1.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Steven Citron-Pousty</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/python-in-the-cloud-with-paas-part-1.html</id><summary type="html"></summary><category term="flask"></category><category term="mongodb"></category><category term="geospatial"></category><category term="postgresql"></category><category term="cloud"></category></entry><entry><title>Python in the cloud with PaaS - Part 2</title><link href="https://pyvideo.org/europython-2013/python-in-the-cloud-with-paas-part-2.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Steven Citron-Pousty</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/python-in-the-cloud-with-paas-part-2.html</id><summary type="html"></summary><category term="flask"></category><category term="mongodb"></category><category term="geospatial"></category><category term="postgresql"></category><category term="cloud"></category></entry><entry><title>Will ipython replace bash?</title><link href="https://pyvideo.org/europython-2013/will-ipython-replace-bash.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Roberto Polli</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/will-ipython-replace-bash.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While python is widely used for automating administration tasks, it’s
not still widely known and used between system administrators.&lt;/p&gt;
&lt;p&gt;iPython is an interactive python shell that embeds bash functionalities.
We’ll show how to :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;replace some bash tasks avoiding common errors&lt;/li&gt;
&lt;li&gt;resembling some bash behaviour&lt;/li&gt;
&lt;li&gt;create testing (nose) and monitoring scripts&lt;/li&gt;
&lt;li&gt;reuse existing python modules (eg.iotop, psutil, …)&lt;/li&gt;
&lt;li&gt;use flask to expose those scripts on HTTP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Wanna see something specific? Leave a comment! We’ll tune the talk
agenda on the audience interests!&lt;/p&gt;
&lt;div class="section" id="there-is-also-a-teaser-video"&gt;
&lt;h4&gt;There is also a teaser video.&lt;/h4&gt;
&lt;/div&gt;
</summary><category term="flask"></category><category term="testing"></category><category term="devops"></category><category term="sysadmin"></category><category term="linux"></category><category term="iPython"></category><category term="bash"></category></entry><entry><title>GraphQL in Python</title><link href="https://pyvideo.org/pycon-italia-2018/graphql-in-python.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Patrick Guido Arminio</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/graphql-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In questo talk si parlerà di GraphQL, un “data query language” creato da
Facebook come alternativa al famoso REST. Verrano elencate la varie
differenze e i vantaggi/svantaggi rispetto ad una tradizionale API REST.&lt;/p&gt;
&lt;p&gt;Verrà inoltre mostrato come utilizzare GraphQL con Python con un piccolo
approfondimento su come utilizzarlo con Django. In caso ci sia
abbastanza tempo, verrano elencate anche alcune informazioni avanzate,
come Authentication, Caching, Security e Realtime.&lt;/p&gt;
&lt;p&gt;Takeaway: l’obiettivo del talk è di dare una prima occhiata a GraphQL,
dando alcuni input su perché usarlo e sopratutto come iniziare ad usarlo
in Python con e senza Django.&lt;/p&gt;
&lt;p&gt;Audience: il talk è rivolto a sviluppatori web con un po’ di esperienza
di API web.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 14:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="flask"></category><category term="web"></category><category term="graphql"></category><category term="REST"></category><category term="django"></category></entry><entry><title>Monitora le performance della tua applicazione Python Flask con Elasticsearch e Kibana</title><link href="https://pyvideo.org/pycon-italia-2018/monitora-le-performance-della-tua-applicazione-python-flask-con-elasticsearch-e-kibana.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Matteo Zuccon</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/monitora-le-performance-della-tua-applicazione-python-flask-con-elasticsearch-e-kibana.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In Elasticsearch 6.1 una nuova funzionalità è stata aggiunta: APM
(Application Performance Monitoring).&lt;/p&gt;
&lt;p&gt;È possibile monitorare diverse metriche delle nostre applicazioni da
end-to- end monitoring, logging, server-level, application-level metrics
a end-user- experience monitoring. Tutte le metriche vengono
automaticamente indicizzate in Elasticsearch e sono facilmente
visualizzabili in Kibana con una dashboard ad-hoc.&lt;/p&gt;
&lt;p&gt;Nel talk vedremo come monitorare le performance di un’applicazione
Python Flask, indicizzare le metriche in Elasticsearch e visualizzarle
con una dashboard Kibana. Con poche righe di codice è possibile
monitorare le applicazioni già esistenti oppure catturare messaggi
generici ed eccezioni.&lt;/p&gt;
&lt;p&gt;Se volete sfruttare a pieno le potenzialità di Elasticsearch e Kibana
(non solo per i log!), utilizzate il framework Flask e cercate una
soluzione di APM gratuita, questo talk fa per voi.&lt;/p&gt;
&lt;p&gt;Si richiede una conoscenza base di Elasticsearch (l’installazione e
configurazione base non saranno oggetto del talk) e del framework Flask.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 17:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="flask"></category><category term="performance"></category><category term="elasticsearch"></category></entry><entry><title>API Flask com front-end em Vue.js</title><link href="https://pyvideo.org/flask-conf-2018/api-flask-com-front-end-em-vuejs.html" rel="alternate"></link><published>2018-08-25T00:00:00+00:00</published><updated>2018-08-25T00:00:00+00:00</updated><author><name>João Lugão</name></author><id>tag:pyvideo.org,2018-08-25:flask-conf-2018/api-flask-com-front-end-em-vuejs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;API Flask com front-end em Vue.js - Palestra de João Lugão na Flask Conf 2018.&lt;/p&gt;
</summary><category term="flask"></category><category term="api"></category><category term="vue.js"></category></entry><entry><title>Aplicações web com Flask e Docker</title><link href="https://pyvideo.org/flask-conf-2018/aplicacoes-web-com-flask-e-docker.html" rel="alternate"></link><published>2018-08-25T00:00:00+00:00</published><updated>2018-08-25T00:00:00+00:00</updated><author><name>Felipe Alcantara</name></author><id>tag:pyvideo.org,2018-08-25:flask-conf-2018/aplicacoes-web-com-flask-e-docker.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Aplicações web com Flask e Docker - Palestra de Felipe Alcantara na Flask Conf 2018.&lt;/p&gt;
</summary><category term="flask"></category><category term="docker"></category></entry><entry><title>Escrevendo Testes com Flask e #JustPython</title><link href="https://pyvideo.org/flask-conf-2018/escrevendo-testes-com-flask-e-justpython.html" rel="alternate"></link><published>2018-08-25T00:00:00+00:00</published><updated>2018-08-25T00:00:00+00:00</updated><author><name>Eduardo Mendes</name></author><id>tag:pyvideo.org,2018-08-25:flask-conf-2018/escrevendo-testes-com-flask-e-justpython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Escrevendo Testes com Flask e #JustPython - Palestra de Eduardo Mendes na Flask Conf 2018.&lt;/p&gt;
</summary><category term="flask"></category><category term="testes"></category><category term="python"></category></entry><entry><title>Flask Profiling - Identificando pontos criticos de performance</title><link href="https://pyvideo.org/flask-conf-2018/flask-profiling-identificando-pontos-criticos-de-performance.html" rel="alternate"></link><published>2018-08-25T00:00:00+00:00</published><updated>2018-08-25T00:00:00+00:00</updated><author><name>Iuri de Silvio</name></author><id>tag:pyvideo.org,2018-08-25:flask-conf-2018/flask-profiling-identificando-pontos-criticos-de-performance.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Flask Profiling - Identificando pontos criticos de performance - Palestra de Iuri de Silvio na Flask Conf 2018.&lt;/p&gt;
</summary><category term="flask"></category><category term="profiling"></category><category term="performance"></category></entry><entry><title>Flask + PWA - Mobile Applications</title><link href="https://pyvideo.org/flask-conf-2018/flask-pwa-mobile-applications.html" rel="alternate"></link><published>2018-08-25T00:00:00+00:00</published><updated>2018-08-25T00:00:00+00:00</updated><author><name>Luiz Lima</name></author><id>tag:pyvideo.org,2018-08-25:flask-conf-2018/flask-pwa-mobile-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Flask + PWA - Mobile Applications - Palestra de Luiz Lima na Flask Conf 2018.&lt;/p&gt;
</summary><category term="flask"></category><category term="pwa"></category><category term="mobile"></category></entry><entry><title>Inteligência Artificial com Flask e Raspberry Pi</title><link href="https://pyvideo.org/flask-conf-2018/inteligencia-artificial-com-flask-e-raspberry-pi.html" rel="alternate"></link><published>2018-08-25T00:00:00+00:00</published><updated>2018-08-25T00:00:00+00:00</updated><author><name>Eduardo Pereira</name></author><id>tag:pyvideo.org,2018-08-25:flask-conf-2018/inteligencia-artificial-com-flask-e-raspberry-pi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Inteligência Artificial com Flask e Raspberry Pi - Palestra de Eduardo Pereira na Flask Conf 2018.&lt;/p&gt;
</summary><category term="inteligencia artificial"></category><category term="flask"></category></entry><entry><title>Introdução ao Sanic - O clone Assíncrono do Flask</title><link href="https://pyvideo.org/flask-conf-2018/introducao-ao-sanic-o-clone-assincrono-do-flask.html" rel="alternate"></link><published>2018-08-25T00:00:00+00:00</published><updated>2018-08-25T00:00:00+00:00</updated><author><name>Danilo Bellini</name></author><id>tag:pyvideo.org,2018-08-25:flask-conf-2018/introducao-ao-sanic-o-clone-assincrono-do-flask.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introdução ao Sanic - O clone Assíncrono do Flask - Palestra de Danilo Bellini na Flask Conf 2018.&lt;/p&gt;
</summary><category term="sonic"></category><category term="flask"></category><category term="assincrono"></category></entry><entry><title>Usando o Flask Admin com Segurança e Flexibilidade</title><link href="https://pyvideo.org/flask-conf-2018/usando-o-flask-admin-com-seguranca-e-flexibilidade.html" rel="alternate"></link><published>2018-08-25T00:00:00+00:00</published><updated>2018-08-25T00:00:00+00:00</updated><author><name>Bruno Rocha</name></author><id>tag:pyvideo.org,2018-08-25:flask-conf-2018/usando-o-flask-admin-com-seguranca-e-flexibilidade.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Usando o Flask Admin com Segurança e Flexibilidade - Palestra de Bruno Rocha na Flask Conf 2018.&lt;/p&gt;
</summary><category term="flask"></category><category term="admin"></category><category term="flask-admin"></category></entry><entry><title>Webフレームワークパネル</title><link href="https://pyvideo.org/pycon-japan-2012/webhuremuwakupaneru.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>Yoshifumi Yamaguchi</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/webhuremuwakupaneru.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;去年好評だったパネルディスカッションを今年も行います。
今年はFlaskの作者であり基調講演を行うArmin Ronacherを初めとした各フレームワークの第一人者を迎え、 Flask, Django, Pyramid, Google App Engine の利点と欠点を赤裸々に討論して頂きます。
この討論を聴いて頂ければ、状況に応じたwebフレームワークの選択が出来るようになるはずです。&lt;/p&gt;
</summary><category term="panel"></category><category term="framework"></category><category term="flask"></category><category term="django"></category><category term="pyramid"></category><category term="googleappengine"></category></entry><entry><title>Fun with WebSocket and Flask</title><link href="https://pyvideo.org/pycon-ireland-2017/fun-with-websocket-and-flask.html" rel="alternate"></link><published>2017-10-21T00:00:00+00:00</published><updated>2017-10-21T00:00:00+00:00</updated><author><name>Miguel Grinberg</name></author><id>tag:pyvideo.org,2017-10-21:pycon-ireland-2017/fun-with-websocket-and-flask.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;WebSocket enables a web server to establish dedicated connections with clients, on which raw data can flow at any time and in any direction, free of the request/response cycle and the &amp;quot;chattiness&amp;quot; of the HTTP protocol. Paired with a high-level protocol such as Socket.IO, you get a powerful and easy to use framework for bi-directional, low latency communication, with clients available for Python, JavaScript, Java, iOS, Android, C++, .Net and more. Flask is a lightweight and very popular web framework for Python that makes writing web servers easy and fun, without sacrificing any power. What happens when you combine WebSocket, Socket.IO and Flask? In this talk I'm going to show you some of the cool applications that you can build when these technologies are put to work together, including streaming audio and video, real-time sensor data, automatic voting and more!&lt;/p&gt;
</summary><category term="webSocket"></category><category term="flask"></category></entry><entry><title>A Web App in Four Frameworks</title><link href="https://pyvideo.org/pycascades-2018/a-web-app-in-four-frameworks.html" rel="alternate"></link><published>2018-01-22T00:00:00+00:00</published><updated>2018-01-22T00:00:00+00:00</updated><author><name>Nicholas Hunt-Walker</name></author><id>tag:pyvideo.org,2018-01-22:pycascades-2018/a-web-app-in-four-frameworks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we take a tour of some Python web frameworks through the lens of an API for the same web application: a simple To Do list. We'll see how the same problems are handled across Django, Flask, Pyramid, and Tornado, and why you might choose one over the rest.&lt;/p&gt;
</summary><category term="framework"></category><category term="Django"></category><category term="Flask"></category><category term="Pyramid"></category><category term="Tornado"></category></entry><entry><title>Flask vs Django</title><link href="https://pyvideo.org/pycon-es-2017/flask-vs-django.html" rel="alternate"></link><published>2017-09-24T14:00:00+02:00</published><updated>2017-09-24T14:00:00+02:00</updated><author><name>Dario Varotto</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/flask-vs-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Flask or Django? Which one is better? We know the answer: it depends!
In RavenPack, we use both frameworks in big projects and for that, we have been dealing with its strengths and weaknesses in a real-world environment.&lt;/p&gt;
</summary><category term="flask"></category><category term="django"></category></entry><entry><title>It's Raining, It's Pouring? A web and SMS application in Flask and Twilio to call Farmers.</title><link href="https://pyvideo.org/pygotham-2016/its-raining-its-pouring-a-web-and-sms-application-in-flask-and-twilio-to-call-farmers.html" rel="alternate"></link><published>2016-07-16T00:00:00+00:00</published><updated>2016-07-16T00:00:00+00:00</updated><author><name>Katya Vasilaky</name></author><id>tag:pyvideo.org,2016-07-16:pygotham-2016/its-raining-its-pouring-a-web-and-sms-application-in-flask-and-twilio-to-call-farmers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is about the use of python in building a web application with which we call farmers in less developed countries to capture rainfall occurrence. These data are used to complement lower resolution satellite data, and to potentially update climate models. The application is built in Flask and uses Twilio's API to deliver voicemails to farmers in less developed countries. Twilio's API records farmers' touch tone responses regarding the occurrence of rainfall.&lt;/p&gt;
</summary><category term="flask"></category></entry><entry><title>Fifty shades of docker</title><link href="https://pyvideo.org/pycon-es-2014/fifty-shades-of-docker.html" rel="alternate"></link><published>2015-04-06T00:00:00+00:00</published><updated>2015-04-06T00:00:00+00:00</updated><author><name>Ivan Pedrazas</name></author><id>tag:pyvideo.org,2015-04-06:pycon-es-2014/fifty-shades-of-docker.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El workshop intentara explicar como montar una application hecha en Flask que usa un cluster de Cassandra (o mongo o redis... la base de datos da un poco igual) como backend y tiene servicios anyadidos como podria ser un buscador (ES)&lt;/p&gt;
</summary><category term="workshop"></category><category term="flask"></category><category term="cassandra"></category></entry><entry><title>PyOhio 2011: Django and Google App Engine: Why I'm using Flask and Amazon EC2</title><link href="https://pyvideo.org/pyohio-2011/pyohio-2011--django-and-google-app-engine--why-i-.html" rel="alternate"></link><published>2011-07-30T00:00:00+00:00</published><updated>2011-07-30T00:00:00+00:00</updated><author><name>Ben Rousch</name></author><id>tag:pyvideo.org,2011-07-30:pyohio-2011/pyohio-2011--django-and-google-app-engine--why-i-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django and Google App Engine: Why I'm Using Flask and Amazon EC2&lt;/p&gt;
&lt;p&gt;Presented by Ben Rousch&lt;/p&gt;
&lt;p&gt;I'm a lazy coder, but not the good kind of lazy. I dove into Django so I
could have one web framework that would work on many kind of hosting
setups and for any kind of web project. With some modifications, I could
even use the laziest application host, Google App Engine. Some of these
decisions didn't work out, so I'll share some of the lessons I've
learned the past year or so.&lt;/p&gt;
</summary><category term="ec2"></category><category term="flask"></category><category term="gae"></category><category term="googleappengine"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry><entry><title>Flasky Goodness (or Why Django Sucks?)</title><link href="https://pyvideo.org/djangocon-us-2012/flasky-goodness-or-why-django-sucks.html" rel="alternate"></link><published>2012-09-05T00:00:00+00:00</published><updated>2012-09-05T00:00:00+00:00</updated><author><name>Kenneth Reitz</name></author><id>tag:pyvideo.org,2012-09-05:djangocon-us-2012/flasky-goodness-or-why-django-sucks.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk dives into the specifics of why Django isn't always the best
tool for the job, general frustrations with the framework, and potential
fixes. It will balance out with many Django praises too, of course.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk dives into the specifics of why Django isn't always the best
tool for the job, general frustrations with the framework, and potential
fixes.&lt;/p&gt;
&lt;p&gt;It will balance out with many Django praises too, of course.&lt;/p&gt;
</summary><category term="flask"></category></entry><entry><title>An iPhone-Python love affair: Building APIs for mobile</title><link href="https://pyvideo.org/europython-2011/an-iphone-python-love-affair-building-apis-for-m.html" rel="alternate"></link><published>2011-07-07T00:00:00+00:00</published><updated>2011-07-07T00:00:00+00:00</updated><author><name>Anna Callahan</name></author><id>tag:pyvideo.org,2011-07-07:europython-2011/an-iphone-python-love-affair-building-apis-for-m.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Anna Callahan,Nate Aune - 24 June 2011 in &amp;quot;Track
Spaghetti&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mobile apps are the hot item of the day - and the best mobile apps are
backed by a great website. Python web developer Nate Aune and iPhone
developer Anna Callahan will show you how we built a simple music web
app in Django with a native iPhone app that communicates with it.
Attendees of this talk will see a concrete case study of building an
application that exposes an API for mobile devices.&lt;/p&gt;
&lt;p&gt;Our web app exposes a JSON API for sending and receiving data from the
mobile device. We’ll talk about why we chose Django and the TastyPie API
package, and discuss other Python-based frameworks that could be used to
build the API such as Pyramid, Flask and Bottle. We’ll also compare REST
and custom APIs to understand best practices for building APIs designed
for mobile devices.&lt;/p&gt;
</summary><category term="api"></category><category term="django"></category><category term="flask"></category><category term="json"></category><category term="mobile"></category><category term="rest"></category><category term="tastypie"></category><category term="web"></category></entry><entry><title>Opening the Flask</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--opening-the-flask.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Armin Ronacher</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--opening-the-flask.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Opening the Flask&lt;/p&gt;
&lt;p&gt;Presented by Armin Ronacher&lt;/p&gt;
&lt;p&gt;After a year of the Flask microframework it's time to draw some
conclusions, see things that went right and things that should be
improved. The talk gives both an introduction into Flask itself as well
as well as the ecosystem that evolved around it.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Flask is a microframework that was born out of an April's fool joke that
quickly became more than that. Based on the powerful foundation of
Werkzeug and Jinja2 it's one of the most popular frameworks for Python
now.&lt;/p&gt;
&lt;p&gt;The talk starts with a very quick introduction into Flask, where it all
started and why I think people like it. We will look into the design of
Flask and why it works the way it works.&lt;/p&gt;
&lt;p&gt;Furthermore we will look into the Flask ecosystem and how extensions
work and have a brief look in what is planned for the future, especially
regarding Python 3.&lt;/p&gt;
&lt;p&gt;The talk assumes basic knowledge of web applications.&lt;/p&gt;
</summary><category term="flask"></category><category term="pycon"></category><category term="pycon2011"></category></entry></feed>