<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_gimjungi.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-08-26T00:00:00+00:00</updated><entry><title>Designing a Python-based Data Analysis / Online Coding Platform for Researchers and Educators</title><link href="https://pyvideo.org/pycon-korea-2015/designing-a-python-based-data-analysis-online-coding-platform-for-researchers-and-educators.html" rel="alternate"></link><published>2015-08-29T00:00:00+00:00</published><updated>2015-08-29T00:00:00+00:00</updated><author><name>신정규</name></author><id>tag:pyvideo.org,2015-08-29:pycon-korea-2015/designing-a-python-based-data-analysis-online-coding-platform-for-researchers-and-educators.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In modern science and engineering, it is essential to use data analysis
and calculation using computers. However, large-scale computing is
labor-intensive to achieve extensibility and manageability of computing
resources. We are designing and implementing a cloud platform that
standardizes development, running, and sharing of the data processing
tasks using cloud technologies and Python 3. We are also adding
research/education services on top of it.&lt;/p&gt;
&lt;p&gt;In this talk, we are going to share what we have learned during 2 months
of development experiences. In particular, it will include the
architecture of our platform, experiences in the design and
implementation process, and common caveats to care when you do a similar
work. We hope to share our motivation that allowed our pathway over such
a mine field with you.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Modern science and Python&lt;ul&gt;
&lt;li&gt;Online programming playground for researchers and educators&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Technical challenges&lt;ul&gt;
&lt;li&gt;Sandboxing!&lt;/li&gt;
&lt;li&gt;Resource consolidation&lt;/li&gt;
&lt;li&gt;Fast uploads/downloads of data&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Choice of tech stack&lt;ul&gt;
&lt;li&gt;Advantages and disadvantages of Python&lt;/li&gt;
&lt;li&gt;It's time to go Python 3&lt;/li&gt;
&lt;li&gt;On-premise vs. Hosting vs. Cloud (AWS / Azure / GCE)&lt;/li&gt;
&lt;li&gt;Docker containers 와 kubernetes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;quot;Shoveling&amp;quot;&lt;ul&gt;
&lt;li&gt;Warring states of Javascript frameworks + UI frontends&lt;/li&gt;
&lt;li&gt;Entangling Waltz of Polymer, webcomponents, and Django&lt;/li&gt;
&lt;li&gt;Backends: Mad-max around Docker&lt;/li&gt;
&lt;li&gt;Security holes in ipython/Jupyter in the perspective of developer
and hacker&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>High-performance Networking with Python</title><link href="https://pyvideo.org/pycon-apac-2016/high-performance-networking-with-python.html" rel="alternate"></link><published>2016-08-26T00:00:00+00:00</published><updated>2016-08-26T00:00:00+00:00</updated><author><name>김준기</name></author><id>tag:pyvideo.org,2016-08-26:pycon-apac-2016/high-performance-networking-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;발표자: 김준기 / joongi
슬라이드: &lt;a class="reference external" href="https://speakerdeck.com/achimnol/pycon-apac-2016-high-performance-networking-with-python"&gt;https://speakerdeck.com/achimnol/pycon-apac-2016-high-performance-networking-with-python&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>