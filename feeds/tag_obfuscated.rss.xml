<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 11 Mar 2011 00:00:00 +0000</lastBuildDate><item><title>How to write obfuscated python</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--how-to-write-obfuscated-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to write obfuscated python&lt;/p&gt;
&lt;p&gt;Presented by Rev. Johnny Healey&lt;/p&gt;
&lt;p&gt;With its clean, highly readable syntax, Python would seem to be quite a
challenge for a programmer attempting to write obfuscated code.
Fortunately, it provides a wide variety of high-level abstractions that
can be misused in exciting ways. This survey of obfuscation strategies
will include topics such as decorator abuse, lambda calculus, and
bytecode manipulation.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Python's clean syntax can make traditional approaches to writing
obfuscated code much more challenging. Fortunately, Python provides many
useful abstractions that can be misused to write code that is unreadable
or even deliberately misleading. This talk will provide a survey of
silly python tricks that explore the boundaries of the language.&lt;/p&gt;
&lt;p&gt;Topics&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Redefining builtins&lt;/li&gt;
&lt;li&gt;Rarely used syntax&lt;/li&gt;
&lt;li&gt;Comparison edge cases&lt;/li&gt;
&lt;li&gt;Things you probably shouldn't do with decorators&lt;/li&gt;
&lt;li&gt;Fun with lambdas&lt;/li&gt;
&lt;li&gt;Bytecode manipulation&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rev. Johnny Healey</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--how-to-write-obfuscated-python.html</guid><category>obfuscated</category><category>obfuscation</category><category>pycon</category><category>pycon2011</category></item></channel></rss>