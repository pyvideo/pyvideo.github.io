<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 11 Sep 2016 00:00:00 +0000</lastBuildDate><item><title>Practical Python Async for Dummies</title><link>https://pyvideo.org/kiwi-pycon-2016/practical-python-async-for-dummies.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Grant Paton-Simpson
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/121/"&gt;https://kiwi.pycon.org/schedule/presentation/121/&lt;/a&gt;
What's the point of faster computers if our code spends most of its time waiting for slower processes to complete. Shouldn't we be using asynchronous code to make lots of things happen simultaneously? Probably, but isn't that really tricky to do? The goal of this talk is to work through some very simple snippets of Python code that make common tasks much, much faster with minimal fuss.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Grant Paton-Simpson</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/practical-python-async-for-dummies.html</guid><category>async</category><category>for dummies</category></item></channel></rss>