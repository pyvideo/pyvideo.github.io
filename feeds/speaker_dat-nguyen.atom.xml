<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_dat-nguyen.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-04-28T00:00:00+00:00</updated><entry><title>Python Doesnâ€™t Have to Be Slow: Speeding Up a Large-Scale Optimization Algorithm</title><link href="https://pyvideo.org/pydata-london-2018/python-doesnt-have-to-be-slow-speeding-up-a-large-scale-optimization-algorithm.html" rel="alternate"></link><published>2018-04-28T00:00:00+00:00</published><updated>2018-04-28T00:00:00+00:00</updated><author><name>Dat Nguyen</name></author><id>tag:pyvideo.org,2018-04-28:pydata-london-2018/python-doesnt-have-to-be-slow-speeding-up-a-large-scale-optimization-algorithm.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will present a case study of portfolio allocation on a Peer 2 Peer
platform. Within the context of development of a heuristic optimization
algorithm, we will focus on the bottlenecks of data manipulation in
pandas, how to resolve them by using pure Numpy, compilation with Numba
and embarrassingly parallel loops and explain how they work under the
hood.&lt;/p&gt;
</summary></entry></feed>