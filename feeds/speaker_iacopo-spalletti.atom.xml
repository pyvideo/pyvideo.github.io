<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Iacopo Spalletti</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_iacopo-spalletti.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-06-03T00:00:00+00:00</updated><subtitle></subtitle><entry><title>CMS Panel</title><link href="https://pyvideo.org/djangocon-europe-2015/iacopo-spalletti-tom-dyson-daniele-procida-cms-at.html" rel="alternate"></link><published>2015-07-31T00:00:00+00:00</published><updated>2015-07-31T00:00:00+00:00</updated><author><name>Iacopo Spalletti</name></author><id>tag:pyvideo.org,2015-07-31:/djangocon-europe-2015/iacopo-spalletti-tom-dyson-daniele-procida-cms-at.html</id><content type="html"></content><category term="DjangoCon Europe 2015"></category></entry><entry><title>DjangoBeer</title><link href="https://pyvideo.org/djangocon-europe-2015/iacopo-spalletti-djangobeer-at-djangocon-europe.html" rel="alternate"></link><published>2015-07-24T00:00:00+00:00</published><updated>2015-07-24T00:00:00+00:00</updated><author><name>Iacopo Spalletti</name></author><id>tag:pyvideo.org,2015-07-24:/djangocon-europe-2015/iacopo-spalletti-djangobeer-at-djangocon-europe.html</id><content type="html"></content><category term="DjangoCon Europe 2015"></category></entry><entry><title>Closing ceremony</title><link href="https://pyvideo.org/djangocon-europe-2017/closing-ceremony.html" rel="alternate"></link><published>2017-04-05T00:00:00+00:00</published><updated>2017-04-05T00:00:00+00:00</updated><author><name>Iacopo Spalletti</name></author><id>tag:pyvideo.org,2017-04-05:/djangocon-europe-2017/closing-ceremony.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Closing remarks thanks to everyone&lt;/p&gt;
</content><category term="DjangoCon Europe 2017"></category></entry><entry><title>Building real time applications with Django</title><link href="https://pyvideo.org/djangocon-europe-2018/building-real-time-applications-with-django.html" rel="alternate"></link><published>2018-05-23T00:00:00+00:00</published><updated>2018-05-23T00:00:00+00:00</updated><author><name>Iacopo Spalletti</name></author><id>tag:pyvideo.org,2018-05-23:/djangocon-europe-2018/building-real-time-applications-with-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since the introduction of Channels, real time web has become much easier to work with in Django: discover how you can easily create yours with Django!&lt;/p&gt;
&lt;p&gt;Since the introduction of Channels, real time web has become much easier to work with in Django. It’s now possible to build …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since the introduction of Channels, real time web has become much easier to work with in Django: discover how you can easily create yours with Django!&lt;/p&gt;
&lt;p&gt;Since the introduction of Channels, real time web has become much easier to work with in Django. It’s now possible to build real time applications with much less effort in managing the idiosyncrasies of the async programming and a lot of batteries are included. Starting with a brief introduction to Channels (targeting version 2.0), we will see how to build a real time application, both on the Django and the frontend side and how easy it’s to start experimenting with it. The talk has a very hands-on approach, to allow the attendees to experiment with the proposed solution and approach, and starting immediately building their own real time applications with Django.&lt;/p&gt;
&lt;p&gt;Iacopo Spalletti&lt;/p&gt;
</content><category term="DjangoCon Europe 2018"></category></entry><entry><title>DjangoCMS Best Practices</title><link href="https://pyvideo.org/pycon-italia-2015/djangocms-best-practices.html" rel="alternate"></link><published>2015-06-09T00:00:00+00:00</published><updated>2015-06-09T00:00:00+00:00</updated><author><name>Iacopo Spalletti</name></author><id>tag:pyvideo.org,2015-06-09:/pycon-italia-2015/djangocms-best-practices.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ci sono almeno tre feature di django 1.8 / 1.9 che mi entusiasmano. Non
sono sono i template multipli o la possibilità di utilizzare i campi
specializzati di postgres. Qualcuna di esse magari non finirà nemmeno
nelle release notes. Ad alcune di esse ho collaborato direttamente e
descriverò …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ci sono almeno tre feature di django 1.8 / 1.9 che mi entusiasmano. Non
sono sono i template multipli o la possibilità di utilizzare i campi
specializzati di postgres. Qualcuna di esse magari non finirà nemmeno
nelle release notes. Ad alcune di esse ho collaborato direttamente e
descriverò la mia esperienza nel contribuire a Django.&lt;/p&gt;
</content><category term="PyCon Italia 2015"></category></entry><entry><title>L'Italia, Python e la chimera dell'Agile</title><link href="https://pyvideo.org/pycon-italia-2017/litalia-python-e-la-chimera-dellagile.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Iacopo Spalletti</name></author><id>tag:pyvideo.org,2017-04-08:/pycon-italia-2017/litalia-python-e-la-chimera-dellagile.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sono quasi certo che il proverbio “tra il dire e il fare c’è di mezzo
il mare” lo abbiano inventato pensando alle metodologie agili. Forse
in USA o in Svezia ci riescono davvero, ma in Italia? Possiamo dire
di essere agili quando di test ne facciamo “ un po …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sono quasi certo che il proverbio “tra il dire e il fare c’è di mezzo
il mare” lo abbiano inventato pensando alle metodologie agili. Forse
in USA o in Svezia ci riescono davvero, ma in Italia? Possiamo dire
di essere agili quando di test ne facciamo “ un po’ “, i task degli
sprint li decide il cliente e il contratto prevede un budget fissato
e una deadline prestabilita? E com’è la situazione tra i pythonisti?
Ne parliamo con Marco Beri, Iacopo Spalletti, Roberto Bettazzoni e
Peter Bittner in un panel dove siete tutti invitati a partecipare e
condividere casi di successo e scheletri nell’armadio.&lt;/p&gt;
</content><category term="PyCon Italia 2017"></category></entry><entry><title>Building real time applications with Django</title><link href="https://pyvideo.org/pycon-italia-2018/building-real-time-applications-with-django.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Iacopo Spalletti</name></author><id>tag:pyvideo.org,2018-04-20:/pycon-italia-2018/building-real-time-applications-with-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since the introduction of Channels, real time web has become much easier
to work with in Django. It’s now possible to build real time
applications with much less effort in managing the idiosyncrasies of the
async programming and a lot of batteries are included. Starting with a
brief …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since the introduction of Channels, real time web has become much easier
to work with in Django. It’s now possible to build real time
applications with much less effort in managing the idiosyncrasies of the
async programming and a lot of batteries are included. Starting with a
brief introduction to Channels, we will see how to build a real time
application, both on the Django and the frontend side and how easy it’s
to start experimenting with it. The talk has a very hands-on approach,
to allow the attendees to experiment with the proposed solution and
approach and starting immediately building their own real time
applications with Django.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;venerdì 20 aprile&lt;/strong&gt; at 14:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon Italia 2018"></category><category term="web"></category><category term="javascript"></category><category term="websockets"></category><category term="django"></category></entry><entry><title>Writing async microservices in Python</title><link href="https://pyvideo.org/pycon-italia-2022/writing-async-microservices-in-python.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Iacopo Spalletti</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/writing-async-microservices-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing async microservices in Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Writing an async microservice is a good way to improve the concurrency
of your platform and decouple the different components of a web
platform, Python provides excellent tools to write them and we’re going
to introduce some of them for …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing async microservices in Python - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Writing an async microservice is a good way to improve the concurrency
of your platform and decouple the different components of a web
platform, Python provides excellent tools to write them and we’re going
to introduce some of them for you to immediately start creating your
own. While not exactly new, async programming has arrived quite recently
in the Python core. This enabled to create a wide ecosystem of
async-first or async-enabled libraries and frameworks that makes async
programming more available to the everyday developer. Writing an async
microservice is a good way to get your hands dirty with async
programming: we are going to see how to build it using FastAPI and its
ecosystem to show tecniques and pitfalls.&lt;/p&gt;
&lt;p&gt;Slides:&lt;/p&gt;
&lt;p&gt;Speaker: Iacopo Spalletti&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="asyncio"></category><category term="microservices"></category></entry><entry><title>Testing applications for django CMS</title><link href="https://pyvideo.org/pycon-uk-2015/testing-applications-for-django-cms.html" rel="alternate"></link><published>2015-09-20T00:00:00+00:00</published><updated>2015-09-20T00:00:00+00:00</updated><author><name>Iacopo Spalletti</name></author><id>tag:pyvideo.org,2015-09-20:/pycon-uk-2015/testing-applications-for-django-cms.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing applications integrated with django CMS can be complex with a
lot of boilerplate code and some dark corners This talk will try to make
it clearer and easier to write tests and will present tools to reduce
the effort and the boilerplate&lt;/p&gt;
</content><category term="PyCon UK 2015"></category></entry><entry><title>Django CMS in the real time web</title><link href="https://pyvideo.org/pycon-uk-2016/django-cms-in-the-real-time-web.html" rel="alternate"></link><published>2016-09-17T00:00:00+00:00</published><updated>2016-09-17T00:00:00+00:00</updated><author><name>Iacopo Spalletti</name></author><id>tag:pyvideo.org,2016-09-17:/pycon-uk-2016/django-cms-in-the-real-time-web.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django CMS in the real time web: how to mix CMS, websockets, REST for a fully real time experience&lt;/p&gt;
&lt;p&gt;Lacopo Spalletti&lt;/p&gt;
&lt;p&gt;CMS websites are usually kind of boring: get a request, pick data from storage, stamp them on a template and return to the client. This is less and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django CMS in the real time web: how to mix CMS, websockets, REST for a fully real time experience&lt;/p&gt;
&lt;p&gt;Lacopo Spalletti&lt;/p&gt;
&lt;p&gt;CMS websites are usually kind of boring: get a request, pick data from storage, stamp them on a template and return to the client. This is less and less suitable for the current web experience, and more advanced and flexible architecture are needed: what if we mix the best CMS for Django with the real time web technologies? We'll end up with the best of both worlds: this talk will show how to use a few applications and techniques to achieve this goal. I'll show how to integrate django CMS with django channels, a REST API and an Angular JS client in a fully featured SPA managed by django CMS.&lt;/p&gt;
</content><category term="PyCon UK 2016"></category></entry><entry><title>Real Time Django</title><link href="https://pyvideo.org/swiss-python-summit-2018/real-time-django.html" rel="alternate"></link><published>2018-02-16T00:00:00+00:00</published><updated>2018-02-16T00:00:00+00:00</updated><author><name>Iacopo Spalletti</name></author><id>tag:pyvideo.org,2018-02-16:/swiss-python-summit-2018/real-time-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since the introduction of Channels, real time web has become much easier to work with in Django. It’s now possible to build real time applications with much less effort in managing the idiosyncrasies of the async programming and a lot of batteries are included. Starting with a brief …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since the introduction of Channels, real time web has become much easier to work with in Django. It’s now possible to build real time applications with much less effort in managing the idiosyncrasies of the async programming and a lot of batteries are included. Starting with a brief introduction to Channels, we will see how to build a real time application, both on the Django and the frontend side and how easy it’s to start experimenting with it.&lt;/p&gt;
</content><category term="Swiss Python Summit 2018"></category></entry></feed>