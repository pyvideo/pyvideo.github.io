<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_stu-michael-stewart.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-22T00:00:00+00:00</updated><entry><title>(Deep) Learn You a Neural Net for Great Good!</title><link href="https://pyvideo.org/pydata-la-2018/deep-learn-you-a-neural-net-for-great-good.html" rel="alternate"></link><published>2018-10-22T00:00:00+00:00</published><updated>2018-10-22T00:00:00+00:00</updated><author><name>Stu (Michael Stewart)</name></author><id>tag:pyvideo.org,2018-10-22:pydata-la-2018/deep-learn-you-a-neural-net-for-great-good.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Together we live code (in a RISE slideshow) a fully-connected neural net
from scratch via numpy, initially training it using a for-loop to
demonstrate core concepts, and finally codifying it as a Scikit-learn
classifier with which one can fit &amp;amp; predict on one’s own data. To close,
I walk through a toy example which logistic regression can’t properly
classify, but which our NN can.&lt;/p&gt;
</summary></entry></feed>