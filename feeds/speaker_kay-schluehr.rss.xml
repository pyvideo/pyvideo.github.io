<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Tue, 02 Jul 2013 00:00:00 +0000</lastBuildDate><item><title>Functional testing with Python</title><link>https://pyvideo.org/europython-2013/functional-testing-with-python.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kay Schluehr</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:europython-2013/functional-testing-with-python.html</guid><category>testing</category><category>automation</category></item><item><title>Source code processing with Python</title><link>https://pyvideo.org/europython-2011/source-code-processing-with-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Kay Schluehr - 24 June 2011 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Folklore says that having a problem and trying to solve it with regular
expressions gives you two problems. However not applying regular
expressions to advanced textual search'n replace doesn't solve your
problem either. One step above you have large portions of recursively
structured text aka &amp;quot;source code&amp;quot; and using context free grammars and
tools supporting them gives you two problems but not using them also
doesn't solve your original problem. Maybe you get uneasy at that point
because what I say implies parsers and computing science and what not
and you still wake up in the night believing that you have to learn
automata theory but you are lucky it was just a nightmare. Otherwise you
are laughing about the little diatribe against regexps and use them
without much deliberation, verifying your SQL input, mining source code
and do all the other things they are not made for.&lt;/p&gt;
&lt;p&gt;In my talk I'm addressing daily use of grammars outside of the scope of
compiler implementation or natural language processing. My talk covers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Search &amp;amp; Replace using grammars&lt;/li&gt;
&lt;li&gt;CodeTemplates for source code transformation&lt;/li&gt;
&lt;li&gt;Generative grammars for expression generation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm touching this from the lightweight, &amp;quot;pythonic&amp;quot; angle and you might
wonder why not everyone uses those techniques already for decades in
their daily work. I can't answer this, I wonder about this too.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kay Schluehr</dc:creator><pubDate>Wed, 13 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-13:europython-2011/source-code-processing-with-python.html</guid><category>processing</category><category>science</category></item></channel></rss>