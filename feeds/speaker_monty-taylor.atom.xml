<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_monty-taylor.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-04-21T00:00:00+00:00</updated><entry><title>Testing Thousands of Python Projects Every Day</title><link href="https://pyvideo.org/pycon-italia-2018/testing-thousands-of-python-projects-every-day.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Monty Taylor</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/testing-thousands-of-python-projects-every-day.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The OpenStack Infra team runs one of the world’s largest Open Source
CI/CD systems in service of OpenStack’s early decision to mandate that
all merges only be performed by automation if and only if all tests
pass. Accomplishing this at scale involves a combination of software and
policy.&lt;/p&gt;
&lt;p&gt;Zuul is the software engine developed to handle this. It is, of course,
written in Python. (Python3 to be exact!)&lt;/p&gt;
&lt;p&gt;Zuul is not OpenStack specific. With the rise of microservices and
kubernetes, the number of multi-repo projects is increasing, as is the
need for CI systems that understand them. The most recent version of
Zuul has been reworked to make it easy for other people, communities or
organizations to harness its power regardless of any relationship with
OpenStack.&lt;/p&gt;
&lt;p&gt;We’ll talk about the things that make Zuul special - multi-repository
dependencies, optimistic branch prediction and deep Ansible integration.
And we’ll walk through how to get started with a private or a public
Zuul.&lt;/p&gt;
&lt;p&gt;There are also the parts of the equation that Zuul doesn’t cover.
Handling thousands of different python projects requires some specific
choices and tradeoffs, so we’ll discuss how we structure the projects,
dependency management and release engineering.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 09:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="OpenStack"></category><category term="ansible"></category><category term="zuul"></category><category term="python3"></category></entry><entry><title>OpenStack: A vision for the future</title><link href="https://pyvideo.org/pycon-au-2015/openstack-a-vision-for-the-future.html" rel="alternate"></link><published>2015-08-04T00:00:00+00:00</published><updated>2015-08-04T00:00:00+00:00</updated><author><name>Monty Taylor</name></author><id>tag:pyvideo.org,2015-08-04:pycon-au-2015/openstack-a-vision-for-the-future.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenStack as a phenomenon has been explosive and rather unprecedented.
The highly decentralized decision making coupled with an aggressive
release cadence have allowed us to be both an inclusive body and also
ship software. However, crisp vision is not necessarily an emergent
property of collective thought process. It's time for some vision to be
presented and championed if we're going to take the next step in our
evolution.&lt;/p&gt;
&lt;p&gt;Let's talk about a vision of what OpenStack needs to be, how it needs to
be shaped, and what it will take to get us there.&lt;/p&gt;
</summary></entry><entry><title>OpenStack Works, so now what?</title><link href="https://pyvideo.org/pycon-au-2015/openstack-works-so-now-what.html" rel="alternate"></link><published>2015-08-04T00:00:00+00:00</published><updated>2015-08-04T00:00:00+00:00</updated><author><name>Monty Taylor</name></author><id>tag:pyvideo.org,2015-08-04:pycon-au-2015/openstack-works-so-now-what.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While we've made a great big hoopla over the last few years about
deploying OpenStack and what our development process is and other
fascinating topics, it turns out that a cloud is not particularly
interesting in and of itself. A cloud is a thing that you use to, well,
DO something.&lt;/p&gt;
&lt;p&gt;The OpenStack Infra team DO something with OpenStack clouds every day.
It turns out it is related to both developing and deploying OpenStack,
but let's forget about that for now. What we really are is a giant
machine for manipulating OpenStacks, and we've gotten rather good at it.
As a result of that ... we've been good little hackers and have produced
a library, called shade, which is the embodiment of the knowledge we've
gathered in trying to do useful things. shade is at the heart of our
nodepool project, as well as the basis of the latest set of Ansible
modules for OpenStack.&lt;/p&gt;
&lt;p&gt;So - Let's talk about shade. And let's talk about Ansible. And let's
talk about using clouds to actually perform work.&lt;/p&gt;
</summary></entry></feed>