<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Tue, 05 Nov 2019 00:00:00 +0000</lastBuildDate><item><title>A How-to guide for migrating legacy data applications</title><link>https://pyvideo.org/pydata-new-york-city-2019/a-how-to-guide-for-migrating-legacy-data-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Migrating legacy applications can be daunting. They are frequently large, poorly tested, undermaintained, yet business critical. Over time they may end up relying on deprecated technology and unprepared for changing business needs. Weâ€™ll cover lessons learned in migrating such an application to something maintainable, sharing details on how to go about it in a safe and systematic manner.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marius van Niekerk</dc:creator><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/a-how-to-guide-for-migrating-legacy-data-applications.html</guid></item><item><title>Conda Forge - Community Driven Packaging That Works for You</title><link>https://pyvideo.org/pydata-new-york-city-2018/conda-forge-community-driven-packaging-that-works-for-you.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marius van Niekerk</dc:creator><pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-17:pydata-new-york-city-2018/conda-forge-community-driven-packaging-that-works-for-you.html</guid></item><item><title>Integrating Scala/Java with your Python code</title><link>https://pyvideo.org/pydata-carolinas-2016/integrating-scalajava-with-your-python-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Occasionally Python-focused data shops need to use JVM languages for
performance reasons. Generally this necessitates throwing away whole
repositories of Python code and starting over or resorting to interop
architectures (e.g., Apache thrift) which increase system complexity.
We provide a technique (and a new library, spylon) for interoperating
easily with the JVM from Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marius van Niekerk</dc:creator><pubDate>Thu, 15 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-15:pydata-carolinas-2016/integrating-scalajava-with-your-python-code.html</guid></item></channel></rss>