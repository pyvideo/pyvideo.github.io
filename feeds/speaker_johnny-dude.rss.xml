<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 11 Jul 2019 00:00:00 +0000</lastBuildDate><item><title>How Thinking in Python Made Me a Better Software Engineer</title><link>https://pyvideo.org/europython-2019/how-thinking-in-python-made-me-a-better-software-engineer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Did you ever wonder why development in Python can be x10 faster than
development in languages like c++?&lt;/p&gt;
&lt;p&gt;Observing my teams’ experimentations, the python community, and reading,
I have adopted various habits, patterns, and tools. But most importantly
I learned thinking in Python. I consider thinking in Python a key for
rapid development and good engineering.&lt;/p&gt;
&lt;p&gt;Thinking in a programming language affects the amount of information you
need to keep in your working memory. It also affects the abstractions
and tools that pop in your mind and then used in constructing solutions.&lt;/p&gt;
&lt;p&gt;Let’s explore what it means to think in Python. Why Python allows you to
focus on problem solving, while languages like c++ often distract your
attention from the problem at hand.&lt;/p&gt;
&lt;p&gt;In this talk I will cover some good and bad practices by examples while
trying to consider the amount of effort needed to write it, read it, and
talk about it with other team members.&lt;/p&gt;
&lt;p&gt;Key Takeaways: Tips for speeding your work without compromising quality,
and reasoning for using it.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The audience should be comfortably familiar with the process of
software development, and software problem solving, and experience
using Python.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Johnny Dude</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:europython-2019/how-thinking-in-python-made-me-a-better-software-engineer.html</guid><category>Best Practice</category><category>Development</category><category>Software Design</category><category>failures/mistakes</category></item></channel></rss>