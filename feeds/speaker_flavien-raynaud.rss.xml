<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 25 Jul 2018 00:00:00 +0000</lastBuildDate><item><title>How to write Rust instead of C, and get away with it (yes, it's a Python talk)</title><link>https://pyvideo.org/europython-2018/how-to-write-rust-instead-of-c-and-get-away-with-it-yes-its-a-python-talk.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever tried optimizing a super-slow Python application and
thought: “Oh! I wish I could just write this bit it in Rust”? Well,
turns out you can! We will show you how Rust is a better alternative
than C to make your programs lightning fast, and how to get away with
it; without your users even noticing.&lt;/p&gt;
&lt;p&gt;As Infrastructure Engineers at Yelp, the challenge we face everyday is:
scale. Yelp is mostly a Python shop and while this is great for
development velocity, our work often revolves around making Python
applications run faster. Until now, we have been using different
techniques: faster interpreters, or, more often, C code.&lt;/p&gt;
&lt;p&gt;Given its safety guarantees, performance and promise of better tooling
than C, we decided we had to give Rust a try. The initial results helped
reinforce that there was a lot of opportunity for Rust to play an
important role in our production code.&lt;/p&gt;
&lt;p&gt;Yelp heavily relies on the Apache Avro (&lt;a class="reference external" href="https://avro.apache.org/"&gt;https://avro.apache.org/&lt;/a&gt;)
serialization format for its internal infrastructure. During the talk,
we will show how we implemented an Avro serialization/deserialization
library in Rust, how we were able to call it from Python (and in theory
from any other language) with very little code, using tools such as
cbindgen (&lt;a class="reference external" href="https://github.com/eqrion/cbindgen/"&gt;https://github.com/eqrion/cbindgen/&lt;/a&gt;), CFFI
(&lt;a class="reference external" href="https://cffi.readthedocs.io/en/latest/"&gt;https://cffi.readthedocs.io/en/latest/&lt;/a&gt;) and Milksnake
(&lt;a class="reference external" href="https://github.com/getsentry/milksnake/"&gt;https://github.com/getsentry/milksnake/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This talk would outline how easy it is to write performant code in a
language like Rust and call it from Python applications without users
even realizing it, making this a great solution for production services.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Antonio Verardi</dc:creator><pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-25:europython-2018/how-to-write-rust-instead-of-c-and-get-away-with-it-yes-its-a-python-talk.html</guid></item><item><title>Python Data Structures implementationlist, dict: how does CPython actually implement them?</title><link>https://pyvideo.org/fosdem-2017/python-data-structures-implementationlist-dict-how-does-cpython-actually-implement-them.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Flavien Raynaud</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/python-data-structures-implementationlist-dict-how-does-cpython-actually-implement-them.html</guid></item></channel></rss>