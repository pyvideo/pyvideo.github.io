<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 10 May 2018 00:00:00 +0000</lastBuildDate><item><title>Docker for Data Science</title><link>https://pyvideo.org/pycon-us-2018/docker-for-data-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter notebooks simplify the process of developing and sharing Data Science projects across groups and organizations. However, when we want to deploy our work into production, we need to extract the model from the notebook and package it up with the required artifacts (data, dependencies, configurations, etc) to ensure it works in other environments. Containerization technologies such as Docker can be used to streamline this workflow.&lt;/p&gt;
&lt;p&gt;This hands-on tutorial presents Docker in the context of Reproducible Data Science - from idea to application deployment. You will get a thorough introduction to the world of containers; learn how to incorporate Docker into various Data Science projects; and walk through the process of building a Machine Learning model in Jupyter and deploying it as a containerized Flask REST API.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aly Sivji</dc:creator><pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-10:pycon-us-2018/docker-for-data-science.html</guid><category>jupyter</category><category>docker</category><category>data science</category></item><item><title>Mongoengine Basics</title><link>https://pyvideo.org/chicago-djangonauts/mongoengine-basics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A walk through of MondoDB pymongo and mongoengine and how they can be
used in a production environment.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joe Jasinski</dc:creator><pubDate>Thu, 03 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-03:chicago-djangonauts/mongoengine-basics.html</guid></item><item><title>upgrading Django</title><link>https://pyvideo.org/chicago-djangonauts/upgrading-django.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Joe Jasinski: upgrading Django&lt;/p&gt;
&lt;p&gt;(Please expand - 1 or 2 lines is fine. see
&lt;a class="reference external" href="http://pyvideo.org/category/17/pycon-us-2012"&gt;http://pyvideo.org/category/17/pycon-us-2012&lt;/a&gt; for how it will be used)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joe Jasinski</dc:creator><pubDate>Thu, 02 May 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-05-02:chicago-djangonauts/upgrading-django.html</guid></item><item><title>Consuming Tasks with Celery</title><link>https://pyvideo.org/chicago-djangonauts/consuming-tasks-with-celery.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Introduction to RabbitMQ, Celery, Django-celery, basic task types, and
monitoring. This will provide a walk-through of how to get started and
be productive with these tools.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joe Jasinski</dc:creator><pubDate>Thu, 02 Feb 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-02-02:chicago-djangonauts/consuming-tasks-with-celery.html</guid><category>RabbitMQ Celery</category></item><item><title>Django+Elasticsearch+Haystack to Search PDFs and Such</title><link>https://pyvideo.org/chipy/djangoelasticsearchhaystack-to-search-pdfs-and.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wanted to search the contents of uploaded PDFs, Docs, and
other document formats on your website? Django Haystack (with the
Elasticsearch search backend) is a great way to add search to your site,
but it does not support full document indexing out of the box. I'd like
to share a solution that I cobbled together to allow this combination of
tools the ability to search document contents.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joe Jasinski</dc:creator><pubDate>Thu, 12 Feb 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-02-12:chipy/djangoelasticsearchhaystack-to-search-pdfs-and.html</guid></item><item><title>Under the Microscope: Evaluating Existing Django Code When Onboarding a New Client</title><link>https://pyvideo.org/djangocon-us-2012/under-the-microscope-evaluating-existing-django.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;As a Web development firm that specializes in Django, we receive many
inquiries from organizations looking for assistance with their existing
Django websites. This session will describe our process for evaluating
existing codebases and deployment structures. The goal is to provide a
framework for evaluating other people's code and understand the scrutiny
your code may someday endure.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Taking over someone else’s code is an exercise fraught with peril.
However, with the growing popularity of Django, more and more
organizations are seeking companies and individuals to take over their
Django website and support their existing Django codebase. This talk
will describe the standardized process Imaginary Landscape has developed
to evaluate existing code as part of their new client onboarding
process.&lt;/p&gt;
&lt;p&gt;Covered topics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Introduction/Overview&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Top reasons why clients are looking to change vendor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Initial assessment&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="literal-block"&gt;
* What questions to ask before looking at the code.
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Where to start when looking at code?&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="literal-block"&gt;
* Traversing the code tree to get a feel for how the code is structured
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
* Trying to determine how the previous developer thinks
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Detailed code review including checklist&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="literal-block"&gt;
* Things to look for when evaluating code: Version control, &amp;quot;Standard&amp;quot;
&lt;/pre&gt;
&lt;p&gt;site layout, Settings file, hardcoding, Virtualenv, south, etc.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Examples (names have been changed to protect the imperfect)&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="literal-block"&gt;
* The good: the kinds of coding and configuration techniques that seem
&lt;/pre&gt;
&lt;p&gt;to be consistent among well-thought-out projects.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
* The bad: examples of code and configuration that make onboarding and
&lt;/pre&gt;
&lt;p&gt;maintenance difficult.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Final thoughts&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="literal-block"&gt;
* What you can do as a developer taking over a project.
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
* What you can do as a developer hoping to make great code that others
&lt;/pre&gt;
&lt;p&gt;may someday see.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
* Exercise your right to say no, it’s your reputation on the line
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Q&amp;amp;A&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Moloney</dc:creator><pubDate>Thu, 06 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-06:djangocon-us-2012/under-the-microscope-evaluating-existing-django.html</guid><category>django</category></item><item><title>So You Want to Make a Payment: Comparing and contrasting Django payment options</title><link>https://pyvideo.org/djangocon-us-2012/so-you-want-to-make-a-payment-comparing-and-cont.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;So you've developed an eCommerce site and now you want users to be able
to make payments. The aim of this talk will be to introduce and compare
some common payment gateway options, such as Payflow, Authorize.net,
Stripe, and Braintree, with the focus of integrating them into Django
projects.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When developing eCommerce applications in Django, you will often be
faced with the choice of which payment API to use. It's not always clear
which services are available, which will fit your needs, and how to get
started with them. This talk aims to evaluate these payment options from
a Django programmer's perspective and provide you with background that
may help you choose a payment processor that fits your needs.&lt;/p&gt;
&lt;p&gt;Topics will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;High-level overview of how payments work.&lt;/li&gt;
&lt;li&gt;Overview of popular payment options: Google Checkout, Authorize.net,
Payflow Payments, Braintree, Stripe, etc.&lt;/li&gt;
&lt;li&gt;Compare and contrast these payment gateway APIs&lt;ul&gt;
&lt;li&gt;compare ease of use&lt;/li&gt;
&lt;li&gt;features&lt;/li&gt;
&lt;li&gt;price&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;General overview of payment gateway web interfaces&lt;/li&gt;
&lt;li&gt;Example Code snippets for payment processing&lt;/li&gt;
&lt;li&gt;Useful Python/Django payment-related modules&lt;/li&gt;
&lt;li&gt;Q&amp;amp;A&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joe Jasinski</dc:creator><pubDate>Wed, 05 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-05:djangocon-us-2012/so-you-want-to-make-a-payment-comparing-and-cont.html</guid><category>django</category><category>payments</category></item><item><title>Geo+Django: Geo beyond the Django</title><link>https://pyvideo.org/djangocon-us-2014/geo-django-geo-beyond-the-django.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Have you gone through the comprehensive GeoDjango docs, but wondered
where to go next? Are you curious about how you can combine the power
GeoDjango with other community-built tools? Do you want to create pretty
maps in Python? If so, you are in the right place. Learn about GeoDjango
and Geographic Information Systems and navigate beyond the docs into the
exciting GIS technology landscape.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/FOPU/"&gt;http://amara.org/v/FOPU/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joe Jasinski</dc:creator><pubDate>Tue, 16 Sep 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-09-16:djangocon-us-2014/geo-django-geo-beyond-the-django.html</guid></item></channel></rss>