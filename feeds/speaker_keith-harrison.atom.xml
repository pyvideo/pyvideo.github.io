<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_keith-harrison.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-07-27T00:00:00+00:00</updated><entry><title>Creating a Culture of Software Craftsmanship</title><link href="https://pyvideo.org/europython-2018/creating-a-culture-of-software-craftsmanship.html" rel="alternate"></link><published>2018-07-27T00:00:00+00:00</published><updated>2018-07-27T00:00:00+00:00</updated><author><name>Keith Harrison</name></author><id>tag:pyvideo.org,2018-07-27:europython-2018/creating-a-culture-of-software-craftsmanship.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This time it’ll be different. It’s a green field project and you’ve
learned from your mistakes. You’re not going to make the same ones
again.&lt;/p&gt;
&lt;p&gt;Fast forward several months and you’re in a mess. A change in one place
causes bugs in a completely different place. Adding a simple feature
means making changes all over your application. Progress is getting
slower and slower. You’re lost in complexity.&lt;/p&gt;
&lt;p&gt;Why does this keep happening and what can we do about it?&lt;/p&gt;
&lt;p&gt;This talk will try to answer those questions.&lt;/p&gt;
&lt;p&gt;I’ll show how complex software really is, define the different types of
complexity found in software, explain the issues complexity causes and
discuss different techniques we can use to manage it.&lt;/p&gt;
&lt;p&gt;This talk is suitable for anyone who has worked or will work on a
software development project. No development experience is required.&lt;/p&gt;
</summary></entry></feed>