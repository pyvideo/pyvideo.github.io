<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_hareem-naveed.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-12-04T00:00:00+00:00</updated><entry><title>Write the Docs!</title><link href="https://pyvideo.org/pydata-la-2019/write-the-docs.html" rel="alternate"></link><published>2019-12-04T00:00:00+00:00</published><updated>2019-12-04T00:00:00+00:00</updated><author><name>Hareem Naveed</name></author><id>tag:pyvideo.org,2019-12-04:pydata-la-2019/write-the-docs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will provide an in-depth overview of Sphinx and how it can be
used to generate intelligent and readable documentation of your Python
code.&lt;/p&gt;
&lt;p&gt;Documenting code should be the easiest part, yet it is often cited as
the hardest part of developing a data science product. In this talk we
will introduce Sphinx, an open-source tool that allows you to template
documentation for any project. We will give an overview of how Sphinx
works, and walk through:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Examples of documentation generated with Sphinx&lt;/li&gt;
&lt;li&gt;reStructuredText vs Markdown&lt;/li&gt;
&lt;li&gt;How does Docutils work at the individual file level&lt;/li&gt;
&lt;li&gt;How does Sphinx tie it all together&lt;/li&gt;
&lt;li&gt;Best practices for setting up your documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk is for anyone who has ever wondered how all the Read the Docs
are generated!&lt;/p&gt;
</summary></entry><entry><title>Docker for Data Science: Reproducibility and Deployment</title><link href="https://pyvideo.org/pydata-la-2018/docker-for-data-science-reproducibility-and-deployment.html" rel="alternate"></link><published>2018-10-21T00:00:00+00:00</published><updated>2018-10-21T00:00:00+00:00</updated><author><name>Hareem Naveed</name></author><id>tag:pyvideo.org,2018-10-21:pydata-la-2018/docker-for-data-science-reproducibility-and-deployment.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will introduce the basics of working with Docker
containers and walk through common use cases. Using Docker containers,
data scientists can create reproducible work flows and ease model
deployment.&lt;/p&gt;
</summary></entry></feed>