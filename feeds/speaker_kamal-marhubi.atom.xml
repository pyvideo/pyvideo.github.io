<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_kamal-marhubi.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-11-23T00:00:00+00:00</updated><entry><title>asyncio.get_event_loop() → what is that?</title><link href="https://pyvideo.org/montreal-python/asyncioget_event_loop-what-is-that.html" rel="alternate"></link><published>2015-11-23T00:00:00+00:00</published><updated>2015-11-23T00:00:00+00:00</updated><author><name>Kamal Marhubi</name></author><id>tag:pyvideo.org,2015-11-23:montreal-python/asyncioget_event_loop-what-is-that.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Montreal, Nov. 23, 2015 - Kamal Marhubi recently realized he had no idea how event loops worked. A couple of days later, he was looking at the asyncio source with a friend, and decided to share some of what they both found out. In this talk, you will find out what an event loop is, why you might want to use one, and you'll get a look at some of the key parts of the implementation in the standard asyncio module.&lt;/p&gt;
&lt;p&gt;Recorded and edited live by &amp;#64;ChristianAubry at Montréal Python 55 (MP55: Wagnerian Xenosaurus) with a little big help from Savoir-faire Linux (&lt;a class="reference external" href="http://sflx.ca/jobs"&gt;http://sflx.ca/jobs&lt;/a&gt;).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;About Kamal: &lt;a class="reference external" href="http://kamalmarhubi.com/"&gt;http://kamalmarhubi.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;About asyncio: &lt;a class="reference external" href="http://sflx.ca/asyncio"&gt;http://sflx.ca/asyncio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;About MP55: &lt;a class="reference external" href="http://sflx.ca/MP55e"&gt;http://sflx.ca/MP55e&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Amazon EC2 Spots Instances</title><link href="https://pyvideo.org/montreal-python/amazon-ec2-spots-instances.html" rel="alternate"></link><published>2013-09-09T00:00:00+00:00</published><updated>2013-09-09T00:00:00+00:00</updated><author><name>Kamal Marhubi</name></author><id>tag:pyvideo.org,2013-09-09:montreal-python/amazon-ec2-spots-instances.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A live presentation by Kamal Marhubi&lt;/p&gt;
&lt;p&gt;Read more: &lt;a class="reference external" href="http://sflx.ca/mp39"&gt;http://sflx.ca/mp39&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Lording over your minions with salt</title><link href="https://pyvideo.org/montreal-python/lording-over-your-minions-with-salt.html" rel="alternate"></link><published>2013-04-08T00:00:00+00:00</published><updated>2013-04-08T00:00:00+00:00</updated><author><name>Kamal Marhubi</name></author><id>tag:pyvideo.org,2013-04-08:montreal-python/lording-over-your-minions-with-salt.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Montreal, April 8, 2013 -- Python developer Kamal Marhubi presents Salt -- a remote execution and configuration management tool written in Python. This talk is an introduction to salt, focusing on the configuration management aspects. it covers using salt with Vagrant as an alternative to Chef or Puppet. Kamal also demos using it to build up and control a machine on EC2 (network allowing).&lt;/p&gt;
&lt;p&gt;Useful links:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;salt: &lt;a class="reference external" href="http://sflx.ca/salt"&gt;http://sflx.ca/salt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kamal: &lt;a class="reference external" href="https://github.com/kamalmarhubi"&gt;https://github.com/kamalmarhubi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MP36: &lt;a class="reference external" href="http://sflx.ca/mp36"&gt;http://sflx.ca/mp36&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Montreal Python: &lt;a class="reference external" href="http://montrealpython.org"&gt;http://montrealpython.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Savoir-faire Linux: &lt;a class="reference external" href="http://www.savoirfairelinux.com"&gt;http://www.savoirfairelinux.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>250GB of RAM for 34¢/hour: EC2 spot instances</title><link href="https://pyvideo.org/pycon-ca-2013/250gb-of-ram-for-034hour-ec2-spot-instances.html" rel="alternate"></link><published>2013-08-10T00:00:00+00:00</published><updated>2013-08-10T00:00:00+00:00</updated><author><name>Kamal Marhubi</name></author><id>tag:pyvideo.org,2013-08-10:pycon-ca-2013/250gb-of-ram-for-034hour-ec2-spot-instances.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Ever needed 250GB of RAM, but just for a few minutes or hours? With
Amazon's EC2 spot instances, you can get a machine with 250GB of RAM for
as little as 34¢/hour! I'll give a recipe for getting set up with Python
+ your packages in 10 minutes, and get a remote IPython Notebook to work
with.&lt;/p&gt;
</summary><category term="lightning talks"></category></entry></feed>