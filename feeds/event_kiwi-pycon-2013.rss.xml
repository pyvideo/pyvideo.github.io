<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Tue, 17 Sep 2013 00:00:00 +0000</lastBuildDate><item><title>An introduction to Helio</title><link>https://pyvideo.org/kiwi-pycon-2013/an-introduction-to-helio.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;At Yellow, we love building web-applications that leverage the best
parts of client and server side languages, so we created the open-source
Helio. Its modular design lets us compose Python, Javascript, HTML and
CSS in harmony, allowing each to perform in the area it excels. This
talk is about Helio's creation, and how it integrates with your favorite
Python web framework(s) in your next project.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/ben-shaw-an-introduction-to-helio"&gt;https://speakerdeck.com/nzpug/ben-shaw-an-introduction-to-helio&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Shaw</dc:creator><pubDate>Tue, 17 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-17:kiwi-pycon-2013/an-introduction-to-helio.html</guid></item><item><title>Exploring Science on Twitter with IPython Notebook and Python Pandas</title><link>https://pyvideo.org/kiwi-pycon-2013/exploring-science-on-twitter-with-ipython-noteboo-.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Exploring discussions of 'science' on Twitter by analysing 13.5 million
tweets from 2011. I'll demonstrate how I've been using IPython notebook
with the Pandas data analysis library to work with large data tables and
time series data. You will see the strength of IPython Notebook for
research in allowing you to keep notes interleaved with python code.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I'm studying Science Communication and looking at how people use the
word science on Twitter as a way of understanding what they might mean
when they say 'science'. My initial dataset is 13.5 million tweets I
collected during 2011. Since the start of 2012 I've been using Python
for my data analysis.&lt;/p&gt;
&lt;p&gt;I'll demonstrate how I've been using IPython notebook [1] with the
Pandas [2] data analysis library to work with large data tables and time
series data. The IPython notebook is a great tool for research, allowing
notes about research to be kept interleaved with the python code. The
ability to quickly see results and plot them using Matplotlib [3]
encourages interactive exploration of the data.&lt;/p&gt;
&lt;p&gt;[1] &lt;a class="reference external" href="http://ipython.org/notebook.html"&gt;http://ipython.org/notebook.html&lt;/a&gt; [2] &lt;a class="reference external" href="http://pandas.pydata.org/"&gt;http://pandas.pydata.org/&lt;/a&gt; [3]
&lt;a class="reference external" href="http://matplotlib.org/"&gt;http://matplotlib.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/brenda-moon-exploring-science-on-twitter-with-ipython-notebook-and-python-pandas"&gt;https://speakerdeck.com/nzpug/brenda-moon-exploring-science-on-twitter-with-ipython-notebook-and-python-pandas&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brenda Moon</dc:creator><pubDate>Mon, 16 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-16:kiwi-pycon-2013/exploring-science-on-twitter-with-ipython-noteboo-.html</guid></item><item><title>Intro to Metaclasses</title><link>https://pyvideo.org/kiwi-pycon-2013/intro-to-metaclasses.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Metaprogramming is a valuable technique for putting complexity where it
belongs: behind a clean, friendly API. This talk goes over the basics of
metaclasses and introspection in Python, and covers how and when you
should use them to make your code more approachable.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python's Metaclasses are an &amp;quot;advanced&amp;quot; technique, but once you get
started they're surprisingly approachable.&lt;/p&gt;
&lt;p&gt;Starting with the basics, we'll:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;figure out what a metaclass does&lt;/li&gt;
&lt;li&gt;point out some existing metaclasses you might already have used&lt;/li&gt;
&lt;li&gt;see where you might use one in your own code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We'll compare use of a metaclass with some alternatives that don't use
metaclasses, to better understand why you'd want to use them.&lt;/p&gt;
&lt;p&gt;Then we'll take a look at a couple of use-cases where using a metaclass
helps us achieve a much more friendly and intuitive API than we
otherwise could.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/craig-de-stigter-intro-to-metaclasses"&gt;https://speakerdeck.com/nzpug/craig-de-stigter-intro-to-metaclasses&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Craig de Stigter</dc:creator><pubDate>Mon, 16 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-16:kiwi-pycon-2013/intro-to-metaclasses.html</guid></item><item><title>Advanced methods for creating decorators</title><link>https://pyvideo.org/kiwi-pycon-2013/advanced-methods-for-creating-decorators.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Decorators are a simple concept, yet extremely powerful. Implementing
decorators which will work in a range of contexts is however non
trivial. This talk will walk through various problems which arise with
the more common ways of implementing decorators and then describe how to
combine a wrapper and a descriptor to build a better decorator.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Experienced&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A decorator is any callable Python object that is used to modify a
function, method or class definition. A decorator is passed the original
object being defined and returns a modified object, which is then bound
to the name in the definition.&lt;/p&gt;
&lt;p&gt;One would generally expect the result of applying a decorator to an
object to be another object which is not readily distinguishable from
the original. Naive implementations of decorators do not however
preserve introspectability. This can result in callable objects having
different names, appearing to have different signatures or not returning
the original doc strings. This can cause problems for tools where you
want to derive information about the original wrapped object such as
debuggers, IDEs, documentation systems or performance monitoring
software.&lt;/p&gt;
&lt;p&gt;The use of the functools.wraps() decorator addresses some of these
issues, but relies on decorators being implemented as closures. Using a
closure to implement a decorator will not always work when wrapping
functions where the descriptor protocol needs to be triggered to bind a
function to an instance, to create an instance method, or where the
function is a special method type such as a class method or static
method.&lt;/p&gt;
&lt;p&gt;A more robust decorator, and one where the decorator is able to
distinguish when it is being applied to a normal function or instance
method, needs to be implemented as a combination of a wrapper and a
descriptor. To also be able to use this as a generic wrapper when
performing monkey patching requires even more tricks.&lt;/p&gt;
&lt;p&gt;The purpose of this talk is to walk through the various problems which
arise with the more common ways of implementing decorators. It will then
describe how to create a more robust generic wrapper/decorator which can
be used in a wider range of scenarios than typical decorators.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/graham-dumpleton-advanced-methods-for-creating-decorators"&gt;https://speakerdeck.com/nzpug/graham-dumpleton-advanced-methods-for-creating-decorators&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Dumpleton</dc:creator><pubDate>Sun, 15 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-15:kiwi-pycon-2013/advanced-methods-for-creating-decorators.html</guid></item><item><title>How to Lose Friends and Influence Burnout</title><link>https://pyvideo.org/kiwi-pycon-2013/how-to-lose-friends-and-influence-burnout.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;It's 4AM, the coffee on your desk is cold, the office is dark, and
everyone else has gone home for the day. For the 5th time today you are
coming to a dead-end while deploying your web application, and the only
thing on your mind is 'Where did it all go wrong?''&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Novice&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It's 4AM, the coffee on your desk is cold, the office is dark, and
everyone else has gone home for the day. For the 5th time today you are
coming to a dead-end while deploying your web application, and the only
thing on your mind is 'Where did it all go wrong?''.&lt;/p&gt;
&lt;p&gt;This situation is all too common, especially when you are strapped for
time due to budgets and deadlines; it is no fun for anybody. Come learn
about the huge mistakes I made as a developer, the terrible
anti-patterns I worked my way into, but most importantly,what I learnt
from while on this path to destruction.&lt;/p&gt;
&lt;p&gt;Be it choosing the right framework, picking the best tool for the job,
learning to love the 12 factor, or the pitfalls of concurrency; see what
I learnt from a stint as a solo developer in a not so ideal situation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/rhys-elsmore-how-to-lose-friends-and-influence-burnout"&gt;https://speakerdeck.com/nzpug/rhys-elsmore-how-to-lose-friends-and-influence-burnout&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rhys Elsmore</dc:creator><pubDate>Sun, 15 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-15:kiwi-pycon-2013/how-to-lose-friends-and-influence-burnout.html</guid></item><item><title>A look at NuPIC - A self-learning AI engine</title><link>https://pyvideo.org/kiwi-pycon-2013/a-look-at-nupic-a-self-learning-ai-engine.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;NuPIC is an open source platform for building prediction models from
data streams, such as sensor data. Two models will be discussed, an
earthquake damage predictor built from from GeoNet data and a flood
level warning system.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This talk will discuss the speaker's experience with NuPIC -
&lt;a class="reference external" href="http://numenta.org/nupic.html"&gt;http://numenta.org/nupic.html&lt;/a&gt; - for building useful artificial
intelligence applications. In particular, the author will discuss
developing damage and flood prediction models based on public sensor
data.&lt;/p&gt;
&lt;p&gt;About the tool&lt;/p&gt;
&lt;p&gt;NuPIC is an open source implementation of algorithms which are inspired
heavily by our understanding of how the neocortex organises information.
NuPIC uses online (or continuous) learning, providing a prediction after
every input is received. This is intended to mirror how human brains
operate, by acting quickly on new information based on prior knowledge,
while being able to adapt to it for the next bit of information. The
other main features are the inclusion of a temporal dimension to
learning, partitioning models into hierarchies of sub-models and
representing knowledge within a sparse, distributed matrix modelled
after the brain.&lt;/p&gt;
&lt;p&gt;About the talk&lt;/p&gt;
&lt;p&gt;The claims made in the documentation of NuPIC are very bold. The
developers claim that models are able to be developed without needing to
create training and testing sets. The models that are developed in this
manner are supposedly self-learning. Surely, this must be exaggeration!
This talk is a presentation of an evaluation of building models for two
sets of input data, one relating to earthquakes and the other relating
to flood levels.&lt;/p&gt;
&lt;p&gt;The anticipated case studies&lt;/p&gt;
&lt;p&gt;GeoNet provides an extensive archive of seismic data, along with
associated damage reports from people affected by particular shakes. In
principle, we could feed this historical data to NuPIC and then ask it
to tell us how likely and how intense damage will be for any particular
quake. Perhaps we could even use NuPIC to model predict the likelihood
of multiple quakes within a cluster.&lt;/p&gt;
&lt;p&gt;With information about rain levels available in near-real time from
NIWA's climate database (Cliflo) and information about river catchments
and historical from district councils, it is (in principle) possible to
create a flood risk prediction model for one's own use.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/tim-mcnamara-a-look-at-nupic-a-self-learning-ai-engine"&gt;https://speakerdeck.com/nzpug/tim-mcnamara-a-look-at-nupic-a-self-learning-ai-engine&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim McNamara</dc:creator><pubDate>Sat, 14 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-14:kiwi-pycon-2013/a-look-at-nupic-a-self-learning-ai-engine.html</guid></item><item><title>Fake it till you make it</title><link>https://pyvideo.org/kiwi-pycon-2013/fake-it-till-you-make-it.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A practical introduction to unit testing decoupled, service-oriented,
Python applications using with Mock library. A three-tiered (server,
client, and view) Flask web application is used as a motivating example
across the talk. Mock helps to isolate functionality specific to a layer
to facilitate fast, compact, unit testing while avoiding writing
specific mock classes or using fixtures.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In practise most of us have found testing to be much harder to achieve
in the &amp;quot;real world&amp;quot;. That is often because the application architecture
is modular with some level of service abstraction, and the ensuing
layers of code.&lt;/p&gt;
&lt;p&gt;The premise of this talk is: do not test someone else's code. They are a
good developer. They would have tested it so it must work.&lt;/p&gt;
&lt;p&gt;Taking this perspective allows us to develop fast and compact unit tests
for our application functionality while ignoring bigger picture
integration issues (these can be addresses using other types of tests!).
In our experience this unburdens developers so they can really practice
test-driven development much more diligently.&lt;/p&gt;
&lt;p&gt;Implementation of this approach is simplified thanks to the mock
library. Mock provides a core MagicMock class that obviates the need for
custom stubs throughout the code. Moreover, its supports patching
specific methods, properties, and more. Mocking is used to patch calls
to external code within our unit tests, since we don't need to test
them, in a non-non-invasive way to our application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/ravi-chandra-fake-it-till-you-make-it"&gt;https://speakerdeck.com/nzpug/ravi-chandra-fake-it-till-you-make-it&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ravi Chandra</dc:creator><pubDate>Sat, 14 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-14:kiwi-pycon-2013/fake-it-till-you-make-it.html</guid></item><item><title>How to build a $0 SaaS app with Pyramid &amp; GAE</title><link>https://pyvideo.org/kiwi-pycon-2013/how-to-build-a-0-saas-app-with-pyramid-gae.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Why the Pyramid web framework and Google App Engine was a perfect fit
for a $0 SaaS app for a not-for-profit. Some features of Pyramid will be
covered as well as how we run it on Google App Engine, all in the
context of the SaaS app that we developed.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Given the number of small businesses and not-for-profit organisations in
New Zealand, this talk is about sharing how I've used free software,
i.e. the Pyramid web framework [1], on top of a free hosting service,
Google App Engine. Pyramid is a 'non-opinionated' web framework and
therefore enables you to pick-and-choose what packages you'd like to use
in your software stack, making it very flexible and easy to develop your
custom application with. I'll go through some of the features of Pyramid
that we're using in our app with code examples. I'll also briefly cover
some of the other free web services we're using in our app and how these
all fit together with the Pyramid-based app.&lt;/p&gt;
&lt;p&gt;[1] &lt;a class="reference external" href="http://www.pylonsproject.org/projects/pyramid/about"&gt;http://www.pylonsproject.org/projects/pyramid/about&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/tim-knapp-how-to-build-a-0-dollars-saas-app-with-pyramid-and-gae"&gt;https://speakerdeck.com/nzpug/tim-knapp-how-to-build-a-0-dollars-saas-app-with-pyramid-and-gae&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Knapp</dc:creator><pubDate>Sat, 14 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-14:kiwi-pycon-2013/how-to-build-a-0-saas-app-with-pyramid-gae.html</guid></item><item><title>The myth of goldilocks and the three frameworks, Pyramid, Django and Plone</title><link>https://pyvideo.org/kiwi-pycon-2013/the-myth-of-goldilocks-and-the-three-frameworks.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Some people say micro-frameworks like pyramid are too small. Some people
say CMS's like Plone are too big. Some people say django is juuuust
right. They are all wrong. Come to this talk to find out the other
hammers in the world, when you might use them, where I've used them to
solve some hard problems and some of the clever ideas behind these
technologies demystified.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/dylan-jay-the-myth-of-goldilocks-and-the-three-frameworks-pyramid-django-and-plone"&gt;https://speakerdeck.com/nzpug/dylan-jay-the-myth-of-goldilocks-and-the-three-frameworks-pyramid-django-and-plone&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dylan Jay</dc:creator><pubDate>Sat, 14 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-14:kiwi-pycon-2013/the-myth-of-goldilocks-and-the-three-frameworks.html</guid></item><item><title>Integrating JavaScript with Python Web Frameworks</title><link>https://pyvideo.org/kiwi-pycon-2013/integrating-javascript-with-python-web-frameworks.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;For today's modern web applications it's inevitable that you're going to
need some client side magic to give your application the responsiveness
it needs. This talk covers some of the dos and don'ts of integrating
JavaScript with various Python web frameworks like Django.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 08 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Having spent the last year working on a big Django + AngularJS web
application, Jen has ironed out the majority of issues that you might
bump into whilst trying to work with both Python and JavaScript.&lt;/p&gt;
&lt;p&gt;She will go over some of the common pitfalls, whilst outlining best
practice. This talk will cover set up of some of the common combinations
of frameworks your might be considering using for your next big project,
and also examine how to leverage API modules like Django's Tastypie in
order to provide a RESTful API and create a good abstraction between
your server side and client side code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/jen-zajac-integrating-javascript-with-python-web-frameworks"&gt;https://speakerdeck.com/nzpug/jen-zajac-integrating-javascript-with-python-web-frameworks&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jen Zajac</dc:creator><pubDate>Fri, 13 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-13:kiwi-pycon-2013/integrating-javascript-with-python-web-frameworks.html</guid></item><item><title>OSINT, Maltego &amp; Python</title><link>https://pyvideo.org/kiwi-pycon-2013/osint-maltego-and-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This is an introduction to OSINT, the Maltego OSINT visualisation tool
and Canari a Python framework for creating custom transforms for
Maltego.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Open source intelligence&lt;/p&gt;
&lt;p&gt;What is it? Who uses it and why?&lt;/p&gt;
&lt;p&gt;OSINT Tools&lt;/p&gt;
&lt;p&gt;An overview of the commercial products and Python tools available.&lt;/p&gt;
&lt;p&gt;Maltego&lt;/p&gt;
&lt;p&gt;An overview of the capabilties of commercial yet freely available tool.
Including the ability to extend its functionality with scripting and
custom transforms.&lt;/p&gt;
&lt;p&gt;Canari&lt;/p&gt;
&lt;p&gt;An introduction to the Python powered framework for creating and
managing transforms for Maltego.&lt;/p&gt;
&lt;p&gt;Example and Experience&lt;/p&gt;
&lt;p&gt;My experiences in writing a custom transform written in Python using the
Canari framework.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/chris-esther-osint-maltego-and-python"&gt;https://speakerdeck.com/nzpug/chris-esther-osint-maltego-and-python&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Esther</dc:creator><pubDate>Fri, 13 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-13:kiwi-pycon-2013/osint-maltego-and-python.html</guid></item><item><title>Python in Home Automation</title><link>https://pyvideo.org/kiwi-pycon-2013/python-in-home-automation.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Using Python to build a Home Automation system by connecting various
bits of (open) hardware with protocols such as MQTT, or XMPP. Creating
web-based interfaces for HA systems.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Protocols: brief introduction to MQTT and XMPP protocols. Introduction
to related Python tools/libraries.&lt;/p&gt;
&lt;p&gt;Hardware: using hardware such Arduino, or Beaglebone as components for a
DIY home automation systems.&lt;/p&gt;
&lt;p&gt;Low-level: serial communication, MQTT communication, XMPP communication
using Python.&lt;/p&gt;
&lt;p&gt;High-level: web-based interface(s) for a Home Automation system made in
Python.&lt;/p&gt;
&lt;p&gt;Connecting the dots: general overview of how Python can be used in Home
Automation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/marek-kuziel-python-in-home-automation"&gt;https://speakerdeck.com/nzpug/marek-kuziel-python-in-home-automation&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marek Kuziel</dc:creator><pubDate>Fri, 13 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-13:kiwi-pycon-2013/python-in-home-automation.html</guid></item><item><title>The Cylc Suite Engine</title><link>https://pyvideo.org/kiwi-pycon-2013/the-cylc-suite-engine.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Cylc Suite Engine schedules complex distributed suites of cycling
tasks. Developed for weather forecasting applications at NIWA, cylc has
since been adopted by the UK Met Office and others, and was a finalist
in the 2012 NZ Open Source Awards. Lead developer Hilary Oliver will
talk about cylc and the many advantages that the Python programming
language brought to the project.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Cylc Suite Engine is a metascheduler or workflow engine that makes
it relatively easy to construct, monitor, and control large complex
distributed suites of interdependent cycling tasks. Cylc was developed,
entirely in Python, to automate modern environmental forecasting systems
in an HPC environment at NIWA in New Zealand. Since its release as an
Open Source project on GitHub in 2011 cylc has been adopted by the UK
Met Office to control their large and varied forecasting systems; it is
also used by groups at the Marine Meteorology Division of the Naval
Research Laboratory in the US, the Max Planck Institute for Meteorology
in Germany, and others; and it was a finalist in the 2012 NZ Open Source
Awards. Lead developer Hilary Oliver will give an overview of what cylc
does and how it works, and the particular advantages gained by our
decision to use the Python programming language.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/hilary-james-oliver-the-cylc-suite-engine"&gt;https://speakerdeck.com/nzpug/hilary-james-oliver-the-cylc-suite-engine&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hilary James Oliver</dc:creator><pubDate>Fri, 13 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-13:kiwi-pycon-2013/the-cylc-suite-engine.html</guid></item><item><title>Using Cython for distributed-multiprocess steganographic md5sum-collision generation...</title><link>https://pyvideo.org/kiwi-pycon-2013/using-cython-for-distributed-multiprocess-stegano-.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Cython is a dialect of Python that compiles to native C. In this talk
I'll give a general overview of Cython, how it works, and uses it can be
put to, both useful and, perhaps, somewhat whimsical.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cython is brilliant, it looks like Python but compiles to native C. It
can be used as a simple way of writing lightning-fast C extensions for
Python, or for a simple means of hooking into already-existing C
libraries. If you are writing CPU intensive applications, like, say,
hypothetically, cracking one-way cryptographic functions, Cython is a
perfect mixture of simple expressiveness while making sure the 'inner
loop' of your code is running as close to the bare metal as possible.&lt;/p&gt;
&lt;p&gt;And that's all this talk will be about, honest.&lt;/p&gt;
&lt;p&gt;Why are you looking at me like that?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/tom-eastman-using-cython-for-distributed-multiprocess-steganographic-md5sum-collision-generation-for-dot-dot-dot-reasons"&gt;https://speakerdeck.com/nzpug/tom-eastman-using-cython-for-distributed-multiprocess-steganographic-md5sum-collision-generation-for-dot-dot-dot-reasons&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Eastman</dc:creator><pubDate>Fri, 13 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-13:kiwi-pycon-2013/using-cython-for-distributed-multiprocess-stegano-.html</guid></item><item><title>Computational Advertising, Billions of records, and AWS - Lessons Learned</title><link>https://pyvideo.org/kiwi-pycon-2013/computational-advertising-billions-of-records-a.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Lessons learned while setting up a computational advertising platform on
AWS with emphasis on experimental data analysis and scaling.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Experienced&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Overview - hope this will be useful, but caveat emptor - not a how-to,
that's well covered elsewhere - problem - recovering value from large
web logs - user targeting&lt;/p&gt;
&lt;p&gt;Is this Big Data? - When should you think about Hadoop - AWS servers
available with 244 GB of memory - Twitter WTF paper, Microsoft cluster
utilisation paper&lt;/p&gt;
&lt;p&gt;Logging, Storing, and Munging - Looked at EMR but (1) it's hard to log
(2) versioning issues. - For on-demand use CM is good - For automated
use, combination of CDH, whirr, and boto. - backing up HBase and HDFS to
S3&lt;/p&gt;
&lt;p&gt;Processing the data - hadoop as solving distributed IO - Pig + udfs -
hadoop streaming&lt;/p&gt;
&lt;p&gt;Learning on the data - difficult data - latest machine learning
algorithms, not just existing mapreduce algorithms (mahout) - frameworks
are starting to appear - Graphlab, or the Berkeley Spark ecosystem. -
want to experiment on smaller data to reduce iteration time.&lt;/p&gt;
&lt;p&gt;Prototype Learning Algorithm - loading text files into numpy arrays when
memory constrained - JIT python compilation - scikit-learn - logistic
regression - spectral clustering and the FEAST algorithm - nearest
neighbors (output to gephi) - read/write binary formats&lt;/p&gt;
&lt;p&gt;Implementation at scale - shoehorn into map-reduce - Port successful
algorithms to GraphLab, C++ and MPI or Boost Graph Library etc. - MIT
Starcluster .. - Numba, Blaze, Theano, KDT - Anaconda&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alan Williams</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/computational-advertising-billions-of-records-a.html</guid></item><item><title>Concurrent Programming using multiprocessing</title><link>https://pyvideo.org/kiwi-pycon-2013/concurrent-programming-using-multiprocessing.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;How to use python's built in multiprocessing module to speed up the
processing of large amounts of data.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Will take a brief tour of Python's built in multiprocessing module and
how it can be used to solve real life programming problems. Will present
a demo on how to speed up processing of large amounts of data using
multiprocessing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/medhat-gayed-concurrent-programming-using-multiprocessing"&gt;https://speakerdeck.com/nzpug/medhat-gayed-concurrent-programming-using-multiprocessing&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Medhat Gayed</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/concurrent-programming-using-multiprocessing.html</guid></item><item><title>Dissecting memory mysteries of Python</title><link>https://pyvideo.org/kiwi-pycon-2013/dissecting-memory-mysteries-of-python-0.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Memory leak has been perennial problem for Python applications. This
causes application to behave erroneously with Memory error and very slow
operation. What is wrong with the application? How to find out the cause
and fix it? This is the motivation for this talk.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python is a dynamically typed language. Applications leave task of
object memory management to Python VM. Python automatically manages
memory using reference counting and garbage collection. But, Python
memory manager may bloat the VM size, and sometimes it may consume
complete main memory. It causes applications to deliver low performance
and encounter unexpected memory errors.&lt;/p&gt;
&lt;p&gt;This talk dissects the internals of CPython memory manager, its
limitations and negative impact on application behavior. We demonstrate
the problem of memory leaks by learning Python heap pattern, object
graphs and memory profiling. Next, we suggest solutions to reduce memory
footprints of applications, tools to diagnose and fix memory leaks and
lesson learned as best development practices.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/vishal-kanaujia-dissecting-memory-mysteries-of-python"&gt;https://speakerdeck.com/nzpug/vishal-kanaujia-dissecting-memory-mysteries-of-python&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chetan Giridhar</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/dissecting-memory-mysteries-of-python-0.html</guid></item><item><title>Encouraging new programmers - the Open Tech School model</title><link>https://pyvideo.org/kiwi-pycon-2013/encouraging-new-programmers-the-open-tech-schoo.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;As programmers we should encourage new people to take up our craft.
Coding skills can benefit a lot of people who aren't inclined to call
themselves programmers. In this talk I'll explain why I think this is
important, introduce the free volunteer organisation Open Tech School,
and describe some of the things we've found that work and why we've
embraced Python for our beginner workshops.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Python community may be one of the most welcoming programming
communities, but even the experience of learning Python can be daunting
for an outsider.&lt;/p&gt;
&lt;p&gt;Open Tech School (OTS) - &lt;a class="reference external" href="http://www.opentechschool.org/"&gt;http://www.opentechschool.org/&lt;/a&gt; - is one of many
organisations aiming to introduce people to programming. Our motto: &amp;quot;We
organize tech workshops. Hands-on, awesome, and free.&amp;quot; All content is
published online under open licenses, and OTS workshops are run by
volunteers at no cost to participants.&lt;/p&gt;
&lt;p&gt;Just like arithmetic skills are useful for people with no interest in
becoming professional accountants, coding skills can be useful for
people with no interest in becoming professional programmers. Many
people are faced with menial computer-based tasks in their daily lives.
Most could be greatly eased with the help of some programming. Not to
mention that programming can be fun!&lt;/p&gt;
&lt;p&gt;In this talk I'll explain why I think introducing outsiders to
programming skills is important, and why I think every professional
programmer has a reason to benefit from this. I'll also go into some of
the details of how OTS workshops function, and the reasons I think most
OTS beginner workshops use Python. Finally I'll show how you could go
about starting OTS in your local community.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/angus-gratton-encouraging-new-programmers-the-open-tech-school-model"&gt;https://speakerdeck.com/nzpug/angus-gratton-encouraging-new-programmers-the-open-tech-school-model&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Angus Gratton</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/encouraging-new-programmers-the-open-tech-schoo.html</guid></item><item><title>From nothing to daily use - How Python changed my work life</title><link>https://pyvideo.org/kiwi-pycon-2013/from-nothing-to-daily-use-how-python-changed-my.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;What happens when you take a Digital Preservation Analyst, an
introduction to Python, and 18 months of learning? The answer is... a
glut of tool building, problem solving and all round reliance on Python
as a primary resource.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Novice&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I will share my experiences of writing small python tools to help me to
solve the daily challenges of my job. I'm a very novice Python coder,
and have only really been using&lt;/p&gt;
&lt;p&gt;The range of tools I've used/built include:-&lt;/p&gt;
&lt;p&gt;file format conversion, db building/analysing, XML wrangling, text data
wrangling, object administration (inc. cleaning and audit), webscraping
and basic workflow automation...&lt;/p&gt;
&lt;p&gt;I will share some (terribly coded) examples of how I solve analysis
challenges, share some limitations I have found being a solo novice
coder on the edge of a professional IT environment, and ask for your
guidance in how to maintain the same rate of learning in the coding
space.&lt;/p&gt;
&lt;p&gt;Title will change to be something more pithy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/jay-gattuso-from-nothing-to-daily-use-how-python-changed-my-work-life"&gt;https://speakerdeck.com/nzpug/jay-gattuso-from-nothing-to-daily-use-how-python-changed-my-work-life&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jay Gattuso</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/from-nothing-to-daily-use-how-python-changed-my.html</guid></item><item><title>Hacking the OWI robotic arm bot</title><link>https://pyvideo.org/kiwi-pycon-2013/hacking-the-owi-robotic-arm-bot.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Demonstrating the OWI robotic arm running automated with a Raspberry Pi
and some python code.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Novice&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After buying my son an OWI robotic arm,we decided to see if we could do
more with it than use the remote controller. We quickly found you can
buy a USB interface, however it only came with windows drivers. After
some googling we found we could control this with python scripts which
led to even more fun!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/liz-quilty-hacking-the-owi-robotic-arm-bot"&gt;https://speakerdeck.com/nzpug/liz-quilty-hacking-the-owi-robotic-arm-bot&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Liz Quilty</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/hacking-the-owi-robotic-arm-bot.html</guid></item><item><title>Lightning Talks @ Kiwi PyCon 2013</title><link>https://pyvideo.org/kiwi-pycon-2013/lightning-talks-at-kiwi-pycon-2013.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Lightning talks at Kiwi PyCon 2013.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 1&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Dylan Jay - Sweet Robot Suite - 0:27&lt;/li&gt;
&lt;li&gt;Thomi Richards - Secret Dunedin Cool Things - 5:05&lt;/li&gt;
&lt;li&gt;Clinton Roy - PyCon AU 2014/15 - 9:09&lt;/li&gt;
&lt;li&gt;Jürgen Brendel - Read-Optimise your Source Code - 11:30&lt;/li&gt;
&lt;li&gt;Anita Kean - Family Tree for the Family - 16:20&lt;/li&gt;
&lt;li&gt;James Mitchell - Motif, iCal, Sockets &amp;amp; Python - 23:15&lt;/li&gt;
&lt;li&gt;Aurynn Shaw - Why I Ruby or Please tell me I'm wrong - 26:57&lt;/li&gt;
&lt;li&gt;Peter Harrison - Shard Secret Sharing - 31:05&lt;/li&gt;
&lt;li&gt;Jonathan Harker - Digital Object Repositories - 35:08&lt;/li&gt;
&lt;li&gt;John Graves - Why most open source projects have only &lt;em&gt;one&lt;/em&gt;
developer - 38:45&lt;/li&gt;
&lt;li&gt;William McKee - Scalping Data ... JSON Processing (TradeMe, LastFM,
Wordpress) - 43:33&lt;/li&gt;
&lt;li&gt;Larry Hastings - Go with the Grain or the Pickle - 45:44&lt;/li&gt;
&lt;li&gt;Tom Leys - How Gridspy uses Twisted and Django to deliver Real-Time
- 49:45&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/lightning-talks-at-kiwi-pycon-2013.html</guid><category>lightning talks</category></item><item><title>Out on a LIM - Automatic Map Generator</title><link>https://pyvideo.org/kiwi-pycon-2013/out-on-a-lim-automatic-map-generator.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Local councils produce a number of maps for each Land Information
Memoranda (LIM), which can be a time-consuming process. A lightweight
python application was built to interact with an ArcGIS map to automate
this mapping process, giving consistent high quality outputs. The
application was built to be used by non-technical staff with no python
or mapping experience.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Novice&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;One important service provided by local councils is the production of
LIMs (Land Information Memoranda), which collate information and
consents pertaining to a specific property. An essential part of the
process is the creation of a series of maps showing the interactions
between the property in question and the other layers of spatial
information.&lt;/p&gt;
&lt;p&gt;These maps can be produced manually, on a case-by-case basis, but this
is a time-consuming process and leads to discrepancies in map output
formats between different properties. We built an application that takes
user inputs such as the property address, and automatically creates the
appropriate series of maps for that property. This approach offers
considerable advantages in speed and consistency of outputs in
comparison to a more manual method.&lt;/p&gt;
&lt;p&gt;The application is built using only the Python modules that ship with
ArcGIS 10.1, enabling the program to be run without having to install
extra software on client computers. It references a static map document
that holds all the spatial and attribute information. The program is
operated via a simple tkinter graphical interface, making it easy to use
for non-technical staff without knowledge of either Python or of ArcGIS.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/natalie-scott-out-on-a-lim-automatic-map-generator"&gt;https://speakerdeck.com/nzpug/natalie-scott-out-on-a-lim-automatic-map-generator&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Natalie Scott</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/out-on-a-lim-automatic-map-generator.html</guid></item><item><title>Polyominoes - An Exploration in Problem Solving with Python</title><link>https://pyvideo.org/kiwi-pycon-2013/polyominoes-an-exploration-in-problem-solving-w.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A &amp;quot;Polyomino&amp;quot; is a geometric figure of adjacent squares. But just how
many &amp;quot;n&amp;quot; polyominos are there? Solving this question is one of our
favourite interview questions and the techniques that can employed to
solve it are instructive for a range of problems. In this talk, we
discuss the potential solutions and offer prizes for the best solutions
submitted by the end of the conference.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A &amp;quot;Polyomino&amp;quot; is a geometric figure of adjacent squares. But just how
many &amp;quot;n&amp;quot; polyominos are there?&lt;/p&gt;
&lt;p&gt;This question has been one of our favourite interview questions. It's a
deceptively simple problem with opportunities for innovative solutions
and disastrous missteps. In this talk, we'll discuss the benefits of a
number of approaches, demonstrate a few common pitfalls and challenge
the audience to provide their own solutions, with prizes on offer at the
end of the conference.&lt;/p&gt;
&lt;p&gt;This is a talk for everyone: beginners will be introduced to a problem
that can be solved using primitives, experts will see opportunities to
deploy advanced optimizations.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/hamish-campbell-polyominoes-an-exploration-in-problem-solving-with-python"&gt;https://speakerdeck.com/nzpug/hamish-campbell-polyominoes-an-exploration-in-problem-solving-with-python&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hamish Campbell</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/polyominoes-an-exploration-in-problem-solving-w.html</guid></item><item><title>Publishing Theology with Python</title><link>https://pyvideo.org/kiwi-pycon-2013/publishing-theology-with-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;How to use python tools to represent and publish a large corpus of
theological literature.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python tools are used for publishing a large corpus of theological
literature. Python is used to help convert the existing literature from
its original, poorly styled, MS Word format to docutils source format.
Solutions are presented to various domain-specific problems, including
making the documents bible-version independent. The paver tool is used
to manage the conversion process from docutils to the various output
formats. Some rejected alternative publishing technologies are covered,
as well as a future road map.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/carl-cerecke-publishing-theology-with-python"&gt;https://speakerdeck.com/nzpug/carl-cerecke-publishing-theology-with-python&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carl Cerecke</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/publishing-theology-with-python.html</guid></item><item><title>Python and Creative Data Analysis</title><link>https://pyvideo.org/kiwi-pycon-2013/python-and-creative-data-analysis.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python + SQL/CSV + matplotlib + HTML make it possible to create flexible
and sophisticated analyses. If you want to express something about your
data, there is probably a way of doing it using these tools. This talk
will be about some lessons learned.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Novice&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python + SQL/CSV + matplotlib + HTML make it possible to create flexible
and sophisticated analyses of data from your spreadsheet or database. If
you want to express something about your data, there is probably a way
of doing it using these tools. The presentation will include both
general principles and specific technical tips (who knew named tuples
would be so useful!). Bring questions and enthusiasm. Data analysis
should be fun.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/grant-paton-simpson-python-and-creative-data-analysis"&gt;https://speakerdeck.com/nzpug/grant-paton-simpson-python-and-creative-data-analysis&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Grant Paton-Simpson</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/python-and-creative-data-analysis.html</guid></item><item><title>Rapid development of Unified Real-time communication for Websites</title><link>https://pyvideo.org/kiwi-pycon-2013/rapid-development-of-unified-real-time-communicat.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Development of real time communication channels like instant chat or
media calls has been difficult. Integrating it in a scalable and
responsive way for websites has been a bigger concern. This talk
describes how instant chat or media calls can be developed in a rapid
way with Python modules and demonstrates the concept with a working
prototype.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Online shopping or retail industry of the world is worth trillions of
dollars. Forrester research estimates that US online industry alone will
be worth $279 Billion by 2015!&lt;/p&gt;
&lt;p&gt;Given the scenario, website customers have an ever-growing need of
communicating with customer service representatives in real time with a
live chat or media call. Businesses not only view it as an opportunity
to act quickly and be flexible in delivering specific product
information to customers but also to prevent or recover from service
failures &amp;amp; convert leads to sales!&lt;/p&gt;
&lt;p&gt;Though critical, development teams have found it difficult to develop,
maintain and integrate instant chat or call in their websites.
Scalability and responsiveness of these applications have been a measure
cause of anxiety. Unavailability or shortage of ready-to-use frameworks
has contributed to longer development cycles and made the task seam
out-of-reach. As a result, integration of real time communication in
websites is often considered 'good-to-have' and doesn't get the due
importance.&lt;/p&gt;
&lt;p&gt;This talk discusses first hand experiences of development &amp;amp; integration
of real-time communication applications in websites. Audiences would get
an opportunity to appreciate the concept with the help of a working
prototype. The talk also suggests Python modules foe getting the task
done in a rapid &amp;amp; customized way.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/chetan-giridhar-rapid-development-of-unified-real-time-communication-for-websites"&gt;https://speakerdeck.com/nzpug/chetan-giridhar-rapid-development-of-unified-real-time-communication-for-websites&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chetan Giridhar</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/rapid-development-of-unified-real-time-communicat.html</guid></item><item><title>State of the Pythons (Keynote)</title><link>https://pyvideo.org/kiwi-pycon-2013/state-of-the-pythons-keynote.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Keynote&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Keynote&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/michael-foord-state-of-the-pythons-keynote"&gt;https://speakerdeck.com/nzpug/michael-foord-state-of-the-pythons-keynote&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Foord</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/state-of-the-pythons-keynote.html</guid></item><item><title>Testing and OpenStack</title><link>https://pyvideo.org/kiwi-pycon-2013/testing-and-openstack.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;OpenStack's infra team coordinates running ~500 test runs a day, across
over 20 projects, most of which involve bringing up a test cloud... find
out how to reuse this infrastructure yourself, in your own cloud or
public clouds.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Something about OpenStack - sorry it's brief, I will flesh it out more
tomorrow, wanted to meet your deadline... and I'm happy to change the
talk to meet your interests - I'm still relatively new in the OpenStack
community, but driving a fascinating operations project (which isn't
really PyCon material, sadly) - but which gets me in contact with most
of the 'stackers projects. : More tomorrow ;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/robert-collins-testing-and-openstack"&gt;https://speakerdeck.com/nzpug/robert-collins-testing-and-openstack&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Collins</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/testing-and-openstack.html</guid></item><item><title>Testing for Graceful Failure with Vaurien and Marteau</title><link>https://pyvideo.org/kiwi-pycon-2013/testing-for-graceful-failure-with-vaurien-and-mar-.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk shows how the Mozilla Services team test failure scenarios in
their web services with two python-based tools: Marteau, a web-based UI
for easily running load tests, and Vaurien, a misbehaving TCP proxy that
can simulate various backend failures. Used together, these tools help
ensure a service will not only scale up to meet demand, but will fail
gracefully if it reaches breaking point.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So you've built an awesome webapp, put it through its paces, and assured
yourself that it does what it's supposed to do. Great! Now how does it
behave when things start to go wrong?&lt;/p&gt;
&lt;p&gt;This talk will demonstrate how the Mozilla Services team tests for
failure scenarios in our web services, focusing on two key python-based
tools: Marteau, a web-based frontend for easily running load-tests and
analyzing the results, and Vaurien, a misbehaving TCP proxy that can
simulate a variety of backend failure modes.&lt;/p&gt;
&lt;p&gt;Used together, these tools can help ensure that a web service will not
only scale up to meet its expected demand, but will fail gracefully when
it finally reaches breaking point.&lt;/p&gt;
&lt;p&gt;The talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Real-life examples of bugs that only show up when your app is under
load; bugs that can turn a brief partial outage into a cascading
whole-system failure.&lt;/li&gt;
&lt;li&gt;The basics of writing a load-testing suite for your app.&lt;/li&gt;
&lt;li&gt;How to set up Marteau for easy on-demand load testing.&lt;/li&gt;
&lt;li&gt;How to use Vaurien to simulate various kinds of backend failure, such
as an overloaded database, misconfigured DNS, or a
suddenly-disappearing job queue.&lt;/li&gt;
&lt;li&gt;Some tips for systematically applying these tools to your own setup.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/ryan-kelly-testing-for-graceful-failure-with-vaurien-and-marteau"&gt;https://speakerdeck.com/nzpug/ryan-kelly-testing-for-graceful-failure-with-vaurien-and-marteau&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan Kelly</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/testing-for-graceful-failure-with-vaurien-and-mar-.html</guid></item><item><title>The Future of Python - A Choose Your Own Adventure (Keynote)</title><link>https://pyvideo.org/kiwi-pycon-2013/the-future-of-python-a-choose-your-own-adventur.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Keynote&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Sunday, 08 Sep 2013 - Keynote&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/jessica-mckellar-the-future-of-python-a-choose-your-own-adventure-keynote"&gt;https://speakerdeck.com/nzpug/jessica-mckellar-the-future-of-python-a-choose-your-own-adventure-keynote&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica McKellar</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/the-future-of-python-a-choose-your-own-adventur.html</guid></item><item><title>Using Autopilot for Functional UI Testing</title><link>https://pyvideo.org/kiwi-pycon-2013/using-autopilot-for-functional-ui-testing.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Autopilot is a tool designed for writing high-level functional tests for
GUI applications. It is written by a team of engineers at Canonical, and
is being used to test everything from the Unity desktop shell to desktop
applications, to core phone applications for the Ubuntu Touch project.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Novice&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What autopilot is, how it's made, and how it works.&lt;/li&gt;
&lt;li&gt;How we use it at Canonical, and what benefits we've seen from using
it.&lt;/li&gt;
&lt;li&gt;How you can use it to test your own applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/thomi-richards-using-autopilot-for-functional-ui-testing"&gt;https://speakerdeck.com/nzpug/thomi-richards-using-autopilot-for-functional-ui-testing&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomi Richards</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/using-autopilot-for-functional-ui-testing.html</guid></item></channel></rss>