<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_liang-bo-wang.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-08-24T00:00:00+00:00</updated><entry><title>Handy Parallel (Distributed) Computing in Python</title><link href="https://pyvideo.org/pycon-apac-2014/handy-parallel-distributed-computing-in-python.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Liang Bo Wang</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/handy-parallel-distributed-computing-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all start our programming with single process in mind. But
parallelization from scratch is a real headache. Things get worse when
it comes to writing a spaghetti code in both short time and high
performance, which is often the case doing data analysis.&lt;/p&gt;
&lt;p&gt;In fact, cases like computation under different conditions, programs can
be easily parallelized (distributed) with a few modifications using
existed library like multiprocessing, IPython Parallel, and Celery.&lt;/p&gt;
&lt;p&gt;This talk makes you not afraid of parallel or distributed computing and
provides ways for different level of parallelization from single
machine, cluster, to cluster with task queue. I will only talk about the
basic scenario, which should be easier for newbies to try on and
understand how powerful these tools can be.&lt;/p&gt;
&lt;p&gt;A machine learning example will be given in the end to compare
performance and possible issues with different implementations.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;呆呆電雞生，喜歡寫 R / Python，喜歡統計與生物資訊。目前為 Taiwan R Users
Group 工作人員及 Taipei.py 常客。&lt;/p&gt;
&lt;p&gt;Bioinfo / Stat / R / Python, master student of NTU BEBI. Co-organizer of
Taiwan R Users Group and freq attendee of Taipei.py.&lt;/p&gt;
</summary></entry><entry><title>Statistics in Python with R</title><link href="https://pyvideo.org/pycon-apac-2014/statistics-in-python-with-r-pycon-apac-2014.html" rel="alternate"></link><published>2014-06-24T00:00:00+00:00</published><updated>2014-06-24T00:00:00+00:00</updated><author><name>Liang Bo Wang</name></author><id>tag:pyvideo.org,2014-06-24:pycon-apac-2014/statistics-in-python-with-r-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Statistics is essential to data analysis, and many people choose R
because of its great package diversity. With the advent of pandas,
Python becomes one of the hottest language to do data analysis, and it
will be more helpful if we can do statistics in Python as well.&lt;/p&gt;
&lt;p&gt;In this talk, I will first introduce how to do statistics in Python
using statsmodel and some related functions implemented in Numpy and
Scipy.&lt;/p&gt;
&lt;p&gt;Then I will introduces the communication from Python to R using rpy2,
and give you advices or alternatives about when to use this approach or
not.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;呆呆電雞生，喜歡寫 R / Python，喜歡統計與生物資訊。目前為 Taiwan R Users
Group 工作人員及 Taipei.py 常客。 Bioinfo / Stat / R / Python, master
student of NTU BEBI. Co-organizer of Taiwan R Users Group and freq
attendee of Taipei.py.&lt;/p&gt;
</summary></entry><entry><title>R0 DAY3-01 Python HDF5 Use Case - Liang Bo Wang (PyCon APAC 2015)</title><link href="https://pyvideo.org/pycon-apac-2015/r0-day3-01-python-hdf5-use-case-liang-bo-wang-apac.html" rel="alternate"></link><published>2015-08-24T00:00:00+00:00</published><updated>2015-08-24T00:00:00+00:00</updated><author><name>Liang Bo Wang</name></author><id>tag:pyvideo.org,2015-08-24:pycon-apac-2015/r0-day3-01-python-hdf5-use-case-liang-bo-wang-apac.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Liang Bo Wang&lt;/p&gt;
&lt;p&gt;HDF5 是一個用來存取數據的函式庫，Matlab 的儲存格式 (.mat) 即基於該格式設計。相較於多數人熟悉的 Database，HDF5 的功能更為單純，它只負責做好讀取、 儲存資料而並不提供 Query、Join 等操作，但也因此在 I/O 表現上更為出色。常見的應用為 sensor、實驗數據記錄與傳輸、大矩陣的操作等。HDF5 在 Python 的接口實作主要有 PyTables 及 h5py，兩者針對不同的使用情境有不同的設計。&lt;/p&gt;
&lt;p&gt;在本 talk 中，會先介紹 HDF5 格式與特色，在 Python 中如何用 PyTables、h5py 存取 與異同，以及與主流資料庫、pickle 物件串流化的比較。最後示範 HDF5 如何有效的完成 以下幾個情境中的問題：存取 pandas DataFrame 物件、在大型矩陣進行區域計算、追蹤 Deep Learning 學習記錄。&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;A master student active in Taipei Python and R meetups. His research topic focuses on network analysis of cancer genetics. After his intern in MSRA, he's currently working on digital histopathology analysis using convolutional neural network (CNN).&lt;/p&gt;
&lt;p&gt;個人網頁連結 &lt;a class="reference external" href="http://liang2.tw/"&gt;http://liang2.tw/&lt;/a&gt;
Twitter &amp;#64;ccwang002
組織/公司 Bioinfo &amp;amp; Biostat Core Lab, NTU CGM
頭銜 Student&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tw.pycon.org/2015apac/zh/program/24"&gt;https://tw.pycon.org/2015apac/zh/program/24&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>