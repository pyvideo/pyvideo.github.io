<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Fritz Lekschas</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_fritz-lekschas.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-07-10T00:00:00+00:00</updated><subtitle></subtitle><entry><title>To a Billion and Beyond: How to Visually Explore, Compare and Share Large Quantitative. Datasets with HiGlass</title><link href="https://pyvideo.org/scipy-2019/to-a-billion-and-beyond-how-to-visually-explore-compare-and-share-large-quantitative-datasets-with-higlass.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Nezar Abdennur</name></author><id>tag:pyvideo.org,2019-07-11:/scipy-2019/to-a-billion-and-beyond-how-to-visually-explore-compare-and-share-large-quantitative-datasets-with-higlass.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Features and patterns in large quantitative datasets are difficult to explore, compare, and communicate. We present the HiGlass application and library for interactive visualization and comparison of multiple multiscale datasets. Using a tile based API, we demonstrate how data can be dynamically rendered on the client irrespective of its …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Features and patterns in large quantitative datasets are difficult to explore, compare, and communicate. We present the HiGlass application and library for interactive visualization and comparison of multiple multiscale datasets. Using a tile based API, we demonstrate how data can be dynamically rendered on the client irrespective of its size on the server. For comparison between datasets we demonstrate multiple interactively selectable modes for synchronized panning, zooming and value scaling. Finally, to share interactive views into the data, we store and disseminate the visualization as a combination of data location, aesthetics and synchronizations.&lt;/p&gt;
</content><category term="SciPy 2019"></category></entry><entry><title>Interactive Exploration of Large-Scale Datasets with Jupyter-Scatter | SciPy 2023</title><link href="https://pyvideo.org/scipy-2023/interactive-exploration-of-large-scale-datasets-with-jupyter-scatter-scipy-2023.html" rel="alternate"></link><published>2023-07-10T00:00:00+00:00</published><updated>2023-07-10T00:00:00+00:00</updated><author><name>Fritz Lekschas</name></author><id>tag:pyvideo.org,2023-07-10:/scipy-2023/interactive-exploration-of-large-scale-datasets-with-jupyter-scatter-scipy-2023.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter-scatter is a scalable, interactive, and interlinked scatter plot widget for exploring datasets with up to several million data points. It focuses on data-driven visual encodings and offers two-way pan+zoom and lasso interactions. Beyond a single instance, jupyter-scatter can compose multiple scatter plots and synchronize their views and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter-scatter is a scalable, interactive, and interlinked scatter plot widget for exploring datasets with up to several million data points. It focuses on data-driven visual encodings and offers two-way pan+zoom and lasso interactions. Beyond a single instance, jupyter-scatter can compose multiple scatter plots and synchronize their views and selections. Moreover, points can be connected by spline-interpolated lines. Thanks to the underlying WebGL rendering engine, spatial and color changes are smoothly transitioned. Finally, the API integrates seamlessly with Pandas DataFrames and offers functional methods that group properties by type to ease accessibility and readability.&lt;/p&gt;
</content><category term="SciPy 2023"></category></entry></feed>