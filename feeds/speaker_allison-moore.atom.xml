<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_allison-moore.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-05-22T00:00:00+00:00</updated><entry><title>So You Need to Document an API?</title><link href="https://pyvideo.org/write-the-docs-2016/so-you-need-to-document-an-api.html" rel="alternate"></link><published>2016-05-22T00:00:00+00:00</published><updated>2016-05-22T00:00:00+00:00</updated><author><name>Allison Moore</name></author><id>tag:pyvideo.org,2016-05-22:write-the-docs-2016/so-you-need-to-document-an-api.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Allison Moore
&lt;a class="reference external" href="http://lanyrd.com/2016/writethedocs/sfbzrx/"&gt;http://lanyrd.com/2016/writethedocs/sfbzrx/&lt;/a&gt;
Documenting an API can be an intimidating process: How should you organize the documentation? How should you present the endpoint reference? What sorts of conceptual information are developers be looking for? Where to start?
This talk provides the answers to these questions! We’ll go through organizational strategies for API docs and discuss ways to handle the reference, tutorial, and conceptual material you might need to produce. Throughout, we’ll focus on thinking about what the end users need and building the docs to support those goals. We’ll also look at modern tools that can make your API documentation useful, usable, and snazzy-looking, and talk about strategies for documenting APIs when you’re stuck with a publishing tool that might not be ideal for the task (Madcap Flare, for example).&lt;/p&gt;
</summary></entry></feed>