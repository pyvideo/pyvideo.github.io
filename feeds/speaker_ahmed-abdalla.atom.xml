<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ahmed-abdalla.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-06T00:00:00+00:00</updated><entry><title>Creating a Bittorrent Client using Asyncio</title><link href="https://pyvideo.org/pygotham-2017/creating-a-bittorrent-client-using-asyncio.html" rel="alternate"></link><published>2017-10-06T00:00:00+00:00</published><updated>2017-10-06T00:00:00+00:00</updated><author><name>Ahmed Abdalla</name></author><id>tag:pyvideo.org,2017-10-06:pygotham-2017/creating-a-bittorrent-client-using-asyncio.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The purpose of this talk is explain the BitTorrent protocol and relevant Asyncio API used to create a BitTorrent client that can actually download a &amp;quot;.torrent&amp;quot; file. The BitTorrent application will be built and presented as a set of steps (code snippets, i.e. coroutines) that implement various parts of the protocol and build up a final program that can download a file. Talk will cover,&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Parsing a .torrent file&lt;/li&gt;
&lt;li&gt;Connecting to a tracker&lt;/li&gt;
&lt;li&gt;Establishing concurrent peer network connections using Asyncio&lt;/li&gt;
&lt;li&gt;Torrent download strategy&lt;/li&gt;
&lt;li&gt;Relevant Asyncio/event loop concepts where necessary&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Attendees need not know Asyncio and will learn the relevant functions needed to accomplish the task. No prior knowledge of the BitTorrent protocol is necessary either.&lt;/p&gt;
</summary></entry></feed>