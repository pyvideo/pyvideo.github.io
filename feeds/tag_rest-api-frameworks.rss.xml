<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 05 May 2019 00:00:00 +0000</lastBuildDate><item><title>Using OpenAPI (and Python) to standardize a Country's API Ecosystem</title><link>https://pyvideo.org/pycon-italia-2019/using-openapi-and-python-to-standardize-a-countrys-api-ecosystem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Creating an &lt;a class="reference external" href="https://teamdigitale.governo.it/en/projects/api.htm"&gt;API
Ecosystem&lt;/a&gt; is
one of the goal of the &lt;a class="reference external" href="https://teamdigitale.governo.it/en/"&gt;Italian Government Digital Transformation
Team&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This talk shows how OpenAPI (formerly known as Swagger) is a cornerstone
for standardizing the behavior of the APIs created by thousands of
Public Administrations.&lt;/p&gt;
&lt;p&gt;After a brief introduction to OpenAPI, we’ll show the current work on
documenting service management semantics (eg. circuit breaker) and
standardizing API elements and schemas.&lt;/p&gt;
&lt;p&gt;Code samples are based on
&lt;tt class="docutils literal"&gt;`connexion&lt;/tt&gt; &amp;lt;&lt;a class="reference external" href="https://connexion.readthedocs.io/en/latest/quickstart.html#running-%20it"&gt;https://connexion.readthedocs.io/en/latest/quickstart.html#running-%20it&lt;/a&gt;&amp;gt;`__:
a python framework based on flask which makes trivial creating REST APIs
and sandboxes useful for testing and interoperability.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1681"&gt;https://python.it/feedback-1681&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 10:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Roberto Polli</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-italia-2019/using-openapi-and-python-to-standardize-a-countrys-api-ecosystem.html</guid><category>web</category><category>REST API Frameworks</category><category>openapi</category></item><item><title>Django Rest Framework - Tips&amp;Tricks</title><link>https://pyvideo.org/pycon-italia-2017/django-rest-framework-tipstricks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Developing Web APIs for Django websites have never been so easy.
Starting from a real world use case, I’ll explain why DRF became our
weapon of choice to develop in a fast and easy way all the APIs we need
at Cloud Academy.&lt;/p&gt;
&lt;p&gt;We’ll start talking about the main benefits that DRF brings to Django
projects, then we’ll use our real world use case to describe the best
practices we use to build fast, secure and maintainable APIs diving into
DRF main features and functionalities.&lt;/p&gt;
&lt;p&gt;The scope of this talk is to explain in a very practical way how DRF can
be integrated into Django projects to build beautiful web APIs. We’ll
use a lot of code examples and performance benchmarks to describe the
various features explored during the talk. No prior experience on DRF is
required but at least some basic knowledge of Django is suggested for
attendees.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luca Zacchetti</dc:creator><pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-08:pycon-italia-2017/django-rest-framework-tipstricks.html</guid><category>django-rest-framework</category><category>REST API Frameworks</category><category>API Design</category><category>REST</category><category>django</category><category>optimization</category><category>performance</category></item></channel></rss>