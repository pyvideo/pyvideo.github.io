<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 22 Aug 2011 00:00:00 +0000</lastBuildDate><item><title>Healthcare process management in Python: a use case</title><link>https://pyvideo.org/europython-2011/healthcare-process-management-in-python-a-use-ca.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Federico Caboni - 24 June 2011 in &amp;quot;Track Tagliatelle &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I'll describe our successful experience in introducing
Python into a system for blood collection tube labeling in laboratory
and hospital environments, based on IHE Technical Frameworks –the
industry standard for modeling and streamlining healthcare processes–
and designed to avoid human errors and ensure process traceability.&lt;/p&gt;
&lt;p&gt;During the talk I will explain why we chose Python in the first place,
how we've been able to leverage the language's features and
characteristics for our specific field and what problems and limitations
we faced.&lt;/p&gt;
&lt;p&gt;I will show specific instances of Python usage in different parts of the
project, including a low-level driver for laboratory automation
machinery, an asynchronous messaging module, the implementation of
IHE-compliant actors and the inevitable end-user web application,
implemented with Django.&lt;/p&gt;
&lt;p&gt;Using Python greatly helped us in building our system, allowing very
rapid prototyping cycles for both hardware and software, but during the
talk I'll also point out what we found was missing, and what would be
nice to have to ensure Python has its proper place as a viable platform
for designing streamlined healthcare workflows based on established
international standards.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Federico Caboni</dc:creator><pubDate>Sun, 24 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-24:europython-2011/healthcare-process-management-in-python-a-use-ca.html</guid><category>asynchronous</category><category>prototyping</category><category>web</category></item><item><title>PyConAU 2010: Introducing Python to a Java shop</title><link>https://pyvideo.org/pycon-au-2010/pyconau-2010--introducing-python-to-a-java-shop.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducing Python to a Java shop&lt;/p&gt;
&lt;p&gt;Presented by Juergen Brendel (MuleSoft)&lt;/p&gt;
&lt;p&gt;There is a time and place for everything: For some applications Python
is perfect, for others a language like Java and its entire ecosystem is
more ideal. In this talk we see how Python was introduced to a Java shop
as a vehicle for rapid and dynamic prototyping of a new project. The
talk then explains how Jython/Java integration was used to translate
this project step by step from Python to Java. Going beyond the advocacy
focus, the talk then shows the interfaces to call Java from Python and
vice versa and illustrates those with examples. Furthermore, unit
testing of Java classes via test cases written in Python is also touched
upon.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juergen Brendel</dc:creator><pubDate>Sat, 26 Jun 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--introducing-python-to-a-java-shop.html</guid><category>advocacy</category><category>jython</category><category>prototyping</category><category>pyconau</category><category>pyconau2010</category></item><item><title>Weather field warping using Python</title><link>https://pyvideo.org/pycon-au-2011/weather-field-warping-using-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python is a great language for prototyping computer vision algorithms,
the availability of libraries such as Numpy and Scipy make for rapid
development similar to that of Matlab, R and IDL. At the Bureau of
Meteorology (BoM) we are solving the interesting problem of weather
field warping. Warping (aka non-linear image registration) is used, for
example, to determine what the predicted temperature will be hourly if
we only have predictions every three hours&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan Faggian</dc:creator><pubDate>Mon, 22 Aug 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-08-22:pycon-au-2011/weather-field-warping-using-python.html</guid><category>numpy</category><category>prototyping</category></item></channel></rss>