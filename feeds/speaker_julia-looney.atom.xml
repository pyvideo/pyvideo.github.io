<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_julia-looney.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-21T00:00:00+00:00</updated><entry><title>Getting started with Django's Authentication System</title><link href="https://pyvideo.org/pycon-ireland-2017/getting-started-with-djangos-authentication-system.html" rel="alternate"></link><published>2017-10-21T00:00:00+00:00</published><updated>2017-10-21T00:00:00+00:00</updated><author><name>Julia Looney</name></author><id>tag:pyvideo.org,2017-10-21:pycon-ireland-2017/getting-started-with-djangos-authentication-system.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django’s authentication system is great out of the box, and very useful when we want to manage users logging into our web apps. But, since it’s all set up for us automatically when we create our new Django project, sometimes it can be a little mysterious.&lt;/p&gt;
&lt;p&gt;I’ll clear up some of its mysteries by going over each aspect of authentication in Django and give tips on how to better utilize it for web applications. The authentication package has three main aspects: Users, Groups, and Permissions, along with some authentication middleware to tie it all together.&lt;/p&gt;
&lt;p&gt;First I’ll cover Django’s User model, which is the core of the authentication package. I’ll explain how it interacts with the web app, and I’ll even give a few tips on how it can be customized.&lt;/p&gt;
&lt;p&gt;Then I’ll talk about Groups, and how they interact with the User model. I’ll give some tips on how to manage users in web apps based on groups to get the most out of them.&lt;/p&gt;
&lt;p&gt;Then I’ll cover permissions, which relate to how users can interact with the web app. I’ll go over some examples for how to use the default permissions, how to set up custom permissions, and how this is particularly used in the Django admin panel.&lt;/p&gt;
&lt;p&gt;Finally, I’ll talk about Django’s authentication middleware, and how users are authenticated throughout the app. I’ll cover examples for how users get sent through requests, and how to handle logic surrounding authentication in Django’s views and templates.&lt;/p&gt;
</summary></entry></feed>