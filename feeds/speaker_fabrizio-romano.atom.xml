<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_fabrizio-romano.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-08-02T00:00:00+00:00</updated><entry><title>TDD is not about tests!</title><link href="https://pyvideo.org/europython-2015/tdd-is-not-about-tests.html" rel="alternate"></link><published>2015-08-02T00:00:00+00:00</published><updated>2015-08-02T00:00:00+00:00</updated><author><name>Fabrizio Romano</name></author><id>tag:pyvideo.org,2015-08-02:europython-2015/tdd-is-not-about-tests.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fabrizio Romano - TDD is not about tests!
[EuroPython 2015]
[21 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;TDD is not about tests!
Well, actually, it’s not a about writing tests, or writing them before
the code. This talk will show you how to use tests to really drive
development by transforming business requirements into tests, and
allowing your code to come as their natural consequence.&lt;/p&gt;
&lt;p&gt;Too often this key aspect is neglected and the result is that tests
and code are somehow “disconnected”. The code is not as short and
efficient as it could be, and the tests are not as effective.
Refactoring is not always easy, and over time all sorts of issues
start to come out of the surface.&lt;/p&gt;
&lt;p&gt;However, we will show that when TDD is done properly, tests and code
merge beautifully into an organic whole that fulfills the business
requirements, and provides all sorts of advantages: your code is
minimal, easy to amend and extend, readable, clean. Your tests will be
effective, short and focused, and allow for light-hearted refactoring
and excellent coverage.&lt;/p&gt;
&lt;p&gt;We will provide enough information and examples to spark the curiosity
of the novice, and satisfy the need of a deeper insight for the
intermediate, and help you immediately benefit from this
transformative technique that is still often underestimated and
misunderstood.&lt;/p&gt;
&lt;p&gt;Slides: [&lt;a class="reference external" href="http://slides.com/gianchub/ep2015-tdd#/][1"&gt;http://slides.com/gianchub/ep2015-tdd#/][1&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;[1]: &lt;a class="reference external" href="http://slides.com/gianchub/ep2015-tdd#/"&gt;http://slides.com/gianchub/ep2015-tdd#/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Python Driven Company</title><link href="https://pyvideo.org/europython-2014/python-driven-company.html" rel="alternate"></link><published>2014-07-25T00:00:00+00:00</published><updated>2014-07-25T00:00:00+00:00</updated><author><name>Fabrizio Romano</name></author><id>tag:pyvideo.org,2014-07-25:europython-2014/python-driven-company.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Adopting Python across a company brings extra agility and productivity
not provided by traditional mainstream tools like Excel. This is the
story of programmers teaching non-programmers, from different
departments, to embrace Python in their daily work.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;By introducing ipython notebook, pandas and the other data analysis
packages that make python even more accessible and attractive, we
attempted to adapt python as a core technology across our whole company.
We’ve challenged the dominant position of Microsoft Excel and similar
tools, and dared to replace it by pandas-powered ipython notebooks.&lt;/p&gt;
&lt;p&gt;During this transitional phase, we have been inspired and sometimes
forced to develop multiple packages that extend pandas, numpy etc., in
order to enable our colleagues, in other departments, to access all the
data they need. Moreover, we are developing several high level
functionalities for the notebook environment.&lt;/p&gt;
&lt;p&gt;The notebook environment is allowing us to be extremely responsive to
the changes our users are asking for, since, for part of the work, we
don’t have to go through the whole traditional development process.&lt;/p&gt;
&lt;p&gt;The talk focuses on challenges and problems we’ve solved and managed in
order to achieve our long term goal of creating highly agile,
data-driven non-tech teams, free from the constraints imposed by
mainstream technologies, and all of this thanks to python.&lt;/p&gt;
</summary></entry></feed>