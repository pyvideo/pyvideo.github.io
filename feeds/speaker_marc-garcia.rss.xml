<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 06 Nov 2019 00:00:00 +0000</lastBuildDate><item><title>A better PyData ecosystem, one commit at a time</title><link>https://pyvideo.org/pydata-cordoba-2019/a-better-pydata-ecosystem-one-commit-at-a-time.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We are in 2019 and the PyData ecosystem seems extremely healthy. Python is growing in popularity and the PyData ecosystem is increasingly becoming the de-facto standard for many areas of data science, replacing expensive proprietary software like Matlab, SAS or SPSS.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garcia</dc:creator><pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-09-27:pydata-cordoba-2019/a-better-pydata-ecosystem-one-commit-at-a-time.html</guid></item><item><title>Introducción a pandas (español)</title><link>https://pyvideo.org/pydata-cordoba-2019/introduccion-a-pandas-espanol.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garcia</dc:creator><pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-09-27:pydata-cordoba-2019/introduccion-a-pandas-espanol.html</guid><category>pandas</category></item><item><title>Introduction to pandas</title><link>https://pyvideo.org/pydata-new-york-city-2019/introduction-to-pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is a hands on introduction to pandas. pandas is a fast, powerful, flexible and easy to use data analysis and manipulation tool, built on top of the Python programming language.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garcia</dc:creator><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/introduction-to-pandas.html</guid><category>tutorial</category></item><item><title>The pandas of the future</title><link>https://pyvideo.org/scipy-latin-america-2019/the-pandas-of-the-future.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since the start of the project 10 years ago, pandas has grown in popularity, to become almost a standard for data wrangling and analysis in Python. While pandas has served well the needs of many of its users, several new projects have been started in the last years to respond to needs that pandas is not able to address. For example, Dask provides a pandas-like API to distribute jobs over a cluster. Vaex provides a pandas-like API to perform out-of-core computation. cuDF is reimplementing a pandas-like dataframe for GPUs. Koalas implements a pandas-like API for Apache Spark. And there are even more projects like Modin or static-frame. At the same time, pandas itself has been trying to address new needs from the users, like adding the ability to use third-party data types (besides the original numeric and datetime ones from NumPy). For example CyberPandas extends pandas with an efficient IP address type. And GeoPandas does the same with geolocations. Other work has been done to break parts of pandas, so it can be better extended, and used to solve new problems. For example, pandas 0.25 decoupled all plotting code in pandas, to allow the use of third-party plotting libraries. This allows for example to generate the same plots pandas is able to generate, but interactive, using Bokeh, HoloViews, Altair or others. The future of pandas and its ecosystem is uncertain. In this talk I'll give an insider point of view on what can be broken in pandas, so many projects are being implemented to address the same needs. How pandas can be broken even more, to cover more user needs. What are the current and planned developments, and what users can expect from pandas in the future.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc García</dc:creator><pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-10:scipy-latin-america-2019/the-pandas-of-the-future.html</guid></item><item><title>Breaking pandas</title><link>https://pyvideo.org/pylondinium-2019/breaking-pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pandas is more than 10 years old now. In this time, it became almost a standard for building data pipelines and perform data analysis in Python. As the popularity of the project grows, it also grows the number of projects that depend or interact with pandas.&lt;/p&gt;
&lt;p&gt;This talk will cover this ecosystem of projects around pandas, mainly in the prespective of scalability and performance. Discussing for example how projects like Arrow are key for the future of pandas, or how Dask is overcoming pandas limitations.&lt;/p&gt;
&lt;p&gt;In a first part, the talk will focus on pandas itself, its components, and its architecture. This will give the required context for a second part, that will explain related projects, how they interact with pandas, and what the whole ecosystem can offer to users.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garcia</dc:creator><pubDate>Sun, 16 Jun 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-06-16:pylondinium-2019/breaking-pandas.html</guid></item><item><title>Pandas ecosystem 2019</title><link>https://pyvideo.org/pycon-italia-2019/pandas-ecosystem-2019.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pandas is more than 10 years old now. In this time, it became almost a
standard for building data pipelines and perform data analysis in
Python. As the popularity of the project grows, it also grows the number
of projects that depend or interact with pandas.&lt;/p&gt;
&lt;p&gt;This talk will cover this ecosystem of projects around pandas, mainly in
the prespective of scalability and performance. Discussing for example
how projects like Arrow are key for the future of pandas, or how Dask is
overcoming pandas limitations.&lt;/p&gt;
&lt;p&gt;In a first part, the talk will focus on pandas itself, its components,
and its architecture. This will give the required context for a second
part, that will explain related projects, how they interact with pandas,
and what the whole ecosystem can offer to users.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1613"&gt;https://python.it/feedback-1613&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garcia</dc:creator><pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-03:pycon-italia-2019/pandas-ecosystem-2019.html</guid><category>pydata</category><category>analytics</category><category>data-analysis</category><category>Data Mining</category><category>data</category><category>pandas</category></item><item><title>Demystifying pandas internals</title><link>https://pyvideo.org/pydata-london-2018/demystifying-pandas-internals.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pandas high-level API makes it easy for newcomers to do data wrangling
and analysis, without having to know much about data structures or low
level computing. But this initial easiness of use can become a problem
when performing complex operations, or when facing performance problems
when dealing with large volumes of data. In this talk, the essentials of
data structures and pandas will be covered&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garcia</dc:creator><pubDate>Sat, 28 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-28:pydata-london-2018/demystifying-pandas-internals.html</guid><category>pandas</category></item><item><title>A Gentle Introduction to Data Science</title><link>https://pyvideo.org/europython-2017/a-gentle-introduction-to-data-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This introductory talk, will cover the basics of datascience. From
the incluence of artificial intelligence, and the quest to replicate
a human mind, to a practical demo on how to build a hello world
machine learning in Python.&lt;/p&gt;
&lt;p&gt;The talk will try to answer questions such as: What do we understand
by data science? What do we know about the human mind, that can be an
inspiration for our programs? Which problems can we solve with data
science? What tools are available to do data science in Python?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garcia</dc:creator><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-12:europython-2017/a-gentle-introduction-to-data-science.html</guid></item><item><title>CART: Not only Classification and Regression Trees</title><link>https://pyvideo.org/pydata-amsterdam-2016/cart-not-only-classification-and-regression-trees.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Amsterdam 2016&lt;/p&gt;
&lt;p&gt;Description&lt;/p&gt;
&lt;p&gt;Decision trees are very simple methods compared to Support Vector Machines, or Deep Learning. But they have some interesting properties that make them unique. For classification, for regression, or to extract probabilities, decision trees are easy to set up, and debug. And they are excellent to get a better understanding of your data.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;This talk will cover Decision Trees, from theory, to their implementation in Python.&lt;/p&gt;
&lt;p&gt;The talk will have a very practical approach, using examples and real cases to illustrate how to use decision trees, what we can expect from using them, and what kind of problems we will need to address.&lt;/p&gt;
&lt;p&gt;The main topics covered will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What are decision trees?&lt;/li&gt;
&lt;li&gt;How decision trees are trained?&lt;/li&gt;
&lt;li&gt;Data preprocessing for decision trees&lt;/li&gt;
&lt;li&gt;Understanding your data better with decision tree visualization&lt;/li&gt;
&lt;li&gt;Debugging decision trees using common sense and prior domain knowledge&lt;/li&gt;
&lt;li&gt;Avoiding overfitting, without cross-validation&lt;/li&gt;
&lt;li&gt;Python implementation&lt;/li&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garcia</dc:creator><pubDate>Sat, 26 Mar 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-03-26:pydata-amsterdam-2016/cart-not-only-classification-and-regression-trees.html</guid></item><item><title>Understanding Random Forests</title><link>https://pyvideo.org/pydata-madrid-2016/understanding-random-forests.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Madrid 2016&lt;/p&gt;
&lt;p&gt;Most of the talks and workshop tutorials can be found here: &lt;a class="reference external" href="https://github.com/PyDataMadrid2016/Conference-Info"&gt;https://github.com/PyDataMadrid2016/Conference-Info&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No machine learning algorithm dominates in every domain, but random forests are usually tough to beat by much. And they have some advantages compared to other models. No much input preparation needed, implicit feature selection, fast to train, and ability to visualize the model. While it is easy to get started with random forests, a good understanding of the model is key to get the most of them.&lt;/p&gt;
&lt;p&gt;This talk will cover decision trees from theory, to their implementation in scikit-learn. An overview of ensemble methods and bagging will follow, to end up explaining and implementing random forests and see how they compare to other state-of-the-art models.&lt;/p&gt;
&lt;p&gt;The talk will have a very practical approach, using examples and real cases to illustrate how to use both decision trees and random forests.&lt;/p&gt;
&lt;p&gt;We will see how the simplicity of decision trees, is a key advantage compared to other methods. Unlike black-box methods, or methods tough to represent in multivariate cases, decision trees can easily be visualized, analyzed, and debugged, until we see that our model is behaving as expected. This exercise can increase our understanding of the data and the problem, while making our model perform in the best possible way.&lt;/p&gt;
&lt;p&gt;Random Forests can randomize and ensemble decision trees to increase its predictive power, while keeping most of their properties.&lt;/p&gt;
&lt;p&gt;The main topics covered will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What are decision trees?&lt;/li&gt;
&lt;li&gt;How decision trees are trained?&lt;/li&gt;
&lt;li&gt;Understanding and debugging decision trees&lt;/li&gt;
&lt;li&gt;Ensemble methods&lt;/li&gt;
&lt;li&gt;Bagging&lt;/li&gt;
&lt;li&gt;Random Forests&lt;/li&gt;
&lt;li&gt;When decision trees and random forests should be used?&lt;/li&gt;
&lt;li&gt;Python implementation with scikit-learn&lt;/li&gt;
&lt;li&gt;Analysis of performance&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc García</dc:creator><pubDate>Thu, 28 Apr 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-04-28:pydata-madrid-2016/understanding-random-forests.html</guid></item><item><title>Google Summer of Code Overview Panel</title><link>https://pyvideo.org/djangocon-us-2009/google-summer-of-code-overview-panel.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Google Summer of Code Overview Panel&lt;/p&gt;
&lt;p&gt;Featuring Zain Memon, Alex Gaynor, Honza Kral, Marc Garcia&lt;/p&gt;
&lt;p&gt;Moderated question and answer about GSOC and Django.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zain Memon</dc:creator><pubDate>Thu, 10 Sep 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-09-10:djangocon-us-2009/google-summer-of-code-overview-panel.html</guid><category>djangocon</category><category>djangocon2009</category><category>gsoc</category></item><item><title>Remote execution of Python scripts using Viri</title><link>https://pyvideo.org/europython-2011/remote-execution-of-python-scripts-using-viri.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Marc Garcia - 21 June 2011 in &amp;quot;Track Tagliatelle&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Viri is a system for automatic distribution and execution of Python code
on remote machines. This is especially useful when dealing with a large
group of hosts.&lt;/p&gt;
&lt;p&gt;With Viri, Sysadmins can write their own scripts, and easily distribute
and execute them on any number of remote machines. Depending on the
number of computers to administrate, Viri can save thousands of hours,
that Sysadmins would spend transferring files, logging into remote
hosts, and waiting for the scripts to finish. Viri automates the whole
process.&lt;/p&gt;
&lt;p&gt;Viri can also be useful for remotely managing host settings. It should
work together with an application where the information about hosts
would be maintained. This information can include cron tasks, firewall
rules, backup settings,etc. After a simple Integration of this
application with your Viri infrastructure, you can change any settings
in the application, and see how it gets applied on the target host
automatically.&lt;/p&gt;
&lt;p&gt;The talk will cover next topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to Viri&lt;/li&gt;
&lt;li&gt;Live demo on how to install Viri, write a Viri task, and execute it
in a remote host&lt;/li&gt;
&lt;li&gt;Security concerns using Viri&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check &lt;a class="reference external" href="http://www.viriproject.com"&gt;Viri project page&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garcia</dc:creator><pubDate>Mon, 18 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-18:europython-2011/remote-execution-of-python-scripts-using-viri.html</guid><category>backup</category><category>logging</category><category>scripts</category></item></channel></rss>