<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_giancarlo-fanelli.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-06-09T00:00:00+00:00</updated><entry><title>Managing Docker with Python</title><link href="https://pyvideo.org/pycon-italia-2015/managing-docker-with-python.html" rel="alternate"></link><published>2015-06-09T00:00:00+00:00</published><updated>2015-06-09T00:00:00+00:00</updated><author><name>Giancarlo Fanelli</name></author><id>tag:pyvideo.org,2015-06-09:pycon-italia-2015/managing-docker-with-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk gives an overview about the Python modules that allow you to
interact with Docker.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Looking at the most successful open source projects we have been
seriously impressed by the importance of Docker: it is positively
revolutionizing the DevOps industry. Docker is a valid alternative to
the traditional virtual machines and it is redefining the IT service
deployment.&lt;/p&gt;
&lt;p&gt;Thanks to the available Docker APIs, we have witnessed a remarkable
proliferation of tools based on the same APIs to efficiently manage
virtual infrastructures: a place of honor, among of all of these, is
reserved to the libraries and tools written in Python.&lt;/p&gt;
&lt;p&gt;This talk is divided into two parts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The first part provides an introduction to Docker by illustrating a
typical use case: a network of micro-services aimed to manage a web
application.&lt;/li&gt;
&lt;li&gt;The second part goes into detail on how to write Python code which
will be able to orchestrate Docker images and containers.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry></feed>