<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_rest.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-05T00:00:00+00:00</updated><entry><title>Decoupling Django with Django REST (and a sprinkle of React)</title><link href="https://pyvideo.org/pycon-italia-2019/decoupling-django-with-django-rest-and-a-sprinkle-of-react.html" rel="alternate"></link><published>2019-05-05T00:00:00+00:00</published><updated>2019-05-05T00:00:00+00:00</updated><author><name>Valentino Gagliardi</name></author><id>tag:pyvideo.org,2019-05-05:pycon-italia-2019/decoupling-django-with-django-rest-and-a-sprinkle-of-react.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="section" id="abstract"&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;p&gt;With the rise of JavaScript as the lingua-franca of the web and the
steady growth of libraries like React, today’s web developers can build
rich and well structured frontend experiences. Pair that with Django and
Django REST framework and you get the perfect combination. But it’s not
all bells and whistles. What challenges are we going to face when
decoupling Django with Django REST? What are the best practices? How to
structure such a project? In this talk I’ll guide Django developers
(both beginners and intermediate) from 0 to structuring a decoupled
Django project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="description"&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;p&gt;The goal of this talk is to give Django developers an overview of a
Django REST project, paired with React, as well as the tradeoffs of the
decoupled approach. By the end of the talk the developer should be able
to configure a new Django REST project and use a frontend library for
interacting with the API.&lt;/p&gt;
&lt;div class="section" id="why-and-when-to-decouple-django"&gt;
&lt;h5&gt;1. Why and when to decouple Django&lt;/h5&gt;
&lt;p&gt;There are many ways for decoupling a Django application and each one
depends on the use case. In this section we’ll outline what decoupling
is, why decoupling is a great approach and why sometimes it is not the
right thing to do. We’ll see what the challenges of such approach are
and how to deal with authentication in a decoupled context.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="django-rest-fundamentals"&gt;
&lt;h5&gt;2. Django REST fundamentals&lt;/h5&gt;
&lt;p&gt;Django REST framework is a Django application for exposing API endpoints
from a Django project. It this section we’ll see the building blocks of
a Django API app: the model, the serializer and the view. Models should
not be a surprise for the audience, they come from Django. Serializers
instead are provided by Django REST. We’ll also see how a Django REST
view looks like and how to leverage both function based views and
generic views within the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="setting-up-the-frontend"&gt;
&lt;h5&gt;3. Setting up the frontend&lt;/h5&gt;
&lt;p&gt;The key for a truly decoupled experience is a frontend for consuming and
interacting with the API. In this section we’ll see how to structure a
Django REST project alongside with React. We will explore two
approaches: fully decoupled frontend and mixed frontend.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-note-on-testing-and-closing-words"&gt;
&lt;h5&gt;4. A note on testing and closing words&lt;/h5&gt;
&lt;p&gt;In the context of a decoupled Django site we move from the typical
Django tests to testing the API’s response instead. We will see how a
simple API test looks like. And for the JavaScript frontend we’ll take a
look at the current available tooling for functional testing.&lt;/p&gt;
&lt;p&gt;Questions?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1735"&gt;https://python.it/feedback-1735&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 10:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="javascript"></category><category term="django-rest-framework"></category><category term="REST"></category><category term="django"></category></entry><entry><title>Bringing Spatial Love to your Python Application</title><link href="https://pyvideo.org/europython-2013/bringing-spatial-love-to-your-python-application.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Steven Citron-Pousty</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/bringing-spatial-love-to-your-python-application.html</id><summary type="html"></summary><category term="flask"></category><category term="mongodb"></category><category term="geospatial"></category><category term="REST"></category></entry><entry><title>Marconi: Queuing and Notification service for OpenStack</title><link href="https://pyvideo.org/europython-2013/marconi-queuing-and-notification-service-for-openstack.html" rel="alternate"></link><published>2013-07-02T00:00:00+00:00</published><updated>2013-07-02T00:00:00+00:00</updated><author><name>Flavio Percoco</name></author><id>tag:pyvideo.org,2013-07-02:europython-2013/marconi-queuing-and-notification-service-for-openstack.html</id><summary type="html"></summary><category term="MessageQueues"></category><category term="WSGI"></category><category term="mongodb"></category><category term="REST"></category><category term="tdd"></category><category term="application-design"></category><category term="architecture"></category><category term="cloud"></category></entry><entry><title>Uno sguardo agli internal di RestFS</title><link href="https://pyvideo.org/europython-2013/uno-sguardo-agli-internal-di-restfs.html" rel="alternate"></link><published>2013-07-02T00:00:00+00:00</published><updated>2013-07-02T00:00:00+00:00</updated><author><name>Fabrizio Manfredi</name></author><id>tag:pyvideo.org,2013-07-02:europython-2013/uno-sguardo-agli-internal-di-restfs.html</id><summary type="html"></summary><category term="clustering"></category><category term="HTTP"></category><category term="parallelization"></category><category term="distributed"></category><category term="twisted"></category><category term="REST"></category><category term="optimization"></category><category term="Algorithms"></category><category term="scalability"></category><category term="async"></category><category term="hpc"></category><category term="performance"></category></entry><entry><title>Google loves Python 2.0</title><link href="https://pyvideo.org/pycon-italia-2018/google-loves-python-20.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Simone Dalla</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/google-loves-python-20.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il talk vuole illustrare gli strumenti e le Api Python che Google mette
a disposizione liberamente agli sviluppatori per interagire con alcune
delle sue applicazioni più diffuse come Google Calendar, Google Docs,
Google Drive, Google Gmail. Verrà illustrato quindi l’uso delle Google
API Client Libraries e verranno mostrati esempi pratici per creare e
popolare un Foglio di Google, creare appuntamenti su un Google Calendar,
fare l’upload di un file su Google Drive ed analizzare la propria
casella Gmail. Per seguire il talk è sufficiente una discreta conoscenza
del linguaggio Python.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 17:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="api"></category><category term="google"></category><category term="integration"></category><category term="REST"></category></entry><entry><title>GraphQL in Python</title><link href="https://pyvideo.org/pycon-italia-2018/graphql-in-python.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Patrick Guido Arminio</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/graphql-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In questo talk si parlerà di GraphQL, un “data query language” creato da
Facebook come alternativa al famoso REST. Verrano elencate la varie
differenze e i vantaggi/svantaggi rispetto ad una tradizionale API REST.&lt;/p&gt;
&lt;p&gt;Verrà inoltre mostrato come utilizzare GraphQL con Python con un piccolo
approfondimento su come utilizzarlo con Django. In caso ci sia
abbastanza tempo, verrano elencate anche alcune informazioni avanzate,
come Authentication, Caching, Security e Realtime.&lt;/p&gt;
&lt;p&gt;Takeaway: l’obiettivo del talk è di dare una prima occhiata a GraphQL,
dando alcuni input su perché usarlo e sopratutto come iniziare ad usarlo
in Python con e senza Django.&lt;/p&gt;
&lt;p&gt;Audience: il talk è rivolto a sviluppatori web con un po’ di esperienza
di API web.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 14:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="flask"></category><category term="web"></category><category term="graphql"></category><category term="REST"></category><category term="django"></category></entry><entry><title>API REST o Começo - Introdução a REST para iniciantes</title><link href="https://pyvideo.org/flask-conf-2018/api-rest-o-comeco-introducao-a-rest-para-iniciantes.html" rel="alternate"></link><published>2018-08-25T00:00:00+00:00</published><updated>2018-08-25T00:00:00+00:00</updated><author><name>Talita Rossari</name></author><id>tag:pyvideo.org,2018-08-25:flask-conf-2018/api-rest-o-comeco-introducao-a-rest-para-iniciantes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;API REST o Começo - Introdução a REST para iniciantes - Palestra de Talita Rossari na Flask Conf 2018.&lt;/p&gt;
</summary><category term="api"></category><category term="rest"></category></entry><entry><title>Pythonおじさんのweb2py挑戦記</title><link href="https://pyvideo.org/pycon-japan-2012/pythonozisannoweb2pytiao-zhan-ji.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>中村 良幸</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/pythonozisannoweb2pytiao-zhan-ji.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;45歳の自称・Pythonおじさんによる、業務用Webシステム開発におけるweb2py挑戦記です。web2pyの特徴および利点と欠点についての説明を行う他、REST APIやSOAPによる外部システム連携についてもその概略を説明します。&lt;/p&gt;
</summary><category term="web2py"></category><category term="rest"></category><category term="soap"></category></entry><entry><title>Desenvolvendo APIs REST com Python 3 e Asyncio</title><link href="https://pyvideo.org/caipyra-2016/desenvolvendo-apis-rest-com-python-3-e-asyncio.html" rel="alternate"></link><published>2016-06-26T00:00:00+00:00</published><updated>2016-06-26T00:00:00+00:00</updated><author><name>Renato Garcia</name></author><id>tag:pyvideo.org,2016-06-26:caipyra-2016/desenvolvendo-apis-rest-com-python-3-e-asyncio.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Palestra do Renato Garcia no Caipyra 2016:&lt;/p&gt;
&lt;p&gt;Desenvolvendo APIs REST com Python 3 e Asyncio&lt;/p&gt;
</summary><category term="api"></category><category term="apis"></category><category term="rest"></category><category term="rest api"></category><category term="asyncio"></category><category term="async"></category></entry><entry><title>Indicizzare e cercare tonnellate di dati con ElasticSearch e Django</title><link href="https://pyvideo.org/pycon-italia-2017/indicizzare-e-cercare-tonnellate-di-dati-con-elasticsearch-e-django.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Ernesto Arbitrio</name></author><id>tag:pyvideo.org,2017-04-09:pycon-italia-2017/indicizzare-e-cercare-tonnellate-di-dati-con-elasticsearch-e-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cercare in maniera efficente e veloce in grandi quantità di dati risulta
essere, almeno nel mio campo e nelle mie esperienze, un problema
abbastanza diffuso. In questo talk sarà affrontato da un punto di vista
tecnico/sistemistico la parte di indicizzazione di grandi volumi di
dati, le accortenze da avere quando si indicizzano dati in un engine di
search e anlaytics e la parte di monitoring del cluster ELK. Nella
seconda parte invece verrà mostrata l’interazione di una web interface
(Django based) con elasticsearch. Conoscenze necessarie per il talk:
concetti base di serializzazione, restful web services, django&lt;/p&gt;
</summary><category term="elasticsearch"></category><category term="json"></category><category term="Full Text Search"></category><category term="REST"></category><category term="django"></category></entry><entry><title>Django Rest Framework - Tips&amp;Tricks</title><link href="https://pyvideo.org/pycon-italia-2017/django-rest-framework-tipstricks.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Luca Zacchetti</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/django-rest-framework-tipstricks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Developing Web APIs for Django websites have never been so easy.
Starting from a real world use case, I’ll explain why DRF became our
weapon of choice to develop in a fast and easy way all the APIs we need
at Cloud Academy.&lt;/p&gt;
&lt;p&gt;We’ll start talking about the main benefits that DRF brings to Django
projects, then we’ll use our real world use case to describe the best
practices we use to build fast, secure and maintainable APIs diving into
DRF main features and functionalities.&lt;/p&gt;
&lt;p&gt;The scope of this talk is to explain in a very practical way how DRF can
be integrated into Django projects to build beautiful web APIs. We’ll
use a lot of code examples and performance benchmarks to describe the
various features explored during the talk. No prior experience on DRF is
required but at least some basic knowledge of Django is suggested for
attendees.&lt;/p&gt;
</summary><category term="django-rest-framework"></category><category term="REST API Frameworks"></category><category term="API Design"></category><category term="REST"></category><category term="django"></category><category term="optimization"></category><category term="performance"></category></entry><entry><title>Getting started with requests HTTP library</title><link href="https://pyvideo.org/pycon-italia-2017/getting-started-with-requests-http-library.html" rel="alternate"></link><published>2017-04-07T00:00:00+00:00</published><updated>2017-04-07T00:00:00+00:00</updated><author><name>Andrea Grandi</name></author><id>tag:pyvideo.org,2017-04-07:pycon-italia-2017/getting-started-with-requests-http-library.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;requests is one of the most advanced and simple to use HTTP libraries.&lt;/p&gt;
&lt;p&gt;The presentations is going to show how to get started with it, how to
consume REST APIs and last but not least how to properly mock and test
our code.&lt;/p&gt;
</summary><category term="requests"></category><category term="api"></category><category term="networking"></category><category term="REST"></category></entry><entry><title>RESTful Service Design: Patterns and Anti-Patterns</title><link href="https://pyvideo.org/pygotham-2016/restful-service-design-patterns-and-anti-patterns.html" rel="alternate"></link><published>2016-07-17T00:00:00+00:00</published><updated>2016-07-17T00:00:00+00:00</updated><author><name>Jeff Revesz</name></author><id>tag:pyvideo.org,2016-07-17:pygotham-2016/restful-service-design-patterns-and-anti-patterns.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Drawing on more than a decade of combined experience in RESTful service design, your speakers will discuss many of the key architectural questions that every API developer needs to answer. The goal of this talk is to move quickly beyond the basics, and explore larger questions of how to build a sane and scalable service that your users will love. We will draw on our own experience of implementing bad (and later, less-bad) answers to these questions in multiple real-world situations, with specific examples demonstrated using Django REST Framework.&lt;/p&gt;
</summary><category term="REST"></category></entry><entry><title>RESTful Ponies</title><link href="https://pyvideo.org/djangocon-us-2009/djangocon-2009--restful-ponies.html" rel="alternate"></link><published>2009-09-08T00:00:00+00:00</published><updated>2009-09-08T00:00:00+00:00</updated><author><name>Mike Malone</name></author><id>tag:pyvideo.org,2009-09-08:djangocon-us-2009/djangocon-2009--restful-ponies.html</id><summary type="html"></summary><category term="djangocon"></category><category term="djangocon2009"></category><category term="rest"></category></entry><entry><title>RESTful APIs: Promises and Lies</title><link href="https://pyvideo.org/djangocon-us-2011/djangocon-2011--restful-apis--promises--amp--lies.html" rel="alternate"></link><published>2011-09-05T00:00:00+00:00</published><updated>2011-09-05T00:00:00+00:00</updated><author><name>Tareque Hossain</name></author><id>tag:pyvideo.org,2011-09-05:djangocon-us-2011/djangocon-2011--restful-apis--promises--amp--lies.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;RESTful APIs: Promises &amp;amp; Lies&lt;/p&gt;
&lt;p&gt;Presented by Tareque Hossain&lt;/p&gt;
&lt;p&gt;Over the last few years RESTful APIs have become an integral part of
many django projects. But some of the fundamental questions still remain
unanswered. How do you decouple resources from models, formatting from
definitions, authorization from authentication? How should you define
resources? How do you handle pagination? Deliver facets? Prevent abuse?
Implement versioning? Let's have a look.&lt;/p&gt;
</summary><category term="api"></category><category term="djangocon"></category><category term="djangocon2011"></category><category term="rest"></category></entry><entry><title>How to build complex web applications having fun?</title><link href="https://pyvideo.org/europython-2011/how-to-build-complex-web-applications-having-fun.html" rel="alternate"></link><published>2011-07-21T00:00:00+00:00</published><updated>2011-07-21T00:00:00+00:00</updated><author><name>Andrew Mleczko</name></author><id>tag:pyvideo.org,2011-07-21:europython-2011/how-to-build-complex-web-applications-having-fun.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Andrew Mleczko - 22 June 2011 in &amp;quot;Track Ravioli &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web development is a complexity challenge nowadays. Growing number of
functionalities results in customer expectations increase which makes
project design more difficult. Using proper tools that suite your
customer needs is essential.&lt;/p&gt;
&lt;p&gt;In this talk I would like to present two successful stories using
closely together Pyramid and Plone. Basing on these examples I wished to
highlight the main reasons for using Plone as a CMS only and letting
Pyramid do the rest (vertical application). Moreover, I will underscore
good and bad practices during integration process and how to make
farsighted architectural decisions in a right moment.&lt;/p&gt;
&lt;p&gt;Prerequisites: be familiarized with common python web framework
concepts.&lt;/p&gt;
</summary><category term="cms"></category><category term="design"></category><category term="framework"></category><category term="plone"></category><category term="pyramid"></category><category term="rest"></category><category term="web"></category></entry><entry><title>Introducing Django REST framework</title><link href="https://pyvideo.org/europython-2011/introducing-django-rest-framework.html" rel="alternate"></link><published>2011-07-13T00:00:00+00:00</published><updated>2011-07-13T00:00:00+00:00</updated><author><name>Tom Christie</name></author><id>tag:pyvideo.org,2011-07-13:europython-2011/introducing-django-rest-framework.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Tom Christie - 23 June 2011 in &amp;quot;Track Tagliatelle&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django REST framework is a new project that aims to make it easy to
build RESTful Web APIs.&lt;/p&gt;
&lt;p&gt;The APIs it creates are fully Web browse-able, using an awesome Django
admin style interface, allowing them to be truly self-describing,
well-connected systems.&lt;/p&gt;
&lt;p&gt;The talk will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;RESTful Web APIs and Django - what batteries aren't in the box&lt;/li&gt;
&lt;li&gt;An introduction to the framework - What it is, what problems it tries
to solve&lt;/li&gt;
&lt;li&gt;Why it's so important that Web APIs should be Web browse-able&lt;/li&gt;
&lt;li&gt;A live coding demonstration&lt;/li&gt;
&lt;li&gt;Audience discussion&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sign up for the &lt;a class="reference external" href="http://ep2011.europython.eu/p3/sprints/"&gt;sprint&lt;/a&gt;
More &lt;a class="reference external" href="http://django-rest-framework.org"&gt;info&lt;/a&gt;&lt;/p&gt;
</summary><category term="django"></category><category term="framework"></category><category term="rest"></category><category term="web"></category></entry><entry><title>An iPhone-Python love affair: Building APIs for mobile</title><link href="https://pyvideo.org/europython-2011/an-iphone-python-love-affair-building-apis-for-m.html" rel="alternate"></link><published>2011-07-07T00:00:00+00:00</published><updated>2011-07-07T00:00:00+00:00</updated><author><name>Anna Callahan</name></author><id>tag:pyvideo.org,2011-07-07:europython-2011/an-iphone-python-love-affair-building-apis-for-m.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Anna Callahan,Nate Aune - 24 June 2011 in &amp;quot;Track
Spaghetti&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mobile apps are the hot item of the day - and the best mobile apps are
backed by a great website. Python web developer Nate Aune and iPhone
developer Anna Callahan will show you how we built a simple music web
app in Django with a native iPhone app that communicates with it.
Attendees of this talk will see a concrete case study of building an
application that exposes an API for mobile devices.&lt;/p&gt;
&lt;p&gt;Our web app exposes a JSON API for sending and receiving data from the
mobile device. We’ll talk about why we chose Django and the TastyPie API
package, and discuss other Python-based frameworks that could be used to
build the API such as Pyramid, Flask and Bottle. We’ll also compare REST
and custom APIs to understand best practices for building APIs designed
for mobile devices.&lt;/p&gt;
</summary><category term="api"></category><category term="django"></category><category term="flask"></category><category term="json"></category><category term="mobile"></category><category term="rest"></category><category term="tastypie"></category><category term="web"></category></entry><entry><title>Robert Coup - /me wants it. Scraping sites to get data.</title><link href="https://pyvideo.org/kiwi-pycon-2009/robert-coup----me-wants-it--scraping-sites-to-get.html" rel="alternate"></link><published>2009-11-07T00:00:00+00:00</published><updated>2009-11-07T00:00:00+00:00</updated><author><name>Robert Coup</name></author><id>tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/robert-coup----me-wants-it--scraping-sites-to-get.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;/me wants it. Scraping sites to get data.&lt;/p&gt;
&lt;p&gt;Presented by Robert Coup&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Building scrapers for grabbing data from websites. Tools, techniques,
and tips.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Life would be so much easier if the data contained in websites was
available raw via APIs. Alas, until that mythical day comes we either
need to deal with unhelpful people via email and phone, or just get it
ourselves. Python has some great tools available to help with building
scrapers and for parsing and formatting the data we get. Starting off
with the basics - tracking what needs to be done, making web requests,
parsing HTML, following links, and extricating data from Excel and PDF
documents. Our scraper needs to be resilient against too-clever content
management systems, Frontpage-era HTML, and plain dodgy data. We may
need to pass through logins and other messiness. There are some
techniques and tips for approaching the problems and keeping your
solution flexible and as simple as possible. We'll discuss some scrapers
built for New Zealand data, and introduce a new project from the NZ open
government data group to provide a RESTful interface to scrapers -
effectively creating a nice API where there isn't one.&lt;/p&gt;
&lt;p&gt;Slides:
&lt;a class="reference external" href="http://www.slideshare.net/rcoup/me-wants-it-scraping-sites-to-get-data"&gt;http://www.slideshare.net/rcoup/me-wants-it-scraping-sites-to-get-
data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</summary><category term="api"></category><category term="html"></category><category term="kiwipycon"></category><category term="kiwipycon2009"></category><category term="rest"></category><category term="scraping"></category><category term="web"></category></entry><entry><title>Actors: What, Why, and How (#161)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--actors--what--why--and-how---161.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Donovan Preston</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--actors--what--why--and-how---161.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Actors: What, Why and How&lt;/p&gt;
&lt;p&gt;Presented by Donovan Preston&lt;/p&gt;
&lt;p&gt;Since the dawn of concurrency research, there have been two camps:
shared everything, and shared nothing. Most modern applications use
threads for concurrency, a shared everything architecture.&lt;/p&gt;
&lt;p&gt;Actors, however, use a shared nothing architecture where lightweight
processes communicate with each other using message passing. Actors can
change their state, create a new Actor, send a message to any Actor it
has the Address of, and wait for a specific kind of message to arrive in
it's mailbox.&lt;/p&gt;
&lt;p&gt;We will discuss the benefits of using the Actor architecture and
strategies for implementing an Actor system in Python.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://bitbucket.org/fzzzy/python-%20actors/"&gt;http://bitbucket.org/fzzzy/python-actors/&lt;/a&gt;&lt;/p&gt;
</summary><category term="concurrency"></category><category term="eventlet"></category><category term="infrastructure"></category><category term="pycon"></category><category term="pycon2010"></category><category term="rest"></category><category term="scaling"></category><category term="wsgi"></category></entry><entry><title>Creating RESTful Web services with restish (#17)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--creating-restful-web-services-with-re.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Grig Gheorghiu</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--creating-restful-web-services-with-re.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Creating RESTful Web Services with restish&lt;/p&gt;
&lt;p&gt;Presented by Grig Gheorghiu&lt;/p&gt;
&lt;p&gt;Roy Fielding described REST in his Ph.D. dissertation in the year 2000.
Almost ten years later, Web developers are still confused as to how to
apply the REST principles in their applications. Examples of poorly
designed 'REST' APIs abound, and I will make use of them in my talk.&lt;/p&gt;
&lt;p&gt;In this presentation, I will give an overview of REST and its design
principles, and I will show a concrete example of a RESTful Web service
implemented in the restish framework. My examples will include CRUD
operations, as well as transactions. I will also show how to consume
this Web service using both httplib2 and curl. I would be remiss if I
didn't describe ways to test the Web service with WebTest and twill.&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2010"></category><category term="rest"></category><category term="restish"></category><category term="testing"></category><category term="web"></category></entry></feed>