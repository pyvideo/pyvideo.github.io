<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_filipe-fernandes.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-07-13T00:00:00+00:00</updated><entry><title>Building your own Weather App using NOAA Open Data and Jupyter Notebooks</title><link href="https://pyvideo.org/scipy-2018/building-your-own-weather-app-using-noaa-open-data-and-jupyter-notebooks.html" rel="alternate"></link><published>2018-07-13T00:00:00+00:00</published><updated>2018-07-13T00:00:00+00:00</updated><author><name>Filipe Fernandes</name></author><id>tag:pyvideo.org,2018-07-13:scipy-2018/building-your-own-weather-app-using-noaa-open-data-and-jupyter-notebooks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Leveraging the Open Geospatial Consortium (OGC) standards, NOAA's open
data, and Jupyter widgets we'll demonstrate how set up a data discovery
system based on time, location, and variable of interest (e.g.: wave
height). The goal is to walk through all the steps necessary to create a
fully-featured GIS interactive map (mobile friendly too!) using Jupyter
notebooks and widgets.Presenter(s): Speaker: Filipe Fernandes, SECOORA
Speaker: Richard Signell, United State Geological Survey&lt;/p&gt;
</summary></entry><entry><title>The Sheer Joy of Packaging</title><link href="https://pyvideo.org/scipy-2018/the-sheer-joy-of-packaging.html" rel="alternate"></link><published>2018-07-10T00:00:00+00:00</published><updated>2018-07-10T00:00:00+00:00</updated><author><name>Michael Sarahan</name></author><id>tag:pyvideo.org,2018-07-10:scipy-2018/the-sheer-joy-of-packaging.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building packages in Python used to be hard, especially the ones
including compiled extensions. Fortunately, it is getting easier thanks
to efforts in the scientific Python community. However, there are still
a lot of challenges and complexities facing the package builder.There
are at least two major packaging systems (pip/wheel and conda), and lots
of different ways to do work with these systems. This tutorial will
cover packaging from start to finish for both PyPI and conda, including
setup.py, flit, wheels, twine, conda-build, scikit-build, anaconda
cloud, and conda-forge. Particular attention will be paid to critical
details, such as binary compatibility and platform
differences.Presenter(s): Speaker: Michael Sarahan, Anaconda, Inc.
Speaker: Matthew McCormick, Kitware, Inc. Speaker: Jean-Christophe
Fillion-Robin, Kitware, Inc. Speaker: Filipe Fernandes, SECOORA Speaker:
Chris Barker, NOAA Speaker: Matt Craig, Minnesota State University
Moorhead Speaker: Jonathan Helmus, Anaconda, Inc. Speaker: Ray Donnelly,
Anaconda, Inc.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>CondaForge and the Future of Scientific Python packaging</title><link href="https://pyvideo.org/scipyla-2016/condaforge-and-the-future-of-scientific-python-packaging.html" rel="alternate"></link><published>2016-06-23T00:00:00+00:00</published><updated>2016-06-23T00:00:00+00:00</updated><author><name>Filipe Fernandes</name></author><id>tag:pyvideo.org,2016-06-23:scipyla-2016/condaforge-and-the-future-of-scientific-python-packaging.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Palestrante: Filipe Fernandes&lt;/p&gt;
&lt;p&gt;Resumo:&lt;/p&gt;
&lt;p&gt;Conda is an open-source packaging system developed for, and used by, the scientific software community.&lt;/p&gt;
&lt;p&gt;The conda-forge project aims to bring a community supported collection of packages to end users using conda.&lt;/p&gt;
&lt;p&gt;While developed to meet the unique needs of scientific software developers, it is a system that brings features and utilities for the broader developer community.&lt;/p&gt;
</summary><category term="conda"></category></entry></feed>