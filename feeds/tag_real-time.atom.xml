<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_real-time.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-08-12T00:00:00+00:00</updated><entry><title>Working with real-time data streams in Python</title><link href="https://pyvideo.org/pycon-au-2016/working-with-real-time-data-streams-in-python.html" rel="alternate"></link><published>2016-08-12T00:00:00+00:00</published><updated>2016-08-12T00:00:00+00:00</updated><author><name>Lachlan Blackhall</name></author><id>tag:pyvideo.org,2016-08-12:pycon-au-2016/working-with-real-time-data-streams-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An increasing number of devices and applications are producing vast amounts of data in real time. This can include measurements, sensor readings, and performance data. Making this data useful often requires that we analyse and use the data in real time but this requires techniques to aggregate, filter, and smooth the data. Drawing on simple and well-tested techniques from mathematics and engineering allows us to solve these problems quickly and efficiently. This talk will describe how Python can be used to develop powerful capabilities for working with real-time data streams and provide simple examples you can start using yourself.&lt;/p&gt;
</summary><category term="Internet-of-Things"></category><category term="Data"></category><category term="Real-time"></category><category term="Kalman Filter"></category></entry><entry><title>PyGotham 2011: Real-time Web: Gevent and Socket.io</title><link href="https://pyvideo.org/pygotham-2011/pygotham-2011-real-time-web-gevent-and-socketi.html" rel="alternate"></link><published>2011-09-16T00:00:00+00:00</published><updated>2011-09-16T00:00:00+00:00</updated><author><name>Richard D. Copeland, Jr.</name></author><id>tag:pyvideo.org,2011-09-16:pygotham-2011/pygotham-2011-real-time-web-gevent-and-socketi.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;There has been a lot of talk lately about how Node.js enables the
real-time web, but did you know you can do the same thing with Python?
This talk will show you how to use Gevent, ZeroMQ, and Socket.io to
build portable Python- powered real-time web applications.&lt;/p&gt;
</summary><category term="gevent"></category><category term="pygotham"></category><category term="pygotham2011"></category><category term="real-time"></category><category term="socket.io"></category><category term="web"></category><category term="zeromq"></category></entry><entry><title>Playing tasks with Django-Celery</title><link href="https://pyvideo.org/europython-2011/playing-tasks-with-django-celery.html" rel="alternate"></link><published>2011-07-21T00:00:00+00:00</published><updated>2011-07-21T00:00:00+00:00</updated><author><name>Mauro Rocco</name></author><id>tag:pyvideo.org,2011-07-21:europython-2011/playing-tasks-with-django-celery.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Mauro Rocco - 22 June 2011 in &amp;quot;Track Tagliatelle &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Celery is an open source task queueing system based on distributed
message passing.&lt;/p&gt;
&lt;p&gt;I will talk about the tools that Celery offers for task distribution and
how to monitor and manage the system using a Django web interface. This
talk will also focus on how we use Celery at Jamendo and our real
solutions to some common issues you may encounter when developing a
back-office based on Celery.&lt;/p&gt;
&lt;p&gt;The talk will cover the following topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A brief overview of Celery and the AMPQ protocol AMPQ protocol
overview, Celery introduction: Celery, RabbitMQ code examples&lt;/li&gt;
&lt;li&gt;The impact of Celery on the Jamendo work-flow; examples with real
tasks. Here I will talk about the Jamendo back-office infrastructure
and some of our common tasks. I will discuss the improvements made by
introducing a new back-office system based on Celery. I will show
some code snippets and go over some real scenarios.&lt;/li&gt;
&lt;li&gt;Overview of the Django Celery admin interface and some Jamendo
extensions. Let's talk about the Django-Celery interface that allows
one to monitor or schedule tasks directly from the Django admin. I
will explain which common additional features are necessary and how
to add them.&lt;/li&gt;
&lt;li&gt;Common &amp;quot;gotchas&amp;quot; we encountered while working with Celery and how we
solved them.&lt;/li&gt;
&lt;li&gt;Global task locks&lt;/li&gt;
&lt;li&gt;Centralized logging: be able to read all the logs of all celery
workers on different servers and filter them for real-time debugging&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="celery"></category><category term="distributed"></category><category term="django"></category><category term="infrastructure"></category><category term="queueing"></category><category term="rabbitmq"></category><category term="real-time"></category><category term="web"></category></entry><entry><title>Leveraging an instant messaging protocol to build a scalable cloud architecture</title><link href="https://pyvideo.org/europython-2011/leveraging-an-instant-messaging-protocol-to-build.html" rel="alternate"></link><published>2011-07-13T00:00:00+00:00</published><updated>2011-07-13T00:00:00+00:00</updated><author><name>Achiel van der Mandele</name></author><id>tag:pyvideo.org,2011-07-13:europython-2011/leveraging-an-instant-messaging-protocol-to-build.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Achiel van der Mandele - 24 June 2011 in &amp;quot;Track
Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;XMPP is an open technology for real-time communication. Although
primarily known for its application in the IM service &amp;quot;Jabber&amp;quot; (and,
subsequently, gchat/gtalk), it has numerous applications and creates new
opportunities for inter-system communication.&lt;/p&gt;
&lt;p&gt;While researching for an alternative to webservices at Mendix, we came
across XMPP and realized it solved many of the shortcomings of
webservices. It is currently being used to handle all inter-system and
inter-process communication in the Mendix cloud hosting environment.&lt;/p&gt;
&lt;p&gt;The talk will give a general overview of what XMPP is, an introduction
to the sleekxmpp python library and how the core features of xmpp can
help an architecture scale well horizontally.&lt;/p&gt;
&lt;p&gt;Required knowledge: basic understanding of hosting environments.&lt;/p&gt;
</summary><category term="architecture"></category><category term="cloud"></category><category term="hosting"></category><category term="real-time"></category><category term="scalable"></category><category term="technology"></category></entry><entry><title>Echtzeit Web-Apps mit Mushroom</title><link href="https://pyvideo.org/pycon-de-2013/echtzeit-web-apps-mit-mushroom.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Michael P. Jung</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/echtzeit-web-apps-mit-mushroom.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://bitbucket.org/terreon/mushroom"&gt;Mushroom&lt;/a&gt; ist ein einfach zu
verwendendes Echtzeit-Web-Messaging-Framework, welches neben
Browser-Push-Nachrichten auch Funktionen für die
Interprozesskommunikation zur Verfügung stellt.&lt;/p&gt;
&lt;p&gt;Dieser Vortrag versucht, Lust auf das Echtzeit-Web zu machen und
beantwortet grundlegende Fragen zu Themen wie Skalierbarkeit und
Deployment.&lt;/p&gt;
</summary><category term="echtzeit"></category><category term="gevent"></category><category term="http"></category><category term="ipc"></category><category term="javascript"></category><category term="long polling"></category><category term="messagin"></category><category term="mushroom"></category><category term="network"></category><category term="python"></category><category term="real-time"></category><category term="websocket"></category></entry></feed>