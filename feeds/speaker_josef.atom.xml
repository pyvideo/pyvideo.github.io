<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_josef.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-07-25T00:00:00+00:00</updated><entry><title>Scientific Visualization with GR</title><link href="https://pyvideo.org/europython-2014/scientific-visualization-with-gr.html" rel="alternate"></link><published>2014-07-25T00:00:00+00:00</published><updated>2014-07-25T00:00:00+00:00</updated><author><name>Josef</name></author><id>tag:pyvideo.org,2014-07-25:europython-2014/scientific-visualization-with-gr.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python developers often get frustrated when managing visualization
packages that cover the specific needs in scientific or engineering
environments. The &lt;a class="reference external" href="http://gr-framework.org/"&gt;*GR* framework&lt;/a&gt; could
help. &lt;em&gt;GR&lt;/em&gt; is a library for visualization applications ranging from
publication-quality 2D graphs to the creation of complex 3D scenes and
can easily be integrated into existing Python environments or
distributions like &lt;em&gt;Anaconda&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has long been established in software development departments of
research and industry, not least because of the proliferation of
libraries such as &lt;em&gt;SciPy&lt;/em&gt; and &lt;em&gt;Matplotlib&lt;/em&gt;. However, when processing
large amounts of data, in particular in combination with GUI toolkits
(&lt;em&gt;Qt&lt;/em&gt;) or three-dimensional visualizations (&lt;em&gt;OpenGL&lt;/em&gt;), it seems that
Python as an interpretative programming language may be reaching its
limits.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;em&gt;Outline&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction (1 min)&lt;ul&gt;
&lt;li&gt;motivation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GR framework (2 mins)&lt;ul&gt;
&lt;li&gt;layer structure&lt;/li&gt;
&lt;li&gt;output devices and capabilities&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GR3 framework (1 min)&lt;ul&gt;
&lt;li&gt;layer structure&lt;/li&gt;
&lt;li&gt;output capabilities (3 mins)&lt;ul&gt;
&lt;li&gt;high-resolution images&lt;/li&gt;
&lt;li&gt;POV-Ray scenes&lt;/li&gt;
&lt;li&gt;OpenGL drawables&lt;/li&gt;
&lt;li&gt;HTML5 / WebGL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Simple 2D / 3D examples (2 min)&lt;/li&gt;
&lt;li&gt;Interoperability (PyQt/PySide, 3 min)&lt;/li&gt;
&lt;li&gt;How to speed up Python scripts (4 mins)&lt;ul&gt;
&lt;li&gt;Numpy&lt;/li&gt;
&lt;li&gt;Numba (Pro)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Animated visualization examples (live demos, 6 mins)&lt;ul&gt;
&lt;li&gt;physics simulations&lt;/li&gt;
&lt;li&gt;surfaces / meshes&lt;/li&gt;
&lt;li&gt;molecule viewer&lt;/li&gt;
&lt;li&gt;MRI voxel data&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Outlook (1 min)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Notes&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Links to similar talks, tutorials or presentations can be found
&lt;a class="reference external" href="http://gr-framework.org/"&gt;here&lt;/a&gt;. Unfortunately, most of them are in
German language.&lt;/p&gt;
&lt;p&gt;The GR framework has already been presented in a talk at PyCon DE
&lt;a class="reference external" href="https://2012.de.pycon.org/programm/schedule/sessions/54"&gt;2012&lt;/a&gt; and
&lt;a class="reference external" href="https://2013.de.pycon.org/schedule/sessions/45/"&gt;2013&lt;/a&gt;, during a
&lt;a class="reference external" href="https://us.pycon.org/2013/schedule/presentation/158/"&gt;poster
session&lt;/a&gt; at
PyCon US 2013, and at &lt;a class="reference external" href="http://josefheinen.de/rasberry-pi.html"&gt;PythonCamps
2013&lt;/a&gt; in Cologne. The slides
for the PyCon.DE 2013 talk can be found
&lt;a class="reference external" href="http://iffwww.iff.kfa-juelich.de/pub/doc/PyCon_DE_2013"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As part of a collaboration the GR framework has been integrated into
&lt;a class="reference external" href="http://cdn.frm2.tum.de/fileadmin/stuff/services/ITServices/nicos-2.0/dirhtml/"&gt;NICOS&lt;/a&gt;
(a network-based control system completely written in Python) as a
replacement for PyQwt.&lt;/p&gt;
</summary></entry></feed>