<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 22 May 2016 00:00:00 +0000</lastBuildDate><item><title>Embed The Docs!</title><link>https://pyvideo.org/write-the-docs-2016/embed-the-docs.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kristof Van Tomme
&lt;a class="reference external" href="http://lanyrd.com/2016/writethedocs/sfbztd/"&gt;http://lanyrd.com/2016/writethedocs/sfbztd/&lt;/a&gt;
Documentation for most web applications today still follows the cognitive model of the good old fashioned documentation manual: While there might be some help content in the UI, the actual documentation manual in most cases lives as a separate object that is except for a few deep links on particularly troublesome areas, only accessible through a top domain.
But it doesn’t have to be this way, we should be perfectly able to predict what help resources a particular type of user might need on a given page, or functional state of a web application. Why do we force our users to leave our application, so that they can loose their context while searching for answers on Google?
In this talk I want to talk about a paradigm for embedded help that makes documentation content available right in the application, no matter if it’s a video tutorial, Walkthrough, or page in the manual. I will also introduce EmbedHelp, an open source embeddable widget that makes it easy for non-technical authors to implement this paradigm.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kristof Van Tomme</dc:creator><pubDate>Sun, 22 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-22:write-the-docs-2016/embed-the-docs.html</guid></item></channel></rss>