<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_christie-wilson.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-08-05T00:00:00+00:00</updated><entry><title>System Testing with pytest and docker-py</title><link href="https://pyvideo.org/europython-2016/system-testing-with-pytest-and-docker-py.html" rel="alternate"></link><published>2016-08-05T00:00:00+00:00</published><updated>2016-08-05T00:00:00+00:00</updated><author><name>Christie Wilson</name></author><id>tag:pyvideo.org,2016-08-05:europython-2016/system-testing-with-pytest-and-docker-py.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Christie Wilson/Michael Tom-Wing - System Testing with pytest and docker-py
[EuroPython 2016]
[20 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/system-testing-with-pytest-and-docker-py"&gt;https://ep2016.europython.eu//conference/talks/system-testing-with-pytest-and-docker-py&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;System tests are an invaluable tool for verifying correctness of large
scale online services. This talk will discuss best practices and
tooling (pytest and docker-py) for writing maintainable system tests.&lt;/p&gt;
&lt;p&gt;Demonware has used System tests to verify online services for some of
the biggest AAA video game launches as well as internal operational
tools.&lt;/p&gt;
&lt;p&gt;Many folks who write software are familiar with unit testing, but far
fewer with system testing.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;System testing a microservice architecture is challenging. As we move
away from monolithic architectures, system testing becomes more
important but also more complicated.&lt;/p&gt;
&lt;p&gt;In the video game industry, if a game doesn’t work properly
immediately after launch, it will heavily impact game success. We have
found system testing to be an important tool for pre launch testing of
game services and operational tools, to guarantee quality of these
services at launch.&lt;/p&gt;
&lt;p&gt;We want to share with you best practices for system testing: when to
write system tests, what to test and what not to, and common pitfalls
to avoid. Using python’s pytest tool and docker-py for setting up
services and their dependencies has made it easier than ever to write
complex but maintainable system tests and we’ll share with you how
we’ve made use of them.&lt;/p&gt;
&lt;p&gt;Developers (senior and junior) and ops folks can walk away from this
talk with practical tips they can use to apply system testing to their
software.&lt;/p&gt;
</summary></entry><entry><title>Introduction to Unit Testing in Python with Pytest</title><link href="https://pyvideo.org/pycon-us-2016/michael-tom-wing-christie-wilson-introduction-to-unit-testing-in-python-with-pytest-pycon-2016.html" rel="alternate"></link><published>2016-05-30T00:00:00+00:00</published><updated>2016-05-30T00:00:00+00:00</updated><author><name>Michael Tom-Wing</name></author><id>tag:pyvideo.org,2016-05-30:pycon-us-2016/michael-tom-wing-christie-wilson-introduction-to-unit-testing-in-python-with-pytest-pycon-2016.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speakers: Michael Tom-Wing, Christie Wilson&lt;/p&gt;
&lt;p&gt;In this tutorial we’ll be taking you on a journey into the wonderful land of unit testing with pytest. We’ll be taking a step by step approach by iteratively adding unit test coverage to our awesome Cat In A Box™ project. You will also get a crash course on Git, Github, virtualenvs, and test automation. By the end, we hope that you’ll have a desire to bring testing to our own projects!&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</summary><category term="pytest"></category><category term="testing"></category></entry></feed>