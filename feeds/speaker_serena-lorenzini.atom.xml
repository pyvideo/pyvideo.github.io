<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_serena-lorenzini.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-04-08T00:00:00+00:00</updated><entry><title>Ansible roles, private git repos and the Ansible Galaxy tool</title><link href="https://pyvideo.org/pycon-italia-2017/ansible-roles-private-git-repos-and-the-ansible-galaxy-tool.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>serena lorenzini</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/ansible-roles-private-git-repos-and-the-ansible-galaxy-tool.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ansible is a python tool that automates the management of an IT
infrastructure. It is easy to learn but rushing to use it with a limited
knowledge of its best practices leads to not reusable code.&lt;/p&gt;
&lt;p&gt;Creating reusable Ansible roles is a strongly encouraged practice, in
fact there is a tool designed just for this purpose: Ansible Galaxy. It
comes bundled with Ansible and its purpose is to download roles from the
Galaxy hub and other sources.&lt;/p&gt;
&lt;p&gt;This talk wants to show how we manage our Ansible roles and their
dependencies in a consistent way by means of Ansible Galaxy. It will
also offer an overview of how Ansible roles can be tested.&lt;/p&gt;
</summary><category term="config-ninja"></category><category term="continuous-integration"></category><category term="command-line"></category><category term="gitlab"></category><category term="ansible"></category><category term="best-practices"></category></entry></feed>