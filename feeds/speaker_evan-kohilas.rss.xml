<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Evan Kohilas</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 18 May 2025 00:00:00 +0000</lastBuildDate><item><title>SVGs, Lasers, Reality, and You</title><link>https://pyvideo.org/north-bay-python-2023/svgs-lasers-reality-and-you.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Evan Kohilas is a Software Engineer down from Sydney, Australia, whose passions lie in improving the developer experience by reducing human error, enhancing code health, and optimising workflows.&lt;/p&gt;
&lt;p&gt;When he's not thinking about security, informatics, or giving talks about his many projects, you'll find him either nomming on subway cookies, or chasing bunny rabbits.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pretalx.northbaypython.org/nbpy-2023/talk/XB7UTZ/"&gt;https://pretalx.northbaypython.org/nbpy-2023/talk/XB7UTZ/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recently, I embarked on an adventure to design and laser cut a card for my wallet.&lt;/p&gt;
&lt;p&gt;Little did I know that I'd face a Hydra called Reality. For every challenge that I solved, two new ones emerged...&lt;/p&gt;
&lt;p&gt;In the software world, we often have the privilege of quick feedback loops, be it running code or tests.&lt;/p&gt;
&lt;p&gt;But as we slowly broaden our scope and venture into the real world, navigating unpredictable variables from complex software, proprietary hardware, and a little thing called &amp;quot;physics&amp;quot;, we quickly lose this privilege.&lt;/p&gt;
&lt;p&gt;How can we use Python and SVGs to speed up and fortify this process, and what can the real world of fabrication with laser cutting teach us regarding software design?&lt;/p&gt;
&lt;p&gt;By the end of the talk, you'll have a basic understanding of how to cleanly design SVGs and SVG paths with the assistance of Python. You'll also understand (more than want to know about) laser cutting, and some suggested learnings regarding software design.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Evan Kohilas</dc:creator><pubDate>Sun, 30 Jul 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-07-30:/north-bay-python-2023/svgs-lasers-reality-and-you.html</guid><category>North Bay Python 2023</category></item><item><title>Decoding the Frustrations and Vulnerabilities of Modern Text Processing</title><link>https://pyvideo.org/pycon-au-2017/decoding-the-frustrations-and-vulnerabilities-of-modern-text-processing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When it comes to processing text, Python is easily one of the best languages for the job. However, in today's modern world, with emojisüëåüèª, ∆íŒø—èŒµŒπgŒ∑ ‚ÑìŒ±nŒ≥uŒ±gŒµs, and
mÃïaÃ®ÃïÃ∂lÕÅicÃ∑iÕÅÕúoÃ∂ÕüÕúusÕ† “âÕûdÃ¥aÕútÃõÕòÃµaÃ®“â we are no longer dealing with easy and safe to handle ASCII input.&lt;/p&gt;
&lt;p&gt;Join us as we go through the adventures of battling UnicodeError dragons, working with Python3's I/O, what to do when working with bytes, how to account for data from the web and/or databases nicely, what the different types of string literals are, the new f&amp;quot;{format_strings}&amp;quot;, and the security vulnerabilities that string formatting and malicious input can possess (and how to prevent it).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Evan Kohilas</dc:creator><pubDate>Sun, 06 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-06:/pycon-au-2017/decoding-the-frustrations-and-vulnerabilities-of-modern-text-processing.html</guid><category>PyCon AU 2017</category></item><item><title>Lightning Talks - Sunday</title><link>https://pyvideo.org/pycon-au-2017/lightning-talks-sunday.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;table border="1" class="docutils"&gt;
&lt;caption&gt;Lightning Talks&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="10%" /&gt;
&lt;col width="30%" /&gt;
&lt;col width="60%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Time&lt;/th&gt;
&lt;th class="head"&gt;Speaker&lt;/th&gt;
&lt;th class="head"&gt;Title&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=0m19s"&gt;0:19&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Sam Kitajima-Kimbrel&lt;/td&gt;
&lt;td&gt;You Aren't Facebook, and That's OK&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=4m55s"&gt;4:55&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Jason King&lt;/td&gt;
&lt;td&gt;Don't do what I did&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=9m55s"&gt;9:55&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Evan Kohilas&lt;/td&gt;
&lt;td&gt;Rubber Snaek&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=12m13s"&gt;12:13&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dr. Russell Keith-Magee&lt;/td&gt;
&lt;td&gt;Tools for Apiarists&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=17m23s"&gt;17:23&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;William Brown&lt;/td&gt;
&lt;td&gt;Hard CPUs Make Multithreading&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=21m54s"&gt;21:54&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Allen Rueben&lt;/td&gt;
&lt;td&gt;Joining the dots&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=24m16s"&gt;24:16&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Malcolm Ramsay&lt;/td&gt;
&lt;td&gt;How I Reinvented Solarized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=26m47s"&gt;26:47&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Zac Hatfield-Dodds&lt;/td&gt;
&lt;td&gt;From REPL to reliable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=31m55s"&gt;31:55&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Daniel McCarthy&lt;/td&gt;
&lt;td&gt;Hexapod and MicroPython&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=35m35s"&gt;35:35&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Lilly Ryan&lt;/td&gt;
&lt;td&gt;Towns I Wish I Could Visit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=41m00s"&gt;41:00&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Jeremy Rothstein&lt;/td&gt;
&lt;td&gt;I'm a mockoholic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=45m54s"&gt;45:54&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Nick Moore&lt;/td&gt;
&lt;td&gt;ESP32 and MicroPython&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=48m38s"&gt;48:38&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Katie Bell&lt;/td&gt;
&lt;td&gt;Hello&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=53m37s"&gt;53:37&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Peter Hall&lt;/td&gt;
&lt;td&gt;A Brief History of 'What is the Time?'&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Kitajima-Kimbrel</dc:creator><pubDate>Sun, 06 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-06:/pycon-au-2017/lightning-talks-sunday.html</guid><category>PyCon AU 2017</category><category>lightning talks</category></item><item><title>When the Python Bites: A Survival Guide to Errors</title><link>https://pyvideo.org/pycon-au-2018/when-the-python-bites-a-survival-guide-to-errors.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You can easily make them, you're afraid of them, and they'll ruin your day.
I'm talking about Errors in Python. Why do they exist? Do we really need them? And how do we deal with them instead of panicking when they appear?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Evan Kohilas</dc:creator><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-26:/pycon-au-2018/when-the-python-bites-a-survival-guide-to-errors.html</guid><category>PyCon AU 2018</category></item><item><title>Hacking Playable Ads: What REALLY are they?</title><link>https://pyvideo.org/pycon-au-2020/hacking-playable-ads-what-really-are-they.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Evan Kohilas&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/8TA7ZA"&gt;https://2020.pycon.org.au/program/8TA7ZA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Have you ever clicked the &lt;em&gt;FREE GEMS&lt;/em&gt; button and been served an ad, only to find you're now trialing a game?&lt;/p&gt;
&lt;p&gt;What are they? Are they running code?
If they are, can we hijack them?
If we can't, can we bypass, or even replace them?&lt;/p&gt;
&lt;p&gt;And more importantly, what are they actually doing?
Are you really playing a game? Or are they bitcoin miners in disguise?&lt;/p&gt;
&lt;p&gt;Come along and join my adventurous curiosity as we learn to man in the middle these ads and discover what they're really about!&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 13:55:00 2020 at Python 2&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Evan Kohilas</dc:creator><pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-09-05:/pycon-au-2020/hacking-playable-ads-what-really-are-they.html</guid><category>PyCon AU 2020</category><category>EvanKohilas</category><category>PyCon</category><category>PyConAU</category><category>PyConline</category><category>Python</category><category>pyconau</category><category>pyconau_2020</category></item><item><title>Lightning Talks - Sunday</title><link>https://pyvideo.org/pycon-us-2025/lightning-talks-sunday.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A collection of lightning talks made by the community.&lt;/p&gt;
&lt;p&gt;1:15 - Illirik Smirnov - Phone numbers and you: tips, tricks, and footguns
5:15 - Evan Kohilas - What have they done! Why is &lt;cite&gt;re.sub&lt;/cite&gt; changing from Python 3.13?
9:55 - Adam Silkey - &amp;quot;Solving&amp;quot; Python Packaging on Windows, once and for all
12:00 - Jonathan Daniel - Using &lt;cite&gt;uv pip&lt;/cite&gt; to accelerarte Docker
17:00 - Takanori Suzuki - Put the Cat Emoji in your documents!
22:30 - Jing Cao - What I learned going on strike with the NYTimes Tech Guild
28:00 - Michael McCaffrey - Overcoming ADHD and anxiety to achieve long-term goals
32:50 - Joongi Kim - My 10 years with PyCon KR
38:10 - Dave Peck - A whirlwind tour of t-strings!
43:45 - Sheena O'Connell - Python in Africa
48:00 - Conference Announcements&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Illirik Smirnov</dc:creator><pubDate>Sun, 18 May 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-05-18:/pycon-us-2025/lightning-talks-sunday.html</guid><category>PyCon US 2025</category></item><item><title>Who Tests the Testers? Making and Testing Pipelines</title><link>https://pyvideo.org/pycon-us-2025/who-tests-the-testers-making-and-testing-pipelines.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You likely have a good pipeline that either runs tests, lints, or deployments for your project.&lt;/p&gt;
&lt;p&gt;But when it comes to changing that pipeline, how sure are you that it works before taking those changes live?&lt;/p&gt;
&lt;p&gt;In this talk, we'll explore why it doesn't have to be the case that &amp;quot;there's no devops for devops&amp;quot;.&lt;/p&gt;
&lt;p&gt;We'll give a quick run down of what pipelines are, and why they should be used, before we give an example where it can be hard to know whether making changes to a pipeline will fail, and why that can be the case.&lt;/p&gt;
&lt;p&gt;Then, we'll showcase tools and methodologies that can be used for testing, creating, and simulating pipelines, so you too can setup a system to always be sure that your pipeline changes won't cause any water damage.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Evan Kohilas</dc:creator><pubDate>Fri, 16 May 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-05-16:/pycon-us-2025/who-tests-the-testers-making-and-testing-pipelines.html</guid><category>PyCon US 2025</category></item></channel></rss>