<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 19 Feb 2010 00:00:00 +0000</lastBuildDate><item><title>Threading is not a model (#187)</title><link>https://pyvideo.org/pycon-us-2010/pycon-2010--threading-is-not-a-model---187.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Threading is not a model&lt;/p&gt;
&lt;p&gt;Presented by Joe Gregorio&lt;/p&gt;
&lt;p&gt;We have many concurrency/multiprocessing capabilities at our finger
tips, such as threads, processes, locks, mutexes, select, epoll,
transactional memory, etc. But none of them are a model for
multiprocessing, they are only tools on which you would build an
implementation of such a model. So what are the models we can choose
from? How would they be implemented in Python? And why may the GIL
actually be a good thing?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joe Gregorio</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--threading-is-not-a-model---187.html</guid><category>multiprocessing</category><category>pycon</category><category>pycon2010</category></item></channel></rss>