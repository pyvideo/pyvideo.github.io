<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 04 Jul 2012 00:00:00 +0000</lastBuildDate><item><title>Hands on with Pygame</title><link>https://pyvideo.org/europython-2012/hands-on-with-pygame.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2012] R Dopieralski - 3 JULY 2012 in &amp;quot;Track Pizza Napoli&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyGame continues to be Pythonâ€™s most popular 2D game library, even
though there is growing competition from more modern OpenGL-based
libraries. It is still an excellent way to learn how our favorite games
work internally and to write similar games ourselves. During this
tutorial I want to introduce the basics of using PyGame to create
interactive, animated graphical applications (such as games), and then
help the participants make their own start at a simple adventure game,
which they can later develop further into projects of their own. I want
to concentrate on commonly used techniques and patterns in game
development, which are useful no matter what library is used in the
implementation. In particular I will be discussing animations,
tile-based maps, collision detection, event systems, internal
representation of game state and different approaches to code
organisation and internal structure of games. I have previously created
a (much simpler) tutorial for creating a turn-based tile-based PyGame
game and a couple of games, such as Z-Day and Jelly . I will be using
the materials and experiences from those projects in the tutorial.
Please bring your laptop with Python 2.7 and PyGame installed.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">R Dopieralski</dc:creator><pubDate>Wed, 04 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-04:europython-2012/hands-on-with-pygame.html</guid></item></channel></rss>