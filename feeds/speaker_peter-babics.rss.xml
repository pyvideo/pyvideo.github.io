<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 25 Jul 2018 00:00:00 +0000</lastBuildDate><item><title>Charon and the way out from a pickle hell</title><link>https://pyvideo.org/pycon-sk-2018/charon-and-the-way-out-from-a-pickle-hell.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pickle ako formát pre serializáciu je tu s nami už dlhú dobu, jeho
prednosti sú jasné, rýchla serializácia a implementácia v štandardnej
knižnici.&lt;/p&gt;
&lt;p&gt;Taktiež má aj určité nevýhody, ktoré často dokážu prevýšiť, medzi nimi
sú napríklad bezpečnostné hrozby a minimálna podpora migrácií. U nás v
Quantlane bola hlavným problémom chýbajúca podpora migrácii, nakoľko
aktívny vývoj aplikácie vždy vedie k zmenám v dátových štruktúrach.&lt;/p&gt;
&lt;p&gt;Z tohto dôvodu sme vytvorili &lt;tt class="docutils literal"&gt;charon&lt;/tt&gt;, jednoduchý serializačný
nástroj, ktorý si kladie za cieľ previesť komplexné dátové štruktúry do
jednoduchých základných typov (dict, list, skalárne hodnoty), ktoré sa
následne dajú jednoducho serializovať pomocou ďaľších knižníc ako
napriklád json, yaml a iné. Knižnica ponúka rôzne metatesty ako
napríklad kontrolovanie verzie serializačných funkcií voči dátovým typom
pomocou hashov AST, kontrolu serializačnej pipeline alebo aj kontrola či
majú všetky serializačné funkcie test.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Bábics</dc:creator><pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-03-11:pycon-sk-2018/charon-and-the-way-out-from-a-pickle-hell.html</guid><category>Charon</category><category>Pickle</category><category>PyCon SK</category><category>Python</category></item><item><title>Python, Docker, Kubernetes, and beyond ?</title><link>https://pyvideo.org/europython-2018/python-docker-kubernetes-and-beyond.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever tried to manage deployment of multiple python applications
through various linux distributions ? If so, you must have heard of
Docker and maybe also Kubernetes. Distributing python applications using
docker is simple and allows to create static packages containing
everything required for them to run. Also it allows to freeze
everything, packages, available libraries, files on filesystem. In my
speech I would like to tell you about our brief journey, of moving our
trading platform from standalone application directly on host system,
through deploying it in docker and latter moving it to kubernetes. I
will explain our struggles with implementing stable and fast CI using
Gitlab CI and Docker, image (package) storage and cleanup of old images
and finally I will tell you how we are deploying our platform to
kubernetes, with nothing more than yaml-s and templating.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Babics</dc:creator><pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-25:europython-2018/python-docker-kubernetes-and-beyond.html</guid></item></channel></rss>