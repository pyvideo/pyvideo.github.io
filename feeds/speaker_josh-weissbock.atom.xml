<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_josh-weissbock.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-07-06T00:00:00+00:00</updated><entry><title>Distributed Web Scraping in Python</title><link href="https://pyvideo.org/pycascades-2019/distributed-web-scraping-in-python.html" rel="alternate"></link><published>1990-01-01T00:00:00+00:00</published><updated>1990-01-01T00:00:00+00:00</updated><author><name>Josh Weissbock</name></author><id>tag:pyvideo.org,1990-01-01:pycascades-2019/distributed-web-scraping-in-python.html</id><summary type="html"></summary></entry><entry><title>High Fidelity Web Crawling in Python</title><link href="https://pyvideo.org/pydata-seattle-2017/high-fidelity-web-crawling-in-python.html" rel="alternate"></link><published>2017-07-06T00:00:00+00:00</published><updated>2017-07-06T00:00:00+00:00</updated><author><name>Josh Weissbock</name></author><id>tag:pyvideo.org,2017-07-06:pydata-seattle-2017/high-fidelity-web-crawling-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python modules such as Requests make it easy for Python to pull HTML from a webpage which you can feed to your parsing function. What becomes difficult is converting that process into an autonomous process to crawl webpages to parse their HTML for data. This talk covers the lessons learns and solutions Iâ€™ve found to create high fidelity autonomous web crawling scripts in Python.&lt;/p&gt;
</summary></entry></feed>