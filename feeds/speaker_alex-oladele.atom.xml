<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Alex Oladele</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_alex-oladele.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-07-28T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Python + Discord = Great Bots!</title><link href="https://pyvideo.org/pyohio-2024/python-discord-great-bots.html" rel="alternate"></link><published>2024-07-28T00:00:00+00:00</published><updated>2024-07-28T00:00:00+00:00</updated><author><name>Alex Oladele</name></author><id>tag:pyvideo.org,2024-07-28:/pyohio-2024/python-discord-great-bots.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Okay you already enjoy using python, and you already enjoy using
Discord, but what if you combined both!&lt;/p&gt;
&lt;p&gt;In this talk we will explore how to build a discord bot using the Pycord
library. We’ll build a dice rolling bot that utilizes Discord’s native
slash commands. At …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Okay you already enjoy using python, and you already enjoy using
Discord, but what if you combined both!&lt;/p&gt;
&lt;p&gt;In this talk we will explore how to build a discord bot using the Pycord
library. We’ll build a dice rolling bot that utilizes Discord’s native
slash commands. At the end of this talk you’ll have learned the
different ways to invoke discord bot actions, the different lifecycle
events each bot goes through, structuring the code for maintainability,
and how to build for widespread adoption.&lt;/p&gt;
</content><category term="PyOhio 2024"></category></entry></feed>