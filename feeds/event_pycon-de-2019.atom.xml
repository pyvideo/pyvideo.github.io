<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-de-2019.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-10-11T00:00:00+00:00</updated><entry><title>A Medieval DSL? Parsing Heraldic Blazons with Python</title><link href="https://pyvideo.org/pycon-de-2019/a-medieval-dsl-parsing-heraldic-blazons-with-python.html" rel="alternate"></link><published>2019-10-11T00:00:00+00:00</published><updated>2019-10-11T00:00:00+00:00</updated><author><name>Lady Red</name></author><id>tag:pyvideo.org,2019-10-11:pycon-de-2019/a-medieval-dsl-parsing-heraldic-blazons-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Lady Red&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Medieval people invented one of the first domain specific languages to describe how to paint Coats of Arms.  We'll learn how to write our own parse grammar to parse this language, and then look at the parse grammar of Python itself!&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/EE33M8"&gt;https://de.pycon.org/program/EE33M8&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Abridged metaprogramming classics - this episode: pytest</title><link href="https://pyvideo.org/pycon-de-2019/abridged-metaprogramming-classics-this-episode-pytest.html" rel="alternate"></link><published>2019-10-11T00:00:00+00:00</published><updated>2019-10-11T00:00:00+00:00</updated><author><name>Oliver Bestwalter</name></author><id>tag:pyvideo.org,2019-10-11:pycon-de-2019/abridged-metaprogramming-classics-this-episode-pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Oliver Bestwalter&lt;/p&gt;
&lt;p&gt;Track:PyConDE
This talk is not about how to use pytest. pytest is a good project to explore metaprogramming techniques like introspection and code as data in the context of solving real world problems.&lt;/p&gt;
&lt;p&gt;In this case: implementing a test framework.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/XTD7TE"&gt;https://de.pycon.org/program/XTD7TE&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Driving 3D Printers with Python: Lessons Learned</title><link href="https://pyvideo.org/pycon-de-2019/driving-3d-printers-with-python-lessons-learned.html" rel="alternate"></link><published>2019-10-11T00:00:00+00:00</published><updated>2019-10-11T00:00:00+00:00</updated><author><name>Gina Häußge</name></author><id>tag:pyvideo.org,2019-10-11:pycon-de-2019/driving-3d-printers-with-python-lessons-learned.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Gina Häußge&lt;/p&gt;
&lt;p&gt;Track:PyConDE
OctoPrint is an open source web interface for 3D printers and deployed world wide on a large variety of devices. In this talk I explain some of the challenges in developing and maintaining such a piece of end user facing software in Python.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/JQAUEC"&gt;https://de.pycon.org/program/JQAUEC&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Event-Sourced Story</title><link href="https://pyvideo.org/pycon-de-2019/event-sourced-story.html" rel="alternate"></link><published>2019-10-11T00:00:00+00:00</published><updated>2019-10-11T00:00:00+00:00</updated><author><name>Jacek Kołodziej</name></author><id>tag:pyvideo.org,2019-10-11:pycon-de-2019/event-sourced-story.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Jacek Kołodziej&lt;/p&gt;
&lt;p&gt;Track:PyConDE
After three years of utilizing event sourcing in [Growbots](http://growbots.com), I want to introduce to you its basics and share our experience acquired over that time - including complexity involved - so you can better assess whether it's a tool wo&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/SXSE8D"&gt;https://de.pycon.org/program/SXSE8D&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Introduction to automated testing with pytest</title><link href="https://pyvideo.org/pycon-de-2019/introduction-to-automated-testing-with-pytest.html" rel="alternate"></link><published>2019-10-11T00:00:00+00:00</published><updated>2019-10-11T00:00:00+00:00</updated><author><name>Raphael Pierzina</name></author><id>tag:pyvideo.org,2019-10-11:pycon-de-2019/introduction-to-automated-testing-with-pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Raphael Pierzina&lt;/p&gt;
&lt;p&gt;Track:PyConDE
We'll learn how to get started with developing automated tests in Python with the [pytest] test framework.&lt;/p&gt;
&lt;p&gt;[pytest]: &lt;a class="reference external" href="https://github.com/pytest-dev/pytest"&gt;https://github.com/pytest-dev/pytest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/3JUWNC"&gt;https://de.pycon.org/program/3JUWNC&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Monitoring infrastructure and application using Django, Sensu and Celery.</title><link href="https://pyvideo.org/pycon-de-2019/monitoring-infrastructure-and-application-using-django-sensu-and-celery.html" rel="alternate"></link><published>2019-10-11T00:00:00+00:00</published><updated>2019-10-11T00:00:00+00:00</updated><author><name>Hari Kishore Sirivella</name></author><id>tag:pyvideo.org,2019-10-11:pycon-de-2019/monitoring-infrastructure-and-application-using-django-sensu-and-celery.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Hari Kishore Sirivella&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Monitoring is a key aspect for any business. It enables us to find and be notified about our application's problems way ahead our customer notices it, which enables us to keep our businesses running and making customers happy.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/LWALGX"&gt;https://de.pycon.org/program/LWALGX&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Optimizing Input: Building your own customized keyboard</title><link href="https://pyvideo.org/pycon-de-2019/optimizing-input-building-your-own-customized-keyboard.html" rel="alternate"></link><published>2019-10-11T00:00:00+00:00</published><updated>2019-10-11T00:00:00+00:00</updated><author><name>Daniel Rios</name></author><id>tag:pyvideo.org,2019-10-11:pycon-de-2019/optimizing-input-building-your-own-customized-keyboard.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Daniel Rios&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Keyboards, the main way we interact with computers, have remained unchanged for a century, despite being free from mechanical necessity. Alternatives made possible by recent technology can optimize the way we input text and interact with our devices.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/WJGCNV"&gt;https://de.pycon.org/program/WJGCNV&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Parallel programming for python developers – Let’s Go(lang)</title><link href="https://pyvideo.org/pycon-de-2019/parallel-programming-for-python-developers-lets-golang.html" rel="alternate"></link><published>2019-10-11T00:00:00+00:00</published><updated>2019-10-11T00:00:00+00:00</updated><author><name>Dominik Henter</name></author><id>tag:pyvideo.org,2019-10-11:pycon-de-2019/parallel-programming-for-python-developers-lets-golang.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dominik Henter, Jéssica Lins&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Despite all of python's strengths, parallel programming tends to not be one of them. Enter Go, a language that has parallel programming at its core. In this tutorial we will build an API pipeline service in Go, that calls several APIs in parallel.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/9AKC3R"&gt;https://de.pycon.org/program/9AKC3R&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Strawberry: a dataclasses inspired approach to GraphQL</title><link href="https://pyvideo.org/pycon-de-2019/strawberry-a-dataclasses-inspired-approach-to-graphql.html" rel="alternate"></link><published>2019-10-11T00:00:00+00:00</published><updated>2019-10-11T00:00:00+00:00</updated><author><name>Patrick Arminio</name></author><id>tag:pyvideo.org,2019-10-11:pycon-de-2019/strawberry-a-dataclasses-inspired-approach-to-graphql.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Patrick Arminio&lt;/p&gt;
&lt;p&gt;Over the past few years, GraphQL has gained much traction, especially in the JavaScript world. Python is getting on board this trend with new interesting libraries. In this talk, we will see how Strawberry makes uses of dataclasses and type hints to&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/QABWWM"&gt;https://de.pycon.org/program/QABWWM&lt;/a&gt;
Follow us on Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>What we learned from scraping 1 billion webpages every month</title><link href="https://pyvideo.org/pycon-de-2019/what-we-learned-from-scraping-1-billion-webpages-every-month.html" rel="alternate"></link><published>2019-10-11T00:00:00+00:00</published><updated>2019-10-11T00:00:00+00:00</updated><author><name>Samet Atdag</name></author><id>tag:pyvideo.org,2019-10-11:pycon-de-2019/what-we-learned-from-scraping-1-billion-webpages-every-month.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Samet Atdag&lt;/p&gt;
&lt;p&gt;Web is broken. We learned the hard way. Developers tend to hack, hacks tend to break the web. In this talk, I share what we learned how websites don't obey the protocols and how developers had caused the web became a chaotic medium.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/Q88ZUW"&gt;https://de.pycon.org/program/Q88ZUW&lt;/a&gt;
Follow us on Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>What’s new in Python 3.8?</title><link href="https://pyvideo.org/pycon-de-2019/whats-new-in-python-38.html" rel="alternate"></link><published>2019-10-11T00:00:00+00:00</published><updated>2019-10-11T00:00:00+00:00</updated><author><name>Stéphane Wirtel</name></author><id>tag:pyvideo.org,2019-10-11:pycon-de-2019/whats-new-in-python-38.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Stéphane Wirtel&lt;/p&gt;
&lt;p&gt;In few months, there will be the release of Python 3.8! As a core dev I would like to show you the new features of this version.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/CATV3T"&gt;https://de.pycon.org/program/CATV3T&lt;/a&gt;
Follow us on Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>10 ways to debug Python code</title><link href="https://pyvideo.org/pycon-de-2019/10-ways-to-debug-python-code.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Christoph Deil</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/10-ways-to-debug-python-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Christoph Deil&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Are your debugging skills limited to &amp;quot;print&amp;quot;, or do you sometimes think there must be a better way to figure out what's going on? I will show 10 ways to debug Python code, and share tips and tricks for effective debugging.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/TRFD98"&gt;https://de.pycon.org/program/TRFD98&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>6 Years of Docker: The Good, the Bad and Python Packaging</title><link href="https://pyvideo.org/pycon-de-2019/6-years-of-docker-the-good-the-bad-and-python-packaging.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Sebastian Neubauer</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/6-years-of-docker-the-good-the-bad-and-python-packaging.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Sebastian Neubauer&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Local development of python code inside a docker container is surprisingly broken. In this talk I will walk you through the proper setup of a local python development environment using docker.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/A7FWAW"&gt;https://de.pycon.org/program/A7FWAW&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Beyond Paradigms: a new key to grok Python &amp; other languages</title><link href="https://pyvideo.org/pycon-de-2019/beyond-paradigms-a-new-key-to-grok-python-other-languages.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Luciano Ramalho</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/beyond-paradigms-a-new-key-to-grok-python-other-languages.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Luciano Ramalho&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Focus on features, not paradigms. This new approach to the study of programming languages offers practical advice for programmers learning a new language, adopting coding idioms, and choosing suitable design patterns.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/QCNNTW"&gt;https://de.pycon.org/program/QCNNTW&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Break your API gently - or not at all</title><link href="https://pyvideo.org/pycon-de-2019/break-your-api-gently-or-not-at-all.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Tim Hoffmann</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/break-your-api-gently-or-not-at-all.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Tim Hoffmann&lt;/p&gt;
&lt;p&gt;Track:PyConDE
As hard as we try to write good code, there will always be cases in which we wish we had designed a different function signature, chosen another attribute name, ... But you can't change it anymore because it's public API - or can you?&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/QXB8DR"&gt;https://de.pycon.org/program/QXB8DR&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Chips Made From Python</title><link href="https://pyvideo.org/pycon-de-2019/chips-made-from-python.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Dan Fritchman</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/chips-made-from-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dan Fritchman&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Introduction to Python &lt;em&gt;hardware description libraries&lt;/em&gt;, and how they are being used to design modern silicon, including open-source RISC-V CPUs.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/WURZX8"&gt;https://de.pycon.org/program/WURZX8&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Commenting code — beyond common wisdom</title><link href="https://pyvideo.org/pycon-de-2019/commenting-code-beyond-common-wisdom.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Stefan Schwarzer</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/commenting-code-beyond-common-wisdom.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Stefan Schwarzer&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Good code comments are important for software maintenance. This talk
goes beyond the common wisdom you find in most books and online and
explains when this common wisdom falls short.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/SUC9VW"&gt;https://de.pycon.org/program/SUC9VW&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Docker and Python - A Match made in Heaven</title><link href="https://pyvideo.org/pycon-de-2019/docker-and-python-a-match-made-in-heaven.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Dr. Hendrik Niemeyer</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/docker-and-python-a-match-made-in-heaven.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dr. Hendrik Niemeyer&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Containers have revolutionized the way we build and ship software. This talk is aimed at newcomers and people with limited experience with Docker and will cover the basics of Docker and how it can be used alongside Python.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/VERUFX"&gt;https://de.pycon.org/program/VERUFX&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Dr. Schmood's Notebook of Python Calisthenics and Orthodontia</title><link href="https://pyvideo.org/pycon-de-2019/dr-schmoods-notebook-of-python-calisthenics-and-orthodontia.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>David Schmudde</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/dr-schmoods-notebook-of-python-calisthenics-and-orthodontia.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: David Schmudde&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Explore the benefits of taking a functional approach when writing Python in Jupyter notebooks: reduce errors caused by out-of-order execution and hidden state while producing more readable code.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/F3TCZN"&gt;https://de.pycon.org/program/F3TCZN&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>From body and code programming in times of acceptance</title><link href="https://pyvideo.org/pycon-de-2019/from-body-and-code-programming-in-times-of-acceptance.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Paloma</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/from-body-and-code-programming-in-times-of-acceptance.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Paloma&lt;/p&gt;
&lt;p&gt;Track:PyConDE
This talk is meant to bring awareness about the need of diversity from theoretical to practical day by day actions. Diversity not only as social justice, but to reclaim knowledge proficiency, critical perspective and new ideas.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/FQMFKX"&gt;https://de.pycon.org/program/FQMFKX&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Getting started with FPGA with Python</title><link href="https://pyvideo.org/pycon-de-2019/getting-started-with-fpga-with-python.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Olga</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/getting-started-with-fpga-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Olga&lt;/p&gt;
&lt;p&gt;Track:PyConDE
In this review, we'll look into frameworks that will help Python developer start working with FPGA without prior knowledge of Verilog or VHDL.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/PHYCJL"&gt;https://de.pycon.org/program/PHYCJL&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Is it me, or the GIL?</title><link href="https://pyvideo.org/pycon-de-2019/is-it-me-or-the-gil.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Christoph Heer</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/is-it-me-or-the-gil.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Christoph Heer&lt;/p&gt;
&lt;p&gt;Track:PyConDE
People refer Python's Global Interpreter Lock as main bottleneck for their performance critical applications. But how can you test if your application really suffer from the GIL?&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/BHDEAR"&gt;https://de.pycon.org/program/BHDEAR&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Keynote: Python 2020+ - Lukas Langa</title><link href="https://pyvideo.org/pycon-de-2019/keynote-python-2020-lukas-langa.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Łukasz Langa</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/keynote-python-2020-lukas-langa.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Łukasz Langa&lt;/p&gt;
&lt;p&gt;While very successful, Python's peculiarly missing in some spaces like mobile devices, client-side Web, or gaming. Should we do something about it? How could we go about changing that?&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/JFNCMQ"&gt;https://de.pycon.org/program/JFNCMQ&lt;/a&gt;
Follow us on Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Static Typing in Python</title><link href="https://pyvideo.org/pycon-de-2019/static-typing-in-python.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Dustin Ingram</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/static-typing-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dustin Ingram&lt;/p&gt;
&lt;p&gt;In this talk, we'll discuss the advantages and disadvantages to a static type system, as well as recent efforts to introduce static typing to Python via optional &amp;quot;type hints&amp;quot; and various tools to aid in adding types to Python code.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/NH9UEY"&gt;https://de.pycon.org/program/NH9UEY&lt;/a&gt;
Follow us on Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Tutorial: An Introduction to Concurrency and Parallelism using Python Programming Language</title><link href="https://pyvideo.org/pycon-de-2019/tutorial-an-introduction-to-concurrency-and-parallelism-using-python-programming-language.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Tanmoy Bandyopadhyay</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/tutorial-an-introduction-to-concurrency-and-parallelism-using-python-programming-language.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Tanmoy Bandyopadhyay&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Python concurrency and parallelism concepts like Multiprocessing, Multithreading, Coroutine, Asynchronous
I/O will be explained. We will learn to write simpler code with improved response time and throughput.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/SC7JGK"&gt;https://de.pycon.org/program/SC7JGK&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Tutorial: Kubernetes 101 for Python Developers</title><link href="https://pyvideo.org/pycon-de-2019/tutorial-kubernetes-101-for-python-developers.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Christian Barra</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/tutorial-kubernetes-101-for-python-developers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Christian Barra&lt;/p&gt;
&lt;p&gt;Track:PyConDE
&lt;cite&gt;Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.&lt;/cite&gt;&lt;/p&gt;
&lt;p&gt;During this training you will learn how to use it and how it can help as a Python developer.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/D8VAN9"&gt;https://de.pycon.org/program/D8VAN9&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>venv, pyenv, pypi, pip, pipenv, pyWTF?</title><link href="https://pyvideo.org/pycon-de-2019/venv-pyenv-pypi-pip-pipenv-pywtf.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Simone Robutti</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/venv-pyenv-pypi-pip-pipenv-pywtf.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Simone Robutti&lt;/p&gt;
&lt;p&gt;The ecosystem of Python tooling is fragmented, confusing, full of quirks and therefore hostile to newcomers and veterans alike. Let's try to make sense of it.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/HQJMTL"&gt;https://de.pycon.org/program/HQJMTL&lt;/a&gt;
Follow us on Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>What if I tell you that your specs are broken</title><link href="https://pyvideo.org/pycon-de-2019/what-if-i-tell-you-that-your-specs-are-broken.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Samuele Maci</name></author><id>tag:pyvideo.org,2019-10-10:pycon-de-2019/what-if-i-tell-you-that-your-specs-are-broken.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Samuele Maci&lt;/p&gt;
&lt;p&gt;This talk is going to be about Swagger Specs and their changes. We're going to examine what Backward Incompatible changes are and how you can deal with them.
The talk will also introduce you to a tool that will help you on having safer changes.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/NFH83Z"&gt;https://de.pycon.org/program/NFH83Z&lt;/a&gt;
Follow us on Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Boosting simulation performance with Python</title><link href="https://pyvideo.org/pycon-de-2019/boosting-simulation-performance-with-python.html" rel="alternate"></link><published>2019-10-09T00:00:00+00:00</published><updated>2019-10-09T00:00:00+00:00</updated><author><name>Eran Friedman</name></author><id>tag:pyvideo.org,2019-10-09:pycon-de-2019/boosting-simulation-performance-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Eran Friedman&lt;/p&gt;
&lt;p&gt;Track:PyConDE
In this talk I will present the architecture of our simulation (written in Python) which allows us to simulate hours of real-life in only minutes of simulation. I will describe challenges we encountered and how we handled them.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/CEYMMK"&gt;https://de.pycon.org/program/CEYMMK&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Developers vs. Enterprise</title><link href="https://pyvideo.org/pycon-de-2019/developers-vs-enterprise.html" rel="alternate"></link><published>2019-10-09T00:00:00+00:00</published><updated>2019-10-09T00:00:00+00:00</updated><author><name>Ingo Stegmaier</name></author><id>tag:pyvideo.org,2019-10-09:pycon-de-2019/developers-vs-enterprise.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Ingo Stegmaier&lt;/p&gt;
&lt;p&gt;Track:PyConDE
This 30-minute talk will give you an overview about project management, success factors and specialties within enterprises. This will be a guide how you promote internal projects and bring them to success within a highly &amp;quot;political&amp;quot; environment.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/XJLSWG"&gt;https://de.pycon.org/program/XJLSWG&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>How MicroPython went into space</title><link href="https://pyvideo.org/pycon-de-2019/how-micropython-went-into-space.html" rel="alternate"></link><published>2019-10-09T00:00:00+00:00</published><updated>2019-10-09T00:00:00+00:00</updated><author><name>Christine Spindler</name></author><id>tag:pyvideo.org,2019-10-09:pycon-de-2019/how-micropython-went-into-space.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Christine Spindler&lt;/p&gt;
&lt;p&gt;Track:PyConDE
MicroPython is a lean and efficient implementation of the Python 3 programming language, optimised to run on microcontrollers and in constrained environments. One of these environments is on a spacecraft.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/7QRAWK"&gt;https://de.pycon.org/program/7QRAWK&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Keynote: PEP 581 and PEP 588: Migrating CPython's Issue Tracker - Mariatta Wijaya</title><link href="https://pyvideo.org/pycon-de-2019/keynote-pep-581-and-pep-588-migrating-cpythons-issue-tracker-mariatta-wijaya.html" rel="alternate"></link><published>2019-10-09T00:00:00+00:00</published><updated>2019-10-09T00:00:00+00:00</updated><author><name>Mariatta Wijaya</name></author><id>tag:pyvideo.org,2019-10-09:pycon-de-2019/keynote-pep-581-and-pep-588-migrating-cpythons-issue-tracker-mariatta-wijaya.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Mariatta Wijaya&lt;/p&gt;
&lt;p&gt;Track:PyConDE
The acceptance of PEP 581, by Python steering council means that another big workflow change is impending. Let's hear about some of the proposed plans on improving CPython's workflow, and learn how you can help and take part in this process.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/DFCU3K"&gt;https://de.pycon.org/program/DFCU3K&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Mock Hell</title><link href="https://pyvideo.org/pycon-de-2019/mock-hell.html" rel="alternate"></link><published>2019-10-09T00:00:00+00:00</published><updated>2019-10-09T00:00:00+00:00</updated><author><name>Edwin Jung</name></author><id>tag:pyvideo.org,2019-10-09:pycon-de-2019/mock-hell.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Edwin Jung&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Mock is an easily abused tool. In perverse cases, it increases technical debt and prevents refactoring.  This talk describes the history of mocking, alternatives, anti-patterns, and the connection to clean architecture.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/NZC3A8"&gt;https://de.pycon.org/program/NZC3A8&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>pytest - simple, rapid and fun testing with Python</title><link href="https://pyvideo.org/pycon-de-2019/pytest-simple-rapid-and-fun-testing-with-python.html" rel="alternate"></link><published>2019-10-09T00:00:00+00:00</published><updated>2019-10-09T00:00:00+00:00</updated><author><name>Florian Bruhin</name></author><id>tag:pyvideo.org,2019-10-09:pycon-de-2019/pytest-simple-rapid-and-fun-testing-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Florian Bruhin&lt;/p&gt;
&lt;p&gt;The pytest tool presents a rapid and simple way to write tests for your Python code. This training gives an introduction with exercises to some distinguishing features.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/WRHHSF"&gt;https://de.pycon.org/program/WRHHSF&lt;/a&gt;
Follow us on Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Refactoring in Python: Design Patterns and Approaches</title><link href="https://pyvideo.org/pycon-de-2019/refactoring-in-python-design-patterns-and-approaches.html" rel="alternate"></link><published>2019-10-09T00:00:00+00:00</published><updated>2019-10-09T00:00:00+00:00</updated><author><name>Tin Marković</name></author><id>tag:pyvideo.org,2019-10-09:pycon-de-2019/refactoring-in-python-design-patterns-and-approaches.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Tin Marković&lt;/p&gt;
&lt;p&gt;Experiences and lessons learned from tackling extremely demanding code. How to bring order to mismanaged code and elevate the code base to a standard that's acceptable in today's tech environment.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/FTVNPK"&gt;https://de.pycon.org/program/FTVNPK&lt;/a&gt;
Follow us on Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Running An Open Source Project Like A Start Up</title><link href="https://pyvideo.org/pycon-de-2019/running-an-open-source-project-like-a-start-up.html" rel="alternate"></link><published>2019-10-09T00:00:00+00:00</published><updated>2019-10-09T00:00:00+00:00</updated><author><name>Cheuk Ting Ho</name></author><id>tag:pyvideo.org,2019-10-09:pycon-de-2019/running-an-open-source-project-like-a-start-up.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Cheuk Ting Ho&lt;/p&gt;
&lt;p&gt;Not so long ago, I started an open source project - PicknMIx. It feels like running a start up if you are serious about it. Want to know my story? Want to check if you can do it as well? I will tell you. (Stickers not guaranteed though)&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/9ARCJA"&gt;https://de.pycon.org/program/9ARCJA&lt;/a&gt;
Follow us on Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Tutorial: Package and Dependency Management with Poetry</title><link href="https://pyvideo.org/pycon-de-2019/tutorial-package-and-dependency-management-with-poetry.html" rel="alternate"></link><published>2019-10-09T00:00:00+00:00</published><updated>2019-10-09T00:00:00+00:00</updated><author><name>Steph Samson</name></author><id>tag:pyvideo.org,2019-10-09:pycon-de-2019/tutorial-package-and-dependency-management-with-poetry.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Steph Samson&lt;/p&gt;
&lt;p&gt;Track:PyConDE
Poetry is “Python packaging and dependency management made easy.”It not only packages up your libraries easily but also isolates environments and resolves dependencies — all with an intuitive command line interface.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/CFPRJ8"&gt;https://de.pycon.org/program/CFPRJ8&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Tutorial: Write your Own Decorators</title><link href="https://pyvideo.org/pycon-de-2019/tutorial-write-your-own-decorators.html" rel="alternate"></link><published>2019-10-09T00:00:00+00:00</published><updated>2019-10-09T00:00:00+00:00</updated><author><name>Mike Müller</name></author><id>tag:pyvideo.org,2019-10-09:pycon-de-2019/tutorial-write-your-own-decorators.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Mike Müller&lt;/p&gt;
&lt;p&gt;Decorators are really useful. Using them is simple. Writing your own is bit more involved. Learn in this hands-on workshop how to write decorators for many different purposes. The emphasis is on best practices and practical examples.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/ASLHQN"&gt;https://de.pycon.org/program/ASLHQN&lt;/a&gt;
Follow us on Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Using Micropython to develop an IoT multimode sensor platform with an Augmented Reality UI</title><link href="https://pyvideo.org/pycon-de-2019/using-micropython-to-develop-an-iot-multimode-sensor-platform-with-an-augmented-reality-ui.html" rel="alternate"></link><published>2019-10-09T00:00:00+00:00</published><updated>2019-10-09T00:00:00+00:00</updated><author><name>Nicholas Herriot</name></author><id>tag:pyvideo.org,2019-10-09:pycon-de-2019/using-micropython-to-develop-an-iot-multimode-sensor-platform-with-an-augmented-reality-ui.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Nicholas Herriot&lt;/p&gt;
&lt;p&gt;Building a sensor platform that is flexible and intuitive is hard! This talk takes you through a journey how a sensor platform was developed to create a sensor farm for the purpose of capturing and acquiring data to be used in AI systems for Samsung.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/7X799R"&gt;https://de.pycon.org/program/7X799R&lt;/a&gt;
Follow us on Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>