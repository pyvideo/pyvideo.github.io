<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_alexandr-notchenko.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-05-07T00:00:00+00:00</updated><entry><title>Analyzing 3D objects with power of Deep Learning and Cython</title><link href="https://pyvideo.org/pydata-london-2017/analyzing-3d-objects-with-power-of-deep-learning-and-cython.html" rel="alternate"></link><published>2017-05-07T00:00:00+00:00</published><updated>2017-05-07T00:00:00+00:00</updated><author><name>Alexandr Notchenko</name></author><id>tag:pyvideo.org,2017-05-07:pydata-london-2017/analyzing-3d-objects-with-power-of-deep-learning-and-cython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Filmed at PyData London 2017
www.pydata.org&lt;/p&gt;
&lt;p&gt;Description
Deep Learning taken world by storm in recent years, and most of the time it's powered by Python language. Working with 3D data is computationally demanding even by most powerful GPUs. A lot of times 3D data is in sparse form, or can be turned without loosing too much of it's usefulness. We combined high performance of CUDA library with ease of use and power of Python by getting good with Cython.&lt;/p&gt;
&lt;p&gt;Abstract
We live in great time for development of Machine Learning algorithms. There is an abundance of ways to implement models, a lot of them are in Python or have a python API. Python is a great way to implement high level APIs and connect your code to other parts of data processing. Learning how to write in Theano or Tensorflow can be very helpful for most of the people facing problems with complex data. But for a niche area like Deep Learning for sparse 3D data there was no solutions. Our python module enables creation of deep neural networks to process sparse data quickly using combination of Python and fast C++/CUDA code underneath. In my talk I'll explain how to connect high performance code with practical user level abstractions using Cython, as it was done in our project.&lt;/p&gt;
&lt;p&gt;You can see code in a github repository or checkout our paper.
&lt;a class="reference external" href="https://github.com/gangiman/PySparseConvNet"&gt;https://github.com/gangiman/PySparseConvNet&lt;/a&gt;
&lt;a class="reference external" href="https://arxiv.org/abs/1611.09159"&gt;https://arxiv.org/abs/1611.09159&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PyData is a gathering of users and developers of data analysis tools in Python. The goals are to provide Python enthusiasts a place to share ideas and learn from each other about how best to apply our language and tools to ever-evolving challenges in the vast realm of data management, processing, analytics, and visualization.&lt;/p&gt;
&lt;p&gt;We aim to be an accessible, community-driven conference, with tutorials for novices, advanced topical workshops for practitioners, and opportunities for package developers and users to meet in person.&lt;/p&gt;
</summary></entry></feed>