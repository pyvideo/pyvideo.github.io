<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Jonathan Dekhtiar</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jonathan-dekhtiar.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-05-18T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Reinventing the Wheel: A Community-Driven Roadmap for Python Packaging</title><link href="https://pyvideo.org/pycon-us-2025/reinventing-the-wheel-a-community-driven-roadmap-for-python-packaging.html" rel="alternate"></link><published>2025-05-18T00:00:00+00:00</published><updated>2025-05-18T00:00:00+00:00</updated><author><name>Jonathan Dekhtiar</name></author><id>tag:pyvideo.org,2025-05-18:/pycon-us-2025/reinventing-the-wheel-a-community-driven-roadmap-for-python-packaging.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python ecosystem thrives on innovation, adaptability, versatility and a thriving open-source community. Python’s reach continues to evolve, fueled today by custom silicon, variations within CPU architecture families, AI accelerators, and diverse use cases. The Wheel format and packaging tools should adapt and evolve to better support the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python ecosystem thrives on innovation, adaptability, versatility and a thriving open-source community. Python’s reach continues to evolve, fueled today by custom silicon, variations within CPU architecture families, AI accelerators, and diverse use cases. The Wheel format and packaging tools should adapt and evolve to better support the Python community.&lt;/p&gt;
&lt;p&gt;We’ll review the most potent challenges in the Python packaging ecosystem, and present our roadmap for adapting the Wheel format to enable native support for specialized hardware, the use of non-default Python package indexes, and managing diverse compute backends, all while maintaining the accessibility and simplicity Python is known for.We'll issue a call to action from the open source community, supported by important libraries such as PyTorch, JAX, Scikit-learn, etc. This is a unified roadmap for the future of Python packaging, and present published and draft PEPs.
Description&lt;/p&gt;
&lt;p&gt;Managing software stacks in complex compute environments is difficult. Often the standard wheel tags aren’t sufficient to describe your exact compute environment. These are common problems for many users, are often difficult to remedy, and even more difficult to make reproducible, easy to use, and composable.&lt;/p&gt;
&lt;p&gt;We propose to “Re-Invent the Wheel” and have founded the “Wheel Next” interest group as an open source collaboration among different users, companies, packages, and maintainers that are working together on solutions to these difficult problems. We are actively publishing PEPs that extend the Wheel format, metadata, packaging tooling, and PyPI standards, and contribute to projects that help with various aspects of the problem space, including installers and indexes.&lt;/p&gt;
&lt;p&gt;In addition, we’ll give a call to action for everyone interested in joining the initiative and helping us evolve and build the packaging ecosystem the Python world needs today and in the future.&lt;/p&gt;
</content><category term="PyCon US 2025"></category></entry></feed>