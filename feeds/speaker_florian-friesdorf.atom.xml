<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_florian-friesdorf.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-07-06T00:00:00+00:00</updated><entry><title>Aspect oriented programming applied to dictionary trees</title><link href="https://pyvideo.org/europython-2012/aspect-oriented-programming-applied-to-dictionary.html" rel="alternate"></link><published>2012-07-06T00:00:00+00:00</published><updated>2012-07-06T00:00:00+00:00</updated><author><name>Florian Friesdorf</name></author><id>tag:pyvideo.org,2012-07-06:europython-2012/aspect-oriented-programming-applied-to-dictionary.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2012] Florian Friesdorf - 5 JULY 2012 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mixins enable code re-usage across class hierarchies, adapters allow for
additional run-time behaviour â€” metachao aspects merge these two concept
and go beyond: they can be applied to classes, instances and aspects
themselves, allowing for functional meta-programming in python. Their
beauty will be demonstrated by example of dictionary trees, where all
behaviour is implemented in form of aspects and applied to different
dictionary implementations. The goal of the talk is to get an
understanding of how aspect oriented programming can look and why
dictionary trees in combination with aspects are a cool way of designing
applications.&lt;/p&gt;
</summary></entry></feed>