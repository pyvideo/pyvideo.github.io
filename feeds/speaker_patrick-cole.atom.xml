<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_patrick-cole.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-07-14T00:00:00+00:00</updated><entry><title>The History and Design Behind the Python Geophysical Modelling and Interpretation (PyGMI) Package</title><link href="https://pyvideo.org/scipy-2014/the-history-and-design-behind-the-python-geophysi.html" rel="alternate"></link><published>2014-07-14T00:00:00+00:00</published><updated>2014-07-14T00:00:00+00:00</updated><author><name>Patrick Cole</name></author><id>tag:pyvideo.org,2014-07-14:scipy-2014/the-history-and-design-behind-the-python-geophysi.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The development of geophysical software by individual scientists is
achievable through languages such as Python. All goals behind developing
a geophysical potential field interpretation and modelling software have
been achieved to date. The implication of this is that innovation can be
a driving force in projects, rather than waiting for commercial vendors
to provide appropriate scientific tools.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Council for Geoscience (CGS) is the so called &amp;quot;Geological Survey&amp;quot; of
South Africa. Like many similar institutions around the world, financial
restrictions play a significant role in limiting what tools are
available to scientists. It was from this need to stay scientifically
current, while keeping the software inexpensive, that the examination of
Python first started and ultimately ended up in the PyGMI project.&lt;/p&gt;
&lt;p&gt;The origins of PyGMI started with two separate projects. The first was a
joint project where the CGS was responsible for the creation of a
software interface for cluster analysis code, developed by the
University of Potsdam (Paasche et al 2009). The resulting project was
done entirely in Python. Data could be imported, filtered, analyzed and
displayed in graph form using Matplotlib.&lt;/p&gt;
&lt;p&gt;The second project stemmed from the need to perform 3D modelling on
geophysical data. The creation of 3D models can be extremely
time-consuming. Packages available tend to follow either the modelling
of individual 2.5D profiles, which are then joined up into 3D sections,
or modelling fully in three dimensions using polygonal based models. The
initial idea was to use the VTK library as the means to create, display
and interrogate the model, while using the Scipy and Numpy libraries to
perform the actual potential field calculations. It soon became apparent
that editing the resulting mesh quickly became complex and time
consuming. The ability to easily create and change a model is the very
basis of forward modelling and for this reason a new approach was
adopted. The newer 3D modelling package was designed to allow the user
to model simply by drawing the model, in the same way one would draw
views of a house using a paint program. This implies the need to have a
front view, as well as a top view. The model is therefore voxel based
rather than polygonal. The final model can be displayed either within
the PyGMI software, or exported to Google Earth for examination.&lt;/p&gt;
&lt;p&gt;Ultimately these two projects formed the basis of what is now the actual
PyGMI package -- which is a modular collection of various techniques,
including multivariate statistical analysis and potential field
modelling. The interface follows a flow diagram approach and the
individual modules are independent enough to ensure that they do not
interfere with code which has preceded them in previous modules.&lt;/p&gt;
&lt;p&gt;The PyGMI software is available for free download at:
&lt;a class="reference external" href="https://code.google.com/p/pygmi/"&gt;https://code.google.com/p/pygmi/&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>