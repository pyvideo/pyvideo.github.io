<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 23 Jul 2014 00:00:00 +0000</lastBuildDate><item><title>Stackless: Recent advancements and future goals</title><link>https://pyvideo.org/europython-2014/stackless-recent-advancements-and-future-goals.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Stackless (formerly known as Stackless-Python) is an enhanced variant of
the Python-language. Stackless is best known for its lightweight
microthreads. But that's not all. In this talk Stackless core developers
demonstrate recent advancements regarding multi-threading,
custom-scheduling, debugging with Stackless and explain future plans for
Stackless.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since Python release 1.5 Stackless Python is an enhanced variant of
C-Python. Stackless is best known for its addition of lightweight
microthreads (tasklets) and channels.&lt;/p&gt;
&lt;p&gt;Less known are the recent enhancements that became available with
Stackless 2.7.6. In this talk core Stackless developers demonstrate&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The improved multi-threading support&lt;/li&gt;
&lt;li&gt;How to build custom scheduling primitives based on atomic tasklet
operations&lt;/li&gt;
&lt;li&gt;The much improved debugger support&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Stackless recently switched the new master repository from
hg.python.org/stackless to bitbucket to allow for a more open
development process. We'll summarise our experience and discuss our
plans for the future development of Stackless.&lt;/p&gt;
&lt;p&gt;The talk will be help by Anselm Kruis and Christian Tismer. If we are
lucky, we will also welcome Kristján Valur Jónsson from Iceland.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anselm Kruis</dc:creator><pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-23:europython-2014/stackless-recent-advancements-and-future-goals.html</guid></item><item><title>Tiffany - Multipage-Tiff Lesen und Schreiben mit PIL ohne PIL</title><link>https://pyvideo.org/pycon-de-2012/tiffany-multipage-tiff-lesen-und-schreiben-mit.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Tiffany steht für beliebiges Tiff. Das kleine Modul löst eine grosse
Menge&lt;/p&gt;
&lt;p&gt;von Problemen, hat keine Abhängigkeiten, keine Binaries und läuft&lt;/p&gt;
&lt;p&gt;überall wo Python läuft.&lt;/p&gt;
&lt;p&gt;Bei der Entwicklung von Pydica (Distributed Document Capture) wurden wir&lt;/p&gt;
&lt;p&gt;mit dem Problem konfrontiert, mehrseitige Tiff-Dateien anzuzeigen. Das&lt;/p&gt;
&lt;p&gt;GUI-Toolkit PySide (Qt) unterstützt zwar Tiff, zeigt jedoch nur die
erste Seite.&lt;/p&gt;
&lt;p&gt;Zudem behandeln wir Fax-komprimierte Dateien, was Qt aber unterstützt.&lt;/p&gt;
&lt;p&gt;PIL verfügt über eine Bereinigung der Tiff-Tags, kommt aber nicht mit
der&lt;/p&gt;
&lt;p&gt;Fax-Kompression zurecht. Es gibt seit langem einen Patch dafür, jedoch
ist&lt;/p&gt;
&lt;p&gt;der Build-Prozess erschwert und zieht mit libtiff eine Kette von
Abhängigkeiten&lt;/p&gt;
&lt;p&gt;nach sich.&lt;/p&gt;
&lt;p&gt;Daher benutzt Tiffany einige wenige Dateien aus PIL ohne diese zu
verändern und täuscht&lt;/p&gt;
&lt;p&gt;vor, die Tiff-Dateien zu entpacken, tut es aber nicht. Es werden
lediglich die&lt;/p&gt;
&lt;p&gt;Tiff-Tags ordentlich aufbereitet. Die komprimierten Daten werden so
übernommen&lt;/p&gt;
&lt;p&gt;wie sie sind. Beim Schreiben von Dateien werden daher lediglich die
vorhandenen&lt;/p&gt;
&lt;p&gt;Daten in anderer Reihenfolge wieder zusammengesetzt.&lt;/p&gt;
&lt;p&gt;Im Vortrag werde ich die Implementierung vorstellen sowie weitere
Alternativen,&lt;/p&gt;
&lt;p&gt;die Zukunft von PIL sowie auf weitere Tips und Kniffe in unserem Projekt
eingehen.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Tismer</dc:creator><pubDate>Thu, 01 Nov 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-11-01:pycon-de-2012/tiffany-multipage-tiff-lesen-und-schreiben-mit.html</guid><category>distributed document capture</category><category>monkey-patching</category><category>multipage-tiff</category><category>pil</category></item></channel></rss>