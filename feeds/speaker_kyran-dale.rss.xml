<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 11 May 2016 00:00:00 +0000</lastBuildDate><item><title>Data-visualisation with Python and Javascript: crafting a data-viz toolchain for the web</title><link>https://pyvideo.org/pydata-london-2015/data-visualisation-with-python-and-javascript-crafting-a-data-viz-toolchain-for-the-web.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;While Python is fast becoming the goto language for
data-processing/science, the visual fruits of that labour hit the
wall of the web, where there is only one first-class language,
Javascript. To develop a data-viz toolchain for the modern world,
where web-presentation is increasingly mandated, making Python and
Javascript play nicely is fundamental. This talk aims to show how to
easily do that.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To accompany an upcoming O'Reilly book 'Data-visualisation with Python
and Javascript: crafting a dataviz toolchain for the web' (see
&lt;a class="reference external" href="http://kyrandale.com/blog/data-visualization-python-javascript/"&gt;here&lt;/a&gt;)
this talk aims to sketch out the toolchain by transforming some dry
Wikipedia data (Nobel prize-winners) into a far more engaging and
insightful web- visualisation. This transformative cycle uses Python
big-hitters such as Scrapy, Pandas and Flask, the latter delivering data
to Javascript's D3. These are the industrial lathes of the toolchain but
Python's fantastic standard library and all those first class
data-munging libraries are involved, the spanners, hammers and
screwdrivers of the toolchain.&lt;/p&gt;
&lt;p&gt;While Python is fast becoming the goto language for
data-processing/science, the visual fruits of that labour hit the wall
of the web, where there is only one first-class language, Javascript. To
develop a data-viz toolchain for the modern world, where
web-presentation is increasingly mandated, making Python and Javascript
play nicely is fundamental. This talk aims to show that the perceived
wall between the two languages is actually a thin, permeable membrane
and that, with a bare minimum of web-dev, one can get on with
programming seamlessly in both.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kyran Dale</dc:creator><pubDate>Sat, 20 Jun 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-06-20:pydata-london-2015/data-visualisation-with-python-and-javascript-crafting-a-data-viz-toolchain-for-the-web.html</guid></item><item><title>Data Visualisation with Python and Javascript - crafting a data-visualisation for the web</title><link>https://pyvideo.org/pycon-uk-2015/data-visualisation-with-python-and-javascript-crafting-a-data-visualisation-for-the-web.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Data Visualisation with Python and Javascript: crafting a data-visualisation toolchain for the web&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To accompany an upcoming O'Reilly book 'Data-visualisation with Python
and Javascript: crafting a dataviz toolchain for the web' (see here)
this talk aims to sketch out the toolchain by transforming some dry
Wikipedia data (Nobel prize-winners) into a far more engaging and
insightful web- visualisation. This transformative cycle uses Python
big-hitters such as Scrapy, Pandas and Flask, the latter delivering data
to Javascript's D3. These are the industrial lathes of the toolchain but
Python's fantastic standard library and all those first class
data-munging libraries are involved, the spanners, hammers and
screwdrivers of the toolchain.&lt;/p&gt;
&lt;p&gt;While Python is fast becoming the goto language for
data-processing/science, the visual fruits of that labour hit the wall
of the web, where there is only one first-class language, Javascript. To
develop a data-viz toolchain for the modern world, where
web-presentation is increasingly mandated, making Python and Javascript
play nicely is fundamental. This talk aims to show that the perceived
wall between the two languages is actually a thin, permeable membrane
and that, with a bare minimum of web-dev, one can get on with
programming seamlessly in both.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kyran Dale</dc:creator><pubDate>Sun, 20 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-20:pycon-uk-2015/data-visualisation-with-python-and-javascript-crafting-a-data-visualisation-for-the-web.html</guid></item><item><title>To The Web and Beyond</title><link>https://pyvideo.org/pydata-london-2016/kyran-dale-to-the-web-and-beyond.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData London 2016&lt;/p&gt;
&lt;p&gt;Working from the premise that the fruits of your data explorations find their natural home on the web, this talk will discuss a few modern work-flows that deliver your data to the browser. I'll be aiming to distil a few of the things I learned in the last year while writing the book 'Data-visualisation with Python and JavaScript' and highlighting some of the key changes that have occurred in the Python and JS dataviz ecosystems in that little time.&lt;/p&gt;
&lt;p&gt;If you take dataviz seriously I think you have to engage and make friends with JavaScript. The good news for Pythonistas is that Modern JS (EcmaScript 6) has 'borrowed' more than a few of Python's clothes, which makes moving between the two languages that much easier. I'll demonstrate a few of these, showing bilingual development is getting less and less arduous.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kyran Dale</dc:creator><pubDate>Wed, 11 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-11:pydata-london-2016/kyran-dale-to-the-web-and-beyond.html</guid></item></channel></rss>