<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 17 Jul 2017 00:00:00 +0000</lastBuildDate><item><title>How to write your own debugger</title><link>https://pyvideo.org/pycon-russia-2017/how-to-write-your-own-debugger.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A very rare programmer doesn't need debugging tools. Change a variable value, look at program execution step by step, get the whole picture of the situation is extremely hard without Pdb. How were all these debuggers implemented? What underlying mechanisms are they use? What issues do they need to solve? I will address all those questions in my talk.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Artem Malyshev</dc:creator><pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-17:pycon-russia-2017/how-to-write-your-own-debugger.html</guid></item><item><title>Правильные пчёлы</title><link>https://pyvideo.org/pycon-belarus-2017/pravilnye-pchioly.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Доклад о многообещающем проекте BeeWare, который находится в стадии
интенсивной разработки. Если у вашей программы есть пользователи, то они
скорее всего хотят графический интерфейс. Причём хотят они его в родном
для платформы исполнении, будь то десктоп, браузер, телефон или умные
часы. Целью проекта BeeWare и является эта самая возможность написания
изоморфных приложений на Python, используя предоставленные системой
возможности. О том как и почему устроен проект и пойдёт речь.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Artem Malyshev</dc:creator><pubDate>Sat, 04 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-04:pycon-belarus-2017/pravilnye-pchioly.html</guid></item><item><title>Очереди задач без купюр</title><link>https://pyvideo.org/pycon-russia-2016/ocheredi-zadach-bez-kupiur.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Так или иначе в любом сложном web приложении используются очереди задач. И так уж сложилось, что им положено быть распределёнными. В данный момент рынок решений для python разработчиков представляют 2 главных продукта - Celery и RQ.
В докладе я расскажу о внутреннем устройстве обеих систем. Поговорим о том, с какими проблемами столкнулись их создатели, как их решили и чем эти решения грозят конечному пользователю. Как устроены группы, хорды и eta? Как добиться отказоустойчивости на транспортном уровне? Почему это тяжело масштабировать? На все эти вопросы я дам ответ в своём докладе.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Artem Malyshev</dc:creator><pubDate>Mon, 04 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-04:pycon-russia-2016/ocheredi-zadach-bez-kupiur.html</guid></item></channel></rss>