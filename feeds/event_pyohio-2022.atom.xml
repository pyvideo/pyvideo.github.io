<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - PyOhio 2022</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pyohio-2022.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-07-30T00:00:00+00:00</updated><subtitle></subtitle><entry><title>A Quickstart to Web Testing with Playwright</title><link href="https://pyvideo.org/pyohio-2022/a-quickstart-to-web-testing-with-playwright.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Pandy Knight</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/a-quickstart-to-web-testing-with-playwright.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Playwright is a fantastic new open source web testing framework from
Microsoft. With Playwright, you can automate tests for web apps and REST
APIs that run on multiple browsers without flaky failures. It's a nice,
modern alternative to Selenium WebDriver, and you can use Playwright in
plain-old Python!&lt;/p&gt;
&lt;p&gt;In …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Playwright is a fantastic new open source web testing framework from
Microsoft. With Playwright, you can automate tests for web apps and REST
APIs that run on multiple browsers without flaky failures. It's a nice,
modern alternative to Selenium WebDriver, and you can use Playwright in
plain-old Python!&lt;/p&gt;
&lt;p&gt;In this concise 10-minute quickstart, we'll learn how to configure a
Python project with Playwright and &lt;tt class="docutils literal"&gt;pytest&lt;/tt&gt;, automate a basic web
test, and run it against different browsers. You'll be able to add more
tests to our starter project on your own after the talk!&lt;/p&gt;
&lt;p&gt;Example code with full instructions can be found here: &lt;a class="reference external" href="https://github.com/AutomationPanda/playwright-python-tutorial"&gt;https://github.com/AutomationPanda/playwright-python-tutorial&lt;/a&gt;&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Add RSS to My Website with Python? Yes!</title><link href="https://pyvideo.org/pyohio-2022/add-rss-to-my-website-with-python-yes.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Mario Munoz</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/add-rss-to-my-website-with-python-yes.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;Should I add RSS to my website?&lt;/li&gt;
&lt;li&gt;Yes&lt;/li&gt;
&lt;li&gt;Is it really hard to do?&lt;/li&gt;
&lt;li&gt;No&lt;/li&gt;
&lt;li&gt;Can I do it all with Python?&lt;/li&gt;
&lt;li&gt;Yes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's find out how!&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Advanced Typing: TypeVars, Generics, and Protocols</title><link href="https://pyvideo.org/pyohio-2022/advanced-typing-typevars-generics-and-protocols.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Chris Volny</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/advanced-typing-typevars-generics-and-protocols.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So we've heard about Python type annotations, but let's get into the
gritty bits around &lt;tt class="docutils literal"&gt;typing.TypeVar&lt;/tt&gt; bounding (inclusive polymorphism),
&lt;tt class="docutils literal"&gt;typing.Generic&lt;/tt&gt; (parameterized types), and &lt;tt class="docutils literal"&gt;typing.Protocol&lt;/tt&gt;
(interfaces) to learn how we can leverage types for structural subtyping
(static duck typing).&lt;/p&gt;
&lt;p&gt;Slides for this talk are available at:
&lt;a class="reference external" href="https://docs.google.com/presentation/d/1R2IzE-1I1otv1PXbXyR-JvOkBxdRAVDpXpFVmELRatA/edit?usp=drivesdk"&gt;https …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So we've heard about Python type annotations, but let's get into the
gritty bits around &lt;tt class="docutils literal"&gt;typing.TypeVar&lt;/tt&gt; bounding (inclusive polymorphism),
&lt;tt class="docutils literal"&gt;typing.Generic&lt;/tt&gt; (parameterized types), and &lt;tt class="docutils literal"&gt;typing.Protocol&lt;/tt&gt;
(interfaces) to learn how we can leverage types for structural subtyping
(static duck typing).&lt;/p&gt;
&lt;p&gt;Slides for this talk are available at:
&lt;a class="reference external" href="https://docs.google.com/presentation/d/1R2IzE-1I1otv1PXbXyR-JvOkBxdRAVDpXpFVmELRatA/edit?usp=drivesdk"&gt;https://docs.google.com/presentation/d/1R2IzE-1I1otv1PXbXyR-JvOkBxdRAVDpXpFVmELRatA/edit?usp=drivesdk&lt;/a&gt;&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Another Look at Python Types</title><link href="https://pyvideo.org/pyohio-2022/another-look-at-python-types.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Matt Land</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/another-look-at-python-types.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you want to write expressive and accessible Python for the people you
collaborate with, Python Types should definitely be in your arsenal.
There has been a significant evolution to Python’s support for types:
Newer, more elegant syntax is available to help your code better
communicate what its …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you want to write expressive and accessible Python for the people you
collaborate with, Python Types should definitely be in your arsenal.
There has been a significant evolution to Python’s support for types:
Newer, more elegant syntax is available to help your code better
communicate what its doing, and what your functions are returning. There
has never been a better time to try out typing, or take a deeper look at
newly available patterns.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Automating Excel with Python</title><link href="https://pyvideo.org/pyohio-2022/automating-excel-with-python.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Mike Driscoll</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/automating-excel-with-python.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn how to read and write Excel spreadsheets using Python. This talk
will show you not only how to read and write data in Excel, but also how
to format the data in Excel and give you the ability to make beautiful
spreadsheets programmatically.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Baby Steps Towards Your First FastAPI App</title><link href="https://pyvideo.org/pyohio-2022/baby-steps-towards-your-first-fastapi-app.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Shreya Khurana</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/baby-steps-towards-your-first-fastapi-app.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;FastAPI is a high-performing web framework used to build APIs in
Python3. It's &lt;a class="reference external" href="https://fastapi.tiangolo.com/"&gt;really fast&lt;/a&gt; and based on the OpenAPI standard, which
means - tada! No more manual swagger generation and validation!&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;In this talk, we'll go over some code snippets that involve:&lt;/div&gt;
&lt;div class="line"&gt;- creating simple endpoints with path and query …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;FastAPI is a high-performing web framework used to build APIs in
Python3. It's &lt;a class="reference external" href="https://fastapi.tiangolo.com/"&gt;really fast&lt;/a&gt; and based on the OpenAPI standard, which
means - tada! No more manual swagger generation and validation!&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;In this talk, we'll go over some code snippets that involve:&lt;/div&gt;
&lt;div class="line"&gt;- creating simple endpoints with path and query parameters&lt;/div&gt;
&lt;div class="line"&gt;- creating response body models based on Pydantic&lt;/div&gt;
&lt;div class="line"&gt;- logging&lt;/div&gt;
&lt;div class="line"&gt;- handling simple errors&lt;/div&gt;
&lt;div class="line"&gt;- generated swagger&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Talk code+contents &lt;a class="reference external" href="https://github.com/ShreyaKhurana/pyohio22/"&gt;here!&lt;/a&gt;&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Beyond Velocity: 3 Metrics for Engineering Team Success</title><link href="https://pyvideo.org/pyohio-2022/beyond-velocity-3-metrics-for-engineering-team-success.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Amanda Quint</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/beyond-velocity-3-metrics-for-engineering-team-success.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Velocity is an important metric to a lot of software teams, but in my
experience, it’s often been the most important metric to management —
often at the expense of missing out on the rest of the story. In this
talk, we'll explore Earned Business Value, Lead Time, and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Velocity is an important metric to a lot of software teams, but in my
experience, it’s often been the most important metric to management —
often at the expense of missing out on the rest of the story. In this
talk, we'll explore Earned Business Value, Lead Time, and Cumulative
Flow to examine how these metrics might deliver additional insight into
teams' development lifecycles.&lt;/p&gt;
&lt;p&gt;If you'd like to learn more about software metrics, I recommend these
two books:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.manning.com/books/software-development-metrics"&gt;Software Development Metrics&lt;/a&gt; by David Nicolette&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.manning.com/books/agile-metrics-in-action"&gt;Agile Metrics in Action&lt;/a&gt; by Christopher Davis&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Bootstrapping Your Local Python Environment</title><link href="https://pyvideo.org/pyohio-2022/bootstrapping-your-local-python-environment.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Calvin Hendryx-Parker</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/bootstrapping-your-local-python-environment.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You cracked open your brand new Mac or Linux dream machine and low and
behold, it has Python out-of-the-box and ready to roll… Or so you think?
Maybe you want to get started doing Python development on Windows and
see that you can grab Python easily from the Microsoft …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You cracked open your brand new Mac or Linux dream machine and low and
behold, it has Python out-of-the-box and ready to roll… Or so you think?
Maybe you want to get started doing Python development on Windows and
see that you can grab Python easily from the Microsoft Store. Should
you?&lt;/p&gt;
&lt;p&gt;There are simple, yet crucial, reminders that can differentiate an
expert developer from a hobbyist. This talk is ideal for developers who
want to optimize their system setups. Developers of all skill levels
often forget about the journey — and the troubles — they had when first
installing Python on their machines. Established, senior developers
might be able to install Python easily, but are they following the Zen
of Python when it comes to best practices for environment settings and
versioning?&lt;/p&gt;
&lt;p&gt;In this talk and live demo, we’ll discuss getting started with the end
in mind and making sure your development computer doesn’t become the
next superfund site (&lt;a class="reference external" href="https://xkcd.com/1987/"&gt;https://xkcd.com/1987/&lt;/a&gt;).&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Developers will learn:&lt;/div&gt;
&lt;div class="line"&gt;- the importance of abiding by the Zen of Python;&lt;/div&gt;
&lt;div class="line"&gt;- where (and how) to install Python on your machine;&lt;/div&gt;
&lt;div class="line"&gt;- three rules to follow when installing Python;&lt;/div&gt;
&lt;div class="line"&gt;- proper version management with pyenv;&lt;/div&gt;
&lt;div class="line"&gt;- which Python add-ons (e.g.: virtualenv, pipx, piptools, Docker) can
be used to make environments both repeatable and simple.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After this presentation, developers will know the best practices needed
to spend less time setting up and more time having fun with the code.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Build Your First Anomaly Detector in Power BI Using PyCaret</title><link href="https://pyvideo.org/pyohio-2022/build-your-first-anomaly-detector-in-power-bi-using-pycaret.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Cadey Moore</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/build-your-first-anomaly-detector-in-power-bi-using-pycaret.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Combining machine learning with business intelligence can have a
significant impact on the insights a business derives from its data.
PyCaret is a low-code, open-source machine learning library for Python,
and PyCaret can be integrated within Microsoft Power BI. This empowers
citizen data analysts and data scientists to add …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Combining machine learning with business intelligence can have a
significant impact on the insights a business derives from its data.
PyCaret is a low-code, open-source machine learning library for Python,
and PyCaret can be integrated within Microsoft Power BI. This empowers
citizen data analysts and data scientists to add machine learning to
their dashboards and reports within minutes. In this demonstration, I'll
give an overview of PyCaret and outline the different ways it can be
used to enrich your Power BI reports and dashboards. I'll detail the
necessary set-up steps to start using PyCaret’s machine learning
capabilities in Power BI. Finally, I'll demonstrate how to train and
implement an unsupervised anomaly detector in Power BI using PyCaret.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Building a Faster NetworkX-Like Library Using GraphBLAS</title><link href="https://pyvideo.org/pyohio-2022/building-a-faster-networkx-like-library-using-graphblas.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Erik Welch</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/building-a-faster-networkx-like-library-using-graphblas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is a call for engagement to help with
&lt;a class="reference external" href="https://github.com/python-graphblas/graphblas-algorithms"&gt;graphblas-algorithms&lt;/a&gt;!
We'll also have weird math and weird Python syntax,
so you can also come for the fun of getting your mind blown :)&lt;/p&gt;
&lt;p&gt;GraphBLAS is a mathematical abstraction layer designed to express many
graph algorithms in the language of linear …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is a call for engagement to help with
&lt;a class="reference external" href="https://github.com/python-graphblas/graphblas-algorithms"&gt;graphblas-algorithms&lt;/a&gt;!
We'll also have weird math and weird Python syntax,
so you can also come for the fun of getting your mind blown :)&lt;/p&gt;
&lt;p&gt;GraphBLAS is a mathematical abstraction layer designed to express many
graph algorithms in the language of linear algebra. It's weird and
written in C.
It is also &lt;em&gt;incredibly&lt;/em&gt; fast and powerful.
Graph analytics has applications across industries and sciences--more
than you might expect--and we want to get the power of GraphBLAS into
the hands of Pythonistas and practitioners.&lt;/p&gt;
&lt;p&gt;Our package, &lt;a class="reference external" href="https://github.com/python-graphblas/python-graphblas"&gt;python-graphblas&lt;/a&gt;, allows us to write GraphBLAS in
the style of math, not the C API.
Counterintuitively, by introducing some unconventional notation, we
were able to make our library more Pythonic.
However, &lt;a class="reference external" href="https://github.com/python-graphblas/python-graphblas"&gt;python-graphblas&lt;/a&gt; is still low-level, and most users
probably won't use it directly.
Instead, most people will probably want to use
&lt;a class="reference external" href="https://github.com/python-graphblas/graphblas-algorithms"&gt;graphblas-algorithms&lt;/a&gt;,
a library that looks like &lt;a class="reference external" href="https://networkx.org/"&gt;NetworkX&lt;/a&gt;, the most popular graph library
in Python.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/python-graphblas/graphblas-algorithms"&gt;graphblas-algorithms&lt;/a&gt; is young.
It is growing and has great potential, but it could use more help.
Who can help? Anybody who is interested! We have a well-defined
target--the &lt;a class="reference external" href="https://networkx.org/"&gt;NetworkX&lt;/a&gt; API and its tests--so
it's very easy to find things to do.
We actually find it fun like solving puzzles, and there is still a lot
of low-lying fruit.
If you don't know much about graphs or how to contribute to
open-source, this could be a great way to learn!&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Colors and Chords</title><link href="https://pyvideo.org/pyohio-2022/colors-and-chords.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Michael N</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/colors-and-chords.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn about a modular Python and Arduino based optical and musical
environment that you can progressively adopt and develop. Learn about
demonstrations of art, color theory, and music theory. See how users can
express a variety of colors, patterns, musical chords, rhythms, themes,
codes, and emotions. See how visitors …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn about a modular Python and Arduino based optical and musical
environment that you can progressively adopt and develop. Learn about
demonstrations of art, color theory, and music theory. See how users can
express a variety of colors, patterns, musical chords, rhythms, themes,
codes, and emotions. See how visitors can play along with great songs
using what we promote as the &amp;quot;world's easiest musical instrument&amp;quot;!&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Comprehending Comprehensions</title><link href="https://pyvideo.org/pyohio-2022/comprehending-comprehensions.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Rodrigo Girão Serrão</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/comprehending-comprehensions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this short talk, I will introduce all the key ideas necessary for you
to finally understand comprehensions: list, dict, and set
comprehensions, plus generator expressions.&lt;/p&gt;
&lt;p&gt;I will explain the &lt;strong&gt;key&lt;/strong&gt; argument in favour of list comprehensions and
I will show how to turn any suitable loop into its …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this short talk, I will introduce all the key ideas necessary for you
to finally understand comprehensions: list, dict, and set
comprehensions, plus generator expressions.&lt;/p&gt;
&lt;p&gt;I will explain the &lt;strong&gt;key&lt;/strong&gt; argument in favour of list comprehensions and
I will show how to turn any suitable loop into its equivalent
comprehension.&lt;/p&gt;
&lt;p&gt;By the time the talk is over, you'll be much closer to getting your
black belt in comprehension-fu.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;: you &lt;a class="reference external" href="https://gum.co/comprehending-comprehensions"&gt;can get the ebook “Comprehending Comprehensions”&lt;/a&gt;
and you can find the talk slides &lt;a class="reference external" href="https://github.com/mathspp/talks"&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Container Security and Their APIs</title><link href="https://pyvideo.org/pyohio-2022/container-security-and-their-apis.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Peter Bosch</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/container-security-and-their-apis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cloud-native application security involves balancing contradictory
requirements: the benefits of cloud services in accelerating
development, while at the same time handling security in an adverse
environment where there are more attack surfaces and opportunities for
data breaches. Unfortunately, many security tools do not address the
vulnerabilities of APIs that …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cloud-native application security involves balancing contradictory
requirements: the benefits of cloud services in accelerating
development, while at the same time handling security in an adverse
environment where there are more attack surfaces and opportunities for
data breaches. Unfortunately, many security tools do not address the
vulnerabilities of APIs that run in those containers. Cloud-native
applications expose many internal API services and developers are
increasingly using external API services for their applications. Both
internal and external API use expose the workload to new
vulnerabilities; more strongly, workload security and API security are
really two sides to the same coin.&lt;/p&gt;
&lt;p&gt;This talk specifically focuses on the security problems and
vulnerabilities exposed through APIs, and introduces Cisco’s Panoptica,
a tool for discovering, managing, and repairing these vulnerabilities,
and APIClarity, Panoptica’s open source core.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Deploy a Python API to the Cloud, Fast!</title><link href="https://pyvideo.org/pyohio-2022/deploy-a-python-api-to-the-cloud-fast.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Drake Pocsatko</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/deploy-a-python-api-to-the-cloud-fast.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;APIs are great and fun to develop, but how can you deploy and host one?
This talk will cover designing and deploying a simple Python REST API to
AWS using AWS Lambda and AWS API Gateway, using the AWS Serverless
Application Model as infrastructure as code to define the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;APIs are great and fun to develop, but how can you deploy and host one?
This talk will cover designing and deploying a simple Python REST API to
AWS using AWS Lambda and AWS API Gateway, using the AWS Serverless
Application Model as infrastructure as code to define the API specs and
deploy all of the code. All with ZERO server interactions!&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Doing Everything Data Without Leaving the Notebook: Programmatic Jupyter Notebooks</title><link href="https://pyvideo.org/pyohio-2022/doing-everything-data-without-leaving-the-notebook-programmatic-jupyter-notebooks.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Alex Zharichenko</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/doing-everything-data-without-leaving-the-notebook-programmatic-jupyter-notebooks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter notebooks is one of the most powerful tools for any data
scientist. It makes doing tasks like data wrangling, modeling,
visualizing really quick and easy for even people with not a lot of
experience in software engineering.&lt;/p&gt;
&lt;p&gt;But, a problem arises that to actually put that code into …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter notebooks is one of the most powerful tools for any data
scientist. It makes doing tasks like data wrangling, modeling,
visualizing really quick and easy for even people with not a lot of
experience in software engineering.&lt;/p&gt;
&lt;p&gt;But, a problem arises that to actually put that code into production
involves a lot of copying, pasting, and refactoring into order to be
used in a full fledged system. But what if we didn't have to leave the
notebook? What if the notebook could be the production ready code?&lt;/p&gt;
&lt;p&gt;This talk will giving an introduction to using the papermill library,
how it works, why it's powerful, and an actual use case of how I use
papermill in a pipeline that transforms raw data into clean tidy data,
and then runs multiple many notebooks to generate various visualizations
and statistics to be later used in a study.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Exploring Open Source Sprint Data via a Python Plotly Dashboard</title><link href="https://pyvideo.org/pyohio-2022/exploring-open-source-sprint-data-via-a-python-plotly-dashboard.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Reshama Shaikh</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/exploring-open-source-sprint-data-via-a-python-plotly-dashboard.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://plotly.com/python/"&gt;Plotly&lt;/a&gt; is a versatile python graphing library which lets us make
interactive graphs.&lt;/p&gt;
&lt;p&gt;In this talk, we will interpret open source sprint data presented using
a Python Plotly Dashboard. We will learn how the dashboard presentation
permits extended perspectives of data with multiple dimensions.&lt;/p&gt;
&lt;div class="section" id="resources"&gt;
&lt;h4&gt;Resources&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Video Tutorial: &lt;a class="reference external" href="https://youtu.be/b1gmh4W3H9A"&gt;Build a …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://plotly.com/python/"&gt;Plotly&lt;/a&gt; is a versatile python graphing library which lets us make
interactive graphs.&lt;/p&gt;
&lt;p&gt;In this talk, we will interpret open source sprint data presented using
a Python Plotly Dashboard. We will learn how the dashboard presentation
permits extended perspectives of data with multiple dimensions.&lt;/p&gt;
&lt;div class="section" id="resources"&gt;
&lt;h4&gt;Resources&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Video Tutorial: &lt;a class="reference external" href="https://youtu.be/b1gmh4W3H9A"&gt;Build a Plotly Dashboard with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub repo: &lt;a class="reference external" href="https://github.com/data-umbrella/data-umbrella-sprints-dashboard"&gt;data-umbrella-sprints-dashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Report: &lt;a class="reference external" href="https://blog.dataumbrella.org/data-umbrella-afme2-2021-scikit-learn-sprint-report"&gt;Data Umbrella AFME2 2021 scikit-learn Sprint Report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="extra-resources"&gt;
&lt;h5&gt;Extra Resources&lt;/h5&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Blog: &lt;a class="reference external" href="https://medium.com/p/6127ff6e0f80"&gt;Enriching Data Visualizations with Annotations in Plotly using
Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Video: &lt;a class="reference external" href="https://youtu.be/D2vsLy85rog"&gt;Enriching Data Visualizations with Annotations in Plotly&lt;/a&gt;
(PyOhio 2021)&lt;/li&gt;
&lt;li&gt;Video: &lt;a class="reference external" href="https://youtu.be/kMFvpmOaF2I"&gt;Animating Visualizations in Python with Plotly&lt;/a&gt; (PyGotham
2021)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Flappy Bird AI!</title><link href="https://pyvideo.org/pyohio-2022/flappy-bird-ai.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Anay Pant</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/flappy-bird-ai.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Flappy Bird is one of the most popular mobile games in the world. The
game consists of a bird that can flap up and down as it navigates
through the gaps in many pipes to receive a higher score.Through my
adventures with python and AI, I have been …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Flappy Bird is one of the most popular mobile games in the world. The
game consists of a bird that can flap up and down as it navigates
through the gaps in many pipes to receive a higher score.Through my
adventures with python and AI, I have been learning about genetic
algorithms and how they work. I used the flappy bird to expand my
knowledge of theory and applications of genetic algorithms, neural
networks, and much more. Let me take you on my journey of creating an AI
to play Flappy Bird!&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Go 3D with Plotly</title><link href="https://pyvideo.org/pyohio-2022/go-3d-with-plotly.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Sarah Cummings</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/go-3d-with-plotly.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A quick primer on the Plotly graph_objects packages to create meaningful
and engaging 3D visualizations. This session with start with a tidied
data set and walk through the steps of generating a 3D rendering of that
dataset.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>I Can't Believe It's Not Real Data! An Introduction into Synthetic Data</title><link href="https://pyvideo.org/pyohio-2022/i-cant-believe-its-not-real-data-an-introduction-into-synthetic-data.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/i-cant-believe-its-not-real-data-an-introduction-into-synthetic-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From Data Science and Machine Learning to Software Engineering and
testing, access to accurate data is one of the biggest bottlenecks
hindering development. Developers need accurate, relevant data to safely
experiment when building applications, machine learning models, testing,
etc. However, developers often run into issues gathering data, from a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From Data Science and Machine Learning to Software Engineering and
testing, access to accurate data is one of the biggest bottlenecks
hindering development. Developers need accurate, relevant data to safely
experiment when building applications, machine learning models, testing,
etc. However, developers often run into issues gathering data, from a
lack of data to the inability to access the data due to privacy
policies. But what if you could have instant access to an unlimited
supply of high-fidelity data that’s statistically accurate,
privacy-protected, and safe to share? This is where Synthetic Data comes
in. In this talk, you'll learn about Synthetic Data, the problems it
solves, and how to get started generating as much relevant data as you
want.&lt;/p&gt;
&lt;p&gt;In this talk, we'll discuss what Synthetic Data is, the benefits of
using Synthetic Data, and the efficacy of it. You'll see real-world
situations where Synthetic Data removes bias, augments data sets, and
makes once private data easily shareable while still protecting the
privacy of the initial data set.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>I Have to Confess, I Still Love Pandas</title><link href="https://pyvideo.org/pyohio-2022/i-have-to-confess-i-still-love-pandas.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Cheuk Ting Ho</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/i-have-to-confess-i-still-love-pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is the first Python library that I learned to use. It is used by
data scientists to manage, transform and inspect data. As more and more
open-source tools appear, it seems the spotlight has shifted and I would
love to shine some light on this tool that all …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is the first Python library that I learned to use. It is used by
data scientists to manage, transform and inspect data. As more and more
open-source tools appear, it seems the spotlight has shifted and I would
love to shine some light on this tool that all should know.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Intro to Unit Testing and Continuous Integration</title><link href="https://pyvideo.org/pyohio-2022/intro-to-unit-testing-and-continuous-integration.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Mariatta</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/intro-to-unit-testing-and-continuous-integration.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Having unit tests and continuous integration (CI) as part of your
development are considered best practises. But how do these things work?
In this talk, we will cover the benefits of writing unit tests and how
to get started with it in Python. Then, we'll step it up running …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Having unit tests and continuous integration (CI) as part of your
development are considered best practises. But how do these things work?
In this talk, we will cover the benefits of writing unit tests and how
to get started with it in Python. Then, we'll step it up running tests
as part CI. And that's not all! CI is not just about running tests, but
for other things as well, like code quality checks, and even building
and generating documentation.&lt;/p&gt;
&lt;p&gt;Presentation slides:
&lt;a class="reference external" href="https://speakerdeck.com/mariatta/intro-to-unit-testing-and-continuous-integration-20264b4c-2777-4736-9639-5810098da5a0"&gt;https://speakerdeck.com/mariatta/intro-to-unit-testing-and-continuous-integration-20264b4c-2777-4736-9639-5810098da5a0&lt;/a&gt;&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Introducing Automated Machine Learning with Python and Azure</title><link href="https://pyvideo.org/pyohio-2022/introducing-automated-machine-learning-with-python-and-azure.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Matt Eland</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/introducing-automated-machine-learning-with-python-and-azure.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this short talk we'll explore what a sample usage of the Azure ML
Python SDK looks like and how you can use Python and Azure Machine
Learning Studio to track and version datasets and machine learning
models, discover new models that perform well with your data, evaluate
those …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this short talk we'll explore what a sample usage of the Azure ML
Python SDK looks like and how you can use Python and Azure Machine
Learning Studio to track and version datasets and machine learning
models, discover new models that perform well with your data, evaluate
those models, and deploy them as a web service - all without having to
leave your IDE.&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;For additional talk resources, see&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="https://MattEland.dev/AzureMLPythonSDK"&gt;https://MattEland.dev/AzureMLPythonSDK&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Jupyter for DevOps</title><link href="https://pyvideo.org/pyohio-2022/jupyter-for-devops.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Moshe Zadka</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/jupyter-for-devops.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter is usually thought of as a tool for data scientists. Exploration
and knowledge sharing are equally important for DevOps and automation,
which are Jupyter's primary strengths.&lt;/p&gt;
&lt;p&gt;The talk will cover an example of using SSH-based automation using
Paramiko, Cloud automation using AWS/Boto3, and source control
automation using …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter is usually thought of as a tool for data scientists. Exploration
and knowledge sharing are equally important for DevOps and automation,
which are Jupyter's primary strengths.&lt;/p&gt;
&lt;p&gt;The talk will cover an example of using SSH-based automation using
Paramiko, Cloud automation using AWS/Boto3, and source control
automation using GitLab. Some best practices will be covered like how to
share notebooks securely and usefully.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>make python devex: Towards Clone to Red-Green-Refactor in One Command with a 45+-Year-Old Tool</title><link href="https://pyvideo.org/pyohio-2022/make-python-devex-towards-clone-to-red-green-refactor-in-one-command-with-a-45-year-old-tool.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Colin Dean</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/make-python-devex-towards-clone-to-red-green-refactor-in-one-command-with-a-45-year-old-tool.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Getting productive with a Python codebase, especially when you're
unfamiliar with the ecosystem, can be daunting. Building a cohesive
strategy with widely-available tooling shortens the time-to-productivity
for new contributors to projects internal and open-source, demonstrating
that the maintainers care about onboarding and the developer experience.
I'll give an introduction …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Getting productive with a Python codebase, especially when you're
unfamiliar with the ecosystem, can be daunting. Building a cohesive
strategy with widely-available tooling shortens the time-to-productivity
for new contributors to projects internal and open-source, demonstrating
that the maintainers care about onboarding and the developer experience.
I'll give an introduction to how my team solved this problem using a
46-year-old program and push the audience in a direction toward better
developer experiences starting at the greatest common denominator of
tooling.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>More ORM Than Good: Stop Not Writing SQL</title><link href="https://pyvideo.org/pyohio-2022/more-orm-than-good-stop-not-writing-sql.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Catherine Devlin</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/more-orm-than-good-stop-not-writing-sql.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You've spent too much time learning tool after tool to avoid writing
SQL, when there's a really good way to interact with databases; it's
called SQL. Just use it! But not alone; there's a class of simple tools
that help you keep your SQL well-organized and tie it cleanly …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You've spent too much time learning tool after tool to avoid writing
SQL, when there's a really good way to interact with databases; it's
called SQL. Just use it! But not alone; there's a class of simple tools
that help you keep your SQL well-organized and tie it cleanly into your
Python code:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;For database migrations, Agnostic&lt;/li&gt;
&lt;li&gt;Instead of an ORM, PugSQL&lt;/li&gt;
&lt;li&gt;For ETL transformations, dbt&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>OpenAPI Driven Development</title><link href="https://pyvideo.org/pyohio-2022/openapi-driven-development.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Olmo Maldonado</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/openapi-driven-development.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a service owner, one needs to provide strong guarantees for the
behavior of their APIs. To avoid eroding developer trust in your
service, we show how we guarantee strong contracts using &lt;a class="reference external" href="https://spec.openapis.org/oas/v3.1.0"&gt;OpenAPI&lt;/a&gt;
while avoiding extraneous overhead for service owners. This talk shows
how to autogenerate OpenAPI schemas, prevent …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a service owner, one needs to provide strong guarantees for the
behavior of their APIs. To avoid eroding developer trust in your
service, we show how we guarantee strong contracts using &lt;a class="reference external" href="https://spec.openapis.org/oas/v3.1.0"&gt;OpenAPI&lt;/a&gt;
while avoiding extraneous overhead for service owners. This talk shows
how to autogenerate OpenAPI schemas, prevent breaking changes
automatically with your CI/CD, and how we improved the delivery cycle
time for our teams.&lt;/p&gt;
&lt;p&gt;At &lt;a class="reference external" href="https://zapier.com"&gt;Zapier&lt;/a&gt;, we connect over 5,000 of your favorite online apps
together. We've learned how to produce high-quality APIs with over 10
years of experience integrating with APIs. We're applying these best
practices as we break out our services from our Django monolith.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Paginated APIs x Python</title><link href="https://pyvideo.org/pyohio-2022/paginated-apis-x-python.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Azan Bin Zahid</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/paginated-apis-x-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While working with making requests to external RESTful APIs using
Python, we can use just one line to get data. What if the endpoints are
paginated and have limitations as well? Developers may find it hard to
code for paginated results, store them and/or add throttling between
consecutive …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While working with making requests to external RESTful APIs using
Python, we can use just one line to get data. What if the endpoints are
paginated and have limitations as well? Developers may find it hard to
code for paginated results, store them and/or add throttling between
consecutive requests.&lt;/p&gt;
&lt;p&gt;This talk will cover some useful and robust ways to deal efficiently
with range paginated APIs patterns using Python.&lt;/p&gt;
&lt;p&gt;Read more: &lt;a class="reference external" href="https://github.com/azanbinzahid/paginated-apis-pyohio-2022"&gt;https://github.com/azanbinzahid/paginated-apis-pyohio-2022&lt;/a&gt;&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Paving an Easier Path to Your Next Tech Job</title><link href="https://pyvideo.org/pyohio-2022/paving-an-easier-path-to-your-next-tech-job.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Jason Wattier</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/paving-an-easier-path-to-your-next-tech-job.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's face it: finding a job is not just about what you know but who you
know. Good networking skills are critical for finding your next tech
job, whether you're looking internally or switching companies, and
whether you're an industry veteran or new to tech. I'll share successful
strategies …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's face it: finding a job is not just about what you know but who you
know. Good networking skills are critical for finding your next tech
job, whether you're looking internally or switching companies, and
whether you're an industry veteran or new to tech. I'll share successful
strategies I've learned the hard way that will help you land awesome
opportunities by building relationships with the right people.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Processing Large Data with Pandas</title><link href="https://pyvideo.org/pyohio-2022/processing-large-data-with-pandas.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Evelyn J. Boettcher</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/processing-large-data-with-pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Data sets can get large quickly. You can quickly go from looking at: a
few 100 lines and a handful of columns to a million lines and with
hundreds of columns.&lt;/div&gt;
&lt;div class="line"&gt;Python Pandas (with smart use of Categories) can enable one to reduce
the size of ones data in …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Data sets can get large quickly. You can quickly go from looking at: a
few 100 lines and a handful of columns to a million lines and with
hundreds of columns.&lt;/div&gt;
&lt;div class="line"&gt;Python Pandas (with smart use of Categories) can enable one to reduce
the size of ones data in memory by up to 90%. However, careless use
can increase memory use. Learn when to use categories to save memory.
&lt;a class="reference external" href="https://www.evelynboettcher.com/pyohio-pandas#/"&gt;Slides located here&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>PyOhio 2022 Closing Remarks</title><link href="https://pyvideo.org/pyohio-2022/pyohio-2022-closing-remarks.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Dave Forgac</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/pyohio-2022-closing-remarks.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thank you to everyone who helped make PyOhio 2022 a success!&lt;/p&gt;
&lt;p&gt;Talks are done, but you can stick around for:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://chat.pyohio.org"&gt;Chat on Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pyohio.org/shirts"&gt;T-Shirts&lt;/a&gt; – through August 4&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pyohio.org/volunteer"&gt;Volunteering&lt;/a&gt; for next year&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>PyOhio 2022 Opening Remarks</title><link href="https://pyvideo.org/pyohio-2022/pyohio-2022-opening-remarks.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Dave Forgac</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/pyohio-2022-opening-remarks.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Welcome to PyOhio!&lt;/p&gt;
&lt;p&gt;Here are some important links for you to check out before we get
started:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.pyohio.org/conduct"&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://chat.pyohio.org"&gt;Chat on Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pyohio.org/shirts"&gt;T-Shirts&lt;/a&gt; – available through August 4!&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pyohio.org/volunteer"&gt;Volunteering&lt;/a&gt; for next year&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Remote Collaboration: How to Build Human Connection Across Pixels</title><link href="https://pyvideo.org/pyohio-2022/remote-collaboration-how-to-build-human-connection-across-pixels.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Rainu Ittycheriah</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/remote-collaboration-how-to-build-human-connection-across-pixels.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thesis/Description: At the core of all learning is human connection and
vulnerability. We have to encourage folks to ease the anxiety and fear
with imposter syndrome by knowing each other well. This leads to better
code, better culture, and better products by intentional collaboration
and learning.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Run-JS: A New Library for Running JavaScript Modules in Python</title><link href="https://pyvideo.org/pyohio-2022/run-js-a-new-library-for-running-javascript-modules-in-python.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Daniel Dufour</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/run-js-a-new-library-for-running-javascript-modules-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/danieljdufour/run-js"&gt;run-js&lt;/a&gt; is a new Python package that enables users to easily run
JavaScript modules in Python without breaking from the familiar Pythonic
syntax. With inspiration from &lt;a class="reference external" href="https://github.com/amoffat/sh"&gt;sh&lt;/a&gt;, it wraps the module instance
intercepting requests. This talk will go over cool examples on how to
use run-js and also dive …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/danieljdufour/run-js"&gt;run-js&lt;/a&gt; is a new Python package that enables users to easily run
JavaScript modules in Python without breaking from the familiar Pythonic
syntax. With inspiration from &lt;a class="reference external" href="https://github.com/amoffat/sh"&gt;sh&lt;/a&gt;, it wraps the module instance
intercepting requests. This talk will go over cool examples on how to
use run-js and also dive into its internals, explain sys.modules, dunder
methods, and how to pipe data between JS and Python processes.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Simplicity and Fun: Learning with CircuitPython</title><link href="https://pyvideo.org/pyohio-2022/simplicity-and-fun-learning-with-circuitpython.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Kattni Rembor</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/simplicity-and-fun-learning-with-circuitpython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://circuitpython.org"&gt;CircuitPython&lt;/a&gt; is an open source version of Python, designed to run on
tiny computers called microcontrollers. It has, from the start, focused
on being beginner friendly and lowering the barrier to entry for new
folks into programming and electronics. This focus has led to creating a
language that is …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://circuitpython.org"&gt;CircuitPython&lt;/a&gt; is an open source version of Python, designed to run on
tiny computers called microcontrollers. It has, from the start, focused
on being beginner friendly and lowering the barrier to entry for new
folks into programming and electronics. This focus has led to creating a
language that is considered, by educators, to be an excellent option for
teaching in various environments, including university and high school
classes, code camps, and more. CircuitPython has accomplished this in
multiple ways, including: easy access to &lt;a class="reference external" href="https://learn.adafruit.com/category/circuitpython"&gt;thorough documentation&lt;/a&gt;,
building a welcoming and supportive &lt;a class="reference external" href="https://adafru.it/discord"&gt;community&lt;/a&gt;, extensive &lt;a class="reference external" href="https://docs.circuitpython.org/projects/bundle/en/latest/drivers.html"&gt;hardware
support&lt;/a&gt;, making it simple to &lt;a class="reference external" href="https://learn.adafruit.com/welcome-to-circuitpython"&gt;get started&lt;/a&gt;, and, most importantly,
making learning fun! Discover how and why CircuitPython is a great
choice for education.&lt;/p&gt;
&lt;p&gt;Slides and talk resources can be found &lt;a class="reference external" href="https://github.com/kattni/PyOhio2022"&gt;here&lt;/a&gt;.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>That Belongs in a Table: Migrating Data from JSON to SQL</title><link href="https://pyvideo.org/pyohio-2022/that-belongs-in-a-table-migrating-data-from-json-to-sql.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Jay Miller</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/that-belongs-in-a-table-migrating-data-from-json-to-sql.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I recently wanted to migrate data from a NoSQL Datastore to a relational
data structure. Let's just say the process was quite the adventure.
Let's look at handling mildly relational data how we were able to move
it from json-based to database.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>The PyOhio 2022 Mix Tape</title><link href="https://pyvideo.org/pyohio-2022/the-pyohio-2022-mix-tape.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Mike Pirnat</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/the-pyohio-2022-mix-tape.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you couldn't get enough of the sweet, sweet hold music from PyOhio
2022, then you'll love this bonus video -- all of the 2022 tunes in a
tasty, seamless mix! All songs are curated from the YouTube audio
library. Turn up the volume, turn down the lights, and remember …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you couldn't get enough of the sweet, sweet hold music from PyOhio
2022, then you'll love this bonus video -- all of the 2022 tunes in a
tasty, seamless mix! All songs are curated from the YouTube audio
library. Turn up the volume, turn down the lights, and remember when you
spent a sunny Saturday learning about all things Python.&lt;/p&gt;
&lt;p&gt;Track list:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;0:00:05: &amp;quot;Hello 6am&amp;quot; - Mylar Melodies&lt;/li&gt;
&lt;li&gt;0:01:46: &amp;quot;New Morning&amp;quot; - TrackTribe&lt;/li&gt;
&lt;li&gt;0:05:04: &amp;quot;Icelandic Arpeggios&amp;quot; - DivKid&lt;/li&gt;
&lt;li&gt;0:07:50: &amp;quot;RhythmOrganyzer (PyOhio Remix)&amp;quot; - Noir et Blanc Vie&lt;/li&gt;
&lt;li&gt;0:11:47: &amp;quot;Straight Fuse&amp;quot; - French Fuse&lt;/li&gt;
&lt;li&gt;0:13:20: &amp;quot;Tropic Fuse&amp;quot; - French Fuse&lt;/li&gt;
&lt;li&gt;0:15:06: &amp;quot;Nine Lives&amp;quot; - Unicorn Heads&lt;/li&gt;
&lt;li&gt;0:20:08: &amp;quot;Instant Crush&amp;quot; - Corbyn Kites&lt;/li&gt;
&lt;li&gt;0:22:01: &amp;quot;Indigo&amp;quot; - Eveningland&lt;/li&gt;
&lt;li&gt;0:23:28: &amp;quot;Juno in the Space Maze&amp;quot; - Loopop&lt;/li&gt;
&lt;li&gt;0:24:51: &amp;quot;Game Plan&amp;quot; - Bad Snacks&lt;/li&gt;
&lt;li&gt;0:26:32: &amp;quot;Morpho Diana&amp;quot; - Rachael K Collier&lt;/li&gt;
&lt;li&gt;0:28:59: &amp;quot;Far Away&amp;quot; - MK2&lt;/li&gt;
&lt;li&gt;0:30:41: &amp;quot;Lilac Skies&amp;quot; - Corbyn Kites&lt;/li&gt;
&lt;li&gt;0:32:26: &amp;quot;Out on My Skateboard&amp;quot; - Mini Vandals&lt;/li&gt;
&lt;li&gt;0:35:31: &amp;quot;Sky Scraper&amp;quot; - Geographer&lt;/li&gt;
&lt;li&gt;0:38:42: &amp;quot;Cologne 1983&amp;quot; - Josh Kirsch / Media Right Productions&lt;/li&gt;
&lt;li&gt;0:40:25: &amp;quot;Karma Cat&amp;quot; - Dyalla&lt;/li&gt;
&lt;li&gt;0:42:49: &amp;quot;Jungles&amp;quot; - Text Me Records / Bobby Renz&lt;/li&gt;
&lt;li&gt;0:44:38: &amp;quot;Hiking&amp;quot; - Silent Partner&lt;/li&gt;
&lt;li&gt;0:46:21: &amp;quot;Nadie Es Ilegal&amp;quot; - Ashley Shadow&lt;/li&gt;
&lt;li&gt;0:48:47: &amp;quot;So Long Analog&amp;quot; - Noir et Blanc Vie&lt;/li&gt;
&lt;li&gt;0:51:11: &amp;quot;Newsroom&amp;quot; - Riot&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Visual Studio Code: The Ultimate Python Developer Environment</title><link href="https://pyvideo.org/pyohio-2022/visual-studio-code-the-ultimate-python-developer-environment.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Douglas Starnes</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/visual-studio-code-the-ultimate-python-developer-environment.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since its release, Visual Studio Code has become one of the most popular
developer tools in the world. And it has not forgotten about Python. In
fact, out of the over 30,000 extensions available for VS Code, 3 of the
top 4 are Python extensions. This session will …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since its release, Visual Studio Code has become one of the most popular
developer tools in the world. And it has not forgotten about Python. In
fact, out of the over 30,000 extensions available for VS Code, 3 of the
top 4 are Python extensions. This session will survey the features of VS
Code and those extensions. Viewers will leave with the facts needed to
maximize the potential of incorporating VS Code into the development
environment.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>What Is a Reasonable Percentage for Code Coverage and Why Is It 100%?</title><link href="https://pyvideo.org/pyohio-2022/what-is-a-reasonable-percentage-for-code-coverage-and-why-is-it-100.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Jürgen Gmach</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/what-is-a-reasonable-percentage-for-code-coverage-and-why-is-it-100.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever thought about how much code coverage is good enough?&lt;/p&gt;
&lt;p&gt;Is 60% good or good enough? 80% is great, right?&lt;/p&gt;
&lt;p&gt;But what about 100%? Impossible? Too hard to reach? Not worth the
effort?&lt;/p&gt;
&lt;p&gt;Join me in finding the right number.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Your Python Multi-Tool: Four Built-Ins and a Module</title><link href="https://pyvideo.org/pyohio-2022/your-python-multi-tool-four-built-ins-and-a-module.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Craig Lang</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/your-python-multi-tool-four-built-ins-and-a-module.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Your Python Multi-tool&lt;/strong&gt;: &lt;em&gt;Four built-ins and a module&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There are four built-in functions and a module that makeup a &amp;quot;Python
Multi-tool&amp;quot;.&lt;/p&gt;
&lt;p&gt;help, dir, type, id, and inspect&lt;/p&gt;
&lt;p&gt;Whether you are new to Python or have years of experience, these five
tools are very helpful when learning something new in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Your Python Multi-tool&lt;/strong&gt;: &lt;em&gt;Four built-ins and a module&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There are four built-in functions and a module that makeup a &amp;quot;Python
Multi-tool&amp;quot;.&lt;/p&gt;
&lt;p&gt;help, dir, type, id, and inspect&lt;/p&gt;
&lt;p&gt;Whether you are new to Python or have years of experience, these five
tools are very helpful when learning something new in the language. Easy
to use and often overlooked for use by tutorials, these are powerful
allies that will be (re)introduced to you in this talk.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry></feed>