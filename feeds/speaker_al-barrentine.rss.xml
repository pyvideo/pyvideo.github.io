<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 18 Jul 2012 00:00:00 +0000</lastBuildDate><item><title>PyGotham 2011: Machine Learning for Web Developers</title><link>https://pyvideo.org/pygotham-2011/pygotham-2011--machine-learning-for-web-developer.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Machine learning deals with a class of algorithms which improve and
evolve as they process more data. It has wide-ranging applications in
recommendations, search, spam/fraud detection, facial recognition and
other areas. The algorithms themselves will be covered but the real
focus of this class is on how to use said algorithms in the web
applications we work on every day. I&amp;amp;aposll try to keep the math and
notation relatively light. Most of the algorithms you&amp;amp;aposll need to get
started with machine learning are implemented for you in the various
libraries. They comprise the &amp;quot;science&amp;quot; of machine learning and I hope
you will decide to learn it, but mastering that material is a
significant commitment of your time and mental energy (and has some
additional prerequisites including a strong understanding of linear
algebra). This class will focus on the &amp;quot;art&amp;quot; of machine learning, how to
think about machine learning algorithms and integrate them into your web
application.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Al Barrentine</dc:creator><pubDate>Fri, 16 Sep 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-09-16:pygotham-2011/pygotham-2011--machine-learning-for-web-developer.html</guid><category>machine learning</category><category>pygotham</category><category>pygotham2011</category><category>web</category></item><item><title>SciPy + MapReduce with Disco</title><link>https://pyvideo.org/scipy-2012/scipy-mapreduce-with-disco.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MapReduce has become one of two dominant paradigms in distributed
computing (along with MPI). Yet many times, implementing an algorithm as
a MapReduce job - especially in Python - forces us to sacrifice
efficiency (BLAS routines, etc.) in favor of data parallelism.&lt;/p&gt;
&lt;p&gt;In my work, which involves writing distributed learning algorithms for
processing terabytes of Twitter data at SocialFlow, I've come to
advocate a form of &amp;quot;vectorized MapReduce&amp;quot; which integrates efficient
numerical libraries like numpy/scipy into the MapReduce setting,
yielding both faster per-machine performance and reduced I/O, which is
often a major bottleneck. I'll also highlight some features of Disco (a
Python/Erlang MapReduce implementation from Nokia) which make it a very
compelling choice for writing scientific MapReduce jobs in Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Al Barrentine</dc:creator><pubDate>Wed, 18 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-18:scipy-2012/scipy-mapreduce-with-disco.html</guid><category>hpc</category></item></channel></rss>