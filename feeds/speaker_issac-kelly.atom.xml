<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_issac-kelly.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-07-27T00:00:00+00:00</updated><entry><title>PyOhio 2011: Consuming Web APIs with Python</title><link href="https://pyvideo.org/pyohio-2011/pyohio-2011--consuming-web-apis-with-python.html" rel="alternate"></link><published>2011-07-30T00:00:00+00:00</published><updated>2011-07-30T00:00:00+00:00</updated><author><name>Issac Kelly</name></author><id>tag:pyvideo.org,2011-07-30:pyohio-2011/pyohio-2011--consuming-web-apis-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Consuming Web APIs with Python&lt;/p&gt;
&lt;p&gt;Presented by Issac Kelly&lt;/p&gt;
&lt;p&gt;Issac will go over the basics of HTTP apis, what to look for, basic
authorization methods, and how to interface with them in your python
scripts. There will not be cake.&lt;/p&gt;
</summary><category term="pyohio"></category><category term="pyohio2011"></category><category term="webapis"></category></entry><entry><title>PyOhio 2011: Creating Web APIs that are a joy to use</title><link href="https://pyvideo.org/pyohio-2011/pyohio-2011--creating-web-apis-that-are-a-joy-to-.html" rel="alternate"></link><published>2011-07-30T00:00:00+00:00</published><updated>2011-07-30T00:00:00+00:00</updated><author><name>Issac Kelly</name></author><id>tag:pyvideo.org,2011-07-30:pyohio-2011/pyohio-2011--creating-web-apis-that-are-a-joy-to-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Creating Web APIs that are a joy to use&lt;/p&gt;
&lt;p&gt;Presented by Issac Kelly&lt;/p&gt;
&lt;p&gt;Issac is an avid API consumer. He&amp;amp;aposll cover how to make an API that
is not terrible. This is apparently very difficult to do, and many
anti-patterns will be shown. No care will be taken to protect the
guilty. This talk is not as focused on Python, as it is on creating Web
APIs, and an understanding of HTTP is assumed.&lt;/p&gt;
</summary><category term="api"></category><category term="http"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="webapi"></category></entry><entry><title>Python, Hardware, Networks and your toolbox for Interactive Art.</title><link href="https://pyvideo.org/pyohio-2014/python-hardware-networks-and-your-toolbox-for-i.html" rel="alternate"></link><published>2014-07-27T00:00:00+00:00</published><updated>2014-07-27T00:00:00+00:00</updated><author><name>Issac Kelly</name></author><id>tag:pyvideo.org,2014-07-27:pyohio-2014/python-hardware-networks-and-your-toolbox-for-i.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Issac builds art and tells stories professionally with hardware and
software. With an extraordinary project come extraordinary challenges.
Having the right toolkit keeps you nimble enough to forge into the
unknown with confidence. In this talk we'll explore a contrived art
project with hardware, software, and networks, built with Python.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Building APIs in Django with Tastypie</title><link href="https://pyvideo.org/djangocon-us-2011/djangocon-2011--building-apis-in-django-with-tast.html" rel="alternate"></link><published>2011-09-05T00:00:00+00:00</published><updated>2011-09-05T00:00:00+00:00</updated><author><name>Issac Kelly</name></author><id>tag:pyvideo.org,2011-09-05:djangocon-us-2011/djangocon-2011--building-apis-in-django-with-tast.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building APIs in Django with Tastypie&lt;/p&gt;
&lt;p&gt;Issac Kelly&lt;/p&gt;
&lt;p&gt;Tastypie is one of a couple of frameworks for building APIs with Django.
Issac will go over some of the reasons you might pick Tastypie, and how
to implement a Tastypie on top of an existing Django project.&lt;/p&gt;
</summary><category term="djangocon"></category><category term="djangocon2011"></category><category term="tastypie"></category></entry><entry><title>Teaching Django to Comrades</title><link href="https://pyvideo.org/djangocon-us-2011/djangocon-2011--teaching-django-to-comrades.html" rel="alternate"></link><published>2011-09-05T00:00:00+00:00</published><updated>2011-09-05T00:00:00+00:00</updated><author><name>Issac Kelly</name></author><id>tag:pyvideo.org,2011-09-05:djangocon-us-2011/djangocon-2011--teaching-django-to-comrades.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Teaching Django to Comrades&lt;/p&gt;
&lt;p&gt;Presented by Issac Kelly&lt;/p&gt;
&lt;p&gt;Inevitably you're going to run into somebody who wants to learn Django,
or maybe both Python and Django. This talk will help you make it less
painful for them.&lt;/p&gt;
</summary><category term="basic"></category><category term="djangocon"></category><category term="djangocon2011"></category><category term="learning"></category></entry><entry><title>Reverse Engineering the Internet of Things</title><link href="https://pyvideo.org/pycon-us-2013/reverse-engineering-the-internet-of-things.html" rel="alternate"></link><published>2013-03-17T00:00:00+00:00</published><updated>2013-03-17T00:00:00+00:00</updated><author><name>Issac Kelly</name></author><id>tag:pyvideo.org,2013-03-17:pycon-us-2013/reverse-engineering-the-internet-of-things.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This year I've reverse engineered two HTTP/Web enabled devices and
written python clients for them. The Belkin Wemo [1] and the Philips Hue
[2]. My poster session will cover methods materials and work.&lt;/p&gt;
&lt;p&gt;[1] &lt;a class="reference external" href="http://www.issackelly.com/blog/2012/08/04/wemo-api-hacking/"&gt;http://www.issackelly.com/blog/2012/08/04/wemo-api-hacking/&lt;/a&gt; [2]
&lt;a class="reference external" href="http://www.issackelly.com/blog/2012/11/10/philips-hue-api-hacking/"&gt;http://www.issackelly.com/blog/2012/11/10/philips-hue-api-hacking/&lt;/a&gt;&lt;/p&gt;
</summary><category term="poster"></category></entry></feed>