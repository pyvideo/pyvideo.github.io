<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - ElenaWilliams</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_elenawilliams.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2020-09-05T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Graph Databases will change your (freakin') life</title><link href="https://pyvideo.org/pycon-au-2020/graph-databases-will-change-your-freakin-life.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Elena Williams</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/graph-databases-will-change-your-freakin-life.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Elena Williams&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/A878CA"&gt;https://2020.pycon.org.au/program/A878CA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Relational and NoSQL DBs have ruled the roost for a couple of decades now, but in real life there's more to data than just tables or key-pairs. Graph DBMS technology has been coming along for the last decade-or-so and is â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Elena Williams&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/A878CA"&gt;https://2020.pycon.org.au/program/A878CA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Relational and NoSQL DBs have ruled the roost for a couple of decades now, but in real life there's more to data than just tables or key-pairs. Graph DBMS technology has been coming along for the last decade-or-so and is now quite mature. Everyone wants one, just ask a Fortune 500 company.&lt;/p&gt;
&lt;p&gt;I mean: why have a table when you can have a knowledge graph? Why not be able to whip up a recommendations engine (or indeed a fraud detector) in a few minutes?&lt;/p&gt;
&lt;p&gt;Graph databases store data in Graphs -- that is NOT chart-visualisation nor syntax standard on API layers (NOT a GraphQL talk), but per the paper written by the mathematician Euler in 1736: those data structures which are &amp;quot;nodes&amp;quot; connected by &amp;quot;relationships&amp;quot;.&lt;/p&gt;
&lt;p&gt;This talk will be a primer on what this all means, how they work and when they're a good idea to use. There will also be a demonstration and discussion about how to kick off with graph DBs driven by python, specifically for people who are familiar with conventional databases, but have never used Graph databases before, but might be curious.&lt;/p&gt;
&lt;p&gt;See code sample: &lt;a class="reference external" href="https://github.com/elena/graph-fun"&gt;https://github.com/elena/graph-fun&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 14:05:00 2020 at Python 2&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="ElenaWilliams"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry></feed>