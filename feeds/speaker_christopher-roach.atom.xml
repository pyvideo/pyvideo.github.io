<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_christopher-roach.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-11-27T00:00:00+00:00</updated><entry><title>R for Pythonistas</title><link href="https://pyvideo.org/pydata-new-york-city-2017/r-for-pythonistas.html" rel="alternate"></link><published>2017-11-27T00:00:00+00:00</published><updated>2017-11-27T00:00:00+00:00</updated><author><name>Christopher Roach</name></author><id>tag:pyvideo.org,2017-11-27:pydata-new-york-city-2017/r-for-pythonistas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Whether you're a seasoned data scientist, or someone brand new to the field, there's no denying that R is one of the most popular tools for working with data. Even if you're happy using Python for all your day-to-day work, R can still be a powerful companion for quickly interacting with data, and this talk will to get you up to speed on this venerable tool in no time.&lt;/p&gt;
</summary></entry><entry><title>Visualizing Geographic Data With Python</title><link href="https://pyvideo.org/pydata-san-francisco-2016/visualizing-geographic-data-with-python.html" rel="alternate"></link><published>2016-08-24T00:00:00+00:00</published><updated>2016-08-24T00:00:00+00:00</updated><author><name>Christopher Roach</name></author><id>tag:pyvideo.org,2016-08-24:pydata-san-francisco-2016/visualizing-geographic-data-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData SF 2016&lt;/p&gt;
&lt;p&gt;The statistician George Box once wrote that “all models are wrong, but some are useful”; the same could be said for maps. In this talk, we’ll discuss the problems that arise when creating 2-dimensional representations of our world. We'll then see how to create data-rich maps using Python, matplotlib, and the basemap toolkit. we'll also see how to create maps for the web using the Folium library.&lt;/p&gt;
&lt;p&gt;Maps have been such a mainstay of our lives for so long now that it's hard to imagine just how complex it is to create one. Keep in mind though, the earth is a 3-dimensional spherical object, so we're stuck with the problem of &amp;quot;projecting&amp;quot; the world onto a 2-dimensional surface. What this means is that every map you've ever looked at was wrong in some way.&lt;/p&gt;
&lt;p&gt;In this talk, we’ll discuss what a map projection is, and why the Mercator projection, the map you use everyday, is both incorrect and unfair, but useful nonetheless. We’ll also see some ways that we can create maps using Python. We’ll first see how to create data-rich maps using the matplotlib library with the basemap toolkit. We’ll then see how to create maps for the web using libraries like Folium, the python interface to Leaflet.js.&lt;/p&gt;
&lt;p&gt;By the end of this talk, you should have a general understanding of the problems surrounding the creation of effective maps. You should also feel comfortable picking out a proper map projection and plotting data on it using a multitude of techniques and the Python language.&lt;/p&gt;
</summary></entry><entry><title>Matplotlib: up and running</title><link href="https://pyvideo.org/pycon-ca-2015/matplotlib-up-and-running-christopher-roach.html" rel="alternate"></link><published>2015-11-07T00:00:00+00:00</published><updated>2015-11-07T00:00:00+00:00</updated><author><name>Christopher Roach</name></author><id>tag:pyvideo.org,2015-11-07:pycon-ca-2015/matplotlib-up-and-running-christopher-roach.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Matplotlib is the de facto standard for data visualization in Python, but getting started with it can be a little bit tough. Take a look at three different matplotlib tutorials, and chances are, you'll see at least two, if not three, different ways to interact with matplotlib! Understanding the correct way may not always be obvious.&lt;/p&gt;
&lt;p&gt;Now, fast forward past the basics. You've created a few visualizations with the aid of whatever tutorials you've found online, but you still don't feel like you have a good grip on how matplotlib works. You call the plot function several different ways and it seems to work just fine in the tutorials, but it doesn't seem to be doing what you want it to now. Oh, and not to mention, why do I need to call the show() function sometimes and not others? These are all the types of questions that I had when I was first learning matplotlib and it took a bit of work to find the answers to all of them.&lt;/p&gt;
&lt;p&gt;In this talk I cover everything that I wish I knew when I was first learning matplotlib. I'll cover the three main interfaces to the library: pylab, pyplot, and the OO API, and you'll learn when and how to use each one. Then we'll go into a bit more detail on the architecture of matplotlib, and deep dive into the plot function to understand just how versatile it is and where its limits arise. Finally, we'll look at several new libraries built atop the venerable visualization library that have come about in the past few years to take matplotlib to the next level. During the course of the talk, you'll also see several tips and tricks to make matplotlib a little friendlier.&lt;/p&gt;
&lt;p&gt;It's been my observation that getting started with matplotlib is easy due to the wealth of tutorials online. A problem does tend to arise, however, when a tutorial can't be found for the current task at hand. Many times I've seen individuals, who have used matplotlib in the past, at a loss when they need to do something they've never done before. The goal of this talk is to give the attendees the understanding they need to reason properly about the library and to make it possible for them to move away from copy-n-paste coding to actually writing up their own visualization scripts.&lt;/p&gt;
</summary></entry></feed>