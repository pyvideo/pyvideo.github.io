<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_matthew-sundquist.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-07-26T00:00:00+00:00</updated><entry><title>The Possibilities Of Plotting With pandas and IPython</title><link href="https://pyvideo.org/pydata-seattle-2015/the-possibilities-of-plotting-with-pandas-and-ipython.html" rel="alternate"></link><published>2015-07-26T00:00:00+00:00</published><updated>2015-07-26T00:00:00+00:00</updated><author><name>Matthew Sundquist</name></author><id>tag:pyvideo.org,2015-07-26:pydata-seattle-2015/the-possibilities-of-plotting-with-pandas-and-ipython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A wave of complimentary new tools allow developers to quickly access, analyze, and plot data. IPython Notebooks let you harness these libraries and code in a web-based, language agnostic Notebook. Pandas lets you wrangle your data. And matplotlib, ggplot for Python, Plotly, bokeh, and Seaborn let you make beautiful, interactive plots. This talk shows how to use and deploy these tools together.&lt;/p&gt;
&lt;p&gt;A new wave of Python libraries enable interactive, scientific figures, and web shareability. From Python we can access and manipulate data with pandas, make 2D, 3D, and live-streaming graphs inside IPython Notebooks, and translate plots from static images into apps we can deploy with WebGL and D3.js.&lt;/p&gt;
&lt;p&gt;A number of libraries support--to various degrees--plotting directly from pandas inside IPython Notebooks--matplotlib, ggplot for Python, Plotly, bokeh, cufflinks, mpld3, and Seaborn. Some of these plots can also be turned into interactive web-based plots. This talk will show the volume of plotting options available for Python users from within these libraries, and highlight relevant technologies along the way.&lt;/p&gt;
&lt;p&gt;Materials available here: &lt;a class="reference external" href="https://plot.ly/python/"&gt;https://plot.ly/python/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Plotly Collaborative Python and Matplotlib Plotting</title><link href="https://pyvideo.org/euroscipy-2014/plotly-collaborative-python-and-matplotlib-plotti.html" rel="alternate"></link><published>2014-10-22T00:00:00+00:00</published><updated>2014-10-22T00:00:00+00:00</updated><author><name>Matthew Sundquist</name></author><id>tag:pyvideo.org,2014-10-22:euroscipy-2014/plotly-collaborative-python-and-matplotlib-plotti.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Plotly's Python API and sandbox let you make and share beautiful,
web-based plots. This talk will be a walk-through of Plotly's library.
We will craft and embed interactive graphs within an IPython Notebook
from our gallery, use Plotly's GUI to edit and share graphs, and use
Plotly's matplotlib wrapper to create web-based graphs and data files
from matplotlib scripts.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="section" id="plotly-github-for-data-and-graphs"&gt;
&lt;h4&gt;Plotly: GitHub for Data and Graphs&lt;/h4&gt;
&lt;p&gt;&lt;a class="reference external" href="https://plot.ly/"&gt;Plotly&lt;/a&gt; is an online plotting platform. Think of
it like GitHub, but for sharing data, graphs, and scripts for plotting.
Plotly has a GUI and APIs for making graphs with Python, R, MATLAB,
Perl, Julia, Arduino, Ruby, Raspberry Pi, and REST. The APIs let users
make and share web-based graphs and interface a desktop environment with
Plotly. Public sharing is free, users own their data, and users control
whether data and graphs are public or private. Plotly also always pairs
data and graphs, and lets you import by uploading or
&lt;a class="reference external" href="https://github.com/plotly/Streaming-Demos"&gt;live-streaming&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-we-ll-build"&gt;
&lt;h4&gt;What We'll Build&lt;/h4&gt;
&lt;p&gt;Plotly allows users to make graphs with the GUI, Python, or other
programming languages. We will make a number of beautiful graphs. We
will make graphs with Python, share a graph, and then edit with the GUI
or another programming language of choice. We will also uses Plotly's
&lt;a class="reference external" href="http://nbviewer.ipython.org/github/plotly/IPython-plotly/blob/master/See%20more/Plotly%20and%20mpld3.ipynb"&gt;matplotlib
wrapper&lt;/a&gt;
to make web-based Plotly graphs from matplotlib figures.&lt;/p&gt;
&lt;p&gt;We will add data to a pre-existing graph, making a new version and
always reverting back to previous versions. We will make a graph and
store scripts, data sets, graphs, and past versions of files in Plotly.&lt;/p&gt;
&lt;p&gt;Authors, and journalists from the and Wired Science use these Plotly
features and the capacity to embed graphs in an iframe. We will conclude
by showing how to optimize your embedding.&lt;/p&gt;
&lt;p&gt;More examples can be found at &lt;a class="reference external" href="https://plot.ly/python/"&gt;https://plot.ly/python/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry></feed>