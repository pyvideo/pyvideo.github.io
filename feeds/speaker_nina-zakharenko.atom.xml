<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Nina Zakharenko</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_nina-zakharenko.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-04-21T00:00:00+00:00</updated><subtitle></subtitle><entry><title>AngularJS + Django = A Perfect Match</title><link href="https://pyvideo.org/djangocon-us-2014/angularjs-django-a-perfect-match.html" rel="alternate"></link><published>2014-09-17T00:00:00+00:00</published><updated>2014-09-17T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2014-09-17:/djangocon-us-2014/angularjs-django-a-perfect-match.html</id><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;AngularJS is a powerful MVC framework that can easily integrate with
Django templates.&lt;/p&gt;
&lt;p&gt;Let's walk through integrating the two for fantastic results. The result
is a fast, dynamic single page application.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/FOP2/"&gt;http://amara.org/v/FOP2/&lt;/a&gt;&lt;/p&gt;
</content><category term="DjangoCon US 2014"></category></entry><entry><title>Django REST API - So easy you can learn it in 25 minutes</title><link href="https://pyvideo.org/djangocon-us-2014/django-rest-api-so-easy-you-can-learn-it-in-25.html" rel="alternate"></link><published>2014-09-12T00:00:00+00:00</published><updated>2014-09-12T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2014-09-12:/djangocon-us-2014/django-rest-api-so-easy-you-can-learn-it-in-25.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Django REST Framework can make creating a RESTFUL api quick and easy.&lt;/p&gt;
&lt;p&gt;Join me as I go over: - What makes an API Restful - How Serializers can
make representing your existing models in JSON a breeze - What the built
in Views provide for you, and how to provide authentication for â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Django REST Framework can make creating a RESTFUL api quick and easy.&lt;/p&gt;
&lt;p&gt;Join me as I go over: - What makes an API Restful - How Serializers can
make representing your existing models in JSON a breeze - What the built
in Views provide for you, and how to provide authentication for your API
- How to route to your new Endpoints - Last but not least, how to Unit
Test them&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/FNEj/"&gt;http://amara.org/v/FNEj/&lt;/a&gt;&lt;/p&gt;
</content><category term="DjangoCon US 2014"></category></entry><entry><title>Code Review Skills for Pythonistas</title><link href="https://pyvideo.org/djangocon-us-2018/code-review-skills-for-pythonistas.html" rel="alternate"></link><published>2018-10-15T00:00:00+00:00</published><updated>2018-10-15T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2018-10-15:/djangocon-us-2018/code-review-skills-for-pythonistas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As teams and projects grow, code review becomes increasingly important
to support the maintainability of complex codebases. In this talk, Iâ€™ll
cover guidelines for writing consistent python code beyond pep8, how to
look out for common python gotchas, and what python tools are available
to automate various parts â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As teams and projects grow, code review becomes increasingly important
to support the maintainability of complex codebases. In this talk, Iâ€™ll
cover guidelines for writing consistent python code beyond pep8, how to
look out for common python gotchas, and what python tools are available
to automate various parts of the review process. Most importantly, Iâ€™ll
cover the human aspect of code reviews - how we can be better at
approaching reviews with empathy and understanding from the perspective
of both a reviewer and a submitter. Following these successful code
review practices will lead to happier teams and healthier code bases.&lt;/p&gt;
&lt;p&gt;This talk is useful for python developers with any amount of experience.
No prerequisite knowledge is necessary.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;For those who are just starting out, it will be a great general
overview.&lt;/li&gt;
&lt;li&gt;Intermediate developers may not know about the wide variety of
tooling thatâ€™s available.&lt;/li&gt;
&lt;li&gt;Advanced developers will learn techniques for performing code reviews
with empathy.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk will enable you to have better code reviews on your teams at
work, and a better approach to code reviews in open source projects.
Youâ€™ll leave with 3 main takeaways:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Code Reviews are most effective when conducted with empathy. If you
do reviews with growth and learning in mind, they become tools for
sharing knowledge instead of an opportunity to bruise egos or show
off esoteric knowledge.&lt;/li&gt;
&lt;li&gt;Python has powerful tooling available for code reviews such as pep8
as a style guide, pylint as a linter, coverage.py to identify test
coverage, and vulture to identify dead code.&lt;/li&gt;
&lt;li&gt;That python style guides beyond pep8 have clear benefits in terms of
producing more consistent code thatâ€™s easier to review and easier to
maintain.&lt;/li&gt;
&lt;/ol&gt;
</content><category term="DjangoCon US 2018"></category></entry><entry><title>Goodbye Print, Hello Debugger!</title><link href="https://pyvideo.org/djangocon-us-2019/goodbye-print-hello-debugger.html" rel="alternate"></link><published>2019-09-24T00:00:00+00:00</published><updated>2019-09-24T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2019-09-24:/djangocon-us-2019/goodbye-print-hello-debugger.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon 2019 -  Goodbye Print, Hello Debugger! by Nina Zakharenko&lt;/p&gt;
&lt;p&gt;Still debugging your code by using print? Learn how to level up your ability to troubleshoot complex code situations by using the power of a fully-featured debugger in this talk aimed at all levels of programming ability.&lt;/p&gt;
&lt;p&gt;This talk was â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon 2019 -  Goodbye Print, Hello Debugger! by Nina Zakharenko&lt;/p&gt;
&lt;p&gt;Still debugging your code by using print? Learn how to level up your ability to troubleshoot complex code situations by using the power of a fully-featured debugger in this talk aimed at all levels of programming ability.&lt;/p&gt;
&lt;p&gt;This talk was presented at: &lt;a class="reference external" href="https://2019.djangocon.us/talks/goodbye-print-hello-debugger/"&gt;https://2019.djangocon.us/talks/goodbye-print-hello-debugger/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LINKS:
Follow Nina Zakharenko ðŸ‘‡
On Twitter: &lt;a class="reference external" href="https://twitter.com/nnja"&gt;https://twitter.com/nnja&lt;/a&gt;
Official homepage: &lt;a class="reference external" href="https://nnja.io"&gt;https://nnja.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow DjangCon US ðŸ‘‡
&lt;a class="reference external" href="https://twitter.com/djangocon"&gt;https://twitter.com/djangocon&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow DEFNA ðŸ‘‡
&lt;a class="reference external" href="https://twitter.com/defnado"&gt;https://twitter.com/defnado&lt;/a&gt;
&lt;a class="reference external" href="https://www.defna.org/"&gt;https://www.defna.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Intro music: &amp;quot;This Is How We Quirk It&amp;quot; by Avocado Junkie.
Video production by Confreaks TV.
Captions by White Coat Captioning.&lt;/p&gt;
</content><category term="DjangoCon US 2019"></category></entry><entry><title>Code Review Skills for Pythonistas</title><link href="https://pyvideo.org/europython-2018/code-review-skills-for-pythonistas.html" rel="alternate"></link><published>2018-07-26T00:00:00+00:00</published><updated>2018-07-26T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2018-07-26:/europython-2018/code-review-skills-for-pythonistas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As teams and projects grow, code review becomes increasingly important
to support the maintainability of complex codebases. In this talk, Iâ€™ll
cover guidelines for writing consistent python code beyond pep8, how to
look out for common python gotchas, and what python tools are available
to automate various parts â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As teams and projects grow, code review becomes increasingly important
to support the maintainability of complex codebases. In this talk, Iâ€™ll
cover guidelines for writing consistent python code beyond pep8, how to
look out for common python gotchas, and what python tools are available
to automate various parts of the review process. Most importantly, Iâ€™ll
cover the human aspect of code reviews - how we can be better at
approaching reviews with empathy and understanding from the perspective
of both a reviewer and a submitter. Following these successful code
review practices will lead to happier teams and healthier code bases.&lt;/p&gt;
&lt;p&gt;This talk is useful for python developers with any amount of experience.
No prerequisite knowledge is necessary. - For those who are just
starting out, it will be a great general overview. - Intermediate
developers may not know about the wide variety of tooling thatâ€™s
available. - Advanced developers will learn techniques for performing
code reviews with empathy.&lt;/p&gt;
&lt;p&gt;This talk will enable you to have better code reviews on your teams at
work, and a better approach to code reviews in open source projects.
Youâ€™ll leave with 3 main takeaways: 1. Code Reviews are most effective
when conducted with empathy. If you do reviews with growth and learning
in mind, they become tools for sharing knowledge instead of an
opportunity to bruise egos or show off esoteric knowledge. 2. Python has
powerful tooling available for code reviews such as pep8 as a style
guide, pylint as a linter, coverage.py to identify test coverage, and
vulture to identify dead code. 3. That python style guides beyond pep8
have clear benefits in terms of producing more consistent code thatâ€™s
easier to review and easier to maintain.&lt;/p&gt;
</content><category term="EuroPython 2018"></category></entry><entry><title>Technical Debt - The code monster in everyone's closet</title><link href="https://pyvideo.org/montreal-python/technical-debt-the-code-monster-in-everyones-closet.html" rel="alternate"></link><published>2015-04-13T00:00:00+00:00</published><updated>2015-04-13T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2015-04-13:/montreal-python/technical-debt-the-code-monster-in-everyones-closet.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Montreal, April 13, 2015 - As Nina Zakharenko puts it, technical debt is the code monster hiding in everyone's closet. If you ignore it, it will terrorize you at night. To banish it and re-gain your productivity, you'll need to face it head on.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Nina Zakharenko: &lt;a class="reference external" href="http://sflx.ca/ninaz"&gt;http://sflx.ca/ninaz â€¦&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Montreal, April 13, 2015 - As Nina Zakharenko puts it, technical debt is the code monster hiding in everyone's closet. If you ignore it, it will terrorize you at night. To banish it and re-gain your productivity, you'll need to face it head on.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Nina Zakharenko: &lt;a class="reference external" href="http://sflx.ca/ninaz"&gt;http://sflx.ca/ninaz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Slides: &lt;a class="reference external" href="http://sflx.ca/techdebt"&gt;http://sflx.ca/techdebt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MP53: &lt;a class="reference external" href="http://sflx.ca/mp53e"&gt;http://sflx.ca/mp53e&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recorded and edited live by &amp;#64;ChristianAubry at MontrÃ©al-Python 53 (Sanctified Terabit) with a little help from Savoir-faire Linux (&lt;a class="reference external" href="http://sflx.ca/jobs"&gt;http://sflx.ca/jobs&lt;/a&gt;).&lt;/p&gt;
</content><category term="MontrÃ©al-Python"></category></entry><entry><title>Memory Management in Python - The Basics</title><link href="https://pyvideo.org/north-bay-python-2018/memory-management-in-python-the-basics.html" rel="alternate"></link><published>2018-11-04T00:00:00+00:00</published><updated>2018-11-04T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2018-11-04:/north-bay-python-2018/memory-management-in-python-the-basics.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a new python developer, do you find memory management in Python
confusing? Come to this talk to learn about the basics of how Memory
Management works in Python. We'll cover the concepts of reference
counting, garbage collection, weak references, &lt;strong&gt;slots&lt;/strong&gt;, and the Global
Interpreter Lock.&lt;/p&gt;
</content><category term="North Bay Python 2018"></category></entry><entry><title>Light Up Your Life - With Python and LEDs!</title><link href="https://pyvideo.org/pycascades-2019/light-up-your-life-with-python-and-leds.html" rel="alternate"></link><published>2019-02-24T00:00:00+00:00</published><updated>2019-02-24T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2019-02-24:/pycascades-2019/light-up-your-life-with-python-and-leds.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python opens a whole new world of working with wearable electronics. MicroPython and CircuitPython are Python variants that can run with just 256k of storage space and 16k of RAM. Learn how to program LEDs with Python, to light up your life with code and creativity.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/light-up-your-life-with-python-and-leds/"&gt;https â€¦&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python opens a whole new world of working with wearable electronics. MicroPython and CircuitPython are Python variants that can run with just 256k of storage space and 16k of RAM. Learn how to program LEDs with Python, to light up your life with code and creativity.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/light-up-your-life-with-python-and-leds/"&gt;https://2019.pycascades.com/talks/light-up-your-life-with-python-and-leds/&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCascades 2019"></category></entry><entry><title>"Closing Session" - Seb Vetter, Nina Zakharenko (PyCascades 2021)</title><link href="https://pyvideo.org/pycascades-2021/closing-session-seb-vetter-nina-zakharenko-pycascades-2021.html" rel="alternate"></link><published>2021-02-20T00:00:00+00:00</published><updated>2021-02-20T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2021-02-20:/pycascades-2021/closing-session-seb-vetter-nina-zakharenko-pycascades-2021.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wrapping up an exciting day of talks and panels.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pretalx.com/pycascades-2021/talk/NCWZQQ/"&gt;https://pretalx.com/pycascades-2021/talk/NCWZQQ/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After three amazing in-person conferences, this time we're moving PyCascades online.&lt;/p&gt;
&lt;p&gt;PyCascades is a regional PyCon in the Pacific Northwest, celebrating the west coast Python developer and user community. Our organizing team includes members â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wrapping up an exciting day of talks and panels.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pretalx.com/pycascades-2021/talk/NCWZQQ/"&gt;https://pretalx.com/pycascades-2021/talk/NCWZQQ/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After three amazing in-person conferences, this time we're moving PyCascades online.&lt;/p&gt;
&lt;p&gt;PyCascades is a regional PyCon in the Pacific Northwest, celebrating the west coast Python developer and user community. Our organizing team includes members of the Vancouver, Seattle, and Portland Python user groups.&lt;/p&gt;
&lt;p&gt;Videos are released as CC BY-NC-SA 4.0.&lt;/p&gt;
&lt;p&gt;Produced by Next Day Video Australia: &lt;a class="reference external" href="https://nextdayvideo.com.au"&gt;https://nextdayvideo.com.au&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#pycascades #pycon #python #conference&lt;/p&gt;
&lt;p&gt;Sat Feb 20 17:10:00 2021 at Interactive Track&lt;/p&gt;
</content><category term="PyCascades 2021"></category><category term="#pycascades#pycon#python#conference"></category><category term="pycascades"></category><category term="pycascades2021"></category></entry><entry><title>Core Python Devs on how COVID has changed core Python development</title><link href="https://pyvideo.org/pycascades-2021/core-python-devs-on-how-covid-has-changed-core-python-development.html" rel="alternate"></link><published>2021-02-20T00:00:00+00:00</published><updated>2021-02-20T00:00:00+00:00</updated><author><name>Brett Cannon</name></author><id>tag:pyvideo.org,2021-02-20:/pycascades-2021/core-python-devs-on-how-covid-has-changed-core-python-development.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a programming language that we all know and love. We've come to expect amazing new features in recent releases of Python, like async programming, type hints, f-strings, and so much more. Join this interactive session with Guido Van Rossum, Carol Willing, Marietta Wijaya, and Brett Cannon as â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a programming language that we all know and love. We've come to expect amazing new features in recent releases of Python, like async programming, type hints, f-strings, and so much more. Join this interactive session with Guido Van Rossum, Carol Willing, Marietta Wijaya, and Brett Cannon as they talk about how COVID has affected the path of Core Python development. And, if weâ€™re lucky, they may even share news about new and exciting features in the pipeline!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pretalx.com/pycascades-2021/talk/JPTXGD/"&gt;https://pretalx.com/pycascades-2021/talk/JPTXGD/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After three amazing in-person conferences, this time we're moving PyCascades online.&lt;/p&gt;
&lt;p&gt;PyCascades is a regional PyCon in the Pacific Northwest, celebrating the west coast Python developer and user community. Our organizing team includes members of the Vancouver, Seattle, and Portland Python user groups.&lt;/p&gt;
&lt;p&gt;Videos are released as CC BY-NC-SA 4.0.&lt;/p&gt;
&lt;p&gt;Produced by Next Day Video Australia: &lt;a class="reference external" href="https://nextdayvideo.com.au"&gt;https://nextdayvideo.com.au&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#pycascades #pycon #python #conference&lt;/p&gt;
&lt;p&gt;Sat Feb 20 09:15:00 2021 at Interactive Track&lt;/p&gt;
</content><category term="PyCascades 2021"></category><category term="#pycascades#pycon#python#conference"></category><category term="pycascades"></category><category term="pycascades2021"></category></entry><entry><title>"Welcome to PyCascades Remote" - Seb Vetter, Nina Zakharenko (PyCascades 2021)</title><link href="https://pyvideo.org/pycascades-2021/welcome-to-pycascades-remote-seb-vetter-nina-zakharenko-pycascades-2021.html" rel="alternate"></link><published>2021-02-20T00:00:00+00:00</published><updated>2021-02-20T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2021-02-20:/pycascades-2021/welcome-to-pycascades-remote-seb-vetter-nina-zakharenko-pycascades-2021.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A huge welcome to everyone leading into our morning panel.&lt;/p&gt;
&lt;p&gt;#pycascades #pycon #python #conference&lt;/p&gt;
&lt;p&gt;After three amazing in-person conferences, this time we're moving PyCascades online.&lt;/p&gt;
&lt;p&gt;PyCascades is a regional PyCon in the Pacific Northwest, celebrating the west coast Python developer and user community. Our organizing team includes members of â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A huge welcome to everyone leading into our morning panel.&lt;/p&gt;
&lt;p&gt;#pycascades #pycon #python #conference&lt;/p&gt;
&lt;p&gt;After three amazing in-person conferences, this time we're moving PyCascades online.&lt;/p&gt;
&lt;p&gt;PyCascades is a regional PyCon in the Pacific Northwest, celebrating the west coast Python developer and user community. Our organizing team includes members of the Vancouver, Seattle, and Portland Python user groups.&lt;/p&gt;
&lt;p&gt;Videos are released as CC BY-NC-SA 4.0.&lt;/p&gt;
&lt;p&gt;After three amazing in-person conferences, this time we're moving PyCascades online.&lt;/p&gt;
&lt;p&gt;PyCascades is a regional PyCon in the Pacific Northwest, celebrating the west coast Python developer and user community. Our organizing team includes members of the Vancouver, Seattle, and Portland Python user groups.&lt;/p&gt;
&lt;p&gt;Videos are released as CC BY-NC-SA 4.0.&lt;/p&gt;
&lt;p&gt;Produced by Next Day Video Australia: &lt;a class="reference external" href="https://nextdayvideo.com.au"&gt;https://nextdayvideo.com.au&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#pycascades #pycon #python #conference&lt;/p&gt;
&lt;p&gt;Sat Feb 20 09:00:00 2021 at Interactive Track&lt;/p&gt;
</content><category term="PyCascades 2021"></category><category term="#pycascades#pycon#python#conference"></category><category term="pycascades"></category><category term="pycascades2021"></category></entry><entry><title>Goodbye Print Statements, Hello Debugger!</title><link href="https://pyvideo.org/pycon-au-2019/goodbye-print-statements-hello-debugger.html" rel="alternate"></link><published>2019-08-03T00:00:00+00:00</published><updated>2019-08-03T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2019-08-03:/pycon-au-2019/goodbye-print-statements-hello-debugger.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Still debugging your code with print statements? Learn how to level up your ability to troubleshoot complex code situations by using the power of a fully-featured debugger in this talk aimed at all levels of programming ability.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/goodbye-print-statements-hello-debugger"&gt;https://2019.pycon-au.org/talks/goodbye-print-statements-hello-debugger&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 11:10:00 â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Still debugging your code with print statements? Learn how to level up your ability to troubleshoot complex code situations by using the power of a fully-featured debugger in this talk aimed at all levels of programming ability.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/goodbye-print-statements-hello-debugger"&gt;https://2019.pycon-au.org/talks/goodbye-print-statements-hello-debugger&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 11:10:00 2019 at Cockle Bay&lt;/p&gt;
</content><category term="PyCon AU 2019"></category></entry><entry><title>Elegant solutions for everyday Python problems</title><link href="https://pyvideo.org/pycon-ca-2017/elegant-solutions-for-everyday-python-problems.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2017-11-19:/pycon-ca-2017/elegant-solutions-for-everyday-python-problems.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you an intermediate Python developer looking to level up? Luckily, Python provides us with a unique set of tools to make our code more elegant and readable. Iâ€™ll share practical pythonic solutions for supercharging your code with tools like Decorators, Context Managers, and Mixins.&lt;/p&gt;
</content><category term="PyCon CA 2017"></category></entry><entry><title>Elegant Solutions for Everyday Python Problems</title><link href="https://pyvideo.org/pycon-russia-2017/elegant-solutions-for-everyday-python-problems.html" rel="alternate"></link><published>2017-07-16T00:00:00+00:00</published><updated>2017-07-16T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2017-07-16:/pycon-russia-2017/elegant-solutions-for-everyday-python-problems.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you an intermediate Python programmer who becomes frustrated by copy and pasting or duplicating code? Luckily, the Python programming language provides us with a unique set of tools to make our code more elegant, readable, and reduce duplication. In this talk, Iâ€™ll share common anti-patterns in python â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you an intermediate Python programmer who becomes frustrated by copy and pasting or duplicating code? Luckily, the Python programming language provides us with a unique set of tools to make our code more elegant, readable, and reduce duplication. In this talk, Iâ€™ll share common anti-patterns in python programs and show you practical pythonic solutions for supercharging your code with tools like Decorators, Context Managers, Mixins, and Lambdas.&lt;/p&gt;
</content><category term="PyCon Russia 2017"></category></entry><entry><title>Technical Debt</title><link href="https://pyvideo.org/pycon-us-2015/technical-debt.html" rel="alternate"></link><published>2015-04-11T00:00:00+00:00</published><updated>2015-04-11T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2015-04-11:/pycon-us-2015/technical-debt.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Technical debt is the code monster hiding in everyone's closet. If you
ignore it, it will terrorize you at night. To banish it and re-gain your
productivity, you'll need to face it head on.&lt;/p&gt;
</content><category term="PyCon US 2015"></category></entry><entry><title>Memory Management in Python - The Basics</title><link href="https://pyvideo.org/pycon-us-2016/nina-zakharenko-memory-management-in-python-the-basics-pycon-2016.html" rel="alternate"></link><published>2016-05-31T00:00:00+00:00</published><updated>2016-05-31T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2016-05-31:/pycon-us-2016/nina-zakharenko-memory-management-in-python-the-basics-pycon-2016.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Nina Zakharenko&lt;/p&gt;
&lt;p&gt;As a new python developer, do you find memory management in Python confusing? Come to this talk to learn about the basics of how Memory Management works in Python. We'll cover the concepts of reference counting, garbage collection, weak references, __slots__, and the Global Interpreter Lock â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Nina Zakharenko&lt;/p&gt;
&lt;p&gt;As a new python developer, do you find memory management in Python confusing? Come to this talk to learn about the basics of how Memory Management works in Python. We'll cover the concepts of reference counting, garbage collection, weak references, __slots__, and the Global Interpreter Lock.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon US 2016"></category></entry><entry><title>Elegant Solutions For Everyday Python Problems</title><link href="https://pyvideo.org/pycon-us-2018/elegant-solutions-for-everyday-python-problems.html" rel="alternate"></link><published>2018-05-11T00:00:00+00:00</published><updated>2018-05-11T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2018-05-11:/pycon-us-2018/elegant-solutions-for-everyday-python-problems.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you an intermediate python developer looking to level up? Luckily, python provides us with a unique set of tools to make our code more elegant and readable by providing language features that make your code more intuitive and cut down on repetition. In this talk, Iâ€™ll share â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you an intermediate python developer looking to level up? Luckily, python provides us with a unique set of tools to make our code more elegant and readable by providing language features that make your code more intuitive and cut down on repetition. In this talk, Iâ€™ll share practical pythonic solutions for supercharging your code.&lt;/p&gt;
&lt;p&gt;Specifically, I'll cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What magic methods are, and show you how to use them in your own code.&lt;/li&gt;
&lt;li&gt;When and how to use partial methods.&lt;/li&gt;
&lt;li&gt;An explanation of ContextManagers and Decorators, as well as multiple techniques for implementing them.&lt;/li&gt;
&lt;li&gt;How to effectively use &lt;cite&gt;NamedTuples&lt;/cite&gt;, and even subclass and extend them!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lastly, I'll go over some example code that ties many of these techniques together in a cohesive way. You'll leave this talk feeling confident about using these tools and techniques in your next python project!&lt;/p&gt;
</content><category term="PyCon US 2018"></category></entry><entry><title>Light up your life -- with python and leds - Keynote</title><link href="https://pyvideo.org/pycon-us-2019/light-up-your-life-with-python-and-leds-keynote.html" rel="alternate"></link><published>2019-05-05T15:30:00+00:00</published><updated>2019-05-05T15:30:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2019-05-05:/pycon-us-2019/light-up-your-life-with-python-and-leds-keynote.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Light up your life -- with python and leds - Keynote&lt;/p&gt;
</content><category term="PyCon US 2019"></category><category term="keynote"></category></entry><entry><title>Goodbye Print, Hello Debugger!</title><link href="https://pyvideo.org/pycon-us-2020/goodbye-print-hello-debugger.html" rel="alternate"></link><published>2020-04-17T00:00:00+00:00</published><updated>2020-04-17T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2020-04-17:/pycon-us-2020/goodbye-print-hello-debugger.html</id><content type="html"></content><category term="PyCon US 2020"></category></entry><entry><title>More Fun With Hardware and CircuitPython - IoT, Wearables, and more!</title><link href="https://pyvideo.org/pycon-us-2021/more-fun-with-hardware-and-circuitpython-iot-wearables-and-more.html" rel="alternate"></link><published>2021-05-14T00:00:00+00:00</published><updated>2021-05-14T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2021-05-14:/pycon-us-2021/more-fun-with-hardware-and-circuitpython-iot-wearables-and-more.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn about programming hardware with Python and advanced uses of CircuitPython by walking through exciting demos of real-world projects in action. Advanced components like buttons, sensors, and screens bump up the fun and the interactivity of your project. Level-up your hardware skills in this fast-paced talk!&lt;/p&gt;
&lt;p&gt;CircuitPython is the â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn about programming hardware with Python and advanced uses of CircuitPython by walking through exciting demos of real-world projects in action. Advanced components like buttons, sensors, and screens bump up the fun and the interactivity of your project. Level-up your hardware skills in this fast-paced talk!&lt;/p&gt;
&lt;p&gt;CircuitPython is the education-friendly fork of MicroPython that's been steadily rising in popularity as new releases increase stability, reliability, and speed. CircuitPython allows Python enthusiasts to quickly learn about hardware projects without having to learn something completely brand new. Given the rise in popularity, the Python community is quickly becoming familiar with the basics of CircuitPython. In fact, all attendees of PyCon US in 2019 were given a CircuitPython-compatible CircuitPlayground Express device with LEDs, speakers, sensors, and more, all usable without the need of learning to solder.&lt;/p&gt;
&lt;p&gt;If you're interested in doing more with hardware, this talk will point you in the right direction of where to go next. We'll start with choosing the right device for the scope of your project. Next, we'll scratch the surface of working with electronics -- what's a circuit? What are good resources for learning to solder? Lastly, I'll cover topics such as IoT, wearables, and adding interactivity to your projects with sensors, buttons, and switches with live demos of real-world projects I've created, along with sharing the build process and code for each.&lt;/p&gt;
&lt;p&gt;Viewers will finish the talk feeling confident about continuing their hardware journey across a range of project types.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://nina.to/pycon2021"&gt;https://nina.to/pycon2021&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon US 2021"></category></entry><entry><title>Why You Should Care About Open Source Supply Chain Security</title><link href="https://pyvideo.org/pycon-us-2023/why-you-should-care-about-open-source-supply-chain-security.html" rel="alternate"></link><published>2023-04-21T00:00:00+00:00</published><updated>2023-04-21T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2023-04-21:/pycon-us-2023/why-you-should-care-about-open-source-supply-chain-security.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the past several years, large-scale hacks triggered by compromised
software supply chains have dominated the news. The aftermath has
inspired the creation of new organizations, tools, and systems to help
prevent and respond to similar lines of attack in the future.&lt;/p&gt;
&lt;p&gt;In this talk, you'll learn about the â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the past several years, large-scale hacks triggered by compromised
software supply chains have dominated the news. The aftermath has
inspired the creation of new organizations, tools, and systems to help
prevent and respond to similar lines of attack in the future.&lt;/p&gt;
&lt;p&gt;In this talk, you'll learn about the insidious nature of supply chain
attacks, common points of intrusion, and why the open source ecosystem
is especially vulnerable. Next, youâ€™ll learn about the basic concepts
and terms involved in supply chain security and learn about open source
projects and frameworks you can apply to protect the integrity of your
own software. Lastly, youâ€™ll learn about ways that you can evaluate the
supply chain security practices of the dependencies you rely on. Youâ€™ll
leave the talk understanding how supply chain attacks happen, why
theyâ€™re so difficult to detect, and take away actionable solutions
allowing you to be better prepared for the next wave of supply chain
attacks.&lt;/p&gt;
</content><category term="PyCon US 2023"></category></entry><entry><title>Technical Debt: the Code Monster in your Closet</title><link href="https://pyvideo.org/pyparis-2018/technical-debt-the-code-monster-in-your-closet.html" rel="alternate"></link><published>2018-11-14T00:00:00+00:00</published><updated>2018-11-14T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2018-11-14:/pyparis-2018/technical-debt-the-code-monster-in-your-closet.html</id><content type="html"></content><category term="PyParis 2018"></category></entry></feed>