<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Ítalo Epifânio</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_italo-epifanio.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-04-19T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Going beyond with Jupyter Notebooks: Write your first package using literate programming</title><link href="https://pyvideo.org/pycon-us-2023/going-beyond-with-jupyter-notebooks-write-your-first-package-using-literate-programming.html" rel="alternate"></link><published>2023-04-19T00:00:00+00:00</published><updated>2023-04-19T00:00:00+00:00</updated><author><name>Ítalo Epifânio</name></author><id>tag:pyvideo.org,2023-04-19:/pycon-us-2023/going-beyond-with-jupyter-notebooks-write-your-first-package-using-literate-programming.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Literate_programming"&gt;Literate
programming&lt;/a&gt; is a
programming paradigm that incorporates explanations in natural language
(such as Spanish) embedded with the traditional code. Literate
programming allows developers to tell a story with their codes,
improving the understanding of the project, focusing on documentation,
and making it easier to onboard developers. Although being …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Literate_programming"&gt;Literate
programming&lt;/a&gt; is a
programming paradigm that incorporates explanations in natural language
(such as Spanish) embedded with the traditional code. Literate
programming allows developers to tell a story with their codes,
improving the understanding of the project, focusing on documentation,
and making it easier to onboard developers. Although being a very
well-regarded concept discussed by respected researchers like &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Donald_Knuth"&gt;Donald
Knuth&lt;/a&gt;, literate
programming tools like Jupyter notebooks are considered inefficient for
serious software development. This perception has limited Jupyter
notebooks to simple python scripts and educational materials.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://nbdev.fast.ai/"&gt;Nbdev&lt;/a&gt; library has proven that literate
programming is useful in developing big and serious projects, like
&lt;a class="reference external" href="https://github.com/fastai/fastai"&gt;FastAi&lt;/a&gt;. This tutorial will show
attendees how to get the benefits of literate programming while also
following software development best practices. We'll get hands-on
experience in writing and publishing a Python Package while using
Jupyter Notebooks. In addition to publishing the package, we'll also
learn how to deploy the docs, run simple tests and run these tests on
CI/CD, making sure that our package will only get published if the tests
pass.&lt;/p&gt;
&lt;p&gt;Even though this tutorial uses Jupyter Notebooks and Nbdev the student
doesn't need previous knowledge of these tools. A simple computer with
Python and pip installed is all we'll use. Students should have some
minimal Python knowledge and Git experience (Simple commands like push,
pull, add and commit). A GitHub account will also be necessary.&lt;/p&gt;
</content><category term="PyCon US 2023"></category></entry></feed>