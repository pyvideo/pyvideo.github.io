<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_kamaelia.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2009-02-17T00:00:00+00:00</updated><entry><title>PyCon 2009: Easy Concurrency with Kamaelia (Part 2 of 2)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--easy-concurrency-with-kamaelia--part-.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--easy-concurrency-with-kamaelia--part-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: ] Writing concurrent applications in Python is now
becoming not only easier, but quite elegant and simple, thanks to
Kamaelia. Kamaelia is an interesting component based framework
originating from BBC research. It accomplishes concurrent processing of
data from and to many protocols. Components easily connect and pass data
from and to each other. We are going to explore Kamaelia's strengths and
possibilities, by running simple examples, then trying nested protocol
support, and maybe some other fun examples if time permits.&lt;/p&gt;
</summary><category term="concurrency"></category><category term="kamaelia"></category><category term="pycon"></category><category term="pycon2009"></category></entry><entry><title>PyCon 2009: Easy Concurrency with Kamaelia (Part 1 of 2)</title><link href="https://pyvideo.org/pycon-us-2009/pycon-2009--easy-concurrency-with-kamaelia--part0.html" rel="alternate"></link><published>2009-02-17T00:00:00+00:00</published><updated>2009-02-17T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--easy-concurrency-with-kamaelia--part0.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: ] Writing concurrent applications in Python is now
becoming not only easier, but quite elegant and simple, thanks to
Kamaelia. Kamaelia is an interesting component based framework
originating from BBC research. It accomplishes concurrent processing of
data from and to many protocols. Components easily connect and pass data
from and to each other. We are going to explore Kamaelia's strengths and
possibilities, by running simple examples, then trying nested protocol
support, and maybe some other fun examples if time permits.&lt;/p&gt;
</summary><category term="concurrency"></category><category term="kamaelia"></category><category term="pycon"></category><category term="pycon2009"></category></entry></feed>