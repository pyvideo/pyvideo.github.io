<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Alexander Fabisch</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_alexander-fabisch.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-08-14T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Transformations in Three Dimensions</title><link href="https://pyvideo.org/euroscipy-2023/transformations-in-three-dimensions.html" rel="alternate"></link><published>2023-08-14T00:00:00+00:00</published><updated>2023-08-14T00:00:00+00:00</updated><author><name>Alexander Fabisch</name></author><id>tag:pyvideo.org,2023-08-14:/euroscipy-2023/transformations-in-three-dimensions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Rigid transformation in 3D are complicated due to the multitude of different conventions and because they often form complex graphs that are difficult to manage. In this talk I will give a brief introduction to the topic and present the library pytransform3d as a set of tools that can â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Rigid transformation in 3D are complicated due to the multitude of different conventions and because they often form complex graphs that are difficult to manage. In this talk I will give a brief introduction to the topic and present the library pytransform3d as a set of tools that can help you to tame the complexity. Throughout the talk I will use examples from robotics (imitation learning, collision detection, state estimation, kinematics) to motivate the discussed features, even though presented solutions are useful beyond robotics.&lt;/p&gt;
</content><category term="EuroSciPy 2023"></category></entry></feed>