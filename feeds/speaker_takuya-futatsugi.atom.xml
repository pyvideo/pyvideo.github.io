<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Takuya Futatsugi</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_takuya-futatsugi.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2020-07-23T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Bringing your Python script to more users!</title><link href="https://pyvideo.org/europython-2020/bringing-your-python-script-to-more-users.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Takuya Futatsugi</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/bringing-your-python-script-to-more-users.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quick tour from CLI through GUI to Web app with image size reduction script&lt;/p&gt;
&lt;p&gt;It is wonderful to automate boring stuffs with Python.
In Japan, new introductory books are being published every month and more and more Pythonistas are working on automation.
A Python script that is useful to â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quick tour from CLI through GUI to Web app with image size reduction script&lt;/p&gt;
&lt;p&gt;It is wonderful to automate boring stuffs with Python.
In Japan, new introductory books are being published every month and more and more Pythonistas are working on automation.
A Python script that is useful to you may be useful to others.
So I talk about how to enable others to use your script.&lt;/p&gt;
&lt;p&gt;In this talk, I use a simple script which can reduce the width and the height of a specified image in your computer.
I assume someone who's read the introductory book can understand the script.&lt;/p&gt;
&lt;p&gt;First, I introduce Command Line Interface (CLI) to solve hardcoding in the sample script.
After implementing CLI, you don't need to edit the script.
Second, I introduce Grafical User Interface (GUI) to make the script more user-friendly.
Finally, I introduce web application so that users can the script without installation. All users have to do is connecting the Internet!&lt;/p&gt;
&lt;p&gt;The timeline is supposed to be the following:&lt;/p&gt;
&lt;p&gt;# Introduction (3min)
- self-introduction
- motivation of this talk
- sample script (pathlib, Pillow)&lt;/p&gt;
&lt;p&gt;# CLI (5min)
- problem: need to edit the script
- introduce argparse module (pass target file path from command line)
- about positional arguments and optional arguments
- check whether a path points an existing file (type parameter of add_argument())&lt;/p&gt;
&lt;p&gt;# GUI (9min)
- problem: CLI is not easy to handle than GUI
- introduce eel
- eel's elements: HTML, CSS, JavaScript
- hello world in eel
- file access in eel app
- convert sample script to eel app (user can see which image is specified as targetðŸ˜ƒ)
- how to distribute&lt;/p&gt;
&lt;p&gt;# Web app (9min)
- problem: Users need to install
- introduce Web app
- server / client
- actually eel's elements are used in web app (we can recycle codes)
- introduce Flask
- hello world in flask
- static files in web app
- how to deploy (heroku)&lt;/p&gt;
&lt;p&gt;# wrap up (1min)
# Q&amp;amp;A (3min)&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Beginners"></category><category term="Command-Line"></category><category term="Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"></category></entry></feed>