<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Thomas Stephens</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_thomas-stephens.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-04-01T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Kubernetes after 18 months</title><link href="https://pyvideo.org/pytexas-2017/kubernetes-after-18-months.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Thomas Stephens</name></author><id>tag:pyvideo.org,2017-11-18:/pytexas-2017/kubernetes-after-18-months.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn from our experience deploying both new and legacy applications to Kubernetes over the last 18 months. We’ve done everything from building greenfield microservices to migrating our existing core HTTP applications and video processing pipeline to Kubernetes, across different cloud vendors.&lt;/p&gt;
</content><category term="PyTexas 2017"></category></entry><entry><title>Free yourself from your ORM with mypy!</title><link href="https://pyvideo.org/pytexas-2019/free-yourself-from-your-orm-with-mypy.html" rel="alternate"></link><published>2019-04-13T00:00:00+00:00</published><updated>2019-04-13T00:00:00+00:00</updated><author><name>Thomas Stephens</name></author><id>tag:pyvideo.org,2019-04-13:/pytexas-2019/free-yourself-from-your-orm-with-mypy.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Can you decouple yourself from your ORM while still maintaining safety and convenience? You can, and mypy can help! Learn how static type checking and functional patterns can help you write less coupled, more transparent and safer code, without an ORM.&lt;/p&gt;
</content><category term="PyTexas 2019"></category><category term="mypy"></category></entry><entry><title>A Tale of Two Typings</title><link href="https://pyvideo.org/pytexas-2023/a-tale-of-two-typings.html" rel="alternate"></link><published>2023-04-01T00:00:00+00:00</published><updated>2023-04-01T00:00:00+00:00</updated><author><name>Thomas Stephens</name></author><id>tag:pyvideo.org,2023-04-01:/pytexas-2023/a-tale-of-two-typings.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;A Tale of Two Typings&amp;quot;
We discuss two different methodologies we have used to add type annotations to our Python services: gradually adding type annotations, or incrementally re-writing the code with type annotations. We'll discuss the benefits and challenges of each, when either may be appropriate, and our real-world …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;A Tale of Two Typings&amp;quot;
We discuss two different methodologies we have used to add type annotations to our Python services: gradually adding type annotations, or incrementally re-writing the code with type annotations. We'll discuss the benefits and challenges of each, when either may be appropriate, and our real-world experiences doing both.
Speaker: Thomas Stephens&lt;/p&gt;
</content><category term="PyTexas 2023"></category></entry></feed>