<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_kayla-iacovino.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-02-22T00:00:00+00:00</updated><entry><title>Life after matplotlib: Harder, Better, Faster, Stronger</title><link href="https://pyvideo.org/pydata-london-2014/life-after-matplotlib-harder-better-faster-stronger.html" rel="alternate"></link><published>2014-02-22T00:00:00+00:00</published><updated>2014-02-22T00:00:00+00:00</updated><author><name>Kayla Iacovino</name></author><id>tag:pyvideo.org,2014-02-22:pydata-london-2014/life-after-matplotlib-harder-better-faster-stronger.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;AvoPlot is a simple graphical plotting program created by scientists,
for scientists. Born out of the frustrations of a multi-disciplinary
research group working in the lab, the field and a desk, it aims to
solve some of the greatest remaining problems in scientific data
handling, such as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;I hate programming! I wish I could create an interactive plot of
this data file without having to write a script.&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;This plot that matplotlib created is beautiful! But I wish I could
just click and drag that title a bit to the left&amp;quot;.&lt;/li&gt;
&lt;li&gt;&amp;quot;I have this great bit of data processing code and I'd like to make
it available as a graphical application, but I have neither the time
nor the programming ability to do so.&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;Spreadsheets suck! I want to work with my data in a visual way,
rather than having to deal with tables of numbers.&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Built on top of Python's excellent matplotlib plotting library,
AvoPlot is a graphical plotting tool designed for visualising and
analysing scientific data. In addition to providing a graphical user
interface to many of the capabilities of matplotlib, it also provides
a plug-in framework, allowing users to extend its standard feature
set to meet their specific requirements. Plug-ins can be written both
to import different data sets (e.g. binary data), and to provide
analysis tools for working with them (e.g. fitting routines,
background subtraction etc.). This talk will take a light-hearted
look at some of the data handling problems encountered by scientists,
and explain how we have brought together the capabilities of many
well established Python packages into a single convenient application
in an attempt to solve them.&lt;/p&gt;
</summary></entry></feed>