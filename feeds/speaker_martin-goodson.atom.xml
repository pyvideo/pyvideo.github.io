<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_martin-goodson.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-06-21T00:00:00+00:00</updated><entry><title>NLP on a Billion Documents: Scalable machine learning with spark</title><link href="https://pyvideo.org/pydata-london-2015/nlp-on-a-billion-documents-scalable-machine-learning-with-spark.html" rel="alternate"></link><published>2015-06-21T00:00:00+00:00</published><updated>2015-06-21T00:00:00+00:00</updated><author><name>Martin Goodson</name></author><id>tag:pyvideo.org,2015-06-21:pydata-london-2015/nlp-on-a-billion-documents-scalable-machine-learning-with-spark.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Apache Spark is becoming the new lingua franca for distributed
computing. In this talk I'll show how many machine learning tasks can
be scaled up almost trivially using Spark. For instance, we'll see
how a semi-supervised NLP algorithm can be trained on a billion
training examples using a Spark cluster.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Apache Spark is becoming the new lingua franca for distributed
computing. In this talk I'll show how many machine learning tasks can be
scaled up almost trivially using Spark.&lt;/p&gt;
&lt;p&gt;After introducing the Spark computational model I'll detail some useful
design principles for running Spark programs on large datasets. I'll
also give some tips for effective configuration of a PySpark cluster.&lt;/p&gt;
&lt;p&gt;The talk will include a step-by-step walk through of the scaling-up of
several NLP algorithms. For instance, we'll see how a semi-supervised
NLP algorithm can be trained on a billion training examples using a
PySpark cluster.&lt;/p&gt;
</summary></entry><entry><title>Most Winning A/B Test Results are Illusory</title><link href="https://pyvideo.org/pydata-london-2014/most-winning-ab-test-results-are-illusory.html" rel="alternate"></link><published>2014-02-22T00:00:00+00:00</published><updated>2014-02-22T00:00:00+00:00</updated><author><name>Martin Goodson</name></author><id>tag:pyvideo.org,2014-02-22:pydata-london-2014/most-winning-ab-test-results-are-illusory.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many people have started to suspect that their A/B testing results are
not what they seem. A/B test reports an uplift of 20% and yet this
increase never seems to translate into increased profits. So whatâ€™s
going on? I'll use python simulations to show that A/B testing is often
conducted in such a way that it virtually guarantees false positive
results. I'll also mention some python functions that can be used to
avoid these problems.&lt;/p&gt;
</summary></entry></feed>