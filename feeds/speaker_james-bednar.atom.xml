<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_james-bednar.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-07-13T00:00:00+00:00</updated><entry><title>Panel: Turn any Notebook into a Deployable Dashboard</title><link href="https://pyvideo.org/scipy-2019/panel-turn-any-notebook-into-a-deployable-dashboard.html" rel="alternate"></link><published>2019-07-13T00:00:00+00:00</published><updated>2019-07-13T00:00:00+00:00</updated><author><name>James Bednar</name></author><id>tag:pyvideo.org,2019-07-13:scipy-2019/panel-turn-any-notebook-into-a-deployable-dashboard.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Panel (panel.pyviz.org) is a new package that lets you create custom interactive apps and dashboards by connecting user-defined widgets to plots, images, tables, or text. Compared to other approaches, Panel is novel in that it works across nearly all plotting libraries, works just as well in a Jupyter notebook as on a standalone secure web server, uses the same code for both those cases, supports both Python-backed and static HTML/JavaScript exported applications, and can be used to develop rich interactive applications without tying your domain-specific code to any particular GUI or web tools.&lt;/p&gt;
</summary></entry><entry><title>Visualize any Data Easily, from Notebooks to Dashboards</title><link href="https://pyvideo.org/scipy-2019/visualize-any-data-easily-from-notebooks-to-dashboards.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>James Bednar</name></author><id>tag:pyvideo.org,2019-07-11:scipy-2019/visualize-any-data-easily-from-notebooks-to-dashboards.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial you will see how to visualize and communicate your data easily and effectively using Python tools. You'll learn how to use Panel to lay out your existing plots with widgets to make apps in the notebook or as deployed dashboards, hvPlot to make your Pandas or Xarray .plot() API calls return interactive, explorable plots, HoloViews and GeoViews to help you explore multidimensional data naturally without having to build a plot for each combination or sample of the data space, and Datashader to visualize even the very largest datasets faithfully in a web browser. See pyviz.org for links to all these tools and more.&lt;/p&gt;
</summary><category term="tutorial"></category></entry></feed>