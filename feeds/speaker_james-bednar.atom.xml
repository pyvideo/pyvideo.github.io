<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - James Bednar</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_james-bednar.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-07-11T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Panel: Turn any Notebook into a Deployable Dashboard</title><link href="https://pyvideo.org/scipy-2019/panel-turn-any-notebook-into-a-deployable-dashboard.html" rel="alternate"></link><published>2019-07-13T00:00:00+00:00</published><updated>2019-07-13T00:00:00+00:00</updated><author><name>James Bednar</name></author><id>tag:pyvideo.org,2019-07-13:/scipy-2019/panel-turn-any-notebook-into-a-deployable-dashboard.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Panel (panel.pyviz.org) is a new package that lets you create custom interactive apps and dashboards by connecting user-defined widgets to plots, images, tables, or text. Compared to other approaches, Panel is novel in that it works across nearly all plotting libraries, works just as well in a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Panel (panel.pyviz.org) is a new package that lets you create custom interactive apps and dashboards by connecting user-defined widgets to plots, images, tables, or text. Compared to other approaches, Panel is novel in that it works across nearly all plotting libraries, works just as well in a Jupyter notebook as on a standalone secure web server, uses the same code for both those cases, supports both Python-backed and static HTML/JavaScript exported applications, and can be used to develop rich interactive applications without tying your domain-specific code to any particular GUI or web tools.&lt;/p&gt;
</content><category term="SciPy 2019"></category></entry><entry><title>Visualize any Data Easily, from Notebooks to Dashboards</title><link href="https://pyvideo.org/scipy-2019/visualize-any-data-easily-from-notebooks-to-dashboards.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>James Bednar</name></author><id>tag:pyvideo.org,2019-07-11:/scipy-2019/visualize-any-data-easily-from-notebooks-to-dashboards.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial you will see how to visualize and communicate your data easily and effectively using Python tools. You'll learn how to use Panel to lay out your existing plots with widgets to make apps in the notebook or as deployed dashboards, hvPlot to make your Pandas or …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial you will see how to visualize and communicate your data easily and effectively using Python tools. You'll learn how to use Panel to lay out your existing plots with widgets to make apps in the notebook or as deployed dashboards, hvPlot to make your Pandas or Xarray .plot() API calls return interactive, explorable plots, HoloViews and GeoViews to help you explore multidimensional data naturally without having to build a plot for each combination or sample of the data space, and Datashader to visualize even the very largest datasets faithfully in a web browser. See pyviz.org for links to all these tools and more.&lt;/p&gt;
</content><category term="SciPy 2019"></category><category term="tutorial"></category></entry><entry><title>hvPlot &amp; HoloViz</title><link href="https://pyvideo.org/scipy-2022/hvplot-holoviz.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>James Bednar</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/hvplot-holoviz.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python offers many powerful visualization tools, each with their own strengths and advantages, but few people have the time and interest to learn all the different APIs required to use these different tools. Luckily, a de-facto standard API for data plotting has emerged in the Pandas .plot() API, which …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python offers many powerful visualization tools, each with their own strengths and advantages, but few people have the time and interest to learn all the different APIs required to use these different tools. Luckily, a de-facto standard API for data plotting has emerged in the Pandas .plot() API, which is now supported by many different plotting packages.&lt;/p&gt;
&lt;p&gt;In this tutorial, you will learn how to use hvPlot, a high-level interactive plotting library that exposes the power of Bokeh, Matplotlib, Plotly, Datashader, and Cartopy using the same .plot API you may already know from using Pandas or Xarray's plotting interface. We'll also show you how to turn nearly any expression you can write with that API into a web app with plots and tables by simply substituting widgets for any parameters you want users to be able to select. Thanks to the HoloViz tools on which hvPlot is built, the resulting apps can easily handle big data (up to billions of rows on an ordinary laptop), remote data (either in Jupyter or in standalone apps), streaming data (using streaming dataframe libraries), geographical data (building on the geoscience software stack), or multidimensional data (using Xarray).&lt;/p&gt;
&lt;p&gt;hvPlot's high-level interface should be sufficient for nearly all of the common data-exploration and data-analysis tasks you want to do with Pandas or Xarray, but in keeping with the HoloViz philosophy of &amp;quot;&amp;quot;shortcuts rather than dead ends&amp;quot;&amp;quot;, we'll also show you how and when to drop down to lower-level APIs when you need to, such as when building more complex apps using Panel, doing complex graphical data calculations using Datashader, or integrating plotting and interactivity into your own libraries using Param and HoloViews. With the techniques you learn in the hands-on exercises in this tutorial, you'll get the tools and know-how to effectively explore, analyze and visualize simple or complex, small or large, and static or dynamic data easily, concisely, and reproducibly. We expect participants to have previously used some sort of plotting tool and to be comfortable with Python and at least one array-based library (Numpy, Pandas, Xarray, CuPy, cuDF, Dask, etc.).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://alisterburt.github.io/napari-workshops/Scipy-0722/intro.html"&gt;https://alisterburt.github.io/napari-workshops/Scipy-0722/intro.html&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry></feed>