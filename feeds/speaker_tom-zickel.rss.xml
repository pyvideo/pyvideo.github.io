<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Tue, 20 Sep 2016 00:00:00 +0000</lastBuildDate><item><title>CPython byte-code and code-injection</title><link>https://pyvideo.org/pycon-israel-2016/cpython-byte-code-and-code-injection.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Description:&lt;/p&gt;
&lt;p&gt;Want to know what makes CPython interpreter's engine tick?&lt;/p&gt;
&lt;p&gt;How about modifying Python's bytecode or maybe modifying it live in another running Python process?&lt;/p&gt;
&lt;p&gt;Abstract:&lt;/p&gt;
&lt;p&gt;In this talk we will go into what is in a Python .pyc file and how CPython executes that bytecode (mainly by looking at the code object). Afterwards we will talk about how to make simple modifications to the bytecode in order to insert hook points into preexisting code. We will see how we can use pyrasite for inspecting and modifying an already running Python process (useful for debugging long-running servers or detecting memory leaks). Finally, we will survey some more generic Python bytecode modifiers and code injectors.&lt;/p&gt;
&lt;p&gt;Bonus points:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How can CPython 2 (but not 3) can create valid yet unusable or wrong .pyc files from .py files? The talk will be based mainly on CPython 2.7.&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/tzickel/bytehook"&gt;bytehook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/lmacken/pyrasite"&gt;pyrasite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/llllllllll/codetransformer"&gt;codetransformer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/Microsoft/PTVS/blob/0a3d9d17008e8d9b8fe2cb40c6c501f13861ccdb/Python/Product/PyDebugAttach/PyDebugAttach.cpp"&gt;PTVS code injector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;that 20 years unclosed &lt;a class="reference external" href="https://bugs.python.org/issue25083"&gt;python 2 bug&lt;/a&gt; mentioned in the bonus points: )  + another timing quirk not documented.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Slides available here:
&lt;a class="reference external" href="http://il.pycon.org/2016/static/sessions/tom-zickel.pdf"&gt;http://il.pycon.org/2016/static/sessions/tom-zickel.pdf&lt;/a&gt;
and here:
&lt;a class="reference external" href="http://tom.zickel.org/pyconil-2016"&gt;http://tom.zickel.org/pyconil-2016&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Zickel</dc:creator><pubDate>Tue, 20 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-20:pycon-israel-2016/cpython-byte-code-and-code-injection.html</guid></item></channel></rss>