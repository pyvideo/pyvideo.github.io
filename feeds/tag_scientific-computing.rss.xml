<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 21 Apr 2018 00:00:00 +0000</lastBuildDate><item><title>Scegliere le armi per la battaglia del calcolo intensivo</title><link>https://pyvideo.org/europython-2013/scegliere-le-armi-per-la-battaglia-del-calcolo-intensivo.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Enrico Franchi</dc:creator><pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-05:europython-2013/scegliere-le-armi-per-la-battaglia-del-calcolo-intensivo.html</guid><category>bigdata</category><category>optimization</category><category>data-analysis</category><category>hpc</category><category>performance</category><category>scientific-computing</category></item><item><title>An optimizing static Python compiler</title><link>https://pyvideo.org/europython-2013/an-optimizing-static-python-compiler.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kay Hayen</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/an-optimizing-static-python-compiler.html</guid><category>performance</category><category>scientific-computing</category><category>optimization</category><category>open-source</category><category>python3</category></item><item><title>Never get in a battle of bits without ammunition.</title><link>https://pyvideo.org/europython-2013/never-get-in-a-battle-of-bits-without-ammunition.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Enrico Franchi</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/never-get-in-a-battle-of-bits-without-ammunition.html</guid><category>cython</category><category>C/C++</category><category>nosql</category><category>mongodb</category><category>numeric</category><category>iPython</category><category>optimization</category><category>Algorithms</category><category>data-analysis</category><category>hpc</category><category>performance</category><category>scientific-computing</category><category>numpy</category></item><item><title>Python on Mars</title><link>https://pyvideo.org/europython-2013/python-on-mars.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ezio Melotti</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/python-on-mars.html</guid><category>pytango</category><category>space suit tango</category><category>tango</category><category>mars</category><category>scientific-computing</category><category>neural network</category><category>space suit</category></item><item><title>Python su Marte</title><link>https://pyvideo.org/europython-2013/python-su-marte.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ezio Melotti</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/python-su-marte.html</guid><category>tango</category><category>scientific-computing</category><category>pytango</category><category>neural network</category><category>tuta spaziale</category></item><item><title>Solving Google Code Jam problems with PyPy - Part 1</title><link>https://pyvideo.org/europython-2013/solving-google-code-jam-problems-with-pypy-part-1.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alessandro Amici</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/solving-google-code-jam-problems-with-pypy-part-1.html</guid><category>numpy</category><category>JIT</category><category>networkx</category><category>performance</category><category>scientific-computing</category><category>pypy</category></item><item><title>Solving Google Code Jam problems with PyPy - Part 2</title><link>https://pyvideo.org/europython-2013/solving-google-code-jam-problems-with-pypy-part-2.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alessandro Amici</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/solving-google-code-jam-problems-with-pypy-part-2.html</guid><category>numpy</category><category>JIT</category><category>networkx</category><category>performance</category><category>scientific-computing</category><category>pypy</category></item><item><title>Coding competitions with PyPy aka "Python for the win!"</title><link>https://pyvideo.org/europython-2013/coding-competitions-with-pypy-aka-python-for-the-win.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alessandro Amici</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:europython-2013/coding-competitions-with-pypy-aka-python-for-the-win.html</guid><category>numpy</category><category>JIT</category><category>networkx</category><category>performance</category><category>scientific-computing</category><category>pypy</category></item><item><title>Introduction to machine learning using Python tools</title><link>https://pyvideo.org/europython-2013/introduction-to-machine-learning-using-python-tools.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Satish Shankar</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:europython-2013/introduction-to-machine-learning-using-python-tools.html</guid><category>statistics</category><category>machine-learning</category><category>datamining</category><category>Algorithms</category><category>data-analysis</category><category>scientific-computing</category><category>sklearn</category></item><item><title>Programmazione competitiva con PyPy: "Vincere con Python!"</title><link>https://pyvideo.org/europython-2013/programmazione-competitiva-con-pypy-vincere-con-python.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alessandro Amici</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:europython-2013/programmazione-competitiva-con-pypy-vincere-con-python.html</guid><category>numpy</category><category>JIT</category><category>networkx</category><category>performance</category><category>scientific-computing</category><category>pypy</category></item><item><title>Simulare l'assetto e l'orbita di un satellite con SymPy e PyEphem</title><link>https://pyvideo.org/europython-2013/simulare-lassetto-e-lorbita-di-un-satellite-con-sympy-e-pyephem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In questa presentazione descriviamo la componente geometrica di un
simulatore di immagini da satellite; in sostanza si tratta di un sistema
che restituisce dove si trova (posizione) e dove guarda (assetto) un
satellite a partire da opportune informazioni di input. La soluzione
deve essere sufficientemente flessibile da accettare leggi orarie
arbitrarie per poter simulare il movimento di satelliti differenti.&lt;/p&gt;
&lt;p&gt;Per questo motivo si è scelto di ultilizzare la libreria di calcolo
simbolico SymPy per il calcolo dell’orientamento del satellite definito
da funzioni del tempo generiche (pitch, roll, yaw), e la libreria
astronomica PyEphem il calcolo della posizione orbitale.&lt;/p&gt;
&lt;p&gt;Integrando PyEphem con SymPy è stato possibile sviluppare un sistema
dinamico duttile e di facile utilizzo, capace di gestire facilmente
molteplici sistemi di riferimento mobili, posizioni e direzioni.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aureliana Barghini</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:europython-2013/simulare-lassetto-e-lorbita-di-un-satellite-con-sympy-e-pyephem.html</guid><category>Sympy</category><category>scientific-computing</category><category>earth-obeservation</category><category>PyEphem</category></item><item><title>GPU-accelerated data analysis in Python: a study case in Material Sciences</title><link>https://pyvideo.org/pycon-italia-2018/gpu-accelerated-data-analysis-in-python-a-study-case-in-material-sciences.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Max Planck Computing and Data Facility is engaged in the development
and optimization of algorithms and applications for high performance
computing as well as for data-intensive projects. As programming
language in data science, Python is now used at MPCDF in the scientific
area of “atom probe crystallography” (APT): a Fourier analysis in 3D
space can be simulated in order to reveal composition and
crystallographic structure at the atomic scale of billions APT
experimental data sets.&lt;/p&gt;
&lt;p&gt;The Python data ecosystem has proved to be well suited to this, as it
has grown beyond the confines of single machines to embrace scalability.
The talk aims to describe our approach to scaling across multiple GPUs,
and the role of visualization methods too.&lt;/p&gt;
&lt;p&gt;Our data workflow analysis relies on the GPU-accelerated Python software
package PyNX, an open source library which provides fast parallel
computation scattering. The code takes advantage of the high throughput
of GPUs, using the pyCUDA library.&lt;/p&gt;
&lt;p&gt;Exploratory data analysis, high productivity and rapid prototyping with
high performance are enabled through Jupyter Notebooks and Python
packages e.g., pandas, matplotlib/plotly. In production stage,
interactive visualization is realized by using standard scientific tool,
e.g. Paraview, an open-source 3D visualization program which requires
Python modules to generate visualization components within VTK files.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 14:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giuseppe Di Bernardo</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:pycon-italia-2018/gpu-accelerated-data-analysis-in-python-a-study-case-in-material-sciences.html</guid><category>GPUComputing</category><category>visualization</category><category>mathematical-modelling</category><category>image-processing</category><category>bigdata</category><category>matplotlib</category><category>analytics</category><category>data-visualization</category><category>data-analysis</category><category>Data Mining</category><category>scientific-computing</category><category>physics</category><category>python3</category></item></channel></rss>