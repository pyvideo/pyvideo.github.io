<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycascades-2019.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-02-24T00:00:00+00:00</updated><entry><title>A Taxonomy of Decorators: A-E</title><link href="https://pyvideo.org/pycascades-2019/a-taxonomy-of-decorators-a-e.html" rel="alternate"></link><published>2019-02-24T00:00:00+00:00</published><updated>2019-02-24T00:00:00+00:00</updated><author><name>Andy Fundinger</name></author><id>tag:pyvideo.org,2019-02-24:pycascades-2019/a-taxonomy-of-decorators-a-e.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since their addition in Python 2.4, Decorators have become an established part of the Python language and many of our development projects. This talk will look at the purpose, implementation, and pitfalls of five types of decorators, from the Argument changing decorator to the Execution decorator.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/a-taxonomy-of-decorators/"&gt;https://2019.pycascades.com/talks/a-taxonomy-of-decorators/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Abstraction for students of all the things</title><link href="https://pyvideo.org/pycascades-2019/abstraction-for-students-of-all-the-things.html" rel="alternate"></link><published>2019-02-24T00:00:00+00:00</published><updated>2019-02-24T00:00:00+00:00</updated><author><name>Chris Waigl:</name></author><id>tag:pyvideo.org,2019-02-24:pycascades-2019/abstraction-for-students-of-all-the-things.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You're a newish, successful, enthusiastic Python user in science or digital humanities with no computer science background. This talk suggests that thinking deeply about abstraction, that is, how to choose the right conceptual chunks for your problem, will boost your programming skills.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/abstraction-for-students-of-all-the-things/"&gt;https://2019.pycascades.com/talks/abstraction-for-students-of-all-the-things/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Account Security for the Fashionable App Developer</title><link href="https://pyvideo.org/pycascades-2019/account-security-for-the-fashionable-app-developer.html" rel="alternate"></link><published>2019-02-24T00:00:00+00:00</published><updated>2019-02-24T00:00:00+00:00</updated><author><name>Philip James</name></author><id>tag:pyvideo.org,2019-02-24:pycascades-2019/account-security-for-the-fashionable-app-developer.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the same way that we feel safe giving our info to some app and nervous giving our info to other apps, your users have some feeling of safety or concern with the apps you develop. We’ll go over design patterns and Python libraries that will help you protect your user’s accounts.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/account-security-for-the-fashionable-app-developer/"&gt;https://2019.pycascades.com/talks/account-security-for-the-fashionable-app-developer/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Building a Gendered Dictionary</title><link href="https://pyvideo.org/pycascades-2019/building-a-gendered-dictionary.html" rel="alternate"></link><published>2019-02-24T00:00:00+00:00</published><updated>2019-02-24T00:00:00+00:00</updated><author><name>Omayeli Arenyeka</name></author><id>tag:pyvideo.org,2019-02-24:pycascades-2019/building-a-gendered-dictionary.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When you think of the word “superhero” what do you imagine? Language reflects and reinforces social norms; ungendering language is a vital part of interrogating sexism. However, there’s no dataset of gendered words. In this talk, I’ll walk through the process of creating one with Python.&lt;/p&gt;
</summary></entry><entry><title>Data Protection for Developers: Past, Present, and Future</title><link href="https://pyvideo.org/pycascades-2019/data-protection-for-developers-past-present-and-future.html" rel="alternate"></link><published>2019-02-24T00:00:00+00:00</published><updated>2019-02-24T00:00:00+00:00</updated><author><name>Dustin Ingram</name></author><id>tag:pyvideo.org,2019-02-24:pycascades-2019/data-protection-for-developers-past-present-and-future.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In 1970, the German state of Hesse enacted what is widely considered the very first data protection laws. Nearly fifty years later, the European Union has implemented the strongest, most comprehensive data protection regulation ever. This talk gives a crash course on data protection and the GDPR.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/data-protection-for-developers-past-present-and-future/"&gt;https://2019.pycascades.com/talks/data-protection-for-developers-past-present-and-future/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Light Up Your Life - With Python and LEDs!</title><link href="https://pyvideo.org/pycascades-2019/light-up-your-life-with-python-and-leds.html" rel="alternate"></link><published>2019-02-24T00:00:00+00:00</published><updated>2019-02-24T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2019-02-24:pycascades-2019/light-up-your-life-with-python-and-leds.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python opens a whole new world of working with wearable electronics. MicroPython and CircuitPython are Python variants that can run with just 256k of storage space and 16k of RAM. Learn how to program LEDs with Python, to light up your life with code and creativity.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/light-up-your-life-with-python-and-leds/"&gt;https://2019.pycascades.com/talks/light-up-your-life-with-python-and-leds/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Meaningful Mentoring Moments</title><link href="https://pyvideo.org/pycascades-2019/meaningful-mentoring-moments.html" rel="alternate"></link><published>2019-02-24T00:00:00+00:00</published><updated>2019-02-24T00:00:00+00:00</updated><author><name>Trey Hunner</name></author><id>tag:pyvideo.org,2019-02-24:pycascades-2019/meaningful-mentoring-moments.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You're mentoring at a programming workshop and your learner is having trouble with their code: what do you do?&lt;/p&gt;
&lt;p&gt;Let's learn how to be a good in-person code mentor!&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/meaningful-mentoring-moments/"&gt;https://2019.pycascades.com/talks/meaningful-mentoring-moments/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>So tell me, what is your musical taste?</title><link href="https://pyvideo.org/pycascades-2019/so-tell-me-what-is-your-musical-taste.html" rel="alternate"></link><published>2019-02-24T00:00:00+00:00</published><updated>2019-02-24T00:00:00+00:00</updated><author><name>Kyungyun Lee</name></author><id>tag:pyvideo.org,2019-02-24:pycascades-2019/so-tell-me-what-is-your-musical-taste.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Often we ask and get asked &amp;quot;what kind of music do you like?&amp;quot; Usual answer is just a hand-wavy list of a few genres and songs. So, what is the common pattern of the songs we like? The talk will feature a simple web app to quantify musical taste and introduce how music recommendation systems work.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/so-tell-me-what-is-your-musical-taste/"&gt;https://2019.pycascades.com/talks/so-tell-me-what-is-your-musical-taste/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Given this, assert that: fluent testing using fixtures and properties</title><link href="https://pyvideo.org/pycascades-2019/given-this-assert-that-fluent-testing-using-fixtures-and-properties.html" rel="alternate"></link><published>2019-02-23T00:00:00+00:00</published><updated>2019-02-23T00:00:00+00:00</updated><author><name>Paul Watts</name></author><id>tag:pyvideo.org,2019-02-23:pycascades-2019/given-this-assert-that-fluent-testing-using-fixtures-and-properties.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's face it, most of us don't write enough tests. Even if we do, our tests require a lot of boilerplate and don't test everything we'd want.&lt;/p&gt;
&lt;p&gt;In this talk we'll learn how to make smaller, more self-descriptive tests by using pytest fixtures and property-based tests using Hypothesis.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/given-this-assert-that-fluent-testing-using-fixtures-and-properties/"&gt;https://2019.pycascades.com/talks/given-this-assert-that-fluent-testing-using-fixtures-and-properties/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Guide to your own artificial intelligence application in 3 easy steps</title><link href="https://pyvideo.org/pycascades-2019/guide-to-your-own-artificial-intelligence-application-in-3-easy-steps.html" rel="alternate"></link><published>2019-02-23T00:00:00+00:00</published><updated>2019-02-23T00:00:00+00:00</updated><author><name>Norah Klintberg Sakal</name></author><id>tag:pyvideo.org,2019-02-23:pycascades-2019/guide-to-your-own-artificial-intelligence-application-in-3-easy-steps.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What do you think of when you hear “artificial intelligence”? Perhaps self-driving cars, autonomous robots and Siri, Alexa or Google Home? But it doesn’t have to be that complex. You can build a powerful image classification model within a topic that inspires and interests you - with 3 easy steps.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/guide-to-your-own-artificial-intelligence-application-in-3-easy-steps/"&gt;https://2019.pycascades.com/talks/guide-to-your-own-artificial-intelligence-application-in-3-easy-steps/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Hunting the Bugs</title><link href="https://pyvideo.org/pycascades-2019/hunting-the-bugs.html" rel="alternate"></link><published>2019-02-23T00:00:00+00:00</published><updated>2019-02-23T00:00:00+00:00</updated><author><name>Maria McKinley</name></author><id>tag:pyvideo.org,2019-02-23:pycascades-2019/hunting-the-bugs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bug hunting is a time honored tradition that eats up entirely too much time. Learn some tricks to minimize this time. How can the stacktrace help if it is confusing? There are many tutorials to teach you the mechanics of using the debugger, but let's step through how to actually find the bugs.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/hunting-the-bugs/"&gt;https://2019.pycascades.com/talks/hunting-the-bugs/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Recursion, Fractals, and the Python Turtle Module</title><link href="https://pyvideo.org/pycascades-2019/recursion-fractals-and-the-python-turtle-module.html" rel="alternate"></link><published>2019-02-23T00:00:00+00:00</published><updated>2019-02-23T00:00:00+00:00</updated><author><name>Hayley Denbraver</name></author><id>tag:pyvideo.org,2019-02-23:pycascades-2019/recursion-fractals-and-the-python-turtle-module.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Recursion can be a difficult thing to grasp at first. This talk will teach the basics of recursion, using fractals drawn by the python turtle module to help attendees 'see' how recursion works. Additionally, fractals are super cool and the turtle module is fun for all ages!&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/recursion-fractals-and-the-python-turtle-module/"&gt;https://2019.pycascades.com/talks/recursion-fractals-and-the-python-turtle-module/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Turning 'wat' into 'why'</title><link href="https://pyvideo.org/pycascades-2019/turning-wat-into-why.html" rel="alternate"></link><published>2019-02-23T00:00:00+00:00</published><updated>2019-02-23T00:00:00+00:00</updated><author><name>Katie McLaughlin</name></author><id>tag:pyvideo.org,2019-02-23:pycascades-2019/turning-wat-into-why.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When using a programming language for the first time, a new developer coming across a bugbear may state: &amp;quot;Oh, this language is TERRIBLE. I HATE IT&amp;quot;&lt;/p&gt;
&lt;p&gt;Or: &amp;quot;Huh. I wonder why that is...&amp;quot;&lt;/p&gt;
&lt;p&gt;Take a trip along the latter path through a dozen different languages and understand why things the way they are.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/turning-wat-into-why/"&gt;https://2019.pycascades.com/talks/turning-wat-into-why/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Who to blame for all your problems</title><link href="https://pyvideo.org/pycascades-2019/who-to-blame-for-all-your-problems.html" rel="alternate"></link><published>2019-02-23T00:00:00+00:00</published><updated>2019-02-23T00:00:00+00:00</updated><author><name>Ben Berry</name></author><id>tag:pyvideo.org,2019-02-23:pycascades-2019/who-to-blame-for-all-your-problems.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What does it mean to conduct a postmortem blamelessly? Why should you run your postmortems without blame? This talk will show you why and how to run blameless postmortems for incidents at your workspace, whether you're a Frontend Engineer or an SRE.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/who-to-blame-for-all-your-problems/"&gt;https://2019.pycascades.com/talks/who-to-blame-for-all-your-problems/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Distributed Web Scraping in Python</title><link href="https://pyvideo.org/pycascades-2019/distributed-web-scraping-in-python.html" rel="alternate"></link><published>1990-01-01T00:00:00+00:00</published><updated>1990-01-01T00:00:00+00:00</updated><author><name>Josh Weissbock</name></author><id>tag:pyvideo.org,1990-01-01:pycascades-2019/distributed-web-scraping-in-python.html</id><summary type="html"></summary></entry></feed>