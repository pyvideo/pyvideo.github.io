<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_yt.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-07-14T00:00:00+00:00</updated><entry><title>The Demeshening The Next Generation of Particle Support in yt</title><link href="https://pyvideo.org/scipy-2017/the-demeshening-the-next-generation-of-particle-support-in-yt.html" rel="alternate"></link><published>2017-07-14T00:00:00+00:00</published><updated>2017-07-14T00:00:00+00:00</updated><author><name>Nathan Goldbaum</name></author><id>tag:pyvideo.org,2017-07-14:scipy-2017/the-demeshening-the-next-generation-of-particle-support-in-yt.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Large N-body particle datasets present a unique challenge for analysis and visualization. With multi-terabyte datasets becoming increasingly common, the goal of performing large-scale analysis and visualization of such large quantities of data becomes increasingly challenging.&lt;/p&gt;
&lt;p&gt;In this talk we describe a new particle indexing scheme we have designed for yt, a python toolkit for the analysis and visualization of 3D simulation data. By making use of compressed Morton bitmaps to index the locations of particles, we substantially decrease the overhead to perform spatial chunking. By rethinking the high-level yt API for N-body data to be more particle-centric, we are able to scale analysis and visualization to datasets containing very large numbers of particles while reaping performance improvements and decreased memory overhead when working with smaller datasets.&lt;/p&gt;
</summary><category term="yt"></category></entry></feed>