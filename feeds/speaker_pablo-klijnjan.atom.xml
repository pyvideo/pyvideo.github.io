<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_pablo-klijnjan.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-06-04T00:00:00+00:00</updated><entry><title>Speeding up Python with Rust to synthesize DNA</title><link href="https://pyvideo.org/pycon-israel-2018/speeding-up-python-with-rust-to-synthesize-dna.html" rel="alternate"></link><published>2018-06-04T00:00:00+00:00</published><updated>2018-06-04T00:00:00+00:00</updated><author><name>Pablo Klijnjan</name></author><id>tag:pyvideo.org,2018-06-04:pycon-israel-2018/speeding-up-python-with-rust-to-synthesize-dna.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When performance is a key factor for your algorithm, Python might not be the best tool. Rust is a system programming language with strong security guarantees and C-like performance while remaining as productive as Python. We will explore why we chose Rust as the language to implement parts of our biological algorithm.&lt;/p&gt;
</summary></entry></feed>