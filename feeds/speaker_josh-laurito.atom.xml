<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_josh-laurito.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-07T00:00:00+00:00</updated><entry><title>When to avoid the subway: using python to make your commute slightly less terrible</title><link href="https://pyvideo.org/pygotham-2017/when-to-avoid-the-subway-using-python-to-make-your-commute-slightly-less-terrible.html" rel="alternate"></link><published>2017-10-07T00:00:00+00:00</published><updated>2017-10-07T00:00:00+00:00</updated><author><name>Josh Laurito</name></author><id>tag:pyvideo.org,2017-10-07:pygotham-2017/when-to-avoid-the-subway-using-python-to-make-your-commute-slightly-less-terrible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While there are already great tools for real time analysis of traffic, figuring out the value of waking up 15 minutes early isn't always obvious. But we can figure out times and days that are most likely to have breakdowns as delays on our own,  and use this to improve our commute.&lt;/p&gt;
&lt;p&gt;Primarily,  this talk is about:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;setting up a system to gather unique information about train performance&lt;/li&gt;
&lt;li&gt;finding factors that correlate with delays and complaints about poor train experiences&lt;/li&gt;
&lt;li&gt;using this information to find the best times to avoid,  and where there's the most value in waking up early to commute&lt;/li&gt;
&lt;li&gt;making this information accessible and convenient for me and my friends/ co-workers&lt;/li&gt;
&lt;/ul&gt;
</summary></entry></feed>