<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Stephanie Wang</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_stephanie-wang.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-07-12T00:00:00+00:00</updated><subtitle></subtitle><entry><title>The need for serverless Python</title><link href="https://pyvideo.org/scipy-2021/the-need-for-serverless-python.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Stephanie Wang</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/the-need-for-serverless-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Running an application in the cloud today means both writing the program and figuring out how to deploy it. Deployment requires provisioning virtual machines while considering both cost and the application’s needs. Unfortunately, it’s very difficult to know ahead of time how many resources an application might …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Running an application in the cloud today means both writing the program and figuring out how to deploy it. Deployment requires provisioning virtual machines while considering both cost and the application’s needs. Unfortunately, it’s very difficult to know ahead of time how many resources an application might need and how that will change over time. The promise of serverless execution is to lower the barrier of deployment, so that users can focus on programming logic and deploy applications without having to think about machines (or have their own DevOps team). Meanwhile, the serverless platform promises to optimize both performance and cost through autoscaling. However, the reality today is that it is still very difficult to bring serverless execution to many classes of applications, like data processing or model inference. These applications do not fit into the current General-purpose severless offerings, namely functions-as-a-service. In this Talk, I will discuss the key limitations faced by these applications, and our vision for the Ray project as a truly General-purpose serverless platform.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry></feed>