<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_joe-drumgoole.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-07-11T00:00:00+00:00</updated><entry><title>Introduction to Python and MongoDB</title><link href="https://pyvideo.org/europython-2019/introduction-to-python-and-mongodb.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Joe Drumgoole</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/introduction-to-python-and-mongodb.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;This talk will give anyone who has a basic knowledge of Python insight
into how&lt;/div&gt;
&lt;div class="line"&gt;easy it is to build database applications using the PyMongo Python
library for MongoDB. There will be live coding!&lt;/div&gt;
&lt;/div&gt;
</summary><category term="python"></category></entry><entry><title>A deep dive into the Pymongo MongoDB driver</title><link href="https://pyvideo.org/europython-2016/a-deep-dive-into-the-pymongo-mongodb-driver.html" rel="alternate"></link><published>2016-08-04T00:00:00+00:00</published><updated>2016-08-04T00:00:00+00:00</updated><author><name>Joe Drumgoole</name></author><id>tag:pyvideo.org,2016-08-04:europython-2016/a-deep-dive-into-the-pymongo-mongodb-driver.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Joe Drumgoole - A deep dive into the Pymongo MongoDB driver
[EuroPython 2016]
[21 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/a-deep-dive-into-the-pymongo-mongodb-driver"&gt;https://ep2016.europython.eu//conference/talks/a-deep-dive-into-the-pymongo-mongodb-driver&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The Pymongo driver is one of MongoDB’s most popular driver interfaces for
connecting to MongoDB. But developers rarely look under the cover to see
what’s happening inside the driver.&lt;/p&gt;
&lt;p&gt;By having a deeper insight into how the driver constructs server requests
and responds, developers will be able to write more effective MongoDB
applications in Python.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;The Pymongo driver is one of MongoDB’s most popular driver interfaces for
connecting to MongoDB. But developers rarely look under the cover to see
what’s happening inside the driver.&lt;/p&gt;
&lt;p&gt;By having a deeper insight into how the driver constructs server requests
and responds, developers will be able to write more effective MongoDB
applications in Python.&lt;/p&gt;
&lt;p&gt;We will look at :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Initial connection&lt;/li&gt;
&lt;li&gt;A query&lt;/li&gt;
&lt;li&gt;A simple write operation&lt;/li&gt;
&lt;li&gt;A bulk write operation&lt;/li&gt;
&lt;li&gt;How the driver responds when we have a node failure&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will also give insight into the driver’s approach to server selection
when connecting to a replicas set (a multi-node instance of MongoDB).&lt;/p&gt;
</summary></entry></feed>