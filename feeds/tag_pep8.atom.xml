<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_pep8.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2011-09-05T00:00:00+00:00</updated><entry><title>PyOhio 2010: Code With Style</title><link href="https://pyvideo.org/pyohio-2010/pyohio-2010--code-with-style.html" rel="alternate"></link><published>2010-07-31T00:00:00+00:00</published><updated>2010-07-31T00:00:00+00:00</updated><author><name>Clayton Parker</name></author><id>tag:pyvideo.org,2010-07-31:pyohio-2010/pyohio-2010--code-with-style.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Code With Style&lt;/p&gt;
&lt;p&gt;Presented by Clayton Parker&lt;/p&gt;
&lt;p&gt;Six Feet Up's senior developer Clayton Parker will lead you on a journey
to become a Python Zen master. Your code should be as fashionable as it
is functional. To quote the Zen of Python, &amp;quot;Beautiful is better than
ugly&amp;quot;. This talk will teach you about the Python style guide and why it
is important. The talk will show you examples of well written Python and
how to analyze your current code to make Guido proud.&lt;/p&gt;
</summary><category term="code style"></category><category term="pep8"></category><category term="pyohio"></category><category term="pyohio2010"></category><category term="style"></category></entry><entry><title>Lightning Talks - Thursday morning</title><link href="https://pyvideo.org/djangocon-us-2011/djangocon-2011--lightning-talks---thursday-mornin.html" rel="alternate"></link><published>2011-09-05T00:00:00+00:00</published><updated>2011-09-05T00:00:00+00:00</updated><author><name>Jason Boyer</name></author><id>tag:pyvideo.org,2011-09-05:djangocon-us-2011/djangocon-2011--lightning-talks---thursday-mornin.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks - Thursday morning&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 - Jason Boyer: Multi DB Routing&lt;/li&gt;
&lt;li&gt;05:20 - Vicky Tuite: &lt;a class="reference external" href="http://pystar.org/"&gt;PyStar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;08:55 - Katie Cunningham: &lt;a class="reference external" href="https://github.com/kcunning/android-django"&gt;Django
Explorer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;11:45 - Shawn Milo: You Should Contribute to Django&lt;/li&gt;
&lt;li&gt;16:00 - Graham King: Psychology for your web app&lt;/li&gt;
&lt;li&gt;21:30 - Tobias McNulty: &lt;a class="reference external" href="http://bit.ly/fabulaws"&gt;FabulAWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;27:00 - Harris Lapiroff:
&lt;a class="reference external" href="http://github.com/melinath/django-pipetter"&gt;Pipetter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;31:05 - Tim White: &lt;a class="reference external" href="http://wtfawd.com/"&gt;wtfawd?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;33:50 - Matt Lauber: Multiforms: A simple tool for managing multiple
forms&lt;/li&gt;
&lt;li&gt;38:55 - Kenneth Love: The dumb and lazy guide to class-based views&lt;/li&gt;
&lt;li&gt;42:30 - Todd Davies: Let's talk about &amp;quot;control by users&amp;quot;&lt;/li&gt;
&lt;li&gt;47:40 - Sebastian Serrano: backbone.js with django and tastypie&lt;/li&gt;
&lt;li&gt;51:15 - ?: &lt;a class="reference external" href="http://www.activestate.com/cloud"&gt;Stackato&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;56:00 - Steve Ivy: &lt;a class="reference external" href="https://github.com/justquick/django-activity-stream"&gt;Activity
streams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;59:15 - Kenneth Love and Chris Jones: There's always money in the
Banana(-py) Stand!
(&lt;a class="reference external" href="https://github.com/kennethlove/Banana-Py"&gt;Banana-Py&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;1:00:46 - Brian Davis: Static analysis in Emacs
(&lt;a class="reference external" href="http://bit.ly/emacs-psa"&gt;emacs-psa&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;1:03:55 - ?: Sitting on your butt and letting your ideas happen
without you&lt;/li&gt;
&lt;li&gt;1:06:35 - Mjumbe Poe:
&lt;a class="reference external" href="https://github.com/mjumbewu/django-model-blocks"&gt;django-model-blocks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="lightning talks"></category><category term="activitystreams"></category><category term="backbone.js"></category><category term="banana-py"></category><category term="cloud"></category><category term="contribute"></category><category term="djangocon"></category><category term="djangocon2011"></category><category term="djangoexplorer"></category><category term="django-model-blocks"></category><category term="eamcs"></category><category term="fabulaws"></category><category term="multidb"></category><category term="multiforms"></category><category term="pep8"></category><category term="pipetter"></category><category term="psychology"></category><category term="pyflakes"></category><category term="pylint"></category><category term="pystar"></category><category term="stackato"></category><category term="tastypie"></category><category term="views"></category><category term="wtfawd"></category></entry><entry><title>Exhibition of Atrocity</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--exhibition-of-atrocity.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Mike Pirnat</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--exhibition-of-atrocity.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Exhibition of Atrocity&lt;/p&gt;
&lt;p&gt;Presented by Mike Pirnat&lt;/p&gt;
&lt;p&gt;Believe it or not, but you can write pretty horrendously awful code even
in a language as elegant as Python. Over the years, I've committed my
share of sins; now it's time to come clean. Step right up for a tour of
twisted, evil, and downright wrong code, and learn some strategies to
avoid writing criminally bad code--if you dare!&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;What does it look like when good intentions go horribly wrong? This talk
will take a tour through pathological code from my past (as well as some
contributions from friends, coworkers, and the community), featuring
such terrors as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Lies, Damn Lies, and Hungarian Notation&lt;/li&gt;
&lt;li&gt;Crimes Against PEP-8&lt;/li&gt;
&lt;li&gt;The Diaper Pattern&lt;/li&gt;
&lt;li&gt;The Beast With a Thousand Elifs&lt;/li&gt;
&lt;li&gt;The Mile-Long Club&lt;/li&gt;
&lt;li&gt;God Objects and God Methods&lt;/li&gt;
&lt;li&gt;The Malignant Menace of Mutable Keyword Arguments&lt;/li&gt;
&lt;li&gt;The Seductive Lure of Global State&lt;/li&gt;
&lt;li&gt;Slower Applications Through DTO Bondage&lt;/li&gt;
&lt;li&gt;A Twisty Maze of Single-Character Variables, All Alike&lt;/li&gt;
&lt;li&gt;Lambdas, Lambdas Everywhere&lt;/li&gt;
&lt;li&gt;The List Comprehension That Ate Cincinnati&lt;/li&gt;
&lt;li&gt;Adventures in Wheel Reinvention&lt;/li&gt;
&lt;li&gt;New and Creative Ways to Break the Build&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;...as well as others as time permits.&lt;/p&gt;
</summary><category term="badcode"></category><category term="diaperpattern"></category><category term="lambda"></category><category term="pep8"></category><category term="pycon"></category><category term="pycon2011"></category></entry></feed>