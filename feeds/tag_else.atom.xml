<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_else.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2010-02-19T00:00:00+00:00</updated><entry><title>Python's Dusty Corners (#182)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--python--39-s-dusty-corners---182.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Jack Diederich</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--python--39-s-dusty-corners---182.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python's Dusty Corners&lt;/p&gt;
&lt;p&gt;Presented by Jack Diederich&lt;/p&gt;
&lt;p&gt;The talk will be a brief overview of all the features in python that you
don't need to know about right up until the moment you do. The list
includes how comparisons work, descriptors, iterators, context managers,
namespaces, else clauses on for/while loops (suggested by Hettinger).
The narrative of the talk is that these are features that you don't need
and/or shouldn't use in your day-to-day code but that you need to keep
in the back of your mind because other people's code and the stdlib do
use them. As Alex Martelli pointed out in his wonderful talk
&amp;quot;Abstractions as Leverage&amp;quot; you can't successfully function at one level
of abstraction if you don't know what is going on at the next level
down. This talk is a whirlwind tour of the next level down.&lt;/p&gt;
</summary><category term="contextmanagers"></category><category term="descripters"></category><category term="else"></category><category term="iterators"></category><category term="namespaces"></category><category term="pycon"></category><category term="pycon2010"></category></entry></feed>