<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_javier-arias.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-09-24T10:30:00+02:00</updated><entry><title>Why lazy developers write beautiful code</title><link href="https://pyvideo.org/pycon-es-2017/why-lazy-developers-write-beautiful-code.html" rel="alternate"></link><published>2017-09-24T10:30:00+02:00</published><updated>2017-09-24T10:30:00+02:00</updated><author><name>Javier Arias</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/why-lazy-developers-write-beautiful-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There has been a lot of discussion during the last 50 years about the nature of programming: Is it an art like poetry? Is it craftsmanship like pottery? Is it an exact science like physics? Or a non exact science like medicine? Is it engineering like bridge building?&lt;/p&gt;
&lt;p&gt;Whatever the nature of software development is: during this time, a lot of tools and techniques have appeared to make your lazy-developer life more difficult: Coding conventions, OOP, FP, SOLID, Design Patterns, Tests, TDD, UML, Use-cases, CASE tools, Refactoring, RUP, Agile, SCRUM, Continuous Integration, Code Complexity Metrics, Emergent Architecture, DevOps, SCM... and whatnot!
But, sometimes, being a lazy developer makes you do things that seemed counterintuitive, in order to pursue your main objective: WORK LESS.&lt;/p&gt;
</summary></entry></feed>