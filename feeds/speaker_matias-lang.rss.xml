<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 24 Nov 2018 00:00:00 +0000</lastBuildDate><item><title>Sobreviviendo al síndrome del segundo sistema con Python</title><link>https://pyvideo.org/pycon-ar-2018/sobreviviendo-al-sindrome-del-segundo-sistema-con-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Reescribir una gran parte de un proyecto para saldar una deuda técnica puede ser un trabajo muy cansador y arriesgado, que muchas veces puede terminar en la nada. Vamos a contar los aciertos y errores que experimentamos haciendo un cambio de este tipo en nuestro proyecto de software libre. En particular, cómo nos movimos de una base de datos NoSQL a una SQL, desarrollamos un framework propio para APIs RESTful e hicimos uso intensivo de unit tests.&lt;/p&gt;
&lt;p&gt;Faraday es un proyecto open source que originalmente usaba CouchDB con una gran cantidad de usuarios. A lo largo del tiempo la aplicacion se hizo cada vez mas dificil mantener y CouchDB estaba pronto a deprecar la version que utilizabamos. En esta charla te contamos como encaramos y que herramientas de ingeniería utilizamos para sobrevivir a un viaje que parecia no terminar nunca. Tambien contaremos cuando conviene utilizar una base de datos relacional y cuando una NoSQL. Mostraremos como hicimos una API Rest al estilo DjangoRestful framework usando Flask (codigo en &lt;a class="reference external" href="https://github.com/infobyte/faraday"&gt;https://github.com/infobyte/faraday&lt;/a&gt;).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matias Lang</dc:creator><pubDate>Sat, 24 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-24:pycon-ar-2018/sobreviviendo-al-sindrome-del-segundo-sistema-con-python.html</guid></item></channel></rss>