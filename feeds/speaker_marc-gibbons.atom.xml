<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Marc Gibbons</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_marc-gibbons.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-05-17T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Empathetic testing: Developing with compassion and humility.</title><link href="https://pyvideo.org/djangocon-us-2023/empathetic-testing-developing-with-compassion-and-humility.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Marc Gibbons</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/empathetic-testing-developing-with-compassion-and-humility.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tests can be a powerful tool used to increase our development speed and empower us with the confidence to refactor and improve codebases. Writing tests with these goals in mind requires empathy and compassion toward other developers and even our future selves. Conversely, tests written with different objectives, such …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tests can be a powerful tool used to increase our development speed and empower us with the confidence to refactor and improve codebases. Writing tests with these goals in mind requires empathy and compassion toward other developers and even our future selves. Conversely, tests written with different objectives, such as achieving an arbitrary coverage score, can have the opposite effect and cause suffering.&lt;/p&gt;
&lt;p&gt;Together, we will explore the following ideas:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How writing tests beforehand is an act of compassion.&lt;/li&gt;
&lt;li&gt;Testing outcomes, rather than implementation choices, takes humility.&lt;/li&gt;
&lt;li&gt;Empathizing with cognitive overwhelm: how isolating and minimizing test setup can make your code easier to understand and extend.&lt;/li&gt;
&lt;li&gt;Do you really need that mock? Balancing the needs of now with those of the future.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk aims to provide valuable insights for beginners embarking on their testing journeys and challenge experienced developers to contemplate their philosophy toward testing. While a basic familiarity with testing in Django is beneficial for understanding practical examples, it is not a prerequisite.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Finding 2.0</title><link href="https://pyvideo.org/djangocon-us-2024/finding-20.html" rel="alternate"></link><published>2024-09-24T00:00:00+00:00</published><updated>2024-09-24T00:00:00+00:00</updated><author><name>Marc Gibbons</name></author><id>tag:pyvideo.org,2024-09-24:/djangocon-us-2024/finding-20.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the world of library development, achieving version 2.0 often takes years, if it's achieved at all. Surprisingly, nearly 90% of packages published to PyPI using semantic versioning have a major release number of less than two. What makes reaching this milestone so elusive?&lt;/p&gt;
&lt;p&gt;If we applied software …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the world of library development, achieving version 2.0 often takes years, if it's achieved at all. Surprisingly, nearly 90% of packages published to PyPI using semantic versioning have a major release number of less than two. What makes reaching this milestone so elusive?&lt;/p&gt;
&lt;p&gt;If we applied software versioning to our lives, what version would we give ourselves? Perhaps in our formative years as students, we'd be a part of a 0.x series, and as we establish careers and become self-sufficient, we might progress to a 1.x scheme. But do we settle there?&lt;/p&gt;
&lt;p&gt;Just like software libraries, our lives require maintenance, and despite our best intentions, hacks and workarounds inevitably infiltrate our routines. As these multiply and compound, our health can suffer. Do we wait for disaster to strike? Or, can we take a proactive approach in not only addressing problem areas but also striving for more?&lt;/p&gt;
&lt;p&gt;Together, we'll explore certain risks to our wellbeing inherent to our profession as software developers: sedentary lifestyles, long work hours, and social isolation, and how we can plan and design our next major release for success.&lt;/p&gt;
&lt;p&gt;&amp;quot;Finding 2.0&amp;quot; is an invitation to reimagine what's possible across life areas. Whether facing health struggles, burnout, or feeling stuck in a rut, this talk provides practical insights and actionable steps for rewriting the code of your life and embracing a future of health and fulfillment.&lt;/p&gt;
</content><category term="DjangoCon US 2024"></category></entry><entry><title>Finding 2.0</title><link href="https://pyvideo.org/pycon-us-2025/finding-20.html" rel="alternate"></link><published>2025-05-17T00:00:00+00:00</published><updated>2025-05-17T00:00:00+00:00</updated><author><name>Marc Gibbons</name></author><id>tag:pyvideo.org,2025-05-17:/pycon-us-2025/finding-20.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Note: This video contains discussion and images about personal experiences with cancer treatment.&lt;/p&gt;
&lt;p&gt;In the world of library development, achieving version 2.0 often takes years, if it's achieved at all. Surprisingly, nearly 90% of packages published to PyPI using semantic versioning have a major release number of less …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Note: This video contains discussion and images about personal experiences with cancer treatment.&lt;/p&gt;
&lt;p&gt;In the world of library development, achieving version 2.0 often takes years, if it's achieved at all. Surprisingly, nearly 90% of packages published to PyPI using semantic versioning have a major release number of less than two. What makes reaching this milestone so elusive?&lt;/p&gt;
&lt;p&gt;If we applied software versioning to our lives, what version would we give ourselves? Perhaps in our formative years as students, we'd be a part of a 0.x series, and as we establish careers and become self-sufficient, we might progress to a 1.x scheme. But do we settle there?&lt;/p&gt;
&lt;p&gt;Just like software libraries, our lives require maintenance, and despite our best intentions, hacks and workarounds inevitably infiltrate our routines. As these multiply and compound, our health can suffer. Do we wait for disaster to strike? Or, can we take a proactive approach in not only addressing problem areas but also striving for more?&lt;/p&gt;
&lt;p&gt;Together, we'll explore certain risks to our wellbeing inherent to our profession as software developers: sedentary lifestyles, long work hours, and social isolation, and how we can plan and design our next major release for success.&lt;/p&gt;
&lt;p&gt;&amp;quot;Finding 2.0&amp;quot; is an invitation to reimagine what's possible across life areas. Whether facing health struggles, burnout, or feeling stuck in a rut, this talk provides practical insights and actionable steps for rewriting the code of your life and embracing a future of health and fulfillment.&lt;/p&gt;
</content><category term="PyCon US 2025"></category></entry></feed>