<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_austin-rochford.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-08-17T00:00:00+00:00</updated><entry><title>Two Years of Bayesian Bandits for E Commerce</title><link href="https://pyvideo.org/pydata-new-york-city-2018/two-years-of-bayesian-bandits-for-e-commerce.html" rel="alternate"></link><published>2018-08-17T00:00:00+00:00</published><updated>2018-08-17T00:00:00+00:00</updated><author><name>Austin Rochford</name></author><id>tag:pyvideo.org,2018-08-17:pydata-new-york-city-2018/two-years-of-bayesian-bandits-for-e-commerce.html</id><summary type="html"></summary></entry><entry><title>Understanding NBA Foul Calls with Python</title><link href="https://pyvideo.org/pydata-new-york-city-2017/understanding-nba-foul-calls-with-python.html" rel="alternate"></link><published>2017-11-27T00:00:00+00:00</published><updated>2017-11-27T00:00:00+00:00</updated><author><name>Austin Rochford</name></author><id>tag:pyvideo.org,2017-11-27:pydata-new-york-city-2017/understanding-nba-foul-calls-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since 2015, the NBA has released a detailed report of foul calls and non-calls that occur in the final two minutes of close games. This talk is a case study in using open source Python packages to analyze these reports in order to understand the relationship between game dynamics, player abilities, and foul calls. Our main goal is to quantify the relationship between player ability and foul calls. Since intentional fouls are a ubiquitous part of the NBA endgame, this data set also contains rich information about the relationship between game dynamics and intentional fouls for us to model. This case study showcases the role of open source Python pacakges in a modern statistical modeling workflow.&lt;/p&gt;
</summary></entry><entry><title>Variational Inference in Python</title><link href="https://pyvideo.org/pydata-dc-2016/variational-inference-in-python.html" rel="alternate"></link><published>2016-10-08T00:00:00+00:00</published><updated>2016-10-08T00:00:00+00:00</updated><author><name>Austin Rochford</name></author><id>tag:pyvideo.org,2016-10-08:pydata-dc-2016/variational-inference-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Jupyter notebook: &lt;a class="reference external" href="https://nbviewer.jupyter.org/gist/AustinRochford/91cabfd2e1eecf9049774ce529ba4c16"&gt;https://nbviewer.jupyter.org/gist/AustinRochford/91cabfd2e1eecf9049774ce529ba4c16&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Inference in Bayesian models often requires simulation to approximate posterior distributions. Variational inference (VI) instead approximates posteriors through optimization. Recent theoretical and computational advances in automatic variational inference have made VI more accessible. This talk will give an introduction to VI and show software packages for performing VI in Python.&lt;/p&gt;
</summary></entry></feed>