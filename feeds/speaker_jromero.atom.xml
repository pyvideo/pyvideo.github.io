<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jromero.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-09-23T11:00:00+02:00</updated><entry><title>Logueando como un pro, porque llenar un script con prints sigue siendo cutre</title><link href="https://pyvideo.org/pycon-es-2017/logueando-como-un-pro-porque-llenar-un-script-con-prints-sigue-siendo-cutre.html" rel="alternate"></link><published>2017-09-23T11:00:00+02:00</published><updated>2017-09-23T11:00:00+02:00</updated><author><name>J.Romero</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/logueando-como-un-pro-porque-llenar-un-script-con-prints-sigue-siendo-cutre.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A menudo necesitamos un cierto nivel de comunicación desde nuestros scripts y el candidato preferido por todos es &lt;cite&gt;print()&lt;/cite&gt; para sacar mensajes en el intérprete... ¡hasta que conozcas &lt;cite&gt;logging&lt;/cite&gt;!&lt;/p&gt;
&lt;p&gt;Vamos a conocer el módulo &lt;cite&gt;logging&lt;/cite&gt; de la biblioteca estándar: ¿Para qué es útil? ¿Cuáles son sus componentes principales? ¿Cómo puedo aprovecharlo? Y veremos muchos ejemplos: entre ellos, entenderemos por fin el &lt;cite&gt;LOGGING&lt;/cite&gt; de los ajustes de Django.&lt;/p&gt;
</summary><category term="logging"></category></entry></feed>