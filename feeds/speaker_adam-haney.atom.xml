<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_adam-haney.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-07-27T00:00:00+00:00</updated><entry><title>Digging into Abstract Syntax Trees for analyzing and modifying Python programs</title><link href="https://pyvideo.org/pyohio-2014/digging-into-abstract-syntax-trees-for-analyzing.html" rel="alternate"></link><published>2014-07-27T00:00:00+00:00</published><updated>2014-07-27T00:00:00+00:00</updated><author><name>Adam Haney</name></author><id>tag:pyvideo.org,2014-07-27:pyohio-2014/digging-into-abstract-syntax-trees-for-analyzing.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will explain how the python interpreter uses the ast module to
turn the code you write into Abstract Syntax Trees which are then
executed. With an understanding of these underlying techniques we'll
examine static analysis tools such as pyflakes and talk about how to
create programs that analyze the structure of python scripts.&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>