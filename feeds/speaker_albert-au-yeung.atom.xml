<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_albert-au-yeung.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-11-23T00:00:00+00:00</updated><entry><title>Deploying Machine Learning Models in Python</title><link href="https://pyvideo.org/pycon-hk-2018/deploying-machine-learning-models-in-python.html" rel="alternate"></link><published>2018-11-23T00:00:00+00:00</published><updated>2018-11-23T00:00:00+00:00</updated><author><name>Albert Au Yeung</name></author><id>tag:pyvideo.org,2018-11-23:pycon-hk-2018/deploying-machine-learning-models-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Machine learning is now widely used in different applications. In some
cases, it is sufficient to generate batch results using machine learning
models in an offline manner. However, in other cases, models must be
deployed online in a production environment, such that end users or
other system components can benefit from the real-time outputs of these
models. Serving machine learning models involves mostly engineering
challenges, including designing the interface, optimizing the time
required to generate predictions and the computing resources required to
run the models, etc. In this talk, I will discuss different ways of
serving machine learning models in Python, and introduce several useful
Python packages that would make deploying machine learning models much
easier. I will also share some experience in deploying different kinds
of machine learning models.&lt;/p&gt;
</summary></entry><entry><title>Using Gradient Boosting Machines in Python</title><link href="https://pyvideo.org/pycon-hk-2017/using-gradient-boosting-machines-in-python.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Albert Au Yeung</name></author><id>tag:pyvideo.org,2017-10-25:pycon-hk-2017/using-gradient-boosting-machines-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gradient boosting machines (GBM) and related tree-based algorithms have been proved to be highly effective and accurate in a wide range of machine learning tasks. It is also one of the most popular algorithms among participants in Kaggle competitions. This talk will introduce the basic concepts of gradient boosting machines, the commonly used libraries in Python such as XGBoost and LightGBM for performing machine learning using GBM, and ways to tune the hyper-parameters of a model to avoid over/under-fitting and achieve better results. The audience are expected to have basic understanding of machine learning. Codes and slides will be provided on Github after the talk.&lt;/p&gt;
</summary></entry></feed>