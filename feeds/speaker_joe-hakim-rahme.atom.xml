<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_joe-hakim-rahme.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-11-30T00:00:00+00:00</updated><entry><title>How to manage over 1000contributors in a Python open source project</title><link href="https://pyvideo.org/pycon-fr-2013/how-to-manage-over-1000contributors-in-a-python-o.html" rel="alternate"></link><published>2013-11-30T00:00:00+00:00</published><updated>2013-11-30T00:00:00+00:00</updated><author><name>Joe Hakim Rahme</name></author><id>tag:pyvideo.org,2013-11-30:pycon-fr-2013/how-to-manage-over-1000contributors-in-a-python-o.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Very large development: How to manage over 1000 contributors in a Python
open source project&lt;/p&gt;
&lt;p&gt;In this talk I want to present how the OpenStack project (one of the
largest Open Source projects in Python) deals with QA, Peer Review and
general quality control of the patch submissions. I will cover the
tools, guidelines and best practice put in place to manage the
complexity.&lt;/p&gt;
&lt;p&gt;OpenStack is a very large project with over 1.6 million lines of code,
over 1000 active contributors and approximately 4000 commits per month.
At least according to the latest stats from Ohloh.net. And this project
is written (almost) completely in Python. This makes OpenStack one of
the largest active open source projects written in this language.&lt;/p&gt;
&lt;p&gt;In this presentation I will to talk about the challenges of large scale
collaboration in Python projects and the solutions set up by the
OpenStack community to address them. By studying the typical life cycle
of a patch, I will present the tools involved in testing, peer review,
continuous integration, as well as the tools enforcing community
policies like style checking or maintaining compatibility across
different Python versions.&lt;/p&gt;
</summary></entry></feed>