<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jack-mccloy.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-08-10T00:00:00+00:00</updated><entry><title>Advanced Permissioning</title><link href="https://pyvideo.org/pygotham-2016/advanced-permissioning.html" rel="alternate"></link><published>2016-07-16T00:00:00+00:00</published><updated>2016-07-16T00:00:00+00:00</updated><author><name>Jack McCloy</name></author><id>tag:pyvideo.org,2016-07-16:pygotham-2016/advanced-permissioning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In many Django applications, permissioning (building rules for who has access to what) is pretty easy. Logged out users can see some stuff, logged in users can see more stuff, and superusers can see (and edit, and delete) all of the stuff! But when you want to handle more complex permissioning (like object-level permissions), it can get pretty ugly. This talk will help to de-uglify things for you.&lt;/p&gt;
</summary><category term="Django"></category></entry><entry><title>Django and React: Perfect Together</title><link href="https://pyvideo.org/djangocon-us-2016/django-and-react-perfect-together.html" rel="alternate"></link><published>2016-08-10T00:00:00+00:00</published><updated>2016-08-10T00:00:00+00:00</updated><author><name>Jack McCloy</name></author><id>tag:pyvideo.org,2016-08-10:djangocon-us-2016/django-and-react-perfect-together.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - Django and React: Perfect Together by Jack McCloy&lt;/p&gt;
&lt;p&gt;React is a JavaScript library that makes it much easier to build dynamic single-page sites. I won't much dive into how React works, but the main advantage is that it allows you to build your view layer in a declarative way, and with reusable components.&lt;/p&gt;
&lt;p&gt;We'll start with an overview how React works, with an eye towards how it's different from interpretive libraries like jQuery. This overview will center around how state is managed in React vs. jQuery, which is the biggest hurdle for many developers when they're learning React. So if you haven't quite wrapped your head around the difference between &amp;quot;2-way data binding&amp;quot; and &amp;quot;1-way data binding&amp;quot;, or if you've heard someone talk about &amp;quot;data-down/actions-up&amp;quot;, &amp;quot;flux&amp;quot;, or &amp;quot;redux&amp;quot; and weren't quite sure what they were talking about, this will clear all that up.&lt;/p&gt;
&lt;p&gt;Then we'll take a look at how you can integrate React into a Django project. We'll talk about how you might want to structure things if you're starting with a brand new project, but we'll also talk about ways you can start to take advantage of React's strengths even in projects that are already mature.&lt;/p&gt;
&lt;p&gt;Finally, we'll talk about some of the challenging parts of working with React for the first time - how to handle front-end permissioning in React based on your back-end API, how to think about url routing when you literally have two routers, deployment, and the general confusion that goes along with using npm and webpack for the first time.&lt;/p&gt;
</summary></entry></feed>