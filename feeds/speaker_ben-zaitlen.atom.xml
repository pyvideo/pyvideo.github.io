<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ben-zaitlen.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-07-13T00:00:00+00:00</updated><entry><title>Parallel Data Analysis in Python</title><link href="https://pyvideo.org/scipy-2017/parallel-data-analysis-in-python.html" rel="alternate"></link><published>2017-07-13T00:00:00+00:00</published><updated>2017-07-13T00:00:00+00:00</updated><author><name>Matthew Rocklin</name></author><id>tag:pyvideo.org,2017-07-13:scipy-2017/parallel-data-analysis-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutorial materials found here: &lt;a class="reference external" href="https://scipy2017.scipy.org/ehome/220975/493423/"&gt;https://scipy2017.scipy.org/ehome/220975/493423/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This tutorial teaches the fundamentals of parallel programming in Python. It focuses on covering a few programming techniques rather than diving into one framework or tool in particular.&lt;/p&gt;
&lt;p&gt;Student Goals:&lt;/p&gt;
&lt;p&gt;Students will walk away with a high-level understanding of both parallel problems and how to reason about parallel computing frameworks. They will also walk away with hands-on experience using a variety of frameworks easily accessible from Python.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Parallel Data Analysis</title><link href="https://pyvideo.org/pycon-us-2017/parallel-data-analysis.html" rel="alternate"></link><published>2017-05-18T00:00:00+00:00</published><updated>2017-05-18T00:00:00+00:00</updated><author><name>Ben Zaitlen</name></author><id>tag:pyvideo.org,2017-05-18:pycon-us-2017/parallel-data-analysis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An overview of parallel computing techniques available from Python and
hands-on experience with a variety of frameworks.&lt;/p&gt;
&lt;p&gt;This course has two primary goals: 1. Teach students how to reason about
parallel computing 2. Provide hands-on experience with a variety of
different parallel computing frameworks&lt;/p&gt;
&lt;p&gt;Students will walk away with both a high-level understanding of parallel
problems and how to select and use an appropriate parallel computing
framework for their problem. They will get hands-on experience using
tools both on their personal laptop, and on a cluster environment that
will be provided for them at the tutorial.&lt;/p&gt;
&lt;p&gt;For the first half we cover programming patterns for parallelism found
across many tools, notably map, futures, and big-data collections. We
investigate these common APIs by diving into a sequence of examples that
require increasingly complex tools. We learn the benefits and costs of
each API and the sorts of problems where each is appropriate.&lt;/p&gt;
&lt;p&gt;For the second half, we focus on the performance aspects of frameworks
and give intuition on how to pick the right tool for the job. This
includes common challenges in parallel analysis, such as communication
costs, debugging parallel code, as well as deployment and setup
strategies.&lt;/p&gt;
</summary></entry></feed>