<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Sarah Hudspeth</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_sarah-hudspeth.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-07-30T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Observability For You and Me with OpenTelemetry</title><link href="https://pyvideo.org/north-bay-python-2023/observability-for-you-and-me-with-opentelemetry.html" rel="alternate"></link><published>2023-07-30T00:00:00+00:00</published><updated>2023-07-30T00:00:00+00:00</updated><author><name>Sarah Hudspeth</name></author><id>tag:pyvideo.org,2023-07-30:/north-bay-python-2023/observability-for-you-and-me-with-opentelemetry.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you interested in dipping your toes in the cloud native observability waters, but as an engineer you are not sure where to get started with tracing problems through your microservices and application landscapes? Then this is the session for you, where we take you on your first steps …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you interested in dipping your toes in the cloud native observability waters, but as an engineer you are not sure where to get started with tracing problems through your microservices and application landscapes? Then this is the session for you, where we take you on your first steps in an active open-source project that offers a buffet of languages (err, Python), challenges, and opportunities for getting started with telemetry data. The project is called OpenTelemetry, but before diving into the specifics, we’ll start with de-mystifying key concepts and terms such as observability, telemetry, instrumentation, cardinality, percentile to lay a foundation. After understanding the nuts and bolts of observability and distributed traces, we’ll explore the openTelemetry community; its Special Interest Groups (SIGs), repositories, and how to become not only an end-user,  but possibly a contributor.We will wrap up with an overview of the components in this project, such as the Collector, the OpenTelemetry protocol (OTLP), its APIs, and its SDKs. Python in particular has lovely documentation and auto-instrumentation for the most popular frameworks! Attendees will leave with an understanding of key observability concepts, become grounded in distributed tracing terminology, be aware of the components of openTelemetry, and know how to take their first steps to an open-source contribution!&lt;/p&gt;
</content><category term="North Bay Python 2023"></category></entry></feed>