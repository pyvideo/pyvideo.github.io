<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Ruud van der Ham</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 23 Jul 2020 00:00:00 +0000</lastBuildDate><item><title>Attractive GUIs with PySimpleGUI</title><link>https://pyvideo.org/europython-2020/attractive-guis-with-pysimplegui.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With PySimpleGUI everyone can build powerful GUI applications without a steep learning curve.&lt;/p&gt;
&lt;p&gt;In the Python landscape, there are several high-end GUI packages. Of course, thereâ€™s tkinter which is part of the standard library. And there is wxPython and several versions of Qt. What they share is that they are very flexible but not only have a steep learning curve but also take considerable development effort to realize even a simple user interface.
At the other of the spectrum, there are several design tools that either generate code of a layout structure. In many cases, the functionality is rather limited, though.
Relatively recent, an independent open-source developer (not me) has made a product that tries to bridge the gap between these two worlds: PySimpleGUI. This package runs on top of tkinter, QT for Windows, wxPython and Remi.
In this talk, I want to show the design methodology behind this fascinating product that might change the way people look at GUIs.
I will start with live coding a simple yet not evident program that shows the basic concepts. With this, I will demonstrate the design philosophy.
PySimpleGUI can also be used to implement a user-friendly interface as opposed to command-line interfaces.
From there, I will give an overview of some more elements present in this package.
Finally, I will show a full-featured GUI program with several bells and whistles.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ruud van der Ham</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/attractive-guis-with-pysimplegui.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>General</category><category>Human-Machine-Interaction</category><category>python</category></item><item><title>Simulation of logistic systems in Python with salabim</title><link>https://pyvideo.org/europython-2020/simulation-of-logistic-systems-in-python-with-salabim.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Salabim can help to model complex logistic systems, like warehouses, ports, supply chains, hospitals&lt;/p&gt;
&lt;p&gt;Discrete event simulation is a very powerful technique in many fields, like transport, warehousing, hospitals, manufacturing and logistics.
There are several commercial packages that provide high end GUIs to design a system and to animate the operations. These  packages are neary always close source and are very expensive (think USD 10-20 K per user). Often implementing complex algorithms is cumbersome.
On the other end of the spectrum are open source packages that use existing program languages. Python is particularly interesting because of the vast number of (scientific) packages, like machine learning, statistics and databases.
In te Python landscape there is SimPy, that is rather limited in functionality. In this poster I will present my discrete even simulation package called salabim. Salabim uses coroutines via generators and makes it very easy to model complex systems. The package offers advanced real time (2D) animation, monitoring and statistical sampling.
I will show some applications and how a simple model is built up.&lt;/p&gt;
&lt;p&gt;Ruud van der Ham, core developer salabim&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ruud van der Ham</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/simulation-of-logistic-systems-in-python-with-salabim.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Algorithms</category><category>Engineering</category><category>Robotics</category><category>Use Case</category><category>Visualization</category></item><item><title>Python On iOS</title><link>https://pyvideo.org/pycon-de-2018/python-on-ios.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ruud Van Der Ham</dc:creator><pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-24:/pycon-de-2018/python-on-ios.html</guid><category>PyCon DE 2018</category><category>lightning talk</category></item><item><title>Salabim, Discrete Event Simulation In Python</title><link>https://pyvideo.org/pycon-de-2018/salabim-discrete-event-simulation-in-python.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ruud Van Der Ham</dc:creator><pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-24:/pycon-de-2018/salabim-discrete-event-simulation-in-python.html</guid><category>PyCon DE 2018</category></item></channel></rss>