<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_adrianna-pinska.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-12T00:00:00+00:00</updated><entry><title>Custom metadata plugins for Calibre: cataloguing an old paper library</title><link href="https://pyvideo.org/pycon-za-2018/custom-metadata-plugins-for-calibre-cataloguing-an-old-paper-library.html" rel="alternate"></link><published>2018-10-12T00:00:00+00:00</published><updated>2018-10-12T00:00:00+00:00</updated><author><name>Adrianna Pińska</name></author><id>tag:pyvideo.org,2018-10-12:pycon-za-2018/custom-metadata-plugins-for-calibre-cataloguing-an-old-paper-library.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Calibre is a cross-platform program for managing an e-book library:
organising the books, annotating them with metadata, converting them
between different formats and moving them between devices. Its
organisation and metadata functionality can also be used to catalogue a
collection of paper books.&lt;/p&gt;
&lt;p&gt;By default, Calibre fetches its metadata from a few large, popular
online sources which focus on recently published English-language books,
and often have little to no information about older editions or books in
other languages. However, there are many user-created custom metadata
plugins which make it possible to integrate Calibre with more
specialised book databases. Calibre is written in Python, and so are the
plugins!&lt;/p&gt;
&lt;p&gt;In this talk I will give an overview of how to find resources to help
you start writing your own plugin, and describe how I forked and
re-wrote a plugin for downloading metadata from the Internet Speculative
Fiction Database.&lt;/p&gt;
</summary></entry><entry><title>An Introduction to Flask</title><link href="https://pyvideo.org/pycon-za-2013/an-introduction-to-flask.html" rel="alternate"></link><published>2013-10-03T00:00:00+00:00</published><updated>2013-10-03T00:00:00+00:00</updated><author><name>Adrianna Pińska</name></author><id>tag:pyvideo.org,2013-10-03:pycon-za-2013/an-introduction-to-flask.html</id><summary type="html"></summary><category term="pyconza"></category><category term="pyconza2013"></category></entry><entry><title>An introduction to regular expressions in Python</title><link href="https://pyvideo.org/pycon-za-2014/an-introduction-to-regular-expressions-in-python.html" rel="alternate"></link><published>2014-10-03T00:00:00+00:00</published><updated>2014-10-03T00:00:00+00:00</updated><author><name>Adrianna Pińska</name></author><id>tag:pyvideo.org,2014-10-03:pycon-za-2014/an-introduction-to-regular-expressions-in-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Regular expressions are a mini-language used for pattern-matching in
text. They have been a staple of the computing world for decades: they
are implemented in most programming languages, form the core of several
utilities, and can be found lurking in the search-and-replace
functionality of any sufficiently advanced text editor. Despite their
usefulness, regular expressions have developed a reputation for
complexity and a steep learning curve. New programmers are often warned
to steer clear of them -- which is a pity, because there are some
problems for which they are a quick and elegant solution. In this talk I
aim to demystify regular expressions for the beginner programmer, and to
provide a brief guided tour of Python's re module. I hope to encourage
more programmers to get to know this useful tool.&lt;/p&gt;
</summary><category term="pyconza"></category><category term="pyconza2014"></category></entry><entry><title>Friday Lightning Talks</title><link href="https://pyvideo.org/pycon-za-2015/friday-lightning-talks.html" rel="alternate"></link><published>2015-10-02T00:00:00+00:00</published><updated>2015-10-02T00:00:00+00:00</updated><author><name>Adam Jorgensen</name></author><id>tag:pyvideo.org,2015-10-02:pycon-za-2015/friday-lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/MNyOPWT8ncw?t=0h0m0s"&gt;(0:00:00)&lt;/a&gt; &lt;strong&gt;Using Odo to
load data&lt;/strong&gt; by Tobias Brandt&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/MNyOPWT8ncw?t=0h5m23s"&gt;(0:05:23)&lt;/a&gt; &lt;strong&gt;Sh&lt;/strong&gt; by
Adrianna Pińska&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/MNyOPWT8ncw?t=0h8m44s"&gt;(0:08:44)&lt;/a&gt; &lt;strong&gt;Pygame Zero&lt;/strong&gt;
by Neil Muller&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/MNyOPWT8ncw?t=0h11m57s"&gt;(0:11:57)&lt;/a&gt; &lt;strong&gt;How not to
hate Javascript&lt;/strong&gt; by Adam Jorgensen&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/MNyOPWT8ncw?t=0h16m28s"&gt;(0:16:28)&lt;/a&gt; &lt;strong&gt;Testing code
examples from your slides&lt;/strong&gt; by Jeremy Thurgood&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="lightning talks"></category><category term="Room 215"></category></entry><entry><title>A little scripting goes a long way: automating data processing in science</title><link href="https://pyvideo.org/pycon-za-2015/a-little-scripting-goes-a-long-way-automating-da.html" rel="alternate"></link><published>2015-10-01T00:00:00+00:00</published><updated>2015-10-01T00:00:00+00:00</updated><author><name>Adrianna Pińska</name></author><id>tag:pyvideo.org,2015-10-01:pycon-za-2015/a-little-scripting-goes-a-long-way-automating-da.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When we think about scientific programming, we often focus on complex
high-performance applications for performing simulations of chemical
processes, or on data analysis tools. It is easy to overlook the gaps
between tools, such as format conversions, which may be simple for a
programmer to automate, but require hours of tedious work for a
researcher without programming experience.&lt;/p&gt;
&lt;p&gt;In this talk I will present a specific example of an application which
fills such a gap in a medical research laboratory, where readings of
chemical samples are used to measure the response of TB-causing bacteria
to various drugs. The readings must be converted from the raw format
produced by the instrument in the laboratory into a format suitable for
uploading into an online tool for further analysis.&lt;/p&gt;
&lt;p&gt;I will also discuss more broadly how research institutions can improve
efficiency by collaborating with programmers and by encouraging
researchers to acquire basic programming skills.&lt;/p&gt;
</summary><category term="Room 211"></category></entry><entry><title>Python-assisted creative writing: managing dynamic gender in RPG scenarios</title><link href="https://pyvideo.org/pycon-za-2016/python-assisted-creative-writing-managing-dynamic-gender-in-rpg-scenarios.html" rel="alternate"></link><published>2016-10-07T00:00:00+00:00</published><updated>2016-10-07T00:00:00+00:00</updated><author><name>Adrianna Pińska</name></author><id>tag:pyvideo.org,2016-10-07:pycon-za-2016/python-assisted-creative-writing-managing-dynamic-gender-in-rpg-scenarios.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The ability to modify text programmatically through simple scripting can
empower writers to make creative choices which would otherwise be
impossible.&lt;/p&gt;
&lt;p&gt;In this talk I will discuss why it is useful for the gender of
characters in a live action roleplaying game scenario to be an easily
changeable property, and introduce
&lt;a class="reference external" href="https://bitbucket.org/confluence/genderiser"&gt;Genderiser&lt;/a&gt;, a Python
script which is intended to assist non-technical writers in utilising
this technique in their own work.&lt;/p&gt;
&lt;p&gt;The talk is aimed at anyone who is interested in applying their
programming skills to creative writing. I hope to encourage beginners to
use Genderiser and adapt it to their own needs—whether they are creating
a similar type of interactive fiction, or more traditional works such as
novels or short stories.&lt;/p&gt;
&lt;p&gt;There will also be a more technical overview of how the script works,
and how I have attempted to distribute it in a form which is useful to
non-technical users. I will also discuss future directions for the code,
such as the addition of a graphical interface and use of better
packaging and installation tools.&lt;/p&gt;
</summary></entry></feed>