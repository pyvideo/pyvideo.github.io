<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Marco Gorelli</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_marco-gorelli.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-08-14T00:00:00+00:00</updated><subtitle></subtitle><entry><title>DataFrame-agnostic code: are we there yet?</title><link href="https://pyvideo.org/euroscipy-2023/dataframe-agnostic-code-are-we-there-yet.html" rel="alternate"></link><published>2023-08-14T00:00:00+00:00</published><updated>2023-08-14T00:00:00+00:00</updated><author><name>Marco Gorelli</name></author><id>tag:pyvideo.org,2023-08-14:/euroscipy-2023/dataframe-agnostic-code-are-we-there-yet.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wanted to write a DataFrame-agnostic function, which should perform the same operation regardless of whether the input is pandas / polars / something else? Did you get stuck with special-casing to handle all the different APIs? All is good, the DataFrame Standard is here to help!&lt;/p&gt;
</content><category term="EuroSciPy 2023"></category></entry></feed>