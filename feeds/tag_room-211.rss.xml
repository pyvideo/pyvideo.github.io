<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 02 Oct 2015 00:00:00 +0000</lastBuildDate><item><title>Community Security - ANPR (Automated Number Plate Recognition) on your Pi</title><link>https://pyvideo.org/pycon-za-2015/community-security-anpr-automated-number-plate.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk will be a introductory tutorial showing how to get an ANPR
(Automated Number Plate Recognition) system, which was developed for
community security, up and running on your Raspberry Pi. This will
provide a comfortable starting point for any security-prone person to
start monitoring the vehicles entering and leaving their community.&lt;/p&gt;
&lt;p&gt;The target audience for this tutorial will be attendees who are
interested in using single board computers (Raspberry Pi2) as a security
measure in their community. The technical level of the tutorial will be
suitable for beginners / intermediate level.&lt;/p&gt;
&lt;p&gt;The tutorial will consist of the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Quick overview of project&lt;/li&gt;
&lt;li&gt;Installing OpenCV&lt;/li&gt;
&lt;li&gt;Installing ANPR framework&lt;/li&gt;
&lt;li&gt;Connecting the IP cameras&lt;/li&gt;
&lt;li&gt;Configuring the ANPR (training)&lt;/li&gt;
&lt;li&gt;Retrieving data&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bernhardt Garlipp</dc:creator><pubDate>Fri, 02 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-02:pycon-za-2015/community-security-anpr-automated-number-plate.html</guid><category>Room 211</category></item><item><title>Supporting Python 3</title><link>https://pyvideo.org/pycon-za-2015/supporting-python-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The tools for supporting Python 2 &amp;amp; 3 in a single codebase have improved
significantly from the early Python 3 days of just 2to3. Porting Python
2 code to work with Python 2 &amp;amp; 3 without a constant 2to3 translation
step is not hard anymore, and leads to much easier-to-maintain ports.&lt;/p&gt;
&lt;p&gt;In this talk, I will discuss some of the suggested best practices for
supporting both Python 2 and Python 3. We will cover some of the tools
for detecting potential issues, such as pylint, the available options,
such as six, futurize and modernize, to simplify the process of updating
the code and spend some time discussing what parts of porting still
require care and attention, such as the text / binary data division.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Neil Muller</dc:creator><pubDate>Fri, 02 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-02:pycon-za-2015/supporting-python-3.html</guid><category>Room 211</category></item><item><title>What's the point of Object Orientation?</title><link>https://pyvideo.org/pycon-za-2015/whats-the-point-of-object-orientation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Object Orientation (OO) is often introduced in terms of how it is
implemented by a specific language. However, understanding the theory
underlying OO is not quite the same as understanding how OO concepts are
supported by a particular language. It is insightful to understand the
simple OO fundamentals and how these map to the particular
implementation provided by Python.&lt;/p&gt;
&lt;p&gt;In this talk I will first explain the very basics of OO from a
language-neutral point of view with the aim of showing what OO can offer
you. I will touch upon the simple mathematical theory underlying OO and
how it can be used as a mental discipline to improve your natural
capacity to reason about programs. I hope to give you enough information
to help you distinguish between better and worse designs and to detect
whether you're using OO as it was intended. I will show how these
fundamentals map to Python, and compare the difference of Python's
implementation to that of some other languages (even functional
languages).&lt;/p&gt;
&lt;p&gt;This talk is for anyone: whether you're new at Object Orientation, or a
practitioner wondering whether OO is worth the effort you've spent
trying to use it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Iwan Vosloo</dc:creator><pubDate>Fri, 02 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-02:pycon-za-2015/whats-the-point-of-object-orientation.html</guid><category>Room 211</category></item><item><title>A little scripting goes a long way: automating data processing in science</title><link>https://pyvideo.org/pycon-za-2015/a-little-scripting-goes-a-long-way-automating-da.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When we think about scientific programming, we often focus on complex
high-performance applications for performing simulations of chemical
processes, or on data analysis tools. It is easy to overlook the gaps
between tools, such as format conversions, which may be simple for a
programmer to automate, but require hours of tedious work for a
researcher without programming experience.&lt;/p&gt;
&lt;p&gt;In this talk I will present a specific example of an application which
fills such a gap in a medical research laboratory, where readings of
chemical samples are used to measure the response of TB-causing bacteria
to various drugs. The readings must be converted from the raw format
produced by the instrument in the laboratory into a format suitable for
uploading into an online tool for further analysis.&lt;/p&gt;
&lt;p&gt;I will also discuss more broadly how research institutions can improve
efficiency by collaborating with programmers and by encouraging
researchers to acquire basic programming skills.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrianna Pi≈Ñska</dc:creator><pubDate>Thu, 01 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-01:pycon-za-2015/a-little-scripting-goes-a-long-way-automating-da.html</guid><category>Room 211</category></item><item><title>An Introduction to Image Classification</title><link>https://pyvideo.org/pycon-za-2015/an-introduction-to-machine-learning-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial, two main areas will be covered using Textural Images
Dataset:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Textural Features Methods: (Grey Level Co-occurrence Matrix(GLCM), Local
Binary Pattern(LBP) and Local Directional Pattern(LDP))&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Classification using Support Vector Machine (SVM) and Naive Bayes(NB).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Both Features Extraction and Classification will be implemented using
Python.&lt;/p&gt;
&lt;p&gt;Texture is a very important factor in computer vision; it represents the
first level of spatial properties that can be extracted from digital
image. Texture can be defined as relationship between gray level in
neighboring pixels.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Abuobayda Shabat</dc:creator><pubDate>Thu, 01 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-01:pycon-za-2015/an-introduction-to-machine-learning-in-python.html</guid><category>Room 211</category></item><item><title>The Split-Apply-Combine Pattern for Data Science in Python</title><link>https://pyvideo.org/pycon-za-2015/the-split-apply-combine-pattern-for-data-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many data science problems involve the application of a
split-apply-combine pattern, where you break up a big dataset into
independent pieces, operate on each piece in isolation and then put all
the pieces back together. This crops up in all stages of a data
analysis:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;During data preparation, when performing group-wise ranking,
standardisation, or normalisation.&lt;/li&gt;
&lt;li&gt;During modelling, when fitting separate models to each group.&lt;/li&gt;
&lt;li&gt;During communication, when creating summaries or visualisations for
display or analysis.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python has many tools that make it easy to utilise this strategy when
solving data science problems. These range from list and dictionary
comprehensions in the language, the &lt;em&gt;map&lt;/em&gt; and &lt;em&gt;reduce&lt;/em&gt; functions and
&lt;em&gt;itertools&lt;/em&gt; and &lt;em&gt;functools&lt;/em&gt; modules in the standard library to dedicated
packages like &lt;em&gt;Pandas&lt;/em&gt;, &lt;em&gt;PyToolz&lt;/em&gt;, &lt;em&gt;Blaze&lt;/em&gt; and &lt;em&gt;Dask&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Explicit recognition of the applicability of the pattern allows one to
reuse standard components for the bookkeeping code that handles the
splitting and combining of the independent pieces. This allows one to
concentrate on the data analysis code that is unique to the problem at
hand. Since implicit in the pattern is the independence of the pieces,
its applicability immediately implies a strategy for parallelisation
which allows one to easily scale one's solution from single core to
out-of-core computation on multiple machines, often with only very few
changes to the code required.&lt;/p&gt;
&lt;p&gt;This talk will introduce the pattern and how to recognise it by
presenting some common code blocks. We will then look at some of the
tools available, in particular &lt;em&gt;Pandas&lt;/em&gt; and &lt;em&gt;PyToolz&lt;/em&gt;, demonstrate their
use, and discuss their strengths and weaknesses. Finally we'll show how
to take a simple analysis and parallelise it to process a dataset that
is too large to fit in memory.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tobias Brandt</dc:creator><pubDate>Thu, 01 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-01:pycon-za-2015/the-split-apply-combine-pattern-for-data-science.html</guid><category>Room 211</category></item></channel></rss>