<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pytexas-2017.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-11-19T00:00:00+00:00</updated><entry><title>0 → Kubernetes in Under an Hour</title><link href="https://pyvideo.org/pytexas-2017/0-kubernetes-in-under-an-hour.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Nicholas Mitchinson</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/0-kubernetes-in-under-an-hour.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kubernetes is the hot new thing (for good reason), but it can be hard to know where to start with it.&lt;/p&gt;
&lt;p&gt;This live walk-through gets a small python application running in Kubernetes locally, while introducing a few useful tools that make the overall experience easier.&lt;/p&gt;
</summary></entry><entry><title>A Brief History of Coroutines in Python</title><link href="https://pyvideo.org/pytexas-2017/a-brief-history-of-coroutines-in-python.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Josh Marshall</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/a-brief-history-of-coroutines-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With Python 3.6, coroutines became an core part of the Python language with async and await keywords, but cooperative multitasking had a rich history long before then. This talk walks through iterators, generators, generator delegation, “true” coroutines via async / await, and lots of sample code!&lt;/p&gt;
</summary></entry><entry><title>Building Asynchronous Microservices with Tornado</title><link href="https://pyvideo.org/pytexas-2017/building-asynchronous-microservices-with-tornado.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Tim Jensen</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/building-asynchronous-microservices-with-tornado.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Tornado to build microservices can improve response times and make the use of cloud resources more efficient. This talk will explain how to create a Tornado web application in Python 3 that asynchronously communicates with other services, including MongoDB, Redis, MySQL, and AWS.&lt;/p&gt;
</summary></entry><entry><title>C for Yourself: Exploring Python Internals at the REPL</title><link href="https://pyvideo.org/pytexas-2017/c-for-yourself-exploring-python-internals-at-the-repl.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Robert Carrington</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/c-for-yourself-exploring-python-internals-at-the-repl.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Completely ignoring how Python is implemented can get you into some nasty bugs. Having a basic mental model will protect you, and it doesn’t require reading CPython source code! I’ll show you a fun way to dissect common Python types down to the level of bytes, using the ctypes library and the REPL.&lt;/p&gt;
</summary></entry><entry><title>Hacks of Kindness (PyTexas 2017 Keynote)</title><link href="https://pyvideo.org/pytexas-2017/hacks-of-kindness-pytexas-2017-keynote.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Paige Bailey</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/hacks-of-kindness-pytexas-2017-keynote.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Paige Bailey is a Sr. Cloud Developer Advocate at Microsoft specializing in machine learning and artificial intelligence. Paige’s education was focused on the earth sciences (geophysics, carbonate geology) and computer science (data analytics); and her previous work experience was geared toward drilling and completions optimization, data science, and geophysical plug-in development for the energy industry. When Paige is not sitting in front of glowing rectangular screens at work, she absolutely adores hiking / kayaking / mountain-biking around Texas’ glorious Green Belt; resuscitating Apple ][s; and (poorly!) attempting to play bass guitar. Personal passions are sustainable energy and climate change research; STEM education reform; and empowering local governments via data science.&lt;/p&gt;
</summary></entry><entry><title>Introduction to Property Based Testing with Hypothesis</title><link href="https://pyvideo.org/pytexas-2017/introduction-to-property-based-testing-with-hypothesis.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Noah Seger</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/introduction-to-property-based-testing-with-hypothesis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn how to test better with less code using Hypothesis, a property-based testing library with batteries for popular ORMs.&lt;/p&gt;
</summary></entry><entry><title>Keeping Python Online (PyTexas 2017 Keynote)</title><link href="https://pyvideo.org/pytexas-2017/keeping-python-online-pytexas-2017-keynote.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Ernest W. Durbin III</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/keeping-python-online-pytexas-2017-keynote.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ernest is a contributor to the Infrastructure Team and Packaging Working Group member for The Python Software Foundation, Organizer for the Cleveland Python meetup, and upcoming Chair for PyCon US 2018 in Cleveland Ohio.&lt;/p&gt;
</summary></entry><entry><title>Literary Analysis via NLP: Topic Modeling Project Gutenberg</title><link href="https://pyvideo.org/pytexas-2017/literary-analysis-via-nlp-topic-modeling-project-gutenberg.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Rachel Brynsvold</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/literary-analysis-via-nlp-topic-modeling-project-gutenberg.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I’ve created a LDA topic model of the internet’s largest collection of public domain literature! Come learn about the data science behind the model, the computational infrastructure set up to support the calculations, and the insights to be gained from this investigation!&lt;/p&gt;
</summary></entry><entry><title>MicroPython on an ESP8266</title><link href="https://pyvideo.org/pytexas-2017/micropython-on-an-esp8266.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Christopher Cooper</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/micropython-on-an-esp8266.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An ESP8266 is a $5 microcontroller with built-in wi-fi capability that can be used to automate things around your home and business. This includes reading sensors, turning on/off switches, controlling motors. This is made even more exciting by being able to use Python to control this!&lt;/p&gt;
</summary></entry><entry><title>MySQL 8—A New Beginning</title><link href="https://pyvideo.org/pytexas-2017/mysql-8-a-new-beginning.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Dave Stokes</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/mysql-8-a-new-beginning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MySQL 5.7 is great but MySQL 8 is a major redesign. It will have a true data dictionary which means you can have millions of tables within a schema. Windowing Functions, CTEs, roles, multi plane character support, and more important changes. Plus learn what happened to MySQL 6 and MySQL 7.&lt;/p&gt;
</summary></entry><entry><title>Packaging Voodoo Revealed</title><link href="https://pyvideo.org/pytexas-2017/packaging-voodoo-revealed.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Mike Sarahan</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/packaging-voodoo-revealed.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making software easy for other people to use is hard. We’ll talk about how to start a Python project to make it easy to share, how to create wheels and conda packages, and the critical technical details to consider to make sure that your packages work for as many people as possible.&lt;/p&gt;
</summary></entry><entry><title>Python and NET: Why use both?</title><link href="https://pyvideo.org/pytexas-2017/python-and-net-why-use-both.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Denis Akhiyarov</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/python-and-net-why-use-both.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python for .NET (pythonnet, Python.NET) allows two-way inter-operability between Python and CLR runtimes on Windows, Linux, OSX, and even Linux subsystem on Windows! This presentation is going to show how to use Python code from .NET and .NET assemblies from Python.&lt;/p&gt;
</summary></entry><entry><title>Reinforcement learning in Python</title><link href="https://pyvideo.org/pytexas-2017/reinforcement-learning-in-python.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Christine Doig</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/reinforcement-learning-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From AlphaGo beating the world’s top player to algorithms playing Atari games and Robots learning tasks and navigation, reinforcement learning has become the hottest area of AI. In this talk you will learn what RL is and how to use the most popular Python libraries.&lt;/p&gt;
</summary></entry><entry><title>Slidoc: A Pythonic Learning Management System</title><link href="https://pyvideo.org/pytexas-2017/slidoc-a-pythonic-learning-management-system.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Ramalingam Saravanan</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/slidoc-a-pythonic-learning-management-system.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Slidoc is an unconventional framework for a learning management system that combines slides and documents for courses, especially to teach Python. Markdown is used as the universal format for exams and interactive lectures. Google Sheets serves as back-end database and Tornado as the web server.&lt;/p&gt;
</summary></entry><entry><title>The Reference Model: A Decade of Healthcare Predictive Analytics</title><link href="https://pyvideo.org/pytexas-2017/the-reference-model-a-decade-of-healthcare-predictive-analytics.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Jacob Barhak</name></author><id>tag:pyvideo.org,2017-11-19:pytexas-2017/the-reference-model-a-decade-of-healthcare-predictive-analytics.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is the life expectancy of a diabetic? What is the equivalent of Moore’s law for medical progress with respect to diabetic cardiovascular disease? How to interface with ClinicalTrials.Gov ? The talk will describe how python helped answer those questions after about a decade of work.&lt;/p&gt;
</summary></entry><entry><title>Big Data with Python &amp; Google BigQuery</title><link href="https://pyvideo.org/pytexas-2017/big-data-with-python-google-bigquery.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Jeff Kramer</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/big-data-with-python-google-bigquery.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn how to load, manipulate, and extract terabytes of data with Python and BigQuery, Google Cloud’s Big Data SQL database. We’ll cover some ways we’re using it at Vox Media, why you might use it over other stores, and some tricks for getting up to speed quickly.&lt;/p&gt;
</summary></entry><entry><title>Building Python Applications with Docker</title><link href="https://pyvideo.org/pytexas-2017/building-python-applications-with-docker.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Moshe Zadka</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/building-python-applications-with-docker.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Containers are new, and Docker is a fast moving platform. Best practices evolve quickly, while examples in existing code-bases fall behind. I will cover best practices for delivering small, secure, reproducible containers of Python applications using recent Docker versions.&lt;/p&gt;
</summary></entry><entry><title>Coffee, Code, and Community</title><link href="https://pyvideo.org/pytexas-2017/coffee-code-and-community.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Adam Glenn</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/coffee-code-and-community.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever left a conference feeling invigorated and excited? Did you love the exposure to new ideas and sharing what you’ve been up to? Let me tell you about CoffeeOps it’s about making a community where you can find those feelings all the time.&lt;/p&gt;
</summary></entry><entry><title>Doubling deploy velocity with parallel stage environments</title><link href="https://pyvideo.org/pytexas-2017/doubling-deploy-velocity-with-parallel-stage-environments.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Josh Dover</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/doubling-deploy-velocity-with-parallel-stage-environments.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Continuous deployment works great when there’s 3 devs…and not so much at 10.&lt;/p&gt;
&lt;p&gt;At Cratejoy, we’ve built a simple, in-house solution using tools you’re already familiar with (Gitlab, Kubernetes, Docker) to orchestrate a complete staging environment for every branch. Learn how we ship code faster.&lt;/p&gt;
</summary></entry><entry><title>Fostering Technical Growth</title><link href="https://pyvideo.org/pytexas-2017/fostering-technical-growth.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>April Neal</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/fostering-technical-growth.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As we progress from junior engineers to senior engineers, architects, and 10x engineers, how do we find the time to learn new technologies? How can our companies create environments conducive to technical growth? In this talk, we discuss culture, structure, and resources to foster technical growth.&lt;/p&gt;
</summary></entry><entry><title>From Monolithic to Serverless with AWS Step Functions</title><link href="https://pyvideo.org/pytexas-2017/from-monolithic-to-serverless-with-aws-step-functions.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Scott Triglia</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/from-monolithic-to-serverless-with-aws-step-functions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Aside from proofs of concept, how are you realistically supposed to put Serverless into practice? Hear how Yelp has been moving a 10 year old codebase from tangled spaghetti toward serverless using AWS Step Functions (SFN). Learn SFN as infrastructure and how to incrementally move to Serverless.&lt;/p&gt;
</summary></entry><entry><title>Intro to GraphQL with Python</title><link href="https://pyvideo.org/pytexas-2017/intro-to-graphql-with-python.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Paul Bailey</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/intro-to-graphql-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GraphQL is a new way to build APIs that are more flexible on the frontend and require less development time on the backend. This talk will introduce to you how and why you should use GraphQL and how to implement GraphQL with Python.&lt;/p&gt;
</summary></entry><entry><title>Kubernetes after 18 months</title><link href="https://pyvideo.org/pytexas-2017/kubernetes-after-18-months.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Thomas Stephens</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/kubernetes-after-18-months.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn from our experience deploying both new and legacy applications to Kubernetes over the last 18 months. We’ve done everything from building greenfield microservices to migrating our existing core HTTP applications and video processing pipeline to Kubernetes, across different cloud vendors.&lt;/p&gt;
</summary></entry><entry><title>Lessons Learned from Civic Hacking</title><link href="https://pyvideo.org/pytexas-2017/lessons-learned-from-civic-hacking.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Caroline Dikibo</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/lessons-learned-from-civic-hacking.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Budgets, Housing, and Hurricanes. What do all of these things have in common? Civic Hacking. These were local problems that were tackled by a village of coding warriors.&lt;/p&gt;
</summary></entry><entry><title>Lightning Talks</title><link href="https://pyvideo.org/pytexas-2017/lightning-talks.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Walker Hale</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;table border="1" class="colwidths-given docutils"&gt;
&lt;caption&gt;Lightning Talks&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="10%" /&gt;
&lt;col width="30%" /&gt;
&lt;col width="60%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Time&lt;/th&gt;
&lt;th class="head"&gt;Speaker&lt;/th&gt;
&lt;th class="head"&gt;Title&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=00m00s"&gt;00:00&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Walker Hale&lt;/td&gt;
&lt;td&gt;Conda packages for bash scripts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=05m10s"&gt;05:10&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Ricky Whitaker&lt;/td&gt;
&lt;td&gt;Becoming Comfortable in Discomfort: A few life lessons from quitting my job&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=12m26s"&gt;12:26&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Moshe Zadka&lt;/td&gt;
&lt;td&gt;Introducing NColony&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=17m05s"&gt;17:05&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Peter Graham&lt;/td&gt;
&lt;td&gt;Safely using read replica with postgres&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=24m12s"&gt;24:12&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;John Arbelaez&lt;/td&gt;
&lt;td&gt;The pyslackers community&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=30m52s"&gt;30:52&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Caroline D Dikibo&lt;/td&gt;
&lt;td&gt;OSS Project Awareness: Zulip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=39m22s"&gt;39:22&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dustin Ingram&lt;/td&gt;
&lt;td&gt;Good Hacker; Bad Hacker&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Performance Testing with Python and Locust</title><link href="https://pyvideo.org/pytexas-2017/performance-testing-with-python-and-locust.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Michael Sluyter</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/performance-testing-with-python-and-locust.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We often fail to consider the performance of our apps until they’re in production, but by then it may be too late! Run performance tests before they’re in production. I’ll describe how to integrate performance/load testing into your development process using Locust, Kubernetes, and Jenkins.&lt;/p&gt;
</summary></entry><entry><title>Practical Packaging For Machine Learning Solutions</title><link href="https://pyvideo.org/pytexas-2017/practical-packaging-for-machine-learning-solutions.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Stephen Cutting</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/practical-packaging-for-machine-learning-solutions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will cover the ways in which we can use Pythons packaging tools and best practices in order to make sharing our machine learning solutions easier.&lt;/p&gt;
&lt;p&gt;We will cover the basics concepts and tools for Python packaging. Then we will introduce a few suggested schemes for how to package a machine learning project, followed by some tips and best practices.&lt;/p&gt;
&lt;p&gt;We will wrap up with a few additional concerns related to creating quality projects and packages.&lt;/p&gt;
&lt;p&gt;A good precursor to the talk is a blog that I wrote as a companion to this talk. It can be found at blog.stevencutting.com.&lt;/p&gt;
</summary></entry><entry><title>Python Communities (PyTexas 2017 Keynote)</title><link href="https://pyvideo.org/pytexas-2017/python-communities-pytexas-2017-keynote.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Travis Oliphant</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/python-communities-pytexas-2017-keynote.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Travis Oliphant is President, Chief Data Scientist &amp;amp; Co-Founder of Anaconda, Inc. (was called Continuum Analytics). Since 1997, he has worked extensively with Python for numerical and scientific programming, most notably as the primary developer of the NumPy package, and as a founding creator of the SciPy package. He is also the author of the definitive Guide to NumPy. As President and Chief Data Scientist of Continuum Analytics, Travis fosters the open source community and is dedicated to furthering the company’s open source projects. He also engages customers in all industries and helps guide technical direction of the company. He has served as a director of the Python Software Foundation and as a director of NumFOCUS which he founded in 2011.&lt;/p&gt;
</summary></entry><entry><title>Python Metaprogramming for Mad Scientists and Evil Geniuses</title><link href="https://pyvideo.org/pytexas-2017/python-metaprogramming-for-mad-scientists-and-evil-geniuses.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Walker Hale IV</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/python-metaprogramming-for-mad-scientists-and-evil-geniuses.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The metaprogramming capabilities of Python provide an ideal environment for both mad scientists and evil geniuses! Those with insane or nefarious intent will learn the benefits of Python’s metaprogramming features. Do-gooders might also benefit.&lt;/p&gt;
</summary></entry><entry><title>Sending email with Mailgun</title><link href="https://pyvideo.org/pytexas-2017/sending-email-with-mailgun.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Douglas Mendizábal</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/sending-email-with-mailgun.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sending a single email is easy. Sending thousands, not so much. Join me to learn how to leverage the Mailgun API to send email from your Python applications.&lt;/p&gt;
</summary></entry><entry><title>Small Potatoes: Microsimulation With Vivarium</title><link href="https://pyvideo.org/pytexas-2017/small-potatoes-microsimulation-with-vivarium.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Alec Deason</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/small-potatoes-microsimulation-with-vivarium.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modeling complex systems is hard. Microsimulation can make it easier (but still hard). I’ll introduce microsimulation by using Vivarium, a Python simulation framework, to model plant growth and the effect of different ways of laying out a home garden on vegetable yields.&lt;/p&gt;
</summary></entry><entry><title>The Fastest FizzBuzz in the West</title><link href="https://pyvideo.org/pytexas-2017/the-fastest-fizzbuzz-in-the-west.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Dustin Ingram</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/the-fastest-fizzbuzz-in-the-west.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, you'll learn how I built DIVSPL (Dustin Ingram's Very Special Programming Language), a tongue-in-cheek domain-specific language, which is particularly good for implementing FizzBuzz -- as quickly as possible.&lt;/p&gt;
&lt;p&gt;We'll build DIVSPL with RPLY, an implementation of David Beazley's PLY (but with a &amp;quot;cooler&amp;quot; API) and make it compatible with RPython, a restricted subset of the Python programming language. Along the way, you'll learn about lexers, parsers, and grammars, and in the end, you'll know how to build your own language.&lt;/p&gt;
</summary></entry><entry><title>What is this machine learning thing, anyway?</title><link href="https://pyvideo.org/pytexas-2017/what-is-this-machine-learning-thing-anyway.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>George Broklehurst</name></author><id>tag:pyvideo.org,2017-11-18:pytexas-2017/what-is-this-machine-learning-thing-anyway.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From self driving cars, to trippy psychedelic images, to beating world class players at board games—machine learning is all over the place. But, err, what is it?&lt;/p&gt;
&lt;p&gt;This talk will introduce you to the basics of machine learning in a no-nonsense, practical way, without a lot of mathematical notation.&lt;/p&gt;
</summary></entry></feed>