<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pydata-new-york-city-2019.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-11-06T00:00:00+00:00</updated><entry><title>Advanced Software Testing for Data Scientists</title><link href="https://pyvideo.org/pydata-new-york-city-2019/advanced-software-testing-for-data-scientists.html" rel="alternate"></link><published>2019-11-06T00:00:00+00:00</published><updated>2019-11-06T00:00:00+00:00</updated><author><name>Raoul-Gabriel Urma</name></author><id>tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/advanced-software-testing-for-data-scientists.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The journey to deploy a model to production starts with testing it rigorously, including its code implementation. In this tutorial, you will learn about state of the art software testing approach. You will learn how to write unit tests with enhanced diagnostics, leverage validation tools from numpy, pandas, scikit-learn, apply test doubles and generate test cases using property-based testing.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>An Introduction to Probability and Statistics</title><link href="https://pyvideo.org/pydata-new-york-city-2019/an-introduction-to-probability-and-statistics.html" rel="alternate"></link><published>2019-11-06T00:00:00+00:00</published><updated>2019-11-06T00:00:00+00:00</updated><author><name>Will Kurt</name></author><id>tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/an-introduction-to-probability-and-statistics.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will offer a quick overview of many of the essentials of statistics used to solve real world problems. We'll start by looking at how to build a simple hypothesis test based on a practical e-commerce problem. Then we'll see how we can expand on this simple test using one of the most powerful tools in statistics: the linear model. No previous experience with statistics required!&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>How to Prove You’re Right: A/B Testing with SciPy</title><link href="https://pyvideo.org/pydata-new-york-city-2019/how-to-prove-youre-right-ab-testing-with-scipy.html" rel="alternate"></link><published>2019-11-06T00:00:00+00:00</published><updated>2019-11-06T00:00:00+00:00</updated><author><name>Hillary Green-Lerman</name></author><id>tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/how-to-prove-youre-right-ab-testing-with-scipy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So you want to run an A/B test! How long should you run it for? How will you know if an observed difference is real? Does it matter what my A/B test is measuring? All of these questions and more can be answered by learning about Hypothesis Testing in SciPy. You might have heard of T-Tests, Chi Squared, and ANOVA in your high school stats class, but you've never heard them explained like this!&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Introduction to Language Modeling</title><link href="https://pyvideo.org/pydata-new-york-city-2019/introduction-to-language-modeling.html" rel="alternate"></link><published>2019-11-06T00:00:00+00:00</published><updated>2019-11-06T00:00:00+00:00</updated><author><name>Aditi Khullar</name></author><id>tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/introduction-to-language-modeling.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this two part tutorial we will start with introduction of language models, how they are used and why they are important in the domain of Natural Language Processing. In the second half we will be taking the attendees through a hands-on workshop where they will develop a language model based on a sample dataset and talk through some of the results and gotchas of working with language models.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Introduction to NLP</title><link href="https://pyvideo.org/pydata-new-york-city-2019/introduction-to-nlp.html" rel="alternate"></link><published>2019-11-06T00:00:00+00:00</published><updated>2019-11-06T00:00:00+00:00</updated><author><name>Mariel Frank</name></author><id>tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/introduction-to-nlp.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Curious about Natural Language Processing (NLP) but don't know where to start? This tutorial is for you! This tutorial will provide an overview of what NLP is, why it's useful, as well as several major NLP libraries and topics. You'll also have the opportunity to get hands-on with some basic NLP methods using Python.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Introduction to pandas</title><link href="https://pyvideo.org/pydata-new-york-city-2019/introduction-to-pandas.html" rel="alternate"></link><published>2019-11-06T00:00:00+00:00</published><updated>2019-11-06T00:00:00+00:00</updated><author><name>Marc Garcia</name></author><id>tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/introduction-to-pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is a hands on introduction to pandas. pandas is a fast, powerful, flexible and easy to use data analysis and manipulation tool, built on top of the Python programming language.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Visualizing the 2019 Measles Outbreak in NYC (with Python)</title><link href="https://pyvideo.org/pydata-new-york-city-2019/visualizing-the-2019-measles-outbreak-in-nyc-with-python.html" rel="alternate"></link><published>2019-11-06T00:00:00+00:00</published><updated>2019-11-06T00:00:00+00:00</updated><author><name>Carlos Afonso</name></author><id>tag:pyvideo.org,2019-11-06:pydata-new-york-city-2019/visualizing-the-2019-measles-outbreak-in-nyc-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The US is amid its largest measles outbreak since 1992, with 1,250 cases as of Oct 3, 2019. Most cases (649) were in NYC, where the outbreak was declared over on Sep 3, 2019. This tutorial creates data visualizations to help understand the measles outbreak in NYC. Bubble maps and bar charts are created using Python (bokeh, matplotlib) and following principles of clarity and context.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>A How-to guide for migrating legacy data applications</title><link href="https://pyvideo.org/pydata-new-york-city-2019/a-how-to-guide-for-migrating-legacy-data-applications.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Marius van Niekerk</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/a-how-to-guide-for-migrating-legacy-data-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Migrating legacy applications can be daunting. They are frequently large, poorly tested, undermaintained, yet business critical. Over time they may end up relying on deprecated technology and unprepared for changing business needs. We’ll cover lessons learned in migrating such an application to something maintainable, sharing details on how to go about it in a safe and systematic manner.&lt;/p&gt;
</summary></entry><entry><title>Building a maintainable plotting library</title><link href="https://pyvideo.org/pydata-new-york-city-2019/building-a-maintainable-plotting-library.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Colin Carroll</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/building-a-maintainable-plotting-library.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fluid data visualization needs to be aware of the explicit and implicit structure of the data you want to visualize. Whether you are working on a personal project, or want to have a consistent set of figures for your company or lab, we will share tips on how to build a custom library using matplotlib that is easy to use, easy to maintain, easy to extend, and customized to your use case.&lt;/p&gt;
</summary></entry><entry><title>Building Software and Communities With Peer Review</title><link href="https://pyvideo.org/pydata-new-york-city-2019/building-software-and-communities-with-peer-review.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Noam Ross</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/building-software-and-communities-with-peer-review.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Software peer review can improve software quality, accelerate the adoption of best practices and community standards, and build communities of practice. I will present lessons from over four years of software peer review at rOpenSci, and new initiatives such as pyOpenSci that are expanding software peer review into new fields and languages.&lt;/p&gt;
</summary></entry><entry><title>Clean Machine Learning Code: Practical Software Engineering Principles for ML Craftsmanship</title><link href="https://pyvideo.org/pydata-new-york-city-2019/clean-machine-learning-code-practical-software-engineering-principles-for-ml-craftsmanship.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Moussa Taifi</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/clean-machine-learning-code-practical-software-engineering-principles-for-ml-craftsmanship.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Machine learning pipelines are software pipelines after all. Their complexity and design viscosity lead to spectacular, costly and even deadly ML failures. This talk describes the most important Clean Code and Clean Architecture design principles, applied to machine learning applications. It aims to help the audience reduce machine learning technical debt, and to design robust ML architectures.&lt;/p&gt;
</summary></entry><entry><title>Colorism in High Fashion (featuring: K-Means Clustering)</title><link href="https://pyvideo.org/pydata-new-york-city-2019/colorism-in-high-fashion-featuring-k-means-clustering.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Malaika Handa</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/colorism-in-high-fashion-featuring-k-means-clustering.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will go into the technical details of transforming twenty years of Vogue cover photos into a numeric dataset that measures skin tone lightness, which, when visualized, showcases the striking lack of diversity on the cover of Vogue magazine.&lt;/p&gt;
</summary></entry><entry><title>Data-centric exploration using intake, dask, hvplot, datashader, panel, and binder</title><link href="https://pyvideo.org/pydata-new-york-city-2019/data-centric-exploration-using-intake-dask-hvplot-datashader-panel-and-binder.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Julia Signell</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/data-centric-exploration-using-intake-dask-hvplot-datashader-panel-and-binder.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Discovering a new dataset is exciting, but it can also be daunting. How will you read it? Will it fit in memory? What meaning can be derived? Can you share that with others? This talk describes an opinionated method of data exploration going from data ingestion to dashboard deployment and showing how everything comes together into a complete and repeatable workflow.&lt;/p&gt;
</summary></entry><entry><title>Data science at The New York Times: a mission-driven approach to personalizing the customer journey</title><link href="https://pyvideo.org/pydata-new-york-city-2019/data-science-at-the-new-york-times-a-mission-driven-approach-to-personalizing-the-customer-journey.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Chris Wiggins</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/data-science-at-the-new-york-times-a-mission-driven-approach-to-personalizing-the-customer-journey.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How does The New York Times use data science to further its mission? We'll talk about the use of machine learning throughout the company, from social media promotion to targeted advertising to content recommendations, and the cross-team collaborations that make it possible.&lt;/p&gt;
</summary><category term="keynote"></category></entry><entry><title>Dealing With Imbalanced Classes in Machine Learning</title><link href="https://pyvideo.org/pydata-new-york-city-2019/dealing-with-imbalanced-classes-in-machine-learning.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Aditya Lahiri</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/dealing-with-imbalanced-classes-in-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Skewed datasets are not uncommon. And they are tough to handle. Usual classification models and techniques often fail miserably when presented with such a problem. We discuss right from the basics of what class imbalance means to how we can overcome it, using various algorithms and some subtle techniques. We discuss details of evaluating our efforts and some small but crucial things that are vital&lt;/p&gt;
</summary></entry><entry><title>Deep Dive into scikit-learn's HistGradientBoosting Classifier and Regressor</title><link href="https://pyvideo.org/pydata-new-york-city-2019/deep-dive-into-scikit-learns-histgradientboosting-classifier-and-regressor.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Thomas J Fan</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/deep-dive-into-scikit-learns-histgradientboosting-classifier-and-regressor.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gradient boosting decision trees (GBDT) is a powerful machine-learning technique known for its high predictive power with heterogeneous data. In this talk, we will explore scikit-learn's implementation of histogram-based GBDT called HistGradientBoostingClassifier/Regressor and how it compares to other GBDT libraries such as XGBoost, CatBoost, and LightGBM.&lt;/p&gt;
</summary></entry><entry><title>Discover your latent food graph with this 1 weird trick</title><link href="https://pyvideo.org/pydata-new-york-city-2019/discover-your-latent-food-graph-with-this-1-weird-trick.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Alex Egg</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/discover-your-latent-food-graph-with-this-1-weird-trick.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At Grubhub we leverage recent advances in Representation Learning to gain an automated and scalable understanding of our vast restaurant and menu catalog. We use these techniques to learn a latent food knowledge graph in order to drive better search and personalization. Particularly, we hope to share some of our advances in using: language modeling and knowledge graphs in the e-commerce setting.&lt;/p&gt;
</summary></entry><entry><title>Every ML Model Deserves To Be A Full Micro-service</title><link href="https://pyvideo.org/pydata-new-york-city-2019/every-ml-model-deserves-to-be-a-full-micro-service.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Romain Cledat</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/every-ml-model-deserves-to-be-a-full-micro-service.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The best ML model has little business value if it operates in a vacuum. The infrastructure used at Netflix enables data-scientists to quickly deploy their model as a microservice to perform inference or integrate with other systems. We demonstrate how we leverage a Python environment, familiar to data-scientists, as well as FaaS to remove infrastructure considerations and increase productivity.&lt;/p&gt;
</summary></entry><entry><title>Free Your Esoteric Data Using Apache Arrow and Python</title><link href="https://pyvideo.org/pydata-new-york-city-2019/free-your-esoteric-data-using-apache-arrow-and-python.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Maciej Wojton</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/free-your-esoteric-data-using-apache-arrow-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you work with esoteric data that has no schema, no human-readable output, and/or inconsistent interfaces? Is your data only readable from C++ classes with a secret encoding? Let me demonstrate how to use Python and Apache Arrow to quickly read your data into pandas and elegantly analyze the data.&lt;/p&gt;
</summary></entry><entry><title>High-Performance Data Science at Scale with RAPIDS, Dask, and GPUs</title><link href="https://pyvideo.org/pydata-new-york-city-2019/high-performance-data-science-at-scale-with-rapids-dask-and-gpus.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Keith Kraus</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/high-performance-data-science-at-scale-with-rapids-dask-and-gpus.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Explore the performance of RAPIDS, an open-source platform for accelerating data science with GPUs. The audience will learn the necessary background to leverage RAPIDS at scale in a real-world problem and get a glimpse of our roadmap.&lt;/p&gt;
</summary></entry><entry><title>How and why to put your Jupyter notebooks in Docker containers</title><link href="https://pyvideo.org/pydata-new-york-city-2019/how-and-why-to-put-your-jupyter-notebooks-in-docker-containers.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Brian Austin</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/how-and-why-to-put-your-jupyter-notebooks-in-docker-containers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter notebooks are a key part of a data scientist's professional output. Learn how to go from a notebook that shows a report to a reproducible service with the help of Docker. In this short walkthrough, you'll learn how to write a Dockerfile that packages your work effectively and consistently, so that it can be shared with any audience.&lt;/p&gt;
</summary></entry><entry><title>Implementing Lightweight Random Indexing for Polylingual Text Classification</title><link href="https://pyvideo.org/pydata-new-york-city-2019/implementing-lightweight-random-indexing-for-polylingual-text-classification.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Ian Whalen</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/implementing-lightweight-random-indexing-for-polylingual-text-classification.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most NLP tasks offer a simple setup: one language and a target. In the real world, we may face with the fact that people speak different languages when building models. This talk will motivate the use of lightweight random indexing (see paper here) to combine data sets across multiple languages and walk through a working implementation.&lt;/p&gt;
</summary></entry><entry><title>Improve the efficiency of your Big Data application</title><link href="https://pyvideo.org/pydata-new-york-city-2019/improve-the-efficiency-of-your-big-data-application.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Francesc Alted</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/improve-the-efficiency-of-your-big-data-application.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you're using NumPy and your data uses too much memory or requires too much computational resources this talk is for you! We'll introduce Caterva and IronArray, two libraries that, when used together, can greatly improve the efficiency and reduce the cost of your big data applications.&lt;/p&gt;
</summary></entry><entry><title>Julia for Pythonistas</title><link href="https://pyvideo.org/pydata-new-york-city-2019/julia-for-pythonistas.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Kelly Shen</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/julia-for-pythonistas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I will introduce the audience to Julia and show you how seamless it is to start programing in Julia from a Python background. I will talk about my experience using Julia in a few different projects and why I’ve found Julia an accessible yet special language with a lot of potential. I will also share what I love about the Julia community.&lt;/p&gt;
</summary></entry><entry><title>Painting a Picture of Public Data</title><link href="https://pyvideo.org/pydata-new-york-city-2019/painting-a-picture-of-public-data.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Kamal Abdelrahman</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/painting-a-picture-of-public-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data powers society, information that changes situations. How can we use data to help people understand the world they live in? With the use of the publicly available data, this talk aims to see past our external identities of our jobs, physical traits, and even geographical origin. This talk is a story of New York, narrated by data science, written in code, illustrated with art.&lt;/p&gt;
</summary></entry><entry><title>Production Code in Data Science Consulting</title><link href="https://pyvideo.org/pydata-new-york-city-2019/production-code-in-data-science-consulting.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Akos Furton</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/production-code-in-data-science-consulting.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;BCG Gamma offers custom Data Science solutions to industry leaders worldwide. During its projects, code must quickly and seamlessly transition from a Proof of Concept to Production.&lt;/p&gt;
</summary></entry><entry><title>Reproducibility in ML Systems: A Netflix Original</title><link href="https://pyvideo.org/pydata-new-york-city-2019/reproducibility-in-ml-systems-a-netflix-original.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Ferras Hamad</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/reproducibility-in-ml-systems-a-netflix-original.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we focus on the importance and benefits of effortless reproducibility as a first-class construct in machine learning infrastructure. From practices around capturing inputs and outputs to code versioning and transitive dependency management.&lt;/p&gt;
</summary></entry><entry><title>Should I develop my own DS library? Maybe.</title><link href="https://pyvideo.org/pydata-new-york-city-2019/should-i-develop-my-own-ds-library-maybe.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Piero Ferrante</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/should-i-develop-my-own-ds-library-maybe.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever entertained the idea of developing your own library for data science related tasks to be used among your team or organization? If so, phrases like 'don't recreate the wheel' also probably came to mind. This talk will address compelling arguments on both sides of the topic while telling the story of why we at Aetna ultimately decided to do just that and what we learned along the way.&lt;/p&gt;
</summary></entry><entry><title>Sloth &amp; ENVy</title><link href="https://pyvideo.org/pydata-new-york-city-2019/sloth-envy.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>James Powell</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/sloth-envy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;'Don't show up to this talk, it's going to be stupid. You won't learn anything, and if you do learn something, I promise it will be dumb.' - Diego Torres Quintanilla, PyData NYC Executive Chair&lt;/p&gt;
</summary></entry><entry><title>Stars, Planets, and Python</title><link href="https://pyvideo.org/pydata-new-york-city-2019/stars-planets-and-python.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Sara Seager</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/stars-planets-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For thousands of years people have wondered, “Are there planets like Earth?” “Are such planets common?” “Do any have signs of life?” Today astronomers are poised to answer these ancient questions, having recently found thousands of planets that orbit nearby Sun-like stars, called “exoplanets”. Professor Sara Seager, one of the world’s leading experts on this search for Earth-like planets, will share the latest advances in this revolutionary field.&lt;/p&gt;
</summary><category term="keynote"></category></entry><entry><title>tf-explain: Interpretability for Tensorflow 2.0</title><link href="https://pyvideo.org/pydata-new-york-city-2019/tf-explain-interpretability-for-tensorflow-20.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Raphaël Meudec</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/tf-explain-interpretability-for-tensorflow-20.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Deep learning models now emerge in multiple domains. The question data scientists and users always ask is 'Why does it work?'. Explaining decisions from neural networks is vital for model improvements and analysis, and users' adoption. In this talk, I will explain interpretability methods implementations with TF2.0 and introduce tf-explain, a TF2.0 library for interpretability.&lt;/p&gt;
</summary></entry><entry><title>The Echo-Chamber of Your Social Media Feed</title><link href="https://pyvideo.org/pydata-new-york-city-2019/the-echo-chamber-of-your-social-media-feed.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Tamar Yastrab</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/the-echo-chamber-of-your-social-media-feed.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data algorithms that anticipate what users want to see create an echo chamber of articles expressing a singular opinion. Journalist are inclined to use strong rhetoric that will be consistently favored by these ML programs and at the expense of complexity. This filtering process has bolstered polarized politics, especially on college campuses where more students turn to social media for news.&lt;/p&gt;
</summary></entry><entry><title>The Inspection Paradox is Everywhere</title><link href="https://pyvideo.org/pydata-new-york-city-2019/the-inspection-paradox-is-everywhere.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Allen Downey</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/the-inspection-paradox-is-everywhere.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The inspection paradox is a statistical illusion you’ve probably never heard of. It’s a common source of confusion, an occasional cause of error, and an opportunity for clever experimental design. And once you know about it, you see it everywhere.&lt;/p&gt;
</summary></entry><entry><title>The Secret Life of Python</title><link href="https://pyvideo.org/pydata-new-york-city-2019/the-secret-life-of-python.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Steve Dower</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/the-secret-life-of-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.8 includes new features for security engineers to allow greater insight and awareness when your network is under attack (which is every day). This session will investigate the need for these hooks and how they are used to protect your production servers and your users.&lt;/p&gt;
</summary></entry><entry><title>Type-Driven Automated Learning with Lale</title><link href="https://pyvideo.org/pydata-new-york-city-2019/type-driven-automated-learning-with-lale.html" rel="alternate"></link><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><author><name>Martin Hirzel</name></author><id>tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/type-driven-automated-learning-with-lale.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk presents Lale, an open-source Python library for semi-automated data science. Lale is compatible with scikit-learn, adding a simple interface to existing machine-learning automation tools. Lale lets you search over possible pipelines in just a few lines of code while remaining in control of your work.&lt;/p&gt;
</summary></entry><entry><title>A Crash Course in Applied Linear Algebra</title><link href="https://pyvideo.org/pydata-new-york-city-2019/a-crash-course-in-applied-linear-algebra.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Patrick Landreman</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/a-crash-course-in-applied-linear-algebra.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many people think of Linear Algebra as intimidating, difficult, and great for ending conversations at parties. The truth is that Linear Algebra is extraordinarily useful, often unreasonably so. By studying one equation, y = Ax, you will add an arsenal of tools and intuition to your skillset that can be applied in any technical situation (even nonlinear ones).&lt;/p&gt;
</summary></entry><entry><title>A Few Good Public Servants: How Great Analysis Inspires Action</title><link href="https://pyvideo.org/pydata-new-york-city-2019/a-few-good-public-servants-how-great-analysis-inspires-action.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Kelly Jin</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/a-few-good-public-servants-how-great-analysis-inspires-action.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is it like to work in public service? Hear stories from the halls of the Obama White House to New York City Hall of how data and analytics have transformed government in the past decade. From your hometown Mayor's Office of Data Analytics to data teams across the country, learn how a growing number of public servants are using data to ignite change in public policy and operations.&lt;/p&gt;
</summary><category term="keynote"></category></entry><entry><title>A Primer on Gaussian Processes for Regression Analysis</title><link href="https://pyvideo.org/pydata-new-york-city-2019/a-primer-on-gaussian-processes-for-regression-analysis.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Chris Fonnesbeck</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/a-primer-on-gaussian-processes-for-regression-analysis.html</id><summary type="html"></summary></entry><entry><title>Bayesian Inference for Fun and Profit</title><link href="https://pyvideo.org/pydata-new-york-city-2019/bayesian-inference-for-fun-and-profit.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Mitzi Morris</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/bayesian-inference-for-fun-and-profit.html</id><summary type="html"></summary></entry><entry><title>Bringing mental health data to doctors</title><link href="https://pyvideo.org/pydata-new-york-city-2019/bringing-mental-health-data-to-doctors.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Bill Lynch</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/bringing-mental-health-data-to-doctors.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is an edge to gain from the vast amounts of data in Healthcare. It’s now possible to continuously monitor patients’ health, but where to begin? What data is useful to a doctor who is not trained in mental health care? How do you make findings actionable? In this session, you’ll hear about lessons learned in starting, scaling, &amp;amp; optimizing data science initiatives at a growing tech company.&lt;/p&gt;
</summary></entry><entry><title>Build an AI-powered Pet Detector in Visual Studio Code</title><link href="https://pyvideo.org/pydata-new-york-city-2019/build-an-ai-powered-pet-detector-in-visual-studio-code.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Katherine Kampf</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/build-an-ai-powered-pet-detector-in-visual-studio-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever wondered what breed that dog or cat is? Let’s build a pet detector service to recognize them in pictures!&lt;/p&gt;
</summary></entry><entry><title>Cleaning, optimizing and windowing pandas with numba</title><link href="https://pyvideo.org/pydata-new-york-city-2019/cleaning-optimizing-and-windowing-pandas-with-numba.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Diego Torres Quintanilla</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/cleaning-optimizing-and-windowing-pandas-with-numba.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas has accrued a sizable debt in flexibility and maintainability to deliver excellent performance. This talk will show how Pandas maintainers and Two Sigma are using Numba to pay off some of this debt in one of the gnarliest parts of the code: window operations. If merged to mainstream Pandas, this work will deduplicate code, make it easier to debug and make window operations extensible.&lt;/p&gt;
</summary></entry><entry><title>Conda-press, or Reinventing the Wheel</title><link href="https://pyvideo.org/pydata-new-york-city-2019/conda-press-or-reinventing-the-wheel.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Anthony Scopatz</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/conda-press-or-reinventing-the-wheel.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Conda-press (&lt;a class="reference external" href="https://github.com/regro/conda-press"&gt;https://github.com/regro/conda-press&lt;/a&gt;) is a new tool that lets you transform conda packages into Python wheels. This talk will: discuss why in the world you would want to do such a terrible thing, demonstrate that you can do such a terrible thing (live!), dive-in to how such as terrible thing is done, and define some safety precautions when doing such a terrible things&lt;/p&gt;
</summary></entry><entry><title>Effective Python and R collaboration</title><link href="https://pyvideo.org/pydata-new-york-city-2019/effective-python-and-r-collaboration.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Daniel Rodriguez</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/effective-python-and-r-collaboration.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python and R are extremely powerful by itself, long are the days where there was a library or tool in one language that doesn't have a decent alternative in the other and new initiatives such as Apache Arrow are shaping a great future of collaboration between multiple languages. We will explore how will the future looks for multilingual data science teams in the open-source and in the enterprise.&lt;/p&gt;
</summary></entry><entry><title>From Raw Recruit Scripts to Perfect Python</title><link href="https://pyvideo.org/pydata-new-york-city-2019/from-raw-recruit-scripts-to-perfect-python.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Stanley van der Merwe</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/from-raw-recruit-scripts-to-perfect-python.html</id><summary type="html"></summary></entry><entry><title>Generating realistic, differentially private data sets using GANs</title><link href="https://pyvideo.org/pydata-new-york-city-2019/generating-realistic-differentially-private-data-sets-using-gans.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Joshua Falk</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/generating-realistic-differentially-private-data-sets-using-gans.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The value of individual-level data for research must be balanced against the privacy concerns of individuals. I discuss an approach for generating synthetic data sets that preserve relevant statistical properties of input data while also providing privacy guarantees for individuals in the data.&lt;/p&gt;
</summary></entry><entry><title>Geo Experiments and Causal Impact in Incrementality Testing</title><link href="https://pyvideo.org/pydata-new-york-city-2019/geo-experiments-and-causal-impact-in-incrementality-testing.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Jessica Tyler</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/geo-experiments-and-causal-impact-in-incrementality-testing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How can we find the incremental number of conversions driven by a new marketing campaign? This presentation will cover how we used geo experiments and CausalImpact to answer this question at HelloFresh.&lt;/p&gt;
</summary></entry><entry><title>Hacking the Data Science Challenge</title><link href="https://pyvideo.org/pydata-new-york-city-2019/hacking-the-data-science-challenge.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Michoel Snow</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/hacking-the-data-science-challenge.html</id><summary type="html"></summary></entry><entry><title>Is Spark still relevant? Multi-node CPU and single-node GPU workloads with Spark, Dask and RAPIDS.</title><link href="https://pyvideo.org/pydata-new-york-city-2019/is-spark-still-relevant-multi-node-cpu-and-single-node-gpu-workloads-with-spark-dask-and-rapids.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Eric Dill</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/is-spark-still-relevant-multi-node-cpu-and-single-node-gpu-workloads-with-spark-dask-and-rapids.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We compare Dask, Spark, and RAPIDS in a typical business workload: dataset exploration, model building, prediction and dashboarding / reporting. Of specific interest are infrastructure, ease of use and some general musings on the practicality of these compute frameworks. This talk will specifically address the relevance of these systems to the unique brand of problems we face in modern businesses.&lt;/p&gt;
</summary></entry><entry><title>Launching a new warehouse with SimPy at Rent the Runway</title><link href="https://pyvideo.org/pydata-new-york-city-2019/launching-a-new-warehouse-with-simpy-at-rent-the-runway.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Meghan Heintz</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/launching-a-new-warehouse-with-simpy-at-rent-the-runway.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Opening a warehouse is a long and challenging process, not to mention costly. So if you're going to go through all that work to open and operate a warehouse, you'll want to make sure you can run it as efficiently as possible. Enter SimPy (rhymes with 'Blimpie'). SimPy is a discrete event simulator software library that allows us to asynchronously schedule and process events.&lt;/p&gt;
</summary></entry><entry><title>Managing Stakeholders: The Key to Successful Data Science for Business</title><link href="https://pyvideo.org/pydata-new-york-city-2019/managing-stakeholders-the-key-to-successful-data-science-for-business.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Lauren Oldja</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/managing-stakeholders-the-key-to-successful-data-science-for-business.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A successful data science project is one that results in implementation, e.g., putting a model into production or using the result to support an organizational change. But implementation is only partially a technical problem. Successful implementation depends on people. This talk will cover multi-level stakeholder analysis, and techniques for engagement from project scoping to delivery of results.&lt;/p&gt;
</summary></entry><entry><title>Neural Networks for Natural Language Processing</title><link href="https://pyvideo.org/pydata-new-york-city-2019/neural-networks-for-natural-language-processing.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Matti Lyra</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/neural-networks-for-natural-language-processing.html</id><summary type="html"></summary></entry><entry><title>New Trends in Estimation and Inference</title><link href="https://pyvideo.org/pydata-new-york-city-2019/new-trends-in-estimation-and-inference.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Cameron Davidson-Pilon</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/new-trends-in-estimation-and-inference.html</id><summary type="html"></summary></entry><entry><title>Pandas vs Koalas: The Ultimate Showdown!</title><link href="https://pyvideo.org/pydata-new-york-city-2019/pandas-vs-koalas-the-ultimate-showdown.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Amanda Moran</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/pandas-vs-koalas-the-ultimate-showdown.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;No, we won’t be debating which animal is more adorable but we will be discussing the difference between doing data science locally vs doing data science at scale. Most Data Scientist are aware of working with Python and Pandas but you can only work with small amounts of data. With Koalas, Data Scientist can use all the same API's they are familiar with from Panadas but at scale with PySpark.&lt;/p&gt;
</summary></entry><entry><title>Propensity Score Matching: A Non-experimental Approach to Causal Inference</title><link href="https://pyvideo.org/pydata-new-york-city-2019/propensity-score-matching-a-non-experimental-approach-to-causal-inference.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Michael Johns</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/propensity-score-matching-a-non-experimental-approach-to-causal-inference.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Propensity score matching provides an alternative framework for causal inference when random assignment is not possible. The technique draws on core data science skills of predictive model building and algorithm development. Data scientists who need alternatives to experiments will find this a useful and accessible addition to their methodological toolbox.&lt;/p&gt;
</summary></entry><entry><title>Quantifying uncertainty in machine learning models</title><link href="https://pyvideo.org/pydata-new-york-city-2019/quantifying-uncertainty-in-machine-learning-models.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Samuel Rochette</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/quantifying-uncertainty-in-machine-learning-models.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many models give a lot more information during the inference process that we usually know. We will begin with an intrinsic estimation of all the distribution with random forest algorithm. Then we will extend those 'prediction intervals' to almost every regression models thanks to the quantile loss. Eventually we will discuss about probability calibration to measure uncertainty in classification.&lt;/p&gt;
</summary></entry><entry><title>Role playing Annotation workshop</title><link href="https://pyvideo.org/pydata-new-york-city-2019/role-playing-annotation-workshop.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Sumowska</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/role-playing-annotation-workshop.html</id><summary type="html"></summary></entry><entry><title>Same API, Different Execution</title><link href="https://pyvideo.org/pydata-new-york-city-2019/same-api-different-execution.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Saul Shanabrook</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/same-api-different-execution.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Can the Python data science and scientific computing ecoystem remain in the hands of community open source projects? Or will increasingly complex performance and hardware requirements leave room only for vertically integrated corporate sponsored projects?&lt;/p&gt;
</summary></entry><entry><title>Scalable Machine Learning with Dask</title><link href="https://pyvideo.org/pydata-new-york-city-2019/scalable-machine-learning-with-dask.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Tom Augspurger</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/scalable-machine-learning-with-dask.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has a great ecosystem for machine learning, especially on relatively small datasets processed on a single machine. We'll use Dask to scale libraries like NumPy, pandas, and scikit-learn to larger datasets and larger problems. We'll see that problems can be compute- or memory-bound (or both). We'll see strategies for dealing with these, using a cluster to parallelize our computation.&lt;/p&gt;
</summary></entry><entry><title>Semantic modeling of data science code</title><link href="https://pyvideo.org/pydata-new-york-city-2019/semantic-modeling-of-data-science-code.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Evan Patterson</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/semantic-modeling-of-data-science-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Programming languages and libraries are proliferating in the data science community. In an effort to reduce communication barriers and enable automation and intelligent tooling, we are developing software to automatically construct language-agnostic semantic models of data science code written in Python or R. In this talk, we introduce our methods and illustrate them by example.&lt;/p&gt;
</summary></entry><entry><title>Simplified Data Quality Monitoring of Dynamic Longitudinal Data: A Functional Programming Approach</title><link href="https://pyvideo.org/pydata-new-york-city-2019/simplified-data-quality-monitoring-of-dynamic-longitudinal-data-a-functional-programming-approach.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Jacqueline Gutman</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/simplified-data-quality-monitoring-of-dynamic-longitudinal-data-a-functional-programming-approach.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data scientists are often tasked with being the first to detect issues of data quality that may have serious consequences for downstream consumers of their data. We will demonstrate how to simplify data quality monitoring through a functional programming approach that empowers the 5 key pillars of a user-friendly workflow: readability, compositionality, reproducibility, efficiency, and robustness.&lt;/p&gt;
</summary></entry><entry><title>Small Big Data: using NumPy and Pandas when your data doesn't fit in memory</title><link href="https://pyvideo.org/pydata-new-york-city-2019/small-big-data-using-numpy-and-pandas-when-your-data-doesnt-fit-in-memory.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Itamar Turner-Trauring</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/small-big-data-using-numpy-and-pandas-when-your-data-doesnt-fit-in-memory.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Your data is too big to fit in memory—loading it crashes your program—but it's also too small for a complex Big Data cluster. How to process your data simply and quickly?  In this talk you'll learn the basic techniques for dealing with Small Big Data: money, compression, batching and parallelization, and indexing. In particular, you'll learn how to apply these techniques to NumPy and Pandas.&lt;/p&gt;
</summary></entry><entry><title>Spark Backend for Ibis: Seamless Transition Between Pandas and Spark</title><link href="https://pyvideo.org/pydata-new-york-city-2019/spark-backend-for-ibis-seamless-transition-between-pandas-and-spark.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Li Jin</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/spark-backend-for-ibis-seamless-transition-between-pandas-and-spark.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ibis a library that provides unified pandas-like API on top of both single-node local execution (e.g. pandas) and multi-node remote execution (e.g. BigQuery, Impala). In this talk, we will introduce a new backend for executing Ibis programs on Spark and show how you can write analytics that run on both Spark and pandas.&lt;/p&gt;
</summary></entry><entry><title>The physics of deep learning using tensor networks</title><link href="https://pyvideo.org/pydata-new-york-city-2019/the-physics-of-deep-learning-using-tensor-networks.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Marianne Hoogeveen</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/the-physics-of-deep-learning-using-tensor-networks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tensor networks have been used in Physics to find efficient expressions of many-body quantum systems, describing systems from materials to holographic spacetime. As it happens, one can also use tensor networks in machine learning. Exploring the equivalence between these two affords us intuition on inductive bias, which is the set of assumptions that determine our choice of machine learning model.&lt;/p&gt;
</summary></entry><entry><title>Time series for scikit-learn people</title><link href="https://pyvideo.org/pydata-new-york-city-2019/time-series-for-scikit-learn-people.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Ethan Rosenthal</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/time-series-for-scikit-learn-people.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will frame the topic of time series forecasting in the language of machine learning. This framing will be used to introduce the skits library which provides a scikit-learn-compatible API for fitting and forecasting time series models using supervised machine learning. Finally, a real-world deployment of skits involving thousands of forecasts per hour will be demonstrated.&lt;/p&gt;
</summary></entry><entry><title>To comment or not</title><link href="https://pyvideo.org/pydata-new-york-city-2019/to-comment-or-not.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Veronica Hanus</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/to-comment-or-not.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every programmer has asked themselves “how many comments are too many?” To the newest programmers, comments may seem magical–a way of documenting without giving instructions to the computer. But commenting engages the same vulnerability as more advanced challenges (i.e. pair programming &amp;amp; code review) and is likely to pique the insecurity of many programmers (especially the copy-and-paste or tutorial-level programmer)!&lt;/p&gt;
</summary></entry><entry><title>Using Graph Nets (GNs) to predict molecular properties</title><link href="https://pyvideo.org/pydata-new-york-city-2019/using-graph-nets-gns-to-predict-molecular-properties.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Chaya D Stern</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/using-graph-nets-gns-to-predict-molecular-properties.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will be showing how Graph Nets (GNs)—a set of statistical models that directly operate on molecular topology by updating and aggregating information between atoms and bonds—can approximate per-atom, per-bond, and per-molecule properties derived by quantum mechanics (QM), with errors within the uncertainty thereof, and an over-500-fold speed up&lt;/p&gt;
</summary></entry><entry><title>What we learned by running a large custom Bayesian forecasting model in production</title><link href="https://pyvideo.org/pydata-new-york-city-2019/what-we-learned-by-running-a-large-custom-bayesian-forecasting-model-in-production.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Jens Fredrik Skogstrom</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/what-we-learned-by-running-a-large-custom-bayesian-forecasting-model-in-production.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At Kolonial.no we built and implemented our own custom Bayesian forecasting model in PyMC3 - and learned a lot in the process. In this talk, we share our thoughts on when to do what we did, and more important, when not to do it. We also share how we stumbled into numerous pitfalls on the way but managed to climb out again.&lt;/p&gt;
</summary></entry><entry><title>Working with Maps: Extracting Features for Traffic Crash Insights</title><link href="https://pyvideo.org/pydata-new-york-city-2019/working-with-maps-extracting-features-for-traffic-crash-insights.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Jenny Turner-Trauring: Working with Maps</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/working-with-maps-extracting-features-for-traffic-crash-insights.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wanted to work with maps, but didn't know where to start? This talk will focus on feature engineering for a real-world project: pulling maps from OpenStreetMap, creating road segments, and adding features from other data sources. The features are used by Insight Lane, building tools for traffic departments and advocacy groups to better understand traffic crash risk.&lt;/p&gt;
</summary></entry><entry><title>Zarr vs. HDF5</title><link href="https://pyvideo.org/pydata-new-york-city-2019/zarr-vs-hdf5.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Joe Jevnik</name></author><id>tag:pyvideo.org,2019-11-04:pydata-new-york-city-2019/zarr-vs-hdf5.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Zarr and HDF5 are libraries and data formats for storing chunked, compressed N-dimensional data. This talk will give a brief introduction to the their shared functionality, but then focus on the their differences. This talk cover how show how each library handles compression, data storage, and extension points. This talk should help the audience choose the correct tool for their problem.&lt;/p&gt;
</summary></entry></feed>