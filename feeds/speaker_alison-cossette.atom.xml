<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Alison Cossette</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_alison-cossette.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-09-21T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Practical GraphRAG - Making LLMs smarter with Knowledge Graphs</title><link href="https://pyvideo.org/pybay-2024/practical-graphrag-making-llms-smarter-with-knowledge-graphs.html" rel="alternate"></link><published>2024-09-21T00:00:00+00:00</published><updated>2024-09-21T00:00:00+00:00</updated><author><name>Alison Cossette</name></author><id>tag:pyvideo.org,2024-09-21:/pybay-2024/practical-graphrag-making-llms-smarter-with-knowledge-graphs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;We all know that LLMs hallucinate and RAG can help by providing current, relevant information to the model for generative tasks.&lt;/p&gt;
&lt;p&gt;But can we do better than just vector retrievals? A knowledge graph can represent data (and reality) at high fidelity and can make this  rich context available based …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;We all know that LLMs hallucinate and RAG can help by providing current, relevant information to the model for generative tasks.&lt;/p&gt;
&lt;p&gt;But can we do better than just vector retrievals? A knowledge graph can represent data (and reality) at high fidelity and can make this  rich context available based on the user's questions. But how to turn your text data into graphs data structures?&lt;/p&gt;
&lt;p&gt;Here is where the language skills of LLM can help to extract entities and relationships from text, which you then can correlate with sources,
cluster into communities and navigate while answering the questions.&lt;/p&gt;
&lt;p&gt;In this talk we will both dive into Microsoft Research's GraphRAG approach as well as run the indexing and search live with Neo4j and LangChain.&amp;quot;&lt;/p&gt;
</content><category term="PyBay 2024"></category></entry><entry><title>Breaking Away from the Empire: Avoiding the Evil Clutches of If-Then Statements (Sponsor: neo4j)</title><link href="https://pyvideo.org/pycon-us-2023/breaking-away-from-the-empire-avoiding-the-evil-clutches-of-if-then-statements-sponsor-neo4j.html" rel="alternate"></link><published>2023-04-20T00:00:00+00:00</published><updated>2023-04-20T00:00:00+00:00</updated><author><name>Jason Koo</name></author><id>tag:pyvideo.org,2023-04-20:/pycon-us-2023/breaking-away-from-the-empire-avoiding-the-evil-clutches-of-if-then-statements-sponsor-neo4j.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Become a Rebel and learn how to create a hyperspace navigation app to
avoid Imperial patrols using the power of graphs in Python! Say goodbye
to complex if-then statements and embrace a more elegant and flexible
approach. In this talk we'll introduce graphs as a data structure, how
to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Become a Rebel and learn how to create a hyperspace navigation app to
avoid Imperial patrols using the power of graphs in Python! Say goodbye
to complex if-then statements and embrace a more elegant and flexible
approach. In this talk we'll introduce graphs as a data structure, how
to model this kind of data, and how to use them in place of more
complicated logic code. Discover how graphs can simplify decision-making
logic in your code for improved readability and extensibility.&lt;/p&gt;
&lt;p&gt;Join us on a journey to break free from the empire of if-then statements
and unlock the full potential of your data. Expand your toolset and
liberate your code!&lt;/p&gt;
</content><category term="PyCon US 2023"></category></entry></feed>