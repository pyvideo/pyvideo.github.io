<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Jason Fried</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 18 May 2025 00:00:00 +0000</lastBuildDate><item><title>RULES FOR RADICALS: CHANGING THE CULTURE OF PYTHON AT FACEBOOK</title><link>https://pyvideo.org/pycon-au-2016/rules-for-radicals-changing-the-culture-of-python-at-facebook.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jason Fried
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/27/view_talk"&gt;https://2016.pycon-au.org/schedule/27/view_talk&lt;/a&gt;
Today, services built on Python 3.5 using asyncio are widely used at Facebook. But as recently as May of 2014 it was actually impossible to use Python 3 at Facebook. Come learn how we cut the Gordian Knot of dependencies and social aversion to the point where new services are now being written in Python 3 and existing codebases have plans to move to Python 3.5.  All without official support or sanction.&lt;/p&gt;
&lt;p&gt;&amp;quot;Rules for Radicals&amp;quot; is a book for community organizers by the late Saul Alinsky on how to unite people to effect positive change in their communities.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Fried</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:/pycon-au-2016/rules-for-radicals-changing-the-culture-of-python-at-facebook.html</guid><category>PyCon AU 2016</category></item><item><title>Fighting the Good Fight: Python 3 in your organization</title><link>https://pyvideo.org/pycon-us-2018/fighting-the-good-fight-python-3-in-your-organization.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Today, services built on Python 3.6.3 are widely used at Facebook. But as recently as May of 2014 it was actually impossible at all to use Python 3 at Facebook. Come learn how we cut the Gordian Knot of dependencies and social aversion to the point where new services are now being written in Python 3 while older Python 2 projects are actively migrated to Python 3. All accomplished by a small group of individual contributors in their spare time. Learn to fight the good fight and upgrade your organization to Python 3 like we did at Facebook.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Fried</dc:creator><pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-12:/pycon-us-2018/fighting-the-good-fight-python-3-in-your-organization.html</guid><category>PyCon US 2018</category></item><item><title>If an asyncio.Task fails in the woods and nobody is around to see it, does it still page you at 3am</title><link>https://pyvideo.org/pycon-us-2022/if-an-asynciotask-fails-in-the-woods-and-nobody-is-around-to-see-it-does-it-still-page-you-at-3am.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Its 3am you just got called about some asyncio production code that is failing either cryptically or silently. You discover that its using some terrible pattern and say to yourself &amp;quot;how did this ever work?&amp;quot;. Come find out about some bad asyncio usage patterns and how to combat them in your projects. We will talk about useful patterns for bootstrapping and tear down, and give you the tools you need to improve the code you maintain.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Fried</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-04-27:/pycon-us-2022/if-an-asynciotask-fails-in-the-woods-and-nobody-is-around-to-see-it-does-it-still-page-you-at-3am.html</guid><category>PyCon US 2022</category></item><item><title>Keeping up with Python: what makes upgrades hard, and what can we do about it</title><link>https://pyvideo.org/pycon-us-2025/keeping-up-with-python-what-makes-upgrades-hard-and-what-can-we-do-about-it.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;cPython upgrades can be very challenging. Changes in python version usually mean changes all over the place and managing that can be taxing. Like first party code using deprecated api or Third-party code changing API required to change python versions. Lets go over some bad code examples and ways to improve the experience for everyone. So that maybe in the future upgrades are not so hard.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Fried</dc:creator><pubDate>Sun, 18 May 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-05-18:/pycon-us-2025/keeping-up-with-python-what-makes-upgrades-hard-and-what-can-we-do-about-it.html</guid><category>PyCon US 2025</category></item><item><title>Python 3 at Facebook and Instagram</title><link>https://pyvideo.org/pyninsula-2017/python-3-at-facebook-and-instagram.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Fried</dc:creator><pubDate>Sat, 06 Jan 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-01-06:/pyninsula-2017/python-3-at-facebook-and-instagram.html</guid><category>Pyninsula 2017</category></item><item><title>Rules for Radicals: Changing the Culture of Python at Facebook</title><link>https://pyvideo.org/pyohio-2016/rules-for-radicals-changing-the-culture-of-python-at-facebook.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Today, services built on Python 3.5 using asyncio are widely used at Facebook. But as recently as May of 2014 it was actually impossible to use Python 3 at Facebook. Come learn how we cut the Gordian Knot of dependencies and social aversion to the point where new services are now being written in Python 3 and existing codebases have plans to move to Python 3.5.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Fried</dc:creator><pubDate>Sun, 31 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-31:/pyohio-2016/rules-for-radicals-changing-the-culture-of-python-at-facebook.html</guid><category>PyOhio 2016</category></item></channel></rss>