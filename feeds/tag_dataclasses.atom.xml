<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_dataclasses.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-12-12T00:00:00+00:00</updated><entry><title>Data Classes, in Python 3.6 and beyond</title><link href="https://pyvideo.org/pycon-se-2018/data-classes-in-python-36-and-beyond.html" rel="alternate"></link><published>2018-12-12T00:00:00+00:00</published><updated>2018-12-12T00:00:00+00:00</updated><author><name>Alexander Hultn√©r</name></author><id>tag:pyvideo.org,2018-12-12:pycon-se-2018/data-classes-in-python-36-and-beyond.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.7 is here and the &amp;#64;dataclass-decorator is a major new feature simplifying class-creation. In this talk, we will learn to use the power of data classes to make our codebases cleaner and leaner in a pythonic way.
We will also learn how to use the backport in Python 3.6 codebases before upgrading.&lt;/p&gt;
</summary><category term="dataclasses"></category><category term="python3.7"></category><category term="python3.8"></category></entry><entry><title>Dataclasses: The effortless tool to define data</title><link href="https://pyvideo.org/pycon-israel-2018/dataclasses-the-effortless-tool-to-define-data.html" rel="alternate"></link><published>2018-06-04T00:00:00+00:00</published><updated>2018-06-04T00:00:00+00:00</updated><author><name>Eli Gur</name></author><id>tag:pyvideo.org,2018-06-04:pycon-israel-2018/dataclasses-the-effortless-tool-to-define-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Available starting Python 3.7, the dataclasses (introduced in PEP 557) are finally here. Amazingly simple solution for data with great exressiveness, the next generation of dicts, named tuples and records. The presentation will explain what the dataclasses are, show practical examples, and go over the main features and the key design decisions as well as the capabilities.&lt;/p&gt;
</summary><category term="dataclasses"></category></entry><entry><title>Dataclasses: The code generator to end all code generators</title><link href="https://pyvideo.org/pycon-us-2018/dataclasses-the-code-generator-to-end-all-code-generators.html" rel="alternate"></link><published>2018-05-12T00:00:00+00:00</published><updated>2018-05-12T00:00:00+00:00</updated><author><name>Raymond Hettinger</name></author><id>tag:pyvideo.org,2018-05-12:pycon-us-2018/dataclasses-the-code-generator-to-end-all-code-generators.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The PEP 557 dataclasses module is available in starting in Python 3.7.   It will become an essential part of every Python programmer's toolkit.  This talk shows what problem the module solves, explains its key design decisions, and provides practical examples of how to put it to work.&lt;/p&gt;
&lt;p&gt;Dataclasses are shown to be the next step in a progression of data aggregation tools: tuple, dict, simple class, bunch recipe, named tuples, records, attrs, and then dataclasses. Each builds upon the one that came before, adding expressiveness at the expense of complexity.&lt;/p&gt;
&lt;p&gt;Dataclasses are unique in that they let you selectively turn-on or turn-off its various capabilities and it lets the user choose the underlying data store (either instance dictionary, instance slots, or an inherited base class).&lt;/p&gt;
&lt;p&gt;Dataclasses and typing.NamedTuple both use variable annotations which were new in Python 3.6.&lt;/p&gt;
</summary><category term="dataclasses"></category></entry></feed>