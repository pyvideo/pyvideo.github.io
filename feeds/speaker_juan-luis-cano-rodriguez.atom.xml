<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Juan Luis Cano Rodriguez</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_juan-luis-cano-rodriguez.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-07-11T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Per Python ad Astra</title><link href="https://pyvideo.org/europython-2016/per-python-ad-astra.html" rel="alternate"></link><published>2016-08-01T00:00:00+00:00</published><updated>2016-08-01T00:00:00+00:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:pyvideo.org,2016-08-01:/europython-2016/per-python-ad-astra.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Juan Luis Cano - Per Python ad Astra
[EuroPython 2016]
[20 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/per-python-ad-astra"&gt;https://ep2016.europython.eu//conference/talks/per-python-ad-astra&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;In the intersection of mechanics, mathematics and &amp;quot;cool stuff that
travels through space&amp;quot; lies Astrodynamics, a beautiful branch of
physics that studies the motion of spacecraft. In …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Juan Luis Cano - Per Python ad Astra
[EuroPython 2016]
[20 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/per-python-ad-astra"&gt;https://ep2016.europython.eu//conference/talks/per-python-ad-astra&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;In the intersection of mechanics, mathematics and &amp;quot;cool stuff that
travels through space&amp;quot; lies Astrodynamics, a beautiful branch of
physics that studies the motion of spacecraft. In this talk we will
describe poliastro, a pure Python library we can use to compute
orbital maneuvers, plot trajectories and much more. The role of JIT
compiling (using numba) to drop the previously used FORTRAN algorithms
will also be discussed, as well as the importance of open source in
scientific discoveries.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;In the intersection of mechanics, mathematics and &amp;quot;cool stuff that
travels through space&amp;quot; lies Astrodynamics, a beautiful branch of
physics that studies the motion of spacecraft. Rocket launches have
never been so popular thanks to companies like Space X, more and more
investors pay attention to aerospace startups and amazing missions
explore our planet and our Solar System every day. In this talk we
will describe poliastro, a pure Python library we can use to compute
orbital maneuvers, plot trajectories and much more. The role of JIT
compiling (using numba) to drop the previously used FORTRAN algorithms
will also be discussed, as well as the importance of open source in
scientific discoveries.&lt;/p&gt;
</content><category term="EuroPython 2016"></category></entry><entry><title>Can we make Python fast without sacrificing readability? numba for Astrodynamics</title><link href="https://pyvideo.org/euroscipy-2019/can-we-make-python-fast-without-sacrificing-readability-numba-for-astrodynamics.html" rel="alternate"></link><published>2019-09-05T00:00:00+00:00</published><updated>2019-09-05T00:00:00+00:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:pyvideo.org,2019-09-05:/euroscipy-2019/can-we-make-python-fast-without-sacrificing-readability-numba-for-astrodynamics.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We are lucky there are very diverse solutions to make Python faster that
have been in use for a while: from wrapping compiled languages (NumPy),
to altering the Python syntax to make it more suitable to compilers
(Cython), to using a subset of it which can in turn be …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We are lucky there are very diverse solutions to make Python faster that
have been in use for a while: from wrapping compiled languages (NumPy),
to altering the Python syntax to make it more suitable to compilers
(Cython), to using a subset of it which can in turn be accelerated
(numba). However, each of these options has a tradeoff, and there is no
silver bullet.&lt;/p&gt;
&lt;p&gt;poliastro is a library for Astrodynamics written in pure Python. All its
core algorithms are accelerated with numba, which allows poliastro to be
decently fast while having minimal code complexity and avoid using other
languages.&lt;/p&gt;
&lt;p&gt;However, even though numba is quite mature as a library and most of the
Python syntax and NumPy functions are supported, there are still some
limitations that affect its usage. In particular, we strive to offer a
high-level API with support for physical units and reusable functions
which can be passed as arguments, which sometimes require using complex
objects or introspective Python behavior which is not available.&lt;/p&gt;
&lt;p&gt;In this talk we will discuss the strategies and workarounds we have
developed to overcome these problems, and what advanced numba features
we can leverage.&lt;/p&gt;
&lt;p&gt;There are several solutions to make Python faster, and choosing one is
not easy: we would want it to be fast without sacrificing its
readability and high-level nature. We tried to do it for an
Astrodynamics library using numba. How did it turn out?&lt;/p&gt;
</content><category term="EuroSciPy 2019"></category></entry><entry><title>Catch that asteroid with poliastro</title><link href="https://pyvideo.org/pyastro-2018/catch-that-asteroid-with-poliastro.html" rel="alternate"></link><published>2018-04-30T00:00:00+00:00</published><updated>2018-04-30T00:00:00+00:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:pyvideo.org,2018-04-30:/pyastro-2018/catch-that-asteroid-with-poliastro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="http://docs.poliastro.space/"&gt;poliastro&lt;/a&gt; is a Python library for Astrodynamics focused on interplanetary trajectories, interactive visualization and user friendliness. It features core algorithms like propagation (Kepler problem), orbit determination (Lambert problem), orbital maneuvers computation (Hohmann, bielliptic) and conversion between classical, equinoctial and cartesian orbital elements. It also ships simple methods for orbit …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="http://docs.poliastro.space/"&gt;poliastro&lt;/a&gt; is a Python library for Astrodynamics focused on interplanetary trajectories, interactive visualization and user friendliness. It features core algorithms like propagation (Kepler problem), orbit determination (Lambert problem), orbital maneuvers computation (Hohmann, bielliptic) and conversion between classical, equinoctial and cartesian orbital elements. It also ships simple methods for orbit plotting and makes heavy use of astropy.units, astropy.time and astropy.coordinates for correctness.&lt;/p&gt;
&lt;p&gt;In this talk I will present benchmarks of some poliastro algorithms accelerated with numba against its FORTRAN counterparts, review its interactive plotting capabilities and comment about the validation strategies used for the algorithms.&lt;/p&gt;
</content><category term="PyAstro 2018"></category><category term="poliastro"></category></entry><entry><title>Empaquetar es fácil, si sabes cómo</title><link href="https://pyvideo.org/pycon-es-2013/empaquetar-es-facil-si-sabes-como.html" rel="alternate"></link><published>2013-12-31T00:00:00+00:00</published><updated>2013-12-31T00:00:00+00:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:pyvideo.org,2013-12-31:/pycon-es-2013/empaquetar-es-facil-si-sabes-como.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Autor: Juan Luis Cano&lt;/p&gt;
&lt;p&gt;Track: Produban (Básico)&lt;/p&gt;
&lt;p&gt;Empaquetar una biblioteca en Python puede ser un proceso confuso lleno de incertidumbres y propenso a tomar decisiones equivocadas, pero va mejorando. En esta charla vamos a diferenciar claramente lo que está obsoleto de lo que no, explicando el presente y mirando …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Autor: Juan Luis Cano&lt;/p&gt;
&lt;p&gt;Track: Produban (Básico)&lt;/p&gt;
&lt;p&gt;Empaquetar una biblioteca en Python puede ser un proceso confuso lleno de incertidumbres y propenso a tomar decisiones equivocadas, pero va mejorando. En esta charla vamos a diferenciar claramente lo que está obsoleto de lo que no, explicando el presente y mirando al futuro.&lt;/p&gt;
</content><category term="PyCon ES 2013"></category></entry><entry><title>Python + Ciencia = \o/</title><link href="https://pyvideo.org/pycon-es-2013/python-ciencia-o.html" rel="alternate"></link><published>2013-12-27T00:00:00+00:00</published><updated>2013-12-27T00:00:00+00:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:pyvideo.org,2013-12-27:/pycon-es-2013/python-ciencia-o.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Autor: Juan Luis Cano&lt;/p&gt;
&lt;p&gt;Track: BityVip (Científico)&lt;/p&gt;
&lt;p&gt;Python como lenguaje mola mucho más que MATLAB y no digo ya FORTRAN 77. Python engancha, sobre todo si te dedicas a la ciencia y la ingeniería: vamos a dar un breve repaso a las posibilidades que ofrece en este campo, y …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Autor: Juan Luis Cano&lt;/p&gt;
&lt;p&gt;Track: BityVip (Científico)&lt;/p&gt;
&lt;p&gt;Python como lenguaje mola mucho más que MATLAB y no digo ya FORTRAN 77. Python engancha, sobre todo si te dedicas a la ciencia y la ingeniería: vamos a dar un breve repaso a las posibilidades que ofrece en este campo, y por qué seguirá creciendo en los próximos años.&lt;/p&gt;
</content><category term="PyCon ES 2013"></category></entry><entry><title>Per Shaolin ad Astra</title><link href="https://pyvideo.org/pycon-es-2016/per-shaolin-ad-astra.html" rel="alternate"></link><published>2016-10-09T00:00:00+00:00</published><updated>2016-10-09T00:00:00+00:00</updated><author><name>Guillem Durán</name></author><id>tag:pyvideo.org,2016-10-09:/pycon-es-2016/per-shaolin-ad-astra.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will show how it is possible to build an interactive 3D model of the solar system using the python packages shaolin and poliastro.&lt;/p&gt;
&lt;p&gt;At EuroPython Juan Luis Cano asked for a 3D visualization module for poliastro, and now we are finally presenting the first version …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will show how it is possible to build an interactive 3D model of the solar system using the python packages shaolin and poliastro.&lt;/p&gt;
&lt;p&gt;At EuroPython Juan Luis Cano asked for a 3D visualization module for poliastro, and now we are finally presenting the first version of the poliastro 3D models build using plotly and vpython.&lt;/p&gt;
&lt;p&gt;We will review the data presented at EuroPython 2016 with an interactive model of the solar system for representing planets and its orbits.&lt;/p&gt;
&lt;p&gt;Materials available at &lt;a class="reference external" href="https://github.com/Guillem-db/PyconEs-2016"&gt;https://github.com/Guillem-db/PyconEs-2016&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://2016.es.pycon.org/"&gt;http://2016.es.pycon.org/&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon ES 2016"></category></entry><entry><title>Clausura - PyConES 2017</title><link href="https://pyvideo.org/pycon-es-2017/clausura-pycones-2017.html" rel="alternate"></link><published>2017-09-24T16:30:00+02:00</published><updated>2017-09-24T16:30:00+02:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:pyvideo.org,2017-09-24:/pycon-es-2017/clausura-pycones-2017.html</id><content type="html"></content><category term="PyCon ES 2017"></category><category term="closing ceremony"></category></entry><entry><title>Código abierto: Mucho camino por delante</title><link href="https://pyvideo.org/pycon-es-2017/codigo-abierto-mucho-camino-por-delante.html" rel="alternate"></link><published>2017-09-24T15:30:00+02:00</published><updated>2017-09-24T15:30:00+02:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:pyvideo.org,2017-09-24:/pycon-es-2017/codigo-abierto-mucho-camino-por-delante.html</id><content type="html"></content><category term="PyCon ES 2017"></category><category term="keynote"></category></entry><entry><title>¡Atrapa ese asteroide con poliastro!</title><link href="https://pyvideo.org/pycon-es-2017/atrapa-ese-asteroide-con-poliastro.html" rel="alternate"></link><published>2017-09-23T15:30:00+02:00</published><updated>2017-09-23T15:30:00+02:00</updated><author><name>Antonio Hidalgo</name></author><id>tag:pyvideo.org,2017-09-23:/pycon-es-2017/atrapa-ese-asteroide-con-poliastro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;poliastro es una biblioteca de código abierto escrita en Python puro utilizada para hacer cálculos orbitales. Este año participó en el Summer of Code de la Agencia Espacial Europea (SOCIS), un programa parecido al de Google que otorga becas a estudiantes para desarrollar código abierto en verano. En esta …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;poliastro es una biblioteca de código abierto escrita en Python puro utilizada para hacer cálculos orbitales. Este año participó en el Summer of Code de la Agencia Espacial Europea (SOCIS), un programa parecido al de Google que otorga becas a estudiantes para desarrollar código abierto en verano. En esta charla hablaremos de la API que se ha desarrollado durante el verano para descargar datos de asteroides, cometas y otros objetos ¡incluyendo alguna demo!&lt;/p&gt;
</content><category term="PyCon ES 2017"></category><category term="poliastro"></category></entry><entry><title>Documenta tu proyecto con Markdown, Sphinx, y Read the Docs</title><link href="https://pyvideo.org/pycon-latam-2021/documenta-tu-proyecto-con-markdown-sphinx-y-read-the-docs.html" rel="alternate"></link><published>2021-08-27T00:00:00+00:00</published><updated>2021-08-27T00:00:00+00:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:pyvideo.org,2021-08-27:/pycon-latam-2021/documenta-tu-proyecto-con-markdown-sphinx-y-read-the-docs.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sincerémonos: nos gusta que los proyectos que usamos estén bien documentados, pero casi nunca tenemos tiempo para documentar los nuestros. ¿Cómo podemos hacer que escribir documentación para nuestro software sea lo más placentero posible?&lt;/p&gt;
</content><category term="PyCon Latam 2021"></category></entry><entry><title>IPython: How a notebook is changing science</title><link href="https://pyvideo.org/pycon-se-2015/ipython-how-a-notebook-is-changing-science.html" rel="alternate"></link><published>2015-05-25T00:00:00+00:00</published><updated>2015-05-25T00:00:00+00:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:pyvideo.org,2015-05-25:/pycon-se-2015/ipython-how-a-notebook-is-changing-science.html</id><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;IPython was born as an Interactive Python shell on steroids 14 years
ago, but its notebook tool is shaping the way scientists, developers and
even journalists communicate and explore science. Let us examine
IPython's importance in Open Science now that Nature highlighted one of
its awesome features!&lt;/p&gt;
</content><category term="PyCon SE 2015"></category></entry><entry><title>Lightning talks: Spain PyData</title><link href="https://pyvideo.org/pycon-sk-2017/lightning-talks-spain-pydata.html" rel="alternate"></link><published>2017-03-12T00:00:00+00:00</published><updated>2017-03-12T00:00:00+00:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:pyvideo.org,2017-03-12:/pycon-sk-2017/lightning-talks-spain-pydata.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks: Juan Luis Cano Rodríguez - Spain PyData&lt;/p&gt;
</content><category term="PyCon SK 2017"></category><category term="lightning talks"></category></entry><entry><title>Through Python to the stars!</title><link href="https://pyvideo.org/pycon-sk-2017/through-python-to-the-stars.html" rel="alternate"></link><published>2017-03-11T00:00:00+00:00</published><updated>2017-03-11T00:00:00+00:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:pyvideo.org,2017-03-11:/pycon-sk-2017/through-python-to-the-stars.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the intersection of mechanics, mathematics and “cool stuff that travels through space” lies Astrodynamics, a beautiful branch of physics that studies the motion of spacecraft. Rocket launches have never been so popular thanks to companies like Space X, more and more investors pay attention to aerospace startups and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the intersection of mechanics, mathematics and “cool stuff that travels through space” lies Astrodynamics, a beautiful branch of physics that studies the motion of spacecraft. Rocket launches have never been so popular thanks to companies like Space X, more and more investors pay attention to aerospace startups and amazing missions explore our planet and our Solar System every day. In this talk we will get to know poliastro, a pure Python library that we can use to compute orbital maneuvers, plot trajectories and much more. The role of JIT compiling (using numba) to replace old and busted FORTRAN algorithms will also be discussed, as well as the importance of open source in scientific discoveries.&lt;/p&gt;
</content><category term="PyCon SK 2017"></category></entry><entry><title>Jupyter (IPython): how a notebook is changing science</title><link href="https://pyvideo.org/pydata-london-2015/jupyter-ipython-how-a-notebook-is-changing-science.html" rel="alternate"></link><published>2015-06-21T00:00:00+00:00</published><updated>2015-06-21T00:00:00+00:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:pyvideo.org,2015-06-21:/pydata-london-2015/jupyter-ipython-how-a-notebook-is-changing-science.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;IPython was born as an Interactive Python shell on steroids 14 years
ago, but its notebook tool is shaping the way scientists, developers
and even journalists communicate and explore science. After its
rebirth as the Jupyter project, we will examine its importance and
future in Open Science and scientific …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;IPython was born as an Interactive Python shell on steroids 14 years
ago, but its notebook tool is shaping the way scientists, developers
and even journalists communicate and explore science. After its
rebirth as the Jupyter project, we will examine its importance and
future in Open Science and scientific publishing now that Nature
highlighted its awesome features!&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is both a shortened version of the recent history of the
Jupyter project (previously IPython) and a case for reproducibility in
science. We will glance at the recent milestones of the project, address
some common myths still heard in business environments regarding open
source, show the possibilities of Jupyter as an environment for several
different languages (specially Julia and R) and talk about possible
future developments.&lt;/p&gt;
</content><category term="PyData London 2015"></category></entry><entry><title>Lightning Talks</title><link href="https://pyvideo.org/pydata-london-2015/lightning-talks.html" rel="alternate"></link><published>2015-06-21T00:00:00+00:00</published><updated>2015-06-21T00:00:00+00:00</updated><author><name>Philip Nye</name></author><id>tag:pyvideo.org,2015-06-21:/pydata-london-2015/lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks! 5 minutes! GO!&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why would a journalist want to learn Python? —&amp;nbsp;Philip Nye&lt;/li&gt;
&lt;li&gt;Story detection using LDAs —&amp;nbsp;Hendrik Heuer&lt;/li&gt;
&lt;li&gt;A model may be right, but irrelevant — Maria Koroliuk&lt;/li&gt;
&lt;li&gt;Why I love the days I get to optimise things —&amp;nbsp;Gemma Hentsch&lt;/li&gt;
&lt;li&gt;Ethics? &amp;amp; Data Science ... —&amp;nbsp;Roelof Pieters&lt;/li&gt;
&lt;li&gt;Love letter …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks! 5 minutes! GO!&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why would a journalist want to learn Python? —&amp;nbsp;Philip Nye&lt;/li&gt;
&lt;li&gt;Story detection using LDAs —&amp;nbsp;Hendrik Heuer&lt;/li&gt;
&lt;li&gt;A model may be right, but irrelevant — Maria Koroliuk&lt;/li&gt;
&lt;li&gt;Why I love the days I get to optimise things —&amp;nbsp;Gemma Hentsch&lt;/li&gt;
&lt;li&gt;Ethics? &amp;amp; Data Science ... —&amp;nbsp;Roelof Pieters&lt;/li&gt;
&lt;li&gt;Love letter to Russel Winder —&amp;nbsp;Tony Simpson&lt;/li&gt;
&lt;li&gt;Let's go to Mars — Juan Luis Cano&lt;/li&gt;
&lt;li&gt;Testing with Hypothesis —&amp;nbsp;David McGiver&lt;/li&gt;
&lt;li&gt;Introducing (Plotly) Widgets —&amp;nbsp;Carole Griffiths&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;... DONE!&lt;/p&gt;
</content><category term="PyData London 2015"></category><category term="lightning talks"></category></entry><entry><title>Embrace conda packages.</title><link href="https://pyvideo.org/pydata-madrid-2016/embrace-conda-packages.html" rel="alternate"></link><published>2016-04-28T00:00:00+00:00</published><updated>2016-04-28T00:00:00+00:00</updated><author><name>Juan Luís Cano Rodríguez</name></author><id>tag:pyvideo.org,2016-04-28:/pydata-madrid-2016/embrace-conda-packages.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Madrid 2016&lt;/p&gt;
&lt;p&gt;Most of the talks and workshop tutorials can be found here: &lt;a class="reference external" href="https://github.com/PyDataMadrid2016/Conference-Info"&gt;https://github.com/PyDataMadrid2016/Conference-Info&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Installation problems represent half of your mailing list traffic? Nobody in your team knows how to properly configure the Visual Studio compilers? Forcing your users to download a script full …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Madrid 2016&lt;/p&gt;
&lt;p&gt;Most of the talks and workshop tutorials can be found here: &lt;a class="reference external" href="https://github.com/PyDataMadrid2016/Conference-Info"&gt;https://github.com/PyDataMadrid2016/Conference-Info&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Installation problems represent half of your mailing list traffic? Nobody in your team knows how to properly configure the Visual Studio compilers? Forcing your users to download a script full of &amp;quot;sudo&amp;quot; commands? Providing Docker containers and virtual machines as the only sane way to run your software? No more suffering or pain: create conda packages with conda-build and stop worrying today.&lt;/p&gt;
&lt;p&gt;From my perspective, scientific software seems to have the more complex build processes ever imagined. The amount of compiled dependencies is overwhelming, even though many packages share a fair amount of them. Still, the landscape of building systems is simply terrifying, every team rolls its own alternative and in the end the only sane approach is to create an Ubuntu-like virtual machine just to run a particular software. The wonderful dream of reproducibility didn't involve debugging arcane CMake scripts at night, compiling PETSc in a million ways or installing everything in root locations just because search paths are hardcoded everywhere.&lt;/p&gt;
&lt;p&gt;The idea of this talk is to make some fun at the current situation and try to put it to an end once and for all. conda-build looks like the solution we've always desired to build Python packages with compiled extensions, with its declarative nature and its clear separation of build and testing phases. Yet it is much more than that, since it provides a way to build packages which have nothing to do with Python, which I consider is the closest thing we have to a true cross platform package manager. Combined with cloud services like AppVeyor and Travis CI, we can create a build pipeline that creates cross-platform, relocatable conda packages for Windows, OS X and Linux.&lt;/p&gt;
&lt;p&gt;Following my experience with FEniCS, Firedrake and Pyomo, we will also explore how to overcome some conda-build limitations and provide some ideas on how could the developers work them so it becomes the perfect build tool we have always wanted, but never deserved.&lt;/p&gt;
</content><category term="PyData Madrid 2016"></category></entry><entry><title>Lightning Talks - Saturday session.</title><link href="https://pyvideo.org/pydata-madrid-2016/lightning-talks-saturday-session.html" rel="alternate"></link><published>2016-04-28T00:00:00+00:00</published><updated>2016-04-28T00:00:00+00:00</updated><author><name>Gabriel de Maeztu</name></author><id>tag:pyvideo.org,2016-04-28:/pydata-madrid-2016/lightning-talks-saturday-session.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Madrid 2016&lt;/p&gt;
&lt;p&gt;Most of the talks and workshop tutorials can be found here: &lt;a class="reference external" href="https://github.com/PyDataMadrid2016/Conference-Info"&gt;https://github.com/PyDataMadrid2016/Conference-Info&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;www.pydata.org&lt;/p&gt;
&lt;p&gt;PyData is a gathering of users and developers of data analysis tools in Python. The goals are to provide Python enthusiasts a place to share ideas and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Madrid 2016&lt;/p&gt;
&lt;p&gt;Most of the talks and workshop tutorials can be found here: &lt;a class="reference external" href="https://github.com/PyDataMadrid2016/Conference-Info"&gt;https://github.com/PyDataMadrid2016/Conference-Info&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;www.pydata.org&lt;/p&gt;
&lt;p&gt;PyData is a gathering of users and developers of data analysis tools in Python. The goals are to provide Python enthusiasts a place to share ideas and learn from each other about how best to apply our language and tools to ever-evolving challenges in the vast realm of data management, processing, analytics, and visualization.&lt;/p&gt;
&lt;p&gt;We aim to be an accessible, community-driven conference, with tutorials for novices, advanced topical workshops for practitioners, and opportunities for package developers and users to meet in person.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="15%" /&gt;
&lt;col width="10%" /&gt;
&lt;col width="38%" /&gt;
&lt;col width="37%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://youtu.be/IKPQrn-rS-Q?t=120"&gt;02:20&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Gabriel de Maeztu&lt;/td&gt;
&lt;td&gt;Jupyter themes&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="https://github.com/merqurio/jupyter_themes"&gt;https://github.com/merqurio/jupyter_themes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://youtu.be/IKPQrn-rS-Q?t=350"&gt;05:50&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Juan Luis Cano Rodríguez&lt;/td&gt;
&lt;td&gt;A marte con python usando poliastro&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://poliastro.github.io"&gt;http://poliastro.github.io&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://youtu.be/IKPQrn-rS-Q?t=683"&gt;11:23&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Israel Saeta Pérez&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://slides.com/israelsaetaperez/sklearn-pandas/"&gt;Sklearn-Pandas&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="https://pypi.python.org/pypi/sklearn-pandas/"&gt;https://pypi.python.org/pypi/sklearn-pandas/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://youtu.be/IKPQrn-rS-Q?t=999"&gt;16:39&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;PyBikes&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="https://github.com/eskerda/PyBikes"&gt;https://github.com/eskerda/PyBikes&lt;/a&gt; &lt;a class="reference external" href="https://citybik.es/"&gt;https://citybik.es/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://youtu.be/IKPQrn-rS-Q?t=1288"&gt;21:28&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Siro Moreno&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="https://github.com/AunSiro/Algoritmos-Geneticos-R-Python-Meetup"&gt;Introduction to genetic algorithms. AeroPython.&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="https://github.com/AeroPython/Taller-PyConEs-2015/"&gt;https://github.com/AeroPython/Taller-PyConEs-2015/&lt;/a&gt; &lt;a class="reference external" href="https://github.com/AeroPython/aeropy/tree/Xfoil_interaction"&gt;https://github.com/AeroPython/aeropy/tree/Xfoil_interaction&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://youtu.be/IKPQrn-rS-Q?t=1655"&gt;27:35&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Javier Martin&lt;/td&gt;
&lt;td&gt;Simple example about how to generate input data for a map-based dashboard&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="https://github.com/jmartinter/geo-dashboard"&gt;https://github.com/jmartinter/geo-dashboard&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://youtu.be/IKPQrn-rS-Q?t=2048"&gt;34:08&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;Bokeh lightning talk&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content><category term="PyData Madrid 2016"></category><category term="lightning talks"></category></entry><entry><title>Is it a bird? Is it a plane? Accelerating Python with Numba</title><link href="https://pyvideo.org/pylondinium-2019/is-it-a-bird-is-it-a-plane-accelerating-python-with-numba.html" rel="alternate"></link><published>2019-06-15T00:00:00+00:00</published><updated>2019-06-15T00:00:00+00:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:pyvideo.org,2019-06-15:/pylondinium-2019/is-it-a-bird-is-it-a-plane-accelerating-python-with-numba.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We are lucky there are very diverse solutions to make Python faster that have been in use for a while: from wrapping compiled languages (NumPy), to altering the Python syntax to make it more suitable to compilers (Cython), to using a subset of it which can in turn be …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We are lucky there are very diverse solutions to make Python faster that have been in use for a while: from wrapping compiled languages (NumPy), to altering the Python syntax to make it more suitable to compilers (Cython), to using a subset of it which can in turn be accelerated (numba), and many many more. However, each of these options has a tradeoff, and there is no silver bullet.&lt;/p&gt;
&lt;p&gt;Some years ago I chose numba for poliastro, my personal project, because of its simplicity, effectiveness, and not having to learn a hybrid dialect of Python. numba compiles numerical Python code on the fly using the LLVM machinery, producing extremely performant code... when it works!&lt;/p&gt;
&lt;p&gt;On the other hand, even though it is quite mature as a library and most of the Python syntax and NumPy functions are supported, there are still some limitations that affect its usage. In particular, I strive to offer a high-level API with support for physical units (extensions of NumPy) and reusable functions which can be passed as arguments, which sometimes require using complex objects or introspective Python behavior which is not available.&lt;/p&gt;
&lt;p&gt;In this talk we will introduce numba, describe its basic usage, and then discuss the strategies and workarounds we have developed to overcome its limitations, as well as some advanced numba features we can leverage. We will focus mostly on CPUs, and mention very briefly its GPU capabilities.&lt;/p&gt;
</content><category term="PyLondinium 2019"></category></entry><entry><title>Per Python ad astra: Interactive Astrodynamics with poliastro</title><link href="https://pyvideo.org/scipy-2022/per-python-ad-astra-interactive-astrodynamics-with-poliastro.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Juan Luis Cano Rodriguez</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/per-python-ad-astra-interactive-astrodynamics-with-poliastro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk presents poliastro, an open-source Python library for interactive Astrodynamics that features an easy-to-use API and tools for quick visualization. poliastro implements core Astrodynamics algorithms and leverages numba and Astropy.&lt;/p&gt;
&lt;p&gt;During the talk, we will describe the two-layer architecture that allows poliastro to offer an approachable API with …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk presents poliastro, an open-source Python library for interactive Astrodynamics that features an easy-to-use API and tools for quick visualization. poliastro implements core Astrodynamics algorithms and leverages numba and Astropy.&lt;/p&gt;
&lt;p&gt;During the talk, we will describe the two-layer architecture that allows poliastro to offer an approachable API with good performance, discuss the challenges we faced to validate our code, and comment on the successes and failures of the project in trying to build a rich and diverse community.&lt;/p&gt;
&lt;p&gt;Source code of poliastro is available at &lt;a class="reference external" href="https://github.com/poliastro/poliastro/"&gt;https://github.com/poliastro/poliastro/&lt;/a&gt; and documentation is online at &lt;a class="reference external" href="https://docs.poliastro.space/"&gt;https://docs.poliastro.space/&lt;/a&gt;.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry></feed>