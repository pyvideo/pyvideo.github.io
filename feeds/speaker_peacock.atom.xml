<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Peacock</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_peacock.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-04-27T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Getting Started with Statically Typed Programming in Python 3.10</title><link href="https://pyvideo.org/pycon-us-2022/getting-started-with-statically-typed-programming-in-python-310.html" rel="alternate"></link><published>2022-04-27T00:00:00+00:00</published><updated>2022-04-27T00:00:00+00:00</updated><author><name>Peacock</name></author><id>tag:pyvideo.org,2022-04-27:/pycon-us-2022/getting-started-with-statically-typed-programming-in-python-310.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since 2015, it has been possible to write Python like a statically typed language with typing modules and other features introduced in Python 3.5.&lt;/p&gt;
&lt;p&gt;This can significantly improve the development experience and review process.&lt;/p&gt;
&lt;p&gt;I have been using type hints in my work for several years and have â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since 2015, it has been possible to write Python like a statically typed language with typing modules and other features introduced in Python 3.5.&lt;/p&gt;
&lt;p&gt;This can significantly improve the development experience and review process.&lt;/p&gt;
&lt;p&gt;I have been using type hints in my work for several years and have been studying Haskell and TypeScirpt. I believe this session will be a stepping stone for &amp;quot;type hints newbies.&amp;quot;&lt;/p&gt;
&lt;p&gt;What I will talk about in this talk:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Advantages of using Typing&lt;/li&gt;
&lt;li&gt;Getting help from editors&lt;/li&gt;
&lt;li&gt;Facilitating code reviews&lt;/li&gt;
&lt;li&gt;How to get started with Typing&lt;/li&gt;
&lt;li&gt;Argument and return types for functions&lt;/li&gt;
&lt;li&gt;Using the standard Collections types&lt;/li&gt;
&lt;li&gt;The difference between tuple and other types&lt;/li&gt;
&lt;li&gt;Abstract and concrete types&lt;/li&gt;
&lt;li&gt;Generics, user-defined types&lt;/li&gt;
&lt;li&gt;Type Hinting Updates in Python 3.9 and 3.10&lt;/li&gt;
&lt;li&gt;(3.9) Type Hinting Generics In Standard Collections&lt;/li&gt;
&lt;li&gt;(3.10) Allow writing union types as X | Y&lt;/li&gt;
&lt;li&gt;(3.10) Parameter Specification Variables&lt;/li&gt;
&lt;li&gt;(3.10) Explicit Type Aliases&lt;/li&gt;
&lt;li&gt;(3.10) User-Defined Type Guards&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What is not covered in this talk&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Basic Python 3 syntax&lt;/li&gt;
&lt;li&gt;(Not required): Experience developing in statically typed languages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Related contents:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A talk at PyCon JP 2020 (JA): &lt;a class="reference external" href="https://pycon.jp/2020/en/timetable/?id=203955"&gt;https://pycon.jp/2020/en/timetable/?id=203955&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/typing.html"&gt;https://docs.python.org/3/library/typing.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyCon US 2022"></category></entry></feed>