<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_mandy-waite.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-08-04T00:00:00+00:00</updated><entry><title>Keynote: So, I have all these Docker containers, now what?</title><link href="https://pyvideo.org/europython-2015/keynote-so-i-have-all-these-docker-containers-now-what.html" rel="alternate"></link><published>2015-08-04T00:00:00+00:00</published><updated>2015-08-04T00:00:00+00:00</updated><author><name>Mandy Waite</name></author><id>tag:pyvideo.org,2015-08-04:europython-2015/keynote-so-i-have-all-these-docker-containers-now-what.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mandy Waite - Keynote: So, I have all these Docker containers, now what?
[EuroPython 2015]
[24 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;You've solved the issue of process-level reproducibility by packaging up
your apps and execution environments into a number of Docker containers.
But once you have a lot of containers running, you'll probably need to
coordinate them across a cluster of machines while keeping them healthy and
making sure they can find each other. Trying to do this imperatively can
quickly turn into an unmanageable mess! Wouldn't it be helpful if you could
declare to your cluster what you want it to do, and then have the cluster
assign the resources to get it done and to recover from failures and scale
on demand?&lt;/p&gt;
&lt;p&gt;Kubernetes (&lt;a class="reference external" href="http://kubernetes.io"&gt;http://kubernetes.io&lt;/a&gt;) is an open source, cross platform cluster
management and container orchestration platform that simplifies the complex
tasks of deploying and managing your applications in Docker containers. You
declare a desired state, and Kubernetes does all the work needed to create
and maintain it. In this talk, weâ€™ll look at the basics of Kubernetes and
at how to map common applications to these concepts. This will include a
hands-on demonstration and visualization of the steps involved in getting
an application up and running on Kubernetes.&lt;/p&gt;
</summary></entry></feed>