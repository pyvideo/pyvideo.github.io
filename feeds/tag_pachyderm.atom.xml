<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_pachyderm.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-05-25T00:00:00+00:00</updated><entry><title>Scalable, Distributed, and Reproducible Machine Learning</title><link href="https://pyvideo.org/pydata-meetups/scalable-distributed-and-reproducible-machine-learning.html" rel="alternate"></link><published>2017-05-25T00:00:00+00:00</published><updated>2017-05-25T00:00:00+00:00</updated><author><name>Daniel Whitenack</name></author><id>tag:pyvideo.org,2017-05-25:pydata-meetups/scalable-distributed-and-reproducible-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The recent advances in machine learning and artificial intelligence are amazing!  Yet, in order to have real value within a company, data scientists must be able to get their models off of their laptops and deployed within a companyâ€™s data pipelines and infrastructure.  Those models must also scale to production size data. In this talk, we will implement a model locally in Python. We will then take that model and deploy both it's training and inference in a scalable manner to a production cluster with Pachyderm, an open source framework for distributed pipelining and data versioning. We will also learn how to update the production model online, track changes in our model and data, and explore our results.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Daniel Whitenack (&amp;#64;dwhitena) is a Ph.D. trained data scientist working with Pachyderm (&amp;#64;pachydermIO). Daniel develops innovative, distributed data pipelines which include predictive models, data visualizations, statistical analyses, and more. He has spoken at conferences around the world (ODSC, Spark Summit, Datapalooza, DevFest Siberia, GopherCon, and more), teaches data science/engineering with Ardan Labs (&amp;#64;ardanlabs), maintains the Go kernel for Jupyter, and is actively helping to organize contributions to various open source data science projects.&lt;/p&gt;
</summary><category term="machine learning"></category><category term="pachyderm"></category></entry></feed>