<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - David Andersson</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 27 Jul 2024 00:00:00 +0000</lastBuildDate><item><title>Giving and receiving great feedback through PRs</title><link>https://pyvideo.org/pycon-fr-2023/giving-and-receiving-great-feedback-through-prs.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you struggle with PRs? Have you ever had to change code even though you disagreed with the change just to land the PR? Have you ever given feedback that would have improved the code only to get into a comment war? We'll discuss how to give and receive feedback to extract maximum value from it and avoid all the communication problems that come with PRs. We'll start with some thoughts about what PRs are intended to achieve and then first discuss how to give feedback that will be well received and result in improvements to the code followed by how to extract maximum value from feedback you receive without agreeing to suboptimal changes. Finally, we will look at a checklist for giving and receiving feedback you can use as you go through reviews both as an author and reviewer.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Andersson</dc:creator><pubDate>Sat, 18 Feb 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-02-18:/pycon-fr-2023/giving-and-receiving-great-feedback-through-prs.html</guid><category>PyCon FR 2023</category></item><item><title>Writing Great Test Documentation</title><link>https://pyvideo.org/pycon-fr-2023/writing-great-test-documentation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever needed to understand a new project and started reading the tests only to find that you have no idea what the tests are doing? In this talk we will discuss how to write great test documentation to make this a thing of the past! Writing great test documentation as you are writing tests will improve your tests and help you and others reading the tests later. We will first look at why test documentation is important both when writing tests and for future readers, then look at a framework that helps give some structure to your test documentation. Next, we will look at a showcase of the flake8-test-docs tool that automates test documentation checks to ensure your documentation is great! Finally we briefly discuss how this framework would apply in more advanced cases, such as when you are using fixtures or parametrising tests.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Andersson</dc:creator><pubDate>Sat, 18 Feb 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-02-18:/pycon-fr-2023/writing-great-test-documentation.html</guid><category>PyCon FR 2023</category></item><item><title>Simplifying Python Web App Operations: Automating K8s Ops with Open Source</title><link>https://pyvideo.org/pyohio-2024/simplifying-python-web-app-operations-automating-k8s-ops-with-open-source.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;After creating a great web app using Python such as with flask, the next
hurdle to production is how to make it available to users and operate
it. And not just your app, but also ingress, the database, observability
and the list goes on. We will go through your options for simplifying
the operations of your web app using open source tooling. This will
include using k8s directly, helm charts, IaaC using pulumi and new
tooling developed by Canonical using juju. By the end of the talk you
will have seen the benefits and drawbacks of each which will help you
make an informed decision on which tool best suits your needs!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Andersson</dc:creator><pubDate>Sat, 27 Jul 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-07-27:/pyohio-2024/simplifying-python-web-app-operations-automating-k8s-ops-with-open-source.html</guid><category>PyOhio 2024</category></item></channel></rss>