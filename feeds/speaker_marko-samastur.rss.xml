<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 01 Aug 2016 00:00:00 +0000</lastBuildDate><item><title>Publish your code so others can use it in 5 easy steps</title><link>https://pyvideo.org/europython-2016/publish-your-code-so-others-can-use-it-in-5-easy-steps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Marko Samastur - Publish your code so others can use it in 5 easy steps
[EuroPython 2016]
[20 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/publish-your-code-so-others-can-use-it-in-5-easy-steps"&gt;https://ep2016.europython.eu//conference/talks/publish-your-code-so-others-can-use-it-in-5-easy-steps&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;As developers we all love well-documented, well-tested packages. If we
do the same for our code it is easier for others to re-use our hard
work, and maybe even contribute. We will take a quick look on how to
do this using popular tools and only a small investment of time. With
Github and some simple tools, setting up a well-groomed package
doesn't have to be difficult.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Every Python open-source developer wants their software to be used. As
developers, we trust software that is tested and well-documented.&lt;/p&gt;
&lt;p&gt;In this talk we'll go through 5 steps for how to do this for your own packages.&lt;/p&gt;
&lt;p&gt;We will take a quick look on how to do this using popular tools and
small investment of time:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Write a setup.py script for a pure Python package&lt;/li&gt;
&lt;li&gt;Set up py.test, tox and coverage to test our package with multiple versions of Python&lt;/li&gt;
&lt;li&gt;Configure Github to use Travis CI &amp;amp; coveralls.io to automatically test our package every time we commit&lt;/li&gt;
&lt;li&gt;Register and publish our package to PyPI&lt;/li&gt;
&lt;li&gt;Setup our documentation on ReadTheDocs&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marko Samastur</dc:creator><pubDate>Mon, 01 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-01:europython-2016/publish-your-code-so-others-can-use-it-in-5-easy-steps.html</guid></item><item><title>Publish your code so others can use it in 5 easy steps</title><link>https://pyvideo.org/pycon-us-2016/marko-samastur-publish-your-code-so-others-can-use-it-in-5-easy-steps-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Marko Samastur&lt;/p&gt;
&lt;p&gt;As developers we all love well-documented, well-tested packages. If we do the same for our code it is easier for others to re-use our hard work, and maybe even contribute. We will take a quick look on how to do this using popular tools and only a small investment of time. With Github and some simple tools, setting up a well-groomed package doesn't have to be difficult.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marko Samastur</dc:creator><pubDate>Fri, 17 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-17:pycon-us-2016/marko-samastur-publish-your-code-so-others-can-use-it-in-5-easy-steps-pycon-2016.html</guid></item></channel></rss>