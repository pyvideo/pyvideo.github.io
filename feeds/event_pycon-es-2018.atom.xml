<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-es-2018.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-07T00:00:00+00:00</updated><entry><title>A la caza de exoplanetas por imagen directa con Python</title><link href="https://pyvideo.org/pycon-es-2018/a-la-caza-de-exoplanetas-por-imagen-directa-con-python.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Carlos Alberto Gomez Gonzalez</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/a-la-caza-de-exoplanetas-por-imagen-directa-con-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;De la ciencia de datos, la exoplanetología y otros demonios&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;La existencia de planetas alrededor de otras estrellas aparte del Sol ha sido un tema de fascinación para la humanidad desde hace muchos siglos. Hasta hoy, se han detectado casi cuatro mil exoplanetas, de los cuales hemos observados directamente menos de un 1%. Esto se debe a que tomarle una &amp;quot;foto&amp;quot; a un exoplaneta es una tarea extremadamente difícil. El estudio de exoplanetas por imagen directa se ha logrado de unos 15 años para acá gracias a avances en instrumentación (óptica adaptativa y componentes de coronografía), técnicas observacionales, y al desarrollo de algoritmos de análisis de imágenes especializados. Este ultimo componente es el que finalmente define el desempeño y los limites de detección de los instrumentos diseñados para observar exoplanetas.&lt;/p&gt;
&lt;p&gt;En esta charla, después de una breve introducción a las técnicas de procesamiento de imágenes para la imagen directa de exoplanetas, presentaré mi trabajo integrando las mejores practicas de la ciencia de datos al estudio de dichos cuerpos celestes. Estos esfuerzos incluyen el desarrollo de software científico libre en Python, por ejemplo la librería VIP - &lt;a class="reference external" href="https://github.com/vortex-exoplanet/VIP"&gt;Vortex Image Processing&lt;/a&gt;. Otro aspecto de mi trabajo como científico de datos, es el replanteamiento de problemas astronómicos, como la detección de exoplanetas en imágenes plagadas de ruido, utilizando &lt;cite&gt;técnicas de aprendizaje automático supervisado y redes neuronales&lt;/cite&gt;. Finalmente, describiré mi experiencia organizando un &lt;a class="reference external" href="https://carlgogo.github.io/exoimaging_challenge/"&gt;&amp;quot;data challenge&amp;quot;&lt;/a&gt; para unir la comunidad de especialistas en la comparación de diferentes algoritmos de procesamiento de imágenes aplicadas a la exoplanetología.&lt;/p&gt;
</summary></entry><entry><title>Deep Learning will Beat you in a Kung Fu Battle Ale Solano</title><link href="https://pyvideo.org/pycon-es-2018/deep-learning-will-beat-you-in-a-kung-fu-battle-ale-solano.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Ale Solano</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/deep-learning-will-beat-you-in-a-kung-fu-battle-ale-solano.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Robots are coming. Whether they come as humanoids, home assistants or self-driving cars, they are coming. They are coming out from the orderly, synthetic and isolated manufacturing plants to the chaotic, evolutionary and interactive real world. And it's this interaction what will separate machines between lifeless appliance and sociable robots. Understanding both verbal and non-verbal communication is the last layer of robotic development, though it may be one of the most challenging.&lt;/p&gt;
&lt;p&gt;Human Pose Estimation is the problem of localizing human body parts -such as hands, eyes or feet- from just a single RGB camera, like the one you use in your smartphone. Solving this problem would mean a robot could understand your movements, predict your next action and, eventually, beat you in a Kung-Fu battle. Deep learning is our best ally here. Its ability to process images, grasp its content and improve with experience has helped remarkably to make Human Pose Estimation a reality.&lt;/p&gt;
&lt;p&gt;Throughout this talk we'll explore the problem of Human Pose Estimation, how deep learning has revolutionized the field and how it will impact our everyday life. Live demos assured!&lt;/p&gt;
</summary></entry><entry><title>Descubriendo los misterios del universo con Python</title><link href="https://pyvideo.org/pycon-es-2018/descubriendo-los-misterios-del-universo-con-python.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Maria Camila</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/descubriendo-los-misterios-del-universo-con-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla, quiero contarle a la comunidad pythonista de todo el avance cientifico que se ha logrado en la astrofísica computacional gracias a Python. En particular, quisiera mostrar la aplicación de librerías y frameworks de python especializados en astronomía, a trabajos de la vida real. Quiero mostrar ejemplos de investigaciones, y mostrar de que forma se aplica la computación (en especial Python) para solucionarlas. Mi intención es también motivar a la audiencia a utilizar Python en ciencia, ya que es una herramienta muy poderosa y con mucho potencial para explotar. Al igual, quiero abrir una invitación para fortalecer y colaborar con las librerias cientificas que se encuentran a disposición.&lt;/p&gt;
&lt;p&gt;Espero que la audiencia esté motivada para aventurarse en el mundo de la astrofísica y que Python abra esta puerta de misterio y pasión por el cosmos.&lt;/p&gt;
</summary></entry><entry><title>Estrategias de comprensión con y para Python</title><link href="https://pyvideo.org/pycon-es-2018/estrategias-de-comprension-con-y-para-python.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Martina Kienberger</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/estrategias-de-comprension-con-y-para-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hablaré de mis experiencias lazándome a aprender Python en 2017 y cómo he usado este lenguaje de programación desde entonces. Como ejemplo práctico, presentaré mi último proyecto de investigación sobre el uso de estrategias para comprender palabras desconocidas en alemán. Explicaré qué herramientas de Python me resultaron útiles y cómo las apliqué para la limpieza, el tratamiento y la visualización de datos. Desde la perspectiva de principiante puedo dar algunos consejos prácticos a otros que quieren iniciarse en el mundo de la programación.&lt;/p&gt;
</summary></entry><entry><title>Everything is a (Python) module</title><link href="https://pyvideo.org/pycon-es-2018/everything-is-a-python-module.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Salvador de la Puente</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/everything-is-a-python-module.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Imagine importing a JSON file into Python as a module. Yes, I'm talking about having a config.json file and importing it with import config. Or even more, how about accessing JPG metadata with &lt;tt class="docutils literal"&gt;import gps_coordinates from album.IMG00001?&lt;/tt&gt; The highly dynamic nature of Python, in addition to the right combination of magic methods and a pinch of monkey-patching, allow us to customise the import machinery up to the point of enabling these and other interesting use cases.&lt;/p&gt;
</summary></entry><entry><title>From chaos to insights: the challenges of extracting meaningful information from unstructured data with Python and spaCy</title><link href="https://pyvideo.org/pycon-es-2018/from-chaos-to-insights-the-challenges-of-extracting-meaningful-information-from-unstructured-data-with-python-and-spacy.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Jérôme Basdevant</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/from-chaos-to-insights-the-challenges-of-extracting-meaningful-information-from-unstructured-data-with-python-and-spacy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Helping companies to be better citizens of the world means providing them with information about a myriad of issues such as Human Rights, Diversity, Climate Change, Carbon Emissions, etc., and helping them prioritise the different signals. For us Python developers and data scientists, this means working with thousands of sources of different types (PDF, HTML, text, Tweets, etc.) and building a scalable and flexible data pipeline that can ingest, analyse, normalise and summarise all these signals.&lt;/p&gt;
&lt;p&gt;We decided to use Python to hook up all the components of our stack. At the core of our data application lies spaCy, which is the natural language processing engine enabling the extraction of meaningful information from large amounts of textual data.&lt;/p&gt;
&lt;p&gt;We will present our workflow at a conceptual level (collecting data, textual analysis, creating insights). We will then describe the different components of our stack and why we chose them (Mongo, ElasticSearch, spaCy, AWS). Finally, we will share the lessons we have learned along the way on this challenging journey. Examples and code illustrating the main points will also be discussed during the talk.&lt;/p&gt;
</summary></entry><entry><title>GIL:Todo lo que quisite saber y no te atreviste a preguntar</title><link href="https://pyvideo.org/pycon-es-2018/giltodo-lo-que-quisite-saber-y-no-te-atreviste-a-preguntar.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Jesús Cea Avión</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/giltodo-lo-que-quisite-saber-y-no-te-atreviste-a-preguntar.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Se analiza el funcionamiento del GIL (Global Interpreter Lock), su utilidad, bajo qué condiciones se pasa la ejecución a otro hilo, el coste que supone operar con él, tanto cuando hay un cambio de contexto como cuando no, y las valoraciones que debe hacer el desarrollador de una extensión C a la hora de decidir si una operación debe retener el GIL o no. También se verá el caso en que tu intérprete Python esté embebido en una aplicación más grande. Se analizarán varios casos, se bajará a ensamblador (o casi) y más vale que tengas ciertos conocimientos de sistemas operativos.&lt;/p&gt;
&lt;p&gt;Se estudiará también cómo ha ido evolucionando el GIL en las diferentes versiones Python hasta llegar a donde estamos ahora.&lt;/p&gt;
</summary><category term="gil"></category></entry><entry><title>Hora de sacar la basura: garbage collector</title><link href="https://pyvideo.org/pycon-es-2018/hora-de-sacar-la-basura-garbage-collector.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Pablo Galindo</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/hora-de-sacar-la-basura-garbage-collector.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Uno de los motivos por los que programar en Python es cómodo y sencillo es que no tenemos que preocuparnos por el tiempo de vida de nuestros objetos. Es decir, una vez que deja de ser necesaria, una variable desaparece de la memoria “magicamente”. Esto puede —erróneamente— llevarnos a creer que no es necesario preocuparnos por lo que ocurre entre bastidores.&lt;/p&gt;
&lt;p&gt;Nada más alejado de la realidad: conocer cómo Python gestiona la memoria es fundamental en ciertos escenarios, y desconocer qué está ocurriendo puede tener consecuencias tan importantes como desagradables. Por ejemplo, si nuestros programas gestionan una gran cantidad de datos al mismo tiempo o lanzan múltiples processos en paralelo esto deja de ser una cuestión teórica y convierte en algo que a nosotros, mentes pragmáticas, también nos importa.&lt;/p&gt;
&lt;p&gt;Python utiliza para manejar la memoria una estrategia combinada consistente en dos intimidantes términos: (1) conteo de referencias y (2) colector de basura generacional. Entender cómo ambos sistemas trabajan juntos y cuáles son las limitaciones de cada uno nos ayudará a entender aspectos específicos de nuestra programación del día a día. Ejemplos: (a) qué ocurre con la memoria exactamente cuando hay multiples hilos o procesos, (b) qué pasa si nuestras estructuras de datos se contienen a si mismas, un escenario posible al trabajar con grafos, o (c) qué hace Python con los valores temporales que se producen, sin ir más lejos, al sumar dos números o dos arrays de NumPy.&lt;/p&gt;
&lt;p&gt;Aunque estos conceptos suelen considerarse avanzados y difíciles de entender, veremos que no es así. Éste no es un asunto meramente teórico ni es difícil encontrar sus aplicaciones prácticas. En esta charla explicaremos por qué es algo que debe importarnos y hablaremos de cómo aplicar los conocimientos que hemos adquirido a problemas específicos.&lt;/p&gt;
&lt;p&gt;Resumen esquemático de la charla:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Repaso express: qué son las variables en Python&lt;ol class="arabic"&gt;
&lt;li&gt;Variables como etiquetas&lt;/li&gt;
&lt;li&gt;Variables vs objetos&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Qué es la recoleción de basura.&lt;/li&gt;
&lt;li&gt;Conteo por referencias&lt;ol class="arabic"&gt;
&lt;li&gt;Qué problema resuelve.&lt;/li&gt;
&lt;li&gt;Problemas del conteo por referencia.&lt;ol class="arabic"&gt;
&lt;li&gt;Hilos&lt;/li&gt;
&lt;li&gt;Ciclos&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Recolector de basura para ciclos&lt;ol class="arabic"&gt;
&lt;li&gt;Las tres generaciones.&lt;/li&gt;
&lt;li&gt;El algoritmo&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Aplicaciones prácticas y conocimiento útil.&lt;ol class="arabic"&gt;
&lt;li&gt;Que ocurre al implementar &lt;tt class="docutils literal"&gt;__del__()&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Copy-on-write.&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;__slots__&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Hilos versus procesos.&lt;/li&gt;
&lt;li&gt;Extras&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary></entry><entry><title>Keynote. Now Is Better Than Never: What the Zen of Python can teach us about Data Ethics</title><link href="https://pyvideo.org/pycon-es-2018/keynote-now-is-better-than-never-what-the-zen-of-python-can-teach-us-about-data-ethics.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Lorena Mesa</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/keynote-now-is-better-than-never-what-the-zen-of-python-can-teach-us-about-data-ethics.html</id><summary type="html"></summary><category term="keynote"></category></entry><entry><title>List me your virtues</title><link href="https://pyvideo.org/pycon-es-2018/list-me-your-virtues.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Maite Giménez</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/list-me-your-virtues.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data structures are the building blocks of mostly each piece of code that we can write.&lt;/p&gt;
&lt;p&gt;Luckily, CPython developers have come up with ingenious solutions to make the lists efficient in the standard library and release us from the tedious work of allocating and releasing memory on the bare metal. But, aren't you curious about how they work in a dynamic language like Python?&lt;/p&gt;
&lt;p&gt;In this talk, we are going to dig deep and learn about how lists work in Python. We will learn about topics such as, the complexity that involves appending new data efficiently, how lists can store different data types, what algorithm is used to sort lists.&lt;/p&gt;
&lt;p&gt;As a bonus track, we will briefly talk about how third-party packages like NumPy can be an excellent replacement, in some cases, of our beloved lists.&lt;/p&gt;
</summary></entry><entry><title>Machine Learning en Cardiología</title><link href="https://pyvideo.org/pycon-es-2018/machine-learning-en-cardiologia.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Victor Vicente Palacios</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/machine-learning-en-cardiologia.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hace un año empecé a trabajar en un entorno totalmente nuevo para mí, en el servicio de cardiología de un hospital público español. Es un reto especial cuando tu experiencia poco o nada tiene que ver con el entorno sanitario, yo soy Científico de Datos.&lt;/p&gt;
&lt;p&gt;En esta charla quiero contar cómo he introducido técnicas de Machine Learning en el entorno hospitalario rompiendo los esquemas clásicos de investigación clínica.&lt;/p&gt;
&lt;p&gt;Además, expondré algunas aplicaciones y cómo estoy usando Python para ello.&lt;/p&gt;
&lt;p&gt;Aplicaciones:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Predicción de Estenosis Aórtica Grave.&lt;/li&gt;
&lt;li&gt;Predicción de recaída tras cardioversión.&lt;/li&gt;
&lt;li&gt;Deep Learning para la detección de cardiotoxicidad.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Mocks, fakes, dummies, stubs and spies: Successfully isolating the snake</title><link href="https://pyvideo.org/pycon-es-2018/mocks-fakes-dummies-stubs-and-spies-successfully-isolating-the-snake.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Mario Corchero</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/mocks-fakes-dummies-stubs-and-spies-successfully-isolating-the-snake.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session, which will review test isolation concepts and the unittest.mock module, is structured in a way that both beginners and intermediate developers will learn from it. A basic knowledge of testing is recommended. Intermediate developers will leave the room with a clear understanding of the tools - further than just using simple mocks - to successfully fake dependencies. Multiple “not so well known” features of unittest.mock will be presented so we can shape those objects to behave functionally different.&lt;/p&gt;
&lt;p&gt;Unittest.mock is an extremely useful library which is commonly underused, this talk aims to bring clarity into stubbing in general and into medium/advanced mock features to ease and remove pain when users work with it.&lt;/p&gt;
</summary></entry><entry><title>Motor de optimización de rutas para el mundo real: Python y otras bestias</title><link href="https://pyvideo.org/pycon-es-2018/motor-de-optimizacion-de-rutas-para-el-mundo-real-python-y-otras-bestias.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Josema Camacho</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/motor-de-optimizacion-de-rutas-para-el-mundo-real-python-y-otras-bestias.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Construir un motor de optimización para la planificación de rutas de vehículos de recogida de residuos, de reparto de mercancías, u otras muchas aplicaciones, no es tarea fácil por dos importantes motivos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;La enorme cantidad de restricciones involucradas en el problema: restricciones a la hora de circular con los vehículos, puntos de parada que hay que visitar a cierta hora, conductores con horarios, camiones que se llenan y vacían, entregas y recogidas…&lt;/li&gt;
&lt;li&gt;Es un problema de optimización combinatoria bestial (NP-duro). Por ejemplo, para un sólo vehículo que tendría que visitar 100 localizaciones, existen &lt;tt class="docutils literal"&gt;100!&lt;/tt&gt; rutas posibles… &lt;tt class="docutils literal"&gt;100! = 9.33 * 10^157&lt;/tt&gt;. El número estimado de átomos en el universo visible es sólo &lt;tt class="docutils literal"&gt;10^80&lt;/tt&gt;, ¡casi nada!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cayetano y Josema forman parte del equipo de Geographica que ha desarrollado una solución para resolver este tipo de problemas. Nos contarán como han montado este motor de optimización de rutas usando datos de OpenStreetMaps, PostgreSQL (con sus extensiones PostGIS y PgRouting) para ingestionarlos y procesarlos, las metaheuristicas de OR-Tools para darles sentido y Apache Airflow con Kuberntes para orquestar a estas bestias. Todo esto apoyado muy sólidamente con el SciPy ecosystem, lo mejor de Python para computación científica: Pandas, NumPy, Scikit-learn…&lt;/p&gt;
</summary></entry><entry><title>Python ayudando a salvar a las ballenas: cómo el lenguaje puede ser útil en el área del diseño de biopolímeros</title><link href="https://pyvideo.org/pycon-es-2018/python-ayudando-a-salvar-a-las-ballenas-como-el-lenguaje-puede-ser-util-en-el-area-del-diseno-de-biopolimeros.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Daniel Domene López</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/python-ayudando-a-salvar-a-las-ballenas-como-el-lenguaje-puede-ser-util-en-el-area-del-diseno-de-biopolimeros.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La contaminación medioambiental debida a los vertidos de plásticos es un tema cada vez de mayor actualidad. Muy conocidos son ya los casos en los que el plástico vertido en los mares es el principal causante de daños en animales y vegetación, como el caso de la gran isla de plástico del pacífico, o la muerte de ballenas por la ingesta de bolsas de plástico y otros materiales. Ciertamente, los plásticos están muy asimilados en nuestro modo de vida, por lo que acciones orientadas a su eliminación no pueden tener una gran aceptación en el corto plazo. Por este motivo, desde hace unos años, investigadores de todo el mundo están trabajando para diseñar materiales que puedan sustituir a los plásticos convencionales y que, además, sean biodegradables. En nuestro Grupo de Investigación trabajamos para la elaboración de biopolímeros basados en almidón de patata con los que poder sustituir los embalajes convencionales empleados en productos alimenticios, y que son completamente biodegradables. Para la caracterización de los materiales que sintetizamos es preciso analizar multitud de variables calculadas a partir de una gran cantidad de datos para lo que Python se convierte en una poderosa herramienta.&lt;/p&gt;
&lt;p&gt;La charla quedará dividida en dos partes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Parte I: introducción a la ciencia de materiales y presentación de la línea de investigación del Grupo. (5 min)&lt;/li&gt;
&lt;li&gt;Parte II: exposición de las herramientas de Python empleadas para el análisis de datos de ensayos a tracción de materiales y aplicación de técnicas de optimización a los criterios de selección de materiales. Los ensayos a tracción nos proporcionan información sobre la elasticidad del material y su resistencia mecánica a partir de una curva de esfuerzo vs deformación que puede ser analizada utilizando Python. También con Python se pueden realizar cálculos de optimización matemática que permitan realizar una selección de los mejores materiales atendiendo a estos criterios de elasticidad y resistencia. (20min)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El objetivo de la charla es mostrar cómo Python es una potente herramienta en el campo de la ciencia y la ingeniería, utilizando para ello un caso de estudio, lo que le aporta un verdadero valor añadido, pues muestra el empleo de Python en un entorno real.&lt;/p&gt;
&lt;p&gt;La charla está dirigida a todos los niveles, pues se han intentado implementar los programas de la manera más sencilla posible. Además, la charla se dirige a todos los públicos, pues se introducirán funciones de Numpy, Scipy, Matplotlib, etc. que pueden resultar de interés en áreas distintas a las de esta presentación.&lt;/p&gt;
</summary></entry><entry><title>Python &amp; gRPC, el conquistador de microservicios</title><link href="https://pyvideo.org/pycon-es-2018/python-grpc-el-conquistador-de-microservicios.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Esteban Dorado Roldan</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/python-grpc-el-conquistador-de-microservicios.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Empezar de cero con microservicios puede ser un reto. ¿que escribimos primero? ¿Qué lenguaje de programación utilizamos? ¿Cuál protocolo utilizamos? Las nuevas tecnologías open source para el stack de APIs son HTTP/2, Protocol buffers y gRPC.&lt;/p&gt;
&lt;p&gt;En esta charla aprenderás a conquistar los microservicios utilizando gRPC y Python sobre HTTP/2 haciendo uso de protocol buffers y a la vez asegurando que lo que desarrollas es mantenible, escalable y fácil de implantar en distintas arquitecturas y plataformas. Además, serviremos simultáneamente nuestras API en formato JSON/REST sobre HTTP/1.1.&lt;/p&gt;
</summary></entry><entry><title>Recomendación de canciones usando Fourier, ¿mejor que Spotify?</title><link href="https://pyvideo.org/pycon-es-2018/recomendacion-de-canciones-usando-fourier-mejor-que-spotify.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Carlos Perales</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/recomendacion-de-canciones-usando-fourier-mejor-que-spotify.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quienes tengan una cuenta en &lt;strong&gt;Spotify&lt;/strong&gt; que usen a menudo sabrán que
cada semana te recomiendan nuevas canciones, bajo la lista
&lt;em&gt;Descubrimiento Semanal&lt;/em&gt;. Como &lt;strong&gt;Spotify&lt;/strong&gt; categoriza las canciones en
función de &lt;a class="reference external" href="https://www.theverge.com/tldr/2018/2/5/16974194/spotify-recommendation-algorithm-playlist-hack-nelson"&gt;parámetros&lt;/a&gt; como la &lt;em&gt;energía&lt;/em&gt;, &lt;em&gt;instrumentalidad&lt;/em&gt;, etc,
existe por detrás un proceso de clasificación en base a estos
parámetros.&lt;/p&gt;
&lt;p&gt;Pero, sin acceso a estos parámetros, ¿cómo podríamos encontrar canciones
similares, y agruparlas? Como &lt;a class="reference external" href="https://www.intmath.com/trigonometric-graphs/music.php"&gt;las notas musicales tienen frecuencias
asociadas&lt;/a&gt;, esta propuesta se fundamenta en pasar de series temporales
a series frecuenciales, y agrupar estas series de frecuencias usando
varias técnicas y métricas de distancia.&lt;/p&gt;
</summary></entry><entry><title>Scaling beyond scikit-learn's Pipeline: handling mixed data types easily!</title><link href="https://pyvideo.org/pycon-es-2018/scaling-beyond-scikit-learns-pipeline-handling-mixed-data-types-easily.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Pedro Morales</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/scaling-beyond-scikit-learns-pipeline-handling-mixed-data-types-easily.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La mayoría de problemas reales que abordamos con Aprendizaje Automático requieren ingerir datos de diversa naturaleza y fuentes de procedencia: los atributos de nuestras muestras pueden tener carácter numérico, categórico, o textual.&lt;/p&gt;
&lt;p&gt;Los modelos de Aprendizaje Automático necesitan que la información entrante esté expresada en un formato adecuado, en la mayoría de ocasiones como vector o tensor numérico. Es imperativo pues definir una cadena de operaciones para transformar nuestros datos originales al formato tolerado por el modelo en cuestión, a la vez que intentamos extraer nuevas variables que faciliten el aprendizaje del modelo y mejoren su poder predictivo.&lt;/p&gt;
&lt;p&gt;Dado que las operaciones a realizar dependerán de la tipología de partida de los atributos, estas cadenas de operaciones o pipelines pueden llegar a ser complejas y difíciles de encapsular, pudiendo dificultar el posterior mantenimiento y provocar potenciales errores metodológicos en la etapa de validación del modelo o de puesta en producción.&lt;/p&gt;
&lt;p&gt;Scikit-learn ha incluido una nueva funcionalidad en su recientemente lanzada versión 0.20, que complementa a su poderoso “Pipeline” para construir arquitecturas multimodales como la esbozada: “ColumnTransformer”.&lt;/p&gt;
&lt;p&gt;En esta charla presentaremos a través de ejemplos prácticos la problemática que puede plantear el procesamiento de datos mixtos y cómo scikit-learn nos proporciona una potente solución 'off-the-shelf'.&lt;/p&gt;
</summary></entry><entry><title>Testing python security</title><link href="https://pyvideo.org/pycon-es-2018/testing-python-security.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Jose Manuel Ortega</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/testing-python-security.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I will highlight the biggest problems we can find in python functions, how to use then in a secure way and tools and services that help you identify vulnerabilities in the python source code.&lt;/p&gt;
&lt;p&gt;These could be the main talking points:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to secure programming in python.&lt;/li&gt;
&lt;li&gt;Introduce dangerous functions for code injection and how we can solve this issues from a security point of view.&lt;/li&gt;
&lt;li&gt;Common attack vectors on Python applications like Remote Command Execution and SQL injection.&lt;/li&gt;
&lt;li&gt;Best practices for avoid execution of malicious commands.&lt;/li&gt;
&lt;li&gt;Tools that help us to protect and obfuscate our source code.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>The bad guys in AI: atacando sistemas de machine learning</title><link href="https://pyvideo.org/pycon-es-2018/the-bad-guys-in-ai-atacando-sistemas-de-machine-learning.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Alicia Pérez</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/the-bad-guys-in-ai-atacando-sistemas-de-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Las redes generativas antagónicas (conocidas como GANs por sus siglas en inglés) son una de las tecnologías más revolucionarias de los últimos años, no obstante han sido incluidas por Forbes en la lista de las mejores innovaciones de los últimos tres años e identificadas por MIT Tech Review como una de las tecnologías más prometedoras en 2018.&lt;/p&gt;
&lt;p&gt;Técnicamente pueden definirse como un tipo específico de red neuronal, concebida especialmente para imitar la redes neuronales clásicas, aquellas que a día de hoy se conocen también como deep learning. Son capaces de aprender qué está modelando una red neuronal y generar datos válidos en su dominio desde cero. Esto significa que si una red neuronal categoriza imágenes de caras, una red generativa antagónica asociada aprenderá a generar nuevas imágenes de caras, ¡de gente que no existe!&lt;/p&gt;
&lt;p&gt;Una de las consecuencias de tener dicha capacidad de imitación es que se pueden configurar para engañar a las redes neuronales clásicas, generando datos que no es posible detectar como falsos. Este caso de uso tiene su lado oscuro, ya que el poder generar datos sintéticos indistinguibles de los datos reales puede usarse para atacar redes neuronales que estén integradas en sistemas críticos y de seguridad. La técnica para explotar esta vulnerabilidad se ha bautizado como ataque antagónico o adversarial attack.&lt;/p&gt;
&lt;p&gt;En esta charla veremos primero una pequeña introducción sobre redes neuronales y explicaremos qué son las redes generativas antagónicas. Después veremos cómo las redes generativas aprenden a imitar otras redes, hasta el punto de lograr engañarlas, y por qué esto supone una vulnerabilidad en nuestros algoritmos de machine learning. Para ilustrar un ataque antagónico usaremos un ejemplo en Python para engañar a un sistema de reconocimiento de imágenes. Por último discutiremos por qué este problema es importante y las enormes consecuencias que puede llegar a tener en nuestros sistemas de machine learning.&lt;/p&gt;
</summary></entry><entry><title>The Python Space adventure</title><link href="https://pyvideo.org/pycon-es-2018/the-python-space-adventure.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Gloria Passarello</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/the-python-space-adventure.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you you remember the last time you took a sunburn? Have you ever wonder why this happen? It’s UV’s fault: Ultraviolet Rays. But what are they exactly? How can we obtain this information?&lt;/p&gt;
&lt;p&gt;With this talk we will explore a new type of data obtained with Sentinel 5P Satellite, &lt;a class="reference external" href="https://sentinels.copernicus.eu/web/sentinel/missions/sentinel-5p"&gt;https://sentinels.copernicus.eu/web/sentinel/missions/sentinel-5p&lt;/a&gt; . We will talk about the most ambitious earth observation programme in the world: Copernicus. We will see how Python can easily handle the entire workflow: from downloading to processing and finally visualization.&lt;/p&gt;
&lt;p&gt;We will explore a spatial dataset about ultraviolet radiation and the main pollutants on the air we breathe: NO, NO2, O3, PM 10, PM2.5…&lt;/p&gt;
&lt;p&gt;With a live demo in pure Python we will see how to visualize the spatial data using Jupyter and numpy, matplotlib and pygrib modules.&lt;/p&gt;
&lt;p&gt;An example of the code could be found here: &lt;a class="reference external" href="https://github.com/Randbee/Copernicus_UV_data"&gt;https://github.com/Randbee/Copernicus_UV_data&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Traducción de textos automatizada aplicando Deep Learning con Python y Keras</title><link href="https://pyvideo.org/pycon-es-2018/traduccion-de-textos-automatizada-aplicando-deep-learning-con-python-y-keras.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Pablo Vargas Ibarra</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/traduccion-de-textos-automatizada-aplicando-deep-learning-con-python-y-keras.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El Deep Learning es una de las tecnologías más disruptivas actualmente en Inteligencia Artificial. Esta tecnología se basa en arquitecturas profundas de redes neuronales. En función del tipo de problema, existen distintas arquitecturas como redes convolucionales para el tratamiento de imágenes o redes recurrentes para el análisis de texto. En la charla nos centraremos en esta última afrontando el problema de traducción de texto a texto (many-to-many en modelos secuenciales). El problema es de aprendizaje supervisado, donde se utilizará redes neuronales recurrentes (RNN) con memoria y atención (Neural Machine Translation). Tradicionalmente en sistemas de traducción, ha sido necesaria la creación de variables sofisticadas.&lt;/p&gt;
&lt;p&gt;Utilizando NMT, mapeamos el significado de una frase en una representación vectorial y generamos la traducción a partir ella. Los sistemas de NMT son mucho más fáciles de construir y entrenar. De hecho, se puede implementar con Keras y Tensorflow backend con pocas líneas de código. En la charla se mostrará un ejemplo de implementación, aplicando redes neuronales LSMT (Long short-term memory) para traducción de fechas sin un formato definido.&lt;/p&gt;
</summary></entry><entry><title>Un dron voló sobre el nido de Python</title><link href="https://pyvideo.org/pycon-es-2018/un-dron-volo-sobre-el-nido-de-python.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Mario Bartolome Manovel</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/un-dron-volo-sobre-el-nido-de-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Un &lt;strong&gt;drone&lt;/strong&gt;, una &lt;strong&gt;RaspberryPi&lt;/strong&gt;, una &lt;strong&gt;cámara con visión nocturna&lt;/strong&gt;,
una &lt;strong&gt;web diseñada mediante Flask&lt;/strong&gt; que permite controlar ese drone de
forma totalmente remota, y desde cualquier lugar del mundo... y todo
ello bien conectado por el lenguaje que hoy nos ha traido aquí:&lt;/p&gt;
&lt;p&gt;&lt;img alt="PYTHON" src="https://www.python.org/static/community_logos/python-logo.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sí... Pocas palabras juntas podrían atraer tanta atención.&lt;/strong&gt;&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;strong&gt;¿Te gusta(n)...&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;...programar en &lt;strong&gt;Python&lt;/strong&gt;? Menuda pregunta, si no ¿qué ibas a hacer
aquí?&lt;/li&gt;
&lt;li&gt;...los &lt;strong&gt;drones&lt;/strong&gt;? Menuda pregunta, ¿a quién no?&lt;/li&gt;
&lt;li&gt;...las &lt;strong&gt;RaspberryPi&lt;/strong&gt;? Deme diez, pero démelas ya.&lt;/li&gt;
&lt;li&gt;...las enumeraciones interminables?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Esta charla es un ejemplo perfecto de &lt;strong&gt;que&lt;/strong&gt; se puede conseguir con
Python. Una implementación que pasa de la simple teoría a algo real,
tremendamente divertido, y potencialmente peligroso &lt;strong&gt;:D&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;En esta charla se mostrará como se han integrado diferentes tecnologías
mediante Python, para conseguir controlar un drone conectado a una
RaspberryPi.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="hablaremos-de"&gt;
&lt;h4&gt;Hablaremos de...&lt;/h4&gt;
&lt;/div&gt;
&lt;div class="section" id="flask"&gt;
&lt;h4&gt;Flask&lt;/h4&gt;
&lt;p&gt;Utilizado en el diseño y gestión de la página web, así como de
SQLAlchemy para mantener la base de datos, Flask-SocketIO para
comunicación en tiempo real con WebSockets y otros módulos compatibles
con este pequeño gran framework.&lt;/p&gt;
&lt;div class="section" id="websockets"&gt;
&lt;h5&gt;WebSockets&lt;/h5&gt;
&lt;p&gt;Un poco de JavaScript para ayudarnos a comunicar el input de usuario con
la aplicación web basada en Flask.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="webrtc"&gt;
&lt;h5&gt;WebRTC&lt;/h5&gt;
&lt;p&gt;Una de las tecnologías más prometedoras para el &lt;strong&gt;streaming de video en
riguroso directo&lt;/strong&gt;, y con una latencia mínima.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h4&gt;Python&lt;/h4&gt;
&lt;div class="section" id="comunicacion-serie"&gt;
&lt;h5&gt;Comunicación Serie&lt;/h5&gt;
&lt;p&gt;De alguna forma se tiene que &lt;strong&gt;establecer comunicación entre la
RaspberryPi y el drone&lt;/strong&gt;, y Python provee de mecanismos que permiten
implementar un protocolo de comunicación muy avanzado, de forma
relativamente sencilla.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="threads-y-sockets"&gt;
&lt;h5&gt;Threads y Sockets&lt;/h5&gt;
&lt;p&gt;Hay que mantener ese &lt;strong&gt;servidor de control remoto&lt;/strong&gt; constántemente
atento y listo para recibir órdenes!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="numpy"&gt;
&lt;h5&gt;Numpy&lt;/h5&gt;
&lt;p&gt;Utilizado para implemnetar un sistema de &lt;strong&gt;evasión de obstáculos&lt;/strong&gt; de
forma eficiente, y un sistema de &lt;strong&gt;localización sin GPS&lt;/strong&gt;, basando ambos
en las posibilidades del cálculo vectorizado que ofrece Numpy.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="y-por-supuesto"&gt;
&lt;h4&gt;Y por supuesto...&lt;/h4&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;DEMO || GT*O&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="demo"&gt;
&lt;h4&gt;Demo!&lt;/h4&gt;
&lt;p&gt;Para la admiración, sorpresa y/o terror (no son excluyentes) de los
asistentes, se llevará a cabo una pequeña demo en la que se hará volar
un drone basado en el sistema expuesto. Siempre contemplando una serie
de medidas de seguridad, por supuesto.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ronda-de-preguntas"&gt;
&lt;h4&gt;Ronda de preguntas&lt;/h4&gt;
&lt;/div&gt;
</summary></entry><entry><title>Using Python to build a data privacy layer for decentralized applications</title><link href="https://pyvideo.org/pycon-es-2018/using-python-to-build-a-data-privacy-layer-for-decentralized-applications.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>David Núñez</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/using-python-to-build-a-data-privacy-layer-for-decentralized-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we'll go through our project called NuCypher, a network to empower privacy and data confidentiality in decentralized systems based on the use of advanced cryptographic techniques. In particular, we use &amp;quot;proxy re-encryption&amp;quot;, a special type of cryptosystem that allows to delegate decryption rights of encrypted information. Nodes in our network provide a cryptographically-enforced access control service that allows users to securely share information with others, but in such a way that nodes are completely oblivious to the data that is encrypted: at no point nodes can read anything.&lt;/p&gt;
&lt;p&gt;We'll cover how Python has enabled the vast majority of our implementation, from constructing a low-level library for elliptic curve arithmetic on top of cryptography.io, to interacting with the Ethereum blockchain with py-geth and web3.py. Finally, you'll see a practical example of the use of pyUmbral, our cryptographic library (&lt;a class="reference external" href="https://github.com/nucypher/pyUmbral"&gt;https://github.com/nucypher/pyUmbral&lt;/a&gt;), and a live demo of how to share data securely with the NuCypher network.&lt;/p&gt;
</summary><category term="nucypher"></category></entry><entry><title>YADLRetina: Yet Another Deep Learning Retina</title><link href="https://pyvideo.org/pycon-es-2018/yadlretina-yet-another-deep-learning-retina.html" rel="alternate"></link><published>2018-10-07T00:00:00+00:00</published><updated>2018-10-07T00:00:00+00:00</updated><author><name>Rubén Crespo Cano</name></author><id>tag:pyvideo.org,2018-10-07:pycon-es-2018/yadlretina-yet-another-deep-learning-retina.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La retina de los vertebrados está formada por distintos circuitos
neuronales compuestos por varios tipos de células diferentes, cada uno
con su propio rol y su característica particular de respuesta ante
estímulos visuales. Dichas neuronas están dispuestas en tres capas
celulares distintas que definen entre ellas dos interfaces de conexión
que llamamos capas sinápticas [1].&lt;/p&gt;
&lt;p&gt;Por otra parte, uno de los principales objetivos de la neurociencia es
comprender cómo se codifica la información visual en la retina por parte
de las neuronas que la forman. Además, las enfermedades que afectan a la
visión, como la retinosis pigmentaria o la degeneración macular asociada
a la edad, tienen una incidencia cada vez más acusada año tras año en
personas de todo el mundo. Esto define el enorme desafío para nuestra
sociedad de dar solución a estos problemas, mediante el uso de terapias
genéticas y neuroprótesis visuales [2]. Es por ello que es muy
importante disponer de modelos computacionales de la retina, para
conocer más su estructura y funcionamiento así como para poder ser
utilizados en neuroprótesis visuales.&lt;/p&gt;
&lt;p&gt;En este estudio se presenta un &lt;strong&gt;modelo computacional de la retina&lt;/strong&gt; que
se encarga de transformar estímulos visuales en patrones de disparo de
potenciales de acción de manera precisa. Se aborda el problema del
entrenamiento de modelos neuronales de células ganglionares de la retina
(RGC) así como de grupos de células ganglionares, todo ello haciendo uso
de registros electrofisiológicos de ratones. De manera específica, se
modelan &lt;strong&gt;redes neuronales convolucionales (CNN)&lt;/strong&gt; para aprender a
predecir las respuestas neuronales de RGC individuales y poblaciones de
éstas ante un estímulo de ruido natural. Los modelos se han desarrollado
haciendo uso de los &lt;strong&gt;frameworks TensorFlow y Keras para Python&lt;/strong&gt;. Los
resultados muestran que las CNN pueden ser utilizadas de manera efectiva
para modelar y aprender los procesos computacionales llevados a cabo en
la retina en forma de redes neuronales multicapa similares a los
circuitos neuronales de la misma.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Kolb H, Fernandez E, Nelson R, editors. Webvision: The Organization
of the Retina and Visual System [Internet]. Salt Lake City (UT):
University of Utah Health Sciences Center; 1995. Available from:
&lt;a class="reference external" href="https://www.ncbi.nlm.nih.gov/books/NBK11530/"&gt;https://www.ncbi.nlm.nih.gov/books/NBK11530/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fernández, E. and Normann, R. A. (2017). CORTIVIS Approach for an
Intracortical Visual Prostheses (Cham: Springer International
Publishing). 191–201. doi:10.1007/978-3-319-41876-6 15&lt;/li&gt;
&lt;/ol&gt;
</summary></entry><entry><title>Aprende a enseñar, enseñando aprenderás</title><link href="https://pyvideo.org/pycon-es-2018/aprende-a-ensenar-ensenando-aprenderas.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Irene Pérez</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/aprende-a-ensenar-ensenando-aprenderas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla me gustaría compartir &lt;strong&gt;mi experiencia como profesora y las lecciones que he ido aprendiendo&lt;/strong&gt; a la hora de enseñar programación a diferentes tipos de público, con un énfasis especial en niños y adolescentes. También presentaré &lt;strong&gt;herramientas y ejemplos concretos&lt;/strong&gt; que yo he usado y que se pueden utilizar &lt;strong&gt;para enseñar Python&lt;/strong&gt; o como base para diseñar contenidos educativos. Y, por supuesto, intentaré &lt;strong&gt;motivar&lt;/strong&gt; a todo el mundo para que enseñe Python a sus hijos, sobrinos, primos, amigos o vecinos porque realmente creo que, &lt;strong&gt;enseñando, es como más se aprende&lt;/strong&gt;.&lt;/p&gt;
</summary></entry><entry><title>Build your static site with Python</title><link href="https://pyvideo.org/pycon-es-2018/build-your-static-site-with-python.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Fernando Rabanal</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/build-your-static-site-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Do you want to build your own static web page with some simple code?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this &lt;strong&gt;talk&lt;/strong&gt; we will review different Python modules to build your own static site with simple bits of code and a bit of reStructuredText and Markdown. Bring your own story, and we will help you shout it out in a matter of minutes!&lt;/p&gt;
&lt;p&gt;Check Pelican for speed and secure static blog generation, or MKDocs for the best documentation site ever! Mix a bit of Python, a bit of reStructuredText or Markdown, and make it happen. Magic! Your site in minutes!&lt;/p&gt;
</summary></entry><entry><title>Desde imágenes RGB a mapas de profundidad pasando por redes convolucionales profundas</title><link href="https://pyvideo.org/pycon-es-2018/desde-imagenes-rgb-a-mapas-de-profundidad-pasando-por-redes-convolucionales-profundas.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Zuria Bauer</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/desde-imagenes-rgb-a-mapas-de-profundidad-pasando-por-redes-convolucionales-profundas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Poder determinar la distancia entre objetos a partir de una imagen en dos dimensiones es una tarea que ha intrigado a multitud de investigadores en estos últimos años. Esto permitiría la estimación de la profundidad en imágenes monoculares, siendo capaces de realizar predicciones precisas en mapas de profundidad. Las ventajas son evidentes, ya que, cualquier cámara de color detectaría datos tridimensionales. Esta capacidad es importante para crear sistemas de asistencia de bajo coste para ayudar a personas con discapacidad visual a desplazarse y desarrollar su vida en entornos exteriores de forma autónoma. Entre otras aplicaciones, esta técnica permitiría generar reconstrucciones tridimensionales de un objeto o escena sin necesidad de disponer de dispositivos específicos.&lt;/p&gt;
&lt;p&gt;En esta charla se mostrará un sistema basado en visión capaz de detectar estas distancias a partir de imágenes en 2D, con el objetivo de implementarse en sistemas para ayudar a personas con discapacidad visual a desplazarse en entornos exteriores.&lt;/p&gt;
&lt;p&gt;Durante la charla se hablará de conceptos relacionados con el Deep Learning, empleando la herramienta Tensorflow. La charla está dirigida a todos los públicos, pues se tratarán los conceptos de una manera sencilla, y desde la perspectiva del trabajo con Python de una persona que no ha estudiado informática. Por otro lado, el proyecto que se presenta está englobado en el proyecto nacional RETOGAR (RETOrno al HoGAR) financiado por el Ministerio de Economía y Competitividad del Gobierno de España y en el cual se tratan diversos temas de la robótica social enfocada a personas dependientes.&lt;/p&gt;
</summary></entry><entry><title>Diseñando APIs en instantes usando Flask</title><link href="https://pyvideo.org/pycon-es-2018/disenando-apis-en-instantes-usando-flask.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Sara Iris Garcia</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/disenando-apis-en-instantes-usando-flask.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Flask es un micro-framework liviano para Python. Su simplicidad y elasticidad lo convierten en la mejor opción para crear APIs en poco tiempo. En mi charla, cubriré los conceptos básicos de Flask y Requests.&lt;/p&gt;
&lt;p&gt;Mostraré las herramientas que pueden automatizar las tareas más comunes en el desarrollo de APIs y compartiré los patrones de diseño para evitar errores comunes.&lt;/p&gt;
&lt;p&gt;Algunas de las herramientas y temas específicos que cubriré: Flask-Restplus, SQLAlchemy, ciclo de vida de los requests, patrones de diseño de APIs REST + CRUD, arquitectura Flask.&lt;/p&gt;
</summary></entry><entry><title>El hombre pisó la luna, pero gracias a la mujer</title><link href="https://pyvideo.org/pycon-es-2018/el-hombre-piso-la-luna-pero-gracias-a-la-mujer.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Teresa de la Torre</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/el-hombre-piso-la-luna-pero-gracias-a-la-mujer.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La mujer ha quedado siempre olvidada en los libros de historia, ciencia, arte o literatura; ha quedado oculta para el conocimiento popular. En la rama de la tecnología esto no ha sido diferente, y la tecnología se ha entendido como &amp;quot;cosa de hombres&amp;quot;. ¡Nada más lejos de la realidad! Os voy a enseñar cómo la tecnología no sería lo que es sin la crucial aportación de mujeres. Os voy a explicar porqué las primeras programadoras de la historia eran mujeres y ahora en cambio somos tan pocas. Porque todo tiene un porqué y porque no podemos seguir ignorando este problema. Tenemos que hacer algo ¡Y podemos hacerlo!&lt;/p&gt;
</summary></entry><entry><title>Evaluation of text analysis in social media a linguistic approach</title><link href="https://pyvideo.org/pycon-es-2018/evaluation-of-text-analysis-in-social-media-a-linguistic-approach.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Eulàlia Veny</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/evaluation-of-text-analysis-in-social-media-a-linguistic-approach.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The analysis of text data is gaining more and more importance every day. The need for companies to know what people think and want is key to invest money in providing customers what they want. The first approach to text analysis was statistical but adding linguistic information has been proven to work well for improving the results.&lt;/p&gt;
&lt;p&gt;One of the problems that you need to address when analyzing social media is time. People are constantly exchanging information, users write comments every day about what they think of a product, what they do or the places they visit. It is difficult to keep track of everything that happens. Moreover, information is sometimes expressed in short sentences, keywords, or isolated ideas, such as in Tweets. Language is usually unstructured because it is composed of isolated ideas, or without context.&lt;/p&gt;
&lt;p&gt;I will talk about the problem of opinion in opinion mining: how do we define opinion. I will also explain briefly how Naïve Bayes classifiers can be useful in sentiment analysis and I will use an example to show how linguistic information can help improve the trainings. I will also evaluate the results and compare them to the results of training without any linguistic information (i.e. supervised vs unsupervised learning).&lt;/p&gt;
&lt;p&gt;I will also explain about opinion lexicons, both dictionary based and corpus-based, and about using lexicons for semi-supervised learning and supervised learning. If I have time left, I will explain about other use cases of text analysis, such as spam detection.&lt;/p&gt;
</summary></entry><entry><title>FaaS with no strings attached</title><link href="https://pyvideo.org/pycon-es-2018/faas-with-no-strings-attached.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Unai Pastor</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/faas-with-no-strings-attached.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Desde que se empezaron a abandonar las aplicaciones monolíticas la tendencia ha ido hacia una separación en servicios cada vez más pequeños que ofreciesen mejor escalabilidad, separación de responsabilidades y agilidad a la hora de desplegar. Estos últimos años ha aparecido una nueva evolución de estas arquitecturas, las Functions as a Service, que son piezas de código que escalan de manera automática y reducen los costes ya que no consumen ningún recurso mientras están en reposo.&lt;/p&gt;
&lt;p&gt;Como contrapartida este tipo de funciones necesitan una gran infraestuctura a nivel de cantidad de servidores y virtualización que solo unos pocos proveedores de gran tamaño pueden ofrecer. Actualmente los proveedores que disponen de estas infraestructuras imponen unas limitaciones y requisitos como que estén atados a una plataforma privada, el soporte a solo algunos lenguajes o tiempos de ejecución limitados. Estas condiciones pueden dificultar el desarrollo o quitar libertad al producto que depende de un proveedor.&lt;/p&gt;
&lt;p&gt;En la charla explicaré el patrón FaaS y las ventajes e inconvenientes de su uso. También hablaré de OpenFaas, una plataforma de código abierto que permite eliminar las dependencias de los proveedores y da total libertad respecto a lenguajes y modo de uso.&lt;/p&gt;
</summary></entry><entry><title>Flask, un pequeño gran héroe</title><link href="https://pyvideo.org/pycon-es-2018/flask-un-pequeno-gran-heroe.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Maribel Tirados Gómez</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/flask-un-pequeno-gran-heroe.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La primera vez que me encontré con un tutorial de Flask y descubrí lo fácil, mágico e intuitivo que era, pensé: &amp;quot;Pero... ¿La gente sabe lo que mola ésto?&amp;quot; No me dedico profesionalmente al desarrollo (aunque en mi trabajo a veces tengo la suerte de poder programar) y para mí fue una gran sorpresa ver que hay alternativas a Django tan sumamente sencillas y al alcance de todos.&lt;/p&gt;
&lt;p&gt;Flask que es un microframework para crear aplicaciones web en un abrir y cerrar de ojos. Con poquísimas líneas de código, y sin necesidad de ser un experto en Python, podemos montar nuestra propia aplicación de una manera fácil y sencilla. ¡Tan solo hace falta tener ganas!&lt;/p&gt;
&lt;p&gt;En esta charla me gusta compartir con vosotros mi experiencia con Flask y que desarrollemos juntos una mini aplicación. Sobre todo, me gustaría transmitir que no hace falta ser un experto para adentrarse en el mundo de la programación y conseguir hacer cosas muy chulas :)&lt;/p&gt;
</summary></entry><entry><title>From unstructured news to real-time visualizations, a Fintech story</title><link href="https://pyvideo.org/pycon-es-2018/from-unstructured-news-to-real-time-visualizations-a-fintech-story.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Oscar Ramirez</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/from-unstructured-news-to-real-time-visualizations-a-fintech-story.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In Fintech selecting the right technologies is as important as having the best ideas.&lt;/p&gt;
&lt;p&gt;In this talk we will present how Ravenpack, one of the most important Big Data analytics providers for financial services, transforms unstructured documents into real-time visualizations. More precisely, we will focus on how we use Python to support the process.&lt;/p&gt;
</summary></entry><entry><title>Gradual typing en Python</title><link href="https://pyvideo.org/pycon-es-2018/gradual-typing-en-python.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>David Barragán Merino</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/gradual-typing-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Los sistemas de tipado estático son aquellos que definen y verifican los tipos en tiempo de compilación. Estos sistemas no son flexibles y cualquier cambio puede generar una gran reescritura del código.&lt;/p&gt;
&lt;p&gt;Los sistemas de tipado dinámico son aquellos que usan un conjunto de etiquetas en tiempo de ejecución para distinguir los diferentes tipos de estructuras. Por tanto la verificación de tipos se realiza en tiempo de ejecución. Estos sistemas ofrecen una mayor flexibilidad y expresividad, acelerando el proceso de desarrollo y ofreciendo una mayor tolerancia a fallos. Por contra son sistemas más lentos y la detección de errores se realiza en tiempo de ejecución.&lt;/p&gt;
&lt;p&gt;Gradual typing integra ambas tecnologías permitiendo controlar qué fragmentos de código utilizarán tipado estático y cuales tipado dinámico.&lt;/p&gt;
&lt;p&gt;En esta charla se realizará una introducción al gradual typing y veremos cómo podemos aplicarla en Python mediante anotaciones en el código apoyándonos en la teoría del “Type Hints” descrita en PEP 483 y PEP 484 y la biblioteca mypy. Esta nueva notación aporta muchas ventajas a nuestro código: mejora su documentación, reduce el número de bugs, acelera su aparición y mejorando los mensajes de las excepciones, mejora los tiempos de ejecución de nuestros programas y nos facilita la labor de desarrollo, aumentando las funcionalidades de nuestros IDEs (autocompletado, validaciones, refactorización,...).&lt;/p&gt;
</summary></entry><entry><title>Hackeando el Reinforcement Learning</title><link href="https://pyvideo.org/pycon-es-2018/hackeando-el-reinforcement-learning.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Guillem Duran Ballester</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/hackeando-el-reinforcement-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A pesar de los recientes avances en el campo del aprendizaje por refuerzo (Reinforcement Learning), generar fácilmente datasets de ejemplos de buena calidad sigue siendo un auténtico infierno. Por suerte, si nos permitimos hacer un poco de trampas y utilizar algoritmos de planificación, es posible conseguirlo. En hackeando el Reinforcement Learning, presentaremos una &lt;a class="reference external" href="https://github.com/FragileTheory/FractalAI"&gt;nueva familia de algoritmos de planificación&lt;/a&gt; capaces de obtener puntuaciones sobrehumanas utilizando muy pocos recursos de computación.&lt;/p&gt;
&lt;p&gt;El objetivo de esta charla es ofrecer una explicación intuitiva de cómo funciona esta nueva familia de algoritmos mediante animaciones visuales y demostraciones en vivo. Esta charla estará dividida en cuatro apartados que se corresponden con los pasos a seguir para hackear cualquier sistema.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Recopilación de información&lt;/strong&gt;: En esta es una breve introducción a los conceptos necesarios para poder seguir la charla y entender el probema que queremos resolver.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Escaneo y detección de vulnerabilidades&lt;/strong&gt;: Aquí explicaremos con animaciones visuales y sin entrar en detalles matemáticos en qué consisten los nuevos algoritmos presentados y cómo se integran con el aprendizaje por refuerzo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Explotación del sistema&lt;/strong&gt;: Python ofrece una gran cantidad de librerias y herramientas para trabajar con problemas de aprendizaje por refuerzo. En esta sección realizaremos una prueba de concepto en la que mostraremos como generar partidas de Ms.Pacman de calidad sobrehumana en tan solo unos minutos. Además, se mostraran ejemplos de como integrar los algoritmos presentados con las liberías ya existentes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mantener el acceso y gestionar huellas&lt;/strong&gt;: Por último, se explicará que tipo de problemas pueden ser resueltos eficientemente, qué resultados hemos obtenido en diferentes pruebas, y dónde encontrar recursos adicionales para aprender más sobre el tema.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Esta charla es una adaptación de &lt;a class="reference external" href="https://github.com/Guillemdb/hacking-rl"&gt;Hacking reinforcement learning&lt;/a&gt;, presentada en EuroPython2018.&lt;/p&gt;
</summary></entry><entry><title>Industrializando modelos de ML</title><link href="https://pyvideo.org/pycon-es-2018/industrializando-modelos-de-ml.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Rafael Castillo Alcibar</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/industrializando-modelos-de-ml.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El objetivo de la charla será exponer cual es el método de trabajo que deben seguir los científicos de datos en un entorno empresarial de una forma organizada y robusta a través del la gestión del código. En muchas ocasiones se interpreta que el trabajo de los científicos de datos se limita a dar respuesta a un modelo, en realidad este es un primer paso y no el final de la acción. La solución final tiene que formar parte de un ecosistema vivo donde el código generado tiene que ser mantenido y consumido por otros, por ello el código tiene que cumplir ciertos requisitos que aseguren esto. Para cumplir con estos requisitos, el modo de trabajo también tiene que cambiar hacia un modelo colaborativo donde los científicos de datos trabajan no en una solución particular para un problema particular, sino una solución que es capaz de dar respuesta a ese problema y otros de ese mismo ámbito.&lt;/p&gt;
&lt;p&gt;Principalmente, el uso de herramientas colaborativas y el desarrollo de código guiado por tests son herramientas fundamentales para garantizar la creación de soluciones robustas y escalables que permitan a los científicos de datos avanzar de manera más rápida y sólida hacia sus objetivos.&lt;/p&gt;
</summary></entry><entry><title>Instrumenta tu app con Prometheus</title><link href="https://pyvideo.org/pycon-es-2018/instrumenta-tu-app-con-prometheus.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Agustín Herranz Cecilia</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/instrumenta-tu-app-con-prometheus.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;¿Algo se rompe en tu sistema y no sabes por qué? Es hora de incrementar la visibilidad sobre él. En esta charla te contaré que es Prometheus y como puede ayudarte a mejorar la observabilidad de tus apps usando su cliente para Python.&lt;/p&gt;
&lt;p&gt;Hablaremos de por que son interesantes la visibilidad y la observabilidad en un sistema, de los diferentes tipos de instrumentación, de como Prometheus nos ayuda a la hora de recolectar métricas, y, de como usando el cliente Python de Prometheus en nuestras aplicaciones y servicios podemos exponer métricas que nos ayuden a mostrar el estado de nuestro sistema/producto.&lt;/p&gt;
</summary><category term="prometheus"></category></entry><entry><title>Keynote: Python y los misterios del universo</title><link href="https://pyvideo.org/pycon-es-2018/keynote-python-y-los-misterios-del-universo.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Héctor Socas Navarro</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/keynote-python-y-los-misterios-del-universo.html</id><summary type="html"></summary><category term="keynote"></category></entry><entry><title>Khiva: Cómo Al Juarismi reventaba GPUs para analizar time series</title><link href="https://pyvideo.org/pycon-es-2018/khiva-como-al-juarismi-reventaba-gpus-para-analizar-time-series.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Antonio Vilches</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/khiva-como-al-juarismi-reventaba-gpus-para-analizar-time-series.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Durante las últimas décadas del siglo XX el mundo académico llevó a cabo numerosas investigaciones y desarrollos relacionados con el análisis de time series (TS). Sin embargo, no es hasta estos últimos años en los que la industria se ha lanzado al análisis y cómputo masivo de este tipo de datos. El auge del Internet de la Cosas y la necesidad de analizar y monitorizar datos en los que el tiempo no es una simple métrica más, sino el eje principal sobre el que versan otras variables es lo que ha puesto el foco de atención en el análisis de time series. Esta nueva demanda de cómputo debe ser acompasada por las últimas generaciones de procesadores, (multicore y GPUs), así como en el desarrollo de tecnologías de Big Data y de computación distribuida, las cuales proporcionan los medios para tratar estos grandes volúmenes de datos en tiempo real suave.&lt;/p&gt;
&lt;p&gt;En el contexto de Python, en la actualidad existen algunas librerías que ofrecen funciones para analizar time series. Si nos centramos en librerías de pre-procesamiento, encontramos librerías como Pandas [1] y tspreprocess [2], las cuales ofrecen funciones para la carga y almacenamiento de TS, además de funciones de conversión, resampling y desplazamiento de tiempo. Por otro lado, encontramos las librerías Prophet [3], PyFlux [4] y Pyramid [5], que nos ofrecen funciones de forecasting para predecir futuros valores en una time series. Por último, hay otro grupo de librerías como, tsfresh [6], tslearn [7] y shapelets [8] que generan clasificadores y regresores para time series. A pesar de la existencia de estas librerías que tratan time series, observamos principalmente dos limitaciones: 1) La funcionalidad que ofrecen estas librerías se encuentra muy fragmentada en librerías inconexas y 2) la mayoría de estas librerías son secuenciales, es decir, se ejecutan en un único thread, por lo que no son capaces de sacar ventaja de los procesadores paralelos como GPUs o CPUs multicores.&lt;/p&gt;
&lt;p&gt;Para superar las dos limitaciones anteriores, presentamos Khiva [9], una librería opensource que permite la ejecución de una larga lista de algoritmos de análisis de time series sobre GPUs. Khiva incorpora algoritmos de reducción de dimensionalidad, cálculo de distancias, normalización, regresión, regularización, extracción de características, estadísticos descriptivos, búsqueda de patrones, etc. Para la implementación de todos los algoritmos hemos usado la librería Arrayfire [10] como capa de abstracción de las principales APIs de GPUs para cómputo, OpenCL [11] y Nvidia CUDA [12]. De esta forma, somos capaces de asegurar que la librería Khiva se puede ejecutar en cualquier plataforma independientemente de la GPU que se encuentre disponible. Además de la aceleración del tiempo de ejecución, otra de las principales ventajas que proporciona Khiva, es que la mayoría de los algoritmos mencionados son concatenables. Debido a que implementamos una estrategia lazy para las transferencias de memoria entre CPU y GPU, así solo se transfieren datos entre CPU y GPU si es estrictamente necesario, por lo que evitamos todas aquellas transferencias que son innecesarias.&lt;/p&gt;
&lt;p&gt;Durante la charla, ofreceremos una introducción a las time series y a los problemas que se pueden resolver con el tratamiento de éstas. Posteriormente, presentaremos los aspectos de implementación más importantes, aquí profundizaremos en los mecanismos que hemos usado para ejecutar nuestros algoritmos en GPU y finalizaremos con una sencilla demostración en Python (live coding), utilizaremos Khiva para analizar un conjunto de datos de consumo energético para encontrar patrones comunes entre ellos.&lt;/p&gt;
&lt;p&gt;Works Cited&lt;/p&gt;
&lt;p&gt;[1] &amp;quot;Pandas Library Documentation,&amp;quot; [Online]. Available: &lt;a class="reference external" href="https://pandas.pydata.org/pandas-docs/version/0.22.0/timeseries.html"&gt;https://pandas.pydata.org/pandas-docs/version/0.22.0/timeseries.html&lt;/a&gt;. [Accessed 04 06 2018].&lt;/p&gt;
&lt;p&gt;[2] &amp;quot;tspreprocess,&amp;quot; Maximilian Christ, [Online]. Available: &lt;a class="reference external" href="https://github.com/MaxBenChrist/tspreprocess"&gt;https://github.com/MaxBenChrist/tspreprocess&lt;/a&gt;. [Accessed 04 06 2018].&lt;/p&gt;
&lt;p&gt;[3] &amp;quot;Prophet,&amp;quot; Facebook, [Online]. Available: &lt;a class="reference external" href="https://github.com/facebook/prophet"&gt;https://github.com/facebook/prophet&lt;/a&gt;. [Accessed 20018 06 04].&lt;/p&gt;
&lt;p&gt;[4] &amp;quot;PyFlux,&amp;quot; Ross Taylor, [Online]. Available: &lt;a class="reference external" href="https://github.com/RJT1990/pyflux"&gt;https://github.com/RJT1990/pyflux&lt;/a&gt;. [Accessed 04 06 2018].&lt;/p&gt;
&lt;p&gt;[5] &amp;quot;Pyramid,&amp;quot; Taylor G Smith, [Online]. Available: &lt;a class="reference external" href="https://github.com/tgsmith61591/pyramid"&gt;https://github.com/tgsmith61591/pyramid&lt;/a&gt;. [Accessed 04 06 2018].&lt;/p&gt;
&lt;p&gt;[6] &amp;quot;tsfresh,&amp;quot; Blue-yonder, [Online]. Available: &lt;a class="reference external" href="https://github.com/blue-yonder/tsfresh"&gt;https://github.com/blue-yonder/tsfresh&lt;/a&gt;. [Accessed 04 06 2018].&lt;/p&gt;
&lt;p&gt;[7] &amp;quot;tslearn,&amp;quot; Romain Tavenard, [Online]. Available: &lt;a class="reference external" href="https://github.com/rtavenar/tslearn"&gt;https://github.com/rtavenar/tslearn&lt;/a&gt;. [Accessed 04 06 2018].&lt;/p&gt;
&lt;p&gt;[8] &amp;quot;shaplets-python,&amp;quot; Mohamed Abdulaziz Ali Haseeb, [Online]. Available: &lt;a class="reference external" href="https://github.com/mohaseeb/shaplets-python"&gt;https://github.com/mohaseeb/shaplets-python&lt;/a&gt;. [Accessed 04 06 2018].&lt;/p&gt;
&lt;p&gt;[9] &amp;quot;Khiva Library,&amp;quot; Shapelets.io, [Online]. Available: &lt;a class="reference external" href="https://github.com/Shapelets/Khiva"&gt;https://github.com/Shapelets/Khiva&lt;/a&gt;. [Accessed 04 06 2018].&lt;/p&gt;
&lt;p&gt;[10] &amp;quot;Arrayfire Documentation,&amp;quot; ArrayFire, [Online]. Available: &lt;a class="reference external" href="https://arrayfire.org/docs/index.htm"&gt;https://arrayfire.org/docs/index.htm&lt;/a&gt;. [Accessed 04 06 2018].&lt;/p&gt;
&lt;p&gt;[11] &amp;quot;OpenCL,&amp;quot; Khronos Group, [Online]. Available: &lt;a class="reference external" href="https://www.khronos.org/opencl/"&gt;https://www.khronos.org/opencl/&lt;/a&gt;. [Accessed 04 06 2018].&lt;/p&gt;
&lt;p&gt;[12] &amp;quot;Nvidia Cuda,&amp;quot; Nvidia, [Online]. Available: &lt;a class="reference external" href="https://developer.nvidia.com/cuda-toolkit"&gt;https://developer.nvidia.com/cuda-toolkit&lt;/a&gt;. [Accessed 04 06 2018].&lt;/p&gt;
</summary></entry><entry><title>Lightning talks</title><link href="https://pyvideo.org/pycon-es-2018/lightning-talks.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/lightning-talks.html</id><summary type="html"></summary><category term="lightning talks"></category></entry><entry><title>Multitenant, el infierno de las migraciones</title><link href="https://pyvideo.org/pycon-es-2018/multitenant-el-infierno-de-las-migraciones.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Xavier Gil Estarellas</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/multitenant-el-infierno-de-las-migraciones.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En txerpa.com llevamos alrededor de 4 años usando django tenants schemas para ofrecer un producto multitenant. Hace algo menos de dos años nos encontramos con un problema grave, las migraciones tardaban mucho más de lo que era aceptable para nosotros, estábamos afrontando un cambio importante en la estructura de datos y teníamos más de 3000 schemas en los que aplicar los cambios.&lt;/p&gt;
&lt;p&gt;Entonces decidimos aportar nuestro granito de arena al proyecto y adaptamos la gestión de migraciones para que se pueda hacerse en paralelo. Este cambio nos permitió reducir el tiempo de las migraciones a menos de una tercera parte. No obstante el procesos sigue siendo demasiado lento para ciertas migraciones y sobretodo obliga a parar el servicio entero mientras se están realizando y en estos momentos estamos desarrollando una nueva mejora para la gestión de las migraciones, que permita usar celery en lugar de hilos, permitiendo un mayor nivel de concurrencia y mayor control a la hora de realizar migraciones.&lt;/p&gt;
&lt;p&gt;Mi propuesta es hablar de como gestionar el proceso de migraciones cuando tenemos que trabajar con miles de esquemas en Django tenant esquemas, a partir de nuestra experiencia y de las soluciones que hemos implantado.&lt;/p&gt;
</summary></entry><entry><title>Nueva generación de APIs con API Star</title><link href="https://pyvideo.org/pycon-es-2018/nueva-generacion-de-apis-con-api-star.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>José Antonio Perdiguero</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/nueva-generacion-de-apis-con-api-star.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Introducción&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;API Star es un framework creado por el autor de Django REST Framework con el objetivo de aprovechar las nuevas herramientas que provee Python en sus últimas versiones para crear APIs increíblemente &lt;strong&gt;rápidas&lt;/strong&gt;, &lt;strong&gt;potentes&lt;/strong&gt;, &lt;strong&gt;expresivas&lt;/strong&gt; y &lt;strong&gt;sencillas&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Motivación&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;En las últimas versiones de Python tenemos a nuestra disposición herramientas como la sintaxis &lt;strong&gt;async/await&lt;/strong&gt;, el módulo &lt;strong&gt;asyncio&lt;/strong&gt;, el módulo &lt;strong&gt;typing&lt;/strong&gt; que nos permite definir anotaciones para las funciones, etc. API Star aprovecha todas estas nuevas funcionalidades para redefinir la forma en la que podemos crear APIs de una forma más rica y expresiva, más fácil de &lt;strong&gt;testear&lt;/strong&gt;, con mecanismos para crear &lt;strong&gt;esquemas&lt;/strong&gt; de forma automática y con un &lt;strong&gt;rendimiento&lt;/strong&gt; muy alto.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Estructura&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;URLs: &lt;em&gt;Routes&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Sync vs async: &lt;em&gt;Views&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Dependency injection: &lt;em&gt;Components&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Schemas generation: &lt;em&gt;Types&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Tools: &lt;em&gt;Test client&lt;/em&gt; and &lt;em&gt;Docs&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>¡Oh vosotros los que entráis, abandonad toda esperanza!</title><link href="https://pyvideo.org/pycon-es-2018/oh-vosotros-los-que-entrais-abandonad-toda-esperanza.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Pablo Galindo Salgado</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/oh-vosotros-los-que-entrais-abandonad-toda-esperanza.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Como programadores de Python, estamos acostumbrados a usar nuestro
lenguaje favorito continuamente pero alguna vez que otra pasa por
nuestra cabeza la duda de cómo funciona todo esto. ¿Cómo está
implementado un lenguaje de programación? ¿Cómo sabe Python si lo que
escribo es correcto o no? ¿Cómo se transforma y ejecuta el código que
escribimos?&lt;/p&gt;
&lt;p&gt;El objetivo de esta charla es aprender todo lo posible acerca de
sintaxis, gramática, &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Abstract_syntax_tree"&gt;árboles sintácticos abstractos&lt;/a&gt;, como un lenguaje
como Python funciona y cómo &lt;a class="reference external" href="https://en.wikipedia.org/wiki/CPython"&gt;CPython&lt;/a&gt; (la implementación por defecto
del intérprete) en particular está implementado. Para que la sesión no
sea simplemente una serie de diatribas teóricas, utilizaremos la excusa
de modificar, retorcer y extender la gramática de Python como hilo
conductor para entender cómo todas las piezas encajan y para aprender
cómo funcionan todas las técnicas avanzadas de análisis y modificación
de código. Para ello empezaremos hablando de cómo modificar código de
Python modificando su árbol sintáctico abstracto y veremos algunos
ejemplos de librerías (pytest, 2to3…) que utilizan esta técnica. Después
veremos como extender la gramática de Python “informalmente” utilizando
un &lt;a class="reference external" href="https://docs.python.org/3/library/codecs.html"&gt;códec&lt;/a&gt; personalizado y qué aplicaciones podría tener esto.
Finalmente hablaremos de cómo modificar realmente la gramática de Python
creando nuestro propio intérprete modificado en caso de que algún día
queramos implementar nuestro propio lenguage o modificar el propio
Python.&lt;/p&gt;
&lt;p&gt;Tras terminar la charla (¡para aquellos que sobrevivan a los nueve
circulos!) ganaremos conocimiento de como funciona Python y, por
extensión, otros lenguajes de programación además de tener un montón de
malas ideas inmantenibles en mente para la próxima vez que queramos
asustar a nuestros compañeros programadores.&lt;/p&gt;
</summary></entry><entry><title>Ojalá que lluevan series temporales</title><link href="https://pyvideo.org/pycon-es-2018/ojala-que-lluevan-series-temporales.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Elena Abril Medina</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/ojala-que-lluevan-series-temporales.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla vamos a intentar entender si las precipitaciones de este año son las que podíamos esperar o no a partir de los datos que proporciona la AEMET. Para ello, vamos a utilizar series temporales y vamos a cubrir los siguientes puntos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Identificar si nuestros datos son una serie temporal&lt;/li&gt;
&lt;li&gt;Entender el comportamiento del volumen de precipitaciones&lt;/li&gt;
&lt;li&gt;Distintas formas de visualizar la información&lt;/li&gt;
&lt;li&gt;Distintas formas de estimar las precipitaciones esperadas&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Pipenv: nuevo sistema de gestión de dependencias de paquetes para Python.</title><link href="https://pyvideo.org/pycon-es-2018/pipenv-nuevo-sistema-de-gestion-de-dependencias-de-paquetes-para-python.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Andreu Vallbona</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/pipenv-nuevo-sistema-de-gestion-de-dependencias-de-paquetes-para-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pipenv, creado por Kenneth Reitz hace poco más de un año, se ha convertido en el recurso oficial recomendado por Python para administrar dependencias de paquetes.&lt;/p&gt;
&lt;p&gt;Pero todavía hay confusión sobre qué problemas resuelve y cómo es más útil que el flujo de trabajo estándar usando pip y un archivo requirements.txt. En esta charla se intentará explicar la solución a dichos problemas.&lt;/p&gt;
</summary></entry><entry><title>Prediciendo la contaminacion</title><link href="https://pyvideo.org/pycon-es-2018/prediciendo-la-contaminacion.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Maria Medina</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/prediciendo-la-contaminacion.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hace tres años se aprobó en la ciudad de Madrid un Protocolo para Episodios de Alta Contaminación por Dióxido de Nitrógeno (NO2). Desde entonces, cuando los niveles de este contaminante en Madrid suben por encima de lo que la OMS considera aceptable, se activan una serie de restricciones de tráfico con el objetivo de reducir estos niveles de contaminación. El punto crítico del protocolo está en que estas restricciones se activan de un día para otro, lo que supone un problema de planificación que afecta a ciudadanía, administración y actividades económicas.&lt;/p&gt;
&lt;p&gt;Por este motivo, quisimos ver si resultaba viable construir modelos para predecir la contaminación de las ciudades en general, y de Madrid en particular. La charla presenta todo el proceso seguido, usando Python como herramienta, desde la obtención de los datos abiertos, pasando por la selección de las variables óptimas y finalmente la creación de los modelos, todo ello de forma iterativa, adaptando la metodología ágil a los procesos de data science.&lt;/p&gt;
</summary></entry><entry><title>Project templates with Cookiecuter</title><link href="https://pyvideo.org/pycon-es-2018/project-templates-with-cookiecuter.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Héctor Canto</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/project-templates-with-cookiecuter.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Starting a new project is always cumbersome, specially if you collaborate with others: you have to follow standards and agreements, there are some mandatory files, deploy artifacts and requirements should be in a certain place etc.&lt;/p&gt;
&lt;p&gt;In this talk we will see how to create a repository template, talk about some standards you may follow and how to use Cookiecutter to initialize your project in a few seconds. We will also comment some CLI tools to help you maintain your repository up to date, with a special focus on how to easily handle environment variables.&lt;/p&gt;
</summary></entry><entry><title>Python Heaps-ters</title><link href="https://pyvideo.org/pycon-es-2018/python-heaps-ters.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Víctor Terrón</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/python-heaps-ters.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La documentación de Python del &lt;a class="reference external" href="https://docs.python.org/3/library/heapq.html"&gt;módulo heaqp&lt;/a&gt; nos da el ejemplo de que
pueden usarse para implementar colas de prioridad. Más allá de eso
encontramos escasa información acerca de sus aplicaciones prácticas y
—quizá— demasiados detalles acerca de invariantes y &lt;a class="reference external" href="https://docs.python.org/3/library/heapq.html#theory"&gt;la teoría&lt;/a&gt; detrás
de esa estructura de datos llamada &lt;em&gt;heap&lt;/em&gt;. Es fácil echar un vistazo
superficial y encogerse de hombros, sin haber entendido mucho y con la
sensación de que éste no es un módulo que vayamos a necesitar algún día.&lt;/p&gt;
&lt;p&gt;Pero no es así. Las heaps importan, y mucho: del mismo modo que es
razonable afirmar que las &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hash_table"&gt;tablas hash&lt;/a&gt; (conocidas en Python como
diccionarios) son la estructura de datos más importante conocida por la
humanidad, la &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Binary_heap"&gt;heap&lt;/a&gt; se encuentra fácilmente entre las tres más
importantes. Nos permiten acceder en todo momento al mayor (o menor)
elemento en tiempo constante, O(1), mientras que insertar elementos
ocurre en tiempo logarítmico, O(log n). Las ramificaciones de estas
propiedades son inmensas, y —sin ir más lejos— es lo que subyace en el
algoritmo de ordenación &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Heapsort"&gt;heapsort&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Problemas que de otra forma serían intratables (ejemplo: “¿cuáles son
los &lt;em&gt;n&lt;/em&gt; menores elementos de este fichero con diez billones de
enteros?”) tienen una solución elegante y de apenas unas líneas de
código cuando podemos usar una heap. En esta charla vamos a incorporar
esta estructura de datos a nuestro arsenal, entender cómo funciona y
aprender a reconocer cuándo es la herramienta adecuada para enfrentarnos
a nuestro problema.&lt;/p&gt;
&lt;p&gt;Resumen esquemático de la charla:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Qué es una heap:&lt;ul&gt;
&lt;li&gt;Inserción: O(log n)&lt;/li&gt;
&lt;li&gt;Consultar la raíz: O(1)&lt;/li&gt;
&lt;li&gt;Borrado: O(log n)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Por qué importan y qué problema resuelven.&lt;/li&gt;
&lt;li&gt;Aplicaciones de una heap:&lt;ul&gt;
&lt;li&gt;Los &lt;em&gt;n&lt;/em&gt; menores elementos de un conjunto.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Heapsort"&gt;Heapsort&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Medianas.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Reconocer cuándo hemos de usar una heap.&lt;/li&gt;
&lt;li&gt;Dos opciones para la implementación:&lt;ul&gt;
&lt;li&gt;Árbol binario.&lt;/li&gt;
&lt;li&gt;Vector.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Heaps en Python: el módulo &lt;a class="reference external" href="https://docs.python.org/3/library/heapq.html"&gt;heapq&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Idea: encapsularlo en nuestra propia clase.&lt;/li&gt;
&lt;/ol&gt;
</summary></entry><entry><title>Sustituyendo Makefiles con Python y Luigi</title><link href="https://pyvideo.org/pycon-es-2018/sustituyendo-makefiles-con-python-y-luigi.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Javier Torres Niño</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/sustituyendo-makefiles-con-python-y-luigi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En CARTO utilizamos &lt;a class="reference external" href="https://github.com/spotify/luigi"&gt;Luigi&lt;/a&gt; para gestionar nuestros &lt;a class="reference external" href="https://github.com/CartoDB/bigmetadata/"&gt;pipelines de
ingestión de datos&lt;/a&gt;. Durante el camino hemos aprendido algunos trucos y
sorpresas que nos habría gustado conocer antes de decidirnos a
utilizarlo.&lt;/p&gt;
&lt;p&gt;La charla es una introducción a Luigi, centrándose en los pequeños pros
y contra que no vienen en el manual, pero que son importantes de cara a
saber si es una buena solución a tu problema. Compartiré algunos trucos
que hemos aprendido y, sobre todo, cómo no hacer las cosas para evitar
que Luigi se rebele contra nosotros.&lt;/p&gt;
</summary></entry><entry><title>Taking Django Async</title><link href="https://pyvideo.org/pycon-es-2018/taking-django-async.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Andrew Godwin</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/taking-django-async.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Django Channels project has taken a major turn with version 2.0, embracing Python's async functionality and building applications around an async event loop rather than worker processes. But why the big change? And what does it mean for Django?&lt;/p&gt;
&lt;p&gt;We'll look at the progress Channels is making in turning more of the request/response cycle into native async code - how far can we get down the stack before making APIs async becomes hard? Can we make it as far as the ORM? How do we bridge between Django's synchronous world and the async world when we do reach that boundary?&lt;/p&gt;
&lt;p&gt;We also take a look at how it's changed both Channels consumers, opening up the possibility of mixing async calls in with your synchronous code, and how it's changed what the ASGI spec looks like and what that might mean for adoption.&lt;/p&gt;
&lt;p&gt;And, finally, we'll look what's next for Django and Channels, and maybe how it will affect the Python web world as a whole.&lt;/p&gt;
</summary><category term="django async"></category></entry><entry><title>Twelve Factor app</title><link href="https://pyvideo.org/pycon-es-2018/twelve-factor-app.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Francisco José Fernández Naranjo</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/twelve-factor-app.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Twelve-Factor app es una metodología de desarrollo de aplicaciones y servicios web.&lt;/p&gt;
&lt;p&gt;Su objetivo es homogeneizar los procesos de diseño, implementación y despliegue de forma que interactúen correctamente con las nuevas soluciones disponibles basadas en contenedores y clusters autogestionados (Heroku, OpenShift…).&lt;/p&gt;
&lt;p&gt;Adicionalmente, genera una serie de beneficios inmediatos muy valiosos a nivel de DevOps.&lt;/p&gt;
&lt;p&gt;Aplicar la metodología “Twelve-Factor app” a Python es a veces es complicado y controvertido. En esta charla discutiremos los desafíos que esta forma de trabajar presenta.&lt;/p&gt;
</summary></entry><entry><title>Web scraping para principiantes</title><link href="https://pyvideo.org/pycon-es-2018/web-scraping-para-principiantes.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Sara Rodríguez López</name></author><id>tag:pyvideo.org,2018-10-06:pycon-es-2018/web-scraping-para-principiantes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;No siempre hay una API que nos facilite descargar datos de una web… ¡Pero hay alternativas! Aprenderemos Beautiful Soup, que nos facilita la vida y nos permite transformar la información desestructurada de los HTML en amigables tablas. Haremos unos primeros pinitos en Selenium, inicialmente creada para el testeo de web, pero que nos permite interaccionar con nuestro navegador y hacer web scraping dinámico. Después de esto ¡todos pensarán que haces magia!&lt;/p&gt;
</summary></entry><entry><title>VIDEO RESUMEN PYCONES 2018</title><link href="https://pyvideo.org/pycon-es-2018/video-resumen-pycones-2018.html" rel="alternate"></link><published>2018-10-05T00:00:00+00:00</published><updated>2018-10-05T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2018-10-05:pycon-es-2018/video-resumen-pycones-2018.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La PyConES es una conferencia de tres días de duración en la que se dan cita profesionales y entusiastas del lenguaje de programación Python que difunden su experiencia en varias sesiones de charlas técnicas. Por su naturaleza, la audiencia de la PyConES procede no sólo de sectores tecnológicos como desarrollo web, Business Intelligence o desarrollo de juegos sino también del mundo académico, siendo utilizado por multitud de profesores e investigadores.&lt;/p&gt;
</summary></entry></feed>