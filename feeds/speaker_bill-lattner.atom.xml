<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_bill-lattner.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-08-27T00:00:00+00:00</updated><entry><title>Deconstructing Feather</title><link href="https://pyvideo.org/pydata-chicago-2016/deconstructing-feather.html" rel="alternate"></link><published>2016-08-27T00:00:00+00:00</published><updated>2016-08-27T00:00:00+00:00</updated><author><name>Bill Lattner</name></author><id>tag:pyvideo.org,2016-08-27:pydata-chicago-2016/deconstructing-feather.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/wlattner/PyData_Chi_2016"&gt;https://github.com/wlattner/PyData_Chi_2016&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Feather, Avro, Parquet, Arrow... all these new file formats, what's wrong with good old CSVs? In this talk, we will cover why CSV files are not always the optimal storage format for tabular data and what optimizations each of these formats make. We will do a deep dive on Feather, a cross-language format created by Wes McKinney and Hadley Wickham.&lt;/p&gt;
</summary></entry><entry><title>Python and R Together at Last: Writing Cross Language Tools</title><link href="https://pyvideo.org/scipy-2016/python-and-r-together-at-last-writing-cross-language-tools-scipy-2016-bill-lattner.html" rel="alternate"></link><published>2016-07-14T00:00:00+00:00</published><updated>2016-07-14T00:00:00+00:00</updated><author><name>Bill Lattner</name></author><id>tag:pyvideo.org,2016-07-14:scipy-2016/python-and-r-together-at-last-writing-cross-language-tools-scipy-2016-bill-lattner.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Both Python and R boast large data science communities. Each have developed a fantastic collection of packages from reading/writing data to plotting and visualization. Unfortunately, some tools are only available in one language or the other, but not both. Python and R provide relatively simple mechanisms for interacting with C, C++, and Fortran. There are many tools that take advantage of this interoperability. While not a simple matter, developing data science tools in these low level languages and providing Python and R wrappers allows code reuse between languages, speed benefits notwithstanding. In this talk we will discuss strategies and lessons learned from porting existing packages to Python from R and writing cross language tools from scratch.&lt;/p&gt;
</summary><category term="SciPy 2016"></category></entry></feed>