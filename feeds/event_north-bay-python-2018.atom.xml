<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_north-bay-python-2018.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-11-04T00:00:00+00:00</updated><entry><title>2FA, WTF</title><link href="https://pyvideo.org/north-bay-python-2018/2fa-wtf.html" rel="alternate"></link><published>2018-11-04T00:00:00+00:00</published><updated>2018-11-04T00:00:00+00:00</updated><author><name>Kelley Robinson</name></author><id>tag:pyvideo.org,2018-11-04:north-bay-python-2018/2fa-wtf.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You may recognize Two-factor Authentication (2FA) as an additional
safeguard for protecting accounts, but do you really know how it works?
This talk will show you how to implement One Time Passwords (including
what's happening under the hood of those expiring tokens). You'll learn
the different approaches to implementing 2FA and have a better
understanding of what's right for your application.&lt;/p&gt;
</summary></entry><entry><title>Disambiguation, In-Jokes, and Name Collisions: What You Need to Know When Naming a Python Project</title><link href="https://pyvideo.org/north-bay-python-2018/disambiguation-in-jokes-and-name-collisions-what-you-need-to-know-when-naming-a-python-project.html" rel="alternate"></link><published>2018-11-04T00:00:00+00:00</published><updated>2018-11-04T00:00:00+00:00</updated><author><name>Thursday Bram</name></author><id>tag:pyvideo.org,2018-11-04:north-bay-python-2018/disambiguation-in-jokes-and-name-collisions-what-you-need-to-know-when-naming-a-python-project.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the hardest problems in programming is figuring out what to name
everything. In this talk, we'll cover Python naming schemas, potential
problem areas, and when to make a Monty Python reference.&lt;/p&gt;
</summary></entry><entry><title>Guide to Software Engineering for Visually Impaired</title><link href="https://pyvideo.org/north-bay-python-2018/guide-to-software-engineering-for-visually-impaired.html" rel="alternate"></link><published>2018-11-04T00:00:00+00:00</published><updated>2018-11-04T00:00:00+00:00</updated><author><name>Abrar Sheikh</name></author><id>tag:pyvideo.org,2018-11-04:north-bay-python-2018/guide-to-software-engineering-for-visually-impaired.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will look into a day in the life of a Software Engineer with limited
vision to Understand their difficulties at work and how they can
overcome those difficulties to become successful in their role.&lt;/p&gt;
</summary></entry><entry><title>Hi! My name is...</title><link href="https://pyvideo.org/north-bay-python-2018/hi-my-name-is.html" rel="alternate"></link><published>2018-11-04T00:00:00+00:00</published><updated>2018-11-04T00:00:00+00:00</updated><author><name>James Bennett</name></author><id>tag:pyvideo.org,2018-11-04:north-bay-python-2018/hi-my-name-is.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If XKCD’s “Little Bobby Tables” signed up for your website, what would
happen? What if someone tried to sign up as a user named
‘administrator’? Usernames may be more complex than you expect! Come
learn some of the ways they can be tricky or even dangerous, and how you
can protect your sites and your users.&lt;/p&gt;
</summary></entry><entry><title>Let The Computer Write The Tests</title><link href="https://pyvideo.org/north-bay-python-2018/let-the-computer-write-the-tests.html" rel="alternate"></link><published>2018-11-04T00:00:00+00:00</published><updated>2018-11-04T00:00:00+00:00</updated><author><name>Dan Crosta</name></author><id>tag:pyvideo.org,2018-11-04:north-bay-python-2018/let-the-computer-write-the-tests.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We don't like to admit it, but our code is riddled with bugs. Even for
very experienced developers, even if we've seen it all before, even on
the fifth time we've written an essentially identical function, our code
still has bugs. In this talk we'll look at a library that can
automatically uncover these bugs, and learn how to apply it to
real-world codebases to find and mediate these problems.&lt;/p&gt;
</summary></entry><entry><title>Map it with Python! Intro to GIS and Python mapping modules.</title><link href="https://pyvideo.org/north-bay-python-2018/map-it-with-python-intro-to-gis-and-python-mapping-modules.html" rel="alternate"></link><published>2018-11-04T00:00:00+00:00</published><updated>2018-11-04T00:00:00+00:00</updated><author><name>Christy Heaton</name></author><id>tag:pyvideo.org,2018-11-04:north-bay-python-2018/map-it-with-python-intro-to-gis-and-python-mapping-modules.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Maps are powerful tools that we use every day. Come learn about how
Python can be used to handle spatial data and create beautiful maps.&lt;/p&gt;
</summary></entry><entry><title>Memory Management in Python - The Basics</title><link href="https://pyvideo.org/north-bay-python-2018/memory-management-in-python-the-basics.html" rel="alternate"></link><published>2018-11-04T00:00:00+00:00</published><updated>2018-11-04T00:00:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:pyvideo.org,2018-11-04:north-bay-python-2018/memory-management-in-python-the-basics.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a new python developer, do you find memory management in Python
confusing? Come to this talk to learn about the basics of how Memory
Management works in Python. We'll cover the concepts of reference
counting, garbage collection, weak references, &lt;strong&gt;slots&lt;/strong&gt;, and the Global
Interpreter Lock.&lt;/p&gt;
</summary></entry><entry><title>Python on Windows is Okay, Actually</title><link href="https://pyvideo.org/north-bay-python-2018/python-on-windows-is-okay-actually.html" rel="alternate"></link><published>2018-11-04T00:00:00+00:00</published><updated>2018-11-04T00:00:00+00:00</updated><author><name>Steve Dower</name></author><id>tag:pyvideo.org,2018-11-04:north-bay-python-2018/python-on-windows-is-okay-actually.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Despite more than half of Python's users being on Windows, it is
generally believed that you can't do it. In this talk, I will provide an
overview of why it's not as bad as people think, and the specific things
you can do today to make sure your projects work well for ALL Python
users, no matter where they work.&lt;/p&gt;
</summary></entry><entry><title>Refactoring Code with the Standard Library</title><link href="https://pyvideo.org/north-bay-python-2018/refactoring-code-with-the-standard-library.html" rel="alternate"></link><published>2018-11-04T00:00:00+00:00</published><updated>2018-11-04T00:00:00+00:00</updated><author><name>John Reese</name></author><id>tag:pyvideo.org,2018-11-04:north-bay-python-2018/refactoring-code-with-the-standard-library.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What if you could refactor your entire code base, safely and
automatically? How much old code could you fix or replace if you didn't
worry about updating every reference by hand? I'll show you how a
concrete syntax tree (CST) can help you do just that using only the
standard Python library.&lt;/p&gt;
</summary></entry><entry><title>The Future of Programming: A Tragedy in Five Acts</title><link href="https://pyvideo.org/north-bay-python-2018/the-future-of-programming-a-tragedy-in-five-acts.html" rel="alternate"></link><published>2018-11-04T00:00:00+00:00</published><updated>2018-11-04T00:00:00+00:00</updated><author><name>Robert M. "r0ml" Lefkowitz</name></author><id>tag:pyvideo.org,2018-11-04:north-bay-python-2018/the-future-of-programming-a-tragedy-in-five-acts.html</id><summary type="html"></summary><category term="keynote"></category></entry><entry><title>Turbocharge your data science with Python AND R</title><link href="https://pyvideo.org/north-bay-python-2018/turbocharge-your-data-science-with-python-and-r.html" rel="alternate"></link><published>2018-11-04T00:00:00+00:00</published><updated>2018-11-04T00:00:00+00:00</updated><author><name>Kelli-Jean Chun</name></author><id>tag:pyvideo.org,2018-11-04:north-bay-python-2018/turbocharge-your-data-science-with-python-and-r.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When working with data, should you use Python or R? Why not use both? By
being language agnostic, you now have access to two great open source
languages. This makes it easier to find and use already built
modules/packages, which improves the speed, quality, and impact of your
results.&lt;/p&gt;
</summary></entry><entry><title>All in the timing: How side channel attacks work</title><link href="https://pyvideo.org/north-bay-python-2018/all-in-the-timing-how-side-channel-attacks-work.html" rel="alternate"></link><published>2018-11-03T00:00:00+00:00</published><updated>2018-11-03T00:00:00+00:00</updated><author><name>Philip James</name></author><id>tag:pyvideo.org,2018-11-03:north-bay-python-2018/all-in-the-timing-how-side-channel-attacks-work.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, you’ll learn about a category of security issue known as
side channel attacks. You’ll be amused to see how features like
automatic data compression, short-circuit execution, and deterministic
hashing can be abused to bypass security systems. No security background
knowledge is required. The talk assumes at least intermediate Python
experience.&lt;/p&gt;
</summary></entry><entry><title>Auditing Your Site for Accessibility: Now What?</title><link href="https://pyvideo.org/north-bay-python-2018/auditing-your-site-for-accessibility-now-what.html" rel="alternate"></link><published>2018-11-03T00:00:00+00:00</published><updated>2018-11-03T00:00:00+00:00</updated><author><name>Kat Passen</name></author><id>tag:pyvideo.org,2018-11-03:north-bay-python-2018/auditing-your-site-for-accessibility-now-what.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web accessibility is important - about 1 in 5 people in the United
States have some kind of disability, and not including them limits your
reach. But once you've heard about the basics, how do you get started?
In this talk, I'll walk you through the process of finding issues in
your site, and discuss processes to fix them.&lt;/p&gt;
</summary></entry><entry><title>Better Web Scraping Through Reverse Engineering AJAX Calls</title><link href="https://pyvideo.org/north-bay-python-2018/better-web-scraping-through-reverse-engineering-ajax-calls.html" rel="alternate"></link><published>2018-11-03T00:00:00+00:00</published><updated>2018-11-03T00:00:00+00:00</updated><author><name>Diego Berrocal</name></author><id>tag:pyvideo.org,2018-11-03:north-bay-python-2018/better-web-scraping-through-reverse-engineering-ajax-calls.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wished you could click a button and order a pizza? There
is a catch: your favorite pizzeria doesn’t have a button-to-order app,
its website is client-side rendered and doesn’t have a public developer
API. We’ll learn two ways to still get you that pizza, compare them and
learn when to use which.&lt;/p&gt;
</summary></entry><entry><title>Easier Classes: Python Classes Without All The Cruft</title><link href="https://pyvideo.org/north-bay-python-2018/easier-classes-python-classes-without-all-the-cruft.html" rel="alternate"></link><published>2018-11-03T00:00:00+00:00</published><updated>2018-11-03T00:00:00+00:00</updated><author><name>Trey Hunner</name></author><id>tag:pyvideo.org,2018-11-03:north-bay-python-2018/easier-classes-python-classes-without-all-the-cruft.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we'll take a look at how to cut down on the boilerplate
required in making a well-behaved Python class. We'll first see how to
make classes with proper string representations, comparability,
iterability, and immutability. Then we'll dive into helper tools
built-in to the standard library and available in third-party libraries.&lt;/p&gt;
</summary></entry><entry><title>¡Escuincla babosa!: Creating a telenovela script with a neural network</title><link href="https://pyvideo.org/north-bay-python-2018/escuincla-babosa-creating-a-telenovela-script-with-a-neural-network.html" rel="alternate"></link><published>2018-11-03T00:00:00+00:00</published><updated>2018-11-03T00:00:00+00:00</updated><author><name>Lorena Mesa</name></author><id>tag:pyvideo.org,2018-11-03:north-bay-python-2018/escuincla-babosa-creating-a-telenovela-script-with-a-neural-network.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Telenovelas, Spanish soap operas, are beloved for their over the top
drama (el drama es real) and complicated twists and turns. In this talk,
we'll look at some of the most popular telenovelas in recent years to
devise a common arch for a telenovela. Using this formula, we'll
determine if a recurring neural network is able to successfully produce
a telenovela script. If so, what would a telenovela&lt;/p&gt;
</summary></entry><entry><title>Exploration-Oriented Programming</title><link href="https://pyvideo.org/north-bay-python-2018/exploration-oriented-programming.html" rel="alternate"></link><published>2018-11-03T00:00:00+00:00</published><updated>2018-11-03T00:00:00+00:00</updated><author><name>Moshe Zadka</name></author><id>tag:pyvideo.org,2018-11-03:north-bay-python-2018/exploration-oriented-programming.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Can Jupyter change how we develop software? Instead of having an
edit-debug cycle, we can iterativey build up code snippets with
confidence, seeing how they process their inputs. Jupyter lets us refine
ideas in real time, integrating testing with development.
Exploration-oriented programming is developing inside an interactive
environment.&lt;/p&gt;
</summary></entry><entry><title>Packaging Django Apps for Distribution on PyPI</title><link href="https://pyvideo.org/north-bay-python-2018/packaging-django-apps-for-distribution-on-pypi.html" rel="alternate"></link><published>2018-11-03T00:00:00+00:00</published><updated>2018-11-03T00:00:00+00:00</updated><author><name>Laura Hampton</name></author><id>tag:pyvideo.org,2018-11-03:north-bay-python-2018/packaging-django-apps-for-distribution-on-pypi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django lets you to use apps installed with pip, but have you ever wanted
to package and distribute your own apps? In this talk, you will learn
about creating a Django app and packaging it for distribution on
Warehouse (the new PyPI). The talk will also discuss some best practices
for packaging.&lt;/p&gt;
</summary></entry><entry><title>Recursion for Beginners: A Beginner's Guide to Recursion</title><link href="https://pyvideo.org/north-bay-python-2018/recursion-for-beginners-a-beginners-guide-to-recursion.html" rel="alternate"></link><published>2018-11-03T00:00:00+00:00</published><updated>2018-11-03T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2018-11-03:north-bay-python-2018/recursion-for-beginners-a-beginners-guide-to-recursion.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Between unintelligible algorithms and beautiful fractal artwork,
recursion has an intimidating reputation. But the underlying ideas
behind it are simple. This tutorial presents a quick intro of recursive
code, Python's features for handling recursion, and drawing fractals
with the turtle module. If you've ever thought &amp;quot;recursion is confusing&amp;quot;,
this tutorial is for you.&lt;/p&gt;
</summary></entry><entry><title>Welcome to Jurassic Park: Where Chaos and Engineering Ethics Collide</title><link href="https://pyvideo.org/north-bay-python-2018/welcome-to-jurassic-park-where-chaos-and-engineering-ethics-collide.html" rel="alternate"></link><published>2018-11-03T00:00:00+00:00</published><updated>2018-11-03T00:00:00+00:00</updated><author><name>Hayley Denbraver</name></author><id>tag:pyvideo.org,2018-11-03:north-bay-python-2018/welcome-to-jurassic-park-where-chaos-and-engineering-ethics-collide.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Who would believe that theme park filled with genetically engineered
dinosaurs could have failed? Fragile software and the lead developer’s
deeply unethical behavior played a huge role in the downfall of this
amazing park. This talk will explore the relationship between
engineering ethics, chaos, and building resilient systems. Expect to
laugh, cry, and learn to build a better park.&lt;/p&gt;
</summary></entry><entry><title>What is a Python Core Developer?</title><link href="https://pyvideo.org/north-bay-python-2018/what-is-a-python-core-developer.html" rel="alternate"></link><published>2018-11-03T00:00:00+00:00</published><updated>2018-11-03T00:00:00+00:00</updated><author><name>Mariatta Wijaya</name></author><id>tag:pyvideo.org,2018-11-03:north-bay-python-2018/what-is-a-python-core-developer.html</id><summary type="html"></summary><category term="keynote"></category></entry><entry><title>What PHP learned from Python</title><link href="https://pyvideo.org/north-bay-python-2018/what-php-learned-from-python.html" rel="alternate"></link><published>2018-11-03T00:00:00+00:00</published><updated>2018-11-03T00:00:00+00:00</updated><author><name>Adam Harvey</name></author><id>tag:pyvideo.org,2018-11-03:north-bay-python-2018/what-php-learned-from-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In 2015, the PHP project released version 7.0 of the PHP language. This
was the culmination of years of discussion about the scope of the
version, and what we were willing to break. An advantage we had in PHP
was that Python had gone through a similar process with Python 3 seven
years earlier. I'll discuss the lessons we took from the Python 2-3
transition, and how we used them.&lt;/p&gt;
</summary></entry></feed>