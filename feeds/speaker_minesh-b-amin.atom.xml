<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_minesh-b-amin.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-03-14T00:00:00+00:00</updated><entry><title>48. Advanced Parallel Primitives in SPM.Python for Data and Graph Analytics</title><link href="https://pyvideo.org/pycon-us-2012/48-advanced-parallel-primitives-in-spmpython-fo.html" rel="alternate"></link><published>2012-03-11T00:00:00+00:00</published><updated>2012-03-11T00:00:00+00:00</updated><author><name>Minesh B Amin</name></author><id>tag:pyvideo.org,2012-03-11:pycon-us-2012/48-advanced-parallel-primitives-in-spmpython-fo.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Traditional solutions for data and graph analytics tend to be highly
fragmented, and take the form of stand-alone frameworks. In this poster
session, we shall describe our approach that is centered around a suite
of advanced parallel primitives embedded within SPM.Python. These
primitives augment the serial Python language with concepts like
parallel generators, emitters and exceptions.&lt;/p&gt;
</summary></entry><entry><title>Applied Parallel Computing with Python</title><link href="https://pyvideo.org/pycon-us-2013/applied-parallel-computing-with-python.html" rel="alternate"></link><published>2013-03-14T00:00:00+00:00</published><updated>2013-03-14T00:00:00+00:00</updated><author><name>Ian Ozsvald</name></author><id>tag:pyvideo.org,2013-03-14:pycon-us-2013/applied-parallel-computing-with-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this tutorial we shall review three different and distinct approaches
to parallel computing which can be used to solve problems in all manner
of domains, including machine learning, natural language processing,
finance, and computer vision. The first two approaches to be reviewed
will be embarrassingly parallel in nature while the third approach will
leverage fine-grain parallelism.&lt;/p&gt;
</summary><category term="tutorial"></category></entry></feed>