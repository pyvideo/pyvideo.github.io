<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Артем Малышев</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_artem-malyshev.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-06-22T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Правильные пчёлы</title><link href="https://pyvideo.org/pycon-belarus-2017/pravilnye-pchioly.html" rel="alternate"></link><published>2017-02-04T00:00:00+00:00</published><updated>2017-02-04T00:00:00+00:00</updated><author><name>Artem Malyshev</name></author><id>tag:pyvideo.org,2017-02-04:/pycon-belarus-2017/pravilnye-pchioly.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Доклад о многообещающем проекте BeeWare, который находится в стадии
интенсивной разработки. Если у вашей программы есть пользователи, то они
скорее всего хотят графический интерфейс. Причём хотят они его в родном
для платформы исполнении, будь то десктоп, браузер, телефон или умные
часы. Целью проекта BeeWare и является эта самая возможность …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Доклад о многообещающем проекте BeeWare, который находится в стадии
интенсивной разработки. Если у вашей программы есть пользователи, то они
скорее всего хотят графический интерфейс. Причём хотят они его в родном
для платформы исполнении, будь то десктоп, браузер, телефон или умные
часы. Целью проекта BeeWare и является эта самая возможность написания
изоморфных приложений на Python, используя предоставленные системой
возможности. О том как и почему устроен проект и пойдёт речь.&lt;/p&gt;
</content><category term="PyCon Belarus 2017"></category></entry><entry><title>Очереди задач без купюр</title><link href="https://pyvideo.org/pycon-russia-2016/ocheredi-zadach-bez-kupiur.html" rel="alternate"></link><published>2016-07-04T00:00:00+00:00</published><updated>2016-07-04T00:00:00+00:00</updated><author><name>Artem Malyshev</name></author><id>tag:pyvideo.org,2016-07-04:/pycon-russia-2016/ocheredi-zadach-bez-kupiur.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Так или иначе в любом сложном web приложении используются очереди задач. И так уж сложилось, что им положено быть распределёнными. В данный момент рынок решений для python разработчиков представляют 2 главных продукта - Celery и RQ.
В докладе я расскажу о внутреннем устройстве обеих систем. Поговорим о том, с какими …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Так или иначе в любом сложном web приложении используются очереди задач. И так уж сложилось, что им положено быть распределёнными. В данный момент рынок решений для python разработчиков представляют 2 главных продукта - Celery и RQ.
В докладе я расскажу о внутреннем устройстве обеих систем. Поговорим о том, с какими проблемами столкнулись их создатели, как их решили и чем эти решения грозят конечному пользователю. Как устроены группы, хорды и eta? Как добиться отказоустойчивости на транспортном уровне? Почему это тяжело масштабировать? На все эти вопросы я дам ответ в своём докладе.&lt;/p&gt;
</content><category term="PyCon Russia 2016"></category></entry><entry><title>How to write your own debugger</title><link href="https://pyvideo.org/pycon-russia-2017/how-to-write-your-own-debugger.html" rel="alternate"></link><published>2017-07-17T00:00:00+00:00</published><updated>2017-07-17T00:00:00+00:00</updated><author><name>Artem Malyshev</name></author><id>tag:pyvideo.org,2017-07-17:/pycon-russia-2017/how-to-write-your-own-debugger.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A very rare programmer doesn't need debugging tools. Change a variable value, look at program execution step by step, get the whole picture of the situation is extremely hard without Pdb. How were all these debuggers implemented? What underlying mechanisms are they use? What issues do they need to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A very rare programmer doesn't need debugging tools. Change a variable value, look at program execution step by step, get the whole picture of the situation is extremely hard without Pdb. How were all these debuggers implemented? What underlying mechanisms are they use? What issues do they need to solve? I will address all those questions in my talk.&lt;/p&gt;
</content><category term="PyCon Russia 2017"></category></entry><entry><title>Артем Малышев, drylabs.io «Инструменты Domain-driven design»</title><link href="https://pyvideo.org/pycon-russia-2019/artem-malyshev-drylabsio-instrumenty-domain-driven-design.html" rel="alternate"></link><published>2018-06-22T00:00:00+00:00</published><updated>2018-06-22T00:00:00+00:00</updated><author><name>Артем Малышев</name></author><id>tag:pyvideo.org,2018-06-22:/pycon-russia-2019/artem-malyshev-drylabsio-instrumenty-domain-driven-design.html</id><content type="html"></content><category term="PyCon Russia 2019"></category></entry></feed>