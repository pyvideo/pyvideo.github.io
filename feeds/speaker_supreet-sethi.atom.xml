<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_supreet-sethi.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-09-30T00:00:00+00:00</updated><entry><title>Mobile apps with Python, Quick! - Part 1</title><link href="https://pyvideo.org/pycon-india-2012/mobile-apps-with-python-quick-part-1.html" rel="alternate"></link><published>2012-09-30T00:00:00+00:00</published><updated>2012-09-30T00:00:00+00:00</updated><author><name>Supreet Sethi</name></author><id>tag:pyvideo.org,2012-09-30:pycon-india-2012/mobile-apps-with-python-quick-part-1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With &amp;quot;mobile first&amp;quot; as vision statement, we harness significant power of using Python and django to produce clean back-ends especially using django-piston as key library.
The Django framework is quite well known. It is a extremely quick and easy way to develop web sites and apps. Backed by strong developer community and wealth of knowledge available online, it is natural first choice for web-development. But in this case, we use it as an excellent web-app back-end which we drive a mobile front-end.
Sencha is fast becoming an important framework for developing mobile apps which runs elegantly on both Android and iPhone. With almost native API like look and feel, it works like a charm on Android and iPhone platform reducing development time dramatically.
I will try to address the classic problem of disconnect between mobile and web-apps. Putting the system of producing both within single development cycle. Using django-piston as center piece library. We will use extensively to create well defined APIs. These APIs will in turn be used with Sencha based front-ends.
Extending further we will take a look at integration testing of this framework towards creating a rock solid mobile experience. This will be followed by discussion on merits of using browser over native app frameworks.&lt;/p&gt;
</summary><category term="mobile"></category><category term="mobile first"></category><category term="sencha"></category><category term="django"></category></entry><entry><title>Mobile apps with Python, Quick! - Part 2</title><link href="https://pyvideo.org/pycon-india-2012/mobile-apps-with-python-quick-part-2.html" rel="alternate"></link><published>2012-09-30T00:00:00+00:00</published><updated>2012-09-30T00:00:00+00:00</updated><author><name>Supreet Sethi</name></author><id>tag:pyvideo.org,2012-09-30:pycon-india-2012/mobile-apps-with-python-quick-part-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With &amp;quot;mobile first&amp;quot; as vision statement, we harness significant power of using Python and django to produce clean back-ends especially using django-piston as key library.
The Django framework is quite well known. It is a extremely quick and easy way to develop web sites and apps. Backed by strong developer community and wealth of knowledge available online, it is natural first choice for web-development. But in this case, we use it as an excellent web-app back-end which we drive a mobile front-end.
Sencha is fast becoming an important framework for developing mobile apps which runs elegantly on both Android and iPhone. With almost native API like look and feel, it works like a charm on Android and iPhone platform reducing development time dramatically.
I will try to address the classic problem of disconnect between mobile and web-apps. Putting the system of producing both within single development cycle. Using django-piston as center piece library. We will use extensively to create well defined APIs. These APIs will in turn be used with Sencha based front-ends.
Extending further we will take a look at integration testing of this framework towards creating a rock solid mobile experience. This will be followed by discussion on merits of using browser over native app frameworks.&lt;/p&gt;
</summary><category term="mobile"></category><category term="mobile first"></category><category term="sencha"></category><category term="django"></category></entry><entry><title>Mobile apps with Python, Quick! - Part 3</title><link href="https://pyvideo.org/pycon-india-2012/mobile-apps-with-python-quick-part-3.html" rel="alternate"></link><published>2012-09-30T00:00:00+00:00</published><updated>2012-09-30T00:00:00+00:00</updated><author><name>Supreet Sethi</name></author><id>tag:pyvideo.org,2012-09-30:pycon-india-2012/mobile-apps-with-python-quick-part-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With &amp;quot;mobile first&amp;quot; as vision statement, we harness significant power of using Python and django to produce clean back-ends especially using django-piston as key library.
The Django framework is quite well known. It is a extremely quick and easy way to develop web sites and apps. Backed by strong developer community and wealth of knowledge available online, it is natural first choice for web-development. But in this case, we use it as an excellent web-app back-end which we drive a mobile front-end.
Sencha is fast becoming an important framework for developing mobile apps which runs elegantly on both Android and iPhone. With almost native API like look and feel, it works like a charm on Android and iPhone platform reducing development time dramatically.
I will try to address the classic problem of disconnect between mobile and web-apps. Putting the system of producing both within single development cycle. Using django-piston as center piece library. We will use extensively to create well defined APIs. These APIs will in turn be used with Sencha based front-ends.
Extending further we will take a look at integration testing of this framework towards creating a rock solid mobile experience. This will be followed by discussion on merits of using browser over native app frameworks.&lt;/p&gt;
</summary><category term="mobile"></category><category term="mobile first"></category><category term="sencha"></category><category term="django"></category></entry><entry><title>Mobile apps with Python, Quick! - part4</title><link href="https://pyvideo.org/pycon-india-2012/mobile-apps-with-python-quick-part4.html" rel="alternate"></link><published>2012-09-30T00:00:00+00:00</published><updated>2012-09-30T00:00:00+00:00</updated><author><name>Supreet Sethi</name></author><id>tag:pyvideo.org,2012-09-30:pycon-india-2012/mobile-apps-with-python-quick-part4.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With &amp;quot;mobile first&amp;quot; as vision statement, we harness significant power of using Python and django to produce clean back-ends especially using django-piston as key library.
The Django framework is quite well known. It is a extremely quick and easy way to develop web sites and apps. Backed by strong developer community and wealth of knowledge available online, it is natural first choice for web-development. But in this case, we use it as an excellent web-app back-end which we drive a mobile front-end.
Sencha is fast becoming an important framework for developing mobile apps which runs elegantly on both Android and iPhone. With almost native API like look and feel, it works like a charm on Android and iPhone platform reducing development time dramatically.
I will try to address the classic problem of disconnect between mobile and web-apps. Putting the system of producing both within single development cycle. Using django-piston as center piece library. We will use extensively to create well defined APIs. These APIs will in turn be used with Sencha based front-ends.
Extending further we will take a look at integration testing of this framework towards creating a rock solid mobile experience. This will be followed by discussion on merits of using browser over native app frameworks.&lt;/p&gt;
</summary><category term="mobile"></category><category term="mobile first"></category><category term="sencha"></category><category term="django"></category></entry></feed>