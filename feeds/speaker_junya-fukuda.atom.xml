<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Junya Fukuda</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_junya-fukuda.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-05-18T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Event-Driven asyncio: A Case Study of Trio's API</title><link href="https://pyvideo.org/pycon-us-2024/event-driven-asyncio-a-case-study-of-trios-api.html" rel="alternate"></link><published>2024-05-18T00:00:00+00:00</published><updated>2024-05-18T00:00:00+00:00</updated><author><name>Junya Fukuda</name></author><id>tag:pyvideo.org,2024-05-18:/pycon-us-2024/event-driven-asyncio-a-case-study-of-trios-api.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Asyncio is highly efficient in operating within a single thread, making
it exceptionally well-suited for environments with limited resources.&lt;/p&gt;
&lt;p&gt;In our product, we leverage Python's asynchronous capabilities to
streamline the decision-making processes of &lt;strong&gt;our robots&lt;/strong&gt;. I will
individually introduce &lt;strong&gt;trio&lt;/strong&gt; and &lt;strong&gt;trio-util&lt;/strong&gt;, as well as anyio and
asyncio, in â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Asyncio is highly efficient in operating within a single thread, making
it exceptionally well-suited for environments with limited resources.&lt;/p&gt;
&lt;p&gt;In our product, we leverage Python's asynchronous capabilities to
streamline the decision-making processes of &lt;strong&gt;our robots&lt;/strong&gt;. I will
individually introduce &lt;strong&gt;trio&lt;/strong&gt; and &lt;strong&gt;trio-util&lt;/strong&gt;, as well as anyio and
asyncio, in the presentation.&lt;/p&gt;
</content><category term="PyCon US 2024"></category></entry></feed>