<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_pyrobuf.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-08-15T00:00:00+00:00</updated><entry><title>Pyrobuf and the Tyranny of Speed</title><link href="https://pyvideo.org/pycon-au-2016/pyrobuf-and-the-tyranny-of-speed.html" rel="alternate"></link><published>2016-08-15T00:00:00+00:00</published><updated>2016-08-15T00:00:00+00:00</updated><author><name>Gregory Saunders</name></author><id>tag:pyvideo.org,2016-08-15:pycon-au-2016/pyrobuf-and-the-tyranny-of-speed.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Gregory Saunders
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/171/view_talk"&gt;https://2016.pycon-au.org/schedule/171/view_talk&lt;/a&gt;
The data structures used to represent information and program state in memory are rarely conducive to the storage and transmission of that information and state. The process of translating those data structures into a format better suited to storage is known as serialisation or marshalling.&lt;/p&gt;
&lt;p&gt;Google’s Protobuf is a mechanism for serialising and deserialising structured data. Pyrobuf is a alternative, lightning-fast, implementation of Protobuf written in Cython that is 2-4 times faster than Protobuf when using its C++ backend and 20-40 times faster than its pure Python implementation.&lt;/p&gt;
&lt;p&gt;In this talk we’ll briefly review Protobuf and compare it to other well known serialisation mechanisms such as XML and JSON. We’ll then take a look at Pyrobuf and the basic strategies it uses to achieve significantly better performance.&lt;/p&gt;
&lt;p&gt;Pyrobuf’s main claim to fame is its speed. This makes fixing bugs and adding new features a real challenge as any degradation in performance will not be well-received by users who’ve come to expect and rely on its speed. Therefore, for the remainder of the talk we’ll discuss tricks and tips, some more legitimate than others, for maintaining speed as new features are added.&lt;/p&gt;
</summary><category term="pyrobuf"></category></entry></feed>