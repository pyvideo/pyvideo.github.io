<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_matchpy.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-07-18T00:00:00+00:00</updated><entry><title>MatchPy A Pattern Matching Library</title><link href="https://pyvideo.org/scipy-2017/matchpy-a-pattern-matching-library.html" rel="alternate"></link><published>2017-07-18T00:00:00+00:00</published><updated>2017-07-18T00:00:00+00:00</updated><author><name>Manuel Krebber</name></author><id>tag:pyvideo.org,2017-07-18:scipy-2017/matchpy-a-pattern-matching-library.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pattern matching is a powerful tool for symbolic computations, based on the well-defined theory of term rewriting systems.
Application domains include algebraic expressions, abstract syntax trees or XML and JSON data.
Unfortunately, no implementations of pattern matching as general and flexible as in Mathematica exists for Python.
In this talk, we introduce the open source module MatchPy (&lt;a class="reference external" href="https://github.com/HPAC/matchpy"&gt;https://github.com/HPAC/matchpy&lt;/a&gt;), which offers this functionality in Python.
In addition, we implemented a novel algorithm which finds matches for large pattern sets more efficiently by exploiting similarities between patterns.
We will demonstrate how MatchPy can be used with example from the linear algebra domain.&lt;/p&gt;
</summary><category term="matchpy"></category></entry></feed>