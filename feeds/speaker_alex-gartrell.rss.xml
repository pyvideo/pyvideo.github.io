<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 20 May 2017 00:00:00 +0000</lastBuildDate><item><title>Executing python functions in the linux kernel by transpiling to bpf</title><link>https://pyvideo.org/pycon-us-2017/executing-python-functions-in-the-linux-kernel-by-transpiling-to-bpf.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;ebpf&lt;/tt&gt; is a linux kernel byte-code which can be used for functionality
ranging from tracing system calls with kprobe to routing packets with
tc. This talk is about a pure-python front-end for ebpf that allows
users to write simple python functions to be executed in the kernel.
I'll first explain how this was made to work and then I'll show off some
of the features/capabilities of this approach with working examples.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Gartrell</dc:creator><pubDate>Sat, 20 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-20:pycon-us-2017/executing-python-functions-in-the-linux-kernel-by-transpiling-to-bpf.html</guid></item></channel></rss>