<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Maari Tamm</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 23 Oct 2021 00:00:00 +0000</lastBuildDate><item><title>Putting a shell or a desktop in your Django app</title><link>https://pyvideo.org/djangocon-europe-2021/putting-a-shell-or-a-desktop-in-your-django-app.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In our City Cloud Academy (&lt;a class="reference external" href="https://academy.citycloud.com"&gt;https://academy.citycloud.com&lt;/a&gt;) learning platform, we enable learners to interact with real-world hands-on lab environments, so that they can learn complex technologies like OpenStack, Kubernetes, Terraform, Ceph, Ansible, and others. To do that, we use Apache Guacamole (&lt;a class="reference external" href="https://guacamole.apache.org/)'s"&gt;https://guacamole.apache.org/)'s&lt;/a&gt; &lt;cite&gt;guacd&lt;/cite&gt; service to provide learners with interactive shell terminals — or even full desktop environments — that run right in people's browsers, no additional software required.&lt;/p&gt;
&lt;p&gt;The Guacamole platform is normally deployed in conjunction with a Java servlet environment (&lt;a class="reference external" href="https://guacamole.apache.org/doc/gug/guacamole-architecture.html#web-application"&gt;https://guacamole.apache.org/doc/gug/guacamole-architecture.html#web-application&lt;/a&gt;) (commonly Apache Tomcat). But the Guacamole protocol is not tied to the Java language in any way, and a Python websocket proxy (pyguacamole (&lt;a class="reference external" href="https://pypi.org/project/pyguacamole/"&gt;https://pypi.org/project/pyguacamole/&lt;/a&gt;)) is readily available under an open source (MIT) license.&lt;/p&gt;
&lt;p&gt;In this talk, we discuss how we implemented a learning platform (based on Open edX (&lt;a class="reference external" href="https://open.edx.org"&gt;https://open.edx.org&lt;/a&gt;)) that deploys an ASGI service under Daphne (&lt;a class="reference external" href="https://docs.djangoproject.com/en/3.1/howto/deployment/asgi/daphne/"&gt;https://docs.djangoproject.com/en/3.1/howto/deployment/asgi/daphne/&lt;/a&gt;), uses pyguacamole to provide an asynchronous websocket connection to a Guacamole service, and thus creates a highly scalable, interactive, and immersive learning environment that helps people learn complex technology with no hardware or cloud investment at all.&lt;/p&gt;
&lt;p&gt;## Slides&lt;/p&gt;
&lt;p&gt;The slides (with full speaker notes) are up at &lt;a class="reference external" href="https://fghaas.github.io/djceu2021"&gt;https://fghaas.github.io/djceu2021&lt;/a&gt; and &lt;a class="reference external" href="https://mrtmm.github.io/djceu2021"&gt;https://mrtmm.github.io/djceu2021&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Maari Tamm</dc:creator><pubDate>Fri, 04 Jun 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-06-04:/djangocon-europe-2021/putting-a-shell-or-a-desktop-in-your-django-app.html</guid><category>DjangoCon Europe 2021</category><category>Django</category><category>DjangoConEU</category><category>djangoconeu2021</category></item><item><title>Get interactive! Putting a shell (or a desktop) in your Django app</title><link>https://pyvideo.org/djangocon-us-2021/get-interactive-putting-a-shell-or-a-desktop-in-your-django-app.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In our learning platform, we enable learners to interact with real-world hands-on lab environments, so that they can learn complex technologies like OpenStack, Kubernetes, Terraform, Ceph, Ansible, and others. To do that, we use [Apache Guacamole](&lt;a class="reference external" href="https://guacamole.apache.org/)'s"&gt;https://guacamole.apache.org/)'s&lt;/a&gt; &lt;cite&gt;guacd&lt;/cite&gt; service to provide learners with interactive shell terminals — or even full desktop environments — that run right in people's browsers, no additional software required.&lt;/p&gt;
&lt;p&gt;The Guacamole platform is normally deployed in conjunction with [a Java servlet environment](&lt;a class="reference external" href="https://guacamole.apache.org/doc/gug/guacamole-architecture.html#web-application"&gt;https://guacamole.apache.org/doc/gug/guacamole-architecture.html#web-application&lt;/a&gt;) (commonly Apache Tomcat). But the Guacamole protocol is not tied to the Java language in any way, and a Python websocket proxy ([pyguacamole](&lt;a class="reference external" href="https://pypi.org/project/pyguacamole/"&gt;https://pypi.org/project/pyguacamole/&lt;/a&gt;)) is readily available under an open source (MIT) license.&lt;/p&gt;
&lt;p&gt;In this talk, I will discuss how we implemented a learning platform (based on [Open edX](&lt;a class="reference external" href="https://open.edx.org"&gt;https://open.edx.org&lt;/a&gt;)) that deploys an ASGI service under [Daphne](&lt;a class="reference external" href="https://docs.djangoproject.com/en/3.1/howto/deployment/asgi/daphne/"&gt;https://docs.djangoproject.com/en/3.1/howto/deployment/asgi/daphne/&lt;/a&gt;), uses pyguacamole to provide an asynchronous websocket connection to a Guacamole service, and thus creates a highly scalable, interactive, and immersive learning environment that helps people learn complex technology with no hardware or cloud investment at all.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Maari Tamm</dc:creator><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-10-23:/djangocon-us-2021/get-interactive-putting-a-shell-or-a-desktop-in-your-django-app.html</guid><category>DjangoCon US 2021</category></item></channel></rss>