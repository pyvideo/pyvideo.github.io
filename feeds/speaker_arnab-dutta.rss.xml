<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 06 Jul 2018 00:00:00 +0000</lastBuildDate><item><title>Search Relevance: A/B testing to Reinforcement Learning</title><link>https://pyvideo.org/pydata-berlin-2018/search-relevance-ab-testing-to-reinforcement-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In order to achieve optimal ranking algorithm in an e-commerce platform,
a single algorithm might fall short in order to achieve the desired
results. We compare and contrast, A/B testing and reinforcement learning
based techniques in our search for optimal algorithm.&lt;/p&gt;
&lt;p&gt;This is the &lt;a class="reference external" href="https://github.com/kraktos/MAB"&gt;Tutorial Repo Link&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Arnab Dutta</dc:creator><pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-06:pydata-berlin-2018/search-relevance-ab-testing-to-reinforcement-learning.html</guid></item><item><title>“Which car fits my life?” - mobile.de’s approach to recommendations</title><link>https://pyvideo.org/pydata-berlin-2017/which-car-fits-my-life-mobiledes-approach-to-recommendations.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As Germany’s largest online vehicle marketplace mobile.de uses recommendations at scale to help users find the perfect car. We elaborate on collaborative &amp;amp; content-based filtering as well as a hybrid approach addressing the problem of a fast-changing inventory. We then dive into the technical implementation of the recommendation engine, outlining the various challenges faced and experiences made.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;At mobile.de, Germany’s biggest car marketplace, a dedicated team of data engineers and scientists, supported by the IT project house inovex is responsible for creating intelligent data products. Driven by our company slogan “Find the car that fits your life”, we focus on personalised recommendations to address several user needs. Thereby we improve customer experience during browsing as well as finding the perfect offering. In an introduction to recommendation systems, we briefly mention the traditional approaches for recommendation engines, thereby motivating the need for sophisticated approaches. In particular, we explain the different concepts including collaborative and content-based filtering as well as hybrid approaches and general matrix factorisation methods. This is followed by a deep dive into the implementation and architecture at mobile.de that comprises ElasticSearch, Cassandra and Mahout. We explain how Python and Java is used simultaneously to create and serve recommendations.&lt;/p&gt;
&lt;p&gt;By presenting our car-model recommender that suggests similar car models of different brands as a concrete use-case, we reiterate on key-aspects during modelling and implementation. In particular, we present a matrix factorisation library that we used and share our experiences with it. We conclude by a brief demonstration of our results and discuss the improvements we achieved in terms of key performance indicators. Furthermore, we use our use case to exemplify the usage of deep learning for recommendations, comparing it with other traditional approaches and hence providing a brief account of the future of recommendation engines.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Wilhelm</dc:creator><pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-30:pydata-berlin-2017/which-car-fits-my-life-mobiledes-approach-to-recommendations.html</guid></item><item><title>Smart Banking - Real Time Driven</title><link>https://pyvideo.org/pydata-berlin-2016/smart-banking-real-time-driven.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Berlin 2016&lt;/p&gt;
&lt;p&gt;Harnessing the power of machine intelligence to empower users with advanced and smarter banking solutions.&lt;/p&gt;
&lt;p&gt;Banking has been the one of the most ancient professions for humans. Yet, when it comes to advanced or smart banking solutions we haven’t experienced a radical shift even in the 21st century.&lt;/p&gt;
&lt;p&gt;We, at Number26, aim to enrich that experience and provide an advanced, mobile banking platform for our customers. Each of our features, revolves around users - their interests and personal preferences.
We achieve such flexibility by the use of state-of-the-art machine learning and statistical learning methodologies.&lt;/p&gt;
&lt;p&gt;In particular, we would like to present a deeper insight into two major features we use in our product:&lt;/p&gt;
&lt;ol class="loweralpha simple"&gt;
&lt;li&gt;automatic real time categorisation of transactions: how we combine the power of the cloud computing service (AWS), with the intelligence of machine learning based models to achieve this&lt;/li&gt;
&lt;li&gt;predictive modelling of users future financial status: how artificial neural networks do the smart thinking for our users to come up his predicted personal finances.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The tech stack ranges from Python (Keras, scikit-learn and more), Dockers, AWS lambda, EBS, NLP (stanford nltk) and machine learning classifiers and more.&lt;/p&gt;
&lt;p&gt;In this presentation, we would like to make the message clear, how machine learning can make even the age old traditional ways of banking a fun.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Arnab Dutta</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pydata-berlin-2016/smart-banking-real-time-driven.html</guid></item></channel></rss>