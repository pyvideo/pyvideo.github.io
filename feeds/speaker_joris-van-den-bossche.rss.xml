<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 04 Sep 2019 00:00:00 +0000</lastBuildDate><item><title>Apache Arrow: a cross-language development platform for in-memory data</title><link>https://pyvideo.org/euroscipy-2019/apache-arrow-a-cross-language-development-platform-for-in-memory-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk discusses Apache Arrow project and how it already interacts
with the Python ecosystem.&lt;/p&gt;
&lt;p&gt;The Apache Arrow project specifies a standardized language-independent
columnar memory format for flat and nested data, organized for efficient
analytic operations on modern hardware. On top of that standard, it
provides computational libraries and zero-copy streaming messaging and
interprocess communication protocols, and as such, it provides a
cross-language development platform for in-memory data. It has support
for many languages, including C, C++, Java, JavaScript, MATLAB, Python,
R, Rust, ..&lt;/p&gt;
&lt;p&gt;The Apache Arrow project, although still in active development, has
already several applications in the Python ecosystem. For example, it
provides the IO functionality for pandas to read the Parquet format (a
columnar, binary file format used a lot in the Hadoop ecosystem). Thanks
to the standard memory format, it can help improve interoperability
between systems, and this is already seen in practice for the Spark /
Python interface, by increasing the performance of PySpark. Further, it
has the potential to provide a more performant string data type and
nested data types (like dicts or lists) for Pandas dataframes, which is
already being experimented with in the fletcher package (using the
pandas ExtensionArray interface).&lt;/p&gt;
&lt;p&gt;Apache Arrow, defining a columnar, in-memory data format standard and
communication protocols, provides a cross-language development platform
with already several applications in the PyData ecosystem.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joris Van den Bossche</dc:creator><pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-09-04:euroscipy-2019/apache-arrow-a-cross-language-development-platform-for-in-memory-data.html</guid></item><item><title>The Rapid Analytics and Model Prototyping (RAMP) framework: tools for collaborative data science challenges</title><link>https://pyvideo.org/euroscipy-2019/the-rapid-analytics-and-model-prototyping-ramp-framework-tools-for-collaborative-data-science-challenges.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will give an overview of the RAMP framework, which provides a
platform to organize reproducible and transparent data challenges.&lt;/p&gt;
&lt;p&gt;RAMP workflow is a python package used to define and formalize the data
science problem to be solved. It can be used as a standalone package and
allows a user to prototype different solutions. In addition to RAMP
workflow, a set of packages have been developed allowing to share and
collaborate around the developer solutions. Therefore, RAMP database
provides a database structure to store the solutions of different users
and the performance of these solutions. RAMP engine is the package to
run the user solutions (possibly on the cloud) and populate the
database. Finally, RAMP frontend is the web frontend where users can
upload their solutions and which shows the leaderboard of the challenge.&lt;/p&gt;
&lt;p&gt;The project is open-source and can be deployed on any local server. The
framework has been used at the Paris-Saclay Center for Data Science for
setting up and solving about twenty scientific problems, for organizing
collaborative data challenges, for organizing scientific sub-communities
around these events, and for training novice data scientists.&lt;/p&gt;
&lt;p&gt;The RAMP (Rapid Analytics and Model Prototyping) framework provides a
platform to organize reproducible and transparent data challenges. We
will present the different framework bricks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guillaume Lemaitre</dc:creator><pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-09-04:euroscipy-2019/the-rapid-analytics-and-model-prototyping-ramp-framework-tools-for-collaborative-data-science-challenges.html</guid></item><item><title>scikit-learn and Tabular Data: Closing the Gap</title><link>https://pyvideo.org/scipy-2018/scikit-learn-and-tabular-data-closing-the-gap.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scikit-learn traditionally centered its data model around numpy arrays.
However, in an important subset of scikit-learn's use cases, the
original data in the machine learning pipeline is tabular:
heterogeneously typed and labeled. In the meantime, pandas has become
very popular, and increasingly used to represent such tabular data, but
scikit-learn does not always play well with heterogeneous DataFrames.
This talk will give an overview of the challenges and current
bottlenecks when working with tabular data and scikit- learn. Then it
will show the ungoing developments in sckikit-learn to improve this
situation and highlight some third-party libraries that try to ease
those problems.Presenter(s): Speaker: Joris Van den Bossche, Université
Paris-Saclay Center for Data Science&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joris Van den Bossche</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/scikit-learn-and-tabular-data-closing-the-gap.html</guid></item><item><title>Introduction to Geospatial Data Analysis with Python</title><link>https://pyvideo.org/scipy-2018/introduction-to-geospatial-data-analysis-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to geospatial data analysis in Python,
with a focus on tabular vector data. It is the first part in a series of
two tutorials; this part focuses on introducing the participants to the
different libraries to work with geospatial data and will cover munging
geo-data and exploring relations over space. This includes importing
data in different formats (e.g. shapefile, GeoJSON), visualizing,
combining and tidying them up for analysis, and will use libraries such
as &lt;tt class="docutils literal"&gt;pandas&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;geopandas&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;shapely&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;PySAL&lt;/tt&gt;, or &lt;tt class="docutils literal"&gt;rasterio&lt;/tt&gt;.
The second part will built upon this and focus on more more advanced
geographic data science and statistical methods to gain insight from the
data. No previous experience with those geospatial python libraries is
needed, but basic familiarity with geospatial data and concepts
(shapefiles, vector vs raster data) and pandas will be
helpful.Presenter(s): Speaker: Serge Rey, University of California,
Riverside Speaker: Dani Arribas- Bel, University of Liverpool Speaker:
Joris Van den Bossche, Université Paris- Saclay Center for Data Science
Speaker: Levi Wolf, University of Bristol&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Serge Rey</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/introduction-to-geospatial-data-analysis-with-python.html</guid><category>tutorial</category></item><item><title>pandas .head() to .tail() (Beginner Level)</title><link>https://pyvideo.org/scipy-2018/pandas-head-to-tail-beginner-level.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to pandas, a library providing data
structures and algorithms for tabular data analysis. It's aimed at
scientists and data analysts new to scientific Python. No previous
experience with pandas is expected. Familiarity with the basics of
Python will be helpful. We'll work through a series of Jupyter notebooks
together, with an emphasis on solving realistic problems as exercises.
We'll cover 1. A definition of tabular data and pandas' data structures
for tabular data 2. How pandas' alignment by row and column labels
simplifies data analysis 3. groupby for analyzing subsets of a table
grouped by some common factor 4. Tidy data: how to structure your data
to facilitate analysis. 5. Performance: How to benchmark and profile
code, and some common pandas performance pitfalls 6. pandas' special
support for time-series data.Presenter(s): Speaker: Dillon Niederhut,
Enthought Speaker: Tom Augspurger, Anaconda, Inc. Speaker: Joris Van den
Bossche, Université Paris-Saclay Center for Data Science&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dillon Niederhut</dc:creator><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-10:scipy-2018/pandas-head-to-tail-beginner-level.html</guid></item><item><title>GeoPandas - geospatial data in Python made easy</title><link>https://pyvideo.org/euroscipy-2017/geopandas-geospatial-data-in-python-made-easy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The goal of GeoPandas is to make working with geospatial data in python easier. GeoPandas extends the pandas data analysis library to work with geographic objects and spatial operations.&lt;/p&gt;
&lt;p&gt;It combines the capabilities of pandas and shapely, providing geospatial operations in pandas and a high-level interface to multiple geometries to shapely. It further builds upon the capabilities of many other libraries including fiona (reading/writing data), pyproj (projections), rtree (spatial index), ... GeoPandas enables you to easily do operations in python that would otherwise require a spatial database such as PostGIS.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joris Van den Bossche</dc:creator><pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-31:euroscipy-2017/geopandas-geospatial-data-in-python-made-easy.html</guid></item><item><title>Pandas</title><link>https://pyvideo.org/euroscipy-2017/pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is nowadays the library of choice for manipulating and analysing structured data, providing high-performance, easy-to-use data structures and data analysis tools.&lt;/p&gt;
&lt;p&gt;This hands-on tutorial will give a basic introduction to pandas, guide you through the different data structures and its manipulation, explaining the the key concepts and defining features. No prior knowledge about pandas is required.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joris Van den Bossche</dc:creator><pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-31:euroscipy-2017/pandas.html</guid><category>tutorial</category><category>pandas</category></item><item><title>Advanced data wrangling with pandas</title><link>https://pyvideo.org/euroscipy-2017/advanced-data-wrangling-with-pandas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is nowadays the library of choice for manipulating and analysing structured data, providing high-performance, easy-to-use data structures and data analysis tools.&lt;/p&gt;
&lt;p&gt;In this hands-on tutorial on using pandas for data analysis, you will be guided through some of the powerful methods and concepts in pandas, including time series manipulation (resampling and rolling operations), groupby operations, reshaping with stack/unstack/pivot, …&lt;/p&gt;
&lt;p&gt;Basic familiarity with pandas data structures (Series/DataFrame) is assumed.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joris Van den Bossche</dc:creator><pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-30:euroscipy-2017/advanced-data-wrangling-with-pandas.html</guid><category>tutorial</category></item><item><title>Pandas: what’s new and what’s coming</title><link>https://pyvideo.org/pyparis-2017/pandas-whats-new-and-whats-coming.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Overview of what’s happening in the latest releases of pandas and where
we are heading to.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joris Van den Bossche</dc:creator><pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-12:pyparis-2017/pandas-whats-new-and-whats-coming.html</guid></item><item><title>Introduction to Pandas</title><link>https://pyvideo.org/pydata-paris-2015/introduction-to-pandas-0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is becoming the fundamental library for manipulating and
analyzing structured data, providing high-performance, easy-to-use data
structures and data analysis tools. This talk will give a basic
introduction to pandas, explaining the key concepts and defining
features.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joris Van Den Bossche</dc:creator><pubDate>Mon, 13 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-13:pydata-paris-2015/introduction-to-pandas-0.html</guid></item></channel></rss>