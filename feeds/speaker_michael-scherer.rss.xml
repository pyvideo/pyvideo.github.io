<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 12 Mar 2016 00:00:00 +0000</lastBuildDate><item><title>Python application security auditing with bandit</title><link>https://pyvideo.org/pycon-sk-2016/python-application-security-auditing-with-bandit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While more and more code is written and connected on the internet,
security has never been so important for software. However, security is
often relegated as a 2nd thought and solution to scale it had to be
found by the industry theses days.&lt;/p&gt;
&lt;p&gt;A proven strategy is to use automatic static code analysis, a technique
applied by tools such as Coverty or Clang, and mostly used for C code.&lt;/p&gt;
&lt;p&gt;But not all software is written in C, so this talk will present bandit,
a tool to detect dangerous python code, and will explain the different
types of flaws developers have to keep in mind when writing code, and
why static code analysis is not a silver bullet, but just one of the
numerous way we can improve security.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Scherer</dc:creator><pubDate>Sat, 12 Mar 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-03-12:pycon-sk-2016/python-application-security-auditing-with-bandit.html</guid></item><item><title>Audit de sécurité d'application python avec Bandit</title><link>https://pyvideo.org/pycon-fr-2015/audit-de-securite-dapplication-python-avec-bandit.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Pour être riche et célèbre, vous pouvez travailler beaucoup, gagner au
loto, ou naitre riche. Mais maintenant, une autre voie est possible
grâce à Bandit, un outil de la fondation openstack pour analyser le code
source d'application python afin de trouver des failles de sécurité.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;À travers ce talk, découvrez comment Bandit facilite l'audit de code,
quel type de failles courantes est ce qu'il va remonter et ce qu'il faut
faire si ça arrive, et quoi regarder après le passage de l'outil.&lt;/p&gt;
&lt;p&gt;Et comment trouver une faille peut ouvrir les portes de la gloire et de
la fortune&lt;/p&gt;
&lt;p&gt;(attention, ce résumé est non contractuel)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Scherer</dc:creator><pubDate>Sun, 18 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-18:pycon-fr-2015/audit-de-securite-dapplication-python-avec-bandit.html</guid></item><item><title>Déploiement d'applications python dans un monde post-docker</title><link>https://pyvideo.org/pycon-fr-2015/deploiement-dapplications-python-dans-un-monde-post-docker.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Durant cette présentation, nous verrons comment la montée en popularité
des containeurs (comme Docker, RunC, Rkt, Warden, etc) change le
fonctionnement des services de PaaS via l'intégration de orchestrateurs
comme Kubernetes ou Mesos, et l'impact pour les développeurs python
aussi bien que les administrateurs systèmes ayant déployé ce genre de
systémes chez eux.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Depuis 2 ans, le mot containeur a remplacé cloud sur les buzzometres de
la presse informatique. néanmoins, le vrai changement ne viens pas des
containeurs eux mêmes (qui datent facile d'il y a 10 ans ou plus), mais
de l'impact sur le déploiement des applications et la facilitation des
architectures à base de microservices.&lt;/p&gt;
&lt;p&gt;Avec la popularisation de Docker est venu le besoin de combler tout les
manques du logiciel notamment en terme de déploiement et
d'orchestration, via des outils comme kubernetes, mesos, fig ou
atomic-app. Cette présentation parleras donc des concepts sous jacents,
de l'impact pour les admins et les codeurs python de tout type, et dans
quel cas est ce que fait sens de mettre en place ce genre de
déploiement.&lt;/p&gt;
&lt;p&gt;Les exemples tourneront surtout autour de la pile
docker/kubernetes/origin /atomic-app mais les alternatives ne seront pas
oubliés et présentés aussi.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Scherer</dc:creator><pubDate>Sat, 17 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-17:pycon-fr-2015/deploiement-dapplications-python-dans-un-monde-post-docker.html</guid></item><item><title>Ansible, de l'orchestration à la gestion de configuration</title><link>https://pyvideo.org/pycon-fr-2013/ansible-de-lorchestration-a-la-gestion-de-confi.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Administrateur systéme de profession, j'utilise puppet à mon travail
pour les serveurs. Mais nous n'avions pas d'outil d'orchestration pour
mon équipe, ce qui a vite été un leger désagrement. Et Ansible est
arrivé, avec le support de kerberos, me permettant d'agir rapidement
partout avec la rapidité d'un ninja.&lt;/p&gt;
&lt;p&gt;Ansible est un outil de gestion de machine trés souple. Sans avoir
besoin d'autre chose que ssh, ce dernier permet aussi bien d'orchester
un cluster de machines via des opérations ad-hoc que d'appliquer une
configuration décrite en yaml pour remettre un systéme dans le droit
chemin. Cet présentation va faire découvrir l'outil, pour des taches
simples jusqu'à la gestion compléte de la configuration, et comment
l'intégrer directement dans un script python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Scherer</dc:creator><pubDate>Sat, 30 Nov 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-11-30:pycon-fr-2013/ansible-de-lorchestration-a-la-gestion-de-confi.html</guid></item><item><title>Ansible beyond YAML</title><link>https://pyvideo.org/pycon-us-2015/ansible-beyond-yaml.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ansible is a configuration management tool whose primary mode of
operation involve using YAML to describe deployments and operations.
However, it can do much more and be extended using python, which is what
we will explore in this talk. Among others, we will see the plugins
system for various part of the tool and how to reuse Ansible in a
script.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Scherer</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-11:pycon-us-2015/ansible-beyond-yaml.html</guid><category>ansible</category><category>yaml</category></item></channel></rss>