<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_miroslav-beka.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-03-10T00:00:00+00:00</updated><entry><title>Virtualenv, Flask, Vagrant, etc.</title><link href="https://pyvideo.org/pycon-sk-2016/virtualenv-flask-vagrant-etc.html" rel="alternate"></link><published>2016-03-11T00:00:00+00:00</published><updated>2016-03-11T00:00:00+00:00</updated><author><name>Miroslav Beka</name></author><id>tag:pyvideo.org,2016-03-11:pycon-sk-2016/virtualenv-flask-vagrant-etc.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Large organizations have traditionally used languages such as C ++, .NET
and Java development for enterprise applications. &amp;quot;Scripting&amp;quot; languages
like Python were considered risky. Not sufficiently robust with the lack
of the tools around them (framework). Times have, however, changed and
the Python language has become surrounded by the huge open source
community that takes care of the maintenance of the ecosystem. We see
increasing use of dynamic languages for web applications development.
But what is meant by productive enterprise or web application? These
applications should meet several requirements. Scalability, zero down
time deployments, short release cycles and many other properties&lt;/p&gt;
</summary></entry><entry><title>Custom Python Libraries for Robot Framework</title><link href="https://pyvideo.org/pycon-sk-2017/custom-python-libraries-for-robot-framework.html" rel="alternate"></link><published>2017-03-10T00:00:00+00:00</published><updated>2017-03-10T00:00:00+00:00</updated><author><name>Miroslav Beka</name></author><id>tag:pyvideo.org,2017-03-10:pycon-sk-2017/custom-python-libraries-for-robot-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;V priebehu posledných rokov sa stále častejšie kľadie dôraz na automatizované testovanie. Testeri používajú viacero automatizačných frameworkov a klasické testovanie sa mení viacej na skriptovanie až programovanie. Python je jazyk, ktorý je vhodný aj na takúto úlohu. Jeden z najpopulárnejších automatizačných frameworkov na testovanie je Robot Framework, ktorý je naprogramovaný v Pythone a jeho tvorca, Pekka Klärck pochádza z radov testerov. RF je generický nástoj, ktorý nie vždy pokrýva naše potreby. Jedným zo spôsobov je programovanie vlastných knižníc pre RF, s ktorými si vieme uľahčiť prácu s komplexným systémom. Prezentácia ukáže praktické použitie rôznych typov knižníc pre RF.&lt;/p&gt;
</summary></entry></feed>