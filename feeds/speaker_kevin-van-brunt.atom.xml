<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_kevin-van-brunt.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-07-27T14:00:00+00:00</updated><entry><title>A Hands-On Guide to Building Interactive Command-Line Apps with cmd2</title><link href="https://pyvideo.org/pyohio-2019/a-hands-on-guide-to-building-interactive-command-line-apps-with-cmd2.html" rel="alternate"></link><published>2019-07-27T14:00:00+00:00</published><updated>2019-07-27T14:00:00+00:00</updated><author><name>Todd Leonhardt</name></author><id>tag:pyvideo.org,2019-07-27:pyohio-2019/a-hands-on-guide-to-building-interactive-command-line-apps-with-cmd2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Interactive command-line (CLI) applications are extremely popular in the
DevOps and Security communities as well as for internal tooling and
automation. Have you ever wanted to build an awesome CLI application
using Python but don't know where to get started? This talk will show
you how to use the cmd2 package to quickly and easily build feature-rich
and user-friendly CLI apps in Python.&lt;/p&gt;
&lt;p&gt;Interactive command-line applications (CLIs) are used extensively in
many real-world scenarios, particularly in the DevOps and Security
communities as well as for internal developer tooling and automation.
I'm sure many of you have used the wonderful
&lt;a class="reference external" href="https://ipython.org"&gt;ipython&lt;/a&gt; interactive Python shell which is a
good example of a CLI. Python has the built-in
&lt;a class="reference external" href="https://docs.python.org/3/library/cmd.html"&gt;cmd&lt;/a&gt; library for
creating CLIs, but it is extremely bare-bones. The
&lt;a class="reference external" href="https://github.com/python-%20cmd2/cmd2"&gt;cmd2&lt;/a&gt; package is a
batteries-included extension of &lt;tt class="docutils literal"&gt;cmd&lt;/tt&gt; which makes it much quicker and
easier to create feature-rich and user-friendly CLIs.&lt;/p&gt;
&lt;p&gt;The presentation will first explain how to install &lt;tt class="docutils literal"&gt;cmd2&lt;/tt&gt;. The talk
will next show how to create a basic &lt;tt class="docutils literal"&gt;cmd2&lt;/tt&gt; application. Then the talk
will progressively add features to this application while demonstrating
the capabilities built into &lt;tt class="docutils literal"&gt;cmd2&lt;/tt&gt;. In the end, the presentation will
show how to build a basic but feature-rich and user-friendly CLI
application from scratch. This application will include many features
which make it easy to use for customers, including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Built-in help&lt;/li&gt;
&lt;li&gt;Top-notch tab-completion&lt;/li&gt;
&lt;li&gt;Shell-like functionality including ability to run shell commands,
pipe to shell commands, and redirect output to files&lt;/li&gt;
&lt;li&gt;Built-in application scripting&lt;/li&gt;
&lt;li&gt;Built-in Python scripting&lt;/li&gt;
&lt;li&gt;Built-in history&lt;/li&gt;
&lt;li&gt;Command aliases and macros&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ultimately, people who attend this talk will learn how to use the Python
programming language with the &lt;tt class="docutils literal"&gt;cmd2&lt;/tt&gt; package to quickly and
efficiently build their own interactive command-line applications.&lt;/p&gt;
</summary></entry></feed>