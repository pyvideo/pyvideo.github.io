<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-apac-2018.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-06-02T00:00:00+00:00</updated><entry><title>Applying serverless architecture pattern to distributed data processing</title><link href="https://pyvideo.org/pycon-apac-2018/applying-serverless-architecture-pattern-to-distributed-data-processing.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Denys Makogon</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/applying-serverless-architecture-pattern-to-distributed-data-processing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will go through the whole serverless thing: from
decomposing app and its logic to microservices and further to smaller
bits, i.e. functions to defining data flow through functions and
building their fault-tolerant pipeline.&lt;/p&gt;
</summary></entry><entry><title>Data Ingestion in Python using Apache Airflow</title><link href="https://pyvideo.org/pycon-apac-2018/data-ingestion-in-python-using-apache-airflow.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Sowmya Krishnan</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/data-ingestion-in-python-using-apache-airflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the growing need to produce and consume data to/from a myriad
number of applications, data pipelines have become an integral part of
our systems. In this talk, we would like to share our experience of
using Apache Airflow for our data ingestion use case.&lt;/p&gt;
</summary></entry><entry><title>Detecting offensive messages using Deep Learning: A micro-service based approach</title><link href="https://pyvideo.org/pycon-apac-2018/detecting-offensive-messages-using-deep-learning-a-micro-service-based-approach.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Alizishaan Khatri</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/detecting-offensive-messages-using-deep-learning-a-micro-service-based-approach.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What are you doing to control abusive content on your platform? Can your
current solution tell the difference between &amp;quot;f**king awesome&amp;quot; and
&amp;quot;f**king loser&amp;quot;? Can it detect racist and sexist content? In this
talk, you will learn how to build a deep learning based solution and
deploy it as a micro-service.&lt;/p&gt;
</summary></entry><entry><title>Elements of Programming Interviews in Python</title><link href="https://pyvideo.org/pycon-apac-2018/elements-of-programming-interviews-in-python.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Tsung-Hsien Lee</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/elements-of-programming-interviews-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will educate the audience on how to solve algorithmic problems
commonly asked at interviews, emphasizing the aspects of Python that are
the most useful. I will also describe how hiring decisions are made
behind-the-scenes, based on my professional experiences at Facebook,
Google, and Uber.&lt;/p&gt;
</summary></entry><entry><title>Game Programming with Python</title><link href="https://pyvideo.org/pycon-apac-2018/game-programming-with-python.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Sony Valdez</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/game-programming-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In less than an hour, we will be making a simple game using pygame.
There will be live coding and audience participation. Beginners will be
inspired to take up programming. Non-beginner coders will learn the
basics of game programming.&lt;/p&gt;
</summary><category term="pygame"></category></entry><entry><title>How to understand user behaviour using Multiple Linear Regression?</title><link href="https://pyvideo.org/pycon-apac-2018/how-to-understand-user-behaviour-using-multiple-linear-regression.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Sarthak Deshwal</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/how-to-understand-user-behaviour-using-multiple-linear-regression.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Studying the user behaviour on app/website is one of the most hot topics
among product companies. Multiple linear regression exactly helps you to
find out the most important factors about your user and deliver the most
important features to them. We will discuss the process, and the pros
and cons of it.&lt;/p&gt;
</summary></entry><entry><title>Implementing a decorator for thread synchronisation</title><link href="https://pyvideo.org/pycon-apac-2018/implementing-a-decorator-for-thread-synchronisation.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Graham Dumpleton</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/implementing-a-decorator-for-thread-synchronisation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using multithreading in Python applications? Interested in complex use
cases for decorators and context managers? This talk will describe how
the Java programming language &amp;quot;synchronized&amp;quot; keyword, for handling
synchronisation in multithread applications, can be implemented in
Python.&lt;/p&gt;
</summary></entry><entry><title>Implementing Reinforcement Learning for Marketing Channel Optimization with Python</title><link href="https://pyvideo.org/pycon-apac-2018/implementing-reinforcement-learning-for-marketing-channel-optimization-with-python.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Novia Listiyani Wirhaspati</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/implementing-reinforcement-learning-for-marketing-channel-optimization-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So, you have heard that moments where Deep Reinforcement Learning (DRL)
has empowered machines to win games against human. But then, what's
next? In this talk, we are going to discuss how we implement Proximal
Policy Optimization (PPO) - a method in DRL - to solve real-world
business problem.&lt;/p&gt;
</summary></entry><entry><title>Inside a PyPy JIT: is that even legal?</title><link href="https://pyvideo.org/pycon-apac-2018/inside-a-pypy-jit-is-that-even-legal.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Aleksandr Koshkin</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/inside-a-pypy-jit-is-that-even-legal.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This time we are going to dig down to the RPython tool chain core - JIT
compiler generator. We will examine the very essence of the approach
taken by the PyPy team - that is how to quit writing JITted VMs by hand,
stop worrying and have fun again.&lt;/p&gt;
</summary></entry><entry><title>Learn Guitar Via Python Programming</title><link href="https://pyvideo.org/pycon-apac-2018/learn-guitar-via-python-programming.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Rishabh Shah</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/learn-guitar-via-python-programming.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever wanted to play your favourite song on a guitar quickly even when
you don't know how to play a guitar? Our Python based MIDI to guitar
tabs Transcriber can help you do that. You just need to find your song
in MIDI format (with .mid as file extension), and let our Python
Transcriber do its magic!&lt;/p&gt;
</summary></entry><entry><title>Pumping up Python modules using Rust</title><link href="https://pyvideo.org/pycon-apac-2018/pumping-up-python-modules-using-rust.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Vigneshwer Dhinakaran</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/pumping-up-python-modules-using-rust.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn to build high performance and memory safe Python extensions using
Rust. Discover this and more tips to boost up your Python application.&lt;/p&gt;
</summary></entry><entry><title>Python For Self-Trackers: How To Become A Data-Driven You</title><link href="https://pyvideo.org/pycon-apac-2018/python-for-self-trackers-how-to-become-a-data-driven-you.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Mark Koester</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/python-for-self-trackers-how-to-become-a-data-driven-you.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;My purpose is help people to learn how to collect and use their personal
data to better understand and improve yourself.&lt;/p&gt;
&lt;p&gt;Curious how you are being tracking? Already like many people today
tracking your life but wondering what more you can do with your personal
data?&lt;/p&gt;
&lt;p&gt;It’s easier than ever to track our lives, work and bodies with a
smartphone, wearable, home sensor or computer. If you have an Android or
iPhone, use a wearable like Fitbit, or even just watch videos on
Youtube, then you already got plenty of personal data, and we haven’t
even started to formally track our lives.&lt;/p&gt;
&lt;p&gt;With a world of data, the question becomes: &lt;strong&gt;What can we do with all
this tracking data? Can it help you become a “better” version of
yourself?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are a lot of great ways to work with and use your personal data,
even spreadsheet applications like Excel and Google Sheets and more
powerful data visualization tools like Tableau and Google Data Studio
can help.&lt;/p&gt;
&lt;p&gt;But if you want to become a master of your personal data, then one of
the best tools is Python. Python is a great tool for not only
aggregating, collecting and cleaning up your data. But python enables
you to do robust data analysis and machine learning too too.&lt;/p&gt;
&lt;p&gt;In this talk / workshop, we are exploring personal data, self-tracking,
and personal data analysis. In the first part, I’ll show the basics on
you how to track your life and all about the so-called “quantified
self.” In the second part on &lt;a class="reference external" href="https://github.com/markwk/qs_ledger"&gt;QS Ledger&lt;/a&gt;, I’ll explain how to use
Python and its data science toolkit (Pandas, Matplot, Seaborn, etc.) for
data collection and data processing. Part 3 looks at how to do your own
Data Exploration, Analysis and Visualization on your own tracking data.
Through some simple code, you can even create your own Personal Data
Dashboard. Finally, in Part 4, we look at Machine Learning. We look at
where ML is typically used for personal data and some examples of how
you can use ML to better understand and improve yourself. In the
conclusion, I share some of tips and recommendations for anyone wanting
to pursue a data-driven life.&lt;/p&gt;
&lt;p&gt;Bring together your personal data in interesting ways. Clean and process
it. Find patterns with some simple data analysis. Make it beautiful with
data visualization. Discover meaning, insights, and correlations using
predictive analytics and machine learning. Finally, improve your life by
transforming personal data into a data-driven life.&lt;/p&gt;
&lt;p&gt;In short, can self-tracking and personal data help us become more
productive, healthier, and happier? I think it can. Learn how to engage
with your data to be smarter, make more informed decisions and become
data-driven!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Outline&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Part 1: QS / Self-Tracking: How to measure a life?&lt;/li&gt;
&lt;li&gt;Part 2: Data Collection / Extraction / Processing of Personal Data
with Python and &lt;a class="reference external" href="https://github.com/markwk/qs_ledger"&gt;QS Ledger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Part 3: Data Exploration and Data Viz with Python and Tableau&lt;/li&gt;
&lt;li&gt;Part 4: Machine Learning for QS and Personal Tracking Data&lt;/li&gt;
&lt;li&gt;Conclusion: Tips on How to Become a Data-Driven You&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Run your ICO using Python</title><link href="https://pyvideo.org/pycon-apac-2018/run-your-ico-using-python.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Abhishek Pandey</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/run-your-ico-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When you read about Ethereum smart contract tutorials, most likely,
Truffle framework is used as an example. What the speaker wants to
showcase is how easy it can be to use Python instead to not just test,
but even run your smart contracts, including advanced scenarios like
creating blockchain or launching ICO!&lt;/p&gt;
</summary></entry><entry><title>Streaming data processing pipelines with Apache Beam [in Python, naturally!]</title><link href="https://pyvideo.org/pycon-apac-2018/streaming-data-processing-pipelines-with-apache-beam-in-python-naturally.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Markku Lepistö</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/streaming-data-processing-pipelines-with-apache-beam-in-python-naturally.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everything is about data. Data drives your decisions, your features, and
can be your product. But batch processing is too slow - you have to
analyze and act in real-time. Apache Beam is a new open source project
for unified data processing. Streaming Beam Python pipelines are now
here!&lt;/p&gt;
</summary></entry><entry><title>Testing Complex Python Dependencies With Docker Containers</title><link href="https://pyvideo.org/pycon-apac-2018/testing-complex-python-dependencies-with-docker-containers.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Jonathan Reiter</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/testing-complex-python-dependencies-with-docker-containers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk will be about a testing process for complex dependencies.
Consider code driving an external data processor: good tests are hard as
so much state never passes through the interpreter. Our approach
leverages containers and Python's test and environment control tools to
design and build better tests.&lt;/p&gt;
</summary></entry><entry><title>A scalable blueprint for product customization with Python 3</title><link href="https://pyvideo.org/pycon-apac-2018/a-scalable-blueprint-for-product-customization-with-python-3.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Chinab Chugh</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/a-scalable-blueprint-for-product-customization-with-python-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk focuses on how a SaaS project can be flexible to the business
needs of their clients. It will discuss on a custom structure we have
built using Python 3.6 to extend our core technology for client
customisations, with emphasis on building rapidly and quick code
deployments.&lt;/p&gt;
</summary></entry><entry><title>Artisanal Async Adventures</title><link href="https://pyvideo.org/pycon-apac-2018/artisanal-async-adventures.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Jonas Obrist</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/artisanal-async-adventures.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Asynchronous networking may seem hard to understand at first, in this
talk, the speaker will show this is not the case. In 100 lines of code,
he will write a low level async network stack in front of your eyes,
explaining how things work as we go. By the end, you should understand
how and why async code works!&lt;/p&gt;
</summary></entry><entry><title>Better Care and Feeding of Machine Learning Models</title><link href="https://pyvideo.org/pycon-apac-2018/better-care-and-feeding-of-machine-learning-models.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Jeanne Choo</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/better-care-and-feeding-of-machine-learning-models.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Traditional training and testing workflows for machine learning models
neglect important features, namely: reproducibility, interpretability,
retraining and lifecycle management. This talk explores these ideas,
shares latest developments, then implements an end-to-end example.&lt;/p&gt;
</summary></entry><entry><title>Build a Data-Driven Web App That Everyone Can Use</title><link href="https://pyvideo.org/pycon-apac-2018/build-a-data-driven-web-app-that-everyone-can-use.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Galuh Sahid</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/build-a-data-driven-web-app-that-everyone-can-use.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You're a data scientist with a machine learning model that you want to
show everyone. Do you give your users your Python scripts and tell them
to run &amp;quot;python mycoolmodel.py&amp;quot;? Is there a better alternative? How about
a web app? The speaker will show you how Flask can be the best fit &lt;em&gt;pun
intended&lt;/em&gt; for this case.&lt;/p&gt;
</summary></entry><entry><title>Building the AI machine for algorithmic trading</title><link href="https://pyvideo.org/pycon-apac-2018/building-the-ai-machine-for-algorithmic-trading.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Dr. Yves Hilpisch</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/building-the-ai-machine-for-algorithmic-trading.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Standardized Deployment of AI-Based Trading Strategies&lt;/p&gt;
&lt;p&gt;Content:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Data-Driven Finance&lt;/li&gt;
&lt;li&gt;AI-First Finance&lt;/li&gt;
&lt;li&gt;Example Strategy&lt;/li&gt;
&lt;li&gt;The AI Machine&lt;/li&gt;
&lt;li&gt;Outlook&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="keynote"></category></entry><entry><title>Concurrency vs Parallelism</title><link href="https://pyvideo.org/pycon-apac-2018/concurrency-vs-parallelism.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/concurrency-vs-parallelism.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A good code should use resources efficiently, which means not over utilise them as well as not leaving them idle. Main feature of Python3 is its async capabilities. After learning what concurrency is and why concurrency is not parallelism. We will leverage asyncIO library to design concurrent code.&lt;/p&gt;
</summary></entry><entry><title>Crypto-AI: A Guide to Building Private and Decentralized AI Systems by Mixing Cryptography, Blockchains and AI.</title><link href="https://pyvideo.org/pycon-apac-2018/crypto-ai-a-guide-to-building-private-and-decentralized-ai-systems-by-mixing-cryptography-blockchains-and-ai.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Satish Shankar</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/crypto-ai-a-guide-to-building-private-and-decentralized-ai-systems-by-mixing-cryptography-blockchains-and-ai.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn the essential cryptographic ingredients necessary to build machine
learning &amp;amp; AI systems that can be effective and yet respect your
privacy.&lt;/p&gt;
</summary></entry><entry><title>Devil is in the details: Microservices, Security and DevOps</title><link href="https://pyvideo.org/pycon-apac-2018/devil-is-in-the-details-microservices-security-and-devops.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Mohammed A Imran</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/devil-is-in-the-details-microservices-security-and-devops.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Security is tough and is even tougher to do in complex environments with
lots of dependencies. Microservices architecture eases the pain a bit
but brings its own challenges. This talk will showcase how we can
leverage DevSecOps techniques to secure python based APIs/Microservices
and at scale.&lt;/p&gt;
</summary></entry><entry><title>Dockerizing Django</title><link href="https://pyvideo.org/pycon-apac-2018/dockerizing-django.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Ernst Haagsman</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/dockerizing-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Docker helps make sure that the Django application you develop is
exactly the same as the Django application you eventually deploy. In
this talk, you will learn how to containerize a Django application, and
use docker-compose to connect your Django application to your entire
stack.&lt;/p&gt;
</summary></entry><entry><title>GloVe - Python for Word Representation</title><link href="https://pyvideo.org/pycon-apac-2018/glove-python-for-word-representation.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Loveme Felicilda</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/glove-python-for-word-representation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk will show you how to use Glove-python, an implementation of
Stanford's Global Vectors algorithm to represent words as numeric values
(vectors) to generate word relationships. Word vector representations
make mathematical operations on words possible.&lt;/p&gt;
</summary></entry><entry><title>How to deploy machine learning models to production (frequently and safely)</title><link href="https://pyvideo.org/pycon-apac-2018/how-to-deploy-machine-learning-models-to-production-frequently-and-safely.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>David Tan</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/how-to-deploy-machine-learning-models-to-production-frequently-and-safely.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ML practitioners can have a hard time deploying their models to
production, even though continuous &amp;amp; fear-free deployments is a solved
problem in software engineering. We will demonstrate how we can apply
&amp;quot;continuous delivery&amp;quot; principles to reduce deployment time from
weeks/months into &amp;lt;30-minutes&lt;/p&gt;
</summary></entry><entry><title>Introduce Syntax and History of Python from 2.4 to 3.6</title><link href="https://pyvideo.org/pycon-apac-2018/introduce-syntax-and-history-of-python-from-24-to-36.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Manabu Terada</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/introduce-syntax-and-history-of-python-from-24-to-36.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The speaker will introduce the new syntax and functions between Python
2.4 and Python 3.6 in this talk. I will also compare the old style to
the new style. You will learn the best practices for Python coding and
how to perform refactoring your old Python code. You can look at the
evolution of Python.&lt;/p&gt;
</summary></entry><entry><title>Introduction to object detection</title><link href="https://pyvideo.org/pycon-apac-2018/introduction-to-object-detection.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Katharine Jarmul</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/introduction-to-object-detection.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In recent years, models based on Convolutional Neural Networks (CNNs) have revolutionized the entire field of computer vision. Problems like image classification can now be considered solved, and it is easy to construct implementations with any modern Deep Learning framework using fine tuning with pre-trained weights on datasets such as ImageNet.&lt;/p&gt;
&lt;p&gt;In this talk, we will explore how and why these techniques work, getting an understanding of the intuitive aspects of what the networks are actually doing. Moreover, this intuition will enable us to understand how to jump from image classification to the more complex problem of object detection, explaining the workings of the Faster R-CNN algorithm in the process.&lt;/p&gt;
&lt;p&gt;We will also speak about an open source Python object detection toolkit based on TensorFlow called Luminoth, going over the motivation behind it and showing how it can be integrated to your application.&lt;/p&gt;
</summary><category term="keynote"></category></entry><entry><title>Practical Python Design Patterns</title><link href="https://pyvideo.org/pycon-apac-2018/practical-python-design-patterns.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Ramanathan Ramakrishnamoorthy</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/practical-python-design-patterns.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Any production application requires good use of design patterns and this
talk will be about popular design patterns/choices and their
implementation. The talk will also cover basics of metaclasses and be
using metaclasses in some design choices practically.&lt;/p&gt;
</summary></entry><entry><title>Python In The Job Market</title><link href="https://pyvideo.org/pycon-apac-2018/python-in-the-job-market.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Lee Wei Xuen</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/python-in-the-job-market.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For online jobs where data is largely unstructured and inconsistent,
Python can be effectively utilized across various modelling and analysis
workflows. This talk will go over the typical Python packages employed
in a text-heavy environment and a walkthrough on some text information
extraction methods.&lt;/p&gt;
</summary></entry><entry><title>Taming System with Python: A Sysadmin perspective</title><link href="https://pyvideo.org/pycon-apac-2018/taming-system-with-python-a-sysadmin-perspective.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Tang Ing Wei</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/taming-system-with-python-a-sysadmin-perspective.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We can tame the concurrency in Python even through the constraint of GIL
by using the concept of Communicating Sequential Process (CSP). This is
a sysadmin's sharing on how to tame the bewilderment among various OS's
in daily tasks by utilizing Python's concurrency libraries and modules.&lt;/p&gt;
</summary></entry><entry><title>Teaching Computers ABCs: A Quick Intro to Natural Language Processing</title><link href="https://pyvideo.org/pycon-apac-2018/teaching-computers-abcs-a-quick-intro-to-natural-language-processing.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Lory Nunez</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/teaching-computers-abcs-a-quick-intro-to-natural-language-processing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Natural Language Processing (NLP) is a component of Artificial
Intelligence. Knowledge of NLP can make unstructured text data add
tremendous value to any application. We will go over basic NLP tasks,
techniques and tools. We will end with an NLP app built from open source
libraries.&lt;/p&gt;
</summary></entry><entry><title>Test-Driven Development of a Static Code Analyzer in Python</title><link href="https://pyvideo.org/pycon-apac-2018/test-driven-development-of-a-static-code-analyzer-in-python.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Terry Yin</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/test-driven-development-of-a-static-code-analyzer-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Static analyzers help us find problems in our code. They are like
compilers in terms of complexity; they need to know the syntax of target
languages. Is it possible to build such tools without comprehensive
upfront design? He will share his experience in making such tool in
Python over the past 8 years.&lt;/p&gt;
</summary></entry><entry><title>Tracking the tracker: Time Series Analysis in Python From First Principles</title><link href="https://pyvideo.org/pycon-apac-2018/tracking-the-tracker-time-series-analysis-in-python-from-first-principles.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Kenneth Emeka Odoh</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/tracking-the-tracker-time-series-analysis-in-python-from-first-principles.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Humans seek to know what the future holds. In order to predict the
future, we have to study the past. Time series analysis can provide the
right framework for prediction. This talk is focused on forecasting and
anomaly detection.&lt;/p&gt;
</summary></entry><entry><title>Writing robust, readable, and maintainable concurrent programs in Python</title><link href="https://pyvideo.org/pycon-apac-2018/writing-robust-readable-and-maintainable-concurrent-programs-in-python.html" rel="alternate"></link><published>2018-06-01T00:00:00+00:00</published><updated>2018-06-01T00:00:00+00:00</updated><author><name>Wilson Tjhi</name></author><id>tag:pyvideo.org,2018-06-01:pycon-apac-2018/writing-robust-readable-and-maintainable-concurrent-programs-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Threading, futures, coroutines, asyncio, celery, and gevent. What are
the differences among these concurrency techniques? This presentation
tries to make clear different concurrency models supported by Python and
which libraries are best suited for the different problems that each
model solves.&lt;/p&gt;
</summary></entry></feed>