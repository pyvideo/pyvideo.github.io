<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_younggun-kim.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-11-23T00:00:00+00:00</updated><entry><title>Ready, Get Set, Go! Development Sprints in Python community</title><link href="https://pyvideo.org/pycon-hk-2018/ready-get-set-go-development-sprints-in-python-community.html" rel="alternate"></link><published>2018-11-23T00:00:00+00:00</published><updated>2018-11-23T00:00:00+00:00</updated><author><name>Younggun Kim</name></author><id>tag:pyvideo.org,2018-11-23:pycon-hk-2018/ready-get-set-go-development-sprints-in-python-community.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk would cover all about the development sprint which has been
hidden weapon of Python community that helps us to have a healthy
ecosystem. In this talk, I’ll show the history of development sprint,
how it helps us become a strong and diverse community, and how can you
host your own development sprint along with what you need to become a
good participant. Also I’ll share PyCon Korea’s development sprint cases
as well.&lt;/p&gt;
</summary></entry><entry><title>Python Software Foundation</title><link href="https://pyvideo.org/pycon-thailand-2018/python-software-foundation.html" rel="alternate"></link><published>2018-06-16T00:00:00+00:00</published><updated>2018-06-16T00:00:00+00:00</updated><author><name>Younggun Kim</name></author><id>tag:pyvideo.org,2018-06-16:pycon-thailand-2018/python-software-foundation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Younggun introduces what the Python Software Foundation does, how to join it, and what membership entails.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;PyCon Korea Organizer (former) PSF Board Director a mediocre software engineer a frequent PyCon traveler&lt;/p&gt;
</summary><category term="lightning talk"></category></entry><entry><title>Opening 2015-08-30</title><link href="https://pyvideo.org/pycon-korea-2015/opening-2015-08-30.html" rel="alternate"></link><published>2015-08-30T00:00:00+00:00</published><updated>2015-08-30T00:00:00+00:00</updated><author><name>Younggun Kim</name></author><id>tag:pyvideo.org,2015-08-30:pycon-korea-2015/opening-2015-08-30.html</id><summary type="html"></summary></entry><entry><title>Writing fast code</title><link href="https://pyvideo.org/pycon-korea-2015/writing-fast-code.html" rel="alternate"></link><published>2015-08-29T00:00:00+00:00</published><updated>2015-08-29T00:00:00+00:00</updated><author><name>Younggun Kim</name></author><id>tag:pyvideo.org,2015-08-29:pycon-korea-2015/writing-fast-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you want to make your code run faster, it is important to
understanding how computers (and also Python!) do work under the hood.
By understanding this and having knowledge of good profiler, you can
make your code run faster.&lt;/p&gt;
&lt;p&gt;This talk will introduce nice tools for the job. Using &lt;tt class="docutils literal"&gt;dis&lt;/tt&gt; module,
you can understand the workflow of Python code. Using various profiler
(such as, &lt;tt class="docutils literal"&gt;cProfile&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;line_profiler&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;profiling&lt;/tt&gt;), you can find
bottlenecks in your code easily.&lt;/p&gt;
&lt;p&gt;After that, you can write fast code.&lt;/p&gt;
</summary></entry></feed>