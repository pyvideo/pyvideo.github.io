<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_moreno-bonaventura.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-05-08T00:00:00+00:00</updated><entry><title>The NetworkL python package</title><link href="https://pyvideo.org/pydata-london-2016/moreno-bonaventura-the-networkl-python-package.html" rel="alternate"></link><published>2016-05-08T00:00:00+00:00</published><updated>2016-05-08T00:00:00+00:00</updated><author><name>Moreno Bonaventura</name></author><id>tag:pyvideo.org,2016-05-08:pydata-london-2016/moreno-bonaventura-the-networkl-python-package.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData London 2016&lt;/p&gt;
&lt;p&gt;NetworkL.github.io is an experimental python package which supports the manipulation and efficient (L)ongitudinal analysis of large-scale time-varying graphs. NetworkL reduces the memory load of the Distance Matrix up to 50% and performs re-computation of shortest paths in centiseconds after edges updates. The package opens the possibility to perform real-time network analysis on streaming data.&lt;/p&gt;
&lt;p&gt;Graphs are the most popular way to represent and analyse a variety of real-world system and data sets from different domains. Today data grow fast and change rapidly over time.&lt;/p&gt;
&lt;p&gt;NetworkL (&lt;a class="reference external" href="http://networkl.github.io/"&gt;http://networkl.github.io/&lt;/a&gt;) is an experimental python package I wrote to supports the manipulation and efficient (L)ongitudinal analysis of large-scale time-varying graphs. NetworkL includes a set of optimized algorithms and data structures which create the basics to carry out network analysis of large time-varying networks even on commodity workstations.&lt;/p&gt;
&lt;p&gt;In particular it implements a smart way to representation the full distance matrix of the network as a sparse matrix. This reduces the memory load up to 50%. Moreover, NetworkL include an implementation of the Ramalingam&amp;amp;Reps algorithm to recompute all the shortest paths length. Re-computations are performed in centiseconds regardless of the graph size. This performances makes NetworkL particularly suitable for the analysis of (L)ongitudinal network data-sets.&lt;/p&gt;
&lt;p&gt;Biblio: Ramalingam, G., &amp;amp; Reps, T. (1996). On the computational complexity of dynamic graph problems. Theoretical Computer Science, 158(1), 233-277.&lt;/p&gt;
</summary></entry></feed>