<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Margaret Eker</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 18 Sep 2016 00:00:00 +0000</lastBuildDate><item><title>Docs as Code: The Missing Manual</title><link>https://pyvideo.org/write-the-docs-europe-2016/docs-as-code-the-missing-manual.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Treating docs as code, an approach that more and more teams and
companies are moving toward, involves more than putting the two together
in a repo. We discuss some of the details that often get lost in as dev
and docs learn to work together in new ways. Because if all we do is put
doc files next to code files in source control, or use parts of the same
workflow for code and docs, we're still isolating docs as a separate
sort of responsibility, free from the obligations of systematic review
and testing without which code would never be accepted into production.&lt;/p&gt;
&lt;p&gt;Some missing parts of this newer approach to documentation workflow that
we'll discuss include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Outlining a documentation lifecycle that describes how material moves
from initial draft to final production, to help people unfamiliar
with documentation development understand better how to efficiently
manage documentation review and testing.&lt;/li&gt;
&lt;li&gt;Mapping GitHub workflow clearly to documentation workflow. This can
help writers and editors understand better just how to use GitHub
effectively, and equally important how it can help other contributors
(notably programmers) understand the parts of the writer workflow
that can be lost when docs move next to code.&lt;/li&gt;
&lt;li&gt;Creating an information architecture. Words need structure to provide
meaning, usability, and discoverability. A strong content
architecture provides logical places for adding new content,
especially for doc projects at scale.&lt;/li&gt;
&lt;li&gt;Developing and enforcing a style guide: terminology, voice, tone.
These things make the difference between words that users might
understand, and documentation that can truly assist.&lt;/li&gt;
&lt;li&gt;Reviewing and line/copy editing. Because you wouldn't do any less for
code, right?&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Margaret Eker</dc:creator><pubDate>Sun, 18 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-18:/write-the-docs-europe-2016/docs-as-code-the-missing-manual.html</guid><category>Write the Docs Europe 2016</category></item></channel></rss>