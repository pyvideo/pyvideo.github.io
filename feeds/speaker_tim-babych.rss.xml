<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 10 Jul 2017 00:00:00 +0000</lastBuildDate><item><title>Front-end testing with Python</title><link>https://pyvideo.org/europython-2017/front-end-testing-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web-developers use Python to develop web-applications, serving HTML
or JSON content to user's browsers which render it. We test our
applications to check that they serve content right and that they
respond to HTTP requests in an expected way. However, this is not all
that happens in a modern web application. There are lots of moving
parts which are executed not on the server, but directly in user's
browser, and they need to be tested too. The best way to check that
our app works well in a browser is to test it in a browser, and
Python gives you tools to do that conveniently.&lt;/p&gt;
&lt;p&gt;With a Selenium tool and Python package, you can control the
browsers, making them open web pages and interacting with them. I
will show how to install Selenium and needed drivers, and tell about
best practices for writing Selenium tests, such as&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Page Object pattern&lt;/li&gt;
&lt;li&gt;Put browser interactions in the page object, not the test&lt;/li&gt;
&lt;li&gt;Put assertions in the test, not the page object&lt;/li&gt;
&lt;li&gt;Never use time.sleep()&lt;/li&gt;
&lt;li&gt;Always make pages wait for actions to complete&lt;/li&gt;
&lt;li&gt;Wait for JavaScript to load&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To test the visual look of your application there is a Needle tool,
which lets you compare screenshots with baseline set, and highlight
the differences. I will talk about how to incorporate that
functionality into your tests.&lt;/p&gt;
&lt;p&gt;As browser testing can get quite slow, I will also show how to set up
running them concurrently.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Babych</dc:creator><pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-10:europython-2017/front-end-testing-with-python.html</guid></item><item><title>Data Scientist's Python toolbox</title><link>https://pyvideo.org/pycon-pl-2015/data-scientists-python-toolbox.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the talk I would like to give an overview of existing python tools for mathematical modeling (numpy, scipy, pandas, others) and share experiences of using them in our application (&lt;a class="reference external" href="http://www.datarobot.com/"&gt;http://www.datarobot.com/&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Babych</dc:creator><pubDate>Sat, 17 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-17:pycon-pl-2015/data-scientists-python-toolbox.html</guid></item></channel></rss>