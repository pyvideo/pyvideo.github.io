<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 05 Aug 2017 00:00:00 +0000</lastBuildDate><item><title>Saturday PM Lightning Talks</title><link>https://pyvideo.org/pycon-au-2017/saturday-pm-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks Saturday, August 05 2017 04 PM&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Tim Ansell - Python on FPGAs 1:15&lt;/li&gt;
&lt;li&gt;Nicky Ringland and Jim Mussared - National Computer Science School 6:28&lt;/li&gt;
&lt;li&gt;Clinton McKinnon - The Amazing StarLAB 11:11&lt;/li&gt;
&lt;li&gt;Josh Simmons - Open Source in Education 13:32&lt;/li&gt;
&lt;li&gt;Paul Weipa - Systematic Problem Solving 18:34&lt;/li&gt;
&lt;li&gt;Tim Leslie - PEP-628 The world's oldest bug 23:50&lt;/li&gt;
&lt;li&gt;Nick Moore - OMNICODE 29:08&lt;/li&gt;
&lt;li&gt;Andrew Lonsdale - FASTQE 33:22&lt;/li&gt;
&lt;li&gt;Tisham Dhar - Energy Monitor 37:29&lt;/li&gt;
&lt;li&gt;Rhydwyn McGuire - R 42:11&lt;/li&gt;
&lt;li&gt;Josh Driver - Faster PostgreSQL Text Search 44:26&lt;/li&gt;
&lt;li&gt;Fraser Tweedale - On naming things 49:49&lt;/li&gt;
&lt;li&gt;Mike Leonard - High Risk Demo Episode 2 55:28&lt;/li&gt;
&lt;li&gt;Ned Letcher - PyEnv 59:11&lt;/li&gt;
&lt;li&gt;Luke Deller - Garbage Collection Live demo 1:04:25&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Ansell</dc:creator><pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-05:pycon-au-2017/saturday-pm-lightning-talks.html</guid><category>lightning talks</category></item><item><title>RPy: Powerful Analytics within python</title><link>https://pyvideo.org/pycon-au-2012/rpy-powerful-analytics-within-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;R is an incredibly powerful statistical programming language. It is the
choice for powerful set and forgets analytics. However it is a
specialist language without strong functionality in other areas. In
areas where significant preproc&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;R is an incredibly powerful statistical programming language. It is the
choice for powerful set and forgets analytics. However it is a
specialist language without strong functionality in other areas. In
areas where significant preprocessing of data, or where the statistics
produced are part of a larger system such as looking for patterns in the
load behaviour of a web server, a match with a strong general language
is an obvious solution. Because of its wide use and potential
integration with R, python is that language.&lt;/p&gt;
&lt;p&gt;This talk will be targeted at python programmers who wish to integrate
statistical and data analysis into their work, providing options for
real time data monitoring and analysis. This talk is accessible for
anyone with a basic understanding of python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rhydwyn Mcguire</dc:creator><pubDate>Wed, 22 Aug 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-08-22:pycon-au-2012/rpy-powerful-analytics-within-python.html</guid><category>rpy</category></item><item><title>Record linkage: Join for real life by Rhydwyn Mcguire</title><link>https://pyvideo.org/pycon-au-2014/record-linkage-join-for-real-life-by-rhydwyn-mcg.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In an ideal world, you can join on candidate keys, names are never
misspelt, people never move house, and I have a pony. I don’t have a
pony. But we do have record linkage.&lt;/p&gt;
&lt;p&gt;Record linkage (also known as data linkage or fuzzy record matching) is
a naive Bayes algorithm which matches data about individuals across
databases or within a single database, by constructing the probabilities
that two records apply to the same individual or to different
individuals.&lt;/p&gt;
&lt;p&gt;In this talk I will discuss the techniques of record linkage in Python,
the usefulness and the limitations of linkage, and the effect that this
technique is having on healthcare research in particular.&lt;/p&gt;
&lt;p&gt;Healthcare/epidemiology studies often require data from more than one
source, and individuals frequently have multiple interactions with a
data set without a unique identifier. The outcomes of these studies are
only as good as the record linkage which underlies them, so the ways in
which record linkage is done can have a direct impact on our ability to
understand, prevent and treat serious medical conditions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rhydwyn Mcguire</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-09:pycon-au-2014/record-linkage-join-for-real-life-by-rhydwyn-mcg.html</guid></item><item><title>Fast, beautiful and easy Bayesian modelling: Can you have it all?</title><link>https://pyvideo.org/pycon-au-2015/fast-beautiful-and-easy-bayesian-modelling-can.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bayesian models are often more useful than classical statistical models
when dealing with data concerning rare events in small populations. For
example, if you are looking at the number of cancer diagnoses in a local
government area, Bayesian models allow you to combine the individual and
population level data to produce more reliable estimates.&lt;/p&gt;
&lt;p&gt;Fitting these models can be both complex and computationally expensive,
so we need it to be fast. Some of the datasets we deal with are
extremely big, and the need for both tweaking and regular update cycles
means we need to re-run the models frequently.&lt;/p&gt;
&lt;p&gt;But beauty is also crucial. We need the package to be easy to code and
describe, so that the statisticians and scientists we work with can
build, maintain and understand their own models without needing to refer
to programmers. We don’t want a statistical black box.&lt;/p&gt;
&lt;p&gt;Finally, we need it to be easy. Easy to fit into our systems;
technology-agnostic so we can change systems; and automatable so that
the regular work of updating models with new data can happen ‘hands
off’.&lt;/p&gt;
&lt;p&gt;There are a number of Bayesian modelling packages available, but how do
you know which one to use? This talk will take you through the positives
and negatives of the major packages, focusing on the specifics of my
work in health statistics, as well as providing a general overview of
what these packages can do.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rhydwyn McGuire</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-04:pycon-au-2015/fast-beautiful-and-easy-bayesian-modelling-can.html</guid></item></channel></rss>