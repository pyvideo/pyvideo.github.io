<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_virtual-box.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-10-31T00:00:00+00:00</updated><entry><title>Virtuelle Entwicklungsumgebungen mit Vagrant</title><link href="https://pyvideo.org/pycon-de-2012/virtuelle-entwicklungsumgebungen-mit-vagrant.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Markus Zapke-Gründemann</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/virtuelle-entwicklungsumgebungen-mit-vagrant.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Oft benötigt man für verschiedene Projekte ganz unterschiedliche
Bibliotheken, Dienste und Werkzeuge. Alle Abhängigkeiten auf einer
Maschine zu installieren kann schnell anstrengend bis unmöglich werden.
Hier kommt Vagrant ins Spiel: Mit Hilfe von Vagrant kann man einfach und
schnell Virtuelle Maschinen als Entwicklungsumgebungen erstellen,
konfigurieren und benutzen.&lt;/p&gt;
&lt;p&gt;Durch die Nutzung von (vorhandenen) Provisioning Tools wie Chef oder
Puppet kann man vorhandene Konfigurationen von Produktiv-System zum
Setup der Virtuellen Maschinen nutzen. Außerdem lassen sich mit Vagrant
auch komplexe Cluster-Setups auf dem eigenen Rechner aufbauen.&lt;/p&gt;
</summary><category term="vagrant"></category><category term="virtual box"></category><category term="virtuelle maschinen"></category></entry></feed>