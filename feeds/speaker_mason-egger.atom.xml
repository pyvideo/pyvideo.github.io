<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Mason Egger</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_mason-egger.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-04-12T00:00:00+00:00</updated><subtitle></subtitle><entry><title>I Can't Believe It's Not Real Data! An Introduction into Synthetic Data</title><link href="https://pyvideo.org/djangocon-us-2022/i-cant-believe-its-not-real-data-an-introduction-into-synthetic-data.html" rel="alternate"></link><published>2022-10-18T00:00:00+00:00</published><updated>2022-10-18T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2022-10-18:/djangocon-us-2022/i-cant-believe-its-not-real-data-an-introduction-into-synthetic-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From Data Science and Machine Learning to Software Engineering and testing, access to accurate data is one of the biggest bottlenecks hindering development. Developers need accurate, relevant data to safely experiment when building applications, machine learning models, testing, etc. However, developers often run into issues gathering data, from a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From Data Science and Machine Learning to Software Engineering and testing, access to accurate data is one of the biggest bottlenecks hindering development. Developers need accurate, relevant data to safely experiment when building applications, machine learning models, testing, etc. However, developers often run into issues gathering data, from a lack of data to the inability to access the data due to privacy policies. But what if you could have instant access to an unlimited supply of high-fidelity data that’s statistically accurate, privacy-protected, and safe to share? This is where Synthetic Data comes in. In this talk, you'll learn about Synthetic Data, the problems it solves, and how to get started generating as much relevant data as you want.&lt;/p&gt;
&lt;p&gt;In this talk, we'll discuss what Synthetic Data is, the benefits of using Synthetic Data, and the efficacy of it. You'll see real-world situations where Synthetic Data removes bias, augments data sets, and makes once private data easily shareable while still protecting the privacy of the initial data set.&lt;/p&gt;
</content><category term="DjangoCon US 2022"></category></entry><entry><title>There’s a Snake in the Birdhouse!</title><link href="https://pyvideo.org/europython-2020/theres-a-snake-in-the-birdhouse.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/theres-a-snake-in-the-birdhouse.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building a Python Culture at Vrbo&lt;/p&gt;
&lt;p&gt;It’s no surprise why many of us are so enamored with Python. Its simplicity, accessibility, and community make it a prime choice for many projects. However, not all software engineering shops use Python, maybe even some of the jobs you work at …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building a Python Culture at Vrbo&lt;/p&gt;
&lt;p&gt;It’s no surprise why many of us are so enamored with Python. Its simplicity, accessibility, and community make it a prime choice for many projects. However, not all software engineering shops use Python, maybe even some of the jobs you work at. Introducing Python to your company and building a Pythonic culture from the ground up is no small task, but it can be done. Join me as I take you through the journey of getting Python from zero to hero within my previous company. I’ll share the experience from start to finish, including what worked, what didn’t, what I would have done differently, and how I evangelized Python to bring it to be a supported language within my company’s ecosystem. Viewers will leave having learned from my experiences—both successes and mistakes—and with a solid plan for implementing Python at their job.&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Business"></category><category term="Business Cases"></category><category term="The Answer to Life the Universe and Everything Else"></category><category term="Use Case"></category><category term="failures/mistakes"></category></entry><entry><title>Let Me Introduce Y’all to Y’all</title><link href="https://pyvideo.org/pycascades-2025/let-me-introduce-yall-to-yall.html" rel="alternate"></link><published>2025-02-09T00:00:00+00:00</published><updated>2025-02-09T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2025-02-09:/pycascades-2025/let-me-introduce-yall-to-yall.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Inclusive language is vital to communities. We should avoid gendered pronouns when speaking about broad groups, but some of these vernaculars are ingrained deep in language as well as culture. Thankfully: a clever piece of Texan slang provides a solution. This will be the most Texas thing you’ve …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Inclusive language is vital to communities. We should avoid gendered pronouns when speaking about broad groups, but some of these vernaculars are ingrained deep in language as well as culture. Thankfully: a clever piece of Texan slang provides a solution. This will be the most Texas thing you’ve ever seen as I explain the history and proper usage of the greatest accomplishment of the English language, Y'all.&lt;/p&gt;
</content><category term="PyCascades 2025"></category></entry><entry><title>Lightning Talks (PyCascades 2025)</title><link href="https://pyvideo.org/pycascades-2025/lightning-talks-pycascades-2025.html" rel="alternate"></link><published>2025-02-09T00:00:00+00:00</published><updated>2025-02-09T00:00:00+00:00</updated><author><name>Linh Pham</name></author><id>tag:pyvideo.org,2025-02-09:/pycascades-2025/lightning-talks-pycascades-2025.html</id><content type="html"></content><category term="PyCascades 2025"></category></entry><entry><title>Building Docs like Code: Continuous Integration for Documentation</title><link href="https://pyvideo.org/pycon-latam-2019/building-docs-like-code-continuous-integration-for-documentation.html" rel="alternate"></link><published>2019-08-30T00:00:00+00:00</published><updated>2019-08-30T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2019-08-30:/pycon-latam-2019/building-docs-like-code-continuous-integration-for-documentation.html</id><content type="html"></content><category term="PyCon Latam 2019"></category></entry><entry><title>I Can't Believe It's Not Real Data! An Introduction into Synthetic Data</title><link href="https://pyvideo.org/pycon-latam-2022/i-cant-believe-its-not-real-data-an-introduction-into-synthetic-data.html" rel="alternate"></link><published>2022-08-25T00:00:00+00:00</published><updated>2022-08-25T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2022-08-25:/pycon-latam-2022/i-cant-believe-its-not-real-data-an-introduction-into-synthetic-data.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Easy access to relevant, safe data is a major bottleneck hindering developers and data scientists. But what if you could generate your own accurate, privacy-protected, shareable data? We'll learn about Synthetic Data, how it solves this issue, and how to get started creating our own Synthetic Data.&lt;/p&gt;
</content><category term="PyCon Latam 2022"></category></entry><entry><title>Building Docs like Code: Continuous Integration for Documentation</title><link href="https://pyvideo.org/pycon-us-2020/building-docs-like-code-continuous-integration-for-documentation.html" rel="alternate"></link><published>2020-04-17T00:00:00+00:00</published><updated>2020-04-17T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2020-04-17:/pycon-us-2020/building-docs-like-code-continuous-integration-for-documentation.html</id><content type="html"></content><category term="PyCon US 2020"></category></entry><entry><title>Lightning Talks - Day 1</title><link href="https://pyvideo.org/pycon-us-2022/lightning-talks-day-1.html" rel="alternate"></link><published>2022-04-27T00:00:00+00:00</published><updated>2022-04-27T00:00:00+00:00</updated><author><name>Sameer Wagh</name></author><id>tag:pyvideo.org,2022-04-27:/pycon-us-2022/lightning-talks-day-1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are a ~ 5 minutes long, on any topic of interest to other Python people. It doesn't have to be about something that you wrote, it can be something that you learned, or a technique you think other people will be interested in.&lt;/p&gt;
&lt;p&gt;Speakers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:50 - Sameer Wagh …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are a ~ 5 minutes long, on any topic of interest to other Python people. It doesn't have to be about something that you wrote, it can be something that you learned, or a technique you think other people will be interested in.&lt;/p&gt;
&lt;p&gt;Speakers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:50 - Sameer Wagh - Data Science without Data?&lt;/li&gt;
&lt;li&gt;2:25 - Cheuk Ting Ho - Cultural Shock - My 1st&lt;/li&gt;
&lt;li&gt;7:25 - Łukasz Langa - COVARIANCE/CONTRAVARIENCE&lt;/li&gt;
&lt;li&gt;11:45 - Seth M Larson - Truststore: OS trust stores in Python&lt;/li&gt;
&lt;li&gt;15:50 - Pablo Galindo - Memray: hardcore memory profiling&lt;/li&gt;
&lt;li&gt;20:17 - Graham Waters -The grief cycle, data security breaches, how we could code the future of America and the world&lt;/li&gt;
&lt;li&gt;24:17 - Mason Egger - What is Synthetic Data&lt;/li&gt;
&lt;li&gt;29:55 - Sophia Yang - Holoviz&lt;/li&gt;
&lt;li&gt;34:00 - Shiray Lamba - Robyn; The fastest rust based python webframework server&lt;/li&gt;
&lt;li&gt;39:00 - Chris May - Three steps to elegant code&lt;/li&gt;
&lt;li&gt;43:50 - Chris Ariza - Getting to 100% coverage&lt;/li&gt;
&lt;li&gt;49:15 - Indra - Jupyter ML model to production ML as a service&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyCon US 2022"></category><category term="lightning talks"></category></entry><entry><title>Write Docs Devs Love: Ten Tips To Level Up Your Tech Writing</title><link href="https://pyvideo.org/pycon-us-2022/write-docs-devs-love-ten-tips-to-level-up-your-tech-writing.html" rel="alternate"></link><published>2022-04-27T00:00:00+00:00</published><updated>2022-04-27T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2022-04-27:/pycon-us-2022/write-docs-devs-love-ten-tips-to-level-up-your-tech-writing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Think of that feeling you get when you follow an online tutorial or documentation and the code works on the first run. Now think of all the hours spent wasted following broken, outdated, or incomplete documentation. From our favorite tutorials to bad product docs we all consume technical writing …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Think of that feeling you get when you follow an online tutorial or documentation and the code works on the first run. Now think of all the hours spent wasted following broken, outdated, or incomplete documentation. From our favorite tutorials to bad product docs we all consume technical writing. Tutorials, blog posts, and product docs help developers learn new things, build projects, and debug issues. But what makes one tutorial better than another? In this talk I'll discuss how you can write the documentation that developers love and I’ll share 10 tips and tricks to improve your technical writing.&lt;/p&gt;
</content><category term="PyCon US 2022"></category></entry><entry><title>Diversity &amp; Inclusion Panel</title><link href="https://pyvideo.org/pycon-us-2024/diversity-inclusion-panel.html" rel="alternate"></link><published>2024-05-18T00:00:00+00:00</published><updated>2024-05-18T00:00:00+00:00</updated><author><name>Debora Azevedo</name></author><id>tag:pyvideo.org,2024-05-18:/pycon-us-2024/diversity-inclusion-panel.html</id><content type="html"></content><category term="PyCon US 2024"></category></entry><entry><title>Building Docs Like Code: Continuous Integration for Documentation</title><link href="https://pyvideo.org/pygotham-2019/building-docs-like-code-continuous-integration-for-documentation.html" rel="alternate"></link><published>2019-10-04T00:00:00+00:00</published><updated>2019-10-04T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2019-10-04:/pygotham-2019/building-docs-like-code-continuous-integration-for-documentation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;# Abstract&lt;/p&gt;
&lt;p&gt;Project documentation is easy to neglect. Keep your docs inside your
source repo &amp;amp; learn how to automatically build &amp;amp; publish beautiful docs
on every commit. Viewers will leave with a new mindset on how to handle
documentation, tooling for this process, &amp;amp; an easy-to-implement method
to achieve this.&lt;/p&gt;
&lt;p&gt;# Description&lt;/p&gt;
&lt;p&gt;It …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;# Abstract&lt;/p&gt;
&lt;p&gt;Project documentation is easy to neglect. Keep your docs inside your
source repo &amp;amp; learn how to automatically build &amp;amp; publish beautiful docs
on every commit. Viewers will leave with a new mindset on how to handle
documentation, tooling for this process, &amp;amp; an easy-to-implement method
to achieve this.&lt;/p&gt;
&lt;p&gt;# Description&lt;/p&gt;
&lt;p&gt;It is common for developers to overlook the documentation of their
works. They are either on a time crunch, lack the proper tooling, or
simply just forget to create and update the documentation. Whatever the
cause behind this, it is not a proper excuse for not keeping the
documentation up to date. However, for all our development processes
there are few as neglected as the documentation process. Documentation
should be treated as important as the code that makes up the project.
So, let’s move the documentation into the code. With modern
documentation tools such as MkDocs and Sphinx, both of which are Python
powered tools, and Continuous Integration tools we can now include docs
in the commit. They can be reviewed in code reviews, built and versioned
in a CI tool, and even tested for things such as correct code examples
and broken links. This is the process that the developer knows,
understands, and enjoys. I introduced a team to this exact workflow and
a working pipeline; all they had to do was keep the documentation up to
date. This team currently has some of the most up to date documentation
in a company of near two thousand engineers, and they never complain
about writing/updating documentation. It’s just part of the workflow.&lt;/p&gt;
</content><category term="PyGotham 2019"></category></entry><entry><title>Write Docs Devs Love: Ten Tricks To Level Up Your Tech Writing</title><link href="https://pyvideo.org/pygotham-2021/write-docs-devs-love-ten-tricks-to-level-up-your-tech-writing.html" rel="alternate"></link><published>2021-10-02T00:00:00+00:00</published><updated>2021-10-02T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2021-10-02:/pygotham-2021/write-docs-devs-love-ten-tricks-to-level-up-your-tech-writing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Think of that feeling you get when you follow an online tutorial or
documentation and the code works on the first run. Now think of all the
hours spent wasted following broken, outdated, or incomplete documentation.
From our favorite tutorials to bad product docs we all consume technical
writing …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Think of that feeling you get when you follow an online tutorial or
documentation and the code works on the first run. Now think of all the
hours spent wasted following broken, outdated, or incomplete documentation.
From our favorite tutorials to bad product docs we all consume technical
writing. Tutorials, blog posts, and product docs help developers learn new
things, build projects, and debug issues. But what makes one tutorial better
than another? In this talk I'll discuss how you can write the documentation
that developers love and I’ll share 10 tips and tricks to improve your
technical writing.&lt;/p&gt;
</content><category term="PyGotham 2021"></category></entry><entry><title>Building Docs like Code: Continuous Integration for Documentation</title><link href="https://pyvideo.org/pyohio-2019/building-docs-like-code-continuous-integration-for-documentation.html" rel="alternate"></link><published>2019-07-27T15:45:00+00:00</published><updated>2019-07-27T15:45:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2019-07-27:/pyohio-2019/building-docs-like-code-continuous-integration-for-documentation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Project documentation is easy to neglect. Keep your docs inside your
source repo and learn how to automatically build and publish beautiful
docs on every commit. Viewers will leave with a new mindset on how to
handle documentation, tooling for this process, and an easy-to-implement
method to achieve this …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Project documentation is easy to neglect. Keep your docs inside your
source repo and learn how to automatically build and publish beautiful
docs on every commit. Viewers will leave with a new mindset on how to
handle documentation, tooling for this process, and an easy-to-implement
method to achieve this.&lt;/p&gt;
&lt;p&gt;It is common for developers to overlook the documentation of their
works. They are either on a time crunch, lack the proper tooling, or
simply just forget to create and update the documentation. Whatever the
cause behind this, it is not a proper excuse for not keeping the
documentation up to date. However, for all our development processes
there are few as neglected as the documentation process. Documentation
should be treated as important as the code that makes up the project. In
this talk we'll take a look at current documentation processes and
discuss moving the documentation into the code. With modern
documentation tools such as MkDocs and Sphinx, both of which are Python
powered tools, and Continuous Integration tools we can now include docs
in the commit. They can be reviewed in code reviews, built and versioned
in a CI tool, and even tested for things such as correct code examples
and broken links. This is the process that the developer knows,
understands, and enjoys. I introduced a team to this exact workflow and
a working pipeline; all they had to do was keep the documentation up to
date. This team currently has some of the most up to date documentation
in a company of near two thousand engineers, and they never complain
about writing/updating documentation. It’s just part of the workflow.&lt;/p&gt;
</content><category term="PyOhio 2019"></category></entry><entry><title>There’s a Snake in the Birdhouse! Building a Python Culture at Vrbo</title><link href="https://pyvideo.org/pyohio-2020/theres-a-snake-in-the-birdhouse-building-a-python-culture-at-vrbo.html" rel="alternate"></link><published>2020-07-25T00:00:00+00:00</published><updated>2020-07-25T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2020-07-25:/pyohio-2020/theres-a-snake-in-the-birdhouse-building-a-python-culture-at-vrbo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all love Python, but not everyone is fortunate enough to use it at
their day job. Come and listen as I detail the journey I took to
establish Python as an onroad option at my company. Viewers will leave
having learned from my experiences—both successes and mistakes …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all love Python, but not everyone is fortunate enough to use it at
their day job. Come and listen as I detail the journey I took to
establish Python as an onroad option at my company. Viewers will leave
having learned from my experiences—both successes and mistakes—and with
a solid plan for implementing Python at their job.&lt;/p&gt;
</content><category term="PyOhio 2020"></category></entry><entry><title>The Enters and Exits of Context Managers</title><link href="https://pyvideo.org/pyohio-2021/the-enters-and-exits-of-context-managers.html" rel="alternate"></link><published>2021-07-31T00:00:00+00:00</published><updated>2021-07-31T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2021-07-31:/pyohio-2021/the-enters-and-exits-of-context-managers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever opened a file using the with keyword in Python? That
little keyword is one of the many fascinating parts of the Python
programming language, the Context Manager. This talk will cover all
things Context Manager, from what they are, how to build them, when to
use …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever opened a file using the with keyword in Python? That
little keyword is one of the many fascinating parts of the Python
programming language, the Context Manager. This talk will cover all
things Context Manager, from what they are, how to build them, when to
use them, and more. View the source code for this entire presentation on
&lt;a class="reference external" href="https://github.com/MasonEgger/context-managers-sample-code"&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</content><category term="PyOhio 2021"></category></entry><entry><title>I Can't Believe It's Not Real Data! An Introduction into Synthetic Data</title><link href="https://pyvideo.org/pyohio-2022/i-cant-believe-its-not-real-data-an-introduction-into-synthetic-data.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/i-cant-believe-its-not-real-data-an-introduction-into-synthetic-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From Data Science and Machine Learning to Software Engineering and
testing, access to accurate data is one of the biggest bottlenecks
hindering development. Developers need accurate, relevant data to safely
experiment when building applications, machine learning models, testing,
etc. However, developers often run into issues gathering data, from a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From Data Science and Machine Learning to Software Engineering and
testing, access to accurate data is one of the biggest bottlenecks
hindering development. Developers need accurate, relevant data to safely
experiment when building applications, machine learning models, testing,
etc. However, developers often run into issues gathering data, from a
lack of data to the inability to access the data due to privacy
policies. But what if you could have instant access to an unlimited
supply of high-fidelity data that’s statistically accurate,
privacy-protected, and safe to share? This is where Synthetic Data comes
in. In this talk, you'll learn about Synthetic Data, the problems it
solves, and how to get started generating as much relevant data as you
want.&lt;/p&gt;
&lt;p&gt;In this talk, we'll discuss what Synthetic Data is, the benefits of
using Synthetic Data, and the efficacy of it. You'll see real-world
situations where Synthetic Data removes bias, augments data sets, and
makes once private data easily shareable while still protecting the
privacy of the initial data set.&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Building Docs like Code: Continuous Integration for Documentation</title><link href="https://pyvideo.org/pytexas-2019/building-docs-like-code-continuous-integration-for-documentation.html" rel="alternate"></link><published>2019-04-14T00:00:00+00:00</published><updated>2019-04-14T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2019-04-14:/pytexas-2019/building-docs-like-code-continuous-integration-for-documentation.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Project documentation is easy to neglect. Keep your docs inside your source repo &amp;amp; learn how to automatically build &amp;amp; publish beautiful docs on every commit. Viewers will leave with a new mindset on how to handle documentation, tooling for this process, &amp;amp; an easy-to-implement method to achieve this.&lt;/p&gt;
</content><category term="PyTexas 2019"></category><category term="Documentation"></category></entry><entry><title>Theres a Snake in the Birdhouse Building a Python Culture at Vrbo</title><link href="https://pyvideo.org/pytexas-2020/theres-a-snake-in-the-birdhouse-building-a-python-culture-at-vrbo.html" rel="alternate"></link><published>2020-10-25T00:00:00+00:00</published><updated>2020-10-25T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2020-10-25:/pytexas-2020/theres-a-snake-in-the-birdhouse-building-a-python-culture-at-vrbo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all love Python, but not everyone is able to use it at their job. I’ll detail the journey I took to establish Python as a first-class option within my company. Viewers will leave having learned from my experiences and with a solid plan for creating a Python …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all love Python, but not everyone is able to use it at their job. I’ll detail the journey I took to establish Python as a first-class option within my company. Viewers will leave having learned from my experiences and with a solid plan for creating a Python culture at their company.&lt;/p&gt;
&lt;p&gt;Speaker: Mason Egger
Mason is currently a Developer Advocate at DigitalOcean who specializes incloud infrastructure, distributed systems, and Python. Prior to his work at DigitalOcean he was an SRE helping build and maintain a highly available hybrid multicloud PaaS. He is an avid programmer, musician, educator, and writer/blogger at masonegger.com. In his spare time he enjoys reading, camping, kayaking, and exploring new places.&lt;/p&gt;
</content><category term="PyTexas 2020"></category></entry><entry><title>How to Build and Deploy Your First Python Slackbot on DigitalOceans App Platform</title><link href="https://pyvideo.org/pytexas-2020/how-to-build-and-deploy-your-first-python-slackbot-on-digitaloceans-app-platform.html" rel="alternate"></link><published>2020-10-24T00:00:00+00:00</published><updated>2020-10-24T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2020-10-24:/pytexas-2020/how-to-build-and-deploy-your-first-python-slackbot-on-digitaloceans-app-platform.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building a Slackbot has never been easier. Join Mason Egger as he &amp;quot;live codes&amp;quot; a Slackbot in Python, demonstrating how to send messages and listen to events from Slack. No need for servers or complex configurations, just bring your code and deploy to DigitalOcean's App Platform.&lt;/p&gt;
&lt;p&gt;Speaker: Mason Egger …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building a Slackbot has never been easier. Join Mason Egger as he &amp;quot;live codes&amp;quot; a Slackbot in Python, demonstrating how to send messages and listen to events from Slack. No need for servers or complex configurations, just bring your code and deploy to DigitalOcean's App Platform.&lt;/p&gt;
&lt;p&gt;Speaker: Mason Egger
Mason is currently a Developer Advocate at DigitalOcean who specializes incloud infrastructure, distributed systems, and Python. Prior to his work at DigitalOcean he was an SRE helping build and maintain a highly available hybrid multicloud PaaS. He is an avid programmer, musician, educator, and writer/blogger at masonegger.com. In his spare time he enjoys reading, camping, kayaking, and exploring new places.&lt;/p&gt;
</content><category term="PyTexas 2020"></category></entry><entry><title>PyTexas 2022 Intro</title><link href="https://pyvideo.org/pytexas-2022/pytexas-2022-intro.html" rel="alternate"></link><published>2022-06-21T00:00:00+00:00</published><updated>2022-06-21T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2022-06-21:/pytexas-2022/pytexas-2022-intro.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Welcome to PyTexas 2022!&lt;/p&gt;
</content><category term="PyTexas 2022"></category></entry><entry><title>Lighting Talks Day 1</title><link href="https://pyvideo.org/pytexas-2025/lighting-talks-day-1.html" rel="alternate"></link><published>2025-04-12T00:00:00+00:00</published><updated>2025-04-12T00:00:00+00:00</updated><author><name>Lynn Root</name></author><id>tag:pyvideo.org,2025-04-12:/pytexas-2025/lighting-talks-day-1.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lighting Talks Day 1&lt;/p&gt;
</content><category term="PyTexas 2025"></category></entry><entry><title>A Year Without Pants: Strategies for Successful Remote Work</title><link href="https://pyvideo.org/python-web-conf-2021/a-year-without-pants-strategies-for-successful-remote-work.html" rel="alternate"></link><published>2021-03-22T00:00:00+00:00</published><updated>2021-03-22T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2021-03-22:/python-web-conf-2021/a-year-without-pants-strategies-for-successful-remote-work.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;A Year Without Pants: Strategies for Successful Remote Work&amp;quot; by: Mason Egger&lt;/p&gt;
&lt;p&gt;2020 was the year of forced remote work. People struggle with this change due to lack of guidance on how to manage this shift. Due to this, many people have developed a negative opinion of remote work …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;A Year Without Pants: Strategies for Successful Remote Work&amp;quot; by: Mason Egger&lt;/p&gt;
&lt;p&gt;2020 was the year of forced remote work. People struggle with this change due to lack of guidance on how to manage this shift. Due to this, many people have developed a negative opinion of remote work. However, remote work can be liberating. So how can you make working remotely enjoyable? From daily routines to simulated commutes I’ll discuss strategies for making remote work comfortable, productive, and enjoyable.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</content><category term="Python Web Conf 2021"></category><category term="PythonWebConf"></category><category term="PythonWebConf2021"></category></entry></feed>