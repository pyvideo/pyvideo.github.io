<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_mason-egger.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-10-04T00:00:00+00:00</updated><entry><title>Building Docs Like Code: Continuous Integration for Documentation</title><link href="https://pyvideo.org/pygotham-2019/building-docs-like-code-continuous-integration-for-documentation.html" rel="alternate"></link><published>2019-10-04T00:00:00+00:00</published><updated>2019-10-04T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2019-10-04:pygotham-2019/building-docs-like-code-continuous-integration-for-documentation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;# Abstract&lt;/p&gt;
&lt;p&gt;Project documentation is easy to neglect. Keep your docs inside your
source repo &amp;amp; learn how to automatically build &amp;amp; publish beautiful docs
on every commit. Viewers will leave with a new mindset on how to handle
documentation, tooling for this process, &amp;amp; an easy-to-implement method
to achieve this.&lt;/p&gt;
&lt;p&gt;# Description&lt;/p&gt;
&lt;p&gt;It is common for developers to overlook the documentation of their
works. They are either on a time crunch, lack the proper tooling, or
simply just forget to create and update the documentation. Whatever the
cause behind this, it is not a proper excuse for not keeping the
documentation up to date. However, for all our development processes
there are few as neglected as the documentation process. Documentation
should be treated as important as the code that makes up the project.
So, let’s move the documentation into the code. With modern
documentation tools such as MkDocs and Sphinx, both of which are Python
powered tools, and Continuous Integration tools we can now include docs
in the commit. They can be reviewed in code reviews, built and versioned
in a CI tool, and even tested for things such as correct code examples
and broken links. This is the process that the developer knows,
understands, and enjoys. I introduced a team to this exact workflow and
a working pipeline; all they had to do was keep the documentation up to
date. This team currently has some of the most up to date documentation
in a company of near two thousand engineers, and they never complain
about writing/updating documentation. It’s just part of the workflow.&lt;/p&gt;
</summary></entry><entry><title>Building Docs like Code: Continuous Integration for Documentation</title><link href="https://pyvideo.org/pycon-latam-2019/building-docs-like-code-continuous-integration-for-documentation.html" rel="alternate"></link><published>2019-08-30T00:00:00+00:00</published><updated>2019-08-30T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2019-08-30:pycon-latam-2019/building-docs-like-code-continuous-integration-for-documentation.html</id><summary type="html"></summary></entry><entry><title>Building Docs like Code: Continuous Integration for Documentation</title><link href="https://pyvideo.org/pyohio-2019/building-docs-like-code-continuous-integration-for-documentation.html" rel="alternate"></link><published>2019-07-27T15:45:00+00:00</published><updated>2019-07-27T15:45:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2019-07-27:pyohio-2019/building-docs-like-code-continuous-integration-for-documentation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Project documentation is easy to neglect. Keep your docs inside your
source repo and learn how to automatically build and publish beautiful
docs on every commit. Viewers will leave with a new mindset on how to
handle documentation, tooling for this process, and an easy-to-implement
method to achieve this.&lt;/p&gt;
&lt;p&gt;It is common for developers to overlook the documentation of their
works. They are either on a time crunch, lack the proper tooling, or
simply just forget to create and update the documentation. Whatever the
cause behind this, it is not a proper excuse for not keeping the
documentation up to date. However, for all our development processes
there are few as neglected as the documentation process. Documentation
should be treated as important as the code that makes up the project. In
this talk we'll take a look at current documentation processes and
discuss moving the documentation into the code. With modern
documentation tools such as MkDocs and Sphinx, both of which are Python
powered tools, and Continuous Integration tools we can now include docs
in the commit. They can be reviewed in code reviews, built and versioned
in a CI tool, and even tested for things such as correct code examples
and broken links. This is the process that the developer knows,
understands, and enjoys. I introduced a team to this exact workflow and
a working pipeline; all they had to do was keep the documentation up to
date. This team currently has some of the most up to date documentation
in a company of near two thousand engineers, and they never complain
about writing/updating documentation. It’s just part of the workflow.&lt;/p&gt;
</summary></entry><entry><title>Building Docs like Code: Continuous Integration for Documentation</title><link href="https://pyvideo.org/pytexas-2019/building-docs-like-code-continuous-integration-for-documentation.html" rel="alternate"></link><published>2019-04-14T00:00:00+00:00</published><updated>2019-04-14T00:00:00+00:00</updated><author><name>Mason Egger</name></author><id>tag:pyvideo.org,2019-04-14:pytexas-2019/building-docs-like-code-continuous-integration-for-documentation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Project documentation is easy to neglect. Keep your docs inside your source repo &amp;amp; learn how to automatically build &amp;amp; publish beautiful docs on every commit. Viewers will leave with a new mindset on how to handle documentation, tooling for this process, &amp;amp; an easy-to-implement method to achieve this.&lt;/p&gt;
</summary><category term="Documentation"></category></entry></feed>