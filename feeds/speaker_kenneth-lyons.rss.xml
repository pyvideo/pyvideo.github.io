<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 13 Jul 2018 00:00:00 +0000</lastBuildDate><item><title>Resonance: Learning Mechanical Vibrations Through Computational Thinking</title><link>https://pyvideo.org/scipy-2018/resonance-learning-mechanical-vibrations-through-computational-thinking.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will describe a pilot project at the University of California, Davis
on the redesign of an upper level mechanical vibrations engineering
course where students now learn the relevant concepts via computational
thinking and computational experimentation. We utilize interactive
computing with the Jupyter platform and a custom Python library instead
of focusing on the analytical mathematical methods used over the past
century. I will cover the course design, principles of teaching and
learning with computational thinking (focusing on API design and the use
of symbolics), software/hardware infrastructure, assessment practices,
and lessons learned.Presenter(s): Speaker: Kenneth Lyons, University of
California, Davis&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kenneth Lyons</dc:creator><pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-13:scipy-2018/resonance-learning-mechanical-vibrations-through-computational-thinking.html</guid></item><item><title>Automatic Code Generation with SymPy</title><link>https://pyvideo.org/scipy-2017/automatic-code-generation-with-sympy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutorial materials found here: &lt;a class="reference external" href="https://scipy2017.scipy.org/ehome/220975/493423/"&gt;https://scipy2017.scipy.org/ehome/220975/493423/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This tutorial will introduce code generation concepts using the SymPy library. SymPy is a pure Python library for symbolic mathematics. Code generation refers to the act of converting a SymPy symbolic expression into equivalent code in some language. This allows one to use SymPy to symbolically model a problem, and generate fast numerical code for specific platforms that executes that model. This is a powerful tool that is useful to scientists in many domains. Code generation allows users to speed up existing code, to deal only with the high level mathematics of a problem, avoids mathematical errors and typos, makes it possible to deal with expressions that would otherwise be too large to write by hand, and opens possibilities to perform automatic mathematical optimizations of expressions.&lt;/p&gt;
&lt;p&gt;SymPy supports generating code for C, C++, Fortran, Matlab/Octave, Python, Cython, Julia, Javascript, LLVM, Rust, Haskell, Mathematica, Tensorflow, and Theano, and can easily be extended to other languages. SymPyâ€™s code generation is used by libraries such as PyDy, pyodesys, sympybotics, pycalphad, and many other programs.&lt;/p&gt;
&lt;p&gt;Learning objectives&lt;/p&gt;
&lt;p&gt;Attendees will be able to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;write SymPy expressions describing mathematical functions and identify the function arguments and outputs.&lt;/li&gt;
&lt;li&gt;use the SymPy code printers to transform SymPy expressions representing common domain specific functions into multiple output languages.&lt;/li&gt;
&lt;li&gt;use the SymPy code generation routines to output compilable C code and use Cython to access these functions in Python.&lt;/li&gt;
&lt;li&gt;generate custom vectorized functions with the three SymPy functions: lambdify, ufuncify, and autowrap.&lt;/li&gt;
&lt;li&gt;create both custom code printers that make use of specialized C libraries and common subexpression elimination (CSE).&lt;/li&gt;
&lt;li&gt;subclass the core SymPy printers and create a printer for a custom language.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Moore</dc:creator><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-12:scipy-2017/automatic-code-generation-with-sympy.html</guid><category>tutorial</category><category>sympy</category></item></channel></rss>