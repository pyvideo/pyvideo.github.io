<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_roman-imankulov.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-12-14T00:00:00+00:00</updated><entry><title>Scale like a pro</title><link href="https://pyvideo.org/python-porto/scale-like-a-pro.html" rel="alternate"></link><published>2017-12-14T00:00:00+00:00</published><updated>2017-12-14T00:00:00+00:00</updated><author><name>Roman Imankulov</name></author><id>tag:pyvideo.org,2017-12-14:python-porto/scale-like-a-pro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Task processing with multiprocessing and Celery&lt;/p&gt;
</summary><category term="celery"></category><category term="multiprocessing"></category><category term="porto"></category><category term="portugal"></category></entry><entry><title>Как мы логировали, логировали и вылогировали</title><link href="https://pyvideo.org/pycon-belarus-2016/kak-my-logirovali-logirovali-i-vylogirovali.html" rel="alternate"></link><published>2016-02-06T00:00:00+00:00</published><updated>2016-02-06T00:00:00+00:00</updated><author><name>Роман Иманкулов</name></author><id>tag:pyvideo.org,2016-02-06:pycon-belarus-2016/kak-my-logirovali-logirovali-i-vylogirovali.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Логировать – это приятно и просто. По крайней мере, до тех пор, пока у
логов не появляются читатели... Чтобы сделать логи действительно
полезными, оказывается, нужно приложить на порядок больше усилий. В
докладе Роман расскажет, какие усилия они прикладывали в Todoist, и что
из этого получилось. Поговорим об особенностях укрощения библиотеки
logging; о том, как сообщения формировать, передавать, хранить и читать;
за что принято ненавидеть ElasticSearch; как не потерять контекст при
выполнении задач в отдельных процессах; как очистить логи от приватной
информации и не потерять смысл, и кое о чем другом.&lt;/p&gt;
</summary></entry><entry><title>Celery for internal API in SOA infrastructure</title><link href="https://pyvideo.org/pycon-russia-2013/celery-for-internal-api-in-soa-infrastructure.html" rel="alternate"></link><published>2013-02-25T00:00:00+00:00</published><updated>2013-02-25T00:00:00+00:00</updated><author><name>Roman Imankulov</name></author><id>tag:pyvideo.org,2013-02-25:pycon-russia-2013/celery-for-internal-api-in-soa-infrastructure.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The main purpose of Celery is to execute background tasks. As a rule, Celery processes use the same code base as the main application. I suggest to have a look at Celery from the other side and try to use in as a transport for linking the dispersed application components.  The report will show the particular examples of API realization on Celery, take a good look at questions connected with the routing of demands to workers. Also there will be told why exactly Celery is so good for inside API building, in what situations the usage can be excess. The audience will learn how to connect the components of dispersed application in the whole thing  fast and without extra consumptions, get rid of coherence, and possibly to look at your application from the other side. It’s taken that listeners know the queue messengers concept and conceive why Celery or analogous solutions  can be used&lt;/p&gt;
</summary></entry><entry><title>Python для анализа данных.</title><link href="https://pyvideo.org/pycon-russia-2014/python-dlia-analiza-dannykh.html" rel="alternate"></link><published>2014-06-02T00:00:00+00:00</published><updated>2014-06-02T00:00:00+00:00</updated><author><name>Роман Иманкулов</name></author><id>tag:pyvideo.org,2014-06-02:pycon-russia-2014/python-dlia-analiza-dannykh.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;В последнее время анализ данных стал горячей темой.
В  этом плане python разработчики по сравнению с остальными кастами программистов находятся в выгодном положении  —  в их распоряжении есть как несомненно прекрасный язык общего назначения, так и множество инструментов для научной обработки данных.
О последних многие слышали, но мало кто знает, как этим пользоваться, и какую пользу они могут принести простым смертным.
В докладе я познакомлю слушателей с основными инструментами для обработки данных: всемогущим ipython, библиотеками numpy, scipy, pandas и scikit-learn. В ходе ознакомления с ними на простом примере мы выясним, какую пользу для себя начинающий python аналитик может извлечь прямо сейчас.
Доклад расчитан как на начинающих, так и на опытных разработчиков на python, которые, тем не менее, не имели серьезного опыта анализа данных, хотят попробовать, но не знают с чего начать.&lt;/p&gt;
</summary></entry></feed>