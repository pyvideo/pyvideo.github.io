<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_alex-chan.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-09-14T00:00:00+00:00</updated><entry><title>The Curb Cut Effect</title><link href="https://pyvideo.org/pycon-uk-2019/the-curb-cut-effect.html" rel="alternate"></link><published>2019-09-14T00:00:00+00:00</published><updated>2019-09-14T00:00:00+00:00</updated><author><name>Alex Chan</name></author><id>tag:pyvideo.org,2019-09-14:pycon-uk-2019/the-curb-cut-effect.html</id><summary type="html"></summary></entry><entry><title>Sans I/O programming patterns - what, why, and how</title><link href="https://pyvideo.org/pycon-uk-2019/sans-io-programming-patterns-what-why-and-how.html" rel="alternate"></link><published>2019-09-13T00:00:00+00:00</published><updated>2019-09-13T00:00:00+00:00</updated><author><name>Alex Chan</name></author><id>tag:pyvideo.org,2019-09-13:pycon-uk-2019/sans-io-programming-patterns-what-why-and-how.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Programmers have plenty of powerful, flexible libraries – and yet we often end up reinventing the wheel. Why? Because they’re not reusable – code gets trapped by its I/O model. In this talk, we’ll look at the benefits and techniques for writing “sans I/O” code.&lt;/p&gt;
</summary></entry><entry><title>Assume Worst Intent</title><link href="https://pyvideo.org/pycon-uk-2018/assume-worst-intent.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Alex Chan</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/assume-worst-intent.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Designing for the Abusive Ex&lt;/p&gt;
&lt;p&gt;Apps and services often build features with good intent, trying to
improve interactivity or connections between our users. But what if one
of your users has a stalker, or an abusive ex? You may have given them
another way to hurt or harass your user.&lt;/p&gt;
&lt;p&gt;This session will help you identify common threat models – who is at
most at- risk, and who is a threat to your most vulnerable users. Then
we’ll look at some good practices that improve the safety of your users,
and how to design with these risks in mind. There’s no silver bullet
that totally eliminates risk, but you can make design decisions that
give more control and safety to your users.&lt;/p&gt;
&lt;p&gt;(Content warnings: tbc)&lt;/p&gt;
</summary></entry><entry><title>Keynote: Building trust in a world of suspicious minds</title><link href="https://pyvideo.org/pycon-uk-2018/keynote-building-trust-in-a-world-of-suspicious-minds.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>Alex Chan</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/keynote-building-trust-in-a-world-of-suspicious-minds.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Alex is a software developer at &lt;a class="reference external" href="https://wellcomecollection.org"&gt;Wellcome
Collection&lt;/a&gt;. He is also a veteran
PyCon UK organiser, and a key member of this year's team.&lt;/p&gt;
&lt;p&gt;In his talk, Alex will consider how trust can be fostered in systems
that are built around principles of security and threat.&lt;/p&gt;
</summary></entry><entry><title>Using privilege to improve inclusion</title><link href="https://pyvideo.org/pycon-uk-2017/using-privilege-to-improve-inclusion.html" rel="alternate"></link><published>2017-10-27T10:30:00+01:00</published><updated>2017-10-27T10:30:00+01:00</updated><author><name>Alex Chan</name></author><id>tag:pyvideo.org,2017-10-27:pycon-uk-2017/using-privilege-to-improve-inclusion.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GitHub profiles are often used as a proxy for talent and aptitude – surely if somebody’s a “real” developer, they spend all their free time working on code, right? It’s looked upon favourably in job applications, and used by recruiters for the next round of recruit-o-grams.&lt;/p&gt;
&lt;p&gt;But it’s a privilege to have free time to work on code – not just the time itself, but the energy and the ability to work for free. This tips the playing field in favour of certain people (mostly white men and young, single people without families).&lt;/p&gt;
&lt;p&gt;When we forget our privilege, we can introduce inequality and hurt minorities. And we all have different types of privilege – including the ability to take free time for a conference!&lt;/p&gt;
&lt;p&gt;If we acknowledge our privilege, we can use it to help others by remembering that not everyone has the time, energy or resources that we do.&lt;/p&gt;
&lt;p&gt;This talk provides some practical steps for identifying and sharing our privilege. By using our privilege to help others who lack it, we can build a more diverse and inclusive tech industry for everyone.&lt;/p&gt;
</summary></entry><entry><title>An Introduction to Property Based Testing</title><link href="https://pyvideo.org/pycon-uk-2016/an-introduction-to-property-based-testing.html" rel="alternate"></link><published>2016-09-18T00:00:00+00:00</published><updated>2016-09-18T00:00:00+00:00</updated><author><name>Alex Chan</name></author><id>tag:pyvideo.org,2016-09-18:pycon-uk-2016/an-introduction-to-property-based-testing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Alex Chan&lt;/p&gt;
</summary></entry></feed>