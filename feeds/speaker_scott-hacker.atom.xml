<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_scott-hacker.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-09-24T00:00:00+00:00</updated><entry><title>Managing Identities: LDAP, Google Directory, and Django</title><link href="https://pyvideo.org/djangocon-us-2015/managing-identities-ldap-google-directory-and-by.html" rel="alternate"></link><published>2015-09-24T00:00:00+00:00</published><updated>2015-09-24T00:00:00+00:00</updated><author><name>Scott Hacker</name></author><id>tag:pyvideo.org,2015-09-24:djangocon-us-2015/managing-identities-ldap-google-directory-and-by.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Managing Identities: LDAP, Google Directory, and Django&lt;/p&gt;
&lt;p&gt;Universities and other enterprises often deploy a complex mix of systems
for managing identities and permissions for students, faculty and staff.
Standard LDAP, Google Apps for Education/Enterprise, Student Information
Systems, hiring systems, CAS/Single Sign-On, and more must all work
together without conflicts or delays. At the California College of Arts,
we've created a Django-based system to help end-users and staff create
and manage identities, passwords, groups, permissions, and more. Scot
Hacker will demonstrate the system and provide a tour of its strictly
decoupled internals. The system is unusual in that it uses almost no
data modeling of its own, relying instead on communication via
python-ldap, Google and Workday APIs, and old-school file shuffling to
negotiate communications with other systems.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/HIXM/"&gt;http://amara.org/v/HIXM/&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>