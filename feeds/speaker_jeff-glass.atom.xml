<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Jeff Glass</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jeff-glass.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-05-17T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Making Your Documentation Interactive with PyScript</title><link href="https://pyvideo.org/pycon-us-2024/making-your-documentation-interactive-with-pyscript.html" rel="alternate"></link><published>2024-05-17T00:00:00+00:00</published><updated>2024-05-17T00:00:00+00:00</updated><author><name>Jeff Glass</name></author><id>tag:pyvideo.org,2024-05-17:/pycon-us-2024/making-your-documentation-interactive-with-pyscript.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The documentation for your Python package is already peppered with
examples – what if users could run them in an interactive REPL, right
inside the online documentation? With PyScript, developers can add an
interactive Python session to any webpage, including integration with
Sphinx, MkDocs, readthedocs, and GitHub Pages. Your documentation …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The documentation for your Python package is already peppered with
examples – what if users could run them in an interactive REPL, right
inside the online documentation? With PyScript, developers can add an
interactive Python session to any webpage, including integration with
Sphinx, MkDocs, readthedocs, and GitHub Pages. Your documentation
examples become an interactive learning session with zero backend or
installation.&lt;/p&gt;
&lt;p&gt;In this talk, you will learn how to enhance your Python web
documentation by making it interactive and runnable anywhere, in a fully
serverless way.&lt;/p&gt;
</content><category term="PyCon US 2024"></category></entry><entry><title>Make Your Documentation Interactive with PyScript</title><link href="https://pyvideo.org/pyohio-2023/make-your-documentation-interactive-with-pyscript.html" rel="alternate"></link><published>2023-12-16T00:00:00+00:00</published><updated>2023-12-16T00:00:00+00:00</updated><author><name>Jeff Glass</name></author><id>tag:pyvideo.org,2023-12-16:/pyohio-2023/make-your-documentation-interactive-with-pyscript.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Your documentation is peppered with examples – what if users could run
them in an interactive REPL, right inside the online documentation? With
PyScript, developers can add an interactive Python session to any
webpage, including integration with Sphinx, MkDocs, readthedocs, and
GitHub Pages.&lt;/p&gt;
&lt;p&gt;In this talk, you will learn how …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Your documentation is peppered with examples – what if users could run
them in an interactive REPL, right inside the online documentation? With
PyScript, developers can add an interactive Python session to any
webpage, including integration with Sphinx, MkDocs, readthedocs, and
GitHub Pages.&lt;/p&gt;
&lt;p&gt;In this talk, you will learn how to enhance your Python web
documentation by making it fully interactive and runnable anywhere, in a
fully serverless way.&lt;/p&gt;
</content><category term="PyOhio 2023"></category></entry></feed>