<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 07 Dec 2019 00:00:00 +0000</lastBuildDate><item><title>Lightning Talks</title><link>https://pyvideo.org/pydata-austin-2019/lightning-talks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yurry Pakhotin</dc:creator><pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-12-07:pydata-austin-2019/lightning-talks.html</guid></item><item><title>Visualizing Machine Learning of Units of Measure using PyViz</title><link>https://pyvideo.org/pydata-austin-2019/visualizing-machine-learning-of-units-of-measure-using-pyviz.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will discuss how PyViz tools were used to visualize Machine Learning employed to learn clinical units of measure from ClinicalTrials.Gov and multiple standards&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Barhak</dc:creator><pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-12-07:pydata-austin-2019/visualizing-machine-learning-of-units-of-measure-using-pyviz.html</guid><category>pyviz</category><category>Machine-Learning</category><category>visualization</category></item><item><title>Standardizing Clinical Data with Python - Jacob Barhak - PyCon Israel 2019</title><link>https://pyvideo.org/pycon-israel-2019/standardizing-clinical-data-with-python-jacob-barhak-pycon-israel-2019.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Barhak</dc:creator><pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-06-03:pycon-israel-2019/standardizing-clinical-data-with-python-jacob-barhak-pycon-israel-2019.html</guid></item><item><title>Evolutionary Computation Examples with Inspyred</title><link>https://pyvideo.org/pycon-israel-2018/evolutionary-computation-examples-with-inspyred.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is joined work with Aaron Garrett who wrote Inspyred.&lt;/p&gt;
&lt;p&gt;Evolutionary Computation (EC) allows solving very complex optimization problems and NP Hard problems with relatively simple formulation. The Inspyred python library provides proper tools to solve such problems in a generic way, it supports genetic algorithms, simulated annealing and other EC techniques. The talk will provide an overview of the library and will show examples of application of the library to complex problems such as population generation with constraints and fair matching of groups towards tournament creation.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Barhak</dc:creator><pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-05:pycon-israel-2018/evolutionary-computation-examples-with-inspyred.html</guid><category>inspyred</category></item><item><title>The Reference Model: A Decade of Healthcare Predictive Analytics</title><link>https://pyvideo.org/pytexas-2017/the-reference-model-a-decade-of-healthcare-predictive-analytics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is the life expectancy of a diabetic? What is the equivalent of Mooreâ€™s law for medical progress with respect to diabetic cardiovascular disease? How to interface with ClinicalTrials.Gov ? The talk will describe how python helped answer those questions after about a decade of work.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Barhak</dc:creator><pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-11-19:pytexas-2017/the-reference-model-a-decade-of-healthcare-predictive-analytics.html</guid></item><item><title>The Reference Model for Disease Progression and Latest Developments in the MIST</title><link>https://pyvideo.org/pytexas-2015/the-reference-model-for-disease-progression-and-l.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Reference Model for Disease progression is a league of disease
models that determines fitness of publicly available populations and
models and assumptions. The Reference Model has grown to the point that
it was hard to maintain the code base and increase the number of
populations. Recent advances with the MIcro Simulation Tool (MIST), that
runs the model, allow object oriented population generation.
Evolutionary Computation, using the Python Inspyred library by Aaron
Garrett, is a key element in MIST population generation. Recent
developments allow easier introductions of variations in population
generation to figure out fitness of unknown base assumptions. This is
powerful in conjunction with High Performance Computing that allows
testing multiple modeling assumptions in parallel.&lt;/p&gt;
&lt;p&gt;Previous work was presented in this and other venues:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=vyvxiljc5vA"&gt;https://www.youtube.com/watch?v=vyvxiljc5vA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=AD896WakR94"&gt;https://www.youtube.com/watch?v=AD896WakR94&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Barhak</dc:creator><pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-15:pytexas-2015/the-reference-model-for-disease-progression-and-l.html</guid></item><item><title>MIST: Micro-Simulation Tool to Support Disease Modeling</title><link>https://pyvideo.org/scipy-2013/mist-micro-simulation-tool-to-support-disease-mo-0.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;MIST stands for Misco-Simulation Tool. It is a modeling and simulation
framework that supports computational Chronic Disease Modeling
activities.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Authors: Jacob Barhak&lt;/p&gt;
&lt;p&gt;Track: Bioinformatics&lt;/p&gt;
&lt;p&gt;MIST stands for Misco-Simulation Tool. It is a modeling and simulation
framework that supports computational Chronic Disease Modeling
activities. It is a fork from the IEST = Indirect Estimation and
Simulation Tool GPL modeling framework.&lt;/p&gt;
&lt;p&gt;MIST removes complexity associated with the estimation engine, with
parameter definitions, and with rule restrictions. This significantly
simplifies the system and allows its development in the Micro-simulation
path less encumbered.&lt;/p&gt;
&lt;p&gt;The incentive to split MIST was to adapt the code to use newer compiler
technology to speed up simulations. There is wrong skepticism in the
medical disease modeling community towards using Interpreters for
simulations due to performance issues. The use of advanced compiler
technology with Python may remedy this misconception and provide
optimized python based simulations. MIST is a first step in this
direction.&lt;/p&gt;
&lt;p&gt;MIST takes care of a few documented and known issues. It also moves to
use new scientific Python stacks such as Anaconda and PythonXY as its
platform. This improves its accessibility to less sophisticated users
that can now benefit from easier installation.&lt;/p&gt;
&lt;p&gt;The Reference Model for disease progression intends to use MIST as its
main platform. Yet MIST is equipped with a Micro-simulation compiler
designed to accommodate Monte Carlo simulations for other purposes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Barhak</dc:creator><pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-01:scipy-2013/mist-micro-simulation-tool-to-support-disease-mo-0.html</guid><category>bioinformatics</category></item></channel></rss>