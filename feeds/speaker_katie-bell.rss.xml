<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Katie Bell</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 11 Sep 2021 00:00:00 +0000</lastBuildDate><item><title>Keynote: How Python works as a teaching language</title><link>https://pyvideo.org/kiwi-pycon-2015/keynote-how-python-works-as-a-teaching-language.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Bell</dc:creator><pubDate>Sat, 05 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-05:/kiwi-pycon-2015/keynote-how-python-works-as-a-teaching-language.html</guid><category>Kiwi PyCon 2015</category></item><item><title>Rapid prototyping with teenagers</title><link>https://pyvideo.org/pycon-au-2015/rapid-prototyping-with-teenagers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is teamwork and rapid prototyping challenges on steroids. Imagine
15 high school kids, most of whom have only just learned to program,
working together to design and build a fully functional social
networking site in 3 days.&lt;/p&gt;
&lt;p&gt;This project is done as part of the NCSS (National Computer Science
School) summer program. NCSS has been running for 20 years, and I've
been involved in the last 7, so that's 6 different social networking
sites (we used to build search engines, but apparently they're not cool
anymore).&lt;/p&gt;
&lt;p&gt;I'll go through the technical details, the tools we use, how the site
functions, and how we structure the different pieces to come together.
I'll also show off some extra fun projects we throw at the advanced
kids, like building their own Django-like template engine, and secure
hashing of passwords.&lt;/p&gt;
&lt;p&gt;A lot of the challenge of this undertaking is inevitably also project
management and coordination of the team. These students have never
written tests before, don't know what version control is and don't
understand what it means to agree on an API. Hilarity and frustration
can (and does) ensue, especially during the last night, which is an
all-nighter.&lt;/p&gt;
&lt;p&gt;Come along to learn how to do project management with the least
experienced team possible and how to hack together a functional
prototype webapp with minimum effort.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Bell</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-04:/pycon-au-2015/rapid-prototyping-with-teenagers.html</guid><category>PyCon AU 2015</category></item><item><title>Lightning Talks - Sunday</title><link>https://pyvideo.org/pycon-au-2017/lightning-talks-sunday.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;table border="1" class="docutils"&gt;
&lt;caption&gt;Lightning Talks&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="10%" /&gt;
&lt;col width="30%" /&gt;
&lt;col width="60%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Time&lt;/th&gt;
&lt;th class="head"&gt;Speaker&lt;/th&gt;
&lt;th class="head"&gt;Title&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=0m19s"&gt;0:19&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Sam Kitajima-Kimbrel&lt;/td&gt;
&lt;td&gt;You Aren't Facebook, and That's OK&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=4m55s"&gt;4:55&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Jason King&lt;/td&gt;
&lt;td&gt;Don't do what I did&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=9m55s"&gt;9:55&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Evan Kohilas&lt;/td&gt;
&lt;td&gt;Rubber Snaek&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=12m13s"&gt;12:13&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dr. Russell Keith-Magee&lt;/td&gt;
&lt;td&gt;Tools for Apiarists&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=17m23s"&gt;17:23&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;William Brown&lt;/td&gt;
&lt;td&gt;Hard CPUs Make Multithreading&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=21m54s"&gt;21:54&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Allen Rueben&lt;/td&gt;
&lt;td&gt;Joining the dots&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=24m16s"&gt;24:16&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Malcolm Ramsay&lt;/td&gt;
&lt;td&gt;How I Reinvented Solarized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=26m47s"&gt;26:47&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Zac Hatfield-Dodds&lt;/td&gt;
&lt;td&gt;From REPL to reliable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=31m55s"&gt;31:55&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Daniel McCarthy&lt;/td&gt;
&lt;td&gt;Hexapod and MicroPython&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=35m35s"&gt;35:35&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Lilly Ryan&lt;/td&gt;
&lt;td&gt;Towns I Wish I Could Visit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=41m00s"&gt;41:00&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Jeremy Rothstein&lt;/td&gt;
&lt;td&gt;I'm a mockoholic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=45m54s"&gt;45:54&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Nick Moore&lt;/td&gt;
&lt;td&gt;ESP32 and MicroPython&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=48m38s"&gt;48:38&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Katie Bell&lt;/td&gt;
&lt;td&gt;Hello&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bJmx0tcVubY&amp;amp;t=53m37s"&gt;53:37&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Peter Hall&lt;/td&gt;
&lt;td&gt;A Brief History of 'What is the Time?'&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Kitajima-Kimbrel</dc:creator><pubDate>Sun, 06 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-06:/pycon-au-2017/lightning-talks-sunday.html</guid><category>PyCon AU 2017</category><category>lightning talks</category></item><item><title>Harnessing the APIs you didn't know existed</title><link>https://pyvideo.org/pycon-au-2017/harnessing-the-apis-you-didnt-know-existed.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A surprising number of companies and services provide public APIs to access their data and services or interact with their application. This gives you, as a developer, a powerful set of tools to very simply build your own new apps and integrations. If you've learned some Python but aren't sure what to do next, then building small apps on public APIs is a great way to develop your skills further.&lt;/p&gt;
&lt;p&gt;We'll go through the setup that most public APIs require, getting keys and using OAuth to access the APIs, hosting the app somewhere. We'll use a Slack bot as an example, plus some more examples with cool APIs. Lastly, we'll go through list of available APIs (and links to more lists) to get your creative juices flowing. You never knew that these services had an API.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Bell</dc:creator><pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-05:/pycon-au-2017/harnessing-the-apis-you-didnt-know-existed.html</guid><category>PyCon AU 2017</category></item><item><title>Text files full of punctuation? There must be a better way to code.</title><link>https://pyvideo.org/pycon-au-2020/text-files-full-of-punctuation-there-must-be-a-better-way-to-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Katie Bell&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/HHPFHW"&gt;https://2020.pycon.org.au/program/HHPFHW&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The vast majority of code is written through some kind of text editor, whether it's notepad, a sophisticated IDE, or a heavily customised Vim environment. These tools mitigate common text editing problems like unclosed brackets and syntax errors, but can't eliminate them completely.&lt;/p&gt;
&lt;p&gt;In this talk we'll explore the underlying nature of code as a tree structure using Python's abstract syntax trees, and we'll compare real world examples of coding interfaces which represent these trees in different ways.&lt;/p&gt;
&lt;p&gt;So much of our thinking and tooling revolves around code being represented as text files that to step outside of this world means re-imagining how version control works and what real programming even is.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 11:35:00 2020 at Python 2&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Bell</dc:creator><pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-09-05:/pycon-au-2020/text-files-full-of-punctuation-there-must-be-a-better-way-to-code.html</guid><category>PyCon AU 2020</category><category>KatieBell</category><category>PyCon</category><category>PyConAU</category><category>PyConline</category><category>Python</category><category>pyconau</category><category>pyconau_2020</category></item><item><title>Real python, made of blocks</title><link>https://pyvideo.org/pycon-au-2021/real-python-made-of-blocks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;(Katie Bell) Programming is hard, python is hard, but it could be so much easier.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2021.pycon.org.au/program/YW8HGJ/"&gt;https://2021.pycon.org.au/program/YW8HGJ/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;python, pycon, australia, programming, conference, technical, pyconline, developers, panel, sessions, libraries, frameworks, community, sysadmins, students, education, data, science&lt;/p&gt;
&lt;p&gt;Videos licensed as CC-BY-NC-SA 4.0&lt;/p&gt;
&lt;p&gt;PyCon AU is the national conference for the Python programming community, bringing together professional, student and enthusiast developers, sysadmins and operations folk, students, educators, scientists, statisticians, and many others besides, all with a love for working with Python.&lt;/p&gt;
&lt;p&gt;PyCon AU informs the country’s Python developers with presentations, tutorials and panel sessions by experts and core developers of Python, as well as the libraries and frameworks that they rely on.&lt;/p&gt;
&lt;p&gt;Produced by Next Day Video Australia: &lt;a class="reference external" href="https://nextdayvideo.com.au"&gt;https://nextdayvideo.com.au&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Sep 10 14:15:00 2021 at Education&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Bell</dc:creator><pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-09-11:/pycon-au-2021/real-python-made-of-blocks.html</guid><category>PyCon AU 2021</category><category>KatieBell</category><category>pyconau</category><category>pyconau_2021</category></item><item><title>The Minecraft Challenge</title><link>https://pyvideo.org/pycon-uk-2014/the-minecraft-challenge.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presented by: Katie Bell&lt;/p&gt;
&lt;p&gt;There's already a great Python scripting interface for Minecraft, allowing you limitless creativity with the ability to read and place blocks anywhere. Unfortunately with limitless power the challenge of Minecraft disappears, because building a castle is somehow more satisfying when you have to mine and craft every block. If you’ve played Minecraft you’ve no doubt found yourself building or mining mindlessly in a pattern and wished you could simply script away the boring bits, but still keep the fun and challenge of the game.&lt;/p&gt;
&lt;p&gt;In this presentation I'll be demonstrating a Python interface for writing Minecraft AIs, giving you the programming equivalent of Survivor mode. Your helper robots have some advantages over humans and can mine and build things for you faster, but ultimately this doesn't feel like cheating because it can’t do anything you can’t do. This also works well in multiplayer on an open server where players and bots can interact but no single player can destroy the world with a small software bug.&lt;/p&gt;
&lt;p&gt;Writing an AI for the Minecraft world poses an interesting challenge for both young and experienced programmers, it’s a pure example of how we can use programming to avoid boring and repetitive tasks in the real world. It provides new programmers with immediate goals and for students exploring more advanced computer science concepts it leads well into real world robot control and game AI algorithms.&lt;/p&gt;
&lt;p&gt;In this talk, I'll go through the Minecraft server and client implementation details, the challenges of multiplayer programming and the structures built into the interface to make coding AIs easier such as built-in state machines and the ability for the in-game player to give commands.&lt;/p&gt;
&lt;p&gt;As a bonus, we’ll see how it plays out in the real world, what happens when we give the interface to a group of young programmers on a shared server, and how we can set up competitions and more specific AI-coding challenges.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Bell</dc:creator><pubDate>Tue, 14 Oct 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-10-14:/pycon-uk-2014/the-minecraft-challenge.html</guid><category>PyCon UK 2014</category></item><item><title>The computer science of marking computer science assignments</title><link>https://pyvideo.org/pycon-us-2016/katie-bell-the-computer-science-of-marking-computer-science-assignments-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Katie Bell&lt;/p&gt;
&lt;p&gt;When writing systems to test if beginner programmers' code was correct, I didn't expect to need numpy, scipy a custom C module and a whole lot of cool geometry algorithms. Giving actionable feedback on tasks (in this case logo/turtle vector drawings), is necessary for the learning process and goes some fun places. Take this as a case study of writing efficient geometry number crunching in Python.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Bell</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:/pycon-us-2016/katie-bell-the-computer-science-of-marking-computer-science-assignments-pycon-2016.html</guid><category>PyCon US 2016</category></item></channel></rss>