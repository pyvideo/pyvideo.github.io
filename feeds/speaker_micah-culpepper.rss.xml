<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Micah Culpepper</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 24 Oct 2020 00:00:00 +0000</lastBuildDate><item><title>DRYDock Techniques for Not Repeating Yourself in Dockerfiles</title><link>https://pyvideo.org/pytexas-2020/drydock-techniques-for-not-repeating-yourself-in-dockerfiles.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You know how Dockerfiles tend to get copied around from one project to the next? Itâ€™s messy and bug-prone. Well I figured out how to stop doing that, and start treating Dockerfiles like the actual infrastructure-as-code libraries that they are. So can you!&lt;/p&gt;
&lt;p&gt;Speaker: Micah Culpepper
Six years ago, with a shiny new CCNA in my hand, I started my IT career as a network administrator. I taught myself some Python, and then things escalated quickly. Now I'm a devops engineer in the field of network automation. Python, Docker, and Linux are my usual tools, with a bit of Golang sprinkled in. I live in San Antonio with my wife and three cats. In my non-work hours, I enjoy baking bread, gardening, and playing Dungeons and Dragons. My pronouns are she/they.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Micah Culpepper</dc:creator><pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-10-24:/pytexas-2020/drydock-techniques-for-not-repeating-yourself-in-dockerfiles.html</guid><category>PyTexas 2020</category></item></channel></rss>