<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 08 Sep 2019 00:00:00 +0000</lastBuildDate><item><title>Python 1994</title><link>https://pyvideo.org/pycolorado-2019/python-1994.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;“Come for the language, stay for the community.” The Python community started in 1994 at a NIST workshop in Maryland. What was the world of Python like in its first years? Did we have any clue whatsoever? A joke-focused tour of early Python, heavy on question-and-answer.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-09-08:pycolorado-2019/python-1994.html</guid></item><item><title>Python Steering Council Panel</title><link>https://pyvideo.org/pybay-2019/python-steering-council-panel.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk was presented at PyBay2019 - 4th annual Bay Area Regional Python conference. See pybay.com for more details about PyBay and click SHOW MORE for more information about this talk.&lt;/p&gt;
&lt;p&gt;Description
Elected as prescribed in PEP 8017, the Python Steering Council is a 5-person committee that assumes a mandate to maintain the quality and stability of the Python language and CPython interpreter, improve the contributor experience, formalize and maintain a relationship between the Python core team and the PSF, establish decision making processes for Python Enhancement Proposals, seek consensus among contributors and the Python core team, and resolve decisions and disputes in decision making among the language.&lt;/p&gt;
&lt;p&gt;This session will be moderated by , Paul Everitt (Python Software Foundation), to introduce a discussion with members of the community. Barry Warsaw (Steering Council), Łukasz Langa (3.8 Release Manager), Emily Morehouse (Core Dev), Benjamin Peterson (2.7 Release Manager)&lt;/p&gt;
&lt;p&gt;Abstract
Barry Warsaw: Barry Warsaw is a Sr. Staff Engineer with LinkedIn, working on the Python Foundation team. He has been a core Python developer since the first workshop at NIST in 1994. As the first non-Dutch contributor, he's been dubbed Python's Terry Gilliam. In 2009, he became the FLUFL (Friendly Language Uncle For Life) via the humorous PEP 401. Today, he is one of 5 members of the Python Steering Council, helping to provide leadership for the future of Python.Barry has served as Python Release Manager, Jython project leader, and GNU Mailman project leader. He served as co-chair of the Pycon Language Summit for 4 years. He currently mentors new contributors on their journeys to becoming core developers. Outside of Python, Barry is a semi-pro bass player, and studies tai chi.&lt;/p&gt;
&lt;p&gt;Benjamin Peterson: Creator of six (&lt;a class="reference external" href="http://pypi.python.org/pypi/six"&gt;http://pypi.python.org/pypi/six&lt;/a&gt;), a Python 2 and 3 compatibility library. Release manager for Python 2.6 and 2.7.&lt;/p&gt;
&lt;p&gt;Emily Morehouse: Emily Morehouse-Valcarcel is the Director of Engineering at Cuttlesoft, a digital product agency focused on creating beautifully designed software. Her passion is driven by a blend of empathy, strategy, curiosity, and human-centered design. She's a Python Core Developer, avid OSS contributor, and constant learner focused on building tools to automate the mundane and shed light on the complexity of the human experience. Emily holds degrees in Computer Science, Criminology, and Theatre from Florida State University.&lt;/p&gt;
&lt;p&gt;Lukasz Langa: ambv on Github. Python core developer, Python 3.8 release manager, creator of Black, pianist, dad. Likes analog modular synthesizers, immersive single-player role playing games (Fallout, Elder Scrolls), and single malt Scotch whisky.&lt;/p&gt;
&lt;p&gt;Paul Everitt: Paul is the PyCharm Developer Advocate at JetBrains. Before that, Paul was a co-founder of Zope Corporation, taking the first open source application server through $14M of funding. Paul has bootstrapped both the Python Software Foundation and the Plone Foundation. Paul was an officer in the US Navy, starting www.navy.mil in 1993.&lt;/p&gt;
&lt;p&gt;Sponsor Acknowledgement
This and other PyBay2019 videos are via the help of our media partner AlphaVoice (&lt;a class="reference external" href="https://www.alphavoice.io/"&gt;https://www.alphavoice.io/&lt;/a&gt;)!&lt;/p&gt;
&lt;p&gt;#pybay #pybay2019 #python #python3&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-17:pybay-2019/python-steering-council-panel.html</guid></item><item><title>Customizing Sphinx</title><link>https://pyvideo.org/pybay-2019/customizing-sphinx.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk was presented at PyBay2019 - 4th annual Bay Area Regional Python conference. See pybay.com for more details about PyBay and click SHOW MORE for more information about this talk.&lt;/p&gt;
&lt;p&gt;Description
Elected as prescribed in PEP 8016, the Python Steering Council is a 5-person committee that assumes a mandate to maintain the quality and stability of the Python language and CPython interpreter, improve the contributor experience, formalize and maintain a relationship between the Python core team and the PSF, establish decision making processes for Python Enhancement Proposals, seek consensus among contributors and the Python core team, and resolve decisions and disputes in decision making among the language.&lt;/p&gt;
&lt;p&gt;This session will be moderated by , Paul Everitt (Python Software Foundation), to introduce a discussion with members of the community. Barry Warsaw (Steering Council), Łukasz Langa (3.8 Release Manager), Emily Morehouse (Core Dev), Benjamin Peterson (2.7 Release Manager)&lt;/p&gt;
&lt;p&gt;Abstract
Barry Warsaw: Barry Warsaw is a Sr. Staff Engineer with LinkedIn, working on the Python Foundation team. He has been a core Python developer since the first workshop at NIST in 1994. As the first non-Dutch contributor, he's been dubbed Python's Terry Gilliam. In 2009, he became the FLUFL (Friendly Language Uncle For Life) via the humorous PEP 401. Today, he is one of 5 members of the Python Steering Council, helping to provide leadership for the future of Python.Barry has served as Python Release Manager, Jython project leader, and GNU Mailman project leader. He served as co-chair of the Pycon Language Summit for 4 years. He currently mentors new contributors on their journeys to becoming core developers. Outside of Python, Barry is a semi-pro bass player, and studies tai chi.&lt;/p&gt;
&lt;p&gt;Benjamin Peterson: Creator of six (&lt;a class="reference external" href="http://pypi.python.org/pypi/six"&gt;http://pypi.python.org/pypi/six&lt;/a&gt;), a Python 2 and 3 compatibility library. Release manager for Python 2.6 and 2.7.&lt;/p&gt;
&lt;p&gt;Emily Morehouse: Emily Morehouse-Valcarcel is the Director of Engineering at Cuttlesoft, a digital product agency focused on creating beautifully designed software. Her passion is driven by a blend of empathy, strategy, curiosity, and human-centered design. She's a Python Core Developer, avid OSS contributor, and constant learner focused on building tools to automate the mundane and shed light on the complexity of the human experience. Emily holds degrees in Computer Science, Criminology, and Theatre from Florida State University.&lt;/p&gt;
&lt;p&gt;Lukasz Langa: ambv on Github. Python core developer, Python 3.8 release manager, creator of Black, pianist, dad. Likes analog modular synthesizers, immersive single-player role playing games (Fallout, Elder Scrolls), and single malt Scotch whisky.&lt;/p&gt;
&lt;p&gt;Paul Everitt: Paul is the PyCharm Developer Advocate at JetBrains. Before that, Paul was a co-founder of Zope Corporation, taking the first open source application server through $14M of funding. Paul has bootstrapped both the Python Software Foundation and the Plone Foundation. Paul was an officer in the US Navy, starting www.navy.mil in 1993.&lt;/p&gt;
&lt;p&gt;About the speaker
Paul is the PyCharm Developer Advocate at JetBrains. Before that, Paul was a co-founder of Zope Corporation, taking the first open source application server through $14M of funding. Paul has bootstrapped both the Python Software Foundation and the Plone Foundation. Paul was an officer in the US Navy, starting www.navy.mil in 1993.&lt;/p&gt;
&lt;p&gt;Paul will be moderating this year's Python Steering Council Panel Discussion.&lt;/p&gt;
&lt;p&gt;Sponsor Acknowledgement
This and other PyBay2019 videos are via the help of our media partner AlphaVoice (&lt;a class="reference external" href="https://www.alphavoice.io/"&gt;https://www.alphavoice.io/&lt;/a&gt;)!&lt;/p&gt;
&lt;p&gt;#pybay #pybay2019 #python #python3 #gdb&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Fri, 16 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-16:pybay-2019/customizing-sphinx.html</guid></item><item><title>Python 1994</title><link>https://pyvideo.org/europython-2019/python-1994.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;“Come for the language, stay for the community.” The Python community
started in 1994 at a NIST workshop in Maryland. What was the world of
Python like in its first years? Did we have any clue whatsoever? A
joke-focused tour of early Python, heavy on question-and-answer.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:europython-2019/python-1994.html</guid><category>Community</category></item><item><title>Customizing Sphinx: Simple, Normal, and Hard</title><link>https://pyvideo.org/pygotham-2018/customizing-sphinx-simple-normal-and-hard.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many Python projects use Sphinx for documentation, so much so that Sphinx is like Python’s secret weapon. It’s a powerful, mature system for generating static content -- not just docs, but blogs and regular websites.&lt;/p&gt;
&lt;p&gt;Sphinx can also be customized and extended in various ways, and here the trip gets wild and wooly. With such a venerable software stack, Sphinx can be inscrutable when you paint outside the lines.&lt;/p&gt;
&lt;p&gt;This talk gives Sphinx civilians confidence to go beyond simply using Sphinx, towards adapting Sphinx to their needs: configuration values, local CSS and templates, installing extensions and themes, writing a small extension with a directive, and testing that extension. We’ll conclude with a roundup of challenges and benefits that come with diving into Sphinx.&lt;/p&gt;
&lt;p&gt;As the talk provides shallow treatment of a wide topic list, follow-up and hands-on instruction will be given at an open space.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-06:pygotham-2018/customizing-sphinx-simple-normal-and-hard.html</guid></item><item><title>Customizing Sphinx: Simple, Normal, and Hard</title><link>https://pyvideo.org/pyohio-2018/customizing-sphinx-simple-normal-and-hard.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many Python projects use Sphinx for documentation, so much so that
Sphinx is like Python’s secret weapon. It’s a powerful, mature system
for generating static content -- not just docs, but blogs and regular
websites. Sphinx can also be customized and extended in various ways,
and here the trip gets wild and wooly. This talk takes a look at themes
and extensions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-28:pyohio-2018/customizing-sphinx-simple-normal-and-hard.html</guid></item><item><title>Saturday Lightning Talks</title><link>https://pyvideo.org/pyohio-2018/saturday-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dave Forgac&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pyohio.org/2018/schedule/presentation/63/"&gt;https://pyohio.org/2018/schedule/presentation/63/&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Lock Your Mock - Aly Sivji&lt;/li&gt;
&lt;li&gt;Abusing Type Annotations - Zach Mitchell&lt;/li&gt;
&lt;li&gt;How does U2F / Yubikeys work? - LVH&lt;/li&gt;
&lt;li&gt;Blast Asteroids with Arcade - Paul Everitt&lt;/li&gt;
&lt;li&gt;Chocolate in PB - Dan Lindeman&lt;/li&gt;
&lt;li&gt;Good Hacker / Bad Hacker - Dustin Ingram&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aly Sivji</dc:creator><pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-28:pyohio-2018/saturday-lightning-talks.html</guid></item><item><title>Visual Testing with PyCharm and pytest</title><link>https://pyvideo.org/pycon-us-2018/visual-testing-with-pycharm-and-pytest.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Know you should be doing testing but haven’t gotten over the hurdle to learn it? pytest is Python’s modern, friendly, and powerful testing framework. When paired with an IDE, testing gets a visual interface, making it much easier to get started.&lt;/p&gt;
&lt;p&gt;In this talk we cover “visual testing”: starting, learning, using, and mastering test-driven development (TDD) with the help of a nice UI. We’ll show PyCharm Community Edition, a free and open-source Python IDE, as a productive TDD environment for pytest. Specifically, we’ll show a workflow using pytest and PyCharm that helps make tests speed up development, or at the very least help to make testing seem less &amp;quot;in the way&amp;quot; of other development activities&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Okken</dc:creator><pubDate>Fri, 11 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-11:pycon-us-2018/visual-testing-with-pycharm-and-pytest.html</guid><category>pytest</category><category>pycharm</category><category>tdd</category></item><item><title>Python 1994</title><link>https://pyvideo.org/pybay-2017/python-1994.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Come for the language, stay for the community.&amp;quot; The Python community started in 1994 at a NIST workshop in Maryland. What was the world of Python like in its first years? Did we have any clue whatsoever? A joke-focused tour of early Python, heavy on question-and-answer.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Building open source communities is hard, and while there are best practices and lessons learned to study, sometimes it all seems random. Python became renowned for its community. What was it like in the beginning, and how did it succeed?&lt;/p&gt;
&lt;p&gt;This talk covers the 1994 Python workshop at NIST. I was fortunate to be there, along with twenty-ish others, and was involved in the next number of years of stumbling around purposefully. The stories are funny to pass along, some of the lessons are accidentally valuable, and with a generous question-and-answer period, the session becomes a community chit-chat.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bio&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Paul Everitt is the PyCharm Developer Advocate at JetBrains. Before that, Paul was a co-founder of Agendaless Consulting and a co-founder of Zope Corporation, taking the first open source application server through $14M of funding. Paul has bootstrapped both the PSF and the Plone Foundation. Prior to that, Paul was an officer in the US Navy, starting in Python and launching www.navy.mil in 1993.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Sat, 12 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-12:pybay-2017/python-1994.html</guid></item><item><title>Panel Discussion: Paul Everitt with Guido van Rossum and others</title><link>https://pyvideo.org/pycon-us-2017/panel-discussion-paul-everitt-with-guido-van-rossum-and-others.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Paul Everitt, Guido van Rossum&lt;/p&gt;
&lt;p&gt;Panel Discussion&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Sun, 21 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-21:pycon-us-2017/panel-discussion-paul-everitt-with-guido-van-rossum-and-others.html</guid></item><item><title>Keynote - How It Happened: Stories and Lessons from Inside Zope and Other Projects</title><link>https://pyvideo.org/pycon-de-2011/keynote-how-it-happened-stories-and-lessons-fr.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Ever heard of Zope? Ever heard of it recently? Being a leader, then not,
in a large open source project over a long period of time generates a
lot of funny stories. And mistakes. And even, moments of wonder, not
always intentionally. In this talk I'll cover a number of insider
stories from the life of Zope and Plone, then analyze them from the
safety of perspective. The long view can help show what makes a big
project vary in success over time measured in decades. I will also
include stories and lessons from long-running, successful leaders in
other Python projects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Thu, 06 Oct 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-10-06:pycon-de-2011/keynote-how-it-happened-stories-and-lessons-fr.html</guid></item><item><title>Pyramid for Humans</title><link>https://pyvideo.org/pycon-us-2013/pyramid-for-humans.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Pyramid has emerged as a fast, modern, lightweight web framework. This
lively, hands-on tutorial covers a little about a lot: practical
introductions to the most common facilities. Fun, fast-paced, and most
certainly not aimed at experts.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-03-13:pycon-us-2013/pyramid-for-humans.html</guid><category>tutorial</category></item><item><title>Python 3/2 Web Development with Pyramid</title><link>https://pyvideo.org/pycon-us-2014/python-32-web-development-with-pyramid.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python 3 is upon us! This lively, hands-on tutorial covers a little
about a lot, showing Python 3 (and 2) web development using Pyramid, a
fast, modern, lightweight web framework. Fun, fast-paced, and most
certainly not aimed at experts.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/python-32-web-development-with-pyramid.html</guid></item></channel></rss>