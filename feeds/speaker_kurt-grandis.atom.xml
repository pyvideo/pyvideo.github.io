<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_kurt-grandis.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-04-11T00:00:00+00:00</updated><entry><title>Swarming the Web: Evolving the Perfect Config File</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--swarming-the-web--evolving-the-perfec.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Kurt Grandis</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--swarming-the-web--evolving-the-perfec.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Swarming the Web: Evolving the Perfect Config File&lt;/p&gt;
&lt;p&gt;Presented by Kurt Grandis&lt;/p&gt;
&lt;p&gt;Deployed web applications are typically run on top of stacks of highly
configurable middleware. The number of tunable parameters and their
impact are rarely fully explored. Using SciPy and a set of common
Python-based web tools this session will present a new method of
automatically tuning a typical LAMP stack for optimal performance.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Deployed web applications typically run on top of stacks of configurable
technology (e.g. web servers, interface modules, software load
balancers, databases). Each of these components often has dozens of
tuneable parameters. How many times are those values typically tweaked
before a final set of tuned parameters are settled on? What criteria are
typically used to determine the optimal set?&lt;/p&gt;
&lt;p&gt;This session presents a new method of automatically tuning a common LAMP
stack for optimal performance. We explore a solution using some common
Python-based automated deployment and load testing tools and dive into
scientific computing with SciPy.&lt;/p&gt;
</summary><category term="lamp"></category><category term="pycon"></category><category term="pycon2011"></category><category term="scipy"></category><category term="tuning"></category><category term="webapps"></category></entry><entry><title>Militarizing Your Backyard with Python: Computer Vision and the Squirrel Hordes</title><link href="https://pyvideo.org/pycon-us-2012/militarizing-your-backyard-with-python-computer.html" rel="alternate"></link><published>2012-03-10T00:00:00+00:00</published><updated>2012-03-10T00:00:00+00:00</updated><author><name>Kurt Grandis</name></author><id>tag:pyvideo.org,2012-03-10:pycon-us-2012/militarizing-your-backyard-with-python-computer.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Has your garden been ravaged by the marauding squirrel hordes? Has your
bird feeder been pillaged? Tired of shaking your fist at the neighbor
children? Learn how to use Python to tap into computer vision libraries
and build an automated sentry water cannon capable of soaking intruders.&lt;/p&gt;
</summary></entry><entry><title>Planning and Tending the Garden: The Future of Early Childhood Python Education</title><link href="https://pyvideo.org/pycon-us-2013/planning-and-tending-the-garden-the-future-of-ea.html" rel="alternate"></link><published>2013-03-15T00:00:00+00:00</published><updated>2013-03-15T00:00:00+00:00</updated><author><name>Kurt Grandis</name></author><id>tag:pyvideo.org,2013-03-15:pycon-us-2013/planning-and-tending-the-garden-the-future-of-ea.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Interest and activity in computing education is on the rise. Other
language communities and projects have stepped up to promote early
childhood programming. What tools are available for teaching Python? How
do they compare?&lt;/p&gt;
&lt;p&gt;This talk aims to discuss current trends, examine the current education
landscape, question our goals as a community, and discuss opportunities
for growing young developers.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Exploring Minecraft and Python: Learning to Code Through Play</title><link href="https://pyvideo.org/pycon-us-2015/exploring-minecraft-and-python-learning-to-code.html" rel="alternate"></link><published>2015-04-11T00:00:00+00:00</published><updated>2015-04-11T00:00:00+00:00</updated><author><name>Kurt Grandis</name></author><id>tag:pyvideo.org,2015-04-11:pycon-us-2015/exploring-minecraft-and-python-learning-to-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Interest and activity in childhood computing education continues to
grow. Meanwhile, Minecraft has become a massive cultural phenomenon as a
fun, motivating platform that encourages exploration and play. This talk
demonstrates how Python can be used to teach programming while exploring
the world of Minecraft. We will cover how to set up learning
environments, curricula, and case studies.&lt;/p&gt;
</summary></entry></feed>