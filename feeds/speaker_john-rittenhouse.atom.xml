<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_john-rittenhouse.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2010-02-19T00:00:00+00:00</updated><entry><title>Revisioned Databases for MultiUser Editing (#86)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--revisioned-databases-for-multiuser-ed.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>John Rittenhouse</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--revisioned-databases-for-multiuser-ed.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Revisioned Databases for MultiUser Editing&lt;/p&gt;
&lt;p&gt;Presented by John Rittenhouse (CCP Games)&lt;/p&gt;
&lt;p&gt;At CCP Games (www.ccpgames.com), we work on large MMO projects with tens
of content editors editing the same data. To make this possible, we
created a Revisioned Database framework that allows for us to create new
multiuser editing systems without data synchronization between users
having to be a major concern. In this talk, solutions we've tried are
discussed, the basic layout of our revision database shown, the Python
layer which handles it transparently for the programmer detailed, and
how the Python layer is used in practice. All of this is focused on
discussing what worked well and what pitfalls we ran into during
development.&lt;/p&gt;
</summary><category term="databases"></category><category term="pycon"></category><category term="pycon2010"></category></entry></feed>