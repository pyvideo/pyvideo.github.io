<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Lin Yang</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 05 Sep 2020 00:00:00 +0000</lastBuildDate><item><title>Your Escape Plan From Numpy + Cython</title><link>https://pyvideo.org/pycon-au-2020/your-escape-plan-from-numpy-cython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cheng-Lin Yang&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/Y3SXGF"&gt;https://2020.pycon.org.au/program/Y3SXGF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you've been a data scientist or researcher long enough, you must have encountered a situation where your NumPy code ran quickly on small datasets in a testing environment but performed poorly on real-world datasets (100x larger or more). In this talk, I will introduce three Pythonic solutions to improve NumPy performance drastically without modifying too many codes.&lt;/p&gt;
&lt;p&gt;At the beginning of the talk, a math equation: logsumexp, which is widely used in machine learning, will be illustrated. I will show how it is implemented with pure NumPy and use it as a benchmark so we can compare it to three proposed solutions at the end of the talk.&lt;/p&gt;
&lt;p&gt;Then, three solutions: CuPy, Numba, and Pythran will be presented in separate sections. In each section, I will give a brief introduction to the solution and show how to apply this solution to our benchmark code.&lt;/p&gt;
&lt;p&gt;At the end of the talk, I will compare these solutions from different aspects:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How much performance is boosted after each solution is applied&lt;/li&gt;
&lt;li&gt;Ease to apply on your existing code (including the ease of debugging)&lt;/li&gt;
&lt;li&gt;Limitations of each solution&lt;/li&gt;
&lt;li&gt;Which solution should be applied first in given scenarios&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Last but not the least, I will show a relatively new but interesting solution: Transonic to the audience so they can give it a try on their side project.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 16:00:00 2020 at Obvious&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lin Yang</dc:creator><pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-09-05:/pycon-au-2020/your-escape-plan-from-numpy-cython.html</guid><category>PyCon AU 2020</category><category>Cheng-LinYang</category><category>PyCon</category><category>PyConAU</category><category>PyConline</category><category>Python</category><category>pyconau</category><category>pyconau_2020</category></item></channel></rss>