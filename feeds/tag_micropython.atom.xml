<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_micropython.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-08-24T00:00:00+00:00</updated><entry><title>Getting started with MicroPython on a microcontroller</title><link href="https://pyvideo.org/kiwi-pycon-2019/getting-started-with-micropython-on-a-microcontroller.html" rel="alternate"></link><published>2019-08-24T00:00:00+00:00</published><updated>2019-08-24T00:00:00+00:00</updated><author><name>Glenn Ramsey</name></author><id>tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/getting-started-with-micropython-on-a-microcontroller.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using MicroPython on an ESP32 board to make a simple soundmeter&lt;/p&gt;
</summary><category term="micropython"></category></entry><entry><title>Primeros pasos con MicroPython</title><link href="https://pyvideo.org/pyday-nea-2019/primeros-pasos-con-micropython.html" rel="alternate"></link><published>2019-06-29T00:00:00+00:00</published><updated>2019-06-29T00:00:00+00:00</updated><author><name>Guillermo Sampallo</name></author><id>tag:pyvideo.org,2019-06-29:pyday-nea-2019/primeros-pasos-con-micropython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Conocer cuales son los pasos necesarios para trabajar con MicroPython y como hacerlo. Pequeña demo de como entrar en el mundo IoT con MicroPython&lt;/p&gt;
&lt;p&gt;Charla dada en el PyDay NEA 2019, Resistencia, Chaco, Argentina, UTN FRRE, French y Ayacucho, el 29/06/2019&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://eventos.python.org.ar/events/pydaynea2019/activity/186/"&gt;https://eventos.python.org.ar/events/pydaynea2019/activity/186/&lt;/a&gt;&lt;/p&gt;
</summary><category term="esp8266"></category><category term="iot"></category><category term="micropython"></category><category term="pyar"></category><category term="pydaynea"></category><category term="python"></category><category term="pythonargentina"></category><category term="utn"></category></entry><entry><title>Game Development with CircuitPython</title><link href="https://pyvideo.org/europython-2019/game-development-with-circuitpython.html" rel="alternate"></link><published>2019-07-12T00:00:00+00:00</published><updated>2019-07-12T00:00:00+00:00</updated><author><name>Radomir Dopieralski</name></author><id>tag:pyvideo.org,2019-07-12:europython-2019/game-development-with-circuitpython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making computer games is difficult: it requires creativity,
multidisciplinary knowledge of art, psychology, math, computer science,
physics and others, patience, open mind and dedication. Making computer
games with Python is a nightmare. You hit practically every sharp corner
that Python has, starting with installation, through binary libraries,
poor hardware support, up to distribution.&lt;/p&gt;
&lt;p&gt;PewPew devices are an attempt at solving the worst problems by giving
you a dedicated, cheap, simple and portable gaming device, that you can
easily program with Python with just a simple text editor. They also
make pretty neat conference badges. I will talk about how they were
conceived, how they are used, and how you can extend and improve them
yourself.&lt;/p&gt;
&lt;p&gt;At the end of the talk you should have a good idea about what is
CircuitPython and MicroPython and how they can be used to build and
program such simple devices. You should also know where to find the
resources necessary to try designing and building your own.&lt;/p&gt;
</summary><category term="Education"></category><category term="Gadgets"></category><category term="Hardware/IoT"></category><category term="Learning"></category><category term="MicroPython"></category></entry><entry><title>Building Industry 4.0 logistics applications with MicroPython and ESP32 MCUs</title><link href="https://pyvideo.org/europython-2019/building-industry-40-logistics-applications-with-micropython-and-esp32-mcus.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Florian Wahl</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/building-industry-40-logistics-applications-with-micropython-and-esp32-mcus.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;In this session, we will report about a forklift hailing application
we built using MicroPython and the ESP32-based prototyping hardware
M5Stack.&lt;/div&gt;
&lt;div class="line"&gt;In a production facility, machine operators can hail a forklift using
an ESP32 device running MicroPython. The device sends a request to a
forklift dispatcher software, written in Python. The request is queued
and subsequently, the next available forklift is notified and sent to
the machine. Each forklift is also fitted with an ESP32 device. In
this project, the prototyping hardware M5Stack was used. It features
an ESP32 micro controller with Bluetooth, WIFI, GPIO, three buttons,
and a display.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Attendees will learn how MicroPython and prototyping hardware can be
used to scale from an idea on the developers desk to a working system in
a rough Industry 4.0 production environment. The talk will recap our
journey with MicroPython, the lessons learned, and the pitfalls to
avoid. Furthermore, the tooling setup will be introduced, including our
M5Stack GUI-simulator to mock the M5Stack display.&lt;/p&gt;
&lt;p&gt;The central dispatch server is built using Python and deployed in a
Docker container. Messages are exchanged using MQTT, a popular IoT
message protocol. The talk will conclude with a live demonstration of
the forklift hailing system. Attendees should be comfortable with the
Python syntax but are not expected to have any MicroPython, MQTT, Docker
or domain knowledge.&lt;/p&gt;
&lt;p&gt;Materials can be found at &lt;a class="reference external" href="https://gitlab.com/fwahl/europython2019"&gt;https://gitlab.com/fwahl/europython2019&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Cross-Platform-Development"></category><category term="DIY"></category><category term="Hardware/IoT"></category><category term="Internet of Things (IoT)"></category><category term="MicroPython"></category></entry><entry><title>Introduzione a Zerynth: Python per Microcontrollori e Applicazioni IoT</title><link href="https://pyvideo.org/pycon-italia-2019/introduzione-a-zerynth-python-per-microcontrollori-e-applicazioni-iot.html" rel="alternate"></link><published>2019-05-05T00:00:00+00:00</published><updated>2019-05-05T00:00:00+00:00</updated><author><name>Luigi Francesco Cerfeda</name></author><id>tag:pyvideo.org,2019-05-05:pycon-italia-2019/introduzione-a-zerynth-python-per-microcontrollori-e-applicazioni-iot.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Durante il talk verrà presentato Zerynth
(&lt;a class="reference external" href="https://www.zerynth.com/"&gt;www.zerynth.com&lt;/a&gt;), un software per la
programmazione di &lt;strong&gt;microcontrollori&lt;/strong&gt; in &lt;strong&gt;Python&lt;/strong&gt; e la realizzazione
di applicazioni &lt;strong&gt;IoT&lt;/strong&gt; e per l’ &lt;strong&gt;Industria 4.0&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I principali argomenti trattati saranno:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Perchè utilizzare Zerynth (e quindi Python) per programmare
dispositivi IoT.&lt;/li&gt;
&lt;li&gt;Differenza tra Zerynth e il Python tradizionale.&lt;/li&gt;
&lt;li&gt;Differenza tra Zerynth ed altre piattaforme di programmazione
&lt;strong&gt;“embedded”&lt;/strong&gt; come &lt;strong&gt;Raspberry Pi&lt;/strong&gt; , &lt;strong&gt;Micropython&lt;/strong&gt; e &lt;strong&gt;Arduino&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Panoramica delle schede elettroniche supportate e dei servizi
&lt;strong&gt;Cloud&lt;/strong&gt; compatibili. In particolare verrà presentata la board
&lt;a class="reference external" href="http://4zerobox.com/"&gt;4zerobox&lt;/a&gt;, una delle schede elettroniche
ufficialmente supportate da Zerynth, mostrandone le caratteristiche
principali e le applicazioni in &lt;strong&gt;campo industriale&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Target ideale&lt;/strong&gt; : sviluppatori Python, professionisti dell’IoT,
designers, studenti e insegnanti, makers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Per approfondire&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;La suite di sviluppo Zerynth è composta da:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Zerynth Studio&lt;/strong&gt; , un IDE professionale per la programmazione in
Python su schede elettroniche a microcontrollore. Zerynth Studio è
free e cross-platform. Scaricabile da qui:
&lt;a class="reference external" href="https://www.zerynth.com/zerynth-studio/"&gt;https://www.zerynth.com/zerynth-studio/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zerynth Virtual Machine&lt;/strong&gt; , un sistema operativo real-time
multithreaded che fornisce una reale indipendenza dall’hardware e che
permette il riutilizzo del codice su qualsiasi architettura MCU.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zerynth App&lt;/strong&gt; , una App generica per smartphone con cui
visualizzare i dati e/o controllare i dispositivi programmati con
Zerynth.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1488"&gt;https://python.it/feedback-1488&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 09:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="micropython"></category><category term="iot"></category><category term="embedded"></category><category term="industry applications"></category><category term="microcontroller"></category><category term="aws"></category><category term="InternetOfThings"></category><category term="InternetDelleCose"></category><category term="industry4.0"></category><category term="google-cloud"></category></entry><entry><title>Python on microcontroller</title><link href="https://pyvideo.org/pycon-estonia-2018/python-on-microcontroller.html" rel="alternate"></link><published>2018-10-04T00:00:00+00:00</published><updated>2018-10-04T00:00:00+00:00</updated><author><name>Lauri Võsandi</name></author><id>tag:pyvideo.org,2018-10-04:pycon-estonia-2018/python-on-microcontroller.html</id><summary type="html"></summary><category term="micropython"></category></entry><entry><title>IoT con Python: si può fare! dall'ESP8266 alla casa domotica</title><link href="https://pyvideo.org/pycon-italia-2018/iot-con-python-si-puo-fare-dallesp8266-alla-casa-domotica.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Lelio Campanile</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/iot-con-python-si-puo-fare-dallesp8266-alla-casa-domotica.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Se anche tu negli ultimi tempi hai sentito l’irrefrenabile bisogno di
accendere le luci della tua casa mentre sei in vacanza o di guardare
cosa fanno i tuoi animaletti quando non ci sei, ma non ti accontenti…
allora questo talk fa per te!&lt;/p&gt;
&lt;p&gt;Vi farò vedere come è possibile avere uno stack completo di sviluppo per
la domotica completamente in python, dalla programmazione dei sensori
attraverso gli economici ESP 8266 e suoi derivati ai sistemi di gestione
complessi.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 17:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="micropython"></category><category term="iot"></category><category term="Python"></category><category term="practice"></category><category term="automation"></category><category term="raspberrypi"></category></entry><entry><title>Introduzione a Zerynth: Python per Microcontrollori e Applicazioni IoT</title><link href="https://pyvideo.org/pycon-italia-2018/introduzione-a-zerynth-python-per-microcontrollori-e-applicazioni-iot.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Luigi Francesco Cerfeda</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/introduzione-a-zerynth-python-per-microcontrollori-e-applicazioni-iot.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Durante il talk verrà presentato Zerynth
(&lt;a class="reference external" href="https://www.zerynth.com/"&gt;www.zerynth.com&lt;/a&gt;), un software per la
programmazione di &lt;strong&gt;microcontrollori&lt;/strong&gt; in &lt;strong&gt;Python&lt;/strong&gt; e la realizzazione
di applicazioni &lt;strong&gt;IoT&lt;/strong&gt; e per l’ &lt;strong&gt;Industria 4.0&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I principali argomenti trattati saranno:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Perchè utilizzare Zerynth (e quindi Python) per programmare
dispositivi IoT.&lt;/li&gt;
&lt;li&gt;Differenza tra Zerynth e il Python tradizionale.&lt;/li&gt;
&lt;li&gt;Differenza tra Zerynth ed altre piattaforme di programmazione
&lt;strong&gt;“embedded”&lt;/strong&gt; come &lt;strong&gt;Raspberry Pi&lt;/strong&gt; , &lt;strong&gt;Micropython&lt;/strong&gt; e &lt;strong&gt;Arduino&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Panoramica delle schede elettroniche supportate e dei servizi
&lt;strong&gt;Cloud&lt;/strong&gt; compatibili. In particolare verrà presentata la board
&lt;a class="reference external" href="http://4zerobox.com/"&gt;4zerobox&lt;/a&gt;, una delle schede elettroniche
ufficialmente supportate da Zerynth, mostrandone le caratteristiche
principali e le applicazioni in &lt;strong&gt;campo industriale&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Target ideale&lt;/strong&gt; : sviluppatori Python, professionisti dell’IoT,
designers, studenti e insegnanti, makers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Per approfondire&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;La suite di sviluppo Zerynth è composta da:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Zerynth Studio&lt;/strong&gt; , un IDE professionale per la programmazione in
Python su schede elettroniche a microcontrollore. Zerynth Studio è
free e cross-platform. Scaricabile da qui:
&lt;a class="reference external" href="https://www.zerynth.com/zerynth-studio/"&gt;https://www.zerynth.com/zerynth-studio/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zerynth Virtual Machine&lt;/strong&gt; , un sistema operativo real-time
multithreaded che fornisce una reale indipendenza dall’hardware e che
permette il riutilizzo del codice su qualsiasi architettura MCU.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zerynth App&lt;/strong&gt; , una App generica per smartphone con cui
visualizzare i dati e/o controllare i dispositivi programmati con
Zerynth.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;in __on &lt;strong&gt;venerdì 20 aprile&lt;/strong&gt; at 15:15 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="micropython"></category><category term="iot"></category><category term="embedded"></category><category term="industry applications"></category><category term="microcontroller"></category><category term="aws"></category><category term="InternetOfThings"></category><category term="InternetDelleCose"></category><category term="industry4.0"></category><category term="google-cloud"></category></entry><entry><title>MicroPython: The Next Step to World Domination</title><link href="https://pyvideo.org/pycon-ireland-2017/micropython-the-next-step-to-world-domination.html" rel="alternate"></link><published>2017-10-21T00:00:00+00:00</published><updated>2017-10-21T00:00:00+00:00</updated><author><name>Steve Holden</name></author><id>tag:pyvideo.org,2017-10-21:pycon-ireland-2017/micropython-the-next-step-to-world-domination.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the availability of a competent open source Python implementation for microcontrollers, suddenly Python became a first-class player in the Internet of Things. This talk describes with code examples what is possible in MicroPython, the range of devices on which it is implemented, the hardware it can connect to and the emerging ecosystems designed to support the Internet of Things.&lt;/p&gt;
</summary><category term="micropython"></category></entry><entry><title>Can you please pass the data? IoT communication with MicroPython</title><link href="https://pyvideo.org/pycascades-2018/can-you-please-pass-the-data-iot-communication-with-micropython.html" rel="alternate"></link><published>2018-01-23T00:00:00+00:00</published><updated>2018-01-23T00:00:00+00:00</updated><author><name>Sev Leonard</name></author><id>tag:pyvideo.org,2018-01-23:pycascades-2018/can-you-please-pass-the-data-iot-communication-with-micropython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Come learn a bit about Micropython, a specialized version of Python for micro controllers, and how you can use it to pass messages among IoT devices. Using the concepts and code presented this talk will include a live demo of a connected temperature sensor (somewhat like the NEST). Beginner friendly!&lt;/p&gt;
</summary><category term="iot"></category><category term="micropython"></category></entry><entry><title>Micropython</title><link href="https://pyvideo.org/pycon-hk-2017/micropython.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Patrick Tsoi</name></author><id>tag:pyvideo.org,2017-10-25:pycon-hk-2017/micropython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Putting Python in micro devices&lt;/p&gt;
</summary><category term="micropython"></category></entry><entry><title>Programming the Web of Things with Python and MicroPython</title><link href="https://pyvideo.org/pycon-de-2017/programming-the-web-of-things-with-python-and-micropython.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Hardy Erlinger</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/programming-the-web-of-things-with-python-and-micropython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Hardy Erlinger&lt;/strong&gt; is an experienced freelance developer from Munich. He has been writing web applications for 15 years using a lot of different technologies along the way. He has been actively involved with technical communities for most of his career and likes to experiment with electronic devices in his mad scientist lab.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this session you will get a gentle introduction to the ever-expanding world of small programmable devices: learn to use single board computers and microcontrollers to connect to sensors and talk to APIs - all using Python or MicroPython, a subset of Python 3 for use in constrained environments.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Small single board computers such as the Raspberry Pi have made physical computing available to interested makers around the world. It is highly affordable, runs Linux and can be programmed using Python. But if all you want is to read a few sensors, the Pi's specs are overkill; and once your sensors are out in the field (sometimes even literally), power consumption suddenly becomes an issue. Many specialized devices with very low power requirements are available but historically you were constrained to using C to develop for them. Enter MicroPython, a subset of Python 3 designed for use on tiny devices with very limited resources.&lt;/p&gt;
&lt;p&gt;In this session you will be introduced to the basics of physical computing and the joys (and some of the pains) of writing Python code for devices that weigh less than a piece of chewing gum but still have the power to communicate with web APIs, act as wireless access points, even host a small web server, and more.&lt;/p&gt;
&lt;p&gt;The purpose of this session is to share some of the fun and excitement that can be had doing physical computing with Python. No prior experience with electronics is assumed or required.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="micropython"></category><category term="python3"></category></entry><entry><title>Python on bare metal Beginners tutorial with MicroPython</title><link href="https://pyvideo.org/pycon-de-2017/python-on-bare-metal-beginners-tutorial-with-micropython.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Christine Spindler</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/python-on-bare-metal-beginners-tutorial-with-micropython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Christine Spindler&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Christine holds a degree in economics and electrical engineering. Since the beginning of 2016 she works with Damien P. George and takes care of logistics and production at George Robotics Ltd. – the company behind MicroPython.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MicroPython is a complete reimplementation of Python that runs on small devices like microcontrollers. In this hands-on workshop I'll show how easy it is to use MicroPython on a pyboard.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Everybody that attends will get a MicroPython pyboards to follow all examples on their own machine. Bring a laptop and Micro USB cable along – make sure it has a data line.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="micropython"></category></entry><entry><title>Programming the Web of Things with Python and MicroPython</title><link href="https://pyvideo.org/pyconweb-2017/programming-the-web-of-things-with-python-and-micropython.html" rel="alternate"></link><published>2017-05-28T00:00:00+00:00</published><updated>2017-05-28T00:00:00+00:00</updated><author><name>Hardy Erlinger</name></author><id>tag:pyvideo.org,2017-05-28:pyconweb-2017/programming-the-web-of-things-with-python-and-micropython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session you will get a gentle introduction to the ever-expanding world of small programmable devices: learn to use tiny microcontrollers to connect to sensors and talk to APIs - all using MicroPython, a subset of Python 3 for use in constrained environments.&lt;/p&gt;
&lt;p&gt;You will be introduced to the basics of physical computing and the joys (and some of the pains) of writing Python code for devices that weigh less than a piece of chewing gum but still have the power to communicate with web APIs, act as wireless access points, even host a small web server, and more.&lt;/p&gt;
</summary><category term="iot"></category><category term="micropython"></category></entry><entry><title>Python and IoT: From Chips and Bits to Data Science</title><link href="https://pyvideo.org/pydata-seattle-2017/python-and-iot-from-chips-and-bits-to-data-science.html" rel="alternate"></link><published>2017-07-06T00:00:00+00:00</published><updated>2017-07-06T00:00:00+00:00</updated><author><name>Jeff Fischer</name></author><id>tag:pyvideo.org,2017-07-06:pydata-seattle-2017/python-and-iot-from-chips-and-bits-to-data-science.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will take you through the design of a smart lighting system, including sensor hardware and software (based around MicroPython), data analysis (using NumPy, Pandas, and Jupyter), and lighting control (using Hidden Markov Models via Hmmlearn). From the talk, you should get a sense of how the hardware, software, and math fit together to create a solution.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ever want to know what is behind the &amp;quot;Internet of Things&amp;quot; hype? I wanted to as well, so I embarked on a side project to learn more. This talk is the story of my journey, using, of course, my favorite programming language, Python.&lt;/p&gt;
&lt;p&gt;In this talk, I will take you through my project, a lighting replay system. The application monitors the light levels in several rooms of a residence and then replays a similar pattern when the house is unoccupied. The goal is to make the house look occupied, with a lighting pattern that is different every day, but looks realistic. It accounts for the different patterns found in each individual room as well as seasonal factors (e.g. changing sunrise/sunset times). The full source code for the application is available on github &lt;a class="reference external" href="https://github.com/mpi-sws-rse/thingflow-examples/tree/master/lighting_replay_app"&gt;https://github.com/mpi-sws-rse/thingflow-examples/tree/master/lighting_replay_app&lt;/a&gt;&lt;/p&gt;
</summary><category term="iot"></category><category term="micropython"></category></entry><entry><title>Micropython for Mews</title><link href="https://pyvideo.org/pydx-2016/micropython-for-mews.html" rel="alternate"></link><published>2016-12-30T00:00:00+00:00</published><updated>2016-12-30T00:00:00+00:00</updated><author><name>Sev Leonard</name></author><id>tag:pyvideo.org,2016-12-30:pydx-2016/micropython-for-mews.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyDX 2016 talk by Sev Leonard&lt;/p&gt;
&lt;p&gt;Never miss a photo from your favorite internet cat again. Learn how to make a small wifi-connected badge using micropython and some snazzy electronics. No experience required! This talk will chronicle the experience of a first time micropythonista setting up the ESP8266 wifi module with an LCD display using the Arduino IDE. Attendees will learn how to get setup to program microcontrollers with micropython, how to connect to wifi to get the latest cat pics, and how to display kittens on an LCD.&lt;/p&gt;
</summary><category term="micropython"></category><category term="ESP8266"></category></entry><entry><title>Micro Python - shrinking Python down to run on a microcontroller</title><link href="https://pyvideo.org/pycon-uk-2014/micro-python-shrinking-python-down-to-run-on-a-microcontroller.html" rel="alternate"></link><published>2014-10-14T00:00:00+00:00</published><updated>2014-10-14T00:00:00+00:00</updated><author><name>Damien George</name></author><id>tag:pyvideo.org,2014-10-14:pycon-uk-2014/micro-python-shrinking-python-down-to-run-on-a-microcontroller.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presented by: Damien George&lt;/p&gt;
&lt;p&gt;Micro Python is a rewrite of the Python language that uses minimal RAM and which is optimised to run on a microcontroller (basically a very small computer). I will outline the architecture of Micro Python, explain how it minimises RAM usage, and discuss its benefits and use in the embedded electronics world.&lt;/p&gt;
</summary><category term="MicroPython"></category></entry><entry><title>MicroPython: Embedded programming for everyone</title><link href="https://pyvideo.org/pycon-au-2016/micropython-embedded-programming-for-everyone.html" rel="alternate"></link><published>2016-08-15T00:00:00+00:00</published><updated>2016-08-15T00:00:00+00:00</updated><author><name>Jim Mussared</name></author><id>tag:pyvideo.org,2016-08-15:pycon-au-2016/micropython-embedded-programming-for-everyone.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jim Mussared
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/110/view_talk"&gt;https://2016.pycon-au.org/schedule/110/view_talk&lt;/a&gt;
Embedded programming allows students to take their programs into the physical world - to build robots and interactive gadgets with sensors and displays. Until recently, this has been almost exclusively the domain of lower level languages like C which is not known for its beginner friendliness.&lt;/p&gt;
&lt;p&gt;MicroPython is an optimized implementation of Python 3 designed to be run on the sort of embedded microcontrollers that are making their way into the classroom, allowing Python to take the place of C. In particular, the BBC MicroBit, the pyboard and the ESP8266 all now support MicroPython.&lt;/p&gt;
&lt;p&gt;By using a language that students are already familiar with, more time can be spent on fun things like building robots and less time debugging code or setting up development tools.&lt;/p&gt;
&lt;p&gt;One of the problems with teaching embedded programming in a classroom environment is the equipment required - both the actual boards and any additional accessories or modules. We will also demonstrate a browser-based MicroBit simulator which makes embedded programming accessible to more students and also allows for the creation of structured lessons, problems and assessments.&lt;/p&gt;
</summary><category term="MicroPython"></category><category term="education"></category></entry><entry><title>MicroPython: a journey from Kickstarter to Space</title><link href="https://pyvideo.org/pycon-au-2016/micropython-a-journey-from-kickstarter-to-space.html" rel="alternate"></link><published>2016-08-13T00:00:00+00:00</published><updated>2016-08-13T00:00:00+00:00</updated><author><name>Damien George</name></author><id>tag:pyvideo.org,2016-08-13:pycon-au-2016/micropython-a-journey-from-kickstarter-to-space.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Damien George
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/199/view_talk"&gt;https://2016.pycon-au.org/schedule/199/view_talk&lt;/a&gt;
MicroPython is a lean and efficient reimplementation of Python 3 with a
reduced standard library, and brings the awesomeness of Python to computing
devices with few resources, such as microcontrollers.  In this talk I will
detail my journey in building MicroPython and the various projects that it
has been used in and the people who are using it.  I will talk about running
a successful Kickstarter campaign (actually two of them!), circuit board
manufacturing, working with the European Space Agency, working with the BBC
on the micro:bit project, and the challenges of managing and funding
open-source software.  There will also be some live demos!&lt;/p&gt;
</summary><category term="MicroPython"></category></entry><entry><title>ESP8266 and MicroPython</title><link href="https://pyvideo.org/pycon-au-2016/esp8266-and-micropython.html" rel="alternate"></link><published>2016-08-12T00:00:00+00:00</published><updated>2016-08-12T00:00:00+00:00</updated><author><name>Nick Moore</name></author><id>tag:pyvideo.org,2016-08-12:pycon-au-2016/esp8266-and-micropython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The ESP8266 is an exciting new WiFi enabled SoC which is not only small and fast but also very very cheap. And now it can run Python! This talk discusses the ins and outs of ESP8266 chips and modules, how to install MicroPython, and what you can do with it once you've installed it.&lt;/p&gt;
</summary><category term="Internet-of-Things"></category><category term="MicroPython"></category><category term="ESP8266"></category></entry><entry><title>Scripting the Internet of Things</title><link href="https://pyvideo.org/pycon-au-2016/scripting-the-internet-of-things.html" rel="alternate"></link><published>2016-08-12T00:00:00+00:00</published><updated>2016-08-12T00:00:00+00:00</updated><author><name>Damien George</name></author><id>tag:pyvideo.org,2016-08-12:pycon-au-2016/scripting-the-internet-of-things.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A big part of the Internet of Things are the end nodes, such as sensors, that are controlled by microcontrollers or other small computing devices. These devices are getting more and more sophisticated and it can be beneficial to program them with a scripting language instead of a low-level language like C. Such scripting languages need to be implemented specifically to fit and run on a microcontroller and in this talk I will discuss a few of them: Python, Lua, JavaScript and Ruby. I will talk in detail about MicroPython, a lean and efficient reimplementation of Python 3 with a reduced standard library, that runs on microcontrollers and can be used to build Internet-of-Things devices. There will be plenty of time in the talk for questions and open discussion.&lt;/p&gt;
</summary><category term="Internet-of-Things"></category><category term="MicroPython"></category></entry><entry><title>MicroPython: Python for microcontrollers and constrained environments</title><link href="https://pyvideo.org/pycon-za-2016/micropython-python-for-microcontrollers-and-constrained-environments.html" rel="alternate"></link><published>2016-10-07T00:00:00+00:00</published><updated>2016-10-07T00:00:00+00:00</updated><author><name>Christo Goosen</name></author><id>tag:pyvideo.org,2016-10-07:pycon-za-2016/micropython-python-for-microcontrollers-and-constrained-environments.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MicroPython has risen from a kickstarter campaign to a feature rich
implementation of Python 3 on microcontrollers. The project is
summarized in the following statement: &amp;quot;MicroPython is a lean and
efficient implementation of the Python 3 programming language that
includes a small subset of the Python standard library and is optimised
to run on microcontrollers and in constrained environments&amp;quot;
(&lt;a class="reference external" href="http://micropython.org/"&gt;http://micropython.org/&lt;/a&gt;). With IOT gaining more momentum daily and
devices such as the ESP8266 (&lt;a class="reference external" href="https://www.sparkfun.com/products/13678"&gt;https://www.sparkfun.com/products/13678&lt;/a&gt;)
now able to serve web pages, MicroPython is a viable candidate for fast
prototyping and simple embedded devices.&lt;/p&gt;
&lt;p&gt;This talk will focus mainly on the ESP8266 &amp;amp; Unix implementation of
MicroPython. The ESP8266 is an amazing device, considering it is the
size of a R5 coin and can run an implementation of Python. The talk will
cover features, limitations and some simple ideas to get going. A demo
of a simple Home Automation/IOT application with MicroPython &amp;amp; the
ESP8266 will also be included.&lt;/p&gt;
&lt;p&gt;This talk aims to bring the familiarity of Python 3 to developers, with
the hope of encouraging hack-a-day type projects without extensive
embedded device knowledge.&lt;/p&gt;
</summary><category term="MicroPython"></category></entry></feed>