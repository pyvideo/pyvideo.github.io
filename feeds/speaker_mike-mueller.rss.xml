<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 22 Feb 2014 00:00:00 +0000</lastBuildDate><item><title>Shared Memory Parallelism with Python</title><link>https://pyvideo.org/pydata-london-2014/shared-memory-parallelism-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python threads cannot utilize the power of multiple CPUs. Other
solutions such multiprocessing or MPI wrapper are based on message
passing, resulting substantial overhead for certain types of tasks.&lt;/p&gt;
&lt;p&gt;While pure Python does not support shared memory calculations, Cython
combined with OpenMP can provide full access to this type of parallel
data processing.&lt;/p&gt;
&lt;p&gt;This talk gives a whirlwind tour of Cython and introduces Cython's
OpenMP abilities focusing on parallel loops over NumPy arrays. Source
code examples demonstrate how to use OpenMP from Python. Results for
parallel algorithms with OpenMP show what speed-ups can be achieved for
different data sizes compared to other parallelizing strategies.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Mueller</dc:creator><pubDate>Sat, 22 Feb 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-02-22:pydata-london-2014/shared-memory-parallelism-with-python.html</guid></item></channel></rss>