<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_miguel-cabrera.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-08-01T00:00:00+00:00</updated><entry><title>Things I wish I knew before starting using Python for Data Processing</title><link href="https://pyvideo.org/europython-2016/things-i-wish-i-knew-before-starting-using-python-for-data-processing.html" rel="alternate"></link><published>2016-08-01T00:00:00+00:00</published><updated>2016-08-01T00:00:00+00:00</updated><author><name>Miguel Cabrera</name></author><id>tag:pyvideo.org,2016-08-01:europython-2016/things-i-wish-i-knew-before-starting-using-python-for-data-processing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Miguel Cabrera - Things I wish I knew before starting using Python for Data Processing
[EuroPython 2016]
[20 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/things-i-wish-i-knew-before-starting-using-python-for-data-processing"&gt;https://ep2016.europython.eu//conference/talks/things-i-wish-i-knew-before-starting-using-python-for-data-processing&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;In recent years one of the ways people get introduced into Python is
through its scientific stack. Although this is not bad, it may lead to
learn solely one aspect of the language, while overlooking other
idioms and functionality included in Python as well as some basic
software development good practices. I will share some useful tricks,
tools and techniques and software design and development principles
that I find beneficial when working on a data processing / science
project.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;In recent years of the ways people get introduced into Python is
through its scientific stack. Most people  that learned Python this
way are not trained software developers and many times it is the first
contact with a  programming language.
Although this is not bad, it may lead to learn solely one aspect of
the language while overlooking other idioms, standard and common
libraries included in Python as well as some basic software
development good practices. This may become a problem when a data
science project is moved from an experimentation phase to an
integration with technical environment.&lt;/p&gt;
&lt;p&gt;In this talk I share some useful tricks, tools and techniques and as
well as some software design and development principles that I find
beneficial when working on a data processing / science project.&lt;/p&gt;
&lt;p&gt;The talk is divided into two parts,  one  is Python centered, where I
will talk about some powerful Python construct that are useful in data
processing tasks. This include some parts  collections module,
generators and iterators among others.  The other I will describe some
general software development concepts including SOLID, DRY, and KISS
that are important to understand the rationale behind software design
decisions.&lt;/p&gt;
</summary></entry></feed>