<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_asaf-azar.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-06-04T00:00:00+00:00</updated><entry><title>How to scale up your morning commute with python</title><link href="https://pyvideo.org/pycon-israel-2018/how-to-scale-up-your-morning-commute-with-python.html" rel="alternate"></link><published>2018-06-04T00:00:00+00:00</published><updated>2018-06-04T00:00:00+00:00</updated><author><name>Asaf Azar</name></author><id>tag:pyvideo.org,2018-06-04:pycon-israel-2018/how-to-scale-up-your-morning-commute-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Via has built the world's leading operating system for on-demand shared mobility. Think about a dynamic &amp;amp; smart fleet of “moniot sherut” - routing and scheduling is computed in real time to maximize the potential of each and every seat across all the vehicles on the platform. Our service provides over 1M rides a months across cities like NYC, Chicago, Washington DC, London, Amsterdam and more.&lt;/p&gt;
&lt;p&gt;We also join efforts with transportation companies, municipalities and other partners in order to help cities transition their bus systems from rigid lines and fixed schedules to on-demand networks of dynamic shuttles.&lt;/p&gt;
&lt;p&gt;Our service is essential all over the world, and we're scaling up very fast within each location and into new locations. Each city might also require specific and unique customizations of our operating system, whether they’d be regulatory or business-related.&lt;/p&gt;
&lt;p&gt;Thus, scaling up both horizontally and vertically while maintaining flexibility, reliability and continuous introduction of new capabilities raises challenges such as:&lt;/p&gt;
&lt;p&gt;Having a different set of features for each service;&lt;/p&gt;
&lt;p&gt;Developing numerous setup variations;&lt;/p&gt;
&lt;p&gt;Handling Dependencies between various modules;&lt;/p&gt;
&lt;p&gt;Managing multiple application brands;&lt;/p&gt;
&lt;p&gt;And more....&lt;/p&gt;
&lt;p&gt;We will demonstrate how we tackle these challenges using Python tools while keeping our system fast, efficient, stable and easy to maintain.&lt;/p&gt;
</summary></entry></feed>