<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_learning.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-10-31T00:00:00+00:00</updated><entry><title>Learning Python (or Anything) Effectively</title><link href="https://pyvideo.org/pycon-se-2019/learning-python-or-anything-effectively.html" rel="alternate"></link><published>2019-10-31T00:00:00+00:00</published><updated>2019-10-31T00:00:00+00:00</updated><author><name>Jessica Shortz</name></author><id>tag:pyvideo.org,2019-10-31:pycon-se-2019/learning-python-or-anything-effectively.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When we're learning something new - even something as friendly as Python - it can be difficult to make details stick long-term. This talk will give you some tips to help you learn Python - or anything else - more effectively. Although Python beginners will benefit the most from applying these concepts to Python, this talk is for anyone who wants to hack into their potential to learn more efficiently.&lt;/p&gt;
</summary><category term="Learning"></category><category term="Beginners"></category></entry><entry><title>Don't do this at work</title><link href="https://pyvideo.org/europython-2019/dont-do-this-at-work.html" rel="alternate"></link><published>2019-07-12T00:00:00+00:00</published><updated>2019-07-12T00:00:00+00:00</updated><author><name>Tiago Montes</name></author><id>tag:pyvideo.org,2019-07-12:europython-2019/dont-do-this-at-work.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I reframe a computer programming workshop for kids I
delivered earlier this year, exploring and sharing my experience
throughout that journey, from preparation to delivery, by recreating a
simple yet engaging enough game.&lt;/p&gt;
&lt;p&gt;With that I'll both demonstrate several Python related techniques and
tools many may not be aware of, on one hand, and, on the other, extract
provocative questions about general learning processes, especially when
targeted at professional developers.&lt;/p&gt;
&lt;p&gt;I promise zero slides and a somewhat fast-paced live (re)coding session,
intertwined with comments on good/bad techniques, along with a
surprising exploration of the turtle module in the Standard Library --
it is more capable than you think.&lt;/p&gt;
&lt;p&gt;I wrap up with a self-code review and with thoughts on how such a game
could be improved, what implications that could have for both beginners
and seasoned professionals: should you do this at work?&lt;/p&gt;
&lt;p&gt;Targeting 10 minute Q&amp;amp;A / discussion by the end!&lt;/p&gt;
</summary><category term="Best Practice"></category><category term="Education"></category><category term="Learning"></category><category term="Life"></category><category term="Python Skills"></category></entry><entry><title>Game Development with CircuitPython</title><link href="https://pyvideo.org/europython-2019/game-development-with-circuitpython.html" rel="alternate"></link><published>2019-07-12T00:00:00+00:00</published><updated>2019-07-12T00:00:00+00:00</updated><author><name>Radomir Dopieralski</name></author><id>tag:pyvideo.org,2019-07-12:europython-2019/game-development-with-circuitpython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making computer games is difficult: it requires creativity,
multidisciplinary knowledge of art, psychology, math, computer science,
physics and others, patience, open mind and dedication. Making computer
games with Python is a nightmare. You hit practically every sharp corner
that Python has, starting with installation, through binary libraries,
poor hardware support, up to distribution.&lt;/p&gt;
&lt;p&gt;PewPew devices are an attempt at solving the worst problems by giving
you a dedicated, cheap, simple and portable gaming device, that you can
easily program with Python with just a simple text editor. They also
make pretty neat conference badges. I will talk about how they were
conceived, how they are used, and how you can extend and improve them
yourself.&lt;/p&gt;
&lt;p&gt;At the end of the talk you should have a good idea about what is
CircuitPython and MicroPython and how they can be used to build and
program such simple devices. You should also know where to find the
resources necessary to try designing and building your own.&lt;/p&gt;
</summary><category term="Education"></category><category term="Gadgets"></category><category term="Hardware/IoT"></category><category term="Learning"></category><category term="MicroPython"></category></entry><entry><title>How to read (code)</title><link href="https://pyvideo.org/europython-2019/how-to-read-code.html" rel="alternate"></link><published>2019-07-12T00:00:00+00:00</published><updated>2019-07-12T00:00:00+00:00</updated><author><name>Max Humber</name></author><id>tag:pyvideo.org,2019-07-12:europython-2019/how-to-read-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When you learn a new language, like French or German or even English,
you first learn how to read. Then you learn how to write. When you learn
a new &lt;em&gt;programming&lt;/em&gt; language, you first learn how to write. And that’s
it.&lt;/p&gt;
&lt;p&gt;Imagine that you were never formally taught how to read. And that you
were told that you should just figure it out … by writing … a whole
bunch. How would that even work? I don’t think it would.&lt;/p&gt;
&lt;p&gt;If you can’t read. You can’t write. It’s that simple.&lt;/p&gt;
&lt;p&gt;Do you think that Shakespeare would be Shakespeare if he never read a
single book in his entire life? No. Nothing is created in a vacuum. Good
writers are good writers because they’re good readers.&lt;/p&gt;
&lt;p&gt;Just as reading is an invaluable skill so to is reading code. It’s a
skill that’s never formally taught. But it’s a skill that is essential
nonetheless. In this talk I’ll show you how to effectively read code so
that might write better code.&lt;/p&gt;
</summary><category term="Beginners"></category><category term="Clean Code"></category><category term="Documentation"></category><category term="Learning"></category><category term="Teaching"></category></entry><entry><title>ZimboPy: Empowering Zimbabwean Girls As Change Makers</title><link href="https://pyvideo.org/pycon-italia-2017/zimbopy-empowering-zimbabwean-girls-as-change-makers.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Marlene Mhangami</name></author><id>tag:pyvideo.org,2017-04-09:pycon-italia-2017/zimbopy-empowering-zimbabwean-girls-as-change-makers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ZimboPy is an organic, on-the-ground effort by a local non-profit
organization and Python developers in the Harare software development
community to advance the cause of women in technology in Zimbabwe. The
program operates in community centers, universities, high schools and
tech hubs to make programming accessible to girls regardless of their
socio-economic status. Upon initially joining a ZimboPy club, many of
the girls would have never used a computer before, let alone code.&lt;/p&gt;
&lt;p&gt;In Zimbabwe, only 17% of computer science undergraduate majors are
women, and in the developing world, women make up less than 20% of the
information and technology workforce. ZimboPy exists to empower
Zimbabwean girls with the skills and confidence necessary to not only
enter the local tech industry, but to lead it.&lt;/p&gt;
&lt;p&gt;In addition to learning to code, ZimboPy club members also join a global
network of women in technology that are working to tackle social
challenges through human-centered design and computer science. ZimboPy’s
mentorship program invites experienced women developers, mainly from the
United States and Europe, to help Zimbabwean girls address local
problems which can be solved with technology, such as clean water and
e-commerce solutions for small shops in towns and villages. Mentors will
travel to Zimbabwe and work with girls as they develop a plan for their
applications and pair-program with them, answering questions and
providing feedback along the way. To ensure that the girls are
successful, mentors will continue to work with their groups even after
leaving the country through weekly video conferences and email feedback.
Overall, ZimboPy looks forward to changing Zimbabwe’s future through
creativity, collaboration and the power of Python programming.&lt;/p&gt;
</summary><category term="internationalization"></category><category term="School"></category><category term="Learning"></category><category term="problem solving"></category></entry><entry><title>Machine Learning Techniques for Class Imbalances &amp; Adversaries</title><link href="https://pyvideo.org/pydata-dc-2016/machine-learning-techniques-for-class-imbalances-adversaries.html" rel="alternate"></link><published>2016-10-09T00:00:00+00:00</published><updated>2016-10-09T00:00:00+00:00</updated><author><name>Brendan Herger</name></author><id>tag:pyvideo.org,2016-10-09:pydata-dc-2016/machine-learning-techniques-for-class-imbalances-adversaries.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;There are many areas of applied Machine Learning which require models optimized for rare occurrences (i.e. class imbalance), as well as users actively attempting to subvert the system (i.e. adversaries).&lt;/p&gt;
&lt;p&gt;This talk will guide the audience through multiple published techniques which specifically attempt to address these issues.&lt;/p&gt;
&lt;p&gt;The Data Innovation Lab at Capital One has explored more advanced modeling techniques for class imbalance &amp;amp; adversarial actors. Our use case has allowed us to survey the many related fields which deal with these issues, and attempt many of the suggested modeling techniques. Additionally, we have introduce a few novel variations of our own.&lt;/p&gt;
&lt;p&gt;This talk will provide an introduction to the problem space, a brief overview of the modeling frameworks we've chosen to work with, a brief overview of our approaches, a discussion of lessons learned, and our proposed future work.&lt;/p&gt;
&lt;p&gt;The approaches discussed will include ensemble models, deep learning, genetic algorithms, outlier detection via dimensionally reduction (PCA and neural network auto-encoders), time-decay weighting, and Synthetic Minority Over-sampling Technique (SMOTE sampling).&lt;/p&gt;
</summary><category term="class"></category><category term="learning"></category><category term="machine learning"></category></entry><entry><title>Visual diagnostics for more informed machine learning</title><link href="https://pyvideo.org/pydata-dc-2016/visual-diagnostics-for-more-informed-machine-learning.html" rel="alternate"></link><published>2016-10-09T00:00:00+00:00</published><updated>2016-10-09T00:00:00+00:00</updated><author><name>Rebecca Bilbro</name></author><id>tag:pyvideo.org,2016-10-09:pydata-dc-2016/visual-diagnostics-for-more-informed-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Visualization has a critical role to play throughout the analytic process. Where static outputs and tabular data can obscure patterns, human visual analysis can open up insights that lead to more robust data products. For Python programmers who dabble in machine learning, visual diagnostics are a must-have for effective feature analysis, model selection, and parameter tuning.&lt;/p&gt;
</summary><category term="learning"></category><category term="machine learning"></category></entry><entry><title>Building Continuous Learning Systems</title><link href="https://pyvideo.org/pydata-dc-2016/building-continuous-learning-systems.html" rel="alternate"></link><published>2016-10-08T00:00:00+00:00</published><updated>2016-10-08T00:00:00+00:00</updated><author><name>Anuj Gupta</name></author><id>tag:pyvideo.org,2016-10-08:pydata-dc-2016/building-continuous-learning-systems.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;In this talk we explore how to build Machine Learning Systems that can that can learn &amp;quot;continuously&amp;quot; from their mistakes (feedback loop) and adapt to an evolving data distribution.&lt;/p&gt;
</summary><category term="learning"></category></entry><entry><title>Building Serverless Machine Learning Models in the Cloud</title><link href="https://pyvideo.org/pydata-dc-2016/building-serverless-machine-learning-models-in-the-cloud.html" rel="alternate"></link><published>2016-10-08T00:00:00+00:00</published><updated>2016-10-08T00:00:00+00:00</updated><author><name>Alex Casalboni</name></author><id>tag:pyvideo.org,2016-10-08:pydata-dc-2016/building-serverless-machine-learning-models-in-the-cloud.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;You’ll learn how to efficiently design and train machine learning models in Python and deploy them to the cloud. This process reduces the development &amp;amp; operational efforts required to make your prototypes production-ready.&lt;/p&gt;
&lt;p&gt;We will describe the main challenges faced by data scientists involved in deploying machine learning models into real production environments with specific references, examples of Python libraries, and multi-model systems requiring advanced features such as A/B testing and high scalability &amp;amp; availability.&lt;/p&gt;
&lt;p&gt;While discussing the advantages and limitations of multiple deployment strategies in the cloud, we will focus on serverless computing (i.e. AWS Lambda) as a solution for simplifying your development &amp;amp; deployment workflows.&lt;/p&gt;
</summary><category term="Cloud"></category><category term="learning"></category><category term="machine learning"></category><category term="models"></category><category term="serverless"></category></entry><entry><title>Beyond Sentiment Emotion Mining with Python and machine learning</title><link href="https://pyvideo.org/pydata-dc-2016/beyond-sentiment-emotion-mining-with-python-and-machine-learning.html" rel="alternate"></link><published>2016-10-07T00:00:00+00:00</published><updated>2016-10-07T00:00:00+00:00</updated><author><name>Max Tsvetovat</name></author><id>tag:pyvideo.org,2016-10-07:pydata-dc-2016/beyond-sentiment-emotion-mining-with-python-and-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Learn how to extract emotional content from textual data - and how to build a sentiment analysis tool that does not suck.&lt;/p&gt;
&lt;p&gt;Typical sentiment analysis tries to map the entire rich and varied world of human emotions into &amp;quot;good&amp;quot; vs &amp;quot;bad&amp;quot;. In this tutorial, we use the characters of &amp;quot;Inside Out&amp;quot; and machine learning to build a nuanced model of human emotions -- and put it in production!&lt;/p&gt;
</summary><category term="learning"></category><category term="machine learning"></category></entry><entry><title>Machine Learning with Text in scikit learn</title><link href="https://pyvideo.org/pydata-dc-2016/machine-learning-with-text-in-scikit-learn.html" rel="alternate"></link><published>2016-10-07T00:00:00+00:00</published><updated>2016-10-07T00:00:00+00:00</updated><author><name>Kevin Markham</name></author><id>tag:pyvideo.org,2016-10-07:pydata-dc-2016/machine-learning-with-text-in-scikit-learn.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/justmarkham/pydata-dc-2016-tutorial"&gt;https://github.com/justmarkham/pydata-dc-2016-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Although numeric data is easy to work with in Python, most knowledge created by humans is actually raw, unstructured text. By learning how to transform text into data that is usable by machine learning models, you drastically increase the amount of data that your models can learn from. In this tutorial, we'll build and evaluate predictive models from real-world text using scikit-learn.&lt;/p&gt;
</summary><category term="learning"></category><category term="machine learning"></category><category term="scikit"></category></entry><entry><title>Genotype Phenotype Modelling with Python and Machine Learning</title><link href="https://pyvideo.org/pydata-chicago-2016/genotype-phenotype-modelling-with-python-and-machine-learning.html" rel="alternate"></link><published>2016-08-28T00:00:00+00:00</published><updated>2016-08-28T00:00:00+00:00</updated><author><name>Mat Kallada</name></author><id>tag:pyvideo.org,2016-08-28:pydata-chicago-2016/genotype-phenotype-modelling-with-python-and-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Genotype-phenotype studies are done for predicting traits such as whether someone will go bald or have a particular disease given their only genome. We look at how Python libraries such as scikit-learn and keras have made it easier to develop these statistical models. We describe a pipeline to predict antimicrobial resistance in bacteria and elaborate on challenges when working with genomic data.&lt;/p&gt;
</summary><category term="learning"></category><category term="machine learning"></category></entry><entry><title>Implementing distributed grid search for deep learning using scikit learn and joblib</title><link href="https://pyvideo.org/pydata-chicago-2016/implementing-distributed-grid-search-for-deep-learning-using-scikit-learn-and-joblib.html" rel="alternate"></link><published>2016-08-28T00:00:00+00:00</published><updated>2016-08-28T00:00:00+00:00</updated><author><name>Mike Heilman</name></author><id>tag:pyvideo.org,2016-08-28:pydata-chicago-2016/implementing-distributed-grid-search-for-deep-learning-using-scikit-learn-and-joblib.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://mheilman.github.io/pydata_chicago_2016/#/"&gt;https://mheilman.github.io/pydata_chicago_2016/#/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Grid search over hyperparameters is an important but computationally expensive process in machine learning, particularly for deep learning and tree ensembles. In this talk, I will describe how one can use joblib's recently added custom backend functionality to do distributed grid search on Amazon EC2 for a TensorFlow deep text classifier that follows the scikit-learn estimator API.&lt;/p&gt;
</summary><category term="deep learning"></category><category term="distributed"></category><category term="learning"></category><category term="scikit"></category><category term="search"></category></entry><entry><title>Machine learning techniques for data cleaning</title><link href="https://pyvideo.org/pydata-chicago-2016/machine-learning-techniques-for-data-cleaning.html" rel="alternate"></link><published>2016-08-28T00:00:00+00:00</published><updated>2016-08-28T00:00:00+00:00</updated><author><name>Cathy Deng</name></author><id>tag:pyvideo.org,2016-08-28:pydata-chicago-2016/machine-learning-techniques-for-data-cleaning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://docs.google.com/presentation/d/1k42esoWoc_WezfPfQ5vxbHTsuFOvAshEusD-GFCElTQ/edit#slide=id.g166bf446d8_1_12"&gt;https://docs.google.com/presentation/d/1k42esoWoc_WezfPfQ5vxbHTsuFOvAshEusD-GFCElTQ/edit#slide=id.g166bf446d8_1_12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Often, the most interesting datasets - data about people and organizations - are the messiest and most difficult to analyze. When data comes from multiple sources, or when data is entered manually, variation &amp;amp; ambiguity are inevitable. Learn about ways to infer structure and relationships in messy data, using open source Python libraries.&lt;/p&gt;
</summary><category term="Data"></category><category term="learning"></category><category term="machine learning"></category></entry><entry><title>Deploying Machine Learning using sklearn pipelines</title><link href="https://pyvideo.org/pydata-chicago-2016/deploying-machine-learning-using-sklearn-pipelines.html" rel="alternate"></link><published>2016-08-27T00:00:00+00:00</published><updated>2016-08-27T00:00:00+00:00</updated><author><name>Kevin Goetsch</name></author><id>tag:pyvideo.org,2016-08-27:pydata-chicago-2016/deploying-machine-learning-using-sklearn-pipelines.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Sklearn pipeline objects provide an framework that simplifies the lifecycle of data science models. This talk will cover the how and why of encoding feature engineering, estimators, and model ensembles in a single deployable object.&lt;/p&gt;
</summary><category term="deploying"></category><category term="learning"></category><category term="machine learning"></category><category term="sklearn"></category></entry><entry><title>Learning scikit learn - An Introduction to Machine Learning in Python</title><link href="https://pyvideo.org/pydata-chicago-2016/learning-scikit-learn-an-introduction-to-machine-learning-in-python.html" rel="alternate"></link><published>2016-08-26T00:00:00+00:00</published><updated>2016-08-26T00:00:00+00:00</updated><author><name>Sebastian Raschka</name></author><id>tag:pyvideo.org,2016-08-26:pydata-chicago-2016/learning-scikit-learn-an-introduction-to-machine-learning-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;This tutorial provides you with a comprehensive introduction to machine learning in Python using the popular scikit-learn library. We will learn how to tackle common problems in predictive modeling and clustering analysis that can be used in real-world problems, in business and in research applications. And we will implement certain algorithms as scratch as well, to internalize the inner workings&lt;/p&gt;
&lt;p&gt;This tutorial will teach you the basics of scikit-learn. We will learn how to leverage powerful algorithms from the two main domains of machine learning: supervised and unsupervised learning. In this talk, I will give you a brief overview of the basic concepts of classification and regression analysis, how to build powerful predictive models from labeled data. Furthermore, we will go over the basics of clustering analysis to discover hidden structures in unlabeled data. Although it's not a requirement for attending this tutorial, I highly recommend you to check out the accompanying GitHub repository at &lt;a class="reference external" href="https://github.com/rasbt/pydata-chicago2016-ml-tutorial"&gt;https://github.com/rasbt/pydata-chicago2016-ml-tutorial&lt;/a&gt; 1-2 days before the tutorial. During the session, we will not only talk about scikit-learn, but we will also go over some live code examples and code simple machine-learning algorithms from scratch to get the knack of scikit-learn's API.&lt;/p&gt;
</summary><category term="learning"></category><category term="machine learning"></category><category term="scikit"></category></entry><entry><title>Teaching Django to Comrades</title><link href="https://pyvideo.org/djangocon-us-2011/djangocon-2011--teaching-django-to-comrades.html" rel="alternate"></link><published>2011-09-05T00:00:00+00:00</published><updated>2011-09-05T00:00:00+00:00</updated><author><name>Issac Kelly</name></author><id>tag:pyvideo.org,2011-09-05:djangocon-us-2011/djangocon-2011--teaching-django-to-comrades.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Teaching Django to Comrades&lt;/p&gt;
&lt;p&gt;Presented by Issac Kelly&lt;/p&gt;
&lt;p&gt;Inevitably you're going to run into somebody who wants to learn Django,
or maybe both Python and Django. This talk will help you make it less
painful for them.&lt;/p&gt;
</summary><category term="basic"></category><category term="djangocon"></category><category term="djangocon2011"></category><category term="learning"></category></entry><entry><title>Fun with Python's newer tools</title><link href="https://pyvideo.org/europython-2011/fun-with-pythons-newer-tools.html" rel="alternate"></link><published>2011-07-24T00:00:00+00:00</published><updated>2011-07-24T00:00:00+00:00</updated><author><name>Raymond Hettinger</name></author><id>tag:pyvideo.org,2011-07-24:europython-2011/fun-with-pythons-newer-tools.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Raymond Hettinger - 23 June 2011 in &amp;quot;Track Spaghetti&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Spend ten minutes each learning to work with Counters, named tuples, new
string formatting, and the LRU cache. Learn the basic API, see how it
works under the hood, enjoy a simple example, and then have fun pushing
it to the limit in interesting ways.&lt;/p&gt;
</summary><category term="learning"></category></entry><entry><title>How to make intelligent web-apps</title><link href="https://pyvideo.org/europython-2011/how-to-make-intelligent-web-apps.html" rel="alternate"></link><published>2011-07-21T00:00:00+00:00</published><updated>2011-07-21T00:00:00+00:00</updated><author><name>Deepak Thukral</name></author><id>tag:pyvideo.org,2011-07-21:europython-2011/how-to-make-intelligent-web-apps.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Deepak Thukral - 22 June 2011 in &amp;quot;Track Ravioli &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The primary goal of this talk is twofold: to evaluate the need of data
mining and introduce some very cool, simple yet powerful machine
learning techniques to audience such as classification, clustering,
collaborative filtering, recommendation etc in your Python web
applications. This talk will conclude with some explanation and
limitations of machine learning algorithms.&lt;/p&gt;
&lt;p&gt;Basic knowledge of Python is sufficient. However some experience with
Django, meshups, machine learning or data hunger is encouraged. All talk
material and django apps will be available after talk under MIT license.&lt;/p&gt;
</summary><category term="django"></category><category term="learning"></category><category term="web"></category></entry><entry><title>Building a website with PyHP and Liwe</title><link href="https://pyvideo.org/europython-2011/building-a-website-with-pyhp-and-liwe.html" rel="alternate"></link><published>2011-07-18T00:00:00+00:00</published><updated>2011-07-18T00:00:00+00:00</updated><author><name>Fabio Rotondo</name></author><id>tag:pyvideo.org,2011-07-18:europython-2011/building-a-website-with-pyhp-and-liwe.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Fabio Rotondo - 22 June 2011 in &amp;quot;Training Pizza Napoli&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session, you will start learning how to create a simple PyHP + LiWE website.&lt;/p&gt;
&lt;p&gt;Then, we'll show you how to create new custom modules for your website and we'll show up some great features of the LiWE ecosystem.&lt;/p&gt;
</summary><category term="learning"></category></entry><entry><title>Python's other collection types and algorithms</title><link href="https://pyvideo.org/europython-2011/pythons-other-collection-types-and-algorithms.html" rel="alternate"></link><published>2011-07-18T00:00:00+00:00</published><updated>2011-07-18T00:00:00+00:00</updated><author><name>Andrew Dalke</name></author><id>tag:pyvideo.org,2011-07-18:europython-2011/pythons-other-collection-types-and-algorithms.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Andrew Dalke - 21 June 2011 in &amp;quot;Track Spaghetti&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's impossible to use Python without learning about lists, dictionaries
and tuples, and most people have at least heard about sets. These four
collection types are so important and useful that Python has special
syntax for creating them.&lt;/p&gt;
&lt;p&gt;Fewer people know about Python's other built-in collection data types
and algorithms. A deque supports fast appends and pops from both ends
and is great for breath-first searches, the heapq module helps you
construct a priority queue on top of lists, and the bisect module is
handy for quick binary searches of an already sorted list.&lt;/p&gt;
&lt;p&gt;The defaultdict uses the dict &lt;strong&gt;missing&lt;/strong&gt; hook as a better solution to
setdefault, OrderedDict is a dictionary that preserves insertion order,
and Counter is a dictionary specialized for counting hashable objects. A
namedtuple is handy if you want to support both index and attribute
lookups for the same item, and a frozenset is a hashable form of a set
which can be used as keys in a dictionary or set.&lt;/p&gt;
&lt;p&gt;My talk will go over these 8 different classes and modules. I'll give
concrete examples of how to use them and why they are useful. The target
audience is intermediate programmers who are familiar with the Python's
standard data types and with data types in general, but who don't know
all of the functionality available in modern Python.&lt;/p&gt;
</summary><category term="bisect"></category><category term="dictionaries"></category><category term="frozenset"></category><category term="heapq"></category><category term="learning"></category><category term="namedtuple"></category><category term="ordereddict"></category></entry><entry><title>Making use of OpenStreetMap data with Python</title><link href="https://pyvideo.org/europython-2011/making-use-of-openstreetmap-data-with-python.html" rel="alternate"></link><published>2011-07-13T00:00:00+00:00</published><updated>2011-07-13T00:00:00+00:00</updated><author><name>Andrii Mishkovskyi</name></author><id>tag:pyvideo.org,2011-07-13:europython-2011/making-use-of-openstreetmap-data-with-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Andrii Mishkovskyi - 22 June 2011 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever wondered how web maps are created? Ever wondered if you could build
something like Google Maps over a weekend? You probably can't, but this
talk will show you the basics of what you need to know, such as
importing data, rendering maps and even building simple routes. And all
of this in Python!&lt;/p&gt;
&lt;p&gt;Abstract: * Learning how OSM data looks * Parsing and importing the
data * Rendering maps with Mapnik * Bits of code required to build
geocoder * Building simple router with Python and PostGIS * And anything
else I forgot to mention in this abstract but will talk about&lt;/p&gt;
&lt;p&gt;Definitions: OpenStreetMap - the so-called &amp;quot;Wikipedia of maps&amp;quot; project,
with thousands of contributors who edit the map data of the whole world.
Unlike similar projects, the map data is completely free (both as in
beer and as in speech) and thus anyone can make use of it. Mapnik -
rendering framework, created specifically for OpenStreetMap, written in
C++ and Python. PostGIS - an extension of PostgreSQL database, with
support for many useful GIS features.&lt;/p&gt;
</summary><category term="gis"></category><category term="google"></category><category term="importing"></category><category term="learning"></category><category term="maps"></category><category term="parsing"></category><category term="postgresql"></category><category term="web"></category></entry><entry><title>Python 3: the Next Generation (is here already)</title><link href="https://pyvideo.org/europython-2011/python-3-the-next-generation-is-here-already-0.html" rel="alternate"></link><published>2011-07-13T00:00:00+00:00</published><updated>2011-07-13T00:00:00+00:00</updated><author><name>Wesley J. Chun</name></author><id>tag:pyvideo.org,2011-07-13:europython-2011/python-3-the-next-generation-is-here-already-0.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] wesley chun - 21 June 2011 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is currently at a crossroads: Python 2 has taken it from a quiet
word- of-mouth language to primetime, with many companies around the
world using it and an ever-increasing global marketshare of the
programming world. But now comes Python 3, the first version of the
language that is not backwards compatible with previous releases.&lt;/p&gt;
&lt;p&gt;What does this mean? Are all my Python programs going to break? Will I
have to rewrite everything? How much time do I have? When is Python 2
going to be EOL'd? Is the language undergoing a complete rewrite and
will I even recognize it? What are the changes between Python 2 and 3
anyway? Also, the next generation is already here, as Python 3 is over
two years old now. What has been ported so far, and what is its current
status? Are migration plans or transition tools available? If I want to
start learning Python, should I do Python 2 or Python 3? Are all Python
2 books obsolete?&lt;/p&gt;
&lt;p&gt;We will attempt to answer all of these questions and more. Join us!&lt;/p&gt;
&lt;p&gt;OUTLINE/TOPICS&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python 2 vs. Python 3&lt;/li&gt;
&lt;li&gt;Introduction to Python 3&lt;/li&gt;
&lt;li&gt;Backwards Compatibility&lt;/li&gt;
&lt;li&gt;Generational Changes&lt;/li&gt;
&lt;li&gt;Key Differences&lt;/li&gt;
&lt;li&gt;Role of Remaining Python 2.x releases&lt;/li&gt;
&lt;li&gt;Transition &amp;amp; Migration Plans &amp;amp; Tools&lt;/li&gt;
&lt;li&gt;Futures&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="learning"></category><category term="migration"></category><category term="python,"></category></entry><entry><title>Spatial data and GeoDjango</title><link href="https://pyvideo.org/europython-2011/spatial-data-and-geodjango.html" rel="alternate"></link><published>2011-07-13T00:00:00+00:00</published><updated>2011-07-13T00:00:00+00:00</updated><author><name>Bruno Renié</name></author><id>tag:pyvideo.org,2011-07-13:europython-2011/spatial-data-and-geodjango.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Bruno Renie - 21 June 2011 in &amp;quot;Track Tagliatelle&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GeoDjango is the &amp;quot;world-class geographic web framework&amp;quot; everyone has
probably heard of. The purpose of this talk, targeted at people familiar
with Django itself, is to introduce in more details the capabilities of
this framework.&lt;/p&gt;
&lt;p&gt;After learning the basics of Geographic Information Systems, we will
see:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;how to get started with a GeoDjango installation,&lt;/li&gt;
&lt;li&gt;how to import, store and query spatial data,&lt;/li&gt;
&lt;li&gt;how to geo-enable your forms to allow user-generated spatial data,&lt;/li&gt;
&lt;li&gt;how to serialize and display your data using the different formats
and mapping frameworks such as OpenLayers and Polymaps.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;During this talk we will be building a simple GeoDjango application to
illustrate the different concepts introduced.&lt;/p&gt;
</summary><category term="django"></category><category term="forms"></category><category term="geodjango"></category><category term="learning"></category><category term="mapping"></category><category term="spatial"></category><category term="web"></category></entry></feed>