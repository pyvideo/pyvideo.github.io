<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Riya Bansal</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_riya-bansal.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-06-03T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Linting Python The Elegant Way</title><link href="https://pyvideo.org/pycon-italia-2022/linting-python-the-elegant-way.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Riya Bansal</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/linting-python-the-elegant-way.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Linting Python The Elegant Way - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;This talk is for those people who know basic python but are looking
forward to writing better and cleaner python code. Python has always
been known for its easy-to-understand syntax. This talk will empower all
developers and give perspective on how …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Linting Python The Elegant Way - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;This talk is for those people who know basic python but are looking
forward to writing better and cleaner python code. Python has always
been known for its easy-to-understand syntax. This talk will empower all
developers and give perspective on how can you write code in a much more
elegant way. Linting is the automated checking of your source code for
programmatic and stylistic errors. Linters analyze source code to flag
programming errors, bugs, stylistic errors, and suspicious constructs.
This is done by using a lint tool. Python being one of the most elegant
language has got a wide variety of listing tools available that can help
programmers in Code formatting and styling their code in the best
suitable form. Python has got some advance listing tools like pylint and
flake8. In this talk we will have a great deal of discussion around how
these linters can be used and how these tools can help you find more
bugs and improve your code quality. These linting tools finds problems
that are typically caught by a compiler for less dynamic languages. We
will also discuss about how can we manage import orders, code
formatting, checking security vulnerabilities, managing dependencies etc
using these tools. There are also code analysis tools that provide other
insights into your code. While maybe not linters by definition, these
tools are usually used side-by-side with linters. They too hope to
improve the quality of the code. It’s useful to have linters run against
your code frequently. If automation and consistency aren’t there, it’s
easy for a large team or project to lose sight of the goal and start
creating lower-quality code.&lt;/p&gt;
&lt;p&gt;Attendees will be able to learn 1. What is a linter? 2. Famous linting
solutions like pylint and flake 8 3. Use cases like ordering imports,
finding error bugs 4. Managing dependency in python with these linter
tools.&lt;/p&gt;
&lt;p&gt;Speaker: Riya Bansal&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="best practice"></category><category term="clean code"></category><category term="code analysis"></category><category term="community"></category><category term="development"></category></entry></feed>