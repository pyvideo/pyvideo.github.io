<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Pat Viafore</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 17 May 2024 00:00:00 +0000</lastBuildDate><item><title>BDD To The Bone: Acceptance Testing with Behave and Selenium</title><link>https://pyvideo.org/djangocon-us-2023/bdd-to-the-bone-acceptance-testing-with-behave-and-selenium.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's easy to get caught up in testing metrics. We all do it. We aim for 100% code coverage, try to hit all branches, write good integration tests, and all the other good developer practices. These all indicate that we are building our product right, but are we building the right product?&lt;/p&gt;
&lt;p&gt;There's a different mentality when it comes to answering this question. We, as developers, can't just make sure that the code does what &lt;em&gt;we&lt;/em&gt; want it to do. We need to think about what our users want. We need good requirements and specifications and we need to make sure that we are covering user acceptance testing.&lt;/p&gt;
&lt;p&gt;In this talk, we're going to discuss why requirements are hard to get right, and how we can solve some of those problems. We'll introduce strong traceabilty with executable specifications and then talk about how to tie that directly to your Python tests.&lt;/p&gt;
&lt;p&gt;We'll discuss behavior driven development, primarily with the &lt;cite&gt;behave&lt;/cite&gt; library. After we cover the basics, we'll look at a Django application and talk about the challenges in performing user acceptance testing on websites. We'll use the &lt;cite&gt;selenium&lt;/cite&gt; library to drive website interactions through Python, and tie it all together with acceptance tests.&lt;/p&gt;
&lt;p&gt;This talk assumes basic knowledge of testing practices, Python, and HTML/JavaScript.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pat Viafore</dc:creator><pubDate>Tue, 17 Oct 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-10-17:/djangocon-us-2023/bdd-to-the-bone-acceptance-testing-with-behave-and-selenium.html</guid><category>DjangoCon US 2023</category></item><item><title>Tip-Top Typing: A Look At Python Typing</title><link>https://pyvideo.org/hsvpy-huntsvilles-python-meetup/tip-top-typing-a-look-at-python-typing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wondered how Python handles types?  What does dynamic typing mean?  How about duck typing?  In this video, we'll look at what a type is in Python, as well as how to use it's most popular typechecker - mypy - to be more effective in using types.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pat Viafore</dc:creator><pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-08:/hsvpy-huntsvilles-python-meetup/tip-top-typing-a-look-at-python-typing.html</guid><category>HSV.py - Huntsville's Python Meetup</category><category>typing</category><category>mypy</category></item><item><title>Python3 Panel Talk</title><link>https://pyvideo.org/hsvpy-huntsvilles-python-meetup/python3-panel-talk.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A moderated panel discussing what the Python 2 EOL means, the future of Python3, and how the community responds&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pat Viafore</dc:creator><pubDate>Tue, 26 Feb 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-02-26:/hsvpy-huntsvilles-python-meetup/python3-panel-talk.html</guid><category>HSV.py - Huntsville's Python Meetup</category><category>Python 3</category><category>panel</category></item><item><title>Extensible Python: Robustness Through Addition</title><link>https://pyvideo.org/pycon-us-2024/extensible-python-robustness-through-addition.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modifying existing code is just the worst. It's a tangled mess of
dependencies, you don't know the original author's intent, and simple
changes feel like they break the world. But it can be better. Wouldn't
it be nice to be in a codebase where you primarily added new code and
didn't touch the old stuff? We can achieve this by viewing your code
through the lens of extensibility.&lt;/p&gt;
&lt;p&gt;In this talk, you'll learn what extensibility means, and some common
patterns for making your code more extensible. We'll take a hard look at
the Open-Closed Principle and how to deal with a mess of dependencies.
We'll then walk through how to make your code composable so that it's
easier to build up abstractions. We'll finish off by looking through two
architectural styles that promote extensilbility: event-driven
architectures and pluggable architectures.&lt;/p&gt;
&lt;p&gt;Software is going to change (that's why we call it &amp;quot;soft&amp;quot;ware). That's
inevitable. How your codebase withstands that change is up to you. Don't
write a tangled, fragile mess that is incomprehensible. Make it easy to
extend, and you'll greatly extend the lifetime of your products.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pat Viafore</dc:creator><pubDate>Fri, 17 May 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-05-17:/pycon-us-2024/extensible-python-robustness-through-addition.html</guid><category>PyCon US 2024</category></item><item><title>BDD To The Bone - Using Behave and Selenium to Test-Drive Web Applications</title><link>https://pyvideo.org/pytennessee-2017/bdd-to-the-bone-using-behave-and-selenium-to-test-drive-web-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever felt that unit tests just weren't enough? It feels like something always still goes wrong when your customers start to use your application. All your unit tests pass, so what is going on? In this talk, we're going to look how to use the behave library to explore behavior driven development as well as the selenium library to control your web application through a browser.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pat Viafore</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:/pytennessee-2017/bdd-to-the-bone-using-behave-and-selenium-to-test-drive-web-applications.html</guid><category>PyTennessee 2017</category><category>selenium</category><category>bdd</category><category>behave</category><category>test-driver</category></item></channel></rss>