<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 07 Dec 2019 00:00:00 +0000</lastBuildDate><item><title>Productionalizing a Data Science Team</title><link>https://pyvideo.org/pydata-austin-2019/productionalizing-a-data-science-team.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many data scientists who are used to working independently struggle when transitioning to teams. This talk is about best practices for processes on data science teams, taken from two teams I've worked on. Some topics I’ll cover are: tracking your work, organizing your code, and deploying models. These tips are meant to be utilized by any teammate including managers and individual contributors.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicole Carlson</dc:creator><pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-12-07:pydata-austin-2019/productionalizing-a-data-science-team.html</guid><category>Data Science</category><category>teamwork</category></item><item><title>Lessons learned open sourcing (and maintaining) my first library</title><link>https://pyvideo.org/pycon-ca-2018/lessons-learned-open-sourcing-and-maintaining-my-first-library.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Last year, I open-sourced my first library, PyMC3 Models. This talk has two parts: things I learned as I was writing my library and some of the issues I faced being the sole maintainer of the library. I hope you’ll be encouraged to open source and maintain your own library after this!&lt;/p&gt;
&lt;p&gt;Presentation page -- &lt;a class="reference external" href="https://2018.pycon.ca/talks/talk-PC-55199"&gt;https://2018.pycon.ca/talks/talk-PC-55199&lt;/a&gt;
Author website -- &lt;a class="reference external" href="http://parsingscience.com/"&gt;http://parsingscience.com/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicole Carlson</dc:creator><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-11-11:pycon-ca-2018/lessons-learned-open-sourcing-and-maintaining-my-first-library.html</guid></item><item><title>How to spend ¾ of your yearly budget in 3 weeks: a PySpark cautionary tale</title><link>https://pyvideo.org/pydata-new-york-city-2018/how-to-spend-34-of-your-yearly-budget-in-3-weeks-a-pyspark-cautionary-tale.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicole Carlson</dc:creator><pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-08-17:pydata-new-york-city-2018/how-to-spend-34-of-your-yearly-budget-in-3-weeks-a-pyspark-cautionary-tale.html</guid></item><item><title>Turning PyMC3 into scikit learn</title><link>https://pyvideo.org/pydata-new-york-city-2017/turning-pymc3-into-scikit-learn.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyMC3 is a probabilistic modeling library. Most examples of how to use the library exist inside of Jupyter notebooks. However, making your model reusable and production-ready is a bit opaque. My goal is to show a custom Bayesian Model class that implements the sklearn API. After this talk, you should be able to build your own reusable PyMC3 models.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicole Carlson</dc:creator><pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-11-27:pydata-new-york-city-2017/turning-pymc3-into-scikit-learn.html</guid></item><item><title>When Worlds Collide: Productionalizing a Data Science Model</title><link>https://pyvideo.org/pydata-chicago-2016/when-worlds-collide-productionalizing-a-data-science-model.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;On our first data science project at Shiftgig, the data science and engineering teams had to build software that was production-ready while maintaining the flexibility of a data science sandbox. Although these seem like irreconcilable goals, they forced us to improve inter-team communication and ultimately helped create a great product. We’ll walk through our process and the lessons we learned.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tudor Radoaca</dc:creator><pubDate>Sun, 28 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-28:pydata-chicago-2016/when-worlds-collide-productionalizing-a-data-science-model.html</guid><category>Data</category><category>data science</category><category>model</category><category>science</category></item><item><title>A Quickstart Guide to PyMC3</title><link>https://pyvideo.org/pydata-chicago-2016/a-quickstart-guide-to-pymc3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/parsing-science/pymc3_quickstart_guide"&gt;https://github.com/parsing-science/pymc3_quickstart_guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PyMC3 is a powerful relatively new library for probabilistic models. The developers have given multiple talks describing probabilistic models, Bayesian statistics, and the features of the library. This tutorial aims to complement these talks by providing a practical guide to using PyMC3 with step-by-step implementations of some basic models and some issues you might encounter.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicole Carlson</dc:creator><pubDate>Fri, 26 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-26:pydata-chicago-2016/a-quickstart-guide-to-pymc3.html</guid></item></channel></rss>