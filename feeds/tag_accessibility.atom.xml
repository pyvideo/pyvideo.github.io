<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_accessibility.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-05-09T00:00:00+00:00</updated><entry><title>Accessibility, POUR, and the Pythonistas</title><link href="https://pyvideo.org/pycon-ca-2017/accessibility-pour-and-the-pythonistas.html" rel="alternate"></link><published>2018-05-09T00:00:00+00:00</published><updated>2018-05-09T00:00:00+00:00</updated><author><name>Nicolas Steenhout</name></author><id>tag:pyvideo.org,2018-05-09:pycon-ca-2017/accessibility-pour-and-the-pythonistas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It would be easy to think that since Python is &amp;quot;just&amp;quot; a programming language, we don't have to pay attention to web accessibility. The fact is that most of what we do ends up with some, if not all, front-facing components delivered on the web or mobile via HTML, CSS and JavaScript.&lt;/p&gt;
&lt;p&gt;Accessibility benefits everyone, not just people with disabilities. Whether someone is Deaf or blind, has motor or cognitive disabilities, or doesn't speak English as a first language, or tries to use your app on a mobile device in bright sun, if accessibility hasn't been considered, your app is likely to lock them out of being able to use it. As such, it is mission critical for our code output to take into account web accessibility basics.&lt;/p&gt;
&lt;p&gt;We'll explore the POUR principle: Building apps that are Perceivable, Operably, Understandable and Robust. We'll talk a bit about who is affected by lack of accessibility, and what barriers people may face.&lt;/p&gt;
&lt;p&gt;You'll leave the workshop with a greater understanding of the issues, some practical things to implement, and resources to be able to increase your knowledge.&lt;/p&gt;
</summary><category term="accessibility"></category></entry><entry><title>Development of Global Open Standard for Developing Countries</title><link href="https://pyvideo.org/pycon-japan-2012/development-of-global-open-standard-for-developing-countries.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>西本 卓也</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/development-of-global-open-standard-for-developing-countries.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Digital Accessible Information SYstem (DAISY) は読書が困難な人々を支援する技術です。DAISY コンソーシアムは国際標準規格DAISYの開発、保守、普及を行なう非営利の国際組織です。この講演では河村氏にDAISYプロジェクトの経緯、そして、 インクルーシブな社会発展のために NVDA のようなオープンソース技術、オープンスタンダード技術がどのように貢献できるかをお話いただきます。
Digital Accessible Information SYstem (DAISY) assists people who have challenges using regular printed media. DAISY Consortium is a not-for-profit international association that develops, maintains and promotes DAISY standards. This talk gives the history of DAISY project, potential roles in global development of inclusive societies, and what is expected of the NVDA community from this point of view.&lt;/p&gt;
</summary><category term="accessibility"></category><category term="screen readers"></category><category term="NVDA"></category></entry><entry><title>NVDA: Open Source Screen Reader Written in Python</title><link href="https://pyvideo.org/pycon-japan-2012/nvda-open-source-screen-reader-written-in-python.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>Michael Curran</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/nvda-open-source-screen-reader-written-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk overviews the development of NonVisual Desktop Access (NVDA). NVDA is a free and open source screen reader for the Microsoft Windows operating system. NVDA is written primarily in the Python programming language. The speaker will explain what are the difficulties in programming screen reader, what is the benefits of using Python language, and in what ways NVDA is being developed.&lt;/p&gt;
</summary><category term="NVDA"></category><category term="screen readers"></category><category term="accessibility"></category></entry><entry><title>The Development and Promotion of NVDA in Taiwan</title><link href="https://pyvideo.org/pycon-japan-2012/the-development-and-promotion-of-nvda-in-taiwan.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>Dr. Jerry Wang</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/the-development-and-promotion-of-nvda-in-taiwan.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Taiwan Digital Talking Books Association (TDTB) is supporting development of NVDA for Chinese language users. This talk overviews how NVDA is used in Taiwan.&lt;/p&gt;
</summary><category term="NVDA"></category><category term="accessibility"></category><category term="screen readers"></category></entry><entry><title>The Localization of NVDA for Japanese Language Users</title><link href="https://pyvideo.org/pycon-japan-2012/the-localization-of-nvda-for-japanese-language-users.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>西本 卓也</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/the-localization-of-nvda-for-japanese-language-users.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;日本では2010年からNVDA日本語版(nvdajp)を開発・公開してきました。主な特長は、日本語の音声合成エンジンの追加、かな漢字変換の読み上げ、点字ディスプレイへの対応などです。 この講演では、日本語のスクリーンリーダーに必要な機能の概要と、NVDA日本語チームによる開発の現状を紹介します。
In Japan, localized version of NVDA, which supports Japanese text-to-speech synthesizer, input method support, and Japanese braille display support, has been developed since 2010. This talk overviews the features necessary for Japanese screen reader, and the development of NVDAJP.&lt;/p&gt;
</summary><category term="screen readers"></category><category term="accessibility"></category><category term="NVDA"></category></entry><entry><title>Bad Accessibility Happens – That Doesn’t Have to Be The End</title><link href="https://pyvideo.org/pycascades-2018/bad-accessibility-happens-that-doesnt-have-to-be-the-end.html" rel="alternate"></link><published>2018-01-22T00:00:00+00:00</published><updated>2018-01-22T00:00:00+00:00</updated><author><name>Lindsey Dragun</name></author><id>tag:pyvideo.org,2018-01-22:pycascades-2018/bad-accessibility-happens-that-doesnt-have-to-be-the-end.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Avoidance is not the answer—bad accessibility will still be there, losing you users and creating bad will. We’ll go through examples of what not to do and how to fix problems. We’ll also talk about compromises that can be made to appease stakeholders and others.&lt;/p&gt;
</summary><category term="accessibility"></category></entry><entry><title>Browse and print problems and solutions</title><link href="https://pyvideo.org/europython-2011/browse-and-print-problems-and-solutions.html" rel="alternate"></link><published>2012-02-27T00:00:00+00:00</published><updated>2012-02-27T00:00:00+00:00</updated><author><name>Jonathan Fine</name></author><id>tag:pyvideo.org,2012-02-27:europython-2011/browse-and-print-problems-and-solutions.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Jonathan Fine - 21 June 2011 in &amp;quot;Track Tagliatelle&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the growth of the web, how we publish is changing. Paper alone is
not enough, web pages are also required. And for many web pages it is
not enough to rely on the browser’s print capabilities. Sphinx, used
since 2008 for Python’s documentation, is a creative response to this
tension.&lt;/p&gt;
&lt;p&gt;This talk will take a broader view of the problem. For example, many
browsers support web fonts for display but not for printing. Mathematics
on web pages is still difficult, but SVG holds out much promise not only
for mathematics but for tables and other complex typeset material.
Achieving accessibility remains difficult.&lt;/p&gt;
&lt;p&gt;Based on over 15 year’s experience in print and electronic publishing,
this talk will survey problems and emerging solutions. Software and
sites covered include LaTeX, PDF, SVG, MathJax, web-fonts, PediaPress,
Sphinx and arXiv.&lt;/p&gt;
</summary><category term="accessibility"></category><category term="sphinx"></category><category term="web"></category></entry><entry><title>Pycon 2010: 508 and You: Taking the Pain out of Accessibility (#119)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--508-and-you--taking-the-pain-out-of-a.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Katie Cunningham</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--508-and-you--taking-the-pain-out-of-a.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;508 and You: Taking the Pain out of Accessibility&lt;/p&gt;
&lt;p&gt;Presented by Katie A Cunningham (NASA/Indyne)&lt;/p&gt;
&lt;p&gt;Thinking about scoring a government contract, but haven't heard of 508
compliance yet? Interested in making your site accessible to people with
disabilities? Never thought about compliance, but want to know why it's
a good idea?&lt;/p&gt;
</summary><category term="accessibility"></category><category term="pycon"></category><category term="pycon2010"></category></entry></feed>