<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_asheesh-laroia.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-05T13:10:00+00:00</updated><entry><title>Account Security Patterns: How Logged-In Are you?</title><link href="https://pyvideo.org/pycon-us-2019/account-security-patterns-how-logged-in-are-you.html" rel="alternate"></link><published>2019-05-05T13:10:00+00:00</published><updated>2019-05-05T13:10:00+00:00</updated><author><name>Philip James</name></author><id>tag:pyvideo.org,2019-05-05:pycon-us-2019/account-security-patterns-how-logged-in-are-you.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Account security means making sure your users are only ones who can
access their accounts. Account takeovers happen for a variety of reasons
-- password re-use, compromised computers, guessable passwords, and
more. This talk gives you concepts and concrete skills that will help
you identify and prevent account takeovers and limit the damage. It’s
inspired by practices in use at GitHub, Google, and the Python Package
Index.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Account Security for the Fashionable App Developer</title><link href="https://pyvideo.org/pycascades-2019/account-security-for-the-fashionable-app-developer.html" rel="alternate"></link><published>2019-02-24T00:00:00+00:00</published><updated>2019-02-24T00:00:00+00:00</updated><author><name>Philip James</name></author><id>tag:pyvideo.org,2019-02-24:pycascades-2019/account-security-for-the-fashionable-app-developer.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the same way that we feel safe giving our info to some app and nervous giving our info to other apps, your users have some feeling of safety or concern with the apps you develop. We’ll go over design patterns and Python libraries that will help you protect your user’s accounts.&lt;/p&gt;
&lt;p&gt;Talk page: &lt;a class="reference external" href="https://2019.pycascades.com/talks/account-security-for-the-fashionable-app-developer/"&gt;https://2019.pycascades.com/talks/account-security-for-the-fashionable-app-developer/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>All in the timing: How side channel attacks work</title><link href="https://pyvideo.org/north-bay-python-2018/all-in-the-timing-how-side-channel-attacks-work.html" rel="alternate"></link><published>2018-11-03T00:00:00+00:00</published><updated>2018-11-03T00:00:00+00:00</updated><author><name>Philip James</name></author><id>tag:pyvideo.org,2018-11-03:north-bay-python-2018/all-in-the-timing-how-side-channel-attacks-work.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, you’ll learn about a category of security issue known as
side channel attacks. You’ll be amused to see how features like
automatic data compression, short-circuit execution, and deterministic
hashing can be abused to bypass security systems. No security background
knowledge is required. The talk assumes at least intermediate Python
experience.&lt;/p&gt;
</summary></entry><entry><title>All in the timing: How side channel attacks work</title><link href="https://pyvideo.org/pycon-us-2018/all-in-the-timing-how-side-channel-attacks-work.html" rel="alternate"></link><published>2018-05-11T00:00:00+00:00</published><updated>2018-05-11T00:00:00+00:00</updated><author><name>Philip James</name></author><id>tag:pyvideo.org,2018-05-11:pycon-us-2018/all-in-the-timing-how-side-channel-attacks-work.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, you’ll learn about a category of security issue known as side channel attacks. You’ll be amused to see how features like automatic data compression, short-circuit execution, and deterministic hashing can be abused to bypass security systems. No security background knowledge is required. The talk assumes at least intermediate Python experience.&lt;/p&gt;
&lt;p&gt;We’ll take a tour of real side channel vulnerabilities in open source Python codebases, including the patches that fixed them. It also offers practical advice for avoiding these issues. My goal is to demystify this topic, even if you aren’t writing security-critical software.&lt;/p&gt;
</summary><category term="security"></category><category term="vulnerability"></category></entry><entry><title>Type uWSGI; press enter; what happens?</title><link href="https://pyvideo.org/pycon-us-2017/type-uwsgi-press-enter-what-happens.html" rel="alternate"></link><published>2017-05-19T00:00:00+00:00</published><updated>2017-05-19T00:00:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:pyvideo.org,2017-05-19:pycon-us-2017/type-uwsgi-press-enter-what-happens.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You're a pretty knowledgeable Python web application developer, but how
does that web application get served to the world? For many of us, uWSGI
is the magic that makes our application available, and in this talk
we'll look at how uWSGI works with the OS and the networking stack to
make the magic happen.&lt;/p&gt;
</summary></entry><entry><title>Scrape the Web: Strategies for programming websites that don't expect it</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--scrape-the-web--strategies-for-progra.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--scrape-the-web--strategies-for-progra.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;We'll discuss the basics of web scraping, and then dive into the details
of different methods and where they are most applicable. You'll leave
with an understanding of when to apply different tools, and learn about
automating a full web browser, a &amp;quot;heavy hammer&amp;quot; that I picked up at a
project for the Electronic Frontier Foundation.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scrape the Web: Strategies for programming websites that don't expect it&lt;/p&gt;
&lt;p&gt;Presented by Asheesh Laroia&lt;/p&gt;
&lt;p&gt;Do you find yourself faced with websites that have data you need to
extract? Would your life be simpler if you could programmatically input
data into web applications, even those tuned to resist interaction by
bots?&lt;/p&gt;
&lt;p&gt;Year by year, the web is becoming a stronger force. Learn how to get the
best of it.&lt;/p&gt;
&lt;p&gt;We'll discuss the basics of web scraping, and then dive into the details
of different methods and where they are most applicable. You'll leave
with an understanding of when to apply different tools, and learn about
automating a full web browser, a &amp;quot;heavy hammer&amp;quot; that I picked up at a
project for the Electronic Frontier Foundation.&lt;/p&gt;
&lt;p&gt;Atendees should bring a laptop, if possible, to try the examples we
discuss and optionally take notes. Code samples will be made available
after class with no restrictions. Intended Audience&lt;/p&gt;
&lt;p&gt;Intermediate (or better) Python programmers, probably without extensive
web testing experience&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;My motto: &amp;quot;The website is the API.&amp;quot;&lt;/li&gt;
&lt;li&gt;Choosing a parser: BeautifulSoup, lxml, HTMLParse, and html5lib.&lt;/li&gt;
&lt;li&gt;Extracting information, even in the face of bad HTML: Regular
expressions, BeautifulSoup, SAX, and XPath.&lt;/li&gt;
&lt;li&gt;Automatic template reverse-engineering tools.&lt;/li&gt;
&lt;li&gt;Submitting to forms.&lt;/li&gt;
&lt;li&gt;Playing with XML-RPC&lt;/li&gt;
&lt;li&gt;DO NOT BECOME AN EVIL COMMENT SPAMMER.&lt;/li&gt;
&lt;li&gt;Countermeasures, and circumventing them:&lt;ul&gt;
&lt;li&gt;IP address limits&lt;/li&gt;
&lt;li&gt;Hidden form fields&lt;/li&gt;
&lt;li&gt;User-agent detection&lt;/li&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;CAPTCHAs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Plenty of full source code to working examples:&lt;ul&gt;
&lt;li&gt;Submitting to forms for text-to-speech.&lt;/li&gt;
&lt;li&gt;Downloading music from web stores.&lt;/li&gt;
&lt;li&gt;Automating Firefox with Selenium RC to navigate a pure-JavaScript
service.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q&amp;amp;A; and workshopping&lt;/li&gt;
&lt;li&gt;Use your power for good, not evil.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="pycon"></category><category term="pycon2010"></category><category term="scraping"></category><category term="web"></category></entry><entry><title>Get new contributors (and diversity) through outreach</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--get-new-contributors--and-diversity--.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--get-new-contributors--and-diversity--.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Get new contributors (and diversity) through outreach&lt;/p&gt;
&lt;p&gt;Presented by Asheesh Laroia&lt;/p&gt;
&lt;p&gt;Groups like the Fedora Design Team, Dreamwidth, SF Ruby, and OpenHatch
have discovered the power of outreach to bring in new contributors. In
the past year, SF Ruby grew in numbers as well as in diversity, moving
from 3% women to 18% women. Because most projects need ongoing help,
this talk discusses effective strategies for bringing in contributors
who stick around for the long haul.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;This talk is targeted at anyone involved in an open source project who
wants to find more contributors.&lt;/p&gt;
&lt;p&gt;Programs like Google Summer of Code often provide excited students who
disappear after a summer's work. Meanwhile, request for help emails on
development lists are typically met with silence. Hackathons create a
flurry of commits, but then we never hear from the participants again.
Expanding your team is possible, and it requires care in terms of
outreach, expectation management, and mentorship.&lt;/p&gt;
&lt;p&gt;We will discuss three major forms of outreach:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;One-on-one check-ins with participants,&lt;/li&gt;
&lt;li&gt;Periodic drives to bring in new contributors, and&lt;/li&gt;
&lt;li&gt;In-person teaching events. Each one has &amp;quot;do&amp;quot;s and &amp;quot;don't&amp;quot;s associated
with it. This talk digests the experience of effective outreach into
practical strategies that you can re-use within your project.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="diversity"></category><category term="openhatch"></category><category term="outreach"></category><category term="pycon"></category><category term="pycon2011"></category></entry><entry><title>Diversity in practice: How the Boston Python User Group grew to 1700 people and over 15% women</title><link href="https://pyvideo.org/pycon-us-2012/diversity-in-practice-how-the-boston-python-user.html" rel="alternate"></link><published>2012-03-11T00:00:00+00:00</published><updated>2012-03-11T00:00:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:pyvideo.org,2012-03-11:pycon-us-2012/diversity-in-practice-how-the-boston-python-user.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;How do you bring more women into programming communities with long-term,
measurable results? In this talk we'll analyze our successful effort,
the Boston Python Workshop, which brought over 200 women into Boston's
Python community this year. We'll talk about lessons learned running the
workshop, the dramatic effect it has had on the local user group, and
how to run a workshop in your city.&lt;/p&gt;
</summary></entry><entry><title>Web scraping: Reliably and efficiently pull data from pages that don't expect it</title><link href="https://pyvideo.org/pycon-us-2012/web-scraping-reliably-and-efficiently-pull-data.html" rel="alternate"></link><published>2012-03-07T00:00:00+00:00</published><updated>2012-03-07T00:00:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:pyvideo.org,2012-03-07:pycon-us-2012/web-scraping-reliably-and-efficiently-pull-data.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Exciting information is trapped in web pages and behind HTML forms. In
this tutorial, you'll learn how to parse those pages and when to apply
advanced techniques that make scraping faster and more stable. We'll
cover parallel downloading with Twisted, gevent, and others; analyzing
sites behind SSL; driving JavaScript-y sites with Selenium; and evading
common anti-scraping techniques.&lt;/p&gt;
</summary></entry><entry><title>Scaling community diversity outreach</title><link href="https://pyvideo.org/pycon-us-2013/scaling-community-diversity-outreach.html" rel="alternate"></link><published>2013-03-16T00:00:00+00:00</published><updated>2013-03-16T00:00:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:pyvideo.org,2013-03-16:pycon-us-2013/scaling-community-diversity-outreach.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In March '10, the Boston Python user group ran its first gender
diversity outreach workshop. In the time since, the group has has moved
the needle and inspired other communities to do the same. In this panel,
you will hear communities like PyStar Philly, Railsbridge Boston, and
the Chicago Python Workshop discuss their successes and difficulties
with diversity-oriented outreach.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Scrapy: it GETs the web</title><link href="https://pyvideo.org/pycon-us-2013/scrapy-it-gets-the-web.html" rel="alternate"></link><published>2013-03-15T00:00:00+00:00</published><updated>2013-03-15T00:00:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:pyvideo.org,2013-03-15:pycon-us-2013/scrapy-it-gets-the-web.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Scrapy lets you straightforwardly pull data out of the web. It helps you
retry if the site is down, extract content from pages using CSS
selectors (or XPath), and cover your code with tests. It downloads
asynchronously with high performance. You program to a simple model, and
it's good for web APIs, too.&lt;/p&gt;
&lt;p&gt;If you use requests, mechanize, or celery for HTTP, you should probably
switch to scrapy.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Going from web pages to web apps with Python</title><link href="https://pyvideo.org/pycon-us-2013/going-from-web-pages-to-web-apps-with-python.html" rel="alternate"></link><published>2013-03-13T00:00:00+00:00</published><updated>2013-03-13T00:00:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:pyvideo.org,2013-03-13:pycon-us-2013/going-from-web-pages-to-web-apps-with-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This tutorial teaches basic web development for people who have some
experience writing HTML, CSS, and front-end Javascript, but have little
or no experience building an end-to-end web application.&lt;/p&gt;
&lt;p&gt;Together we will build a basic social bookmarking application using
Django!&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Python packaging simplified, for end users, app developers</title><link href="https://pyvideo.org/pycon-us-2014/python-packaging-simplified-for-end-users-app-d.html" rel="alternate"></link><published>2014-04-13T00:00:00+00:00</published><updated>2014-04-13T00:00:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:pyvideo.org,2014-04-13:pycon-us-2014/python-packaging-simplified-for-end-users-app-d.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk covers the practical use of Python packaging tools. You'll see
how to keep your system clean as an end user excited about installing a
Python module from the web, the purpose of setup.py, how virtualenv
makes life easier (and sometimes harder), what Ubuntu/Debian tools can
offer, and how to make a complex app easier for new contributors to run.
It is heavy on stories and recommendations.&lt;/p&gt;
</summary></entry><entry><title>Turn Your Computer Into a Server</title><link href="https://pyvideo.org/pycon-us-2014/turn-your-computer-into-a-server.html" rel="alternate"></link><published>2014-04-12T00:00:00+00:00</published><updated>2014-04-12T00:00:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:pyvideo.org,2014-04-12:pycon-us-2014/turn-your-computer-into-a-server.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn how to let other people connect straight to your computer, so your
Python web apps, email services, or anything else can be seen by the
world. It starts simple, then explains when and how to use
SimpleHTTPServer, ssh tunnels, Pagekite, and IPv6. You can use these
tools for temporary connections, like sharing an in-progress demo, or
for permanent connectivity for your home server.&lt;/p&gt;
</summary></entry><entry><title>Type python, press enter. What happens?</title><link href="https://pyvideo.org/pycon-us-2015/type-python-press-enter-what-happens.html" rel="alternate"></link><published>2015-04-11T00:00:00+00:00</published><updated>2015-04-11T00:00:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:pyvideo.org,2015-04-11:pycon-us-2015/type-python-press-enter-what-happens.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk discusses how the Python interpreter starts, from the
perspective of the operating system (OS). Together, we will see the ins
&amp;amp; outs of processes: fork(), exec(), stdin, and stdout.&lt;/p&gt;
&lt;p&gt;It focuses on OS concepts and requires no background knowledge, using
analogies to Python data structures. (The talk does not discuss Python’s
own initialization, such as site.py or global variables.)&lt;/p&gt;
</summary></entry><entry><title>Getting comfortable with web security: A hands-on session</title><link href="https://pyvideo.org/pycon-us-2015/getting-comfortable-with-web-security-a-hands-on.html" rel="alternate"></link><published>2015-04-10T00:00:00+00:00</published><updated>2015-04-10T00:00:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:pyvideo.org,2015-04-10:pycon-us-2015/getting-comfortable-with-web-security-a-hands-on.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web application security can be an intimidating discipline, yet it can
be of supreme importance for the people who use the things we build.&lt;/p&gt;
&lt;p&gt;In this tutorial, you'll learn about essential topics in web security,
and you will gain hands-on practice identifying and leveraging
vulnerabilities in a Python-based web app. For each issue, we will cover
how your code can stay on the side of safety.&lt;/p&gt;
</summary></entry></feed>