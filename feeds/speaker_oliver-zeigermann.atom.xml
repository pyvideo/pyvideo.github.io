<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_oliver-zeigermann.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-09-05T00:00:00+00:00</updated><entry><title>The Magic of Neural Embeddings with TensorFlow 2</title><link href="https://pyvideo.org/euroscipy-2019/the-magic-of-neural-embeddings-with-tensorflow-2.html" rel="alternate"></link><published>2019-09-05T00:00:00+00:00</published><updated>2019-09-05T00:00:00+00:00</updated><author><name>Oliver Zeigermann</name></author><id>tag:pyvideo.org,2019-09-05:euroscipy-2019/the-magic-of-neural-embeddings-with-tensorflow-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Symbols, words, categories etc. need to be converted into numbers before
they can be processed by neural networks or used into other ML methods
like clustering or outlier detection.&lt;/p&gt;
&lt;p&gt;It is desirable to have the converted numbers represent semantics of the
encoded categories. That means, numbers close to each other indicate
similar semantics.&lt;/p&gt;
&lt;p&gt;In this session you will learn what you need to train a neural network
for such embeddings. I will bring a complete example including code that
I will share using TensorFlow 2 functional API and the Colab service.&lt;/p&gt;
&lt;p&gt;I will also share some tricks how to stabilize embeddings when either
the model changes or you get more training data.&lt;/p&gt;
&lt;p&gt;Neural Embeddings are a powerful tool of turning categorical into
numerical values. Given reasonable training data semantics present in
the categories can be preserved in the numerical representation.&lt;/p&gt;
</summary></entry><entry><title>Lightning Talks 2017-07-12</title><link href="https://pyvideo.org/scipy-2017/lightning-talks-2017-07-12.html" rel="alternate"></link><published>2017-07-12T00:00:00+00:00</published><updated>2017-07-12T00:00:00+00:00</updated><author><name>Aaron Meurer</name></author><id>tag:pyvideo.org,2017-07-12:scipy-2017/lightning-talks-2017-07-12.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks 2017-07-12&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="12%" /&gt;
&lt;col width="23%" /&gt;
&lt;col width="65%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head" rowspan="2"&gt;Start&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Speakers&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Subject&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;1:30&lt;/td&gt;
&lt;td rowspan="4"&gt;Aaron Meurer&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Doctr&lt;/strong&gt;
- We built a better tool to push from TravisCI to
GitHub Pages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;6:30&lt;/td&gt;
&lt;td rowspan="4"&gt;Daniel Chen&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;SciPy 2017 Notes&lt;/strong&gt;
- A github repo (scipy_2017_notes) of links and
tutorial information from this conference.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;7:15&lt;/td&gt;
&lt;td rowspan="4"&gt;Allen Downey&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Physical Modeling in Python&lt;/strong&gt;
- tinyurl,.com/modsimpy; writing a book and am looking
for simple models to teach students.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;8:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Oliver Zeigermann&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;How do Convolutional Neural Networks &amp;quot;See&amp;quot;&lt;/strong&gt;
- Techniques to visualize feature detection in the
Insight neural network.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;14:30&lt;/td&gt;
&lt;td rowspan="5"&gt;Sebastian Raschka&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Screenlamp&lt;/strong&gt;
- We made Hypothosis pipeline builder for experimental
biologists, with database filtering steps.  Based on
BioPandas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;20:00&lt;/td&gt;
&lt;td rowspan="4"&gt;Theodore Lindsay
and Floris van
Breugel&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;FigureFirst&lt;/strong&gt;
- Make it easy to use MatPlotLib and Inkscape to build
beautiful scientific figures.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;26:00&lt;/td&gt;
&lt;td rowspan="3"&gt;Pamela Wu&lt;/td&gt;
&lt;td rowspan="3"&gt;&lt;strong&gt;SynthPy:  Real Answers for Fake Data&lt;/strong&gt;
-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;31:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Nick Murphy&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;PlasmaPy&lt;/strong&gt;
- Beginning a community developed Python package for
plasma physics.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;34:00&lt;/td&gt;
&lt;td rowspan="5"&gt;Scott Collis&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Py-ART&lt;/strong&gt;
- Python ARM Radar Toolkit, exposing world of radar
meteorology to SciPy stack.  Taking comments on our
roadmap.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;36:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Bill Spotz&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Using Jupyter to make Citations&lt;/strong&gt;
- The journey of using Jupyter notebooks to add real
citations.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;42:15&lt;/td&gt;
&lt;td rowspan="5"&gt;Jose Felipe&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Test support in Jupyter/Ipython through cell&lt;/strong&gt;
&lt;strong&gt;magics&lt;/strong&gt;
- Starting with iPython/Unittests, make unittesting in
cells&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;47:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Scott Cole&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Burrito Data Analytics&lt;/strong&gt;
- Specialized Visualization and data collection
profiles in the quest for better burittos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Introduction to Convolutional Neural Networks using TensorFlow and Keras</title><link href="https://pyvideo.org/pydata-london-2017/introduction-to-convolutional-neural-networks-using-tensorflow-and-keras.html" rel="alternate"></link><published>2017-05-05T00:00:00+00:00</published><updated>2017-05-05T00:00:00+00:00</updated><author><name>Oliver Zeigermann</name></author><id>tag:pyvideo.org,2017-05-05:pydata-london-2017/introduction-to-convolutional-neural-networks-using-tensorflow-and-keras.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Filmed at PyData London 2017&lt;/p&gt;
&lt;p&gt;Description
Introduction to image classification using Tensorflow. I will provide a Notebook for you to try things out.&lt;/p&gt;
&lt;p&gt;Abstract
We will discuss how Convolutional Neural Networks work and how you can apply them to the task of image classification. This will be illustrated by an example using real pictures of German speed limit signs which we will process with Tensorflow and Keras as a frontend. I will provide you with a Notebook so you can follow along without installation or try out the examples later at home.&lt;/p&gt;
</summary></entry></feed>