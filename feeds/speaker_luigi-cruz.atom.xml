<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Luigi Cruz</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_luigi-cruz.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-07-08T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Real-Time Digital Signal Processing with SciPy Signal</title><link href="https://pyvideo.org/scipy-2022/real-time-digital-signal-processing-with-scipy-signal.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Luigi Cruz</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/real-time-digital-signal-processing-with-scipy-signal.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Frequency-modulated broadcast stations are ubiquitous around the world. Each station is transmitted side-by-side within a contiguous frequency band. In this talk, we discuss the process of demodulating real-world FM stations in parallel with elemental Numpy and SciPy Signal functions. Focusing on techniques, like vectorization, buffering, and frequency-domain filters, to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Frequency-modulated broadcast stations are ubiquitous around the world. Each station is transmitted side-by-side within a contiguous frequency band. In this talk, we discuss the process of demodulating real-world FM stations in parallel with elemental Numpy and SciPy Signal functions. Focusing on techniques, like vectorization, buffering, and frequency-domain filters, to make the computation more computationally efficient to achieve real-time operation. We also discuss how to apply GPU acceleration with CuPy and cuSignal.&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Coming Online: Enabling Real-Time and AI-Ready Scientific Discovery</title><link href="https://pyvideo.org/scipy-2024/coming-online-enabling-real-time-and-ai-ready-scientific-discovery.html" rel="alternate"></link><published>2024-07-08T00:00:00+00:00</published><updated>2024-07-08T00:00:00+00:00</updated><author><name>Luigi Cruz</name></author><id>tag:pyvideo.org,2024-07-08:/scipy-2024/coming-online-enabling-real-time-and-ai-ready-scientific-discovery.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From radio telescopes to proton accelerators, scientific instruments produce tremendous amounts of data at equally high rates. To handle this data deluge and to ensure the fidelity of the instruments’ observations, architects have historically written measurements to disk, enabling downstream scientists and researchers to build applications with pre-recorded files …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From radio telescopes to proton accelerators, scientific instruments produce tremendous amounts of data at equally high rates. To handle this data deluge and to ensure the fidelity of the instruments’ observations, architects have historically written measurements to disk, enabling downstream scientists and researchers to build applications with pre-recorded files. The future of scientific computing is interactive and streaming; how many Nobel Prizes are hidden on a dusty hard drive that a scientist didn’t have time or resources to analyze? In this talk, NVIDIA and the SETI institute will present their joint work in building scalable, real time, high performance, and AI ready sensor processing pipelines at the Allen Telescope Array. Our goal is to provide all scientific computing developers with the tools and tips to connect high speed sensors to GPU compute and lower the time to scientific insights.&lt;/p&gt;
</content><category term="SciPy 2024"></category></entry></feed>