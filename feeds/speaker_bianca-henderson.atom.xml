<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Bianca Henderson</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_bianca-henderson.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-04-22T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Plug life into your codebase: Making an established Python codebase pluggable</title><link href="https://pyvideo.org/pycon-us-2023/plug-life-into-your-codebase-making-an-established-python-codebase-pluggable.html" rel="alternate"></link><published>2023-04-22T00:00:00+00:00</published><updated>2023-04-22T00:00:00+00:00</updated><author><name>Bianca Henderson</name></author><id>tag:pyvideo.org,2023-04-22:/pycon-us-2023/plug-life-into-your-codebase-making-an-established-python-codebase-pluggable.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You will learn about the
&lt;a class="reference external" href="https://pluggy.readthedocs.io/en/stable/index.html"&gt;pluggy&lt;/a&gt; Python
framework and how it can be used to make your codebase plugin-friendly.
As a real-life example, you will also learn about how the 10 year old
conda codebase has recently gotten new life injected into it via a
plugin API.&lt;/p&gt;
&lt;p&gt;DETAILED ABSTRACT …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You will learn about the
&lt;a class="reference external" href="https://pluggy.readthedocs.io/en/stable/index.html"&gt;pluggy&lt;/a&gt; Python
framework and how it can be used to make your codebase plugin-friendly.
As a real-life example, you will also learn about how the 10 year old
conda codebase has recently gotten new life injected into it via a
plugin API.&lt;/p&gt;
&lt;p&gt;DETAILED ABSTRACT&lt;/p&gt;
&lt;p&gt;&lt;em&gt;What is a plugin?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A “plugin” is a customization or extra feature that is compatible with
and discoverable by a particular piece of software. It is not part of
the default codebase nor is it necessarily distributed as a default part
of the software itself.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;What is pluggy and how can it be used?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://pluggy.readthedocs.io/en/stable/index.html"&gt;pluggy&lt;/a&gt;
Python framework (used by other projects such as
&lt;a class="reference external" href="https://docs.pytest.org/en/7.1.x/contents.html"&gt;pytest&lt;/a&gt;,
&lt;a class="reference external" href="https://tox.wiki/en/latest/"&gt;tox&lt;/a&gt;, and
&lt;a class="reference external" href="https://devpi.net/docs/devpi/devpi/latest/+d/userman/devpi_indices.html"&gt;devpi&lt;/a&gt;)
is a great tool for incorporating a new plugin system. It provides both
developers and software users with the ability to extend or modify the
behavior of a Python program by enabling function hooking so that you
can build pluggable systems with minimal fuss.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A real world example: Conda&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;How did conda incorporate a new plugin system for new features and
refactors? Because of how pluggy works, the conda team’s developers
created plugins simply by defining “hooks” and registering the custom
plugins under the “conda” entry point namespace.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Conclusion: What other exciting things can be created with plugins?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Functionalities such as: - Authentication and authorization - Different
storage backends (e.g., S3 buckets, etc.) - Development environment
integrations (e.g., different shells) - Programming language support -
Code editor integrations …and more are all possible to implement via a
plugin system!&lt;/p&gt;
</content><category term="PyCon US 2023"></category></entry><entry><title>Publishing your Python project, the conda way</title><link href="https://pyvideo.org/pycon-us-2023/publishing-your-python-project-the-conda-way.html" rel="alternate"></link><published>2023-04-20T00:00:00+00:00</published><updated>2023-04-20T00:00:00+00:00</updated><author><name>Dave Clements</name></author><id>tag:pyvideo.org,2023-04-20:/pycon-us-2023/publishing-your-python-project-the-conda-way.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Conda is an open source, language agnostic package and environment
management system for Linux, macOS, and Windows. The conda ecosystem,
including the &lt;a class="reference external" href="https://conda-forge.org/"&gt;conda-forge&lt;/a&gt; package
repository, is widely used to install, run and update packages and their
dependencies.&lt;/p&gt;
&lt;p&gt;In this tutorial you will learn how to create a full-fledged and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Conda is an open source, language agnostic package and environment
management system for Linux, macOS, and Windows. The conda ecosystem,
including the &lt;a class="reference external" href="https://conda-forge.org/"&gt;conda-forge&lt;/a&gt; package
repository, is widely used to install, run and update packages and their
dependencies.&lt;/p&gt;
&lt;p&gt;In this tutorial you will learn how to create a full-fledged and easy to
install Python software package using conda. We will start by
introducing software packaging and packaging concepts (package
dependencies, open source licensing, ...), and an introduction to the
conda ecosystem and how conda implements software packaging.&lt;/p&gt;
&lt;p&gt;Most of our time will be spent doing a hands-on walk through of how to
prepare a Python software package for conda, and then how to submit that
package to the conda-forge, a widely used community driven package
repository.&lt;/p&gt;
&lt;p&gt;The workshop is a hands-on workshop, where participants use their own
laptops to prepare a full-fledged Python software package that is
submission-ready for the conda-forge package repository. &lt;strong&gt;Participants
need to bring a WiFi enabled laptop with a web browser, a command line
interface, a text editor program, and git and/or a GitHub client already
installed.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Workshop participants will gain a basic understanding of software
packaging, and how to prepare and publish their packages in the conda
ecosystem.&lt;/em&gt;&lt;/p&gt;
</content><category term="PyCon US 2023"></category></entry></feed>