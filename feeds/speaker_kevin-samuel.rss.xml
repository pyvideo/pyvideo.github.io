<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 02 Nov 2019 00:00:00 +0000</lastBuildDate><item><title>Le saviez-vous ?</title><link>https://pyvideo.org/pycon-fr-2019/le-saviez-vous.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Saviez-vous que Python avait une variable magique &lt;cite&gt;__debug__&lt;/cite&gt; ? Que &lt;cite&gt;functools.partial()&lt;/cite&gt; pouvait remplacer de nombreuses lambdas ? Que vous pouviez décompresser un zip dans un faux fichier en mémoire avec &lt;cite&gt;io.ByteIO&lt;/cite&gt; ? Que &lt;cite&gt;PYTHONSTARTUP&lt;/cite&gt; rendait votre shell plus beau et musclé ?&lt;/p&gt;
&lt;p&gt;À moins d'avoir lu tout doc.python.org, cette petite heure va vous faire pétiller de découvertes !&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Samuel</dc:creator><pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-02:pycon-fr-2019/le-saviez-vous.html</guid></item><item><title>Sculptez une fonction</title><link>https://pyvideo.org/pycon-fr-2018/sculptez-une-fonction.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;def afficher(liste):&lt;/p&gt;
&lt;p&gt;for texte in liste:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
print(texte)
&lt;/pre&gt;
&lt;p&gt;Une fonction simple.&lt;/p&gt;
&lt;p&gt;Mais dans cette présentation en live coding mélangeant bonnes pratiques
et artisanat, elle va vite prendre du galon.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Samuel</dc:creator><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-06:pycon-fr-2018/sculptez-une-fonction.html</guid></item><item><title>La philosophie de l'itération</title><link>https://pyvideo.org/pycon-fr-2017/la-philosophie-de-literation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quel est le point commun entre sorted, itertools.repeat et l'unpacking ? Quels traits du canard se cachent derrière un fichier, un dictionnaire et un générateur ? Dans le design de Python, rien n'a a été laissé au hasard, et dès qu'on s'initie à la philosophie de l'itération, on ne code plus jamais de la même façon.&lt;/p&gt;
&lt;p&gt;Oh, vous connaissez sans aucun doute la boucle for... Mais vous ne l'aviez jamais vue ainsi !&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Samuel</dc:creator><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-fr-2017/la-philosophie-de-literation.html</guid></item></channel></rss>