<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pyohio-2018.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-07-29T00:00:00+00:00</updated><entry><title>A Son, a Father, and a Computer - How I'm Using Tech to Ease the Suffering of my Dying Father</title><link href="https://pyvideo.org/pyohio-2018/a-son-a-father-and-a-computer-how-im-using-tech-to-ease-the-suffering-of-my-dying-father.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Greg Svoboda</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/a-son-a-father-and-a-computer-how-im-using-tech-to-ease-the-suffering-of-my-dying-father.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;My father is dying. He has ALS (Amyotrophic Lateral Sclerosis), of which
there is no cure. Feeling powerless in the face of disease, I set out to
do what I could: Build tech to ease his suffering, to help him feel more
connected with his loved ones, and to share what I'm building for free.
This is my story.&lt;/p&gt;
</summary></entry><entry><title>An Intuitive Grasp of RegEx’s in Python</title><link href="https://pyvideo.org/pyohio-2018/an-intuitive-grasp-of-regexs-in-python.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Tom Fetherston</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/an-intuitive-grasp-of-regexs-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Regular expressions are used to define search patterns. Python provides
regular expressions via the built in ‘re’ module, but they are hard to
read, write, and understand. This talk will give you two tools conquer
regex’s, a mental model, (demonstrated with props), of how they work,
and a mini- language, “Simple Regex Language”, to create readable
regex’s that easily translate into Python regex's.&lt;/p&gt;
</summary></entry><entry><title>Auditing Your Site for Accessibility: Now What?</title><link href="https://pyvideo.org/pyohio-2018/auditing-your-site-for-accessibility-now-what.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Kat Passen</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/auditing-your-site-for-accessibility-now-what.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web accessibility is important - about 1 in 5 people in the United
States have some kind of disability, and not including them limits your
reach. But once you've heard about the basics, how do you get started?
In this talk, I'll walk you through the process of finding issues in
your site, and discuss processes to fix them.&lt;/p&gt;
</summary></entry><entry><title>Bit Splotches: Dot Matrix Printing with Python</title><link href="https://pyvideo.org/pyohio-2018/bit-splotches-dot-matrix-printing-with-python.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Thomas Winningham</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/bit-splotches-dot-matrix-printing-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Earlier this year, in the spring of 2018, I bought a printer made in the
late 80's in the parking lot of a Rax Roast Beef restaurant for $20.
This started a nostalgic journey assisted by NumPy matrix slices and a
can of WD-40. This talk will cover how I used Python to overcome three
decades of history to get it printing again.&lt;/p&gt;
</summary></entry><entry><title>Build GUIs with Python and Glade</title><link href="https://pyvideo.org/pyohio-2018/build-guis-with-python-and-glade.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Terry Howald</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/build-guis-with-python-and-glade.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a great asset to have in a developer's toolkit of languages.
Although considered a scripting language, Python can create graphical
user interfaces (GUIs) for your applications. GUI controls can be laid
out programmatically or organized using a rapid application development
(RAD) tool such as Glade. Come see how to build GUIs with Python and
Glade.&lt;/p&gt;
</summary></entry><entry><title>Community - From the Inside Out</title><link href="https://pyvideo.org/pyohio-2018/community-from-the-inside-out.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Yarko Tymciurak</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/community-from-the-inside-out.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;em&gt;I came for the language, but I stayed for the Community&lt;/em&gt; --Brett
Cannon, Pycon 2014 Why? What draws us to community? What makes a great
Community? How do we contribute? I'll share some insights, some science,
and some surprisingly broad principles. I'll share what contributes,
what parts are similar to coding practices, and some ways you can
contribute to a great Community feeling.&lt;/p&gt;
</summary></entry><entry><title>Containers Without the Magic</title><link href="https://pyvideo.org/pyohio-2018/containers-without-the-magic.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Vince Salvino</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/containers-without-the-magic.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you've ever seen a talk on containers or Docker, it usually goes
something like this: A &amp;quot;hello world&amp;quot; app is deployed and massively
scaled up using some kind of magic framework or API. Nothing short of a
magic trick, we usually feel impressed but have no idea what just
happened. This talk is an intro to containers as explained by a Python
dev for Python devs, without the magic tricks.&lt;/p&gt;
</summary></entry><entry><title>Creating an IoT Baseball Scoreboard with Python</title><link href="https://pyvideo.org/pyohio-2018/creating-an-iot-baseball-scoreboard-with-python.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Christian Wyglendowski</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/creating-an-iot-baseball-scoreboard-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk covers the intersection of hardware, software, peanuts and
cracker jacks. I'll share how I built an IoT baseball scoreboard using
readily available hardware and software written in Python. I hope anyone
who attends this talk will be entertained, learn some new things and
leave feeling empowered to make their own IoT (field of) dreams come
true.&lt;/p&gt;
</summary></entry><entry><title>CSS as a Service: Maintaining Style</title><link href="https://pyvideo.org/pyohio-2018/css-as-a-service-maintaining-style.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Shay Howe</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/css-as-a-service-maintaining-style.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We often build multiple websites and applications that share the same
styles across multiple code bases (style guides/pattern libraries).
Maintaining these styles becomes quite a task, and causes increasing
frustration overtime. Fortunately it doesn’t have to be this way, and in
this talk for designers and engineers, we’ll discuss how.&lt;/p&gt;
</summary></entry><entry><title>Distributed Software (with Python)</title><link href="https://pyvideo.org/pyohio-2018/distributed-software-with-python.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Alexandru Barbur</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/distributed-software-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A whirlwind tour of several aspects of distributed software design with
examples and use cases tailored to Python development. Topics include
code layout, serialization, networking, and more.&lt;/p&gt;
</summary></entry><entry><title>Duck Typing Is For The Birds</title><link href="https://pyvideo.org/pyohio-2018/duck-typing-is-for-the-birds.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Brad Hurley</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/duck-typing-is-for-the-birds.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is intended to be an introduction to implementing static
typing into your python code. I will present information on how to
implement static typing into new and existing code bases. Talk about the
reasons why someone would want to implement static types and why I was
against it only one year ago.&lt;/p&gt;
</summary></entry><entry><title>How I Learned to Code with My Dad</title><link href="https://pyvideo.org/pyohio-2018/how-i-learned-to-code-with-my-dad.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Alexander Preston</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/how-i-learned-to-code-with-my-dad.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I’m nine years old, and I want to be a video game developer. I learned
about coding by watching my dad and asking questions. To me coding is
like a “sport” and I think lots of kids would like to code if they had a
chance to learn and build things. I’d like to tell you how I got
started, and show some of the projects I’ve built. Then you can have
ideas on how to help other kids get started.&lt;/p&gt;
</summary></entry><entry><title>Now is better than Never: What the Zen of Python can teach us about Data Ethics</title><link href="https://pyvideo.org/pyohio-2018/now-is-better-than-never-what-the-zen-of-python-can-teach-us-about-data-ethics.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Lorena Mesa</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/now-is-better-than-never-what-the-zen-of-python-can-teach-us-about-data-ethics.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We Pythonistas welcome newcomers with the wisdom of Tim Peter's &amp;quot;import
this&amp;quot;. The Zen of Python gives us general aphorisms on how to write
Python and how to be a good Pythonista by offering loose guidelines that
promotes discussion. What lessons can it teach us about Data Ethics? As
data practitioners Now is Better than Never to define what our community
will and won't do as it comes to data.&lt;/p&gt;
</summary></entry><entry><title>Pandas on Jupyter: Improving Your Data Analysis Workflow</title><link href="https://pyvideo.org/pyohio-2018/pandas-on-jupyter-improving-your-data-analysis-workflow.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Nick Macro</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/pandas-on-jupyter-improving-your-data-analysis-workflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python, and more specifically, Jupyter Notebooks enable data analysis
workflows to be reproducible without very much overhead. This talk will
discuss how to use Jupyter Notebooks and the python ecosystem to
incrementally improve the reproducibility, efficiency, and depth of your
existing analysis workflow.&lt;/p&gt;
</summary></entry><entry><title>Penetration Testing The Dev Interview: Attacks to Ace Interviews and Defenses to Build Better Teams</title><link href="https://pyvideo.org/pyohio-2018/penetration-testing-the-dev-interview-attacks-to-ace-interviews-and-defenses-to-build-better-teams.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Wes Winham</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/penetration-testing-the-dev-interview-attacks-to-ace-interviews-and-defenses-to-build-better-teams.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The developer hiring process is vulnerable. Let’s attack it! We’ll draw
on both the computer security penetration testing toolkit and from
lessons learned the hard way across my decade of startup hiring. We'll
break down the typical developer interview process. Then, we'll use the
lens of social engineering and cognitive bias to identify specific
tactics for acing interviews.&lt;/p&gt;
</summary></entry><entry><title>Python in Serverless Architectures</title><link href="https://pyvideo.org/pyohio-2018/python-in-serverless-architectures.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Daniel Lindeman</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/python-in-serverless-architectures.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless architectures are all the rage right now, but why? The cost
savings? The developer story? Because it's shiny and new? In this talk I
will start with a basic Flask App and show the process of migrating to a
serverless architecture on AWS using the Serverless framework. Along the
way, we'll also highlight some of the tradeoffs developers make when
choosing a serverless architecture.&lt;/p&gt;
</summary></entry><entry><title>Solving an NP-Hard Problem for Fun and Profit</title><link href="https://pyvideo.org/pyohio-2018/solving-an-np-hard-problem-for-fun-and-profit.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Raymond Chandler III</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/solving-an-np-hard-problem-for-fun-and-profit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You've just been given a task by your client. The problem seems simple
at first, but after some research you find out that your problem is not
just hard, it's NP-Hard! At first, a solution appears impossible but
you're not to be stopped! You're a programmer! You got this! You have
the Python! But... now what? How do you solve it?&lt;/p&gt;
</summary></entry><entry><title>Sunday Lightning Talks</title><link href="https://pyvideo.org/pyohio-2018/sunday-lightning-talks.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Dave Forgac</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/sunday-lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dave Forgac&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pyohio.org/2018/schedule/presentation/64/"&gt;https://pyohio.org/2018/schedule/presentation/64/&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Extending Python w/ C/C++ - Devyn Spillane&lt;/li&gt;
&lt;li&gt;Even More Significant Whitespace - Tom Fetherston&lt;/li&gt;
&lt;li&gt;Don't Hire Rockstars, Train Idols - Kojo Idrissa&lt;/li&gt;
&lt;li&gt;I Want a Descriptor in my Dataclass - Rick Teachey&lt;/li&gt;
&lt;li&gt;Saving An Animation in Matplotlib - Brandon Rhodes&lt;/li&gt;
&lt;li&gt;fuzzywuzzy String Matching - Ann Elliott&lt;/li&gt;
&lt;li&gt;PPB: 15 Lines to Takeoff - Piper Thunstrom&lt;/li&gt;
&lt;li&gt;Get Setup with setup.cfg - Andrew Kubera&lt;/li&gt;
&lt;li&gt;Wagtail – Vince Salvino&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Sunday Welcome</title><link href="https://pyvideo.org/pyohio-2018/sunday-welcome.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Dave Forgac</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/sunday-welcome.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dave Forgac&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pyohio.org/2018/schedule/presentation/62/"&gt;https://pyohio.org/2018/schedule/presentation/62/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Information about Sunday's events.&lt;/p&gt;
</summary></entry><entry><title>Useful Python Libraries for Network Engineers</title><link href="https://pyvideo.org/pyohio-2018/useful-python-libraries-for-network-engineers.html" rel="alternate"></link><published>2018-07-29T00:00:00+00:00</published><updated>2018-07-29T00:00:00+00:00</updated><author><name>Hank Preston</name></author><id>tag:pyvideo.org,2018-07-29:pyohio-2018/useful-python-libraries-for-network-engineers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has quickly become THE language for network automation and
programmability due to it’s combined simplicity and power. If you are a
network engineer looking to get started with automation and Python, it
can be tough to now where to start. This session proposes the modules
and libraries every engineer should have in their tool bag.&lt;/p&gt;
</summary></entry><entry><title>A Beginner's Guide to Tackling Recursion</title><link href="https://pyvideo.org/pyohio-2018/a-beginners-guide-to-tackling-recursion.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Al Sweigart</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/a-beginners-guide-to-tackling-recursion.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Between unintelligible algorithms and beautiful fractal artwork,
recursion has an intimidating and even mystical reputation. But the
underlying ideas behind it are simple. In this tutorial we get a solid
foundation of recursive code, and run through several examples in the
interactive shell. If you've ever said or thought the words &amp;quot;recursion
is confusing&amp;quot;, this tutorial is for you.&lt;/p&gt;
</summary></entry><entry><title>An Only One Step Ahead Guide for Machine Learning Projects</title><link href="https://pyvideo.org/pyohio-2018/an-only-one-step-ahead-guide-for-machine-learning-projects.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Chang Hsin Lee</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/an-only-one-step-ahead-guide-for-machine-learning-projects.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a lot of hype around machine learning, but completing a project
at work seems to be much harder than what online tutorials had
advertised. In this talk, I will provide a few tips for different stages
of a machine learning project like recognizing pitfalls, that I wished I
knew when first navigating through my projects as a junior in the field.&lt;/p&gt;
</summary></entry><entry><title>Automated Regression Testing with Splinter and Jupyter</title><link href="https://pyvideo.org/pyohio-2018/automated-regression-testing-with-splinter-and-jupyter.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Jace Browning</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/automated-regression-testing-with-splinter-and-jupyter.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So you wrote a bunch of great unit tests but your site is still broken?
Maybe it’s time to start investing in a suite of end-to-end regression
tests. In this talk we'll explore practical examples of developing
automated tests using Selenium (via Splinter) and exploratory testing
using Jupyter sessions.&lt;/p&gt;
</summary></entry><entry><title>Building a Twitter Metadata Scraper: Learnings from Working with a New Twitter API</title><link href="https://pyvideo.org/pyohio-2018/building-a-twitter-metadata-scraper-learnings-from-working-with-a-new-twitter-api.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Elizabeth Wehner</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/building-a-twitter-metadata-scraper-learnings-from-working-with-a-new-twitter-api.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;BuzzFeed identified a need for Twitter to scrape our metadata more
frequently, and worked with Twitter to build a new API that is currently
in beta testing. In this talk I will go through the process of building
a &amp;quot;Twitter Scraper&amp;quot; that accesses this new API. I will highlight various
challenges encountered along the way, and show how I ultimately solved
these problems.&lt;/p&gt;
</summary></entry><entry><title>Conversational Interfaces for Chatbots and Artificial Intelligence</title><link href="https://pyvideo.org/pyohio-2018/conversational-interfaces-for-chatbots-and-artificial-intelligence.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Don Holloway</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/conversational-interfaces-for-chatbots-and-artificial-intelligence.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Attendees will see concepts for conversational interfaces used to create
chatbots, and python libraries and code used to create them.
Conversational interfaces are increasingly becoming a preferred way for
users to engage with information, offering a more personalized user
experience. The ability to understand user’s intent and take action
makes it a good match for AI.&lt;/p&gt;
</summary></entry><entry><title>Customizing Sphinx: Simple, Normal, and Hard</title><link href="https://pyvideo.org/pyohio-2018/customizing-sphinx-simple-normal-and-hard.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Paul Everitt</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/customizing-sphinx-simple-normal-and-hard.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many Python projects use Sphinx for documentation, so much so that
Sphinx is like Python’s secret weapon. It’s a powerful, mature system
for generating static content -- not just docs, but blogs and regular
websites. Sphinx can also be customized and extended in various ways,
and here the trip gets wild and wooly. This talk takes a look at themes
and extensions.&lt;/p&gt;
</summary></entry><entry><title>Easier Classes: Python Classes Without All the Cruft</title><link href="https://pyvideo.org/pyohio-2018/easier-classes-python-classes-without-all-the-cruft.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Trey Hunner</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/easier-classes-python-classes-without-all-the-cruft.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we'll take a look at how to cut down on the boilerplate
required in making a well-behaved Python class. We'll first see how to
make classes with proper string representations, comparability,
iterability, and immutability. Then we'll dive into helper tools
built-in to the standard library and available in third-party libraries.&lt;/p&gt;
</summary></entry><entry><title>Egad! How Do We Start Writing (Better) Tests?</title><link href="https://pyvideo.org/pyohio-2018/egad-how-do-we-start-writing-better-tests.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Andrew Knight</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/egad-how-do-we-start-writing-better-tests.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Some have never automated tests and can’t check themselves before they
wreck themselves. Others have 1000s of tests that are flaky,
duplicative, and slow. Wa-do-we-do? GOOD testing is hard but not
impossible. Start with proven advice from this talk!&lt;/p&gt;
</summary></entry><entry><title>From Support to Engineering and Beyond: What to Take with You, and What to Leave Behind</title><link href="https://pyvideo.org/pyohio-2018/from-support-to-engineering-and-beyond-what-to-take-with-you-and-what-to-leave-behind.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Adrienne Lowe</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/from-support-to-engineering-and-beyond-what-to-take-with-you-and-what-to-leave-behind.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Saturday Keynote&lt;/p&gt;
</summary></entry><entry><title>Generating Music with Python and FoxDot</title><link href="https://pyvideo.org/pyohio-2018/generating-music-with-python-and-foxdot.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Jessica Garson</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/generating-music-with-python-and-foxdot.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn how to make music with Python and FoxDot. We’ll go through how to
make a song in this live coded adventure. This talk is suited well for
all audiences.&lt;/p&gt;
</summary></entry><entry><title>Go with the Flow: Automating Your Workflows with Airflow</title><link href="https://pyvideo.org/pyohio-2018/go-with-the-flow-automating-your-workflows-with-airflow.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Leo Guinan</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/go-with-the-flow-automating-your-workflows-with-airflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all have workflows in our daily lives. From simple ones in our
personal lives, to terribly complex ones in our daily work, we could all
benefit from automating these workflows. Airflow is the mechanism with
which we can do this. In this talk, we will explore what Airflow is, and
how we can leverage it to automate some of the tedium out of our daily
lives.&lt;/p&gt;
</summary></entry><entry><title>Going Passwordless</title><link href="https://pyvideo.org/pyohio-2018/going-passwordless.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Jon Banafato</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/going-passwordless.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Passwords suck. They're often weak and reused, making them one of the
least secure parts of web applications. This is such a problem that
entire industries of password managers and two-factor authentication
products have popped up as extra layers of security. To really address
this issue and make our users and products more secure, we need a more
fundamental change.&lt;/p&gt;
</summary></entry><entry><title>Guide to Software Engineering for Visually Impaired</title><link href="https://pyvideo.org/pyohio-2018/guide-to-software-engineering-for-visually-impaired.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Abrar Sheikh</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/guide-to-software-engineering-for-visually-impaired.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will look into a day in the life of a Software Engineer with limited
vision to Understand their difficulties at work and how they can
overcome those difficulties to become successful in their role.&lt;/p&gt;
</summary></entry><entry><title>How to Build a Plan to Migrate to Python 3</title><link href="https://pyvideo.org/pyohio-2018/how-to-build-a-plan-to-migrate-to-python-3.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Philip Semanchuk</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/how-to-build-a-plan-to-migrate-to-python-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 2 will no longer be supported past 2020, yet many organizations
still haven't made the switch to Python 3. This talk is for anyone
facing a 2-to-3 migration that they'd like to feel more confident about.
Attendees will leave with the outline of a migration plan, some
suggested focus areas, a knowledge of helpful tools, and links to
resources they can use after the talk.&lt;/p&gt;
</summary></entry><entry><title>Inside the Cheeseshop: How Python Packaging Works</title><link href="https://pyvideo.org/pyohio-2018/inside-the-cheeseshop-how-python-packaging-works.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Dustin Ingram</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/inside-the-cheeseshop-how-python-packaging-works.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will identify the key tools one might encounter when trying to
distribute Python software, what they are used for, why they exist, and
their history (including where their weird names come from). In
addition, we'll see how they all work together, what it takes to make
them work, and what the future has in store for Python packaging.&lt;/p&gt;
</summary></entry><entry><title>Large-Scale Recommendation System with Python and Spark</title><link href="https://pyvideo.org/pyohio-2018/large-scale-recommendation-system-with-python-and-spark.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Phil Anderson</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/large-scale-recommendation-system-with-python-and-spark.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;New product discovery is an established activity within brick-and-mortar
grocery stores, but is still ripe for experimentation within an online
setting. In this talk, we discuss a customer-level product
recommendation system we developed for the Kroger Company, using Python,
Apache Spark, and Apache Airflow.&lt;/p&gt;
</summary></entry><entry><title>Natural Language Processing in Python</title><link href="https://pyvideo.org/pyohio-2018/natural-language-processing-in-python.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Alice Zhao</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/natural-language-processing-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a data scientist, we are known to crunch numbers, but what happens
when we run into text data? In this tutorial, I will walk through the
steps to turn text data into a format that a machine can understand,
share some of the most popular text analytics techniques, and showcase
several natural language processing (NLP) libraries in Python including
NLTK, TextBlob, spaCy and gensim.&lt;/p&gt;
</summary></entry><entry><title>Reproducible Environments for Reproducible Results</title><link href="https://pyvideo.org/pyohio-2018/reproducible-environments-for-reproducible-results.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Dana Walker</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/reproducible-environments-for-reproducible-results.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Trustworthy results require reproducibility. Publishing code is
necessary but not sufficient for complete reproducibility. Complex
programs often depend on external code. This talk will introduce you to
several ways to manage your software dependencies and data to pass
reproducible software environments to peer-reviewers.&lt;/p&gt;
</summary></entry><entry><title>Saturday Lightning Talks</title><link href="https://pyvideo.org/pyohio-2018/saturday-lightning-talks.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Aly Sivji</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/saturday-lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dave Forgac&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pyohio.org/2018/schedule/presentation/63/"&gt;https://pyohio.org/2018/schedule/presentation/63/&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Lock Your Mock - Aly Sivji&lt;/li&gt;
&lt;li&gt;Abusing Type Annotations - Zach Mitchell&lt;/li&gt;
&lt;li&gt;How does U2F / Yubikeys work? - LVH&lt;/li&gt;
&lt;li&gt;Blast Asteroids with Arcade - Paul Everitt&lt;/li&gt;
&lt;li&gt;Chocolate in PB - Dan Lindeman&lt;/li&gt;
&lt;li&gt;Good Hacker / Bad Hacker - Dustin Ingram&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Saturday Welcome</title><link href="https://pyvideo.org/pyohio-2018/saturday-welcome.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Dave Forgac</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/saturday-welcome.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dave Forgac&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pyohio.org/2018/schedule/presentation/61/"&gt;https://pyohio.org/2018/schedule/presentation/61/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Welcome and overall event information.&lt;/p&gt;
</summary></entry><entry><title>Smart and Simple Data Driven Hydroponic Sensing Applications Using Python, Flask &amp; Raspberry Pi</title><link href="https://pyvideo.org/pyohio-2018/smart-and-simple-data-driven-hydroponic-sensing-applications-using-python-flask-raspberry-pi.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Bethany Poulin</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/smart-and-simple-data-driven-hydroponic-sensing-applications-using-python-flask-raspberry-pi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The brilliantly conceived and executed Raspberry Pi platform is a
wonderful tool for developing simple, cost effective, self-contained
sensor-driven applications using Python, Flask and a little bit of
ingenuity. This presentation is aimed at beginning to mid-level hobbyist
with modest python skills or serious python programmers interested in
hydroponics sensors.&lt;/p&gt;
</summary></entry><entry><title>Software Engineering For Beginners: A Jr. Developer's Guide</title><link href="https://pyvideo.org/pyohio-2018/software-engineering-for-beginners-a-jr-developers-guide.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Kojo Idrissa</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/software-engineering-for-beginners-a-jr-developers-guide.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaking English alone won't make you a journalist or author. The same
is true of Python and becoming a professional developer or open source
contributor. Many people are 'learning to code' to switch careers, but
overlooking the other skills they'll need. New developers will learn the
when, why, and how of those other skills, while experienced devs can use
this as a roadmap for mentoring.&lt;/p&gt;
</summary></entry><entry><title>The Modern Command-Line Tool Stack: Pipenv, Click, and Friends</title><link href="https://pyvideo.org/pyohio-2018/the-modern-command-line-tool-stack-pipenv-click-and-friends.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Matt Behrens</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/the-modern-command-line-tool-stack-pipenv-click-and-friends.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Until recently, I was still writing Python command-line tools like it's
the mid-00s. In this talk, you'll learn about the tools I found to
modernize development, installation, and isolation as well as the
libraries that make building CLIs and working with the OS easy. We'll
cover Pipenv and how best to use it with setuptools, as well as Click
and other libraries useful for this task.&lt;/p&gt;
</summary></entry><entry><title>You Can Do Deep Learning!</title><link href="https://pyvideo.org/pyohio-2018/you-can-do-deep-learning.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>William Horton</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/you-can-do-deep-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When I started learning web dev, I dove into building my first Rails
app. I didn’t know how it all worked, but after hours of hacking I had a
blogging app running. I imagine many share a similar learning
experience. Similarly, you don’t need a PhD to do deep learning, you can
get started with Python skills and open-source frameworks. It can be fun
and rewarding, and inspire you to dive deeper.&lt;/p&gt;
</summary></entry><entry><title>You Don't Need That!</title><link href="https://pyvideo.org/pyohio-2018/you-dont-need-that.html" rel="alternate"></link><published>2018-07-28T00:00:00+00:00</published><updated>2018-07-28T00:00:00+00:00</updated><author><name>Christopher Neugebauer</name></author><id>tag:pyvideo.org,2018-07-28:pyohio-2018/you-dont-need-that.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Not every design pattern makes sense in Python. This talk builds up
design patterns commonly used in enterprise languages, and shows the
features in Python that make these approaches unnecessary.&lt;/p&gt;
</summary></entry></feed>