<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Looping</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_looping.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2020-10-13T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Looping over multiple iterables at once</title><link href="https://pyvideo.org/python-morsels/looping-over-multiple-iterables.html" rel="alternate"></link><published>2020-10-13T00:00:00+00:00</published><updated>2020-10-13T00:00:00+00:00</updated><author><name>Trey Hunner</name></author><id>tag:pyvideo.org,2020-10-13:/python-morsels/looping-over-multiple-iterables.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Need to loop over two (or more) iterables at the same time? Don't use range. Don't use enumerate. Use the built-in zip function. As you loop over zip you'll get the n-th item from each iterable.&lt;/p&gt;
</content><category term="Python Morsels"></category><category term="Looping"></category></entry><entry><title>Looping with indexes</title><link href="https://pyvideo.org/python-morsels/looping-with-indexes.html" rel="alternate"></link><published>2020-10-08T00:00:00+00:00</published><updated>2020-10-08T00:00:00+00:00</updated><author><name>Trey Hunner</name></author><id>tag:pyvideo.org,2020-10-08:/python-morsels/looping-with-indexes.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python's built-in enumerate function is the preferred way to loop while counting upward at the same time. You'll almost always see tuple unpacking used whenever enumerate is used.&lt;/p&gt;
</content><category term="Python Morsels"></category><category term="Looping"></category></entry><entry><title>What is an iterable?</title><link href="https://pyvideo.org/python-morsels/iterable.html" rel="alternate"></link><published>2020-10-06T00:00:00+00:00</published><updated>2020-10-06T00:00:00+00:00</updated><author><name>Trey Hunner</name></author><id>tag:pyvideo.org,2020-10-06:/python-morsels/iterable.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An iterable is anything you're able to iterate over (iter-&lt;em&gt;able&lt;/em&gt;). Iterables can be looped over and anything you can loop over is an iterable. Not every iterable is indexable or has a length.&lt;/p&gt;
</content><category term="Python Morsels"></category><category term="Looping"></category></entry><entry><title>Writing a for loop</title><link href="https://pyvideo.org/python-morsels/writing-a-for-loop.html" rel="alternate"></link><published>2020-09-29T00:00:00+00:00</published><updated>2020-09-29T00:00:00+00:00</updated><author><name>Trey Hunner</name></author><id>tag:pyvideo.org,2020-09-29:/python-morsels/writing-a-for-loop.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Unlike traditional C-style for loops, Python's for loops don't have indexes. It's considered a best practice to avoid reaching for indexes unless you really need them.&lt;/p&gt;
</content><category term="Python Morsels"></category><category term="Looping"></category></entry></feed>