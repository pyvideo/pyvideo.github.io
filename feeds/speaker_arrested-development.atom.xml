<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_arrested-development.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-08-08T00:00:00+00:00</updated><entry><title>surviving the awkward adolescence of a microservices-based application</title><link href="https://pyvideo.org/europython-2015/surviving-the-awkward-adolescence-of-a-microservices-based-application.html" rel="alternate"></link><published>2015-08-08T00:00:00+00:00</published><updated>2015-08-08T00:00:00+00:00</updated><author><name>Arrested Development</name></author><id>tag:pyvideo.org,2015-08-08:europython-2015/surviving-the-awkward-adolescence-of-a-microservices-based-application.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scott Triglia - Arrested Development - surviving the awkward adolescence of a microservices-based application
[EuroPython 2015]
[24 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;The potential upside of microservices is significant and exciting. So
much so that Yelp's Transaction Platform committed from the start to
an architecture of small, cooperative microservices. This talk
explores the inevitable complications that arise for Python developers
in as the services grow larger and stretch both their own architecture
and the developers responsible for them. Come hear tales of terror
(tight coupling! low test coverage!), stories which will warm your
heart (agility! strong interfaces!), and everything in between as we
follow the adventures of our plucky team.&lt;/p&gt;
&lt;p&gt;The talk will be focused on the functional, cultural, and reliability
challenges which occur as a microservices-based project evolves and
expands over time. Particular attention will be paid to where these
diverge from the utopian way microservices are often described, and to
the particular difficulties faced by Python developers trying to
implement such systems. My goal is to share with attendees some
mistakes we've made, some successful methods for growing gracefully,
and Python-specific tools/libraries which can help with these
problems.&lt;/p&gt;
&lt;p&gt;To enjoy this talk, you should be aware of the basic vocabulary and
concepts of HTTP-based services. Any additional awareness of
distributed systems (and their failure modes) will be helpful.&lt;/p&gt;
</summary></entry></feed>