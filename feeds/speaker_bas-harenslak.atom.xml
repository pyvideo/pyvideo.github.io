<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_bas-harenslak.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-07-27T00:00:00+00:00</updated><entry><title>Winning card games with 1000+ CPUs</title><link href="https://pyvideo.org/europython-2018/winning-card-games-with-1000-cpus.html" rel="alternate"></link><published>2018-07-27T00:00:00+00:00</published><updated>2018-07-27T00:00:00+00:00</updated><author><name>vincent warmerdam</name></author><id>tag:pyvideo.org,2018-07-27:europython-2018/winning-card-games-with-1000-cpus.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vincent was playing a card game against his girlfriend and he kept
loosing. So he wanted to train a bot to play on his behalf. This is our
story.&lt;/p&gt;
&lt;p&gt;We’re using AWS Lambda to get better at a card game named SushiGO. We
make a small genetic algorithm in Python that uses AWS Lambda as a
backend. The talk consists of these parts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Quick Explanation of the rules of the SushiGo Card Game&lt;/li&gt;
&lt;li&gt;Translation of real life to an algorithm&lt;/li&gt;
&lt;li&gt;Explain why this problem needs a lot of CPU&lt;/li&gt;
&lt;li&gt;Explain why AWS Lambda fits the simulation use-case&lt;/li&gt;
&lt;li&gt;How to quickly hack Concurrency in Python&lt;/li&gt;
&lt;li&gt;How to deploy lambda very quickly with chalice&lt;/li&gt;
&lt;li&gt;Experimentation Results&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk will discuss an algorithm that we’ve tried to improve in three
ways:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Applying simple maths to make the search algorithm better&lt;/li&gt;
&lt;li&gt;Throwing lots (lots!) of CPU’s against the problem by leveraging AWS
Lambda and python concurrency&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will conclude by discussing whether or not AWS Lambda is suitable for
a gridsearch/grid simulation (hint, it’s not meant for this task, but it
actually kind of works very well).&lt;/p&gt;
</summary></entry></feed>