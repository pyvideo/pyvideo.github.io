<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 13 Jul 2017 00:00:00 +0000</lastBuildDate><item><title>A journey into Git internals with Python</title><link>https://pyvideo.org/europython-2017/a-journey-into-git-internals-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Despite 12 years of history and wide popularity the workings of
Git still remain largely a mystery for many.
A lot of Git users operate it just by remembering a bunch of commands
and repeating them in a correct order.
I was one of them until I decided to dig deeper into how Git actually
works and suddenly I understood that internally Git operates by rather
simple principles and after you figure them out suddenly all those
commands start to make sense.&lt;/p&gt;
&lt;p&gt;To look into the Git's internal structure you need a programming language
to crunch the data and Python fit perfectly for this task.&lt;/p&gt;
&lt;p&gt;In this talk, I will dig into the internals of Git with Python,
that will help you better understand how Git works.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrey Syschikov</dc:creator><pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-13:europython-2017/a-journey-into-git-internals-with-python.html</guid></item><item><title>Practical usage of advanced Python constructs</title><link>https://pyvideo.org/europython-2015/practical-usage-of-advanced-python-constructs.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Andrey Syschikov - Practical usage of advanced Python constructs
[EuroPython 2015]
[24 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;Python is a language of choice for developers with wide range of
experience, for some it is a first programming language, others switch
to Python after years of experience. Python provides friendly syntax
and smooth learning curve. This sometimes leads to developers lacking
comprehension of some more advanced constructs.&lt;/p&gt;
&lt;p&gt;It happens that experienced developers jump into using Python and
sometimes miss less known Python language constructs. On the other
hands people who purposefully learned Python sometimes lack practical
ideas for how to apply those constructs.&lt;/p&gt;
&lt;p&gt;This talk will be specifically focused on the practical usages of
advanced Python constructs like iterators, generators, decorators and
context managers. Goal of the talk is to share ideas about how those
constructs can be used for practical purposes in real projects. Prior
knowledge is not required, there will be a brief introduction to every
construct being presented.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrey Syschikov</dc:creator><pubDate>Thu, 06 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-06:europython-2015/practical-usage-of-advanced-python-constructs.html</guid></item></channel></rss>