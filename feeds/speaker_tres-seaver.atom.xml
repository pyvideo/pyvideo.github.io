<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_tres-seaver.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-04-12T00:00:00+00:00</updated><entry><title>Lightweight Web Services with Pyramid</title><link href="https://pyvideo.org/pycon-ca-2012/lightweight-web-services-with-pyramid.html" rel="alternate"></link><published>2012-11-10T00:00:00+00:00</published><updated>2012-11-10T00:00:00+00:00</updated><author><name>Tres Seaver</name></author><id>tag:pyvideo.org,2012-11-10:pycon-ca-2012/lightweight-web-services-with-pyramid.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;As more and more of the web experience moves into the browser, enabling
acesss to your application's data via asynchronous HTTP calls is
increasingly more important. Pyramid is a lightweight web framework
which has several features for serviing such queries easy.&lt;/p&gt;
</summary></entry><entry><title>Evolving Your Framework Under Fire (#150)</title><link href="https://pyvideo.org/pycon-us-2010/evolving-your-framework-under-fire-150.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Tres Seaver</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/evolving-your-framework-under-fire-150.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Evolving your framework under fire&lt;/p&gt;
&lt;p&gt;Presented by Tres Seaver (Agendaless Consulting, Inc.)&lt;/p&gt;
&lt;p&gt;Writing frameworks is fun, which is why we have so many of them in the
Python web development world. Making your shiny new framework stand up
under the load of a demanding application can be painful, but can lead
to substantial improvements.&lt;/p&gt;
</summary><category term="framework"></category><category term="pycon"></category><category term="pycon2010"></category></entry><entry><title>By Your Bootstraps: Porting Your Application to Python3</title><link href="https://pyvideo.org/pycon-us-2014/by-your-bootstraps-porting-your-application-to-p.html" rel="alternate"></link><published>2014-04-12T00:00:00+00:00</published><updated>2014-04-12T00:00:00+00:00</updated><author><name>Tres Seaver</name></author><id>tag:pyvideo.org,2014-04-12:pycon-us-2014/by-your-bootstraps-porting-your-application-to-p.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk is an experience report / best practices summary, based on
work porting a very large stack to Python 3.x. The stack includes the
Zope3 component architecture, ZODB, WebOb, pyramid, other dependencies,
totalling ~180 KLOC Python + ~25 KLOC C.&lt;/p&gt;
</summary></entry></feed>