<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Cynthia Ukawu</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_cynthia-ukawu.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-07-26T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Detecting Road Conditions from Space Using PyTorch, Public Data, and Free Satellite Imagery</title><link href="https://pyvideo.org/pyohio-2025/detecting-road-conditions-from-space-using-pytorch-public-data-and-free-satellite-imagery.html" rel="alternate"></link><published>2025-07-26T00:00:00+00:00</published><updated>2025-07-26T00:00:00+00:00</updated><author><name>Cynthia Ukawu</name></author><id>tag:pyvideo.org,2025-07-26:/pyohio-2025/detecting-road-conditions-from-space-using-pytorch-public-data-and-free-satellite-imagery.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Monitoring the health of city streets and roadways is expensive,
time-consuming, and often reactive. But what if we could automate part
of that process using satellite imagery and Python?&lt;/p&gt;
&lt;p&gt;In this talk, we’ll walk through a real-world project that combines
transfer learning, PyTorch, and publicly available datasets to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Monitoring the health of city streets and roadways is expensive,
time-consuming, and often reactive. But what if we could automate part
of that process using satellite imagery and Python?&lt;/p&gt;
&lt;p&gt;In this talk, we’ll walk through a real-world project that combines
transfer learning, PyTorch, and publicly available datasets to classify
road segment conditions (good, fair, poor) from aerial imagery. You'll
learn how to work with messy real-world geospatial data, fine-tune a
deep learning model using only a small training set (~2,000 examples),
and overcome common challenges like blurry imagery, inconsistent labels,
and overfitting.&lt;/p&gt;
&lt;p&gt;This session is practical and code-driven, aimed at data scientists and
analysts working in mobility analytics, urban development, or
infrastructure who want to apply machine perception techniques in their
work. By the end, you’ll walk away with a reusable workflow for
analyzing and predicting urban infrastructure quality — all using free
tools and open data.&lt;/p&gt;
</content><category term="PyOhio 2025"></category></entry><entry><title>Advanced Tracking with Kalman Filters and Stone Soup</title><link href="https://pyvideo.org/pytexas-2024/advanced-tracking-with-kalman-filters-and-stone-soup.html" rel="alternate"></link><published>2024-04-21T00:00:00+00:00</published><updated>2024-04-21T00:00:00+00:00</updated><author><name>Cynthia Ukawu</name></author><id>tag:pyvideo.org,2024-04-21:/pytexas-2024/advanced-tracking-with-kalman-filters-and-stone-soup.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Advanced Tracking with Kalman Filters and Stone Soup&lt;/p&gt;
&lt;p&gt;Learn how to implement sophisticated tracking solutions in Python with Kalman filters and the Stone Soup framework. This demo aims to enhance your data analytics and machine learning skills by showcasing an implementation of a tracking algorithm.&lt;/p&gt;
&lt;p&gt;Speaker: Cynthia Ukawu&lt;/p&gt;
&lt;p&gt;I'm …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Advanced Tracking with Kalman Filters and Stone Soup&lt;/p&gt;
&lt;p&gt;Learn how to implement sophisticated tracking solutions in Python with Kalman filters and the Stone Soup framework. This demo aims to enhance your data analytics and machine learning skills by showcasing an implementation of a tracking algorithm.&lt;/p&gt;
&lt;p&gt;Speaker: Cynthia Ukawu&lt;/p&gt;
&lt;p&gt;I'm a backend software engineer for a tech company in Washington, DC.&lt;/p&gt;
</content><category term="PyTexas 2024"></category></entry></feed>