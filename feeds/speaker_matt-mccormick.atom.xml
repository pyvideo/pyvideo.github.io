<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_matt-mccormick.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-09-15T00:00:00+00:00</updated><entry><title>Scikit-build: A build system generator for CPython C extensions</title><link href="https://pyvideo.org/pydata-carolinas-2016/scikit-build-a-build-system-generator-for-cpython-c-extensions.html" rel="alternate"></link><published>2016-09-15T00:00:00+00:00</published><updated>2016-09-15T00:00:00+00:00</updated><author><name>Jean-Christophe Fillion-Robin</name></author><id>tag:pyvideo.org,2016-09-15:pydata-carolinas-2016/scikit-build-a-build-system-generator-for-cpython-c-extensions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we present &amp;quot;scikit-build&amp;quot;, an improved build system
generator for CPython C extensions. It provides better support for
additional compilers, build systems, cross compilation, and locating
dependencies and determining their build requirements. We also
describe how Matplotlib and SymEngine are updated to make use of
&amp;quot;scikit-build&amp;quot;&lt;/p&gt;
&lt;p&gt;Although the scientific packages NumPy, SciPy, SymEngine or Matplotlib
can be used from Python today, since they bundle C, C++ or Fortan
extensions, successfully building the associated binary wheels is
complex and prone to errors. This is a significant barrier to allow
use of these scientific packages on a broader set of platforms like
mobile, Raspberry Pi or HPC.&lt;/p&gt;
&lt;p&gt;To facilitate the build process, the scikit-build package is
fundamentally just glue between the setuptools Python module and
CMake. Currently, the package is available to perform builds in a
setup.py file. In the future, the project aims to be a build tool
option in the currently developing pyproject.toml build system
specification.&lt;/p&gt;
</summary></entry><entry><title>ITK in Biomedical Research and Commercial Applications</title><link href="https://pyvideo.org/pydata-carolinas-2016/itk-in-biomedical-research-and-commercial-applications.html" rel="alternate"></link><published>2016-09-14T00:00:00+00:00</published><updated>2016-09-14T00:00:00+00:00</updated><author><name>Matt McCormick</name></author><id>tag:pyvideo.org,2016-09-14:pydata-carolinas-2016/itk-in-biomedical-research-and-commercial-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Insight Segmentation and Registration Toolkit (www.itk.org) has
become a standard in academia and industry for scientific,
N-dimensional image analysis. In this course we present best practices
for taking advantage of ITK in your imaging research and commercial
products.&lt;/p&gt;
&lt;p&gt;The Insight Segmentation and Registration Toolkit (www.itk.org) has
become a standard in academia and industry for medical image analysis.
In recent years, the ITK developers' community has focused on
providing programming interfaces to ITK from Python and Javascript and
making ITK available via leading applications such as Slicer and
ImageJ. In this course we present best practices for taking advantage
of ITK in your imaging research and commercial products. We
demonstrate how script writing and interactive GUIs can be used to
access the algorithms in ITK and the multitude of ITK extensions that
are freely available on the web.&lt;/p&gt;
</summary></entry></feed>