<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Matt McCormick</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_matt-mccormick.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-07-08T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Scikit-build: A build system generator for CPython C extensions</title><link href="https://pyvideo.org/pydata-carolinas-2016/scikit-build-a-build-system-generator-for-cpython-c-extensions.html" rel="alternate"></link><published>2016-09-15T00:00:00+00:00</published><updated>2016-09-15T00:00:00+00:00</updated><author><name>Jean-Christophe Fillion-Robin</name></author><id>tag:pyvideo.org,2016-09-15:/pydata-carolinas-2016/scikit-build-a-build-system-generator-for-cpython-c-extensions.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we present &amp;quot;scikit-build&amp;quot;, an improved build system
generator for CPython C extensions. It provides better support for
additional compilers, build systems, cross compilation, and locating
dependencies and determining their build requirements. We also
describe how Matplotlib and SymEngine are updated to make use of
&amp;quot;scikit-build&amp;quot;&lt;/p&gt;
&lt;p&gt;Although …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we present &amp;quot;scikit-build&amp;quot;, an improved build system
generator for CPython C extensions. It provides better support for
additional compilers, build systems, cross compilation, and locating
dependencies and determining their build requirements. We also
describe how Matplotlib and SymEngine are updated to make use of
&amp;quot;scikit-build&amp;quot;&lt;/p&gt;
&lt;p&gt;Although the scientific packages NumPy, SciPy, SymEngine or Matplotlib
can be used from Python today, since they bundle C, C++ or Fortan
extensions, successfully building the associated binary wheels is
complex and prone to errors. This is a significant barrier to allow
use of these scientific packages on a broader set of platforms like
mobile, Raspberry Pi or HPC.&lt;/p&gt;
&lt;p&gt;To facilitate the build process, the scikit-build package is
fundamentally just glue between the setuptools Python module and
CMake. Currently, the package is available to perform builds in a
setup.py file. In the future, the project aims to be a build tool
option in the currently developing pyproject.toml build system
specification.&lt;/p&gt;
</content><category term="PyData Carolinas 2016"></category></entry><entry><title>ITK in Biomedical Research and Commercial Applications</title><link href="https://pyvideo.org/pydata-carolinas-2016/itk-in-biomedical-research-and-commercial-applications.html" rel="alternate"></link><published>2016-09-14T00:00:00+00:00</published><updated>2016-09-14T00:00:00+00:00</updated><author><name>Matt McCormick</name></author><id>tag:pyvideo.org,2016-09-14:/pydata-carolinas-2016/itk-in-biomedical-research-and-commercial-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Insight Segmentation and Registration Toolkit (www.itk.org) has
become a standard in academia and industry for scientific,
N-dimensional image analysis. In this course we present best practices
for taking advantage of ITK in your imaging research and commercial
products.&lt;/p&gt;
&lt;p&gt;The Insight Segmentation and Registration Toolkit (www.itk …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Insight Segmentation and Registration Toolkit (www.itk.org) has
become a standard in academia and industry for scientific,
N-dimensional image analysis. In this course we present best practices
for taking advantage of ITK in your imaging research and commercial
products.&lt;/p&gt;
&lt;p&gt;The Insight Segmentation and Registration Toolkit (www.itk.org) has
become a standard in academia and industry for medical image analysis.
In recent years, the ITK developers' community has focused on
providing programming interfaces to ITK from Python and Javascript and
making ITK available via leading applications such as Slicer and
ImageJ. In this course we present best practices for taking advantage
of ITK in your imaging research and commercial products. We
demonstrate how script writing and interactive GUIs can be used to
access the algorithms in ITK and the multitude of ITK extensions that
are freely available on the web.&lt;/p&gt;
</content><category term="PyData Carolinas 2016"></category></entry><entry><title>itkwidgets Interactive Web based 3D and 2D Spatial Visualization for Python</title><link href="https://pyvideo.org/scipy-2021/itkwidgets-interactive-web-based-3d-and-2d-spatial-visualization-for-python.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Matt McCormick</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/itkwidgets-interactive-web-based-3d-and-2d-spatial-visualization-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The itkwidgets python package integrates with the Python and Jupyter ecosystem and supports visualization of large imaging, geometry and point set datasets in 3D and 2D. We provide an overview of image volume rendering, slicing, and data probing capabilities and techniques used with these WebGL-based, interactive 3D widgets. We …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The itkwidgets python package integrates with the Python and Jupyter ecosystem and supports visualization of large imaging, geometry and point set datasets in 3D and 2D. We provide an overview of image volume rendering, slicing, and data probing capabilities and techniques used with these WebGL-based, interactive 3D widgets. We reveal new developments including integration with other ipywidgets in JupyterLab, Voilà applications.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>Building binary extensions with pybind11, scikit build, and cibuildwheel- Q&amp;A and Panel</title><link href="https://pyvideo.org/scipy-2022/building-binary-extensions-with-pybind11-scikit-build-and-cibuildwheel-qa-and-panel.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Henry Schreiner</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/building-binary-extensions-with-pybind11-scikit-build-and-cibuildwheel-qa-and-panel.html</id><content type="html"></content><category term="SciPy 2022"></category></entry><entry><title>SciPy Tools Plenary Day 1</title><link href="https://pyvideo.org/scipy-2023/scipy-tools-plenary-day-1.html" rel="alternate"></link><published>2023-07-10T00:00:00+00:00</published><updated>2023-07-10T00:00:00+00:00</updated><author><name>Thomas J. Fan</name></author><id>tag:pyvideo.org,2023-07-10:/scipy-2023/scipy-tools-plenary-day-1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SciPy is a community dedicated to the advancement of scientific computing through open source Python software for mathematics, science, and engineering. The annual SciPy Conference allows participants from all types of organizations to showcase their latest projects, learn from skilled users and developers, and collaborate on code development. SciPy …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SciPy is a community dedicated to the advancement of scientific computing through open source Python software for mathematics, science, and engineering. The annual SciPy Conference allows participants from all types of organizations to showcase their latest projects, learn from skilled users and developers, and collaborate on code development. SciPy is organized by NumFOCUS, a 501(c)(3) nonprofit organization that promotes open source scientific computing.&lt;/p&gt;
</content><category term="SciPy 2023"></category></entry><entry><title>ITK-Wasm: Universal spatial analysis and visualization</title><link href="https://pyvideo.org/scipy-2024/itk-wasm-universal-spatial-analysis-and-visualization.html" rel="alternate"></link><published>2024-07-08T00:00:00+00:00</published><updated>2024-07-08T00:00:00+00:00</updated><author><name>Matt McCormick</name></author><id>tag:pyvideo.org,2024-07-08:/scipy-2024/itk-wasm-universal-spatial-analysis-and-visualization.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ITK-Wasm combines the Insight Toolkit (ITK) and WebAssembly to enable high-performance spatial analysis across programming languages and hardware architectures.&lt;/p&gt;
&lt;p&gt;ITK-Wasm Python packages work in a web browser via Pyodide but also in system-level environments. We describe how ITK-Wasm bridges WebAssembly with Scientific Python through simple fundamental Python and NumPy-based …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ITK-Wasm combines the Insight Toolkit (ITK) and WebAssembly to enable high-performance spatial analysis across programming languages and hardware architectures.&lt;/p&gt;
&lt;p&gt;ITK-Wasm Python packages work in a web browser via Pyodide but also in system-level environments. We describe how ITK-Wasm bridges WebAssembly with Scientific Python through simple fundamental Python and NumPy-based data structures and Pythonic function interfaces. These interfaces can be accelerated through GPU implementations when available.&lt;/p&gt;
&lt;p&gt;We discuss how ITK-Wasm's integration of the WebAssembly Component Model launches Scientific Python into a new world of interoperability, enabling the creation of accessible and sustainable multi-language projects that are easily distributed anywhere.&lt;/p&gt;
</content><category term="SciPy 2024"></category></entry></feed>