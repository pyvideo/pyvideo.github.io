<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Tue, 05 Nov 2019 00:00:00 +0000</lastBuildDate><item><title>The Inspection Paradox is Everywhere</title><link>https://pyvideo.org/pydata-new-york-city-2019/the-inspection-paradox-is-everywhere.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The inspection paradox is a statistical illusion you’ve probably never heard of. It’s a common source of confusion, an occasional cause of error, and an opportunity for clever experimental design. And once you know about it, you see it everywhere.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-05:pydata-new-york-city-2019/the-inspection-paradox-is-everywhere.html</guid></item><item><title>Generational Changes in Support for Gun Laws: A Case Study in Computational Statistics</title><link>https://pyvideo.org/scipy-2019/generational-changes-in-support-for-gun-laws-a-case-study-in-computational-statistics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the United States, support for gun control has been declining among all age groups since 1990; among young adults, support is substantially lower than among previous generations. Using data from the General Social Survey (GSS), I perform age-period-cohort analysis to measure generational effects. In this talk, I demonstrate a computational approach to statistics that replaces mathematical analysis with random simulation. Using Python and libraries like NumPy and StatsModels, we can define basic operations — like resampling, filling missing values, modeling, and prediction — and assemble them into a data analysis pipeline.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Sat, 13 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-13:scipy-2019/generational-changes-in-support-for-gun-laws-a-case-study-in-computational-statistics.html</guid></item><item><title>Bayesian Statistics Made Simple</title><link>https://pyvideo.org/scipy-2019/bayesian-statistics-made-simple.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bayesian statistical methods are becoming more common, but there are not many resources to help beginners get started. People who know Python can use their programming skills to get a head start. In this tutorial, I introduce Bayesian methods using grid algorithms, which help develop understanding, and MCMC, which is a powerful algorithm for real-world problems.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/bayesian-statistics-made-simple.html</guid><category>tutorial</category></item><item><title>Complexity Science</title><link>https://pyvideo.org/scipy-2019/complexity-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Complexity Science is an approach to modeling systems using tools from discrete mathematics and computer science, including networks, cellular automata, and agent-based models. It has applications in many areas of natural and social science. Python is a particularly good language for exploring and implementing models of complex systems. In this tutorial, I present material from the second edition of &lt;em&gt;Think Complexity&lt;/em&gt; and from a class I teach at Olin College. We will work with random networks using NetworkX, with cellular automata using NumPy, and we will implement simple agent-based models.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/complexity-science.html</guid><category>tutorial</category></item><item><title>Lightning Talks Saturday Evening 2018-05-12</title><link>https://pyvideo.org/pycon-us-2018/lightning-talks-saturday-evening-2018-05-12.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;table border="1" class="colwidths-given docutils"&gt;
&lt;caption&gt;Lightning Talks&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="10%" /&gt;
&lt;col width="30%" /&gt;
&lt;col width="60%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Time&lt;/th&gt;
&lt;th class="head"&gt;Speaker&lt;/th&gt;
&lt;th class="head"&gt;Title&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=00m10s"&gt;00:10&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Caleb Collins-Parks&lt;/td&gt;
&lt;td&gt;AREPL - A real-time python evaluator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=04m35s"&gt;04:35&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Michael Foord&lt;/td&gt;
&lt;td&gt;Abstractions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=10m27s"&gt;10:27&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Turicas (Álvaro) Justen&lt;/td&gt;
&lt;td&gt;Roasting Coffee with Python&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=16m27s"&gt;16:27&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Petr Viktorin&lt;/td&gt;
&lt;td&gt;Blinky's Async Adventure&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=22m17s"&gt;22:17&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;Type Hint&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=26m25s"&gt;26:25&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Scott Sanderson&lt;/td&gt;
&lt;td&gt;A Class is a Poor Man's...Loop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=31m25s"&gt;31:25&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Nick Humrich&lt;/td&gt;
&lt;td&gt;RIP HTTP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=36m08s"&gt;36:08&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Allen Downey&lt;/td&gt;
&lt;td&gt;Modeling and Simulation in Python&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=40m00s"&gt;40:00&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Petr Mitev&lt;/td&gt;
&lt;td&gt;Python in Arch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=44m53s"&gt;44:53&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Steven C. Howell&lt;/td&gt;
&lt;td&gt;Bayesian Hacking&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=50m47s"&gt;50:47&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;James Bennett Saxon&lt;/td&gt;
&lt;td&gt;Code Lives &amp;amp; Things can happen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=56m42s"&gt;56:42&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Andrés García García&lt;/td&gt;
&lt;td&gt;Why should we care about Processing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=61:40"&gt;1:01:40&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Meredydd Luff&lt;/td&gt;
&lt;td&gt;Making the web more pythonic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=67:10"&gt;1:07:10&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Kenneth Reitz&lt;/td&gt;
&lt;td&gt;Running for the board﻿&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Collins-Parks</dc:creator><pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-12:pycon-us-2018/lightning-talks-saturday-evening-2018-05-12.html</guid><category>lightning talks</category></item><item><title>Complexity Science</title><link>https://pyvideo.org/pycon-us-2018/complexity-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Complexity Science is an approach to modeling systems using tools from discrete mathematics and computer science, including networks, cellular automata, and agent-based models.  It has applications in many areas of natural and social science.&lt;/p&gt;
&lt;p&gt;Python is a particularly good language for exploring and implementing models of complex systems.  In this tutorial, we present material from the draft second edition of &lt;em&gt;Think Complexity&lt;/em&gt;, and from a class we teach at Olin College.  We will work with random networks using NetworkX, with cellular automata using NumPy, and we will implement simple agent-based models.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-10:pycon-us-2018/complexity-science.html</guid><category>networkx</category><category>numpy</category></item><item><title>Introduction to Digital Signal Processing</title><link>https://pyvideo.org/pycon-us-2018/introduction-to-digital-signal-processing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Spectral analysis is an important and useful technique in many areas of science and engineering, and the Fast Fourier Transform is one of the most important algorithms, but the fundamental ideas of signal processing are not as widely known as they should be.&lt;/p&gt;
&lt;p&gt;Fortunately, Python provides an accessible and enjoyable way to get started.  In this tutorial, I present material from my book, &lt;em&gt;Think DSP&lt;/em&gt;, and from a class I teach at Olin College.  We will work with audio signals, including music and other recorded sounds, and visualize their spectrums and spectrograms.  We will synthesize simple sounds and learn about harmonic structure, chirps, filtering, and convolution.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-09:pycon-us-2018/introduction-to-digital-signal-processing.html</guid></item><item><title>Lightning Talks 2017-07-12</title><link>https://pyvideo.org/scipy-2017/lightning-talks-2017-07-12.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks 2017-07-12&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="12%" /&gt;
&lt;col width="23%" /&gt;
&lt;col width="65%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head" rowspan="2"&gt;Start&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Speakers&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Subject&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;1:30&lt;/td&gt;
&lt;td rowspan="4"&gt;Aaron Meurer&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Doctr&lt;/strong&gt;
- We built a better tool to push from TravisCI to
GitHub Pages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;6:30&lt;/td&gt;
&lt;td rowspan="4"&gt;Daniel Chen&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;SciPy 2017 Notes&lt;/strong&gt;
- A github repo (scipy_2017_notes) of links and
tutorial information from this conference.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;7:15&lt;/td&gt;
&lt;td rowspan="4"&gt;Allen Downey&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Physical Modeling in Python&lt;/strong&gt;
- tinyurl,.com/modsimpy; writing a book and am looking
for simple models to teach students.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;8:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Oliver Zeigermann&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;How do Convolutional Neural Networks &amp;quot;See&amp;quot;&lt;/strong&gt;
- Techniques to visualize feature detection in the
Insight neural network.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;14:30&lt;/td&gt;
&lt;td rowspan="5"&gt;Sebastian Raschka&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Screenlamp&lt;/strong&gt;
- We made Hypothosis pipeline builder for experimental
biologists, with database filtering steps.  Based on
BioPandas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;20:00&lt;/td&gt;
&lt;td rowspan="4"&gt;Theodore Lindsay
and Floris van
Breugel&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;FigureFirst&lt;/strong&gt;
- Make it easy to use MatPlotLib and Inkscape to build
beautiful scientific figures.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;26:00&lt;/td&gt;
&lt;td rowspan="3"&gt;Pamela Wu&lt;/td&gt;
&lt;td rowspan="3"&gt;&lt;strong&gt;SynthPy:  Real Answers for Fake Data&lt;/strong&gt;
-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;31:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Nick Murphy&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;PlasmaPy&lt;/strong&gt;
- Beginning a community developed Python package for
plasma physics.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;34:00&lt;/td&gt;
&lt;td rowspan="5"&gt;Scott Collis&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Py-ART&lt;/strong&gt;
- Python ARM Radar Toolkit, exposing world of radar
meteorology to SciPy stack.  Taking comments on our
roadmap.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;36:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Bill Spotz&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Using Jupyter to make Citations&lt;/strong&gt;
- The journey of using Jupyter notebooks to add real
citations.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;42:15&lt;/td&gt;
&lt;td rowspan="5"&gt;Jose Felipe&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Test support in Jupyter/Ipython through cell&lt;/strong&gt;
&lt;strong&gt;magics&lt;/strong&gt;
- Starting with iPython/Unittests, make unittesting in
cells&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;47:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Scott Cole&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Burrito Data Analytics&lt;/strong&gt;
- Specialized Visualization and data collection
profiles in the quest for better burittos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aaron Meurer</dc:creator><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-12:scipy-2017/lightning-talks-2017-07-12.html</guid><category>lightning talks</category></item><item><title>Computational Statistics</title><link>https://pyvideo.org/scipy-2017/computational-statistics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutorial materials found here: &lt;a class="reference external" href="https://scipy2017.scipy.org/ehome/220975/493423/"&gt;https://scipy2017.scipy.org/ehome/220975/493423/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Description:&lt;/p&gt;
&lt;p&gt;Do you know the difference between standard deviation and standard error?  Do you know what statistical test to use for any occasion?  Do you really know what a p-value is?  How about a confidence interval?&lt;/p&gt;
&lt;p&gt;Most people don’t really understand these concepts, even after taking several statistics classes.  The problem is that these classes focus on mathematical methods that bury the concepts under a mountain of details.&lt;/p&gt;
&lt;p&gt;This tutorial uses Python to implement simple statistical experiments that develop deep understanding.  I will present examples using real-world data to answer relevant questions, and attendees will practice with hands-on exercises.&lt;/p&gt;
&lt;p&gt;The tutorial material is based on my book, &lt;em&gt;Think Stats&lt;/em&gt;, a class I teach at Olin College, and my blog, “Probably Overthinking It.”     Audience&lt;/p&gt;
&lt;p&gt;Attendees should have at least basic level Python.  No statistical background is required.  We will work with Jupyter notebooks that use Pandas, NumPy and SciPy, but no prior experience with these libraries is required.&lt;/p&gt;
&lt;p&gt;Attendees will learn about resampling and related tools that use random simulation to perform statistical inference, including estimation and hypothesis testing.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-11:scipy-2017/computational-statistics.html</guid></item><item><title>Lightning talks May 20th, 2017 Evening session session</title><link>https://pyvideo.org/pycon-us-2017/lightning-talks-may-20th-2017-evening-session-session.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks 2017-05-20 Evening&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="12%" /&gt;
&lt;col width="23%" /&gt;
&lt;col width="65%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head" rowspan="2"&gt;Start&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Speakers&lt;/th&gt;
&lt;th class="head" rowspan="2"&gt;Subject&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;0:30&lt;/td&gt;
&lt;td rowspan="4"&gt;Meredydd Luff&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Compiling blocking Python to non-blocking JS&lt;/strong&gt;
- Wrote client side JS in Python before yield or await
statements, using Skulpt transpiler.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;5:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Efron Licht&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Elements of Style&lt;/strong&gt;
- Write understandable code; write a story. Shorter
functions.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;11:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Maria Mckinley&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Refactoring Lengthy Bits of Code&lt;/strong&gt;
- Towards understanding the steps to refactoring: a
test, prose, outline, make functions and tests.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;15:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Erik Rose&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Getting Things Unguilty&lt;/strong&gt;
- Using &amp;quot;getting things done&amp;quot; as a one slide
flowchart.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;21:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Meggie Mahnken&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Using _slots_ for More Opinionated Objects&lt;/strong&gt;
- __slots__ when you don't want to allow attributes;
sometimes efficient.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="3"&gt;26:00&lt;/td&gt;
&lt;td rowspan="3"&gt;Travis&lt;/td&gt;
&lt;td rowspan="3"&gt;&lt;strong&gt;Crowd Computing&lt;/strong&gt;
- fun controlling crowds with Python&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="5"&gt;29:15&lt;/td&gt;
&lt;td rowspan="5"&gt;Allen Downey&lt;/td&gt;
&lt;td rowspan="5"&gt;&lt;strong&gt;Physical Modeling in Python&lt;/strong&gt;
- Making an interactive book to improve the undergrad
engineering student retention by putting in real world
early.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;33:00&lt;/td&gt;
&lt;td rowspan="4"&gt;Luceneo&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Time is Money&lt;/strong&gt;
- Communicating Professor Antonio Candido's
alternative view to this aphorism.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;35:45&lt;/td&gt;
&lt;td rowspan="4"&gt;Cynthia Lynn&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;PyCon, a High Schooler's Perspective&lt;/strong&gt;
- A 15 year-old programmer.  Didn't come for a job;
felt accepted and welcome.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;41:45&lt;/td&gt;
&lt;td rowspan="4"&gt;David Bieber&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Python Fire, comand line interfaces&lt;/strong&gt;
- A single line or decorators added to functions or
classes to make CLIs; great workflow.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan="4"&gt;47:15&lt;/td&gt;
&lt;td rowspan="4"&gt;&amp;nbsp;&lt;/td&gt;
&lt;td rowspan="4"&gt;&lt;strong&gt;Pitches for different conferences&lt;/strong&gt;
- One minute each for Python conferences around the
world.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Merdydd Luff</dc:creator><pubDate>Sat, 20 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-20:pycon-us-2017/lightning-talks-may-20th-2017-evening-session-session.html</guid><category>lightning talks</category></item><item><title>Introduction to Digital Signal Processing</title><link>https://pyvideo.org/pycon-us-2017/introduction-to-digital-signal-processing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Spectral analysis is an important and useful technique in many areas of
science and engineering, and the Fast Fourier Transform is one of the
most important algorithms, but the fundamental ideas of signal
processing are not as widely known as they should be.&lt;/p&gt;
&lt;p&gt;Fortunately, Python provides an accessible and enjoyable way to get
started. &amp;nbsp;In this tutorial, I present material from my book, &lt;em&gt;Think
DSP&lt;/em&gt;, and from a class I teach at Olin College. &amp;nbsp;We will work with audio
signals, including music and other recorded sounds, and visualize their
spectrums and spectrograms. &amp;nbsp;We will synthesize simple sounds and learn
about harmonic structure, chirps, filtering, and convolution.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Thu, 18 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-18:pycon-us-2017/introduction-to-digital-signal-processing.html</guid></item><item><title>Complexity Science</title><link>https://pyvideo.org/pycon-us-2017/complexity-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Complexity Science is an approach to modeling systems using tools from
discrete mathematics and computer science, including networks, cellular
automata, and agent-based models. &amp;nbsp;It has applications in many areas of
natural and social science.&lt;/p&gt;
&lt;p&gt;Python is a particularly good language for exploring and implementing
models of complex systems. &amp;nbsp;In this tutorial, we present material from
the draft second edition of &lt;em&gt;Think Complexity&lt;/em&gt;, and from a class we
teach at Olin College. &amp;nbsp;We will work with random networks using
NetworkX, with cellular automata using NumPy, and we will implement
simple agent-based models.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-17:pycon-us-2017/complexity-science.html</guid></item><item><title>Basic Sound Processing in Python</title><link>https://pyvideo.org/scipy-2015/basic-sound-processing-in-python.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Wed, 08 Jul 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-07-08:scipy-2015/basic-sound-processing-in-python.html</guid></item><item><title>Computational Statistics I</title><link>https://pyvideo.org/scipy-2015/computational-statistics-i.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Wed, 08 Jul 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-07-08:scipy-2015/computational-statistics-i.html</guid><category>Tutorial</category></item><item><title>Will Millennials Ever Get Married? Survival Analysis and Marriage Data</title><link>https://pyvideo.org/scipy-2015/will-millennials-ever-get-married-survival-analysis-and-marriage-data.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Wed, 08 Jul 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-07-08:scipy-2015/will-millennials-ever-get-married-survival-analysis-and-marriage-data.html</guid></item><item><title>Bayesian statistics made simple</title><link>https://pyvideo.org/pycon-us-2016/allen-downey-bayesian-statistics-made-simple-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Allen Downey&lt;/p&gt;
&lt;p&gt;An introduction to Bayesian statistics using Python. &amp;nbsp;Bayesian statistics are usually presented mathematically, but many of the ideas are easier to understand computationally. &amp;nbsp;People who know Python can get started quickly and use Bayesian analysis to solve real problems. &amp;nbsp;This tutorial is based on material and case studies from Think Bayes (O’Reilly Media).&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-09:pycon-us-2016/allen-downey-bayesian-statistics-made-simple-pycon-2016.html</guid></item><item><title>Computational Statistics</title><link>https://pyvideo.org/pycon-us-2016/allen-downey-computational-statistics-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Allen Downey&lt;/p&gt;
&lt;p&gt;Statistical inference is a fundamental tool in science and engineering, but it is often poorly understood.  This tutorial uses computational methods, including Monte Carlo simulation and resampling, to explore estimation, hypothesis testing and statistical modeling.  Attendees will develop understanding of statistical concepts and learn to use real data to answer relevant questions.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Mon, 30 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-30:pycon-us-2016/allen-downey-computational-statistics-pycon-2016.html</guid></item><item><title>Bayesian statistics made (as) simple (as possible)</title><link>https://pyvideo.org/pycon-us-2012/bayesian-statistics-made-as-simple-as-possible.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to Bayesian statistics using Python. My
goal is to help participants understand the concepts and solve real
problems. We will use material from my book, Think Stats: Probability
and Statistics for Programmers (O’Reilly Media).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Wed, 07 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-07:pycon-us-2012/bayesian-statistics-made-as-simple-as-possible.html</guid></item><item><title>Bayesian statistics made simple</title><link>https://pyvideo.org/pycon-us-2013/bayesian-statistics-made-simple.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;An introduction to Bayesian statistics using Python. Bayesian statistics
are usually presented mathematically, but many of the ideas are easier
to understand computationally. People who know some Python have a head
start.&lt;/p&gt;
&lt;p&gt;We will use material from Think Stats: Probability and Statistics for
Programmers (O’Reilly Media), and Think Bayes, a work in progress at
&lt;a class="reference external" href="http://thinkbayes.com"&gt;http://thinkbayes.com&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-03-13:pycon-us-2013/bayesian-statistics-made-simple.html</guid><category>tutorial</category></item><item><title>Bayesian statistics made simple</title><link>https://pyvideo.org/pycon-us-2014/bayesian-statistics-made-simple-0.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;An introduction to Bayesian statistics using Python. Bayesian statistics
are usually presented mathematically, but many of the ideas are easier
to understand computationally. People who know Python can get started
quickly and use Bayesian analysis to solve real problems. This tutorial
is based on material and case studies from Think Bayes (O'Reilly Media).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/bayesian-statistics-made-simple-0.html</guid></item><item><title>Bayesian statistics made simple</title><link>https://pyvideo.org/pycon-us-2015/bayesian-statistics-made-simple-1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An introduction to Bayesian statistics using Python. &amp;nbsp;Bayesian
statistics are usually presented mathematically, but many of the ideas
are easier to understand computationally. &amp;nbsp;People who know Python can
get started quickly and use Bayesian analysis to solve real problems.
&amp;nbsp;This tutorial is based on material and case studies from Think Bayes
(O’Reilly Media).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-10:pycon-us-2015/bayesian-statistics-made-simple-1.html</guid></item><item><title>Statistical inference with computational methods</title><link>https://pyvideo.org/pycon-us-2015/statistical-inference-with-computational-methods.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Statistical inference is a fundamental tool in science and engineering,
but it is often poorly understood. &amp;nbsp;This tutorial uses computational
methods, including Monte Carlo simulation and resampling, to explore
estimation, hypothesis testing and statistical modeling. &amp;nbsp;Attendees will
develop understanding of statistical concepts and learn to use real data
to answer relevant questions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-10:pycon-us-2015/statistical-inference-with-computational-methods.html</guid></item></channel></rss>