<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 07 Nov 2015 00:00:00 +0000</lastBuildDate><item><title>Deconstructing Django with Flask</title><link>https://pyvideo.org/pycon-ca-2015/deconstructing-django-with-flask-marc-sibson.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Motivation: With the rise of micro services, API first sites and mobile the draw of a lightweight framework is stronger than ever.  Django and its proscriptive batteries included approach can feel too heavy.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Django is awesome, but maybe I'm missing something with Flask thing. OMG, where do I start, there my so many choices&lt;/li&gt;
&lt;li&gt;Major components of Django: ORM, routing, templating, views, forms, migrations, configuration, ReST, models, tasks, tests, static assets, authentication, sessions etc&lt;/li&gt;
&lt;li&gt;templating, forms, static assets aren’t really needed for api/mobile use cases&lt;/li&gt;
&lt;li&gt;for each remaining component offer the “best” flask library&lt;/li&gt;
&lt;li&gt;build out a small API only app together using the &amp;quot;&amp;quot;best&amp;quot;&amp;quot; flask library&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Sibson</dc:creator><pubDate>Sat, 07 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-07:pycon-ca-2015/deconstructing-django-with-flask-marc-sibson.html</guid></item></channel></rss>