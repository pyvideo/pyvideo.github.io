<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Dharhas Pothina</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_dharhas-pothina.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-05-16T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Data of an Unusual Size: A practical guide to analysis and interactive visualization of massive datasets</title><link href="https://pyvideo.org/pycon-us-2023/data-of-an-unusual-size-a-practical-guide-to-analysis-and-interactive-visualization-of-massive-datasets.html" rel="alternate"></link><published>2023-04-19T00:00:00+00:00</published><updated>2023-04-19T00:00:00+00:00</updated><author><name>Pavithra Eswaramoorthy</name></author><id>tag:pyvideo.org,2023-04-19:/pycon-us-2023/data-of-an-unusual-size-a-practical-guide-to-analysis-and-interactive-visualization-of-massive-datasets.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While most folks aren't at the scale of cloud giants or black hole
research teams that analyze Petabytes of data every day, you can easily
fall into a situation where your laptop doesn't have quite enough power
to do the analytics you need.&lt;/p&gt;
&lt;p&gt;&amp;quot;Big data&amp;quot; refers to any data …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While most folks aren't at the scale of cloud giants or black hole
research teams that analyze Petabytes of data every day, you can easily
fall into a situation where your laptop doesn't have quite enough power
to do the analytics you need.&lt;/p&gt;
&lt;p&gt;&amp;quot;Big data&amp;quot; refers to any data that is too large to handle comfortably
with your current tools and infrastructure. As the leading language for
data science, Python has many mature options that allow you to work with
datasets that are orders of magnitudes larger than what can fit into a
typical laptop's memory.&lt;/p&gt;
&lt;p&gt;In this hands-on tutorial, you will learn the fundamentals of analyzing
massive datasets with real-world examples on actual powerful machines on
a public cloud – starting from how the data is stored and read, to how
it is processed and visualized.&lt;/p&gt;
&lt;p&gt;You will understand how large-scale analysis differs from local
workflows, the unique challenges associated with scale, and some best
practices to work productively with your data. By the end, you will be
able to answer:&lt;/p&gt;
&lt;p&gt;What makes some data formats more efficient at scale? Why, how, and when
(and when not) to leverage parallel and distributed computation
(primarily with Dask) for your work? How to manage cloud storage,
resources, and costs effectively? How interactive visualization can make
large and complex data more understandable (primarily with hvPlot)? How
to comfortably collaborate on data science projects with your entire
team?&lt;/p&gt;
&lt;p&gt;The tutorial focuses on the reasoning, intuition, and best practices
around big data workflows, while covering the practical details of
Python libraries like Dask and hvPlot that are great at handling large
data. It includes plenty of exercises to help you build a foundational
understanding within three hours.&lt;/p&gt;
</content><category term="PyCon US 2023"></category></entry><entry><title>From RAGs to riches: Build an AI document inquiry web-app</title><link href="https://pyvideo.org/pycon-us-2024/from-rags-to-riches-build-an-ai-document-inquiry-web-app.html" rel="alternate"></link><published>2024-05-16T00:00:00+00:00</published><updated>2024-05-16T00:00:00+00:00</updated><author><name>Pavithra Eswaramoorthy</name></author><id>tag:pyvideo.org,2024-05-16:/pycon-us-2024/from-rags-to-riches-build-an-ai-document-inquiry-web-app.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As we descend from the peak of the hype cycle around Large Language
Models (LLMs), chat-based document interrogation systems have emerged as
a high value practical use case. The ability to ask natural language
questions and get relevant and accurate answers from a large corpus of
documents can fundamentally …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As we descend from the peak of the hype cycle around Large Language
Models (LLMs), chat-based document interrogation systems have emerged as
a high value practical use case. The ability to ask natural language
questions and get relevant and accurate answers from a large corpus of
documents can fundamentally transform organizations and make
institutional knowledge accessible. Foundational LLM models like
OpenAI’s GPT4 provide powerful capabilities, but using them directly to
answer questions about a collection of documents presents
accuracy-related limitations. Retrieval-augmented generation (RAG) is
the leading approach to enhancing the capabilities and usability of
Large Language Models, especially for personal or company-level
chat-based document interrogation systems.&lt;/p&gt;
&lt;p&gt;RAG is a technique to share relevant context and external information
(retrieved from vector storage) to LLMs, thus making them more powerful
and accurate. In this tutorial, we’ll dive into RAG by creating a
personal chat application that accurately answers questions about your
selected documents. We’ll use a new &lt;a class="reference external" href="https://ragna.chat/en/latest/"&gt;OSS project called
Ragna&lt;/a&gt; that provides a friendly Python
and REST API, designed for this particular case. For our example, we’ll
test the effectiveness of different LLMs and vector databases. We'll
then develop a web application that leverages the REST API, built with
&lt;a class="reference external" href="https://panel.holoviz.org"&gt;Panel–a powerful OSS Python application development
framework&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By the end of this tutorial, you will have an understanding of the
fundamental components that form a RAG model, and practical knowledge of
open source tools that can help you or your organization explore and
build on your own applications. This tutorial is designed to enable
enthusiasts in our community to explore an interesting topic using some
beginner-friendly Python libraries.&lt;/p&gt;
</content><category term="PyCon US 2024"></category></entry><entry><title>Building a User Maintainable Visualization Dashboard for the Large Synoptic Survey Telescope (LSST)</title><link href="https://pyvideo.org/pydata-austin-2019/building-a-user-maintainable-visualization-dashboard-for-the-large-synoptic-survey-telescope-lsst.html" rel="alternate"></link><published>2019-12-07T00:00:00+00:00</published><updated>2019-12-07T00:00:00+00:00</updated><author><name>Dharhas Pothina</name></author><id>tag:pyvideo.org,2019-12-07:/pydata-austin-2019/building-a-user-maintainable-visualization-dashboard-for-the-large-synoptic-survey-telescope-lsst.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Starting in 2023, the Large Synoptic Survey Telescope (LSST) project will image the entire visible sky every few days for ten years. When in production the LSST will generate 15 Terabytes of data per night. Critical to the success of this project is ensuring the quality of the data …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Starting in 2023, the Large Synoptic Survey Telescope (LSST) project will image the entire visible sky every few days for ten years. When in production the LSST will generate 15 Terabytes of data per night. Critical to the success of this project is ensuring the quality of the data processing pipeline. We will demonstrate the complex multi page data visualization dashboard used by scientists.&lt;/p&gt;
</content><category term="PyData Austin 2019"></category><category term="data-visualization"></category><category term="Visualization"></category><category term="dashboard"></category></entry><entry><title>EarthSim: Flexible Environmental Simulation Workflows Entirely Within Jupyter Notebooks</title><link href="https://pyvideo.org/scipy-2018/earthsim-flexible-environmental-simulation-workflows-entirely-within-jupyter-notebooks.html" rel="alternate"></link><published>2018-07-12T00:00:00+00:00</published><updated>2018-07-12T00:00:00+00:00</updated><author><name>Dharhas Pothina</name></author><id>tag:pyvideo.org,2018-07-12:/scipy-2018/earthsim-flexible-environmental-simulation-workflows-entirely-within-jupyter-notebooks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building environmental simulation workflows is typically a slow process
involving multiple proprietary desktop tools that do not interoperate
well. In this work, we demonstrate building flexible, lightweight
workflows entirely in Jupyter notebooks. We demonstrate these
capabilities through examples in hydrology and hydrodynamics using the
AdH and GSSHA simulators. The …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building environmental simulation workflows is typically a slow process
involving multiple proprietary desktop tools that do not interoperate
well. In this work, we demonstrate building flexible, lightweight
workflows entirely in Jupyter notebooks. We demonstrate these
capabilities through examples in hydrology and hydrodynamics using the
AdH and GSSHA simulators. The goal is to provide a set of tools that can
easily be reconfigured and repurposed as needed to rapidly solve
specific emerging issues. (&lt;a class="reference external" href="https://pyviz.github.io/EarthSim/"&gt;https://pyviz.github.io/EarthSim/&lt;/a&gt;) As part of
this work, extensive improvements were made to several general-purpose
open source packages, including support for annotating and editing plots
and maps in Bokeh and HoloViews, rendering large triangular meshes and
regridding large raster data in HoloViews, GeoViews, and Datashader, and
widget libraries for Param. In addition, two new open source projects
are being released for triangular mesh generation and environmental data
access.Presenter(s): Speaker: Dharhas Pothina, U.S. Army Engineer
Research and Development Center Speaker: James A. Bednar, Solutions
Architect, Anaconda, Inc. Speaker: Scott Christensen, U.S. Army Engineer
Research and Development Center Speaker: Kevin Winters, U.S. Army
Engineer Research and Development Center Speaker: Christopher Ball,
Anaconda, Inc. Speaker: Gregory Brener, Anaconda Inc. Speaker: Philipp
Rudiger, Software Engineer, Anaconda, Inc.&lt;/p&gt;
</content><category term="SciPy 2018"></category></entry><entry><title>Day 1 Lightning Talks | SciPy 2022</title><link href="https://pyvideo.org/scipy-2022/day-1-lightning-talks-scipy-2022.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Oliver Zeigermann</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/day-1-lightning-talks-scipy-2022.html</id><content type="html"></content><category term="SciPy 2022"></category></entry><entry><title>Day 2 Lightning Talks | SciPy 2022</title><link href="https://pyvideo.org/scipy-2022/day-2-lightning-talks-scipy-2022.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Oliver Zeigermann</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/day-2-lightning-talks-scipy-2022.html</id><content type="html"></content><category term="SciPy 2022"></category></entry><entry><title>Community-first open source: An action plan!</title><link href="https://pyvideo.org/scipy-2023/community-first-open-source-an-action-plan.html" rel="alternate"></link><published>2023-07-10T00:00:00+00:00</published><updated>2023-07-10T00:00:00+00:00</updated><author><name>Pavithra Pothina</name></author><id>tag:pyvideo.org,2023-07-10:/scipy-2023/community-first-open-source-an-action-plan.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Communities are at the heart of open source software and are fundamental to our projects’ long-term success. The Python ecosystem has several mature projects, that have spent years working on community initiatives. Newer projects can learn from their experiences and build stronger foundations to foster healthy communities.&lt;/p&gt;
&lt;p&gt;In this …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Communities are at the heart of open source software and are fundamental to our projects’ long-term success. The Python ecosystem has several mature projects, that have spent years working on community initiatives. Newer projects can learn from their experiences and build stronger foundations to foster healthy communities.&lt;/p&gt;
&lt;p&gt;In this talk, we share a set of practices for community-first projects, including repository management, contributor pathways, and governance principles. We’ll also share real examples from our own journey transitioning a company-backed OSS project, Nebari (&lt;a class="reference external" href="https://nebari.dev/"&gt;https://nebari.dev/&lt;/a&gt;), to be more community-oriented.&lt;/p&gt;
</content><category term="SciPy 2023"></category></entry></feed>