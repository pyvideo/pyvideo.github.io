<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_carlos-cordoba.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-10-10T00:00:00+00:00</updated><entry><title>Beyond Jupyter: Other environments to do scientific programming in Python</title><link href="https://pyvideo.org/scipy-latin-america-2019/beyond-jupyter-other-environments-to-do-scientific-programming-in-python.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Carlos CÃ³rdoba</name></author><id>tag:pyvideo.org,2019-10-10:scipy-latin-america-2019/beyond-jupyter-other-environments-to-do-scientific-programming-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The easiness with which you can mix code, text, equations and graphics in Jupyter has made it the preferred tool of data scientists, engineers and scientists to do scientific programming in Python. Jupyter certainly excels at data exploration and teaching but lacks many features necessary to create large and modular programs, which can be found in other well-known scientific environments such as Matlab. Spyder is an alternative to Jupyter which seeks to provide most of these features in an integrated, easy to use environment that works as a desktop application in all major operating systems (Windows, Linux and macOS). In particular, Spyder comes with a powerful editor that provides code completion, signaling of warnings and errors and the ability to go where a function, class or method is defined. With the next Spyder version, these facilities will be available not only for Python but for several other programming languages as well (e.g. C++ or Julia). After writing your code on the editor, you can execute it in Spyder's integrated IPython console. Spyder supports several types of evaluation modes, according to your needs: you can run the whole file, only portions of the it (called cells) or a single line. This allows for quick iteration and incremental code development: every change can be reevaluated and feedback about its results obtained immediately thanks to the console's presence. To further support this process, Spyder also offers and integrated documentation viewer called 'Help'. After pressing 'Ctrl+I' next to any object used in the editor or the console, the documentation viewer will display its associated help in a beautifully formatted way, which avoids constantly consulting the web to remember how to use that object. After a code execution is completed, Spyder also gives the possibility to explore all objects created by it in a pane called 'Variable Explorer'. There users can inspect and modify the contents of lists, dictionaries, sets, 2D and 3D Numpy arrays, Pandas Dataframes and any other kind of Python object through specialized viewers for each of them. Besides these four main components (Editor, Console, Help and Variable Explorer), Spyder comes with a host of other facilities aimed at increasing productivity and allowing users to easily embark in small to mid-size programming projects. Among them we would like to mention the following: the ability to create projects to quickly switch between different coding efforts, find any text snippet contained in plain text files of a given directory, and explore all files present on that directory. As the current Spyder maintainer, it would be my pleasure to present these and several other components and nifty tricks and features to the SciPy Latin America community.&lt;/p&gt;
</summary></entry><entry><title>The Spyder Ecosystem of Plugins</title><link href="https://pyvideo.org/scipy-2017/the-spyder-ecosystem-of-plugins.html" rel="alternate"></link><published>2017-07-14T00:00:00+00:00</published><updated>2017-07-14T00:00:00+00:00</updated><author><name>Carlos Cordoba</name></author><id>tag:pyvideo.org,2017-07-14:scipy-2017/the-spyder-ecosystem-of-plugins.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we want to introduce to the community a new set of third-party Spyder plugins (developed during the last six months) that extend the program functionality in interesting and novel ways. These plugins are: a &lt;em&gt;Notebook&lt;/em&gt; plugin, that integrates the classic Jupyter notebook in Spyder; a &lt;em&gt;Reports&lt;/em&gt; plugin, that allows users to write documents in markdown, with embedded code snippets and graphics, and export them to HTML and PDF; a &lt;em&gt;Terminal&lt;/em&gt; plugin, that integrates system terminals in Spyder; and a &lt;em&gt;Vim&lt;/em&gt; plugin, that allows using the most common Vim keybindings in Spyder's editor.&lt;/p&gt;
</summary><category term="spyder"></category></entry><entry><title>Towards a Better Documentation System for Scientific Python</title><link href="https://pyvideo.org/scipy-2015/towards-a-better-documentation-system-for-scientific-python.html" rel="alternate"></link><published>2015-07-10T00:00:00+00:00</published><updated>2015-07-10T00:00:00+00:00</updated><author><name>Carlos Cordoba</name></author><id>tag:pyvideo.org,2015-07-10:scipy-2015/towards-a-better-documentation-system-for-scientific-python.html</id><summary type="html"></summary></entry><entry><title>What's new in Spyder 3.0</title><link href="https://pyvideo.org/scipy-2016/whats-new-in-spyder-30-scipy-2016-carlos-cordoba.html" rel="alternate"></link><published>2016-07-15T00:00:00+00:00</published><updated>2016-07-15T00:00:00+00:00</updated><author><name>Carlos Cordoba</name></author><id>tag:pyvideo.org,2016-07-15:scipy-2016/whats-new-in-spyder-30-scipy-2016-carlos-cordoba.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Our aim in this talk is to present the new features available in the next major version of Spyder, the Scientific PYthon DEvelopment EnviRonment. This version (Spyder 3.0) represents almost two years of development and brings important characteristics that we would like to introduce to the SciPy community. Among them we can find: the ability to
create and install third-party plugins, improved projects support, syntax highlighting and code completion for all programming languages supported by Pygments, a new file switcher
(similar to the one present in Sublime Text), code folding for the Editor, Emacs keybindings for the entire application, a Numpy array graphical builder, and a fully dark theme for the interface.&lt;/p&gt;
</summary><category term="SciPy 2016"></category></entry></feed>