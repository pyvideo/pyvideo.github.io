<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_rick-harding.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-07-28T00:00:00+00:00</updated><entry><title>PyOhio 2010: Wrangling the bits, standardizing how apps get built</title><link href="https://pyvideo.org/pyohio-2010/pyohio-2010--wrangling-the-bits--standardizing-ho.html" rel="alternate"></link><published>2010-07-31T00:00:00+00:00</published><updated>2010-07-31T00:00:00+00:00</updated><author><name>Rick Harding</name></author><id>tag:pyvideo.org,2010-07-31:pyohio-2010/pyohio-2010--wrangling-the-bits--standardizing-ho.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wrangling the bits, standardizing how apps get built&lt;/p&gt;
&lt;p&gt;Presented by Rick Harding&lt;/p&gt;
&lt;p&gt;As we moved more work to Python we had to figure out how to start,
share, and deploy projects in a standard way. Virtualenv, pip, and Git
to the rescue.&lt;/p&gt;
&lt;p&gt;[Note: The talk starts at around 7:20 when the mic is working.]&lt;/p&gt;
</summary><category term="deploying"></category><category term="fabric"></category><category term="git"></category><category term="pip"></category><category term="pyohio"></category><category term="pyohio2010"></category><category term="virtualenv"></category></entry><entry><title>PyOhio 2011: SqlAlchemy tutorial</title><link href="https://pyvideo.org/pyohio-2011/pyohio-2011--sqlalchemy-tutorial.html" rel="alternate"></link><published>2011-07-30T00:00:00+00:00</published><updated>2011-07-30T00:00:00+00:00</updated><author><name>Rick Harding</name></author><id>tag:pyvideo.org,2011-07-30:pyohio-2011/pyohio-2011--sqlalchemy-tutorial.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SqlAlchemy tutorial&lt;/p&gt;
&lt;p&gt;Presented by Rick Harding&lt;/p&gt;
&lt;p&gt;SqlAlchemy is one of the top 5 &amp;quot;must have&amp;quot; modules for Python. We'll go
through why you might want to use an ORM, situations to use the
different layers of SqlAlchemy, and some tips and tricks on a real
sample application.&lt;/p&gt;
</summary><category term="pyohio"></category><category term="pyohio2011"></category><category term="sqlalchemy"></category><category term="tutorial"></category></entry><entry><title>Starting your project right: setup and automation for all</title><link href="https://pyvideo.org/pyohio-2012/starting-your-project-right-setup-and-automation.html" rel="alternate"></link><published>2012-07-28T00:00:00+00:00</published><updated>2012-07-28T00:00:00+00:00</updated><author><name>Rick Harding</name></author><id>tag:pyvideo.org,2012-07-28:pyohio-2012/starting-your-project-right-setup-and-automation.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Everyone starts hacking on their little Python library or application,
with one goal in mind: Hacking Code! However, you need to do a little
work to prepare your project for success. We'll discuss project layout,
automation with Make, and 3rd party services to help your project appear
more organized, accessible, and dare I say, professional!&lt;/p&gt;
</summary></entry></feed>