<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Natural Language Processing</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_natural-language-processing.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2020-07-23T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Natural language processing with neural networks.</title><link href="https://pyvideo.org/europython-2019/natural-language-processing-with-neural-networks.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Hubert Bryłkowski</name></author><id>tag:pyvideo.org,2019-07-11:/europython-2019/natural-language-processing-with-neural-networks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Getting started with a natural language processing and neural networks
is easier nowadays thanks to the numerous talks and tutorials. The
goal is to dive deeper for those who already know the basics, or want
to expand their knowledge in a machine learning field.&lt;/div&gt;
&lt;div class="line"&gt;The talk will start with …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Getting started with a natural language processing and neural networks
is easier nowadays thanks to the numerous talks and tutorials. The
goal is to dive deeper for those who already know the basics, or want
to expand their knowledge in a machine learning field.&lt;/div&gt;
&lt;div class="line"&gt;The talk will start with the common use cases that can be generalized
to the specific problems in a NLP world. Then I will present an
overview of possible features that we can use as input to our network,
and show that even simple feature engineering can change our results.&lt;/div&gt;
&lt;div class="line"&gt;Furthermore, I will compare different network architectures - starting
with the fully connected networks, through convolution neural networks
to recursive neural networks. I will not only considering the good
parts, but also - what is usually overlooked - pitfalls of every
solution.&lt;/div&gt;
&lt;div class="line"&gt;All of these will be done considering number of parameters, which
transfers into training and prediction costs and time. I will also
share a number of “tricks” that enables getting the best results even
out of the simple architectures, as these are usually the fastest and
quite often hard to beat, at the same time being the easiest to
interpret.&lt;/div&gt;
&lt;/div&gt;
</content><category term="EuroPython 2019"></category><category term="Data Science"></category><category term="Deep Learning"></category><category term="Machine-Learning"></category><category term="Natural Language Processing"></category></entry><entry><title>15 Things You Should Know About Spacy</title><link href="https://pyvideo.org/europython-2020/15-things-you-should-know-about-spacy.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/15-things-you-should-know-about-spacy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Natural Language Processing to Go&lt;/p&gt;
&lt;p&gt;spaCy is a free, open-source library for advanced Natural Language Processing (NLP) in Python.
It was specifically designed for production use and it's a great tool to build applications that process text and help  to “understand” large corpuses.&lt;/p&gt;
&lt;p&gt;In this talk I'll present 15 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Natural Language Processing to Go&lt;/p&gt;
&lt;p&gt;spaCy is a free, open-source library for advanced Natural Language Processing (NLP) in Python.
It was specifically designed for production use and it's a great tool to build applications that process text and help  to “understand” large corpuses.&lt;/p&gt;
&lt;p&gt;In this talk I'll present 15 things you should know about Spacy for the better and worse.&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Natural Language Processing"></category><category term="Python 3"></category></entry><entry><title>Building smarter solutions with no expertise in machine learning</title><link href="https://pyvideo.org/europython-2020/building-smarter-solutions-with-no-expertise-in-machine-learning.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Laurent PICARD</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/building-smarter-solutions-with-no-expertise-in-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ML? API? AutoML? Python is the language of choice to solve problems with machine learning, but what can we build in only a few hours or days and without any expertise? In this session, we'll see how to benefit from existing ML models and how to create a custom …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ML? API? AutoML? Python is the language of choice to solve problems with machine learning, but what can we build in only a few hours or days and without any expertise? In this session, we'll see how to benefit from existing ML models and how to create a custom model with AutoML techniques. We’ll also be active players of a live demo, so don't put your smartphone on airplane mode!&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Computer Vision"></category><category term="Human-Machine-Interaction"></category><category term="Machine-Learning"></category><category term="Natural Language Processing"></category><category term="Public Cloud (AWS/Google/...)"></category></entry><entry><title>NLPeasy - a Workflow to Analyse, Enrich, and Explore Textual Data</title><link href="https://pyvideo.org/europython-2020/nlpeasy-a-workflow-to-analyse-enrich-and-explore-textual-data.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Philipp Thomann</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/nlpeasy-a-workflow-to-analyse-enrich-and-explore-textual-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Use pre-trained NLP-models, ingest into Elastic Search, and enjoy auto-generated Kibana dashboards!&lt;/p&gt;
&lt;p&gt;Ever wanted to try out NLP methods but it felt it too cumbersome to set up a workflow for textual data? How to enrich your data based on textual features and explore the results?&lt;/p&gt;
&lt;p&gt;NLPeasy (&lt;a class="reference external" href="https://github.com/d-one/NLPeasy"&gt;https://github …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Use pre-trained NLP-models, ingest into Elastic Search, and enjoy auto-generated Kibana dashboards!&lt;/p&gt;
&lt;p&gt;Ever wanted to try out NLP methods but it felt it too cumbersome to set up a workflow for textual data? How to enrich your data based on textual features and explore the results?&lt;/p&gt;
&lt;p&gt;NLPeasy (&lt;a class="reference external" href="https://github.com/d-one/NLPeasy"&gt;https://github.com/d-one/NLPeasy&lt;/a&gt;) does that: Enrich the data using well-known pre-trained models (Word embeddings, Sentiment Analysics, POS, Dependency Parsing). Then start the Elastic Stack on your Docker. Set-up indices and ingest it in bulk. And finally generate Kibana dashboards to explore the results.&lt;/p&gt;
&lt;p&gt;Complicated? Not at all! Just do it in a simple Jupyter Notebook.&lt;/p&gt;
&lt;p&gt;In this presentation we will give an architecture overview of the different components and demonstrate the capabilities of this Python package.&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Data Science"></category><category term="Elastic Search"></category><category term="Machine-Learning"></category><category term="Natural Language Processing"></category></entry><entry><title>Train. Serve. Deploy! Story of a NLP Model ft. PyTorch, Docker, Uwsgi and Nginx</title><link href="https://pyvideo.org/europython-2020/train-serve-deploy-story-of-a-nlp-model-ft-pytorch-docker-uwsgi-and-nginx.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Shreya Khurana</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/train-serve-deploy-story-of-a-nlp-model-ft-pytorch-docker-uwsgi-and-nginx.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quickly prototype a machine translation model from scratch and learn how to serve it in production&lt;/p&gt;
&lt;p&gt;Natural language processing has seen leaps of technology progress with Machine Learning becoming the norm of solving the major problems in this area, with Machine translation being one of the major problems in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Quickly prototype a machine translation model from scratch and learn how to serve it in production&lt;/p&gt;
&lt;p&gt;Natural language processing has seen leaps of technology progress with Machine Learning becoming the norm of solving the major problems in this area, with Machine translation being one of the major problems in this area. Neural machine translation systems are now used to convert sentences or phrases from one language to another, or in general, for sequence to sequence modeling. In this talk, we’ll be covering the steps from scratch to preprocess, train and serve a NMT model using PyTorch. While building a highly accurate model is a prerequisite to getting good quality translations, often in industry, we also need to make sure we can serve the model to customers without getting timeouts or delays. The practice of serving models requires creating a web app to get client requests and process them in a way the model would understand. For this, we’ll use  the various components of the application server environment - Flask, Docker, uwsgi and nginx. This talk is suitable for audience who is working in general with ML models and want to learn how to serve them or working specifically with NMT and want to learn about some quick prototyping tips.&lt;/p&gt;
&lt;p&gt;Prerequisites: Audience should be comfortable with the basic ML terminology and procedure of training models. NLP knowledge will be good, but is not a necessity as the focus will be on quick prototyping in production.&lt;/p&gt;
&lt;p&gt;By the end of the talk, the audience will have:
- Learnt how to preprocess data for NLP systems
- Learnt how to quickly prototype and train a translation model
- Learnt how to create a web app for the NLP model using Flask
- Learnt how to containerize a pytorch model using Docker
- Learnt how to serve the model as an app using uwsgi, nginx and&lt;/p&gt;
&lt;p&gt;Outline:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to translation systems, machine translation framework&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ML Modelling
- Preprocessing data
- Training
- Generating new translations&lt;/p&gt;
&lt;p&gt;Serving and prototyping
- Flask app
- Docker container
- Nginx + uwsgi + supervisord configurations
- Putting it all together&lt;/p&gt;
&lt;p&gt;Good practices
Q/A (optional?)&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Data Science"></category><category term="Deep Learning"></category><category term="Machine-Learning"></category><category term="Natural Language Processing"></category><category term="Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"></category></entry><entry><title>Why Transformers Work</title><link href="https://pyvideo.org/europython-2020/why-transformers-work.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Vincent D. Warmerdam</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/why-transformers-work.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;And RNNs Fall Short&lt;/p&gt;
&lt;p&gt;This will be a technical talk where I'll explain the inner workings of the machine learning algorithms inside of Rasa. In particular I'll talk about why the transformer has become a part in many of our algorithms and has replaced RNNs. These include use-cases in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;And RNNs Fall Short&lt;/p&gt;
&lt;p&gt;This will be a technical talk where I'll explain the inner workings of the machine learning algorithms inside of Rasa. In particular I'll talk about why the transformer has become a part in many of our algorithms and has replaced RNNs. These include use-cases in natural language processing but also in dialogue handling.&lt;/p&gt;
&lt;p&gt;You'll see a live demo of a typical error that an LSTM would make but a transformer wouldn't. The algorithms are explained with calm diagrams and very little maths.&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Algorithms"></category><category term="Deep Learning"></category><category term="Natural Language Processing"></category></entry><entry><title>Your Name Is Invalid!</title><link href="https://pyvideo.org/europython-2020/your-name-is-invalid.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/your-name-is-invalid.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Names of people cannot be invalid. Your app shouldn't.&lt;/p&gt;
&lt;p&gt;People have names. Most people do. People have first names and last names. Many people do. People have any sorts of names that often don't fit fixed fields in the forms. These names may contain letters, accented letters, and other …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Names of people cannot be invalid. Your app shouldn't.&lt;/p&gt;
&lt;p&gt;People have names. Most people do. People have first names and last names. Many people do. People have any sorts of names that often don't fit fixed fields in the forms. These names may contain letters, accented letters, and other characters, that may cause problems to your code depending on the encoding you use. They may look differently in uppercase and lowercase, or may not be case foldable at all. Searching and sorting these names may be tricky too. And if you design an application, web form, and/or database dealing with personal names, you'll have to take that into account.&lt;/p&gt;
&lt;p&gt;This talk is not about GDPR, but will help you to use the best tools to handle encoding and locales in Python and prevent your application from appearing in my talk and in uxfails memes.&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Diversity"></category><category term="Internationalization"></category><category term="Natural Language Processing"></category><category term="The Answer to Life the Universe and Everything Else"></category><category term="failures/mistakes"></category></entry><entry><title>Procesamiento del lenguaje natural en python</title><link href="https://pyvideo.org/pycon-es-2014/procesamiento-del-lenguaje-natural-en-python.html" rel="alternate"></link><published>2015-04-06T00:00:00+00:00</published><updated>2015-04-06T00:00:00+00:00</updated><author><name>Iván Compañy</name></author><id>tag:pyvideo.org,2015-04-06:/pycon-es-2014/procesamiento-del-lenguaje-natural-en-python.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cubre algunos aspectos del procesamiento de lenguaje natural con NLTK (Natural Language ToolKit), explicando por encima en qué consiste, pasos para poder procesar un lenguaje, identificar patrones en un lenguaje y casos de uso útiles para aplicar.&lt;/p&gt;
</content><category term="PyCon ES 2014"></category><category term="nltk"></category><category term="natural language processing"></category></entry><entry><title>Let the AI Do the Talk: Adventures with Natural Language Generation</title><link href="https://pyvideo.org/pycon-italia-2019/let-the-ai-do-the-talk-adventures-with-natural-language-generation.html" rel="alternate"></link><published>2019-05-05T00:00:00+00:00</published><updated>2019-05-05T00:00:00+00:00</updated><author><name>Marco Bonzanini</name></author><id>tag:pyvideo.org,2019-05-05:/pycon-italia-2019/let-the-ai-do-the-talk-adventures-with-natural-language-generation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Recent advances in Artificial Intelligence have shown how computers can
compete with humans in a variety of mundane tasks, but what happens when
creativity is required?&lt;/p&gt;
&lt;p&gt;This talk introduces the concept of Natural Language Generation, the
task of automatically generating text, for examples articles on a
particular topic, poems …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Recent advances in Artificial Intelligence have shown how computers can
compete with humans in a variety of mundane tasks, but what happens when
creativity is required?&lt;/p&gt;
&lt;p&gt;This talk introduces the concept of Natural Language Generation, the
task of automatically generating text, for examples articles on a
particular topic, poems that follow a particular style, or speech
transcripts that express some attitude. Specifically, we’ll discuss the
case for Recurrent Neural Networks, a family of algorithms that can be
trained on sequential data, and how they improve on traditional language
models.&lt;/p&gt;
&lt;p&gt;The talk is for beginners, we’ll focus more on the intuitions behind the
algorithms and their practical implications, and less on the
mathematical details. Practical examples with Python will showcase
Keras, a library to quickly prototype deep learning architectures.&lt;/p&gt;
&lt;p&gt;Brief outline:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to Natural Language Generation&lt;/li&gt;
&lt;li&gt;Language Modelling&lt;/li&gt;
&lt;li&gt;Recurrent Neural Networks and Long Short Term Memory for NLG&lt;/li&gt;
&lt;li&gt;RNN examples with Keras&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feedback form: &lt;a class="reference external" href="https://python.it/feedback-1574"&gt;https://python.it/feedback-1574&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 10:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon Italia 2019"></category><category term="nlp"></category><category term="Keras"></category><category term="natural-language-processing"></category><category term="pydata"></category></entry><entry><title>An Introduction to Sentiment Analysis of Textual Data</title><link href="https://pyvideo.org/pydata-austin-2019/an-introduction-to-sentiment-analysis-of-textual-data.html" rel="alternate"></link><published>2019-12-07T00:00:00+00:00</published><updated>2019-12-07T00:00:00+00:00</updated><author><name>Fatma Tarlaci</name></author><id>tag:pyvideo.org,2019-12-07:/pydata-austin-2019/an-introduction-to-sentiment-analysis-of-textual-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial, you’ll be introduced to Sentiment Analysis (SA), the extraction of subjective, affective information from text through Natural Language Processing (NLP) to enable data-driven decisions. Participants will work through a step-by-step application of SA to build a sound knowledge of its different components and an understanding …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial, you’ll be introduced to Sentiment Analysis (SA), the extraction of subjective, affective information from text through Natural Language Processing (NLP) to enable data-driven decisions. Participants will work through a step-by-step application of SA to build a sound knowledge of its different components and an understanding of this powerful technique in various business settings&lt;/p&gt;
</content><category term="PyData Austin 2019"></category><category term="sentiment analysis"></category><category term="natural language processing"></category><category term="nlp"></category></entry><entry><title>Enhancing Common Natural Language Processing with Cognitive Linguistics</title><link href="https://pyvideo.org/pydata-austin-2019/enhancing-common-natural-language-processing-with-cognitive-linguistics.html" rel="alternate"></link><published>2019-12-07T00:00:00+00:00</published><updated>2019-12-07T00:00:00+00:00</updated><author><name>Chris Leonard</name></author><id>tag:pyvideo.org,2019-12-07:/pydata-austin-2019/enhancing-common-natural-language-processing-with-cognitive-linguistics.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will present an overview of what we have learned in my company from combining our own proprietary cognitive linguistics technology with simple NLP methods such as sentiment analysis and named entity recognition. We will explore several use cases and discuss the impact of using both approaches together.&lt;/p&gt;
</content><category term="PyData Austin 2019"></category><category term="nlp"></category><category term="natural language processing"></category><category term="cognitive linguistics"></category></entry><entry><title>Multilingual embeddings to scale NLP models to multiple languages</title><link href="https://pyvideo.org/pydata-austin-2019/multilingual-embeddings-to-scale-nlp-models-to-multiple-languages.html" rel="alternate"></link><published>2019-12-07T00:00:00+00:00</published><updated>2019-12-07T00:00:00+00:00</updated><author><name>Deeksha Yennam</name></author><id>tag:pyvideo.org,2019-12-07:/pydata-austin-2019/multilingual-embeddings-to-scale-nlp-models-to-multiple-languages.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In NLP, we often come across situations where the text documents are not limited to one language. In this talk, we'll explore multilingual embeddings as an alternative to traditional word embeddings for creating NLP models that can scale effectively to data in multiple languages.&lt;/p&gt;
</content><category term="PyData Austin 2019"></category><category term="nlp"></category><category term="natural language processing"></category></entry></feed>