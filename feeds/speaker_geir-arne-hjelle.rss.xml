<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Geir Arne Hjelle</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 14 Aug 2023 00:00:00 +0000</lastBuildDate><item><title>Introduction to NumPy</title><link>https://pyvideo.org/euroscipy-2023/introduction-to-numpy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NumPy is one of the foundational packages for doing data science with Python. It enables numerical computing by providing powerful N-dimensional arrays and a suite of numerical computing tools. In this tutorial, you'll be introduced to NumPy arrays and learn how to create and manipulate them. Then, you'll see some of the tools that NumPy provides, including random number generators and linear algebra routines.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geir Arne Hjelle</dc:creator><pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-08-14:/euroscipy-2023/introduction-to-numpy.html</guid><category>EuroSciPy 2023</category></item><item><title>Plugins: Adding Flexibility to Your Apps</title><link>https://pyvideo.org/pycon-us-2019/plugins-adding-flexibility-to-your-apps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a flexible language. Your Python app, on the other hand, is
usually more set in stone: buttons, functions, displays are all
explicitly defined.&lt;/p&gt;
&lt;p&gt;In this talk you'll learn how to take advantage of features like
decorators and functions as first-class objects to set up a simple
plugin system that allows your app to be more flexible. In fact, you can
allow your users to add or customize functionality they want after you
ship.&lt;/p&gt;
&lt;p&gt;By using plugins, your code becomes more modular and maintainable. At
the same time your users may be able to use your great app to work with
data or challenges you didn't even know existed.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geir Arne Hjelle</dc:creator><pubDate>Sun, 05 May 2019 13:10:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:/pycon-us-2019/plugins-adding-flexibility-to-your-apps.html</guid><category>PyCon US 2019</category><category>talk</category></item><item><title>Introduction to Decorators: Power Up Your Python Code</title><link>https://pyvideo.org/pycon-us-2020/introduction-to-decorators-power-up-your-python-code.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geir Arne Hjelle</dc:creator><pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-04-17:/pycon-us-2020/introduction-to-decorators-power-up-your-python-code.html</guid><category>PyCon US 2020</category><category>tutorial</category></item><item><title>Introduction to Decorators: Power UP Your Python Code</title><link>https://pyvideo.org/pycon-us-2021/introduction-to-decorators-power-up-your-python-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python supports functions as first-class objects. This means that functions can be assigned to variables, and passed to and from other functions, just like any other object in Python.&lt;/p&gt;
&lt;p&gt;One powerful application of this is the decorator syntax, which makes it easy to apply one function to another at compile time. Decorators offer a simple and readable way of adding capabilities to your code. This tutorial will teach you how decorators work, and how to create your own decorators.&lt;/p&gt;
&lt;p&gt;Being comfortable with using and creating decorators, will make you a more efficient Python programmer.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geir Arne Hjelle</dc:creator><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-05-14:/pycon-us-2021/introduction-to-decorators-power-up-your-python-code.html</guid><category>PyCon US 2021</category></item><item><title>Lightning Talks - Day 3</title><link>https://pyvideo.org/pycon-us-2022/lightning-talks-day-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are a ~ 5 minutes long, on any topic of interest to other Python people. It doesn't have to be about something that you wrote, it can be something that you learned, or a technique you think other people will be interested in.&lt;/p&gt;
&lt;p&gt;Speakers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:23 - Pandy Knight - How to write a test case&lt;/li&gt;
&lt;li&gt;05:09 - Shreya Batra - The Effects of Computational THinking&lt;/li&gt;
&lt;li&gt;09:36 - Patrick Arminio - The fastest way to fetch the latest python version&lt;/li&gt;
&lt;li&gt;11:57 - Ray McLendon - Not all data is created equal&lt;/li&gt;
&lt;li&gt;16:24 - Geir Arne Hjelle - Reading PEPs&lt;/li&gt;
&lt;li&gt;21:30 - Jonathan Helmus - Pip install Python?&lt;/li&gt;
&lt;li&gt;26:07 - Jelle Zijlstra - PEP 688: Typing for the buffer protocol&lt;/li&gt;
&lt;li&gt;29:30 - Nick Muoh - Post pandemic meetuup&lt;/li&gt;
&lt;li&gt;33:25 - multiple speakers talking about Regional Python Conferences&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pandy Knight</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-04-27:/pycon-us-2022/lightning-talks-day-3.html</guid><category>PyCon US 2022</category><category>lightning talks</category></item><item><title>Introduction to Decorators: Power Up Your Python Code</title><link>https://pyvideo.org/pycon-us-2023/introduction-to-decorators-power-up-your-python-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You can use decorators in your Python code to change the behavior of one
or several functions. Many popular libraries are based on decorators.
For example, you can use decorators to register functions as web
endpoints, mark functions for JIT compilation, or profile your
functions.&lt;/p&gt;
&lt;p&gt;Using decorators makes your code simpler and more readable. However, to
unlock the full capability of decorators, you should also be comfortable
writing your own. In this tutorial, you'll learn how decorators work
under the hood, and you'll get plenty of practice writing your own
decorators.&lt;/p&gt;
&lt;p&gt;You'll be introduced to necessary background information about how
functions are first-class objects in Python and how you can define inner
functions. You'll learn how to unwrap the &lt;tt class="docutils literal"&gt;&amp;#64;decorator&lt;/tt&gt; syntactic sugar
and how to write solid decorators that you can use in your code.&lt;/p&gt;
&lt;p&gt;Being comfortable with using and creating decorators will make you a
more efficient Python programmer.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geir Arne Hjelle</dc:creator><pubDate>Thu, 20 Apr 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-04-20:/pycon-us-2023/introduction-to-decorators-power-up-your-python-code.html</guid><category>PyCon US 2023</category></item></channel></rss>