<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Tue, 11 Apr 2017 00:00:00 +0000</lastBuildDate><item><title>Blocked on I/O: The Pitfalls of Event-Driven Programming</title><link>https://pyvideo.org/montreal-python/blocked-on-io-the-pitfalls-of-event-driven-programming.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Ward</dc:creator><pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-11:montreal-python/blocked-on-io-the-pitfalls-of-event-driven-programming.html</guid></item><item><title>How to Write Reusable Code</title><link>https://pyvideo.org/montreal-python/how-to-write-reusable-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Montreal, March 16th, 2015, by Greg Ward - Learning to write high-quality, reusable code takes years of dedicated work. Or you can take a shortcut: attend this talk and learn some of the tricks I've figured out over a couple of decades of programming.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Contact Greg: &lt;a class="reference external" href="https://twitter.com/gergdotca"&gt;https://twitter.com/gergdotca&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MP52: &lt;a class="reference external" href="http://sflx.ca/mp52"&gt;http://sflx.ca/mp52&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Montreal Python: &lt;a class="reference external" href="http://montrealpython.org"&gt;http://montrealpython.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Savoir-faire Linux: &lt;a class="reference external" href="http://sflx.ca/jobs"&gt;http://sflx.ca/jobs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As seen at PyCon 2015:
/&lt;a class="reference external" href="https://us.pycon.org/2015/schedule/presentation/338/"&gt;https://us.pycon.org/2015/schedule/presentation/338/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Ward</dc:creator><pubDate>Mon, 16 Mar 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-03-16:montreal-python/how-to-write-reusable-code.html</guid></item><item><title>Unit Testing Makes Your Code Better</title><link>https://pyvideo.org/montreal-python/unit-testing-makes-your-code-better.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Montreal, March 10, 2014 - Python contributor Greg Ward explains how  using automated testing in a rigorous, disciplined way will not merely help you to write more correct code, but will also make you a better programmer.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;PyCon Replay: &lt;a class="reference external" href="http://youtu.be/ArLf03-RLwU"&gt;http://youtu.be/ArLf03-RLwU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Greg: &lt;a class="reference external" href="http://sflx.ca/gward"&gt;http://sflx.ca/gward&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MP44: &lt;a class="reference external" href="http://sflx.ca/mp44e"&gt;http://sflx.ca/mp44e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Montreal Python: &lt;a class="reference external" href="http://montrealpython.org"&gt;http://montrealpython.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Savoir-faire Linux: &lt;a class="reference external" href="http://www.savoirfairelinux.com"&gt;http://www.savoirfairelinux.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Ward</dc:creator><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-03-10:montreal-python/unit-testing-makes-your-code-better.html</guid></item><item><title>Go for Python Hackers</title><link>https://pyvideo.org/montreal-python/go-for-python-hackers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A live presentation by Greg Ward.&lt;/p&gt;
&lt;p&gt;Read more: &lt;a class="reference external" href="http://sflx.ca/mp39"&gt;http://sflx.ca/mp39&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Ward</dc:creator><pubDate>Mon, 09 Sep 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-09-09:montreal-python/go-for-python-hackers.html</guid></item><item><title>Version control worst practices</title><link>https://pyvideo.org/pycon-ca-2016/version-control-worst-practices.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nowadays, everybody uses version control. But until you learn to
&lt;em&gt;misuse&lt;/em&gt; your version control system, you're missing out on ways to
minimize developer productivity and pessimize your workflow. I'll show
you 12 time-tested worst practices that will set you down the wrong path
from Day One.&lt;/p&gt;
&lt;div class="section" id="greg-ward-bio"&gt;
&lt;h4&gt;Greg Ward Bio&lt;/h4&gt;
&lt;p&gt;I've been using and creating open source software since before the term
&amp;quot;open source&amp;quot; was coined, and involved with the Python community since
the late nineties. I've written or contributed to several modules in the
standard library. And I've been working as a programmer for over 20
years. I don't think I've made every mistake in the book, but I've made
a lot of them, and I hope to share some of the things I have learned the
hard way and save you the trouble.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Ward</dc:creator><pubDate>Sat, 12 Nov 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-11-12:pycon-ca-2016/version-control-worst-practices.html</guid></item><item><title>Lightning Talks - 2016-05-31 AM</title><link>https://pyvideo.org/pycon-us-2016/lightning-talks-2016-05-31-am.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christine Spang</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-01:pycon-us-2016/lightning-talks-2016-05-31-am.html</guid><category>lightning talks</category></item><item><title>Go for Python Hackers</title><link>https://pyvideo.org/pycon-ca-2013/go-for-python-hackers-0.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;There is a resurgence of native-compiled programming languages going on.
Some of this work is in response to Python; we're now part of The
Establishment against which newcomers are measured. I'll give an
overview of Go, a recent native-compiled language, and how it relates to
Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Ward</dc:creator><pubDate>Sun, 11 Aug 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-08-11:pycon-ca-2013/go-for-python-hackers-0.html</guid><category>talk</category></item><item><title>Unit Testing Makes Your Code Better</title><link>https://pyvideo.org/pycon-us-2014/unit-testing-makes-your-code-better.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Unit testing is like public transit: everyone agrees it's a good thing
for other people to do. It's easier to swallow when you see how unit
testing improves not only the correctness of your code, but the design
as well. I'll walk through a real-life case study where adding unit
tests turned a pretty good module into an even better one: easier to
understand, extend, and reuse.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Ward</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/unit-testing-makes-your-code-better.html</guid></item><item><title>How to Write Reusable Code</title><link>https://pyvideo.org/pycon-us-2015/how-to-write-reusable-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learning to write high-quality, reusable code takes years of dedicated
work. Or you can take a shortcut: attend this talk and learn some of the
tricks I've figured out over a couple of decades of programming.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Ward</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-11:pycon-us-2015/how-to-write-reusable-code.html</guid></item></channel></rss>