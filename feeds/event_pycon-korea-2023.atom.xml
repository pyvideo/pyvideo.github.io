<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - PyCon Korea 2023</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-korea-2023.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-08-13T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Chatbot Framework with Python</title><link href="https://pyvideo.org/pycon-korea-2023/chatbot-framework-with-python.html" rel="alternate"></link><published>2023-08-13T00:00:00+00:00</published><updated>2023-08-13T00:00:00+00:00</updated><author><name>Jo Seong-bin</name></author><id>tag:pyvideo.org,2023-08-13:/pycon-korea-2023/chatbot-framework-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session, we will cover how chatbot frameworks work using &amp;quot;Rasa&amp;quot;, an open source chatbot framework in Python, and &amp;quot;LangChain&amp;quot;, an open source framework that helps build LLM applications easily. Chatbots need to perform tasks such as &amp;quot;intent classification&amp;quot; to identify the intent of a user's utterance, &amp;quot;entity …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session, we will cover how chatbot frameworks work using &amp;quot;Rasa&amp;quot;, an open source chatbot framework in Python, and &amp;quot;LangChain&amp;quot;, an open source framework that helps build LLM applications easily. Chatbots need to perform tasks such as &amp;quot;intent classification&amp;quot; to identify the intent of a user's utterance, &amp;quot;entity recognition&amp;quot; to identify necessary information from the user's utterance, and &amp;quot;slot filling&amp;quot;. In addition, they need to generate appropriate responses from the classified intents, and they need to know how to deal with sudden changes in the user's utterance intent. In this session, we will look at how Rasa handles these problems. We will also briefly cover how to build a Chit-Chat application using LangChain, which helps build LLM applications easily.&lt;/p&gt;
&lt;p&gt;Seongbin Cho
Hello. I am Seongbin Cho, who loves Python. I majored in humanities, but I learned about the field of natural language processing late and fell in love with development. Thanks to many people who share their knowledge, I am able to keep moving forward day by day without giving up. I don't take for granted what I've received, and I hope it can be of some help to others.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>A journey to develop a package for learning lists and dictionaries</title><link href="https://pyvideo.org/pycon-korea-2023/a-journey-to-develop-a-package-for-learning-lists-and-dictionaries.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Han Sang-gon</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/a-journey-to-develop-a-package-for-learning-lists-and-dictionaries.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While conducting the Python 101 class, I created a small Python package to explain lists and dictionaries in a fun way. This session introduces the process by which 101 participants became interested in the Python 101 class by using the package, my experience, and a simple method for anyone …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While conducting the Python 101 class, I created a small Python package to explain lists and dictionaries in a fun way. This session introduces the process by which 101 participants became interested in the Python 101 class by using the package, my experience, and a simple method for anyone to easily create their own small package. I hope this will be of some help to those who are interested in Python 101 education.&lt;/p&gt;
&lt;p&gt;Han Sang-gon
Hello. I am currently working as a Microsoft MVP. I am currently studying programming languages ​​at a university in Busan, and I am also taking Python classes and studying Djanog. Nice to meet you.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>A Python2 developer's Python3 development challenge</title><link href="https://pyvideo.org/pycon-korea-2023/a-python2-developers-python3-development-challenge.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Daniel</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/a-python2-developers-python3-development-challenge.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A developer who used Python2 8 years ago shares his vivid experience of developing using Python3 in 2023 and four new features of Python3 that he learned.&lt;/p&gt;
&lt;p&gt;Daniel Lee
I love development stories. I am interested in all topics related to the web, backend, frontend, and development culture. I …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A developer who used Python2 8 years ago shares his vivid experience of developing using Python3 in 2023 and four new features of Python3 that he learned.&lt;/p&gt;
&lt;p&gt;Daniel Lee
I love development stories. I am interested in all topics related to the web, backend, frontend, and development culture. I am currently working as a developer at Google in San Francisco, USA.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>A strategy for effectively processing and analyzing large-sized data in a local environment</title><link href="https://pyvideo.org/pycon-korea-2023/a-strategy-for-effectively-processing-and-analyzing-large-sized-data-in-a-local-environment.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Oh Seong-woo</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/a-strategy-for-effectively-processing-and-analyzing-large-sized-data-in-a-local-environment.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session was prepared to provide answers and directions to the question I recently received, &amp;quot;The data size is over 5TB and is too large to be stored on a hard disk. How should I read and analyze the data?&amp;quot; It will be a useful session for those who …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session was prepared to provide answers and directions to the question I recently received, &amp;quot;The data size is over 5TB and is too large to be stored on a hard disk. How should I read and analyze the data?&amp;quot; It will be a useful session for those who have similar concerns.&lt;/p&gt;
&lt;p&gt;1️⃣ First, this session will introduce strategies for processing large amounts of data using Pandas and related libraries.
Pandas has played an important role in data processing, but its limitations are becoming more apparent as we enter the era of the cloud and large amounts of data.&lt;/p&gt;
&lt;p&gt;We will look at the timeline and major changes from the first release in 2008 to the release of Pandas 2.0 in April of this year, 2023.&lt;/p&gt;
&lt;p&gt;2️⃣ Next, we will cover the process of verifying whether the strategies presented in the session announced in 2019 are still valid in 2023.&lt;/p&gt;
&lt;p&gt;Through this process, we will be able to take a deep look at whether the existing strategies are suitable for the current data environment and what parts have been improved.&lt;/p&gt;
&lt;p&gt;Before attending this session, it would be good to check and participate in the strategy presented in 2019 by following the link below.
• Presentation video: &lt;a class="reference external" href="https://www.youtube.com/watch?v=0Vm9Yi_ig58"&gt;https://www.youtube.com/watch?v=0Vm9Yi_ig58&lt;/a&gt;
• Presentation materials: &lt;a class="reference external" href="https://drive.google.com/file/d/12faqaslFIF-Sg_sU3jeGyauW5ClRqS8D/view"&gt;https://drive.google.com/file/d/12faqaslFIF-Sg_sU3jeGyauW5ClRqS8D/view&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3️⃣ In particular, we will look at what changes have occurred through the application of CoW and integration with Apache Arrow in Pandas 2.0.
And we have also added new contents on Method Chaining and String data types.&lt;/p&gt;
&lt;p&gt;4️⃣ Next, we will look at a useful tool for streaming and processing large amounts of data,&lt;/p&gt;
&lt;p&gt;Oh Seong-woo
I have been working in the machine learning and artificial intelligence fields for nearly 10 years and have received help from Python and numerous open source communities. I worked as an AI engineer in the field of natural language processing at KB Kookmin Bank and mainly learned language models and developed chatbots. Recently, I have been applying the SFT model to practice, and I am also working on various tasks for the development and application of generative AI. As for open community activities, I am studying the LLM of the Ultra-Large Language Model at the Korea Institute of Financial Artificial Intelligence (KIFAI), and I am also planning to develop/open the Financial AI Assistant for the general public.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Async State Machine</title><link href="https://pyvideo.org/pycon-korea-2023/async-state-machine.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Lee Sang Hoon</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/async-state-machine.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This presentation presents the challenges of tracking and managing the state of long-running tasks in distributed systems implemented in Python, and abstract ideas to solve them.
Please keep in mind that this is a light presentation with only high-level abstract examples, without detailed Python code implementations, although there are …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This presentation presents the challenges of tracking and managing the state of long-running tasks in distributed systems implemented in Python, and abstract ideas to solve them.
Please keep in mind that this is a light presentation with only high-level abstract examples, without detailed Python code implementations, although there are code examples.&lt;/p&gt;
&lt;p&gt;Lee Sang-hoon
A third-year Python developer. A junior who thinks a lot about what makes good software. TMI: I like CrossFit, meat, and bread.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Challenge of writing a binding for a distributed system algorithm implementation using PyO3</title><link href="https://pyvideo.org/pycon-korea-2023/challenge-of-writing-a-binding-for-a-distributed-system-algorithm-implementation-using-pyo3.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Lee Kyu-bong</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/challenge-of-writing-a-binding-for-a-distributed-system-algorithm-implementation-using-pyo3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This presentation will cover technical details related to Python binding, which I have spent the most time thinking about since joining Lablup and which I am currently working on.&lt;/p&gt;
&lt;p&gt;More specifically, I will cover technical details related to reference type abstraction to overcome the memory management differences between Rust …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This presentation will cover technical details related to Python binding, which I have spent the most time thinking about since joining Lablup and which I am currently working on.&lt;/p&gt;
&lt;p&gt;More specifically, I will cover technical details related to reference type abstraction to overcome the memory management differences between Rust and Python, as well as technical details related to trait exposure and exception handling.&lt;/p&gt;
&lt;p&gt;Since the topic covers technical details, it will be helpful to understand the presentation if you have prior knowledge of Rust or PyO3, but I have prepared it so that you can roughly understand the presentation content even if you do not.&lt;/p&gt;
&lt;p&gt;Lee Gyu-bong
Lablup DevOps / Developer. A developer interested in various open source activities. Currently, I am challenging and working on various issues related to distributed systems at the company. This presentation will cover technical details related to Python binding, which I have spent the most time thinking about since joining Lablup and which I am currently working on.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Composing electronic music with Python</title><link href="https://pyvideo.org/pycon-korea-2023/composing-electronic-music-with-python.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Yoo Tae-young</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/composing-electronic-music-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While learning MIDI composition, I thought it would be fun to implement a synthesizer in Python, so I planned this session. This session introduces the process of designing sounds and creating music using Python.&lt;/p&gt;
&lt;p&gt;We will learn how computers handle digital audio and how to create music digitally. We …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While learning MIDI composition, I thought it would be fun to implement a synthesizer in Python, so I planned this session. This session introduces the process of designing sounds and creating music using Python.&lt;/p&gt;
&lt;p&gt;We will learn how computers handle digital audio and how to create music digitally. We will implement a synthesizer using numpy and pedalboard in Python. We will implement instruments such as piano and drums ourselves and play short music created with the instruments we implemented. No other tools other than Python will be used in this process.&lt;/p&gt;
&lt;p&gt;Yoo Tae-young
Hello, I am Yoo Tae-young, a backend engineer at ad-tech company Buzzville. I develop and operate ad recommendation and allocation services using Python and Go. I like jazz music and playing the piano.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Creating a chat backend service using Django and FastAPI</title><link href="https://pyvideo.org/pycon-korea-2023/creating-a-chat-backend-service-using-django-and-fastapi.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Kim Ji-hoon</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/creating-a-chat-backend-service-using-django-and-fastapi.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presenter introduction, service configuration diagram, description of django configuration parts, description of FastAPI configuration parts, demo video&lt;/p&gt;
&lt;p&gt;Kim Ji-hoon
I run a blockchain development company.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Creating a Linux Authentication Module Using Python</title><link href="https://pyvideo.org/pycon-korea-2023/creating-a-linux-authentication-module-using-python.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Yoo Seong-jin</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/creating-a-linux-authentication-module-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the PAM authentication process, we will introduce PAM-Python, which can implement the authentication process using Python, and learn how to use it.&lt;/p&gt;
&lt;p&gt;Yoo Seong-jin
When I started learning Python to use it for work as a system engineer, I didn't know I would become a developer, but I …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the PAM authentication process, we will introduce PAM-Python, which can implement the authentication process using Python, and learn how to use it.&lt;/p&gt;
&lt;p&gt;Yoo Seong-jin
When I started learning Python to use it for work as a system engineer, I didn't know I would become a developer, but I ended up experiencing many projects in various languages, including Go, TypeScript, and JAVA. Now, I am in charge of infrastructure platform development and service backend development at Portray, which researches innovation in the new drug development process using space transcriptomes and artificial intelligence. I am trying to think about what better code and a good development culture are and put them into practice.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Dealing with salty data</title><link href="https://pyvideo.org/pycon-korea-2023/dealing-with-salty-data.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Park Jo-eun</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/dealing-with-salty-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The memory size we usually use ranges from 4G to 64G or more. Some companies use larger memory, but most of them are limited to using good equipment due to cost issues.
In a limited environment, purchasing expensive equipment can allow for more data and processing, but the reality …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The memory size we usually use ranges from 4G to 64G or more. Some companies use larger memory, but most of them are limited to using good equipment due to cost issues.
In a limited environment, purchasing expensive equipment can allow for more data and processing, but the reality may not be easy. I would like to use Python to solve various methods that can be used when dealing with large data in a limited environment without spending money.&lt;/p&gt;
&lt;p&gt;Park Jo-eun
I run a YouTube channel called 'Today's Code'. I am also a Microsoft MVP, and I am interested in data and enjoy dealing with data with Python. I have mainly worked as a backend developer at games and advertising companies, and recently I have been giving lectures, creating content, and working on projects at companies, educational institutions, and schools in various domains.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Deep dive into Python through CPython code</title><link href="https://pyvideo.org/pycon-korea-2023/deep-dive-into-python-through-cpython-code.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Han Seong-min</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/deep-dive-into-python-through-cpython-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When working with Python, we often encounter low-level implementations such as CPU/IO Bound, Selector, Global Interpreter Lock, and AsyncIO. And sometimes, we do not understand the functions of the structure exactly and often develop while memorizing the code pattern.&lt;/p&gt;
&lt;p&gt;When we have to apply the low-level implementation, we …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When working with Python, we often encounter low-level implementations such as CPU/IO Bound, Selector, Global Interpreter Lock, and AsyncIO. And sometimes, we do not understand the functions of the structure exactly and often develop while memorizing the code pattern.&lt;/p&gt;
&lt;p&gt;When we have to apply the low-level implementation, we cannot implement it because we have deviated from the memorized pattern, and in this way, we fall into the continuation of abstraction.&lt;/p&gt;
&lt;p&gt;In this presentation session, we have prepared a diagram of the low-level implementations we encounter in Python using CPython code and computer science theories, so that you can take the first step toward understanding the principles that were difficult to understand.&lt;/p&gt;
&lt;p&gt;Han Seong-min
An engineer who is interested in MLOps and focuses on productization of AI. He is also a member of the GDG community and is trying to create opportunities to foster the developer ecosystem in Korea and exchange information.&lt;/p&gt;
&lt;p&gt;He is currently focusing on configuring the MLOps pipeline for the global market, and he works with engineers from various countries while traveling between offices in Korea and the United States.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Developing web-based operational tools with the Pynecone framework</title><link href="https://pyvideo.org/pycon-korea-2023/developing-web-based-operational-tools-with-the-pynecone-framework.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Lim Chan-sik</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/developing-web-based-operational-tools-with-the-pynecone-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It is not easy to create the necessary operational tools while developing and operating a service. In particular, in a situation where the proportion of backend developers is high, developing web-based tools can be a huge burden.
However, if you use various open sources that help with web development …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It is not easy to create the necessary operational tools while developing and operating a service. In particular, in a situation where the proportion of backend developers is high, developing web-based tools can be a huge burden.
However, if you use various open sources that help with web development, you can easily start developing the necessary operational tools. In this session, I would like to share my experience developing a web-based operational tool using the Pynecone framework among the various open source projects mentioned above.&lt;/p&gt;
&lt;p&gt;Lim Chan-sik
I use Python for various purposes while developing backend systems or operating platforms. Recently, I am developing an on-premise serving platform that can operate high-performance applications based on Kubernetes. I am developing various tools necessary for platform operation in Python, which helps me reduce repetitive tasks and makes operation easier.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Django Spring is coming again</title><link href="https://pyvideo.org/pycon-korea-2023/django-spring-is-coming-again.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Jeonggyeongup</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/django-spring-is-coming-again.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is good code?&lt;/p&gt;
&lt;p&gt;All developers want to write good code.&lt;/p&gt;
&lt;p&gt;However, it is difficult to define exactly what good code is.&lt;/p&gt;
&lt;p&gt;It is not possible to define good code in all situations,
but I have summarized the characteristics of good code based on web services.&lt;/p&gt;
&lt;p&gt;In this presentation …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is good code?&lt;/p&gt;
&lt;p&gt;All developers want to write good code.&lt;/p&gt;
&lt;p&gt;However, it is difficult to define exactly what good code is.&lt;/p&gt;
&lt;p&gt;It is not possible to define good code in all situations,
but I have summarized the characteristics of good code based on web services.&lt;/p&gt;
&lt;p&gt;In this presentation, I will explain how to write good code,
using Django as an example, as easily as possible.&lt;/p&gt;
&lt;p&gt;When you feel that your productivity is decreasing while developing,
I prepared this presentation in the hope that you can take a moment to organize your thoughts and get ideas.&lt;/p&gt;
&lt;p&gt;Jeong Gyeong-eop
I am a developer who has been using Django in the field for a long time to create and operate web services. I have pursued sustainable development while working on various startups and domains. I have been a firefighter many times, and I am currently working as a freelancer.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Easily produce and share content using Jupyter Books</title><link href="https://pyvideo.org/pycon-korea-2023/easily-produce-and-share-content-using-jupyter-books.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>An Seong-jin</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/easily-produce-and-share-content-using-jupyter-books.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When conducting data analysis and research using ython, .ipynb files are mainly used. When sharing the content publicly, GitHub is mainly used. Since GitHub is a developer-friendly code management platform, it is not an efficient platform for non-developer decision makers, stakeholders, and others to consume the content. In this …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When conducting data analysis and research using ython, .ipynb files are mainly used. When sharing the content publicly, GitHub is mainly used. Since GitHub is a developer-friendly code management platform, it is not an efficient platform for non-developer decision makers, stakeholders, and others to consume the content. In this session, we will look at how to use Jupyter Book to convert .ipynb files into publication-level results and share them online so that anyone can easily access them.&lt;/p&gt;
&lt;p&gt;Sungjin Ahn
I am interested in technologies related to cloud, machine learning, and data science. I am also interested in resolving information gap issues caused by language factors. I am working as a Technical Trainer at Microsoft and am giving lectures to make it easy to understand Data &amp;amp; AI services in Azure.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>FastAPI Deep Dive</title><link href="https://pyvideo.org/pycon-korea-2023/fastapi-deep-dive.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Information Ram</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/fastapi-deep-dive.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You may have heard of Django and Flask, the two major Python web frameworks.
Since its release in 2018, there is a new web framework that has been rapidly gaining popularity among developers.
It is called FastAPI. It was introduced at PyCon.
I think many of you have experienced …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You may have heard of Django and Flask, the two major Python web frameworks.
Since its release in 2018, there is a new web framework that has been rapidly gaining popularity among developers.
It is called FastAPI. It was introduced at PyCon.
I think many of you have experienced it at least once.&lt;/p&gt;
&lt;p&gt;In this session, we will look at the differences between existing Django, Flask, and FastAPI.
And as the name suggests, we will look at the architecture with a focus on how FastAPI was able to achieve &amp;quot;Fast.&amp;quot;&lt;/p&gt;
&lt;p&gt;Jeong Bo-ram
Currently working as a Solution Architect at Microsoft. Before that, I worked on embedded development and financial backend development for about 10 years. I give various lectures in the infrastructure field. I am interested in developing fast, stable, and highly productive code, and I am honored to be given the opportunity to introduce FastAPI.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Growing with Open SourceFeat Django</title><link href="https://pyvideo.org/pycon-korea-2023/growing-with-open-sourcefeat-django.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Bae Doo-sik</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/growing-with-open-sourcefeat-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;‘Growth’, the concern of all developers!&lt;/p&gt;
&lt;p&gt;I will share my experience of growing as a developer through open source contributions. I prepared the presentation based on what I learned while contributing to ‘Django’, a representative web framework in Python among many open sources.
As a developer, I was able …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;‘Growth’, the concern of all developers!&lt;/p&gt;
&lt;p&gt;I will share my experience of growing as a developer through open source contributions. I prepared the presentation based on what I learned while contributing to ‘Django’, a representative web framework in Python among many open sources.
As a developer, I was able to experience growing not only technically but also mentally while contributing to open source.&lt;/p&gt;
&lt;p&gt;I will also share tips on how to start contributing to open source and tips on how to contribute to open source with others.&lt;/p&gt;
&lt;p&gt;I have not contributed much to open source yet, but I thought it would be good to contribute to open source and grow together with more Korean Python developers, so I decided to give the presentation.&lt;/p&gt;
&lt;p&gt;Bae Doo-sik (Jordan)
I am developing a credit rating analysis platform and data platform at Verticah, which creates the future sales transaction platform, Revenue Market. After graduating from college, I started my career in circuit design at LG and then switched to becoming a software engineer. After switching, I worked as a server engineer, data infrastructure engineer, and data engineer at various large and small startups such as Ateamventures, Sendbird, Chai, and Quotabook. I have been working in various positions and have been solving business and technical problems without any boundaries in the field. I try to make time to contribute to open source often and recently I have been interested in building a good data platform.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Hop on mypy and recursively explore function callers</title><link href="https://pyvideo.org/pycon-korea-2023/hop-on-mypy-and-recursively-explore-function-callers.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Yang Kyung-mo</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/hop-on-mypy-and-recursively-explore-function-callers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you use mypy for static type checking?&lt;/p&gt;
&lt;p&gt;This session will introduce a case of creating a script that finds function callers by applying mypy.&lt;/p&gt;
&lt;p&gt;The script I will introduce was used while participating in a TF that migrated a legacy Python API server to a new project. I …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you use mypy for static type checking?&lt;/p&gt;
&lt;p&gt;This session will introduce a case of creating a script that finds function callers by applying mypy.&lt;/p&gt;
&lt;p&gt;The script I will introduce was used while participating in a TF that migrated a legacy Python API server to a new project. I wanted to do QA by distinguishing only cases where the API writes to the DB. However, the project was too large, so there were too many problems to find them all by hand. The script I wrote at that time helped improve work efficiency by eliminating the manual work of finding DB calls.&lt;/p&gt;
&lt;p&gt;The presentation focuses on the process of creating a script, and includes a look at why mypy was used and the internal structure and operation of mypy.&lt;/p&gt;
&lt;p&gt;Even those who are already familiar with Python are curious about how mypy works or how the script was developed, and I expect that they will gain new knowledge through this session.&lt;/p&gt;
&lt;p&gt;Yang Kyung-mo
A 4th-year developer in charge of backend development for the beauty platform Hwahae, in charge of search and recommendations, and strives to quickly deliver the information you want. Previously, I worked at Buzzvil, an advertising platform company, developing advertising products, and aimed to provide value that satisfies both advertisers and 20 million MAU users. From the beginning of my career, I have used Python as a language to quickly deliver value, and I am refining it with the help of good colleagues. I have been interested in open source and studied it for my own development and to help more people, and thanks to that, I got a great opportunity to present at PyCon.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>How Google Cloud Can Help You Develop Gen AI Apps</title><link href="https://pyvideo.org/pycon-korea-2023/how-google-cloud-can-help-you-develop-gen-ai-apps.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Kim Il-ho</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/how-google-cloud-can-help-you-develop-gen-ai-apps.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why Google for Gen AI? We introduce the reasons and services and technologies that can develop Gen AI apps using Google Cloud.
You can get information that can help customers utilize Gen AI in various fields.&lt;/p&gt;
&lt;p&gt;Kim Il-ho (Andy)
Currently, he helps various customers innovate as a Google Cloud …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why Google for Gen AI? We introduce the reasons and services and technologies that can develop Gen AI apps using Google Cloud.
You can get information that can help customers utilize Gen AI in various fields.&lt;/p&gt;
&lt;p&gt;Kim Il-ho (Andy)
Currently, he helps various customers innovate as a Google Cloud Customer Engineering Manager.
Previously, he worked as a cloud solution architect at Amazon since 2013. Recently, he has been delivering messages about Gen AI.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>How is your Dependency?</title><link href="https://pyvideo.org/pycon-korea-2023/how-is-your-dependency.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Kim Du-hoon</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/how-is-your-dependency.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The computing infrastructures of today run many services, and those services consist of a huge number of modules and frameworks, each of which has a huge number of dependencies. There are too many of them.&lt;/p&gt;
&lt;p&gt;When I ask people around me how to manage dependencies, most of them still …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The computing infrastructures of today run many services, and those services consist of a huge number of modules and frameworks, each of which has a huge number of dependencies. There are too many of them.&lt;/p&gt;
&lt;p&gt;When I ask people around me how to manage dependencies, most of them still don't know how to manage them, and although the environment for managing dependencies has improved greatly in 2023, I realized that many developers end up suffering and having a hard time because of dependencies when I see that many of them end up installing using only pip.&lt;/p&gt;
&lt;p&gt;In particular, there must be many people who know Python well in the field, other than me, who definitely know how to do it, but I made this announcement for those who still don't know.&lt;/p&gt;
&lt;p&gt;I hope that these most important but easily overlooked parts can be developed with less suffering.&lt;/p&gt;
&lt;p&gt;Service is Service, AI is AI, Package and Library development is also very flexible in dependency management, and once you get used to it, you won't have to worry about dependencies much. I think you can reduce your stress with a tool like Poetry!&lt;/p&gt;
&lt;p&gt;Kim Du-hoon
Hello. These days, I'm a person who lives for fun and tinkers with anything. I do C and C++, but I do Python more these days. I try to do as many activities as possible. I also try to do a lot of presentations and things like that these days. I mainly worked on things related to machinery, electricity/electronics, and computers, and I'm especially interested in education and research (AI, Biology, Medical, Financial).&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>How to fix the order of SQL Where clause conditions in Django ORM</title><link href="https://pyvideo.org/pycon-korea-2023/how-to-fix-the-order-of-sql-where-clause-conditions-in-django-orm.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Ahn Sung-hyun</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/how-to-fix-the-order-of-sql-where-clause-conditions-in-django-orm.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Explains how to guarantee the order of conditions in the where clause in Django ORM.&lt;/p&gt;
&lt;p&gt;Explains why the order changes when conditions are added to filter and filter chaining, and why the order is guaranteed when using Q objects. And furthermore, it introduces the process until Django ORM becomes …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Explains how to guarantee the order of conditions in the where clause in Django ORM.&lt;/p&gt;
&lt;p&gt;Explains why the order changes when conditions are added to filter and filter chaining, and why the order is guaranteed when using Q objects. And furthermore, it introduces the process until Django ORM becomes an SQL statement.&lt;/p&gt;
&lt;p&gt;Ahn Sung-hyun (ash84)
Currently serving as CTO at Payhere, and is in charge of backend development. He has been using Python as his main language since 2012. He is mainly interested in software engineering and writing.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category><category term="django"></category><category term="orm"></category></entry><entry><title>How to work effectively with colleagues who are new to Python</title><link href="https://pyvideo.org/pycon-korea-2023/how-to-work-effectively-with-colleagues-who-are-new-to-python.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Lee Tae-hyun</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/how-to-work-effectively-with-colleagues-who-are-new-to-python.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How can I work efficiently with colleagues who are new to Python? This session will discuss the linguistic characteristics of Python, what efficient work is, and what tools Python can use to achieve work efficiency. Come and listen with an open mind!&lt;/p&gt;
&lt;p&gt;Lee Tae-hyun
Be Happy&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Icebreaking with import</title><link href="https://pyvideo.org/pycon-korea-2023/icebreaking-with-import.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Yoon Soo-jin</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/icebreaking-with-import.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When I started using Python, one of the things that I had the most trouble with was import. I wanted to learn about import, which was bothering me, and I hope that sharing the process can be of some help to others.&lt;/p&gt;
&lt;p&gt;Yoon Soo-jin
I am Yoon Soo-jin, a …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When I started using Python, one of the things that I had the most trouble with was import. I wanted to learn about import, which was bothering me, and I hope that sharing the process can be of some help to others.&lt;/p&gt;
&lt;p&gt;Yoon Soo-jin
I am Yoon Soo-jin, a first-year junior developer who loves Python. I am currently developing using Python and Django at the animation streaming company ‘Raftel’. I started developing relatively late, but I got so absorbed in it that I thought I should bury my bones in this field. There is so much to learn as I develop, so every day is happy. When I open my eyes in the morning, I wonder and look forward to what new things I will learn today. I am from 42Seoul, and I like the saying, ‘If you go alone, you will go fast, but if you go together, you will go long.’ I want to become a developer who goes together and for a long time.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>I'm worried about the future where students and parents hate Python.</title><link href="https://pyvideo.org/pycon-korea-2023/im-worried-about-the-future-where-students-and-parents-hate-python.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>spencer</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/im-worried-about-the-future-where-students-and-parents-hate-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Becoming famous is an opportunity to receive a lot of love, but at the same time, it is also a risk of receiving a lot of hate.&lt;/p&gt;
&lt;p&gt;When I saw the phrase 'Again, Us, Python' at this PyCon 2023, as a SW educator,
I thought of the beginning of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Becoming famous is an opportunity to receive a lot of love, but at the same time, it is also a risk of receiving a lot of hate.&lt;/p&gt;
&lt;p&gt;When I saw the phrase 'Again, Us, Python' at this PyCon 2023, as a SW educator,
I thought of the beginning of 2016~2020, when Python was loved and hated a lot.&lt;/p&gt;
&lt;p&gt;The goal of this session is not to 'provide the right answer/solution'.&lt;/p&gt;
&lt;p&gt;Education. Especially, education in Korea is a sensitive and passionate topic, and it is almost impossible to find a 'good' method that will satisfy everyone.&lt;/p&gt;
&lt;p&gt;However, if we can sympathize with the direction.&lt;/p&gt;
&lt;p&gt;If we are prepared with an opportunity and understanding to understand each other's perspectives.&lt;/p&gt;
&lt;p&gt;I think we will be able to find a better decision that more people can sympathize with.&lt;/p&gt;
&lt;p&gt;In this session, we will share the 'background knowledge' necessary to sympathize with the topic of 'Python public education' with those in the 'non-education industry'.
- Python is good for education, but if it's good, it's good, so why is there such a fuss? - Why are you worried that Python, which is doing so well, will be hated?&lt;/p&gt;
&lt;p&gt;If we think about the related background and topic and have more people sympathize,
I expect that we will be more likely to find 'more sympathetic, good methods for Python, students, and parents' than if we don't.&lt;/p&gt;
&lt;p&gt;Spencer
Hello, I'm Spencer. I'm not a developer, but an educator who loves Python. I'm currently an education manager at a boot camp called Programmers DevCourse, and I try to help junior developers in the same space as them. It's been 6 years since I started developing SW education, and these days, I often think about 'Isn't there a realistic way to prevent necessary education from being only for the rich?'&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Improving Debuggability of Complex Asyncio Applications</title><link href="https://pyvideo.org/pycon-korea-2023/improving-debuggability-of-complex-asyncio-applications.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Kim Jun-ki</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/improving-debuggability-of-complex-asyncio-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The most important thing in debugging is observability and reproducibility. Despite the steady improvement of the asyncio standard library, it is still difficult to look inside a complex asyncio application at a production level. Especially when multiple 3rd-party libraries and frameworks that I cannot control are running, it is …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The most important thing in debugging is observability and reproducibility. Despite the steady improvement of the asyncio standard library, it is still difficult to look inside a complex asyncio application at a production level. Especially when multiple 3rd-party libraries and frameworks that I cannot control are running, it is very difficult to debug resource issues caused by silently swallowed cancellation signals or arbitrarily created callbacks and coroutine tasks inside some external code. Moreover, these problems tend to occur only in production environments with actual workloads, rather than in development environments.&lt;/p&gt;
&lt;p&gt;In this presentation, we present the aiomonitor-ng library, which is an improved version of the previously released aiomonitor library. The existing library helped to look inside the currently running asyncio process based on a simple telnet server and REPL, and it also helped in actual production debugging. However, after using it for more than a year, I realized that there were some features that were lacking, and I personally added various features, including the ability to directly trace the stack chain of task creation, cancellation, and termination. I also added a terminal UI with auto-completion for convenience.&lt;/p&gt;
&lt;p&gt;Using aiomonitor and the improved aiomonitor-ng, I was able to discover and analyze many production issues in practice. I hope you can use this experience to create more stable asyncio applications.&lt;/p&gt;
&lt;p&gt;Kim Jun-ki
He is currently the CTO of Lablup (&amp;quot;Lablup&amp;quot;), developing Backend.AI, and has experience in analyzing and implementing backend systems of various sizes. He has contributed to projects such as Textcube, iPuTTY, CPython, DPDK, pyzmq, aiodocker, and aiohttp through open source activities.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Introduction to Django Monorepo Microservices</title><link href="https://pyvideo.org/pycon-korea-2023/introduction-to-django-monorepo-microservices.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Kim Soon</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/introduction-to-django-monorepo-microservices.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session, we will share the process of separating Dajngo monorepo microservices using Pantsbuild, an open source Python build tool. While thinking about how to properly separate the management and flexible deployment of services that grow properly on a monolithic server, I became interested in Pantsbuild after watching …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session, we will share the process of separating Dajngo monorepo microservices using Pantsbuild, an open source Python build tool. While thinking about how to properly separate the management and flexible deployment of services that grow properly on a monolithic server, I became interested in Pantsbuild after watching the Multiple Django Services in a single repo video at DjangoCon Euro 2021. I would like to share my experiences and concerns that I had while setting up a plugin that provides a unified way to manage code, applying mypy type hints, and deploying pex (a Python executable build file) to docker with simple boilerplate code.&lt;/p&gt;
&lt;p&gt;Kim Soon
Currently developing retail-related server applications as a backend engineer at fintech startup Payhere. I like things that are automated and efficient rather than cumbersome. I will not stop challenging myself even if it is slow.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Introduction to Poetry in Deep Learning Development Dependency Management in Testing and Model Packaging</title><link href="https://pyvideo.org/pycon-korea-2023/introduction-to-poetry-in-deep-learning-development-dependency-management-in-testing-and-model-packaging.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Jeong Ho-jin</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/introduction-to-poetry-in-deep-learning-development-dependency-management-in-testing-and-model-packaging.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will introduce a case where I introduced Poetry, a Python dependency management tool, to solve problems in a deep learning development environment while working as an MLOps engineer at Corca. I will explain the difficulties of testing due to the nature of deep learning and the dependency problems …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will introduce a case where I introduced Poetry, a Python dependency management tool, to solve problems in a deep learning development environment while working as an MLOps engineer at Corca. I will explain the difficulties of testing due to the nature of deep learning and the dependency problems that occurred during the checkpoint packaging process, and I will tell you what effects you can achieve through Poetry. I hope that this session will be helpful to many deep learning developers as well as developers who want to effectively manage dependencies.&lt;/p&gt;
&lt;p&gt;Hojin Jeong
I am Hojin Jeong, a researcher and developer. I am on a journey to become someone who makes research from theory and actual products from research.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Introduction to Structural Pattern Matching Takanori</title><link href="https://pyvideo.org/pycon-korea-2023/introduction-to-structural-pattern-matching-takanori.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Suzuki</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/introduction-to-structural-pattern-matching-takanori.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Structural Pattern Matching is a new feature in Python 3.10. I think it's a big feature added to Python after a long time. In this talk, I will show you the basic usage of the feature with various sample code. Let's try to understand how to use Pattern …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Structural Pattern Matching is a new feature in Python 3.10. I think it's a big feature added to Python after a long time. In this talk, I will show you the basic usage of the feature with various sample code. Let's try to understand how to use Pattern Matching and start using it in 3.10.&lt;/p&gt;
&lt;p&gt;In this talk, I will introduce the motivation behind Strucral Pattern Matching from PEP.
Then I will explain the syntax and basic usage of Structural Pattern Matching.
Next I will show how to use the various patterns with sample code.
The patterns introduced are Literal, Capture, Wildcard, OR, Value, Group, Class, Sequence, Mapping, AS and Guards.&lt;/p&gt;
&lt;p&gt;Takanori Suzuki
Takanori is a Chairperson of PyCon JP Association (www.pycon.jp). He is also a director of BeProud Inc.(www.beproud.jp), and his title is &amp;quot;Python Climber&amp;quot;. Takanori held PyCon JP 2014 to 2016 as the chairperson. Currently he teaches Python to beginners as a lecturer at Python Boot Camp(pycamp.pycon.jp) all over Japan. In addition, he published several Python books. Tananori plays trumpet, climbs boulder, loves Lego, ferrets and beer.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Migrating from Python2 to Python3 after 15 years</title><link href="https://pyvideo.org/pycon-korea-2023/migrating-from-python2-to-python3-after-15-years.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Kang Ji-hoon</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/migrating-from-python2-to-python3-after-15-years.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The NAVER Search SRE team introduces the process of migrating Python2 used in the search service monitoring system to Python3.
The project, which has been in operation for a long time, was written with more than 40,000 lines of Python2 code for 15 years and was highly complex …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The NAVER Search SRE team introduces the process of migrating Python2 used in the search service monitoring system to Python3.
The project, which has been in operation for a long time, was written with more than 40,000 lines of Python2 code for 15 years and was highly complex.
We will cover the difficulties encountered while continuously using Python2, the reasons for not switching to Python3 sooner, and the differences between Python2 and Python3 versions.
We will talk about how to build CPython directly before using Python3 and the process through which the conversion was done.
We will share the process through which the service was judged and verified for abnormalities after the conversion.&lt;/p&gt;
&lt;p&gt;Kang Ji-hoon
Currently developing a search service monitoring system at NAVER Search SRE. At Pycon Korea 2020, I presented a session titled “Sharing Experience in Developing Sentence Similarity Algorithm in Script Prompter Service” and will be participating in Pycon Korea 2023.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>MLOps Model Serving Architecture with BentoML</title><link href="https://pyvideo.org/pycon-korea-2023/mlops-model-serving-architecture-with-bentoml.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Kim Seong-ryeol</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/mlops-model-serving-architecture-with-bentoml.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I'm going to summarize the outline of Model Serving, one of the fields of MLOps. I'll explain what to do in the field of Model Serving through a framework called BentoML.&lt;/p&gt;
&lt;p&gt;This session covers the following two major topics.&lt;/p&gt;
&lt;p&gt;Model Serving Framework: BentoML, torchserve, tenrsorflowserving, triton-inference-server
Model Serving Platform …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I'm going to summarize the outline of Model Serving, one of the fields of MLOps. I'll explain what to do in the field of Model Serving through a framework called BentoML.&lt;/p&gt;
&lt;p&gt;This session covers the following two major topics.&lt;/p&gt;
&lt;p&gt;Model Serving Framework: BentoML, torchserve, tenrsorflowserving, triton-inference-server
Model Serving Platform: kserve, yatai, sagemaker (deploy part)&lt;/p&gt;
&lt;p&gt;I'll mainly show examples through BentoML and compare other frameworks.&lt;/p&gt;
&lt;p&gt;Kim Seong-ryeol
I'm working on Serving in the Naver Biz CIC advertising recommendation section.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Nix for Python Developers</title><link href="https://pyvideo.org/pycon-korea-2023/nix-for-python-developers.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Kim Soo-bin</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/nix-for-python-developers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session, I will briefly introduce Nix for Python developers.&lt;/p&gt;
&lt;p&gt;I will first introduce the problems I have experienced in the Python environment, then I will introduce what Nix is, and how to set up a Python development environment using Nix. I will also briefly introduce how to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session, I will briefly introduce Nix for Python developers.&lt;/p&gt;
&lt;p&gt;I will first introduce the problems I have experienced in the Python environment, then I will introduce what Nix is, and how to set up a Python development environment using Nix. I will also briefly introduce how to package Python packages and build OCI container images. Finally, I will share my personal experiences and reviews from using Nix for several years.&lt;/p&gt;
&lt;p&gt;I hope this session will be helpful to those who are experiencing the same problems as I did.&lt;/p&gt;
&lt;p&gt;Kim Soobin
I am Kim Soobin, who is developing backend and platforms using Python at Viva Republica. I am working with Python developers on the team and am thinking about a more convenient and consistent development environment and deployment environment, and I would like to share my experiences. There are many shortcomings, but I will prepare well :)&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Our Python's childhood</title><link href="https://pyvideo.org/pycon-korea-2023/our-pythons-childhood.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Jang Hye-sik</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/our-pythons-childhood.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is the role of English in programming languages? Python! — It has become a given since some time ago.
However, even though Perl is known, Python has been in obscurity for over 10 years, and has been overtaken by the rising Ruby, becoming like an old language, and eventually …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is the role of English in programming languages? Python! — It has become a given since some time ago.
However, even though Perl is known, Python has been in obscurity for over 10 years, and has been overtaken by the rising Ruby, becoming like an old language, and eventually becoming a universal language..! What happened?&lt;/p&gt;
&lt;p&gt;Python 2 code that seems to come from the primitive era, where () is not used after print.. Did Python 2 have a refreshing childhood? As the 20th century passed, when people called it Python, Python, Python, and Pythong (!) in Korean at almost the same rate, how was it possible for the notation “Python,” which is also against the Korean notation rules for foreign words, to be adopted as the standard notation?&lt;/p&gt;
&lt;p&gt;In this segment, we will talk about the development process of Python 2, the period of rapid growth of Python, and the story of how the Python community established itself in Korea.&lt;/p&gt;
&lt;p&gt;Jang Hye-sik
I have been a Python committer for several years since 2001, 22 years ago. I like creating groups, so I have been running a domestic Python user group for several years. Currently, I am working as an assistant professor at the Department of Life Sciences at Seoul National University, and my main work is to explore the mysteries of life by analyzing information inside cells with Python. &lt;a class="reference external" href="https://qbio.io/"&gt;https://qbio.io/&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Parallel Processing in Python</title><link href="https://pyvideo.org/pycon-korea-2023/parallel-processing-in-python.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Kim Hyun Woo</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/parallel-processing-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will explain how I came across parallel processing in Python, the problem-solving process, the library I used, and how to use it.&lt;/p&gt;
&lt;p&gt;Kim Hyun-woo
I am a developer with 6 years of experience. I started working as a backend engineer in earnest in 2020. I mainly used Java …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will explain how I came across parallel processing in Python, the problem-solving process, the library I used, and how to use it.&lt;/p&gt;
&lt;p&gt;Kim Hyun-woo
I am a developer with 6 years of experience. I started working as a backend engineer in earnest in 2020. I mainly used Java, and recently joined OnePredict and started working with Python, Flask, SQLAlchemy, etc., and I am learning about the charm of Python.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Practical Python Design Patterns for MLOps, LLM Development</title><link href="https://pyvideo.org/pycon-korea-2023/practical-python-design-patterns-for-mlops-llm-development.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Lee Tae-ho</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/practical-python-design-patterns-for-mlops-llm-development.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's briefly look at what practical Python design patterns are, why they are needed, and what they are.
We will explain in detail how codes were upgraded in the field through these design patterns.
In this process, attendees will understand which codes are bad codes and learn how to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's briefly look at what practical Python design patterns are, why they are needed, and what they are.
We will explain in detail how codes were upgraded in the field through these design patterns.
In this process, attendees will understand which codes are bad codes and learn how to upgrade them.
In this session, you will gain the power to find and apply design patterns on your own by looking at key cases applied in the field in detail.
We will cover each case of machine learning model serving and LLM agent development in depth, and I am sure that you will be able to gain an understanding of MLOps and LLM in addition to design patterns.&lt;/p&gt;
&lt;p&gt;Lee Tae-ho
Hello, I am Lee Tae-ho, the tech lead at AI startup Korka. Korka is innovating users' online shopping experience with machine learning and LLM. We have been building AdTech capabilities until 2022 and are developing B2B SaaS products while quickly applying LLM in 2023. I have worked in various positions such as backend engineer and machine learning engineer, and am currently working as a tech lead at Korka. In 2022, I focused on developing and operating a recommendation system, and I am currently studying LLM and looking for new business opportunities. In particular, in April of this year, I developed EVAL, the world's first LLM Agent that can do web development, and it became a global issue. In order to better utilize LLM, I am continuously following up on recent research, testing new ideas, and planning new functions for the product. I am so honored to have the opportunity to share my experiences with many people. I will make sure that my presentation will provide you with new perspectives.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Python Domain Driven Design</title><link href="https://pyvideo.org/pycon-korea-2023/python-domain-driven-design.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Shin Dong-hyun</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/python-domain-driven-design.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In order to develop software that keeps up with the pace of rapidly changing technologies and growing services, we need to pursue a clear, maintainable, and highly scalable design methodology.&lt;/p&gt;
&lt;p&gt;Domain-Driven Design (DDD) is a proven software development methodology that focuses on understanding and modeling core business domains.&lt;/p&gt;
&lt;p&gt;We …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In order to develop software that keeps up with the pace of rapidly changing technologies and growing services, we need to pursue a clear, maintainable, and highly scalable design methodology.&lt;/p&gt;
&lt;p&gt;Domain-Driven Design (DDD) is a proven software development methodology that focuses on understanding and modeling core business domains.&lt;/p&gt;
&lt;p&gt;We will guide you through the basic concepts of DDD and learn how to implement DDD using Python.&lt;/p&gt;
&lt;p&gt;Shin Dong-hyun
I am a backend developer who mainly uses Python web frameworks. I strive to become a person who provides better value to the world through technology. I am interested in software design and system architecture. I run a technology blog (qu3vipon.com).&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Python's Arahan Korean work automation can be used like this too!</title><link href="https://pyvideo.org/pycon-korea-2023/pythons-arahan-korean-work-automation-can-be-used-like-this-too.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Shin Myeong-jin</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/pythons-arahan-korean-work-automation-can-be-used-like-this-too.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Arahangul is the most perfect word processor in existence (in my personal opinion). One of the lesser-known great advantages of Arahangul is the existence of script macros that can automate detailed document work. As the Python language gains popularity, work automation is being introduced to the public, but Arahangul …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Arahangul is the most perfect word processor in existence (in my personal opinion). One of the lesser-known great advantages of Arahangul is the existence of script macros that can automate detailed document work. As the Python language gains popularity, work automation is being introduced to the public, but Arahangul automation using Python seems to be less well known.&lt;/p&gt;
&lt;p&gt;This session introduces the world of Arahangul automation by lightly implementing seven examples in Python, from basic text input to somewhat complex report writing logic using Pandas.&lt;/p&gt;
&lt;p&gt;Shin Myeong-jin
I work as a Python instructor at an IT academy in Daegu. I share content on creating work automation programs through my YouTube channel/blog Everyday Coding^^&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Quant Trading Using Python by Jinhyeok Jeong</title><link href="https://pyvideo.org/pycon-korea-2023/quant-trading-using-python-by-jinhyeok-jeong.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>001</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/quant-trading-using-python-by-jinhyeok-jeong.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I would like to introduce the Python libraries and practical know-how I have used while working as a quant trading expert in the industry for over 10 years.&lt;/p&gt;
&lt;p&gt;Jeong Jin-hyeok
A quant trading expert who has worked as a Portfolio Manager and trader for over 10 years at quant …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I would like to introduce the Python libraries and practical know-how I have used while working as a quant trading expert in the industry for over 10 years.&lt;/p&gt;
&lt;p&gt;Jeong Jin-hyeok
A quant trading expert who has worked as a Portfolio Manager and trader for over 10 years at quant trading companies such as Millennium Capital Management, WorldQuant, and Presto Labs.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Relay on Django Coexists with React</title><link href="https://pyvideo.org/pycon-korea-2023/relay-on-django-coexists-with-react.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Kang Jeong-seok</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/relay-on-django-coexists-with-react.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With React becoming the standard for frontends, how should Python backends follow suit? Let's learn how to support GraphQL and Relay specs for collaboration with frontends.&lt;/p&gt;
&lt;p&gt;Kang Jeong-seok
I am a software engineer at Labup Inc. I started programming with Python and have been using it with passion ever …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With React becoming the standard for frontends, how should Python backends follow suit? Let's learn how to support GraphQL and Relay specs for collaboration with frontends.&lt;/p&gt;
&lt;p&gt;Kang Jeong-seok
I am a software engineer at Labup Inc. I started programming with Python and have been using it with passion ever since.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>RustPython Meets Python Users</title><link href="https://pyvideo.org/pycon-korea-2023/rustpython-meets-python-users.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Jeong Yun-won</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/rustpython-meets-python-users.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;RustPython is a project that reimplements Python in the Rust programming language.
RustPython has been a new and interesting project for a long time, but it has been a project that has been far from Python users.
The 5-year-old project RustPython met Ruff, a linter used by Python developers …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;RustPython is a project that reimplements Python in the Rust programming language.
RustPython has been a new and interesting project for a long time, but it has been a project that has been far from Python users.
The 5-year-old project RustPython met Ruff, a linter used by Python developers around the world. It may be considered a daily occurrence in the open source world, but even RustPython developers did not expect this encounter. I will tell you about this story.&amp;quot;&lt;/p&gt;
&lt;p&gt;---&lt;/p&gt;
&lt;p&gt;Jeong Yun-won
I am developing HFT at LINE. I operate open source projects RustPython, Cloud Input, etc. I benefit Python through Rust programming. &lt;a class="reference external" href="https://github.com/youknowone"&gt;https://github.com/youknowone&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Scalable Backtesting with Python, From I O to Scalability</title><link href="https://pyvideo.org/pycon-korea-2023/scalable-backtesting-with-python-from-i-o-to-scalability.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Kim Tae-wan</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/scalable-backtesting-with-python-from-i-o-to-scalability.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducing how to quickly and efficiently simulate stock price information in the Python ecosystem. Backtesting is a necessary process to verify the validity of a strategy, but it can take a considerable amount of time as the time-frequency of the data becomes more precise and the complexity of the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducing how to quickly and efficiently simulate stock price information in the Python ecosystem. Backtesting is a necessary process to verify the validity of a strategy, but it can take a considerable amount of time as the time-frequency of the data becomes more precise and the complexity of the strategy increases.&lt;/p&gt;
&lt;p&gt;I believe that efficient and accurate backtesting is not only a tool to speed up the computation time, but also to quickly operate a better strategy and enhance profitability. In this session,&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Improving the IO speed of daily OHLC ~ tick&lt;/li&gt;
&lt;li&gt;Comparison of the computation time of pandas vectorization compared to for loop&lt;/li&gt;
&lt;li&gt;Backtesting package structure&lt;/li&gt;
&lt;li&gt;Distributed backtesting using Ray&lt;/li&gt;
&lt;li&gt;Optimizing trading strategies using Ray Cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I would like to share my experience.&lt;/p&gt;
&lt;p&gt;Kim Tae-wan
I am majoring in Computer Science at SUNY Korea SBU, and I like analysis in chaotic environments such as pattern exploration of market data. I am interested in data engineering and optimization, and I would like to contribute to quickly responding to the complexity of the financial market and creating robust alpha through this.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Scaling your data workloads with pandas and PySpark</title><link href="https://pyvideo.org/pycon-korea-2023/scaling-your-data-workloads-with-pandas-and-pyspark.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Kwon Hyuk Jin</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/scaling-your-data-workloads-with-pandas-and-pyspark.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While pandas is widely used for data preprocessing and analysis tasks, it is not designed for large-scale data processing. This leaves data analysts with a dilemma: whether to downsample the data and lose information, or to scale out the data workload using a distributed processing framework.&lt;/p&gt;
&lt;p&gt;PySpark is one …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While pandas is widely used for data preprocessing and analysis tasks, it is not designed for large-scale data processing. This leaves data analysts with a dilemma: whether to downsample the data and lose information, or to scale out the data workload using a distributed processing framework.&lt;/p&gt;
&lt;p&gt;PySpark is one of the representative distributed processing tools for such cases. However, to use it, data analysts have to learn a new PySpark from scratch. To solve this problem, Apache Spark provides the pandas API. Existing pandas users can simply replace the pandas package with pyspark.pandas to distribute their existing workloads.&lt;/p&gt;
&lt;p&gt;Alternatively, you can write your own user-defined functions (UDFs) that are not included in the existing PySpark API. Pandas Function APIs, introduced in Spark 3.0, allow users to apply arbitrary Python native functions to PySpark dataframes and process their inputs and outputs as pandas instances. This allows data analysts to train ML models based on each group of data using the pandas functions they already use.&lt;/p&gt;
&lt;p&gt;In this session, we will cover how to perform distributed processing from the perspectives of the above two pandas users and PySpark users.&lt;/p&gt;
&lt;p&gt;Hyukjin Kwon
He is a Staff Software Engineer at Databricks, a tech lead for the open source PySpark team, and an Apache Spark PMC member and committer. He works on various areas of Apache Spark such as PySpark, Spark SQL, SparkR, and infrastructure, and has made the most commits in Apache Spark. He also leads various projects such as Project Zen, Pandas API on Spark, and Python Spark Connect.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>Supporting Django internationalization</title><link href="https://pyvideo.org/pycon-korea-2023/supporting-django-internationalization.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Seo Myeong-seok</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/supporting-django-internationalization.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will share my experience of providing services to multiple regions with a single code base using Django.
When a product or service develops, the code that was provided in one region is expanded to multiple regions.
If you were simply thinking about text translation at this time, I …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will share my experience of providing services to multiple regions with a single code base using Django.
When a product or service develops, the code that was provided in one region is expanded to multiple regions.
If you were simply thinking about text translation at this time, I think it will be a time to quickly check what additional parts are needed based on your experience.
This session is for those who understand the basics of Django. It covers settings and translation, translation of model data, format conversion by region, format conversion of unsupported data, and also introduces the form of the address being provided and the linkage with the front-end application.&lt;/p&gt;
&lt;p&gt;Seo Myeong-seok
I chose Python as a language when I was working in the game industry and thought, “I want to create web/app services too.” I think Python has been a good choice so far because it allows for stable services thanks to its low complexity and rapid development. Recently, I have been interested in flexible service structures, multi-region deployments, GraphQL, serverless deployments, PWAs, etc.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>The journey to becoming a Django contributor</title><link href="https://pyvideo.org/pycon-korea-2023/the-journey-to-becoming-a-django-contributor.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Yoon Jun-ki</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/the-journey-to-becoming-a-django-contributor.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducing the journey to becoming a Django contributor.&lt;/p&gt;
&lt;p&gt;This is a session to share episodes, experiences, and lessons learned while contributing to large open source projects.&lt;/p&gt;
&lt;p&gt;We will talk about the overall process for contributing to open source, from why we started open source, finding bug tickets, understanding the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducing the journey to becoming a Django contributor.&lt;/p&gt;
&lt;p&gt;This is a session to share episodes, experiences, and lessons learned while contributing to large open source projects.&lt;/p&gt;
&lt;p&gt;We will talk about the overall process for contributing to open source, from why we started open source, finding bug tickets, understanding the overall flow through debugging, writing bug patches and test code, to maintainer reviews.&lt;/p&gt;
&lt;p&gt;This will be especially helpful for those who are interested in open source or have ever thought about contributing.&lt;/p&gt;
&lt;p&gt;Thank you :)&lt;/p&gt;
&lt;p&gt;Yoon Jun-ki
Hello, I am Yoon Jun-ki, a 3rd-year backend engineer. Since I use the Django web framework a lot, I have naturally become interested in open source activities. I am interested in and like to talk about various areas related to development, such as good code, culture, communication, and business, as well as simply developing code. I am very happy and excited to be giving a conference presentation, which I have dreamed of since the beginning of my career.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>The story of running an in-house slack bot for a few hundred won per month with Python</title><link href="https://pyvideo.org/pycon-korea-2023/the-story-of-running-an-in-house-slack-bot-for-a-few-hundred-won-per-month-with-python.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Shin Hee-jae</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/the-story-of-running-an-in-house-slack-bot-for-a-few-hundred-won-per-month-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I'm sharing a case study of Python Slackbot development that anyone can easily and quickly apply.&lt;/p&gt;
&lt;p&gt;Before my team and I create an internal solution in-house, I'd like to talk about why we chose Slackbot, how we considered the technology stack, and what we can create with Slackbot.&lt;/p&gt;
&lt;p&gt;In …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I'm sharing a case study of Python Slackbot development that anyone can easily and quickly apply.&lt;/p&gt;
&lt;p&gt;Before my team and I create an internal solution in-house, I'd like to talk about why we chose Slackbot, how we considered the technology stack, and what we can create with Slackbot.&lt;/p&gt;
&lt;p&gt;In addition, I'd like to share the fun of improving the work environment within the team by creating a ChatOps solution based on Slackbot!&lt;/p&gt;
&lt;p&gt;Shin Hee-jae
Hello, I'm Shin Hee-jae, a backend/DevOps engineer at crypto startup Alokados. I like Python and have enjoyed developing with Python, so I'm very honored to be hosting this PyCon 2023 session. There are many shortcomings, but I'll prepare hard :)&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry><entry><title>This is really non-existent, I started making the Korean package below because it didn't exist.</title><link href="https://pyvideo.org/pycon-korea-2023/this-is-really-non-existent-i-started-making-the-korean-package-below-because-it-didnt-exist.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Jeon Da-min</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/this-is-really-non-existent-i-started-making-the-korean-package-below-because-it-didnt-exist.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is considered the second best language for everything with its rich packages and concise syntax.
Among many fields, task automation is perhaps the area where Python, with its concise syntax and high productivity, can excel the most.
Based on a huge community, among the hundreds of thousands of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is considered the second best language for everything with its rich packages and concise syntax.
Among many fields, task automation is perhaps the area where Python, with its concise syntax and high productivity, can excel the most.
Based on a huge community, among the hundreds of thousands of packages, there are many packages that can automate various office programs, so it is very easy to write Python scripts for task automation across multiple programs.
However, since I could not find an automation package for the Hangul program, which is mainly used in public institutions, I used to automate it using alternative methods.
I wanted to be able to create scripts in a Pythonic way, so I waited for someone to create a package, but I couldn't stand the inconvenience and ended up creating the Hangul package.&lt;/p&gt;
&lt;p&gt;Jeon Da-min
I majored in physics in college and have been working at KOICA, an international development cooperation organization, since 2015 to contribute to making a better world. I started learning Python around 2017 to work more efficiently. I am interested in data science and task automation.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category></entry></feed>