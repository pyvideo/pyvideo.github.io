<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 11 Jul 2019 00:00:00 +0000</lastBuildDate><item><title>Modern Time Series Analysis</title><link>https://pyvideo.org/scipy-2019/modern-time-series-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will cover the newest and most successful methods of time series analysis. 1. Bayesian methods for time series 2. Adapting common machine learning methods for time series 3. Deep learning for time series These methods are producing state-of-the-art results in a variety of disciplines, and attendees will learn both the underlying concepts and the Python implementations and uses of these analytical approaches to generate forecasts and estimate uncertainty for a variety of scientific time series.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aileen Nielsen</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:scipy-2019/modern-time-series-analysis.html</guid><category>tutorial</category></item><item><title>An Overview to Simulations and Generating Synthetic Data Sets</title><link>https://pyvideo.org/scipy-2019/an-overview-to-simulations-and-generating-synthetic-data-sets.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wanted to simulate a system but didn't know how to get started? Or maybe you wanted to create a data set with certain characteristics but weren't sure how to get the characteristics you had in mind. This tutorial will give you an overview of the mathematics and programming involved in simulating systems and generating synthetic data. Attendees of this tutorial will understand how simulations are built, the fundamental techniques of crafting probabilistic systems, and the options available for generating synthetic data sets. The skills of simulation and synthesis of data are both invaluable in generating and testing hypotheses about scientific data sets.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aileen Nielsen</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:scipy-2019/an-overview-to-simulations-and-generating-synthetic-data-sets.html</guid><category>tutorial</category></item><item><title>Be good (and don't be evil): how to audit your work for fairness and inclusion</title><link>https://pyvideo.org/pydata-london-2018/be-good-and-dont-be-evil-how-to-audit-your-work-for-fairness-and-inclusion.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is mounting evidence that the widespread deployment of machine
learning and artificial intelligence in business and government is
likely reproducing or even amplifying existing prejudices and
inequalities. Even when an analyst wants to pursue fairness and
accuracy, it is easy to unintentionally create discriminatory code. I
will discuss how to be good and avoid being part of the problem.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aileen Nielsen</dc:creator><pubDate>Sun, 29 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-29:pydata-london-2018/be-good-and-dont-be-evil-how-to-audit-your-work-for-fairness-and-inclusion.html</guid></item><item><title>The law and ethics of data driven artificial intelligence</title><link>https://pyvideo.org/pydata-new-york-city-2017/the-law-and-ethics-of-data-driven-artificial-intelligence.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is a completely non-technical discussion of how the law currently regulates artificial intelligence (if it does at all) and what is likely to change in the near future. The talk is geared towards technically-minded practitioners of data driven intelligence with the aim of increasing discussion of the social and ethical impact of data driven AI and how to code responsibly.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aileen Nielsen</dc:creator><pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-11-27:pydata-new-york-city-2017/the-law-and-ethics-of-data-driven-artificial-intelligence.html</guid></item><item><title>Time Series Analysis</title><link>https://pyvideo.org/pycon-us-2017/time-series-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Time series analysis is more relevant than ever with the rise of big
data, the internet of things, and the general availability of data that
follows events through time. This tutorial will introduce participants
to the many versatile tools Python offers for exploring, analyzing, and
predicting time series data. The tutorial will be a mix of lecture and
practice, and it will be broken down into four components:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Handling timestamped data in Python&lt;/li&gt;
&lt;li&gt;Commonly encountered problems with time series&lt;/li&gt;
&lt;li&gt;Time series prediction exercises&lt;/li&gt;
&lt;li&gt;Time series classification exercises&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aileen Nielsen</dc:creator><pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-17:pycon-us-2017/time-series-analysis.html</guid></item><item><title>Pythonic Polling Analysis and Comments on 2016's Polling Surprises</title><link>https://pyvideo.org/pydata-london-2017/pythonic-polling-analysis-and-comments-on-2016s-polling-surprises.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Filmed at PyData London 2017&lt;/p&gt;
&lt;p&gt;Description
2016 was a whopper of a year both for political upsets and debates about traditional polling and its relevance. In this talk I will discuss Pythonic survey analysis and will also highlight the pitfalls of polling and sampling generally. I will close with some thoughts on polling surprises from Brexit and the US Presidential election.&lt;/p&gt;
&lt;p&gt;Abstract
Between Brexit and the US Presidential election, it has been quite a year in the English-speaking world for pollsters. In this talk I will first introduce basic concepts of political polling design methodologies and traditional analytical techniques for dealing with the necessarily skewed data that results from traditional sampling. I will then give an overview of existing Python packages for tackling survey design and demonstrate sample code applying existing packages and also roll-your-own approaches. I will discuss current industry best practice for polling and explain how these traditional methods were deployed to monitor the year's two biggest political votes: the US Presidential election and the UK Brexit referendum.&lt;/p&gt;
&lt;p&gt;I will explore how, and whether, the outcomes of these two votes was as much as a surprise to pollsters as the media indicated and what might have led to more accurate predictions. Finally, I will close with comments about how polling methodology is likely to change in the coming years and what, if anything, could have been done differently analytically to better predict the actual results of these important 2016 votes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aileen Nielsen</dc:creator><pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-06:pydata-london-2017/pythonic-polling-analysis-and-comments-on-2016s-polling-surprises.html</guid></item><item><title>Probabilistic Graphical Models in Python</title><link>https://pyvideo.org/pygotham-2016/probabilistic-graphical-models-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will give a high level overview of the theories of graphical models and a practical introduction to and illustration of several available options for implementing graphical models in Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aileen Nielsen</dc:creator><pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-17:pygotham-2016/probabilistic-graphical-models-in-python.html</guid></item><item><title>NoSQL Python: making data frames work for you in a non-rectangular world</title><link>https://pyvideo.org/pydata-amsterdam-2016/nosql-python-making-data-frames-work-for-you-in-a-non-rectangular-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Amsterdam 2016&lt;/p&gt;
&lt;p&gt;Anyone who's dealt with a CSV file that contains arrays or a JSON with nested fields knows the pain of shoehorning non-rectangular data into standard Python data tools, such as data frame. This presentation will show you Python best practices for managing such non-rectangular data and highlight new opportunities for using &amp;quot;NoSQL&amp;quot; Python for interesting and painless analyses of real world data.&lt;/p&gt;
&lt;p&gt;NoSQL Python sounds suspiciously trendy. Is this a real thing?&lt;/p&gt;
&lt;p&gt;Most commonly used data frameworks in Python rely on SQL-like thinking. They work great, but unfortunately they don't always match real world data. A server fails intermittently, and you find you're missing measurements in an unpredictable way. A patient drops in and out of a study . You ask survey respondents what their favorite color is but they give you five colors. Suddenly you don't know quite how many columns you need or what data types those columns should have.&lt;/p&gt;
&lt;p&gt;These are just a few examples of real-world, non-rectangular data. Most of this real-world data makes its way into nested JSON, irregularly formatted JSON, unreliable API results, and slightly quirky CSV files.&lt;/p&gt;
&lt;p&gt;The nitty-gritty: how do you 'do' NoSQL Python?&lt;/p&gt;
&lt;p&gt;We'll cover best-practices for dealing with a variety of situations, starting with plain-vanilla JSON and branching off to defensive practices for dealing with highly-nested JSON, unreliably formatted API results (JSON or otherwise), and CSVs with array and other kinds of problematic fields.&lt;/p&gt;
&lt;p&gt;We'll also talk about best practices for processing these in terms of speeding up analysis and storing data in an easy-to-access and easy-to-understand format. In this portion of the talk, we'll still focus on keeping to data frames, making the rectangular format work for our non-rectangular data.&lt;/p&gt;
&lt;p&gt;Finally we'll take a look at roll-your-own NoSQL Python, unabashedly NoSQL frameworks, and what you should look for as you architect your own data decisions. We'll conclude with general rules of thumb for knowing the best way to proceed before you go too far down the wrong road.&lt;/p&gt;
&lt;p&gt;Now you've got it, what to do with it?&lt;/p&gt;
&lt;p&gt;The most interesting data and data-driven decision-making is coming out of non-rectangular data sources. What people do, how and when they do it, and what our computers do in response all comes down to non-rectangular, NoSQL data and NoSQL data-driven decision making. I'll highlight some well-known and lesser-known examples of NoSQL data results and the growing need for more work of this kind.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="http://www.slideshare.net/PyData/aileen-nielsen-nosql-python-making-data-frames-work-for-you-in-a-nonrectangular-world"&gt;http://www.slideshare.net/PyData/aileen-nielsen-nosql-python-making-data-frames-work-for-you-in-a-nonrectangular-world&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aileen Nielsen</dc:creator><pubDate>Sat, 26 Mar 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-03-26:pydata-amsterdam-2016/nosql-python-making-data-frames-work-for-you-in-a-non-rectangular-world.html</guid><category>nosql</category></item><item><title>Time Series Analysis with Python Intermediate</title><link>https://pyvideo.org/scipy-2016/time-series-analysis-with-python-intermediate-scipy-2016-tutorial-aileen-nielsen.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutorial materials for the Time Series Analysis tutorial including notebooks may be found here: &lt;a class="reference external" href="https://github.com/AileenNielsen/TimeSeriesAnalysisWithPython"&gt;https://github.com/AileenNielsen/TimeSeriesAnalysisWithPython&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aileen Nielsen</dc:creator><pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-14:scipy-2016/time-series-analysis-with-python-intermediate-scipy-2016-tutorial-aileen-nielsen.html</guid><category>SciPy 2016 Tutorial</category></item><item><title>Irregular time series and how to whip them</title><link>https://pyvideo.org/pydata-london-2016/aileen-nielsen-irregular-time-series-and-how-to-whip-them.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData London 2016&lt;/p&gt;
&lt;p&gt;This talk will present best-practices and most commonly used methods for dealing with irregular time series. Though we'd all like data to come at regular and reliable intervals, the reality is that most time series data doesn't come this way. Fortunately, there is a long-standing theoretical framework for knowing what does and doesn't make sense for corralling this irregular data.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Irregular time series and how to whip them&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;History of irregular time series&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Statisticians have long grappled with what to do in the case of missing data, and missing data in a time series is a special, but very common, case of the general problem of missing data. Luckily, irregular time series offer more information and more promising techniques than simple guesswork and rules of thumb.&lt;/p&gt;
&lt;p&gt;Your best options&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;I'll discuss best-practices for irregular time series, emphasizing in particular early-stage decision making driven by data and the purpose of a particular analysis. I'll also highlight best-Python practices and state of the art frameworks that correspond to statistical best practices.&lt;/p&gt;
&lt;p&gt;In particular I'll cover the following topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Visualizing irregular time series&lt;/li&gt;
&lt;li&gt;Drawing inferences from patterns of missing data&lt;/li&gt;
&lt;li&gt;Correlation techniques for irregular time series&lt;/li&gt;
&lt;li&gt;Causal analysis for irregular time series&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="https://slack-files.com/T0LFE6T6J-F17Q90AC9-b3eabe5c42"&gt;https://slack-files.com/T0LFE6T6J-F17Q90AC9-b3eabe5c42&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aileen Nielsen</dc:creator><pubDate>Mon, 09 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-09:pydata-london-2016/aileen-nielsen-irregular-time-series-and-how-to-whip-them.html</guid></item></channel></rss>