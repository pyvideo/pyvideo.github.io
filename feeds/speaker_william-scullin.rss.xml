<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 18 Jul 2012 00:00:00 +0000</lastBuildDate><item><title>Solving the import problem: Scalable Dynamic Loading Network File Systems</title><link>https://pyvideo.org/scipy-2012/solving-the-import-problem-scalable-dynamic-load.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The most common programming paradigm for scientific computing, SPMD
(Single Program Multiple Data), catastrophically interacts with the
loading strategies of dynamically linked executables and
network-attached file systems on even moderately sized high performance
computing clusters. This difficulty is further exacerbated by
&amp;quot;function-shipped&amp;quot; I/O on modern supercomputer compute nodes, preventing
the deployment of simple solutions. In this talk, we introduce a
two-component solution: collfs, a set of low-level MPI-collective file
operations that can selectively shadow file system access in a library,
and walla, a set of Python import hooks for seamlessly enabling parallel
dynamic loading scalable to tens of thousands of cores.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aron Ahmadia</dc:creator><pubDate>Wed, 18 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-18:scipy-2012/solving-the-import-problem-scalable-dynamic-load.html</guid><category>hpc</category></item><item><title>Python for High Performance Computing</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--python-for-high-performance-computing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python for High Performance Computing&lt;/p&gt;
&lt;p&gt;Presented by William Scullin&lt;/p&gt;
&lt;p&gt;Python is becoming increasingly popular within the high performance
computing community. While it initially gained traction as a scripting
language, Python's role has continued to expand with Python applications
for science scaling to hundreds of thousands of cores and bindings to
high performance libraries becoming commonplace. This talk is meant as
an overview of Python's role in the HPC space.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;This talk is focused on raising awareness of Python in the high
performance computing space. Specific topics include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;building the Python interpreter for speed&lt;/li&gt;
&lt;li&gt;an overview of bindings to numerical libraries&lt;/li&gt;
&lt;li&gt;using GPUs and accelerators with Python&lt;/li&gt;
&lt;li&gt;scaling codes with MPI&lt;/li&gt;
&lt;li&gt;issues when scaling on very large systems&lt;/li&gt;
&lt;li&gt;an overview of successful science codes&lt;/li&gt;
&lt;li&gt;a live demonstration of Python running on 163,840 cores&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">William Scullin</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--python-for-high-performance-computing.html</guid><category>gpu</category><category>highperformancecomputing</category><category>hpc</category><category>mpi</category><category>pycon</category><category>pycon2011</category></item></channel></rss>