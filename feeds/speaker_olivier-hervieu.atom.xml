<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Olivier Hervieu</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_olivier-hervieu.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-02-18T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Shit happens...</title><link href="https://pyvideo.org/pycon-fr-2013/shit-happens.html" rel="alternate"></link><published>2013-11-30T00:00:00+00:00</published><updated>2013-11-30T00:00:00+00:00</updated><author><name>Olivier Hervieu</name></author><id>tag:pyvideo.org,2013-11-30:/pycon-fr-2013/shit-happens.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Les erreurs sont le cauchemar des développeurs. En parler déclenche des
discussion passionnées (et avouons-le, souvent des trolls) et même si
les premiers langages de programmation ont désormais plus de 60 ans,
personne ne peut dire qu'elle est la meilleure manière de gérer ces
&amp;amp;#&amp;#64;!&amp;amp; d'erreurs. Codes de retour, exceptions …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Les erreurs sont le cauchemar des développeurs. En parler déclenche des
discussion passionnées (et avouons-le, souvent des trolls) et même si
les premiers langages de programmation ont désormais plus de 60 ans,
personne ne peut dire qu'elle est la meilleure manière de gérer ces
&amp;amp;#&amp;#64;!&amp;amp; d'erreurs. Codes de retour, exceptions, monads, ..., je donnerai
un aperçu des différents outils qu'ont des langages comme
C/Python/Ruby/Haskell/Go pour gérer les erreurs. La plupart des concepts
démontrés seront applicables à d'autres langages que Python (même si les
exemples de code seront majoritairement écrits en python).&lt;/p&gt;
&lt;p&gt;Ne rêvez pas, je n'aurai pas corrigé vos erreurs à l'issue de cette
présentation, mais vous aurez une meilleure idée de comment les dresser.&lt;/p&gt;
</content><category term="PyCon FR 2013"></category></entry><entry><title>À la découverte de Polars (ou pourquoi vous pourriez quitter pandas)</title><link href="https://pyvideo.org/pycon-fr-2023/a-la-decouverte-de-polars-ou-pourquoi-vous-pourriez-quitter-pandas.html" rel="alternate"></link><published>2023-02-18T00:00:00+00:00</published><updated>2023-02-18T00:00:00+00:00</updated><author><name>Olivier Hervieu</name></author><id>tag:pyvideo.org,2023-02-18:/pycon-fr-2023/a-la-decouverte-de-polars-ou-pourquoi-vous-pourriez-quitter-pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;J'utilise pandas pour gérer des datasets depuis 2016. C'est encore aujourd'hui la librairie de référence quand il s'agit de manipuler des données. Cependant, cette librairie n'est pas exempte de défauts. Polars propose une alternative intéressante à pandas. Migrer vers polars est facile car cette librairie propose une API proche …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;J'utilise pandas pour gérer des datasets depuis 2016. C'est encore aujourd'hui la librairie de référence quand il s'agit de manipuler des données. Cependant, cette librairie n'est pas exempte de défauts. Polars propose une alternative intéressante à pandas. Migrer vers polars est facile car cette librairie propose une API proche de pandas. Enfin, son api &amp;quot;lazy&amp;quot; et ses performances finiront par vous convaincre que, oui, il faut au moins essayer polars.&lt;/p&gt;
</content><category term="PyCon FR 2023"></category></entry></feed>