<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 05 Sep 2011 00:00:00 +0000</lastBuildDate><item><title>RTFM -- wRite The Friendly Manual</title><link>https://pyvideo.org/djangocon-us-2011/djangocon-2011--rtfm----write-the-friendly-manual.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;RTFM - wRite The Friendly Manual&lt;/p&gt;
&lt;p&gt;Presented by James Bennett&lt;/p&gt;
&lt;p&gt;An introduction to writing great documentation. Not just in the &amp;quot;here's
some tools and how to use them&amp;quot; sense, but in the &amp;quot;here's why you should
care about documentation&amp;quot; sense and the &amp;quot;how to write things people will
read&amp;quot; sense.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Bennett</dc:creator><pubDate>Mon, 05 Sep 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-09-05:djangocon-us-2011/djangocon-2011--rtfm----write-the-friendly-manual.html</guid><category>djangocon</category><category>djangocon2011</category><category>docs</category><category>web</category></item><item><title>Why the Django Documentation Sucks</title><link>https://pyvideo.org/djangocon-us-2011/djangocon-2011--why-the-django-documentation-suck.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why the Django Documentation Sucks&lt;/p&gt;
&lt;p&gt;Presented by Steve Holden&lt;/p&gt;
&lt;p&gt;Documentation is normally held to be one of Django's strong points.
Steve attempts to point out that even the best can stand improvement.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Holden</dc:creator><pubDate>Mon, 05 Sep 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-09-05:djangocon-us-2011/djangocon-2011--why-the-django-documentation-suck.html</guid><category>djangocon</category><category>djangocon2011</category><category>docs</category></item><item><title>Writing great documentation</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--writing-great-documentation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing great documentation&lt;/p&gt;
&lt;p&gt;Presented by Jacob Kaplan-Moss&lt;/p&gt;
&lt;p&gt;Django’s among the best documented open source projects; I'm intensely
proud of that accomplishment. If any part of Django endures, I hope
it’ll be a “documentation culture” — an ethos that values great,
well-written documentation. To that end, this talk looks at the tools,
tips, and techniques I’ve learned over the years. I hope it helps you
write great documentation, too.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;This talk looks at tips, tools, and techniques you can use to produce
great technical documentation.&lt;/p&gt;
&lt;p&gt;It's split roughly into two parts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Part 1: technique. We'll look at the structural elements that make
documentation useful: tutorials, high-level overviews, topical
guides, reference material, FAQs, and more. We'll cover some tips on
how to get documentation done, and community processes for handling
documentation in teams (open or not). We'll also talk about what I'm
calling &amp;quot;Documentation Driven Development&amp;quot; - a technique riffing off
Test Driven Development that calls for writing documentation before
code.&lt;/li&gt;
&lt;li&gt;Part 2: tools. Over the last couple of years a few fantastic tools
have sprung up that ease the technical aspects of writing
documentation. We'll talk about which tools are suitable for which
uses, and look at a handful of cool tools including
&lt;a class="reference external" href="http://sphinx.pocoo.org/"&gt;Sphinx&lt;/a&gt;,
&lt;a class="reference external" href="http://epydoc.sourceforge.net/"&gt;Epydoc&lt;/a&gt;, and
&lt;a class="reference external" href="http://fitzgen.github.com/pycco/"&gt;http://fitzgen.github.com/pycco/&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk is mostly targeted towards those documenting libraries or
frameworks intended for use by other developers, but much of it probably
applies to any sort of technical documentation.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Kaplan-Moss</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--writing-great-documentation.html</guid><category>docs</category><category>documentation</category><category>epydoc</category><category>faqs</category><category>pycco</category><category>pycon</category><category>pycon2011</category><category>sphinx</category></item></channel></rss>