<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 16 Feb 2018 00:00:00 +0000</lastBuildDate><item><title>12 Factor Apps for Data-Science with Python</title><link>https://pyvideo.org/swiss-python-summit-2018/12-factor-apps-for-data-science-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Heroku distilled their principles to build modern cloud applications to maximize developer productivity and application maintainability in the in the &lt;a class="reference external" href="https://12factor.net"&gt;https://12factor.net&lt;/a&gt; manifesto. These principles have influenced many of our design decisions at Blue Yonder.&lt;/p&gt;
&lt;p&gt;While our data scientists care about machine learning models and statistics, we want to free them of being concerned with technicalities like maintenance of network equipment, operating system updates or even hardware failures. In order to save our data scientists from these tasks, we have invested into a data science platform.&lt;/p&gt;
&lt;p&gt;This talk will give an insight how we use Apache Mesos, Devpi, Graylog and Prometheus/Graphana to provide a developer-friendly environment for data scientists to build their own distributed applications in Python without having to care about servers or scaling.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Hoffmann</dc:creator><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-02-16:swiss-python-summit-2018/12-factor-apps-for-data-science-with-python.html</guid></item><item><title>Comprehensions: Origin, History, Use</title><link>https://pyvideo.org/swiss-python-summit-2018/comprehensions-origin-history-use.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Along the lines of Guido's excellent &amp;quot;The History of Python&amp;quot; blog post we'll look into where the idea for Python's (list) comprehensions came from and how it evolved into these related concepts in Python: list comprehensions, set comprehensions, dict comprehensions, generator expressions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raphael Das Gupta</dc:creator><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-02-16:swiss-python-summit-2018/comprehensions-origin-history-use.html</guid></item><item><title>From Exploring Data Interactively to Creating Reproducible Pipelines</title><link>https://pyvideo.org/swiss-python-summit-2018/from-exploring-data-interactively-to-creating-reproducible-pipelines.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you previously built a report based on some data? Worried it wouldn't work anymore when you had to re-run it six months later? Annoyed that you have to email someone to get the latest version of a plot for your slide deck?&lt;/p&gt;
&lt;p&gt;In this interactive talk we will make a reproducible pipeline based on Jupyter notebooks and open data. I will introduce you to the Python data ecosystem highlighting tools for analysing data, creating visualisations and sharing those with your team and the public. We will start with a question, and following the path of a typical data analysis project, we will interactively explore the data, find our answers and then create a robust pipeline that allows us to re-run this analysis automatically. Finally I will show how easy it is to share what we created with others using mybinder.org.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Head</dc:creator><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-02-16:swiss-python-summit-2018/from-exploring-data-interactively-to-creating-reproducible-pipelines.html</guid></item><item><title>Let's Talk About GIL!</title><link>https://pyvideo.org/swiss-python-summit-2018/lets-talk-about-gil.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is lot of misconception in majority of Python Programmers regarding Global Interpreter Lock. Most of them think it's the worst part of Python. I will try to demonstrate how it actually works and how we can leverage multiple CPU cores for multithreading for I/O and CPU Bound tasks. I will also show some comparisons with different implementations of Python and the presence or absence of GIL in those, to answer questions like, why we can't just remove it from CPython and solve all our problems or why Jython performs better in Multithreading for CPU Bound tasks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amit Kumar</dc:creator><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-02-16:swiss-python-summit-2018/lets-talk-about-gil.html</guid></item><item><title>Leveraging Neural Networks &amp; Python to Forecast Train Delays</title><link>https://pyvideo.org/swiss-python-summit-2018/leveraging-neural-networks-python-to-forecast-train-delays.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I will show how we developed a neural network model in Python to forecast train delays in real-time. Based on the history of delays in the surrounding network we can predict the future expected delay at different points in the network.&lt;/p&gt;
&lt;p&gt;Building on the excellent machine learning and deep learning tech stack of Python (Keras, TensorFlow and Pandas) I will show how to implement and train a sequence prediction model and work with time series data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gabriel Krummenacher</dc:creator><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-02-16:swiss-python-summit-2018/leveraging-neural-networks-python-to-forecast-train-delays.html</guid></item><item><title>Real Time Django</title><link>https://pyvideo.org/swiss-python-summit-2018/real-time-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since the introduction of Channels, real time web has become much easier to work with in Django. It’s now possible to build real time applications with much less effort in managing the idiosyncrasies of the async programming and a lot of batteries are included. Starting with a brief introduction to Channels, we will see how to build a real time application, both on the Django and the frontend side and how easy it’s to start experimenting with it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Iacopo Spalletti</dc:creator><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-02-16:swiss-python-summit-2018/real-time-django.html</guid></item><item><title>Rocket Science and Software Engineering</title><link>https://pyvideo.org/swiss-python-summit-2018/rocket-science-and-software-engineering.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Carina works at the German Aerospace Center (DLR) where she is a software engineering team lead. It is her mission to improve the software quality at the DLR. But why is this necessary? After all we went to the moon with less computer power than of a modern smartphone! While there are a lot of success stories, there are also those stories where software failures resulted in mission failures.&lt;/p&gt;
&lt;p&gt;This talk gives an overview of some of these unfortunate programming errors, their consequences, and how modern developement tries to prevent history from repeating.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carina Haupt</dc:creator><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-02-16:swiss-python-summit-2018/rocket-science-and-software-engineering.html</guid><category>keynote</category></item><item><title>Serverless Computing: FaaSter, Better, Cheaper and More Pythonic</title><link>https://pyvideo.org/swiss-python-summit-2018/serverless-computing-faaster-better-cheaper-and-more-pythonic.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Function-as-a-Service (FaaS) is the consequent code-level implementation of the microservices concept in which each function or method is separately instantiated, measured, accounted and billed. As a programming and deployment model, it has become popular for discrete event processing. Several public commercial services offer FaaS hosting, but almost always in silos with arbitrary limits, incompatible tooling for each provider, and no convenient sharing of functions.&lt;/p&gt;
&lt;p&gt;Snake Functions (Snafu) contrasts these constraints. It is a novel free software tool to fetch, execute, test and host functions implemented in Python and (with slight performance overhead) in other languages, too.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josef Spillner</dc:creator><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-02-16:swiss-python-summit-2018/serverless-computing-faaster-better-cheaper-and-more-pythonic.html</guid></item><item><title>SpyPi: An Attempt to Get Students Into Data Security</title><link>https://pyvideo.org/swiss-python-summit-2018/spypi-an-attempt-to-get-students-into-data-security.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Technology has become a fundamental part of our daily life and a major component of the education system. Students are encouraged to interact with technology and make use of it. However, in the majority of cases the importance of data security is not discussed, although, it is important, that especially young people get a feeling for the power of modern technology and the dangers that come with it.&lt;/p&gt;
&lt;p&gt;SpyPi is an attempt to approach these topics in class. The interactive hacking-station is the result of my high school graduation work and bases on Raspberry Pi and Python. It enables a role reversal between the user and black-hat hacker/data collector. This helps students to gain a new perspective on their own behavior with digital information. SpyPi’s interactivity avoids flooding people with jargon-heavy information and permits SpyPi to meet the user at eye-level. Several applications are included to point out various dangers we face on a daily basis.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sarah Mühlemann</dc:creator><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-02-16:swiss-python-summit-2018/spypi-an-attempt-to-get-students-into-data-security.html</guid></item></channel></rss>