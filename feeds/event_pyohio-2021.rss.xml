<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - PyOhio 2021</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 31 Jul 2021 00:00:00 +0000</lastBuildDate><item><title>9 Jupyter Notebook Tricks for Your Next Advent of Code</title><link>https://pyvideo.org/pyohio-2021/9-jupyter-notebook-tricks-for-your-next-advent-of-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every year thousands of developers try to solve the programming puzzles
of the Advent of Code&lt;a class="reference external" href="#fn:1"&gt;1&lt;/a&gt; challenge. For many Pythonistas, their
favorite tool to do that is the Jupyter notebook. As the problems get
progressively more challenging, solving them step-by-step is an
excellent approach. You read some data, play with it, solve the
small-scale problem and then try to solve the whole challenge.&lt;/p&gt;
&lt;p&gt;Apart from showing the output of each intermediate step, Jupyter
notebooks offer plenty of useful features. Including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Easy access to the documentation&lt;/li&gt;
&lt;li&gt;Different debugging mechanisms&lt;/li&gt;
&lt;li&gt;Lightweight storage&lt;/li&gt;
&lt;li&gt;Shell commands&lt;/li&gt;
&lt;li&gt;Pastebin support&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this lightning talk, I will show you how to use them when solving
problems in Jupyter Notebooks.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;blockquote&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;div class="first docutils container" id="fn-1"&gt;
&lt;p&gt;If you never heard about the Advent of Code - it's a series of
25 code challenges. Each of them is released daily between the
1st and 25th of December. It's like the advent calendar
(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Advent_calendar"&gt;https://en.wikipedia.org/wiki/Advent_calendar&lt;/a&gt;), but instead of
chocolate or a small gift, you get frustration if you can't
solve a given problem. At least I do ;)&amp;nbsp;&lt;a class="reference external" href="#fnref:1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Witowski</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/9-jupyter-notebook-tricks-for-your-next-advent-of-code.html</guid><category>PyOhio 2021</category></item><item><title>An Exploration of Python's Upcoming Match Statement</title><link>https://pyvideo.org/pyohio-2021/an-exploration-of-pythons-upcoming-match-statement.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The match statement is a new feature of the Python language, defined in
PEP-634 and will be standard in the upcoming Python 3.10 (due out in
October 2021).&lt;/p&gt;
&lt;p&gt;Adding syntax for new language features introduces both new
possibilities and sources for confusion. Let's stay ahead of the game by
learning what to expect from the match statement by playing with the
alpha version of Python (available now).&lt;/p&gt;
&lt;p&gt;This talk will compare the match statement to similar constructs in
other languages, demonstrate some typical use cases, briefly discuss
Python's implementation, and propose some best practices when solving
problems with the match statement.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Kubera</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/an-exploration-of-pythons-upcoming-match-statement.html</guid><category>PyOhio 2021</category></item><item><title>Avoiding the Oops with MLOps</title><link>https://pyvideo.org/pyohio-2021/avoiding-the-oops-with-mlops.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Machine Learning (ML) projects are gaining ground in industry, yet 87%
never pass the experiment phase. So often we pour endless time and money
building models to help us make predictions about the world, but even
top performing models cannot deliver on their intended purpose if they
are not able to efficiently run in their intended environment. Machine
Learning Operations (MLOps) strives for automation and monitoring at all
steps of ML system development and construction so projects have a
greater chance of becoming operationalized. With MLOps we have the
opportunity to apply traditional DevOps principles that have transformed
the world of software delivery, like unification of system development
and operations, to machine learning. This talk will cover the principles
of MLOps and outline the path to making ML in production a reality.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shawna Bankovich</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/avoiding-the-oops-with-mlops.html</guid><category>PyOhio 2021</category></item><item><title>Basics of Hardware with a PyRuler</title><link>https://pyvideo.org/pyohio-2021/basics-of-hardware-with-a-pyruler.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn how hardware works without having to learn C. Explore basic
embedded hardware concepts with me as we use CircuitPython and a
PyRuler. CircuitPython is a programming language that simplifies writing
code for microcontrollers. The PyRuler is an engineering reference for
sizes of various electronic components, but it's also a microcontroller
board complete with LEDs, capactive touch buttons, and various inputs
and outputs that let you get started designing your embedded system with
little to no hardware experience.&lt;/p&gt;
&lt;p&gt;Resources: &lt;a class="reference external" href="https://github.com/kirakirakira/python-hardware-pyruler"&gt;Python Hardware w/ PyRuler&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kira Hartlage</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/basics-of-hardware-with-a-pyruler.html</guid><category>PyOhio 2021</category></item><item><title>Classifying Spoken Location Names</title><link>https://pyvideo.org/pyohio-2021/classifying-spoken-location-names.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will highlight a problem such as classification of speech data
where the expected spoken utterance is a location name, and how one can
have a machine learn differences between utterances. Speech feature
extraction and building a successful classification model will be
discussed using open-source tools in Python, along with practical
examples to demonstrate usage using pyAudioProcessing.
&lt;a class="reference external" href="https://github.com/jsingh811/pyAudioProcessing"&gt;https://github.com/jsingh811/pyAudioProcessing&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jyotika Singh</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/classifying-spoken-location-names.html</guid><category>PyOhio 2021</category></item><item><title>Combating PTSD with Machine Learning</title><link>https://pyvideo.org/pyohio-2021/combating-ptsd-with-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The United States is facing an urgent crisis in the treatment of its
military veterans. Post-traumatic stress disorder (PTSD) is a serious
health issue assailing our veteran population. There are currently
300,000+ disability claims and appeals pending in the Board of Veteran
Affairs’ (BVA) of the U.S. Department of Veterans Affairs. PTSD claims
makeup at least 22% of that total. Presently, the timeline from claim to
appeal exceeds 4 years. This logjam in the VA claims and appeals can be
mitigated by automating this process using machine learning techniques.&lt;/p&gt;
&lt;p&gt;All PTSD claims are legal arguments. As such, all legal arguments must
have structured reasoning. Using this legal structure, documents can be
processed by Python NLP machine learning models. These models can be
used to streamline the process of adjudicating the claims and appeals.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Slides: &lt;a class="reference external" href="https://bit.ly/DeepLearningPTSD"&gt;https://bit.ly/DeepLearningPTSD&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;Paper: &lt;a class="reference external" href="https://github.com/deborahanneharris/legal-documents/"&gt;https://github.com/deborahanneharris/legal-documents/&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Deborah Diller Harris</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/combating-ptsd-with-machine-learning.html</guid><category>PyOhio 2021</category></item><item><title>Creating and Teaching Games in Python to Teach Artificial Intelligence Concepts</title><link>https://pyvideo.org/pyohio-2021/creating-and-teaching-games-in-python-to-teach-artificial-intelligence-concepts.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I am a High School Freshman who enjoys coding and robotics. For the past
3 years, I have taken Artificial Intelligence classes as a student. AI
is a buzz word - It is an exciting yet daunting subject. My instructor
made these classes fun and less daunting by using real world examples
and games. I got so inspired, I started understanding and writing neural
networks in Python in no time. Now, I am trying to create the same
experience for my students.&lt;/p&gt;
&lt;p&gt;I am a volunteer teacher at &lt;a class="reference external" href="https://www.corp.aiclub.world/"&gt;https://www.corp.aiclub.world/&lt;/a&gt; where I teach
AI concepts to students in 6th - 12th grade. When I create a course, I
think of how to include AI concepts in games. I write games utilizing
libraries like turtle and pygame. I consult with my instructor and they
help review my courses.&lt;/p&gt;
&lt;p&gt;I would like to share my approach, give the audiences a sneak peak at my
curriculum, and share some resources that I have created.&lt;/p&gt;
&lt;p&gt;Here are some examples of my curriculum:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.google.com/document/d/1nTM4zhnyI6ZvvGffhJ6tJTJnfBGc_Hwn5Rc_3oTwOSM/edit?usp=sharing"&gt;A Cheat Sheet I made for students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.google.com/presentation/d/1aUIV6jAahnLCWUlGNwtWbg4ew6Q0afl3aSMgEVAaIkE/edit?usp=sharing"&gt;TicTacToe using AI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.google.com/presentation/d/1HbtudvKDDbJNVzORYFK-6QyyY7YT7-r1OoEZtTZoVg0/edit?usp=sharing"&gt;Stock Predictor using AI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anay Pant</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/creating-and-teaching-games-in-python-to-teach-artificial-intelligence-concepts.html</guid><category>PyOhio 2021</category></item><item><title>Debugging with vim, tmux, and pudb</title><link>https://pyvideo.org/pyohio-2021/debugging-with-vim-tmux-and-pudb.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever found yourself stuck in a SSH session with some Python code that
isn't behaving and the need to debug the code? Or are you just someone
who prefers using vim and tmux like myself? What if there was a way to
debug your code in an interface that doesn't require a huge IDE in order
to run? This talk will guide you through using vim, tmux, and pudb to
effectively debug code in various situations. We'll show how to insert
breakpoints into the code and do remote debugging, all from the comfort
of a tmux shell.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Craig Maloney</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/debugging-with-vim-tmux-and-pudb.html</guid><category>PyOhio 2021</category></item><item><title>Easy as Py: Architecture in 10 Minutes</title><link>https://pyvideo.org/pyohio-2021/easy-as-py-architecture-in-10-minutes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Software architecture has a bad rep. It's supposed to be tricky,
difficult, erudite. That's crazy.&lt;/p&gt;
&lt;p&gt;Architecture is about writing code that is effective: it's about finding
your target audience, identifying what they need, and thinking about how
to make it easy to do THAT. That's it.&lt;/p&gt;
&lt;p&gt;This talk is about 5 basic principles for software architecture that can
be applied to projects big and small: correctness, clarity, simplicity,
modularity and empathy. It's about boiling architecture down to it's
bare essence - ergonomics. We'll look at these 5 principles and end up
with 4 super-distilled lessons that we can apply TODAY to our code to
make it better.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">JC Coto</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/easy-as-py-architecture-in-10-minutes.html</guid><category>PyOhio 2021</category></item><item><title>Enriching Data Visualizations with Annotations in Plotly</title><link>https://pyvideo.org/pyohio-2021/enriching-data-visualizations-with-annotations-in-plotly.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://plotly.com/python/"&gt;Plotly&lt;/a&gt; is a versatile Python graphing library which lets us make
interactive graphs. In this talk, I will show how to go from a typical
static visualization to one enriched with annotations which will convey
to your audience a more complete interpretation of your visualization.&lt;/p&gt;
&lt;p&gt;Here are some sample &lt;a class="reference external" href="https://reshamas.github.io/covid19-plots/"&gt;plotly visualizations&lt;/a&gt; I have made, and in this
talk, I will share how to create them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Reshama Shaikh</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/enriching-data-visualizations-with-annotations-in-plotly.html</guid><category>PyOhio 2021</category></item><item><title>Fully Automated Testing</title><link>https://pyvideo.org/pyohio-2021/fully-automated-testing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I maintain Hypothesis, a library to automatically generate inputs to
your tests (like &amp;quot;a list of integers&amp;quot; or &amp;quot;an object matching this
database schema&amp;quot;) -- so you don't have to think of all the edge-cases
yourself. But we can go further! Hypothesis now ships with a
&amp;quot;Ghostwriter&amp;quot; which can write tests for you, based on the function and
argument names you choose (and docstrings and type annotations, if you
use those).&lt;/p&gt;
&lt;p&gt;If you're tired of testing but still don't want bugs, come see how we
can take automation to a whole new level :-)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zac Hatfield-Dodds</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/fully-automated-testing.html</guid><category>PyOhio 2021</category></item><item><title>Generative Drawing with Python Turtle Graphics</title><link>https://pyvideo.org/pyohio-2021/generative-drawing-with-python-turtle-graphics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Python's built in Turtle module, and some random numbers, you can
create a generative drawing with a near-infinite number of variations in
less than fifty lines of code.&lt;/p&gt;
&lt;p&gt;Repository link:
&lt;a class="reference external" href="https://github.com/dominicduffin1/python-turtle-experiments"&gt;https://github.com/dominicduffin1/python-turtle-experiments&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dominic Duffin</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/generative-drawing-with-python-turtle-graphics.html</guid><category>PyOhio 2021</category></item><item><title>Getting Your Data into Elasticsearch: Let Me Count the Ways</title><link>https://pyvideo.org/pyohio-2021/getting-your-data-into-elasticsearch-let-me-count-the-ways.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are a few different ways for you to index your data into
Elasticsearch. This talk will cover how to make your data searchable via
your web app or from a data frame.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jay Miller</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/getting-your-data-into-elasticsearch-let-me-count-the-ways.html</guid><category>PyOhio 2021</category></item><item><title>Hacking Django Channels for Fun (and Profit)</title><link>https://pyvideo.org/pyohio-2021/hacking-django-channels-for-fun-and-profit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django is growing some great async features and Channels has been great
for handling websockets connecting from your visitor's browser. But what
happens when you need to do more? What if you want to keep long-running
connections from Django to other websockets, such as Discord servers?
How do you do this and still leverage all the batteries included with
Django? We will show an approach that makes this all possible and easy
as a developer.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Calvin Hendryx-Parker</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/hacking-django-channels-for-fun-and-profit.html</guid><category>PyOhio 2021</category></item><item><title>How to Draw a Circle!!!</title><link>https://pyvideo.org/pyohio-2021/how-to-draw-a-circle.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everyone knows that writing code making art is easy! There are so many
free resources available on the internet that becoming a programmer an
artist has never been easier! In this talk I’ll demo several ways to
make a todo list draw a circle! We’ll go through a variety of mediums to
get you up-to-speed with new languages and frameworks mediums and
methods in no time like:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Types of paper and surfaces&lt;/li&gt;
&lt;li&gt;Overview of mediums (graphite, inks, acrylics, oils, and more!)&lt;/li&gt;
&lt;li&gt;Performance Art (Dance, Theater, and Song!)&lt;/li&gt;
&lt;li&gt;Digital Applications with live demo circles including:&lt;/li&gt;
&lt;li&gt;Inkscape&lt;/li&gt;
&lt;li&gt;Gnu Image Manipulation Program&lt;/li&gt;
&lt;li&gt;Blender&lt;/li&gt;
&lt;li&gt;p5.js&lt;/li&gt;
&lt;li&gt;Krita&lt;/li&gt;
&lt;li&gt;HTML &amp;amp; CSS&lt;/li&gt;
&lt;li&gt;and whatever came out between this blurb and the event!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By the end of this talk you’ll be more confident than ever (and not at
all overwhelmed!) by the prospect of how easy it is to become a
programmer an artist in 2021!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kyle R. Conway</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/how-to-draw-a-circle.html</guid><category>PyOhio 2021</category></item><item><title>How to Improve Tests Thanks to 1 Line of Code?</title><link>https://pyvideo.org/pyohio-2021/how-to-improve-tests-thanks-to-1-line-of-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What takes only one line of code and can dramatically improve your
tests? The name! If you write in a more intentional way, you can get a
test that is better designed.&lt;/p&gt;
&lt;p&gt;In 5 minutes I'll show you a few simple rules of naming tests that you
can start using right away.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Buczyński</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/how-to-improve-tests-thanks-to-1-line-of-code.html</guid><category>PyOhio 2021</category></item><item><title>How to Make Friends and Influence Users with Huggingface</title><link>https://pyvideo.org/pyohio-2021/how-to-make-friends-and-influence-users-with-huggingface.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This will be a tutorial based talk with a demo at the end on how to use
conversational language models and sentiment analysis models to make an
interactive chatbot. The models that we will use are Blenderbot from
Facebook Research and distilbert from google research / huggingface. We
will also use Transformers from Huggingface which is an easy to use
packaging and API for the above systems and also go over using speech
recognition and text to speech to make interaction more fluid. At the
end there will be an interactive demo.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joshua Jay Herman</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/how-to-make-friends-and-influence-users-with-huggingface.html</guid><category>PyOhio 2021</category></item><item><title>I ❤️ Datasette: An Open Source Multi-tool for Exploring and Publishing Data</title><link>https://pyvideo.org/pyohio-2021/i-datasette-an-open-source-multi-tool-for-exploring-and-publishing-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Datasette is described by its creator, Simon Willison, as &amp;quot;a tool for
exploring and publishing data&amp;quot;, and it provides an amazing data
presentation, exploration, and retrieval platform that can rapidly be
deployed to local, cloud or traditional web servers. In this Thunder
Talk, I'll demonstrate a project where I deployed an instance of
Datasette at the Cincinnati &amp;amp; Hamilton County Public Library to rapidly
provide reports to domain experts who are focusing on item and
bibliographic record data.&lt;/p&gt;
&lt;div class="section" id="datasette-project"&gt;
&lt;h4&gt;Datasette Project&lt;/h4&gt;
&lt;p&gt;&lt;a class="reference external" href="https://datasette.io/"&gt;https://datasette.io/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cincinnati-hamilton-county-public-library-collection-analysis"&gt;
&lt;h4&gt;Cincinnati &amp;amp; Hamilton County Public Library Collection-Analysis&lt;/h4&gt;
&lt;p&gt;&lt;a class="reference external" href="https://ilsweb.cincinnatilibrary.org/collection-analysis/"&gt;https://ilsweb.cincinnatilibrary.org/collection-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ray Voelker</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/i-datasette-an-open-source-multi-tool-for-exploring-and-publishing-data.html</guid><category>PyOhio 2021</category></item><item><title>Introduction to Soccer Pass Network Analysis with Python</title><link>https://pyvideo.org/pyohio-2021/introduction-to-soccer-pass-network-analysis-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk teaches four simple concepts to those who want to start
working on football data analysis:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;How to access open event data from &lt;em&gt;statsbomb&lt;/em&gt; API,&lt;/li&gt;
&lt;li&gt;How to draw a soccer pitch using &lt;em&gt;mplsoccer&lt;/em&gt;,&lt;/li&gt;
&lt;li&gt;How to visualize a pass network map for a particular team in a
particular game, and&lt;/li&gt;
&lt;li&gt;How to use the &lt;em&gt;NetworkX&lt;/em&gt; module to analyze the pass network (eg.
finding out-degree distribution of passes, clustering coefficient,
centrality, etc.)&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Indranil Ghosh</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/introduction-to-soccer-pass-network-analysis-with-python.html</guid><category>PyOhio 2021</category></item><item><title>Kitchen Practical and Coding Practices</title><link>https://pyvideo.org/pyohio-2021/kitchen-practical-and-coding-practices.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A whirlwind tour of the evolution of kitchens from Victorian caverns to
domestic economy, and what that transition can teach us about the very
real value of code ergonomics. This talk is based on Lillian Gilbreth's
domestic research and revolutions, and applies to the very screen you
are looking at right now. Come for the iceboxes, apply science to your
IDEs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Heidi Waterhouse</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/kitchen-practical-and-coding-practices.html</guid><category>PyOhio 2021</category></item><item><title>Learn Jupyter Notebook Python by Modeling Your Game Data</title><link>https://pyvideo.org/pyohio-2021/learn-jupyter-notebook-python-by-modeling-your-game-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When learning some new technology it usually seems to sink in better if
you use a practical example. In this quick demo I show how I took video
game data and used it to learn how to use Python Pandas library in a
Jupyter Notebook by modeling the StalkMarket prices of turnips on
someone's ACNH Island.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;More information for after viewing the presentation:&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="https://snacktraces.com/pyohio21/"&gt;https://snacktraces.com/pyohio21/&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Craig Lang</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/learn-jupyter-notebook-python-by-modeling-your-game-data.html</guid><category>PyOhio 2021</category></item><item><title>Load Django Settings from Environmental Variables with One Magical Line of Code</title><link>https://pyvideo.org/pyohio-2021/load-django-settings-from-environmental-variables-with-one-magical-line-of-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk goes over a new Python library, djenv, that makes Django
settings configurable through environmental variables. We will go over
both simple and advanced usage including deploying Django projects with
Docker. We’ll dive into the djenv source code and teach advanced
concepts like locals and del.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Dufour</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/load-django-settings-from-environmental-variables-with-one-magical-line-of-code.html</guid><category>PyOhio 2021</category></item><item><title>Multi-objective Optimization for COVID Vaccine Management</title><link>https://pyvideo.org/pyohio-2021/multi-objective-optimization-for-covid-vaccine-management.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;In the past several months, we have seen that effectively distributing
COVID-19 vaccinations is an incredibly important and daunting task.
Due to a wide and asymmetric imbalance between supply and demand,
finding the right balance, timing, and utilization of vaccinations has
proven difficult for everyone involved. Organizations need to
correctly predict demand at different times at specific locations to
minimize spoilage and optimize utilization rate while accounting for
limited supply.&lt;/div&gt;
&lt;div class="line"&gt;In this talk, Samira Soleimani, Data Scientist at CGI, will
demonstrate how machine learning algorithm and multi-objective
optimization can be used to help tackle this challenge. First, Samira
will explain the difference between single-objective and
multi-objective optimizations. Second, she will introduce and compare
line and curve-fitting approaches to define objective functions for
distribution optimization. Then, she will explain and implement
multi-objective particle swarm optimization (PSO) in the python
package “PyGMO” to find the optimal point for vaccine distribution in
a neighborhood.&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Samira Soleimani</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/multi-objective-optimization-for-covid-vaccine-management.html</guid><category>PyOhio 2021</category></item><item><title>PyOhio 2021 Closing Remarks</title><link>https://pyvideo.org/pyohio-2021/pyohio-2021-closing-remarks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thank you to everyone who helped make PyOhio 2021 a success!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Forgac</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/pyohio-2021-closing-remarks.html</guid><category>PyOhio 2021</category></item><item><title>PyOhio 2021 Opening Remarks</title><link>https://pyvideo.org/pyohio-2021/pyohio-2021-opening-remarks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Welcome to PyOhio!&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.pyohio.org/conduct"&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://chat.pyohio.org"&gt;Chat on Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pyohio.org/shirts"&gt;T-Shirt Fundraiser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Forgac</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/pyohio-2021-opening-remarks.html</guid><category>PyOhio 2021</category></item><item><title>Redlining Your CPU for Fun and Profit: Threading and Multiprocessing in Python</title><link>https://pyvideo.org/pyohio-2021/redlining-your-cpu-for-fun-and-profit-threading-and-multiprocessing-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Is your Python script taking too long, and your CPU utilization too low?
Enter the concurrent execution standard libraries (&lt;tt class="docutils literal"&gt;threading&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;multiprocessing&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;concurrent.futures&lt;/tt&gt;, etc.). Throughout the talk,
we will look through various toy problems and learn how we can quickly
speed it up for IO bound and CPU bound processes using the Python
standard library, so you can get more done and raise that CPU usage to
100%.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Zharichenko</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/redlining-your-cpu-for-fun-and-profit-threading-and-multiprocessing-in-python.html</guid><category>PyOhio 2021</category></item><item><title>Start Testing in 5 Minutes Flat</title><link>https://pyvideo.org/pyohio-2021/start-testing-in-5-minutes-flat.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every software project should have some degree of testing. Why? No code
is perfect, and bugs happen! Unfortunately, many people don't write
tests because they feel like it's too much work, or they don't know how
to start.&lt;/p&gt;
&lt;p&gt;In this lightning talk, I'll show you how to start testing your code
using &lt;tt class="docutils literal"&gt;pytest&lt;/tt&gt;. We will cover how to configure &lt;tt class="docutils literal"&gt;pytest&lt;/tt&gt;, where to
put tests, and how to write concise yet meaningful tests. Slides will
include example code with full test cases. I'll also share resources for
learning more advanced techniques. In 5 minutes flat, you'll see just
how easy it is to add valuable tests to your Python projects!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pandy Knight</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/start-testing-in-5-minutes-flat.html</guid><category>PyOhio 2021</category></item><item><title>The Craziest fn Thing I've Ever Seen (and It Lives in CPython!!!)</title><link>https://pyvideo.org/pyohio-2021/the-craziest-fn-thing-ive-ever-seen-and-it-lives-in-cpython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I am enamored with dataclasses. I love them in Python, I love them in
Kotlin. A while back I was looking for a Kotlin dataclass feature in
Python, and was disappointed to find it wasn't there. I went digging
into the CPython source code to see if it could be added and found the
craziest function I'd ever seen, _create_fn, and it's used everywhere
in the dataclass implementation!&lt;/p&gt;
&lt;p&gt;Join me as I shared what I found out about my dear dataclasses, and get
a better understand of decorators and metaprogramming in Python!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Lindeman</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/the-craziest-fn-thing-ive-ever-seen-and-it-lives-in-cpython.html</guid><category>PyOhio 2021</category></item><item><title>The Enters and Exits of Context Managers</title><link>https://pyvideo.org/pyohio-2021/the-enters-and-exits-of-context-managers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever opened a file using the with keyword in Python? That
little keyword is one of the many fascinating parts of the Python
programming language, the Context Manager. This talk will cover all
things Context Manager, from what they are, how to build them, when to
use them, and more. View the source code for this entire presentation on
&lt;a class="reference external" href="https://github.com/MasonEgger/context-managers-sample-code"&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mason Egger</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/the-enters-and-exits-of-context-managers.html</guid><category>PyOhio 2021</category></item><item><title>The Impact of Google v. Oracle Supreme Court Decision on the Software World</title><link>https://pyvideo.org/pyohio-2021/the-impact-of-google-v-oracle-supreme-court-decision-on-the-software-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will explore the recent decision by the United States
Supreme Court regarding Java APIs from earlier this year. The decision
has been issued in regards to the case of Google v. Oracle but will most
likely have implications on the entire software industry.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ian Zelikman</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/the-impact-of-google-v-oracle-supreme-court-decision-on-the-software-world.html</guid><category>PyOhio 2021</category></item><item><title>Tool Confusion: Pythonic Code with flake8, tox and pre-commit</title><link>https://pyvideo.org/pyohio-2021/tool-confusion-pythonic-code-with-flake8-tox-and-pre-commit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Imagine you created this awesome Python project.&lt;/p&gt;
&lt;p&gt;But before you want to release it to the world, you want to make sure it
follows the Python coding standards.&lt;/p&gt;
&lt;p&gt;You have heard of Flake8, but you are unsure whether you should install
it system-wide, run it in your IDE or in even in CI?&lt;/p&gt;
&lt;p&gt;How and where should you configure Flake8?&lt;/p&gt;
&lt;p&gt;How do you make sure your colleagues also use the same linters... in the
same version?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jürgen Gmach</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/tool-confusion-pythonic-code-with-flake8-tox-and-pre-commit.html</guid><category>PyOhio 2021</category></item><item><title>Type Annotations in Python: Terribly Intimidating or Tremendously Informative?</title><link>https://pyvideo.org/pyohio-2021/type-annotations-in-python-terribly-intimidating-or-tremendously-informative.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many software developers have written a Python program without
explicitly declaring the types of the parameters for a function's
parameters or return values. Since the Python programming language now
supports type annotations, many people in the community are exploring
this way to describe the data that a function accepts as input and
produces as output. When you start to apply Python's type annotations,
their syntax and meaning can be confusing and it is common to wonder
whether or not there is any benefit to adding them at all!&lt;/p&gt;
&lt;p&gt;This presentation will introduce Python's type annotations by
iteratively applying them to a function that does not have explicit
types. After explaining how to use the types available in the &lt;tt class="docutils literal"&gt;typing&lt;/tt&gt;
package, this talk will illustrate the ways in which a static type
checker like &lt;tt class="docutils literal"&gt;mypy&lt;/tt&gt; can find bugs in a Python program before it is
executed. People who watch this talk will gain the knowledge they need
to start writing their first type annotations, use them to improve their
Python programs, and ultimately find them to be beneficial.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gregory M. Kapfhammer</dc:creator><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-31:/pyohio-2021/type-annotations-in-python-terribly-intimidating-or-tremendously-informative.html</guid><category>PyOhio 2021</category></item></channel></rss>