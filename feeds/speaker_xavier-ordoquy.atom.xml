<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_xavier-ordoquy.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-06T00:00:00+00:00</updated><entry><title>En pratique, qu'est-ce que ReST ?</title><link href="https://pyvideo.org/pycon-fr-2018/en-pratique-quest-ce-que-rest.html" rel="alternate"></link><published>2018-10-06T00:00:00+00:00</published><updated>2018-10-06T00:00:00+00:00</updated><author><name>Xavier Ordoquy</name></author><id>tag:pyvideo.org,2018-10-06:pycon-fr-2018/en-pratique-quest-ce-que-rest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Les APIs occupent de plus en plus de place au sein de notre activité
informatique et dans les entreprises.&lt;/p&gt;
&lt;p&gt;Sans nous en rendre compte, nous introduisons énormément de
connaissances dans nos APIs, que ce soit coté serveur ou coté client.
Cette somme de connaissance créé un couplage implicite entre le serveur
et le client ce qui complique les évolutions.&lt;/p&gt;
&lt;p&gt;Partant d'un example d'API ReST nous verrons comment elle permet de
diminuer le couplage client/serveur et facilite les évolutions, en
montrant comment elles peuvent être prise en charge par des clients qui
n'étaient pas prévus pour. Un autre aspect est la limitation des règles
metier du coté client et comment rester DRY pour la partie
fonctionnelle.&lt;/p&gt;
&lt;p&gt;Pour conclure, nous aborderons ce qui les limites de cette architecture
et pourquoi il est si compliqué de créer de telles APIs.&lt;/p&gt;
</summary></entry><entry><title>Garder un oeil sur Django et Python</title><link href="https://pyvideo.org/djangocong-montpellier-2012/garder-un-oeil-sur-django-et-python.html" rel="alternate"></link><published>2012-04-15T00:00:00+00:00</published><updated>2012-04-15T00:00:00+00:00</updated><author><name>Xavier Ordoquy</name></author><id>tag:pyvideo.org,2012-04-15:djangocong-montpellier-2012/garder-un-oeil-sur-django-et-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Garder un oeil sur Django et Python&lt;/p&gt;
&lt;p&gt;Django nous permet d'être averti lorsque l'application plante. Néanmoins les informations fournies ne permettent pas toujours de comprendre ou reproduire le problème. Sentry pallie ce manque, tant avec Django qu'avec Python. Nous allons voir ce qu'offre Sentry pour Django en particulier et plus généralement pour les scripts Python.&lt;/p&gt;
&lt;p&gt;Intervenant: Xavier Ordoquy&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://rencontres.django-fr.org/2012/presentations/sentry.pdf"&gt;http://rencontres.django-fr.org/2012/presentations/sentry.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Site: &lt;a class="reference external" href="http://rencontres.django-fr.org"&gt;http://rencontres.django-fr.org&lt;/a&gt;
Realisation: &lt;a class="reference external" href="http://www.guillaumebarbaz.com"&gt;http://www.guillaumebarbaz.com&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Autentification et autorisation avec Django REST framework</title><link href="https://pyvideo.org/pycon-fr-2016/autentification-et-autorisation-avec-django-rest-framework.html" rel="alternate"></link><published>2016-10-16T00:00:00+00:00</published><updated>2016-10-16T00:00:00+00:00</updated><author><name>Xavier Ordoquy</name></author><id>tag:pyvideo.org,2016-10-16:pycon-fr-2016/autentification-et-autorisation-avec-django-rest-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django REST framework est une librairie populaire permettant de mettre en place des APIs rapidement.
Construite au dessus de Django et en reprenant de nombreux concepts.
Cette présentation se concentre sur les mécanismes d'autentification et d'autorisation avec Django REST framework.
Nous aborderons les spécificités par rapport aux applications web &amp;quot;classiques&amp;quot;, en particulier les échanges entre systèmes d'informations.
Nous verrons également comment intégrer son propre système d'autentification et de permissions au sein de Django REST framework.
Enfin, nous ferons un tour des solutions existantes.&lt;/p&gt;
</summary></entry><entry><title>Créer son API avec Django REST framework</title><link href="https://pyvideo.org/pycon-fr-2016/creer-son-api-avec-django-rest-framework.html" rel="alternate"></link><published>2016-10-16T00:00:00+00:00</published><updated>2016-10-16T00:00:00+00:00</updated><author><name>Xavier Ordoquy</name></author><id>tag:pyvideo.org,2016-10-16:pycon-fr-2016/creer-son-api-avec-django-rest-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;L'atelier a pour but la construction d'API avec Django REST framework.
Il s'agit de découvrir Django REST framework.
Lors de l'atelier, différentes parties seront présentées:
- sérialisation des données
- présentation humaine des données
- pagination
- autentification / permissions
- filtrage
- gestion des relations entre les données
La connaissance de base de Django est un pré-requis.&lt;/p&gt;
</summary></entry><entry><title>Architecture en Webservices avec Django</title><link href="https://pyvideo.org/pycon-fr-2013/architecture-en-webservices-avec-django.html" rel="alternate"></link><published>2013-11-30T00:00:00+00:00</published><updated>2013-11-30T00:00:00+00:00</updated><author><name>Xavier Ordoquy</name></author><id>tag:pyvideo.org,2013-11-30:pycon-fr-2013/architecture-en-webservices-avec-django.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;L'architecture d'une plateforme sous forme de webservices est de plus en
plus commune. Comment Django peut-il aider à mettre en place une telle
architecture ?&lt;/p&gt;
&lt;p&gt;L'architecture d'une plateforme sous forme de webservices est de plus en
plus commune. Quels sont les avantages et problèmes d'une telle
architecture ? Comment Django peut-il aider à mettre en place une telle
architecture, du coté du serveur comme du coté du client ? Qu'en est-il
des performances ?&lt;/p&gt;
</summary></entry></feed>