<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 11 Mar 2012 00:00:00 +0000</lastBuildDate><item><title>1. PSF Sprints - Supporting the community one sprint at at time</title><link>https://pyvideo.org/pycon-us-2012/1-psf-sprints-supporting-the-community-one-spr.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Formed in 2010, the PSF Sprints committee set out to support local
communities getting together to make great software by funding their
sprints with up to $300 USD. No matter the project, the PSF wants to
help you contribute to the Python ecosystem. Come see what we're doing,
how we're doing it, who we've supported, and see how you can take part
as well.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The PSF Sprint committee offers up to $300 USD to groups that organize
sprint efforts on open source projects in the Python world. From working
on Python itself, to the vast array of projects in the community, we
take great interest in keeping you interested. We're also interested in
buying you dinner, providing a place to work at, and buying t-shirts or
other goodies for sprint attendees.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Committee Goals&lt;ul&gt;
&lt;li&gt;Fund existing sprint groups&lt;/li&gt;
&lt;li&gt;Get new groups interested in sprinting&lt;/li&gt;
&lt;li&gt;Generate interest in contribution to Python projects&lt;/li&gt;
&lt;li&gt;Advertise sprint events, including those at conferences&lt;/li&gt;
&lt;li&gt;Have fun, learn, and contribute with other community members&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How We Operate&lt;ul&gt;
&lt;li&gt;Receive applications, vote, advertise, reimburse after event&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Past Sponsorships&lt;ul&gt;
&lt;li&gt;packaging, Genshi, matplotlib&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Upcoming Sponsorships&lt;ul&gt;
&lt;li&gt;PyCon (will update closer to conference)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How To Receive Funding&lt;ul&gt;
&lt;li&gt;How to apply, how to be reimbursed&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Curtin</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/1-psf-sprints-supporting-the-community-one-spr.html</guid></item><item><title>10. FOSS@RIT: Python-Powered Student Engagement</title><link>https://pyvideo.org/pycon-us-2012/10-fossrit-python-powered-student-engagement.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="mailto:FOSS&amp;#64;RIT"&gt;FOSS&amp;#64;RIT&lt;/a&gt; is an applied research lab at Rochester Institute of Technology
focused on promoting free/open source software and open web
technologies. Students and staff will discuss the evolution of the lab
in general, and the RIT Fedora Remixerator - a web application running
on Django that allows users to create an RIT-themed Fedora LiveCD.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eitan Romanoff</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/10-fossrit-python-powered-student-engagement.html</guid></item><item><title>11. A Startup Junkie's Journey to Python via Java, C#, Ruby and Scala</title><link>https://pyvideo.org/pycon-us-2012/11-a-startup-junkies-journey-to-python-via-java.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Between choosing technologies, bootstrapping your company and product
and hiring the critical early team, startup CTO's have their hands full.
I've done it many times, and over the years I have honed my view of how
to build something new from scratch. We'll focus on selecting tools and
technologies, and on my journey to Python as the core of my newest
company.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Parsons</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/11-a-startup-junkies-journey-to-python-via-java.html</guid></item><item><title>12. Accessibility and You</title><link>https://pyvideo.org/pycon-us-2012/12-accessibility-and-you.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;An introduction into the world of 508 compliance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Cunningham</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/12-accessibility-and-you.html</guid></item><item><title>14. preshrunk-cotton: Windows Help Files for Lazy People</title><link>https://pyvideo.org/pycon-us-2012/14-preshrunk-cotton-windows-help-files-for-lazy.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Generating a Compiled HTML Help (CHM) file is often necessary when
distributing applications on Microsoft Windows platforms. However, many
developers may dislike authoring HTML and/or cannot use Microsoft’s help
tools. preshrunk-cotton streamlines the creation of CHM files by
allowing the author to quickly write documentation in Textile markup and
build the help file on almost any platform.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffrey Armstrong</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/14-preshrunk-cotton-windows-help-files-for-lazy.html</guid></item><item><title>18. Bump Pumps Up with Diesel</title><link>https://pyvideo.org/pycon-us-2012/18-bump-pumps-up-with-diesel.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Bump Technologies’ Jamie Turner explains Diesel, an open-source evented
networking framework, and how it's used at Bump, an Android and iOS app
with over 70 million downloads.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jamie Turner</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/18-bump-pumps-up-with-diesel.html</guid></item><item><title>19. Millions of Genes with Python and Jython</title><link>https://pyvideo.org/pycon-us-2012/19-millions-of-genes-with-python-and-jython.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Analysis and Annotation Engineering group at the Broad Institute
uses cpython and jython as fundamental technologies to help sequence,
analyze, and publish hundreds of bacterial and viral genomes every year.
This poster outlines how we use python to allow our small team to
accomplish big things.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Clint Howarth</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/19-millions-of-genes-with-python-and-jython.html</guid></item><item><title>2. Twisted Matrix High Scores</title><link>https://pyvideo.org/pycon-us-2012/2-twisted-matrix-high-scores.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Do you have what it takes to get to the top of
&lt;a class="reference external" href="http://twistedmatrix.com/highscores"&gt;http://twistedmatrix.com/highscores&lt;/a&gt;?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica McKellar</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/2-twisted-matrix-high-scores.html</guid></item><item><title>22. Quantitative Finance Research with Python: Statistical arbitrage.</title><link>https://pyvideo.org/pycon-us-2012/22-quantitative-finance-research-with-python-st.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Recently, many projects have been developed to make Python useful to do
quantitative finance research. We proposed us not only to show you the
integration of these tools to perform time series analysis and modeling,
but also to show you how we can search for cointegrated pairs of asset
and set up a statistical arbitrage strategy - pairs trading - to get
potential profit from financial market.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damián Avila</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/22-quantitative-finance-research-with-python-st.html</guid></item><item><title>23. Round the world with a million objects</title><link>https://pyvideo.org/pycon-us-2012/23-round-the-world-with-a-million-objects.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python has provided a suite of tools required for our Lagrangian
Particle Modeling Framework that is used for simulation of atmospheric
transport. The Python language is used for generating input files for
our FORTRAN codebase, using f2py to control several aspects of running
the model and reading output, and dynamically generating content with
matplotlib for web-display using Plone.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John F Burkhart</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/23-round-the-world-with-a-million-objects.html</guid></item><item><title>24. Indico - A Scientific Collaboration Platform</title><link>https://pyvideo.org/pycon-us-2012/24-indico-a-scientific-collaboration-platform.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Indico is an open source CMS developed at CERN and currently used in
more than 90 scientific institutions world-wide. Indico provides a
multitude of features to conference/meeting organizers, merging the
capabilities of a powerful CMS with a calendaring layer, thus allowing
users to keep track of past and future meetings, and to quickly access
all the resources concerning a particular event.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Indico is an open source content management system developed at the
European Organization for Nuclear Research (CERN) and currently used in
more than 90 scientific institutions world-wide. Indico provides a
multitude of features to conference/meeting organizers, merging the
capabilities of a powerful CMS with a calendaring layer, thus allowing
users to keep track of past and future meetings, and to quickly access
all the resources concerning a particular event. Other very useful
features include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Conference registration &amp;amp; e-payment integration;&lt;/li&gt;
&lt;li&gt;Paper/abstract reviewing;&lt;/li&gt;
&lt;li&gt;Integration with chat (XMPP) systems;&lt;/li&gt;
&lt;li&gt;Integration with videoconferencing/webcasting applications;&lt;/li&gt;
&lt;li&gt;Room booking module;&lt;/li&gt;
&lt;li&gt;Drag&amp;amp;drop; timetable editing;&lt;/li&gt;
&lt;li&gt;Event reminders &amp;amp; alarms (scheduler);&lt;/li&gt;
&lt;li&gt;Extensible via plugin subsystem;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At CERN alone, Indico serves a community of around 10.000 users, with
~15.000 different visitors per day (~1 M hits). It hosts more than
150.000 events, made of around 700.000 individual contributions/talks
and ~900.000 files. It has become part of &amp;quot;CERN speech&amp;quot; - &amp;quot;look it up on
Indico&amp;quot; is almost as obvious as &amp;quot;Google it&amp;quot; around here.&lt;/p&gt;
&lt;p&gt;But Indico is as well an indispensable tool in the realm of High Energy
Physics, going far beyond the borders of this organization. Institutions
such as Fermilab, MIT and IHEP (China) are using it for their own
meetings/conferences.&lt;/p&gt;
&lt;p&gt;The system is fully written in Python and JavaScript, using ZODB as its
database back-end. It is a perfect example of how Python-related
technologies can be used to build powerful web applications that empower
scientific research and collaboration.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pedro Ferreira</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/24-indico-a-scientific-collaboration-platform.html</guid><category>casestudy</category><category>cms</category></item><item><title>25. An Overview of the Python African Computational Science and Engineering Tour Project</title><link>https://pyvideo.org/pycon-us-2012/25-an-overview-of-the-python-african-computation.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Godfrey Ejiroghene Akpojotor, Louis Ehwerhemuepha Pervading of computer
activities into the teaching/learning process and research make them
constitute a third pillar in science and engineering (S &amp;amp; E) in addition
to theory and experiment. Python African Computational S &amp;amp; E Tour is to
ease the learners into programming with Python and to use it for
modeling, simulation and visualization to aid teaching/learning process
and research in Africa.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Godfrey Ejroghene Akpojotor</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/25-an-overview-of-the-python-african-computation.html</guid></item><item><title>26. Data analysis and visualization in atmospheric sciences</title><link>https://pyvideo.org/pycon-us-2012/26-data-analysis-and-visualization-in-atmospheri.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This poster demonstrates the Python based data analysis and
visualization in atmospheric sciences with particular focus on modeled
and observational aspects of marine clouds.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gökhan Sever</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/26-data-analysis-and-visualization-in-atmospheri.html</guid></item><item><title>27. Reading and writing spatial data for the non-spatial programmer</title><link>https://pyvideo.org/pycon-us-2012/27-reading-and-writing-spatial-data-for-the-non-.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Location has become mainstream in society and computing. Developers are
being tasked with working with spatial data of varying formats. Lucky
for Python developers, there are many packages and libraries that can
help us make sense of and utilize spatial data, and this poster will
explain some of those options.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chad Cooper</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/27-reading-and-writing-spatial-data-for-the-non-.html</guid><category>geographic information systems</category><category>gis</category><category>mapping</category><category>spatial</category></item><item><title>29. Keeping the Chandra satellite cool with Python and Xija</title><link>https://pyvideo.org/pycon-us-2012/29-keeping-the-chandra-satellite-cool-with-pytho.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Chandra X-ray Observatory has been producing significant
astronomical discoveries since its launch by NASA in July of 1999. The
Chandra operations team uses Python for predictive thermal modeling of
the spacecraft to maintain a safe thermal environment. This poster
describes the Xija modeling framework that is used to create, calibrate,
and compute these thermal models.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Aldcroft</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/29-keeping-the-chandra-satellite-cool-with-pytho.html</guid></item><item><title>3. Hacking for Humanity with Python: The CuiBono political app</title><link>https://pyvideo.org/pycon-us-2012/3-hacking-for-humanity-with-python-the-cuibono.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This poster discusses the development of the CuiBono &amp;quot;political ad truth
detector&amp;quot; app, from concept, to hackathon, to launch. The poster also
talks about Python's prominence at the Philadelphia Random Hacks of
Kindness hackathon (Winter 2011)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jim Snavely</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/3-hacking-for-humanity-with-python-the-cuibono.html</guid></item><item><title>31. ProofCheck: Checking Mathematical Proofs written in TeX</title><link>https://pyvideo.org/pycon-us-2012/31-proofcheck-checking-mathematical-proofs-writ.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;ProofCheck is a set of Python scripts which parse and check mathematics
written using TeX. Its homepage is www.proofcheck.org. Unlike computer
proof assistants which require immersion in the equivalent of a
programming language, ProofCheck attempts to handle mathematical
language formalized according to the author's preferences as much as
possible.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob Neveln</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/31-proofcheck-checking-mathematical-proofs-writ.html</guid></item><item><title>32. Python in Computer-Aided Drug Discovery</title><link>https://pyvideo.org/pycon-us-2012/32-python-in-computer-aided-drug-discovery.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Computational tools are an integral part of the modern drug-discovery
process. At NIBR, we leverage Python to great success in all stages of
drug discovery. Not only can we easily deploy new tools to our
scientists easily using tools like Django, but Python's approachability
(that &amp;quot;fits your brain&amp;quot; character) allows scientists with no programming
experience to start coding themselves!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eddie Cao</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/32-python-in-computer-aided-drug-discovery.html</guid></item><item><title>34. CrossCompute is a web platform where users can run algorithms</title><link>https://pyvideo.org/pycon-us-2012/34-crosscompute-is-a-web-platform-where-users-ca.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Have you developed a mathematical model or computational / visualization
algorithm? Your algorithm could be useful worldwide to people who face a
real- world problem but do not want to write code. Professionals in
industry, scientists in other fields or researchers in developing
countries can quickly apply your work to their domain with a web-based
cloud-computing platform like CrossCompute.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;CrossCompute is a site where you can run mathematical models and
algorithms submitted by researchers. If you are a researcher and you
submit your algorithm, you'll get paid each time it runs. We'll send you
a URL where users can run your model on their data as many times as they
want. More users mean more feedback that you can use to improve your
model.&lt;/p&gt;
&lt;p&gt;Here is an example: Suppose a mathematician in the US develops an
operations research model for placing schools in a community given the
locations of existing schools and households, and decides to charge ten
cents each time it runs. Then a business owner in Ghana runs the model
over the internet to place stores in his district, and saves money
because he didn't have to hire a consulting firm or buy a software
package. Meanwhile, the mathematician in the US uses the algorithm
revenue to fund research to improve the model.&lt;/p&gt;
&lt;p&gt;Now is an exciting time to get involved in data analytics for your city
or local government. Governments need to prioritize limited resources
like emergency response firefighters, police officers and city
inspectors. I urge you to contact your local Mayor's office to learn
about the challenges they are facing. Then, create a tool to make their
life easier. You can send the tool to &lt;a class="reference external" href="mailto:support&amp;#64;crosscompute.com"&gt;support&amp;#64;crosscompute.com&lt;/a&gt; where it
will join a growing collection of analytics for the public good. You
will get the credit for the algorithm, the revenue and users from around
the world.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Roy Hyunjin Han</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/34-crosscompute-is-a-web-platform-where-users-ca.html</guid></item><item><title>35. PyMC: Markov chain Monte Carlo in Python</title><link>https://pyvideo.org/pycon-us-2012/35-pymc-markov-chain-monte-carlo-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;PyMC implements a suite of Markov chain Monte Carlo (MCMC) sampling
algorithms making it extremely flexible, extensible and applicable to a
large suite of statistical modeling problems. PyMC's clear, concise
syntax allows scientists to flexibly implement Bayesian models without
hand-coding samplers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Fonnesbeck</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/35-pymc-markov-chain-monte-carlo-in-python.html</guid></item><item><title>36. Using Python for robotics with Aldebaran's humanoid robot NAO.</title><link>https://pyvideo.org/pycon-us-2012/36-using-python-for-robotics-with-aldebarans-hu.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this poster session, we shall review how Python can be used to
control and program Aldebaran's humanoid robot NAO.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dimitri Merejkowsky</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/36-using-python-for-robotics-with-aldebarans-hu.html</guid></item><item><title>37. Building a Robot that Can Play Angry Birds on a Smartphone (or Robots are the Future of Testing)</title><link>https://pyvideo.org/pycon-us-2012/37-building-a-robot-that-can-play-angry-birds-on.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A poster session for a hands-on demo of &amp;quot;BitbeamBot&amp;quot;. It started as an
art project, but it has a much more serious practical application:
mobile web testing. To trust that your mobile app truly works, you need
an end-to-end test on the actual device. BitbeamBot is an
Arduino-powered open-source hardware CNC robot that can test any
application on any mobile device.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Huggins</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/37-building-a-robot-that-can-play-angry-birds-on.html</guid></item><item><title>38. ABC: the mother of Python</title><link>https://pyvideo.org/pycon-us-2012/38-abc-the-mother-of-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Before Python, Guido was a contributor to the ABC language and
environment. ABC was designed to teach programming, and introduced many
&amp;quot;Pythonic&amp;quot; ideas: integrated dicts and tuples, structure by indentation,
strong typing without declarations etc. With high demand for Python in
education, the legacy of ABC is more relevant than ever as we design
courses and environments for learners.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luciano Ramalho</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/38-abc-the-mother-of-python.html</guid></item><item><title>39. Python under PyCScope</title><link>https://pyvideo.org/pycon-us-2012/39-python-under-pycscope.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;CScope has been around for years, and is a very useful tool to get a
handle on C source code. Pycscope is an attempt to bring those benefits
to the world of Python. Unfortunately, the existing version is woefully
out of date. We take a walk through an attempt to update it, correct
some flaws and make it more generally useful to us, while giving us a
view into the Python parser.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Portante</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/39-python-under-pycscope.html</guid></item><item><title>4. How the Tor Project uses Python</title><link>https://pyvideo.org/pycon-us-2012/4-how-the-tor-project-uses-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;While the Tor client software itself is written in C, there's more to
the Tor project than just the core client. Come see how the Tor project
uses Python for network analysis, metrics, and various front- and
back-end services.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christine Spang</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/4-how-the-tor-project-uses-python.html</guid></item><item><title>40. MediaGoblin: The Road to Federation</title><link>https://pyvideo.org/pycon-us-2012/40-mediagoblin-the-road-to-federation.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;From just a gleam in founder Chris Webber's eye to a full tilt media
hosting project supporting photos, HTML5 video, and more, the road to
federation has been a wild ride so far. Come talk to us about the
challenges, the fun and the future.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From just a gleam in founder Chris Webber's eye to a full tilt media
hosting project supporting photos, HTML5 video, and more, the road to
federation has been a wild ride so far. We owe a lot to the huge
community of fellow federators whose work on the ostaus library enabled
us to start in the middle with our own not-quite-finished spin, Kuneco.
Kudos to the GNU project for getting excited about the web with us.
We're also thankful for the massive outpouring of project love that
channeled itself through transifex and has made Media Goblin
global-ready even though it isn't finished. Ever thought about switching
databases midstream? Come talk to us, Mongo to SQL wasn't as bad as we'd
been expecting. We'll also tell you all about our minimalist wsgi
un-framework design and how we think it's working compared to Django or
even Pylons/Pyramid.&lt;/p&gt;
&lt;p&gt;What's still left do? Smoother interoperations with allied projects like
StatusNet and Diaspora. Support for more media types like 3D modelling
and presentations. World domination... in a friendly way! Swing by if
you're looking for a new project to get involved with or just want
details to take back to your own.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Allan Webber</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/40-mediagoblin-the-road-to-federation.html</guid></item><item><title>41. Git 'er Done Fast! Developing Apps for the Cloud with Django and PyMongo in 30 Minutes or Less</title><link>https://pyvideo.org/pycon-us-2012/41-git-er-done-fast-developing-apps-for-the-cl.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;RedHat talks about OpenShift.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Blado</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/41-git-er-done-fast-developing-apps-for-the-cl.html</guid></item><item><title>42. The Future of Python Packaging</title><link>https://pyvideo.org/pycon-us-2012/42-the-future-of-python-packaging.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;There are currently multiple methods for packaging, distributing,
discovering, and installing Python software. This presentation will
discuss the limitations of the current methods, the efforts to
standardize Python packaging, and practical advice for developers to add
support for the new packaging library, distutils2 (&amp;quot;packaging&amp;quot; in Python
3.3+), to their software.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Wilson</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/42-the-future-of-python-packaging.html</guid></item><item><title>43. What is IPv6 and why does my website I need it</title><link>https://pyvideo.org/pycon-us-2012/43-what-is-ipv6-and-why-does-my-website-i-need-i.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;On February 3rd, 2011 the world ran out of the IPv4 addresses that we
know and love. Clearly the Internet has survived even though hardly
anyone has deployed IPv4's successor, IPv6. Drop by to learn about what
IPv6 is, why you should deploy it and some of the hurdles to deployment.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Background&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On February 3rd, 2011 the world ran out of the IPv4 addresses that we
know and love. The Internet continues to work thanks to technologies
like NAT that enable private IP addresses like 192.168.1.1 and 10.0.0.1
to be reused across organizations. However, even these large blocks of
private IP addresses are not large enough for large ISPs like Comcast in
the United States that give several IP addresses to each customer (ex.
cable set top box, voip, cable modem).&lt;/p&gt;
&lt;p&gt;To continue adding new customers large ISPs have begun deploying two
technologies: IPv6 and large scale NAT.&lt;/p&gt;
&lt;p&gt;Large scale NAT is a way for large ISPs to put several of their
customers behind a single public IP address. This means that the one
public IPv4 address you used to have to yourself is now shared by you
and several of your neighbors. It means that as a website owner it is
now more difficult to discern anything useful from the IP addresses
visiting your website.&lt;/p&gt;
&lt;p&gt;IPv6 solves the address exhaustion problem by moving from approximately
4 billion IP addresses to 3.4×10^38 IP addresses; more than the number
of atoms on Earth. With plenty of IP addresses ISPs can now return to
giving out unique, public IP addresses to each customer.&lt;/p&gt;
&lt;p&gt;Many mobile operators are already beginning to deploy IPv6. In 2009
Verizon issued a mandate that any LTE devices on its network support
IPv6 with IPv4 support being listed as optional [1]. An IPv6-only device
will still need access to the IPv4 Internet, however, IPv6 and IPv4 are
not compatible. Providers like Verizon are putting in place protocol
translation devices that inspect Internet traffic going through them and
proxy IPv4-only websites to their IPv6 customers. While this may sound
wonderful it means that mobile providers are inspecting and rewriting
your packets. Making things more interesting is that this won't work
securely over SSL. The solution is to enable IPv6 on your website so
that IPv6-only hosts can directly access your content.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Joining the IPv6 bandwagon&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Amazon's Elastic Load Balancer supports IPv6 and is already enabled in
all east coast availability zones [2]. If you're already using ELB
enabling IPv6 on your website is as easy as making a single DNS change.
Or so we'd hope, there are still some impediments to a world where your
site runs seamlessly on IPv6.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The user with broken IPv6&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are people in the world with broken or inferior IPv6 connectivity
and a web browser or operating system that attempt to use IPv6 anyway.
What this means is that if you turn on IPv6 on your website you have the
potential to cut off those users from your site. In this talk I'll
discuss methods for measuring and analyzing this loss before your
broadly enable IPv6 so that you can make an informed decision about when
and how to flip the switch.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Geo IP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Geo IP libraries today are still coming to terms with IPv6. One vendor
in particular is working on IPv6 but only provides limited support in
their free libraries and not yet in their python driver. In their
commercial library, the one generally considered better, they do not
support IPv6 yet due to lack of data [3].&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IPv6 without Amazon&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;At Eventbrite we do development inside of Virtual Box virtual machines.
In this talk I'll discuss how we configure IPv6 on both the host and
guest operating systems so that we can test IPv6 before we push to
Amazon.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IP Address Validation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you accept IP addresses from end users check your IP address
validation routines (Django has support, see GenericIPAddressField).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;[1]
[&lt;a class="reference external" href="http://www.circleid.com/posts/20090609_verizon_mandates_ipv6_support_for_next_gen_cell_phones/](http://www.circleid.com/posts/20090609_verizon_mandates_ipv6_support_for_next_gen_cell_phones/"&gt;http://www.circleid.com/posts/20090609_verizon_mandates_ipv6_support_for_next_gen_cell_phones/](http://www.circleid.com/posts/20090609_verizon_mandates_ipv6_support_for_next_gen_cell_phones/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;[2]
[&lt;a class="reference external" href="http://www.allthingsdistributed.com/2011/05/aws_ipv6.html](http://www.allthingsdistributed.com/2011/05/aws_ipv6.html"&gt;http://www.allthingsdistributed.com/2011/05/aws_ipv6.html](http://www.allthingsdistributed.com/2011/05/aws_ipv6.html&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;[3]
[&lt;a class="reference external" href="http://www.maxmind.com/app/ipv6](http://www.maxmind.com/app/ipv6"&gt;http://www.maxmind.com/app/ipv6](http://www.maxmind.com/app/ipv6&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob Van Zant</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/43-what-is-ipv6-and-why-does-my-website-i-need-i.html</guid></item><item><title>46. HTSQL : a navigational query language for relational databases</title><link>https://pyvideo.org/pycon-us-2012/46-htsql-a-navigational-query-language-for-rel.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This poster will cover a description of the HTSQL query language
(&lt;a class="reference external" href="http://htsql.org"&gt;http://htsql.org&lt;/a&gt;).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catherine Devlin</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/46-htsql-a-navigational-query-language-for-rel.html</guid></item><item><title>48. Advanced Parallel Primitives in SPM.Python for Data and Graph Analytics</title><link>https://pyvideo.org/pycon-us-2012/48-advanced-parallel-primitives-in-spmpython-fo.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Traditional solutions for data and graph analytics tend to be highly
fragmented, and take the form of stand-alone frameworks. In this poster
session, we shall describe our approach that is centered around a suite
of advanced parallel primitives embedded within SPM.Python. These
primitives augment the serial Python language with concepts like
parallel generators, emitters and exceptions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Minesh B Amin</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/48-advanced-parallel-primitives-in-spmpython-fo.html</guid></item><item><title>7. The Artemis Project: Promoting Computer Science to High School Girls</title><link>https://pyvideo.org/pycon-us-2012/7-the-artemis-project-promoting-computer-scienc.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Artemis Project is a summer program to introduce high school girls
to the problem-solving skills that are at the core of computer science.
As coordinators, we found that there is a lot of undiscovered talent and
enthusiasm for CS in the younger generation. Our poster is meant to
encourage discussions on intuitive ways to introduce programming and
interesting projects for novice programmers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katherine Zhao</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/7-the-artemis-project-promoting-computer-scienc.html</guid></item><item><title>8. BoolPy: Using Python for Symbolic Boolean Algebra Simplification</title><link>https://pyvideo.org/pycon-us-2012/8-boolpy-using-python-for-symbolic-boolean-alge.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;BoolPy is a Python module that iteratively simplifies Boolean Algebra
expressions according to the Boolean Theorems. The purpose of this talk
is twofold: (1) To present the details of an Object-Oriented solution to
the symbolic computing problem and (2) to present the BoolPy module as a
useful classroom tool for teaching Boolean Algebra in college-level
mathematics and computer science courses.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Moore</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/8-boolpy-using-python-for-symbolic-boolean-alge.html</guid></item><item><title>9. Developing Humanitarian Packages with Sugar and Python</title><link>https://pyvideo.org/pycon-us-2012/9-developing-humanitarian-packages-with-sugar-an.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="mailto:FOSS&amp;#64;RIT"&gt;FOSS&amp;#64;RIT&lt;/a&gt; is an applied research lab at Rochester Institute of Technology
focused on promoting free/open source software and open web
technologies. The lab helped create a series of classes which have
resulted in several educational games and tools written in Python for
the Sugar desktop environment. Come learn more about our students'
projects and how open source can be applied in the classroom.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathaniel Case</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/9-developing-humanitarian-packages-with-sugar-an.html</guid></item><item><title>Building A Python-Based Search Engine</title><link>https://pyvideo.org/pycon-us-2012/building-a-python-based-search-engine.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Search is an increasingly common request in all types of applications as
the amount of data all of us deal with continues to grow. The
technology/architecture behind search engines is wildly different from
what many developers expect. This talk will give a solid grounding in
the fundamentals of providing search using Python to flesh out these
concepts in a simple library.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Lindsley</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/building-a-python-based-search-engine.html</guid></item><item><title>Deep Freeze: building better stand-alone apps with Python</title><link>https://pyvideo.org/pycon-us-2012/deep-freeze-building-better-stand-alone-apps-wit.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;There's more to shipping a stand-alone python app than just running
py2exe over your code. Want to deploy automatic updates? Want to be sure
it runs on legacy platforms? Want to add professional touches like code
signing? And want to do this all in a cross-platform manner? This talk
will show you the tools you can use to make your frozen apps better in a
variety of small yet important ways.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan Kelly</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/deep-freeze-building-better-stand-alone-apps-wit.html</guid></item><item><title>Diversity in practice: How the Boston Python User Group grew to 1700 people and over 15% women</title><link>https://pyvideo.org/pycon-us-2012/diversity-in-practice-how-the-boston-python-user.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;How do you bring more women into programming communities with long-term,
measurable results? In this talk we'll analyze our successful effort,
the Boston Python Workshop, which brought over 200 women into Boston's
Python community this year. We'll talk about lessons learned running the
workshop, the dramatic effect it has had on the local user group, and
how to run a workshop in your city.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Asheesh Laroia</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/diversity-in-practice-how-the-boston-python-user.html</guid></item><item><title>Improving Documentation with "Beginner's Mind" (or: Fixing the Django Tutorial)</title><link>https://pyvideo.org/pycon-us-2012/improving-documentation-with-beginners-mind-o.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk evaluates a well-known free software tutorial (the official
Django tutorial) from the perspective of a web development novice in
order to point out omissions and common sticking points and suggest
improvements. More generally, this talk is useful to anyone looking to
improve their project's tutorials and other newcomer-targeted
documentation by approaching them with &amp;quot;beginner's mind&amp;quot;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Karen Rustad</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/improving-documentation-with-beginners-mind-o.html</guid></item><item><title>Keynote: Guido Van Rossum</title><link>https://pyvideo.org/pycon-us-2012/keynote-guido-van-rossum.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guido van Rossum</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/keynote-guido-van-rossum.html</guid></item><item><title>More than just a pretty web framework, the Tornado IOLoop</title><link>https://pyvideo.org/pycon-us-2012/more-than-just-a-pretty-web-framework-the-tornad.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Tornado, often thought of as a web development framework and toolset is
built on top of a protocol-agnostic IOLoop, presenting an alternative to
Twisted as a foundation for asynchronous application development in
Python. This talk covers the Tornado IOLoop, its features and the
process of writing drivers and applications using it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gavin M. Roy</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/more-than-just-a-pretty-web-framework-the-tornad.html</guid></item><item><title>Parsing Horrible Things with Python</title><link>https://pyvideo.org/pycon-us-2012/parsing-horrible-things-with-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;If you've ever wanted to get started with parsers, here's your chance
for a ground-floor introduction. A harebrained spare-time project gives
birth to a whirlwind journey from basic algorithms to Python libraries
and, at last, to a parser for one of the craziest syntaxes out there:
the MediaWiki grammar that drives Wikipedia.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Rose</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/parsing-horrible-things-with-python.html</guid></item><item><title>Parsing sentences with the OTHER natural language tool: LinkGrammar</title><link>https://pyvideo.org/pycon-us-2012/parsing-sentences-with-the-other-natural-language.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Many of you are probably familiar with NLTK, the wonderful Natural
Language Toolkit for Python. You may not be familiar with Linkgrammar,
which is a sentence parsing system created at Carnegie Melon university.
Linkgrammar is quite robust and works &amp;quot;out of the box&amp;quot; in a way that
NLTK does not for sentence parsing.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Elmore</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/parsing-sentences-with-the-other-natural-language.html</guid></item><item><title>Patterns for building large Pyramid applications</title><link>https://pyvideo.org/pycon-us-2012/patterns-for-building-large-pyramid-applications.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Pyramid is a very flexible framework, but when dealing with large
projects and multiple developers it pays to establish a few ground rules
and follow some conventions. In this talk we'll discuss some patterns
for organizing and developing a large Pyramid application.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carlos de la Guardia</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/patterns-for-building-large-pyramid-applications.html</guid></item><item><title>Python, Linkers, and Virtual Memory</title><link>https://pyvideo.org/pycon-us-2012/python-linkers-and-virtual-memory.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Why does “top” show that your Python process uses 110&amp;nbsp;MB of virtual
memory but has a resident set size of 9&amp;nbsp;MB? Does it consume more memory
to spawn several interpreters, or to run one Python and have it fork()
further workers? What is an “undefined symbol,” anyway? Learn about how
an operating system manages memory, loads shared libraries, and what
this means for Python servers and applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/python-linkers-and-virtual-memory.html</guid></item><item><title>Robot NAO</title><link>https://pyvideo.org/pycon-us-2012/robot-nao.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/robot-nao.html</guid></item><item><title>Sketching a Better Product</title><link>https://pyvideo.org/pycon-us-2012/sketching-a-better-product.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;If writing is a means for organizing your thoughts, then sketching is a
means for organizing your thoughts visually. Just as good writing
requires drafts, good design requires sketches: low-investment,
low-resolution braindumps. Learn how to use ugly sketching to iterate
your way to a better product.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Idan Gazit</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/sketching-a-better-product.html</guid></item><item><title>Sunday Afternoon Lightning talks (90 minutes)</title><link>https://pyvideo.org/pycon-us-2012/sunday-afternoon-lightning-talks-90-minutes.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/sunday-afternoon-lightning-talks-90-minutes.html</guid><category>lightning talks</category></item><item><title>Sunday Morning Lightning talks</title><link>https://pyvideo.org/pycon-us-2012/sunday-morning-lightning-talks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/sunday-morning-lightning-talks.html</guid><category>lightning talks</category></item><item><title>Transifex: Beautiful Python app localization</title><link>https://pyvideo.org/pycon-us-2012/transifex-beautiful-python-app-localization.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Localization of Python apps used to be hard, but not any more. This talk
will offer a short intro on software localization in Python and discuss
today's best practices. It will present Transifex, a modern,
Django-based SaaS, also referred to as 'The Github of translations',
used by 2.000 open-source projects including Django, Mercurial, Fedora
and Firefox.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dimitris Glezos</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/transifex-beautiful-python-app-localization.html</guid></item><item><title>web2py: ideas we stole and ideas we had</title><link>https://pyvideo.org/pycon-us-2012/web2py-ideas-we-stole-and-ideas-we-had.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this talk we will provide an overview of some of the web2py design
decisions and its newest features. In particular we will discuss which
design decisions were inspired by other frameworks (Django, Turbogears,
Flask) and which were not and why.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Massimo Di Pierro</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/web2py-ideas-we-stole-and-ideas-we-had.html</guid></item><item><title>What's new and interesting in standard library</title><link>https://pyvideo.org/pycon-us-2012/whats-new-and-interesting-in-standard-library.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk distills some intereting stuff from What's new document from
2.7, 3.2 and upcoming 3.3 release. Look out for those new arguments to
your favorite methods, functions add the wow! factor to your code. Heard
of &amp;#64;lru_cache?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Senthil Kumaran</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/whats-new-and-interesting-in-standard-library.html</guid></item><item><title>What's New in Python on Windows</title><link>https://pyvideo.org/pycon-us-2012/whats-new-in-python-on-windows.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;With nearly 1.5 million downloads per month, the CPython installers for
Windows account for a huge amount of the traffic through python.org, and
they're the most common way for Windows users to obtain Python. Take a
look at what's going on with Python on Windows and see what the road
ahead looks like for Python 3.3.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Curtin</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/whats-new-in-python-on-windows.html</guid></item><item><title>Writing GIMP Plug-ins in Python</title><link>https://pyvideo.org/pycon-us-2012/writing-gimp-plug-ins-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn how to write Python plug-ins for GIMP, the GNU Image Manipulation
Program. With PyGIMP, you can automate simple image processing tasks in
just a few lines of PyGIMP, develop elaborate plug-ins that do low-level
pixel manipulation, or anything in between.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Akkana Peck</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/writing-gimp-plug-ins-in-python.html</guid></item><item><title>A Gentle Introduction to GIS</title><link>https://pyvideo.org/pycon-us-2012/a-gentle-introduction-to-gis.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Datums! Coordinate systems! Map projections! Topologies! Spatial
applications are a nebulous, daunting concept to most Pythonistas. This
talk is a gentle introduction into the concepts, terminology and tools
to demystify the world of the world.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Scheirer</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/a-gentle-introduction-to-gis.html</guid></item><item><title>Advanced Celery</title><link>https://pyvideo.org/pycon-us-2012/advanced-celery.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will delve deep into advanced aspects of the Celery task queue
and ecosystem. Previous experience with task queues and message oriented
middleware is beneficial.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ask Solem Hoel</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/advanced-celery.html</guid></item><item><title>Building a Kinect game with Python</title><link>https://pyvideo.org/pycon-us-2012/building-a-kinect-game-with-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will show you how to develop a game using Kinect from Python.
I'll start w/ an introduction to the Kinect API including skeleton
tracking, normal video, depth video, and audio APIs including speech
recognition. I’ll then show how the Kinect APIs can be incorporated into
a game using PyGame. After the talk you’ll be able to start developing
your own Python based Kinect games!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dino Viehland</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/building-a-kinect-game-with-python.html</guid></item><item><title>Building a Robot that Can Play Angry Birds on a Smartphone, (or Robots are the Future of Testing)</title><link>https://pyvideo.org/pycon-us-2012/building-a-robot-that-can-play-angry-birds-on-a-s.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Can your robot play Angry Birds? On an iPhone? Mine can. I call it
&amp;quot;BitbeamBot&amp;quot;. It started as an art project, but it has a much more
serious practical application: mobile web testing. To trust that your
mobile app truly works, you need an end-to-end test on the actual
device. BitbeamBot is an Arduino-powered open-source hardware CNC robot
that can test any application on any mobile device.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Huggins</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/building-a-robot-that-can-play-angry-birds-on-a-s.html</guid></item><item><title>Cache Rules Everything Around Me</title><link>https://pyvideo.org/pycon-us-2012/cache-rules-everything-around-me.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk aims to briefly introduce the core concepts of caching and
covers the best practices of implementing them, using a small variety of
python web frameworks (Flask, Django) for example code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Burch</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/cache-rules-everything-around-me.html</guid></item><item><title>Coroutines, event loops, and the history of Python generators</title><link>https://pyvideo.org/pycon-us-2012/coroutines-event-loops-and-the-history-of-pytho.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk traces lightweight concurrency from Python 2.2's generators,
which enabled semi-coroutines as a mechanism for scheduling &amp;quot;weightless&amp;quot;
threads; to PEP 342, which created true coroutines, and hence made
event-driven programming easier; to 3rd party libraries built around
coroutines, from older GTasklet and peak.events to the current
Greenlet/gevent and Twisted Reactor.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Mertz</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/coroutines-event-loops-and-the-history-of-pytho.html</guid></item><item><title>Cross-Compiling Python &amp; C Extensions for Embedded Systems</title><link>https://pyvideo.org/pycon-us-2012/cross-compiling-python-c-extensions-for-embedde.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Cross-compiling is not a use case directly supported by the Python build
and extension system. This talk will discuss the process of building
python for your embedded platform, and the basics of getting C
extensions compiled and running. It will focus on Linux so that the
build host and the build target are the same.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Lambacher</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/cross-compiling-python-c-extensions-for-embedde.html</guid></item><item><title>Designing Embedded Systems with Linux and Python</title><link>https://pyvideo.org/pycon-us-2012/designing-embedded-systems-with-linux-and-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The continual decrease in the cost of computer hardware is allowing more
embedded systems to be built with Linux and Python, instead of the
traditional approach of a real-time operating system and C. This talk
reviews the differences between those approaches and describes problems,
solutions, and tools that can be used when building embedded systems
with Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Kohler</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/designing-embedded-systems-with-linux-and-python.html</guid></item><item><title>Django Form Processing Deep Dive</title><link>https://pyvideo.org/pycon-us-2012/django-form-processing-deep-dive.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Django Form processing often takes a back seat to flashier, more visible
parts of the framework. But Django forms, fully leveraged, can help
developers be more productive and write more cohesive code. This talk
will dive deep into the stock Django forms package, as well as discuss a
strategy for abstracting validation for forms, and the use of unit and
integration tests with forms.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan Yergler</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/django-form-processing-deep-dive.html</guid></item><item><title>Django Templating: More Than Just Blocks</title><link>https://pyvideo.org/pycon-us-2012/django-templating-more-than-just-blocks.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Django's template language is designed to strike a balance between power
and ease of use; learn how to use this balance to create awesome looking
websites. This talk will cover the basics and best practices of Django
templating, from custom tag and filter creation, to the finer points of
template rendering and loading, and even to replacing the default
templating engine itself.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christine Cheung</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/django-templating-more-than-just-blocks.html</guid></item><item><title>Flexing SQLAlchemy's Relational Power</title><link>https://pyvideo.org/pycon-us-2012/flexing-sqlalchemys-relational-power.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;How do you take the big step from casual SQLAlchemy user, who treats
your database as a mysterious object store, to advanced power user, who
optimizes critical queries, plans indexing and migrations, and generates
efficient reports? This talk will teach you how databases think; why
humanity invented the Relational Algebra; and how SQLAlchemy grants you
access to relational power.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/flexing-sqlalchemys-relational-power.html</guid></item><item><title>Getting the Most Out of Python Imports</title><link>https://pyvideo.org/pycon-us-2012/getting-the-most-out-of-python-imports.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;To really take advantage of Python you must understand how imports work
and how to use them effectively. In this talk we'll discuss both of
these. After a short introduction to imports, we'll dive right in and
look at how customizing import behavior can make all your wildest dreams
come true.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Snow</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/getting-the-most-out-of-python-imports.html</guid></item><item><title>Hand Coded Applications with SQLAlchemy</title><link>https://pyvideo.org/pycon-us-2012/hand-coded-applications-with-sqlalchemy.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;SQLAlchemy is the object relational mapper and database toolkit for
Python, first introduced in 2005. In this talk I'll describe why
SQLAlchemy has always been called a &amp;quot;toolkit&amp;quot;, detailing the software
construction mindset for which SQLAlchemy was designed to be used with -
what I am currently referring to as the &amp;quot;Hand Coded&amp;quot; approach.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Bayer</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/hand-coded-applications-with-sqlalchemy.html</guid></item><item><title>How CherryPy supports Python 2 and 3</title><link>https://pyvideo.org/pycon-us-2012/how-cherrypy-supports-python-2-and-3.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;CherryPy was the first web framework to be made available for use with
Python 3, and we tried several approaches to support both Python 2 and 3
before settling on one. Learn about the ups and the downs of each
approach, and ways you can make your own porting project easier.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Brewer</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/how-cherrypy-supports-python-2-and-3.html</guid></item><item><title>How the PyPy JIT works</title><link>https://pyvideo.org/pycon-us-2012/how-the-pypy-jit-works.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Python community is abuzz about the major speed gains PyPy can offer
pure Python code. But how does PyPy JIT actually work? This talk will
discuss how the PyPy JIT is implemented. It will include descriptions of
the tracing, optimization, and assembly generation phases. I will
demonstrate each step with a example loop.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin Peterson</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/how-the-pypy-jit-works.html</guid></item><item><title>David Beazley Keynote: Tinkering with PyPy</title><link>https://pyvideo.org/pycon-us-2012/keynote-david-beazley.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Beazley</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/keynote-david-beazley.html</guid><category>pypy</category></item><item><title>Mailman 3</title><link>https://pyvideo.org/pycon-us-2012/mailman-3.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Mailman 3 has been in development for several years. This is an
evolution of the ever popular mailing list management system that runs
thousands of mailing lists around the world. This talk describes how the
code has been modernized and how the architectural deficiencies of
Mailman 2 have been addressed using REST and other technologies. This is
a spinoff from the AOSA chapter on Mailman 3.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Barry Warsaw</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/mailman-3.html</guid></item><item><title>Making Jython Faster and Better</title><link>https://pyvideo.org/pycon-us-2012/making-jython-faster-and-better.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;As a dynamic language, Python is difficult to optimize. In addition,
these dynamic features make using Python code from Java currently too
complex. However, Java 7 adds the invokedynamic bytecode and
corresponding library support, making it possible to finally address
these problems in Jython. This talk will describe work in progress to
make Jython faster and better (improving Java integration).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jim Baker</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/making-jython-faster-and-better.html</guid></item><item><title>Making maps with Python</title><link>https://pyvideo.org/pycon-us-2012/making-maps-with-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python makes it easy to store, query, and transform geodata. We will run
through a handful of useful GIS libraries and patterns that let you do
magical things with your maps. If you want to make maps that are more
interactive and more interesting, this talk is for you.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zain Memon</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/making-maps-with-python.html</guid></item><item><title>Militarizing Your Backyard with Python: Computer Vision and the Squirrel Hordes</title><link>https://pyvideo.org/pycon-us-2012/militarizing-your-backyard-with-python-computer.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Has your garden been ravaged by the marauding squirrel hordes? Has your
bird feeder been pillaged? Tired of shaking your fist at the neighbor
children? Learn how to use Python to tap into computer vision libraries
and build an automated sentry water cannon capable of soaking intruders.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kurt Grandis</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/militarizing-your-backyard-with-python-computer.html</guid></item><item><title>Polyglot Programming with Python: Python/Scala Interop</title><link>https://pyvideo.org/pycon-us-2012/polyglot-programming-with-python-pythonscala-in.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;I won't just demonstrate how to use projects that bridge programming
languages, I'll walk through the lower-level code that allows
inter-language communication to happen.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea O. K. Wright</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/polyglot-programming-with-python-pythonscala-in.html</guid></item><item><title>Pragmatic Unicode, or, How do I stop the pain?</title><link>https://pyvideo.org/pycon-us-2012/pragmatic-unicode-or-how-do-i-stop-the-pain.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python has great Unicode support, but it's still your responsibility to
handle it properly. I'll do a quick overview of what Unicode is, but
only enough to get your program working properly. I'll describe
strategies to make your code work, and keep it working, without getting
too far afield in Unicode la-la- land.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ned Batchelder</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/pragmatic-unicode-or-how-do-i-stop-the-pain.html</guid></item><item><title>Project Gado: Building an Open Archival Scanning Robot Using Python and Arduino</title><link>https://pyvideo.org/pycon-us-2012/project-gado-building-an-open-archival-scanning.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Project Gado is an initiative which aims to create an open-source
archival scanning robot which small archives can purchase for $500 and
use to autonomously scan their photographic collections. This talk
presents the Gado 2, a prototype scanning robot built around Python and
Arduino, and shares lessons learned from using Python as the primary
language in a large-scale archival scanning project.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Smith</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/project-gado-building-an-open-archival-scanning.html</guid></item><item><title>Python and HDF5 - Fast Storage for Large Data</title><link>https://pyvideo.org/pycon-us-2012/python-and-hdf5-fast-storage-for-large-data.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The presentation introduces the possibilities to use HDF5 (Hierarchical
Data Format) from Python. HDF5 is one of the fastest ways to store large
amounts of numerical data. The talk is for scientist who would like to
store their measured or calculated data as well as for programmers who
are interested in non-relational data storage.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Müller</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/python-and-hdf5-fast-storage-for-large-data.html</guid></item><item><title>Python for data lovers: explore it, analyze it, map it</title><link>https://pyvideo.org/pycon-us-2012/python-for-data-lovers-explore-it-analyze-it-m.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Exploring and analyzing data can be daunting and time-consuming, even
for data lovers. Python can make the process fun and exciting. We will
present techniques of data analysis, along with python tools that help
you explore and map data. Our talk includes examples that show how
python libraries such as csvkit, matplotlib, scipy, networkx and pysal
can help you dig into and make sense of your data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dana Bauer</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/python-for-data-lovers-explore-it-analyze-it-m.html</guid></item><item><title>Python for makers</title><link>https://pyvideo.org/pycon-us-2012/python-for-makers.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Digital fabrication is the art of translating digital designs into
physical objects. Using personal machines that are controlled via
software, a live demonstration of CNC milling and 3D printing will also
be performed. This talk is a walkthrough from 3D models to machine
motion, that shows how we can use Python to write GCODE generators that
create endless form.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hugo Boyer</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/python-for-makers.html</guid></item><item><title>Python Meets the Arduino</title><link>https://pyvideo.org/pycon-us-2012/python-meets-the-arduino.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Arduino is an open-source electronics prototyping platform based on
flexible, easy-to-use hardware and software. Python is our favorate
programming language that allows you to integrate systems more
effectively. Learn how to use Python to communicate with an Arduino and
interact with sensors, solenoids and motors.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Kropf</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/python-meets-the-arduino.html</guid></item><item><title>Python Software Foundation Chairman's Address</title><link>https://pyvideo.org/pycon-us-2012/python-software-foundation-chairmans-address.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Holden</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/python-software-foundation-chairmans-address.html</guid></item><item><title>RESTful APIs With Tastypie</title><link>https://pyvideo.org/pycon-us-2012/restful-apis-with-tastypie.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Providing full-featured REST APIs is an increasingly popular request.
Tastypie allows you to easily implement a customizable REST API for your
Python or Django applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Lindsley</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/restful-apis-with-tastypie.html</guid></item><item><title>Saturday Evening Lightning talks (60 minutes)</title><link>https://pyvideo.org/pycon-us-2012/saturday-evening-lightning-talks-60-minutes.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/saturday-evening-lightning-talks-60-minutes.html</guid><category>lightning talks</category></item><item><title>Saturday Morning Lightning talks</title><link>https://pyvideo.org/pycon-us-2012/saturday-morning-lightning-talks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/saturday-morning-lightning-talks.html</guid><category>lightning talks</category></item><item><title>Sharing is Caring: Posting to the Python Package Index</title><link>https://pyvideo.org/pycon-us-2012/sharing-is-caring-posting-to-the-python-package.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Due to its robust namespacing, Python uniquely equips developers to
write and distribute reusable code. The Python community has a tool for
this: the Python Package Index. PyPI is a massive repository of code,
and in this talk you'll learn how to take code that you've written it
and register and distribute it for use by others.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke Sneeringer</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/sharing-is-caring-posting-to-the-python-package.html</guid></item><item><title>Spatial data and web mapping with Python</title><link>https://pyvideo.org/pycon-us-2012/spatial-data-and-web-mapping-with-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Spatial data are often seen as opaque to most developers, and while
dealing with them does require a shift in approach from the data types
we most regularly handle, they needn’t be the domain of specialists.
High-quality Python libraries and Python-based applications exist for
operating on and transforming spatial data, and for creating
visualizations, including maps for presentation on the web.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Smith</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/spatial-data-and-web-mapping-with-python.html</guid></item><item><title>Storing, manipulating and visualizing timeseries using open source packages in Python</title><link>https://pyvideo.org/pycon-us-2012/storing-manipulating-and-visualizing-timeseries.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Analyzing, storing and visualizing time-series efficiently are recurring
though difficult tasks in various aspects of scientific data analysis
such as meteorological forecasting, financial modeling, ... In this talk
we will explore the current Python ecosystem for doing this effectively,
comparing options, using only open source packages that are mature yet
still under active development.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonathan Rocher</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/storing-manipulating-and-visualizing-timeseries.html</guid></item><item><title>Storm: the Hadoop of Realtime Stream Processing</title><link>https://pyvideo.org/pycon-us-2012/storm-the-hadoop-of-realtime-stream-processing.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Twitter's new scalable, fault-tolerant, and simple(ish) stream
programming system... with Python!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gabriel Grant</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/storm-the-hadoop-of-realtime-stream-processing.html</guid></item><item><title>Testing and Django</title><link>https://pyvideo.org/pycon-us-2012/testing-and-django.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A deep dive into writing tests with Django, covering Django's custom
test- suite-runner and the testing utilities in Django, what all they
actually do, how you should and shouldn't use them (and some you
shouldn't use at all!). Also, guidelines for writing good tests (with or
without Django), and my least favorite things about testing in Django
(and how I'd like to fix them).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carl Meyer</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/testing-and-django.html</guid></item><item><title>The Email Package: Past, Present, and Future</title><link>https://pyvideo.org/pycon-us-2012/the-email-package-past-present-and-future.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The email package in the Python Standard library has had a somewhat
rocky transition into the Python3 era, and still doesn't handle
non-ASCII easily. That is about to change. This talk will compare how
things worked in Python2 (the past), how things work now (in Python3.2),
and how things will work much better in the future (hopefully
Python3.3).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">R. David Murray</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/the-email-package-past-present-and-future.html</guid></item><item><title>The Journey to Give Every Scientist a Supercomputer</title><link>https://pyvideo.org/pycon-us-2012/the-journey-to-give-every-scientist-a-supercomput.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The recent cloud buzz has hugely benefited Python web devs. But, for
Python's formidable scientific community, the cloud has been less
ambitious--until now. PiCloud is a Python-based cloud platform that
tackles a noble cause: giving every scientist in the world instant
access to a supercomputer. The talk will cover how Python inspired the
design of PiCloud, which has now processed over 100M jobs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ken Elkabany</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/the-journey-to-give-every-scientist-a-supercomput.html</guid></item><item><title>The Pyed Piper: A Modern Python Alternative to awk, sed and Other Unix Text Manipulation Utilities</title><link>https://pyvideo.org/pycon-us-2012/the-pyed-piper-a-modern-python-alternative-to-aw.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;&amp;quot;The Pyed Piper&amp;quot;, or pyp, is a linux command line text manipulation tool
similar to awk or sed, but which uses standard python string and list
methods as well as custom functions evolved to generate fast results in
an intense production environment.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toby Rosen</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/the-pyed-piper-a-modern-python-alternative-to-aw.html</guid></item><item><title>Using fabric to standardize the development process</title><link>https://pyvideo.org/pycon-us-2012/using-fabric-to-standardize-the-development-proce.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;By ensuring consistency and repeatability in setting up the development
environments of a team of developers, errors can be avoided (by
automating repetitive tasks). It also helps by lowering the entry
barrier for new developers, and letting existing developers focus on
development tasks without having to worry about infrastructure or
process issues.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ricardo Kirkner</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/using-fabric-to-standardize-the-development-proce.html</guid></item><item><title>Web Server Bottlenecks And Performance Tuning</title><link>https://pyvideo.org/pycon-us-2012/web-server-bottlenecks-and-performance-tuning.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;New Python web developers seem to love running benchmarks on WSGI
servers. Reality is that they often have no idea what they are doing or
what to look at. This talk will look at a range of factors which can
influence the performance of your Python web application. This includes
the impact of using threads vs processes, number of processors, memory
available, the GIL and slow HTTP clients.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Dumpleton</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/web-server-bottlenecks-and-performance-tuning.html</guid></item><item><title>What Python can learn from Java</title><link>https://pyvideo.org/pycon-us-2012/what-python-can-learn-from-java.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Java is in some ways a bogeyman to the Python community -- the language
that parents scare their children with, the Cobol of the 21st century.
But if we look past the cesspool of JEE it turns out that Java has
quietly become an excellent systems environment, one that is still in
many ways ahead of its time.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonathan Ellis</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/what-python-can-learn-from-java.html</guid></item><item><title>What you need to know about datetimes</title><link>https://pyvideo.org/pycon-us-2012/what-you-need-to-know-about-datetimes.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;time&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;datetime&lt;/tt&gt;, and &lt;tt class="docutils literal"&gt;calendar&lt;/tt&gt; from the standard library are a
bit messy. Find out what to use where and how (particularly when you
have users in many timezones), and what extra modules you might want to
look into.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Taavi Burns</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/what-you-need-to-know-about-datetimes.html</guid></item><item><title>Why PyPy by example</title><link>https://pyvideo.org/pycon-us-2012/why-pypy-by-example.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;One of the goals of PyPy is to make existing Python code faster, however
an even broader goal was to make it possible to write things in Python
that previous would needed to be written in C or other low-level
language. This talk will show examples of this, and describe how they
represent the tremendous progress PyPy has made, and what it means for
people looking to use PyPy.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Gaynor</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/why-pypy-by-example.html</guid></item><item><title>A Noob Speaks to Noobs: Your First Site in the Cloud</title><link>https://pyvideo.org/pycon-us-2012/a-noob-speaks-to-noobs-your-first-site-in-the-cl.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A developer talks about her lessons learned with setting up her first
server, and offers advice to others about to tread that path.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Cunningham</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-09:pycon-us-2012/a-noob-speaks-to-noobs-your-first-site-in-the-cl.html</guid></item><item><title>A resume-based WSGI Load Balancer</title><link>https://pyvideo.org/pycon-us-2012/a-resume-based-wsgi-load-balancer.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;When a web application is large, it's a good idea to send different
kinds of requests to different servers to reduce the content corpus
managed by each server. A decentralized load balancing-based approach is
presented in which each application server keeps track of what it's good
at and presents its resume to load balancers, which use application
server resumes to distribute load.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">JIm Fulton</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-09:pycon-us-2012/a-resume-based-wsgi-load-balancer.html</guid></item><item><title>Advanced Security Topics</title><link>https://pyvideo.org/pycon-us-2012/advanced-security-topics.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;If your Python application has users, you should be worried about
security. This talk will cover advanced material, highlighting common
mistakes. Topics will include hashing and salts, timing attacks,
serialization, and much more. Expect eye opening demos, and an urge to
go fix your code right away.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul McMillan</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-09:pycon-us-2012/advanced-security-topics.html</guid></item></channel></rss>