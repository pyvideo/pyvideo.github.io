<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 12 Jul 2017 00:00:00 +0000</lastBuildDate><item><title>How to make money with your Python Open-Source Project</title><link>https://pyvideo.org/europython-2017/how-to-make-money-with-your-python-open-source-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Developers create new open-source projects every day. As the project
becomes popular they have to invest more and more time into it's
development and of course at some point a question arises: &amp;quot;How can
I make some money with my project ?&amp;quot;&lt;/p&gt;
&lt;p&gt;In this talk we will try to answer this question. We will talk about
different models of making money, their pros and cons. We will
concentrate on Python Open-Source projects mostly and try to answer
the following questions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What to sell?&lt;/li&gt;
&lt;li&gt;Where to sell?&lt;/li&gt;
&lt;li&gt;How to distribute?&lt;/li&gt;
&lt;li&gt;How to license?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After this talk you will have a clear understanding of how you can
make money with your project. What your next steps should be and how
you can get the actual profit while still continuing making your
customers happy.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Tepkeev</dc:creator><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-12:europython-2017/how-to-make-money-with-your-python-open-source-project.html</guid></item><item><title>Big Data with Python &amp; Hadoop</title><link>https://pyvideo.org/europython-2015/big-data-with-python-hadoop.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Max Tepkeev - Big Data with Python &amp;amp; Hadoop
[EuroPython 2015]
[24 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;Big Data - these two words are heard so often nowadays. But what
exactly is Big Data ? Can we, Pythonistas, enter the wonder world of
Big Data ? The answer is definitely &amp;quot;Yes&amp;quot;.&lt;/p&gt;
&lt;p&gt;This talk is an introduction to the big data processing using Apache
Hadoop and Python. We'll talk about Apache Hadoop, it's concepts,
infrastructure and how one can use Python with it. We'll compare the
speed of Python jobs under different Python implementations, including
CPython, PyPy and Jython and also discuss what Python libraries are
available out there to work with Apache Hadoop.&lt;/p&gt;
&lt;p&gt;This talk is intended for beginners who want to know about Hadoop and
Python or those who are already working with Hadoop but are wondering
how to use it with Python or how to speed up their Python jobs.&lt;/p&gt;
&lt;p&gt;Slides for this talk are available [here][1] and code used for
benchmarks can be found [here][2].
[1]: &lt;a class="reference external" href="http://www.slideshare.net/maxtepkeev/europython-2015-big-data-with-python-and-hadoop"&gt;http://www.slideshare.net/maxtepkeev/europython-2015-big-data-with-python-and-hadoop&lt;/a&gt;
[2]: &lt;a class="reference external" href="https://github.com/maxtepkeev/talks/tree/master/big-data-with-hadoop-and-python"&gt;https://github.com/maxtepkeev/talks/tree/master/big-data-with-hadoop-and-python&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Tepkeev</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-03:europython-2015/big-data-with-python-hadoop.html</guid></item><item><title>Do I need to switch to Go(lang) ?</title><link>https://pyvideo.org/europython-2016/do-i-need-to-switch-to-golang.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Max Tepkeev - Do I need to switch to Go(lang) ?
[EuroPython 2016]
[20 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/do-i-need-to-switch-to-golang"&gt;https://ep2016.europython.eu//conference/talks/do-i-need-to-switch-to-golang&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Nowadays, there is a lot of buzz about Go. In this talk we'll learn
the basics and most important concepts of the language, we'll further
discuss differences and similarities in Go and Python and dive into
the cool features of Go. Finally we'll talk about why popularity of Go
is raising so fast and try to answer the most important question: Do I
need to switch to Go ?&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Nowadays, there is a lot of buzz about Go. It happened so that for the
last 6 months I've been mostly programming Go, and frankly speaking I
fell in love with this language.&lt;/p&gt;
&lt;p&gt;We'll first do a quick review of the language. Go doesn't have some
language constructs, for example classes and exceptions and at first
it may seem hard to write proper Go code, but in practice the language
is so easy that I will try to teach you the basics and most important
concepts of the language. We'll further discuss differences and
similarities in Go and Python and dive into the cool features of Go.&lt;/p&gt;
&lt;p&gt;Finally we'll talk about why popularity of Go is raising so fast and
try to answer the most important question: Do I need to switch to Go ?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Tepkeev</dc:creator><pubDate>Fri, 05 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-05:europython-2016/do-i-need-to-switch-to-golang.html</guid></item><item><title>How we switched our 800+ projects from Apache to uWSGI</title><link>https://pyvideo.org/europython-2014/how-we-switched-our-800-projects-from-apache-to.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;During the last 7 years the company I am working for developed more than
800 projects in PHP and Python. All this time we were using Apache+nginx
for hosting this projects. In this talk I will explain why we decided to
switch all our projects from Apache+nginx to uWSGI+nginx and how we did
that.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk will start from describing the setup we had for the last 7
years, i.e. Apache with mod_wsgi for Python projects and mod_php4/5
for PHP projects + nginx. I will explain why we used this setup for so
long time, what problems we faced with this setup and what solutions we
tried to solve them before switching to uWSGI.&lt;/p&gt;
&lt;p&gt;Then I will tell about uWSGI, what it is, how it works and what features
it has. I will show the comparison of configuration files, how simple it
is to configure uWSGI compared to Apache.&lt;/p&gt;
&lt;p&gt;Lastly I will explain how we managed to switch all our 800+ projects
developed over the years in 2 different languages with 2 major versions
changed (PHP4/5 and Python2/3), how this switch simplified our
development and administration of this projects, the improvements we got
in memory management and other areas.&lt;/p&gt;
&lt;p&gt;Of course I will concentrate mainly on our Python projects because it is
EuroPython after all and not EuroPHP ;-)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Tepkeev</dc:creator><pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-23:europython-2014/how-we-switched-our-800-projects-from-apache-to.html</guid></item><item><title>Table Partitioning with Django</title><link>https://pyvideo.org/pycon-de-2013/table-partitioning-with-django.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Table partitioning can be thought of as a division of one large table
into several smaller tables which represent that original table. Table
partitioning is &amp;quot;transparent&amp;quot;, that means that in theory you don't need
to change any code to work with partitioned tables.&lt;/p&gt;
&lt;p&gt;We will talk about table partitioning theory in general and
implementations in different database servers. Why and when we need to
do table partitioning. What problems we can face and how we can solve
them.&lt;/p&gt;
&lt;p&gt;Django provides us with great database abstraction and ORM, but how can
we use it with table partitioning ? We will talk about existing
libraries for Django to work with table partitioning, their differences,
which is the best (if any) and why.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max Tepkeev</dc:creator><pubDate>Thu, 17 Oct 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-10-17:pycon-de-2013/table-partitioning-with-django.html</guid><category>database</category><category>django</category><category>partition</category><category>partitioning</category></item></channel></rss>