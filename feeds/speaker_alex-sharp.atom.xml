<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_alex-sharp.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-08-22T00:00:00+00:00</updated><entry><title>Big data with python</title><link href="https://pyvideo.org/pycon-au-2012/big-data-with-python.html" rel="alternate"></link><published>2012-08-22T00:00:00+00:00</published><updated>2012-08-22T00:00:00+00:00</updated><author><name>Alex Sharp</name></author><id>tag:pyvideo.org,2012-08-22:pycon-au-2012/big-data-with-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Dealing with big data isn't a particularly new problem. There are all
sorts of new solutions, each with their own niche, their own hype. It's
important to remember that python is not &amp;quot;too slow&amp;quot; for big data, and
that with projects such as&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dealing with big data isn't a particularly new problem. There are all
sorts of new solutions, each with their own niche, their own hype. It's
important to remember that python is not &amp;quot;too slow&amp;quot; for big data, and
that with projects such as scipy, numpy, cython and rpy, python is
becoming a better tool then ever for data processing. In this talk we'll
be explaining some of the theory behind big data problems, where python
fits in and some of the more interesting things you can do.&lt;/p&gt;
</summary><category term="bigdata"></category></entry></feed>