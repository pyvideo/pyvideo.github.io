<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 17 Jul 2017 00:00:00 +0000</lastBuildDate><item><title>Gevent â€” to be or not to be?</title><link>https://pyvideo.org/pycon-russia-2017/gevent-to-be-or-not-to-be.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When Python was a kid, still the second version, there was no asynchrony in it and we dealt with it as we could. Among the spin-offs of such initiatives were the greenlet package and the gevent library, based on this package. The gevent library is used in various projects to this day. My report will be about this library, what's under its hood, and what it can be useful for. I will bring architectural solutions for building asynchronous RPC based on gevent, and will talk about the problems you might encounter when using it. In the end, I'll show you how the same things can be implemented with the help of standard tools of the modern Python (the asyncio library), and will compare these approaches.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Mokrov</dc:creator><pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-17:pycon-russia-2017/gevent-to-be-or-not-to-be.html</guid></item></channel></rss>