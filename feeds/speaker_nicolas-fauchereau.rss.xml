<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 09 Jul 2014 00:00:00 +0000</lastBuildDate><item><title>Python Backends for Climate Science Web Apps</title><link>https://pyvideo.org/scipy-2014/python-backends-for-climate-science-web-apps.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;We present two web applications: (PICT: Past Interpretation of Climate
Tool), a paleo-climates reconstruction tool and CLIDESC, a climate
services layer built on top of the Clide database, a database system
used widely in the National Meteorological services across the Pacific.
Both these tools have been developed at NIWA in New Zealand.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NIWA has developed two tools dedicated respectively to the
reconstruction of the climates of the past and to the rapid and flexible
development of climate services connected to a widely used
meteorological database.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PICT (Past Interpretation of Climate Tool&lt;/strong&gt; allows the user, given a
climate proxy or set of proxies, to reconstruct likely anomalies
associated with specific proxy epochs. The tool implements the concept
of climate analogs, and reconstruct paleo-climate anomalies in terms of
mean atmospheric circulation and sea-surface-temperatures, as well as in
terms of the possible changes in the probabilities of synoptic weather
regimes (or 'attractors' in the climate system). The whole backend of
this application has been exclusively developed using Python with Numpy,
scipy, pandas and matplotlib scientific libraries. We present a brief
overview of the underlying science before exposing the choices made in
designing the python-based compute and data visualisation layer.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Clidesc&lt;/strong&gt; is an application layer, running in the browser, built on
top of &lt;strong&gt;CLIDE&lt;/strong&gt;, an open-source database specialized in handling
meteorological data in real-time and facilitating its long-term storage.
It has been developed using open standards, and facilitate the rapid
development of climate services (data analysis and visualisations
developed to increase climate intelligence and early warning systems).
Clidesc is currently being deployed in several Pacific Islands National
Meteorological services. Services can be developed using either R or
Python. Development in Python is based on Anaconda and psycopg2, which
provides the interface with the postgresql-based Clide database. We
present the context and rationale for using open-standards, and give
examples of how a user with minimum python knowledge can use templates
to rapidly implement a new service tailored to her needs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicolas Fauchereau</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-09:scipy-2014/python-backends-for-climate-science-web-apps.html</guid><category>climate</category></item></channel></rss>