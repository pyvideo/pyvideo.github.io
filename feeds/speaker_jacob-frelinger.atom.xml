<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jacob-frelinger.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-07-19T00:00:00+00:00</updated><entry><title>Fcm - A python library for flow cytometry</title><link href="https://pyvideo.org/scipy-2012/fcm-a-python-library-for-flow-cytometry.html" rel="alternate"></link><published>2012-07-19T00:00:00+00:00</published><updated>2012-07-19T00:00:00+00:00</updated><author><name>Jacob Frelinger</name></author><id>tag:pyvideo.org,2012-07-19:scipy-2012/fcm-a-python-library-for-flow-cytometry.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cellular populations in biology are often heterogeneous, and aggregate
assays such as expression arrays can obscure the small differences
between these populations. Examples where these differences can be
highly significant include the identification of antigen-specific immune
cells, stem cells and circulating cancer cells. As the frequency of such
cells in the blood can be vanishingly small, assays to detect signals at
the single cell level are essential. Flow cytometry is probably the best
established single cell assay, and has been an integral tool in
immunology and biology for decades, able to measure cellular marker
levels for individual cells, as well as population statistics over
millions of cells.&lt;/p&gt;
&lt;p&gt;Recent technological innovations in flow cytometry have increased the
number of cell markers capable of being resolved simultaneously, and
visual analysis (gating) is difficult and error prone with increasing
data dimensionality. Hence there is increasing demand for tools to
automate the analysis and management of flow data, so as to increase
accuracy and reproducibility. However, essentially all software used by
flow cytometry laboratories is commercial and based on the visual
analysis paradigm. With the exception of the R BioConductor project, we
are not aware of any other full-featured open source tools for analyzing
flow data. The few open source flow software modules that exist simply
extracts data from FCS (flow cytometry standard) files into tabular/csv
format, losing all metadata associated with the file, and provide no
additional tools for analysis. We therefore decided to develop the &lt;em&gt;fcm&lt;/em&gt;
library in python that would provide a foundation for flow cytometry
data management and analysis.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;fcm&lt;/em&gt; library provides functions to load fcs files, apply spectral
compensation, and perform standard log and log-like transforms for
visualization. The library also provides objects and methods for
traditional gating-based analysis, including standard polygon,
threshold, interval, and quadrant gates. Using &lt;em&gt;fcm&lt;/em&gt; and other common
python libraries, one can quickly write scripts for doing large scale
batch analysis. In addition to gating- based analysis, &lt;em&gt;fcm&lt;/em&gt; provides
methods to do model-based analysis, utilizing GPU-optimized statistical
models to identify cell subsets. These statistical models provide a
data-driven way to construct generative probability models that scale
well with the increasing dimensionality of flow data and do not require
expert input to identify cell subsets. High performance computational
routines to fit statistical models are optimized using cython and
pycuda. More specialized tools for the analysis of flow data include the
use of a novel information measure to optimize reagent panels and
analysis strategies, and optimization methods for automatic
determination of positivity thresholds.&lt;/p&gt;
&lt;p&gt;We are currently using the &lt;em&gt;fcm&lt;/em&gt; library for the analysis of tetramer
assays for cancer immunotherapy, as well as intracellular expression of
effector molecules in the NIAID-sponsored External Quality Assurance
Policy Oversight Laboratory (EQAPOL) program to standardize flow
cytometry assays in HIV studies. An illustrative example is the use of
&lt;em&gt;fcm&lt;/em&gt; in building a pipeline for the Cytostream application to automate
the analysis of 459 FCS files from 12 laboratories, reducing the
analysis time of one month to a single evening.&lt;/p&gt;
</summary><category term="Computational Bioinformatics"></category></entry></feed>