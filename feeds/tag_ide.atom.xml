<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_ide.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-25T00:00:00+00:00</updated><entry><title>Vim your Python, Python your Vim</title><link href="https://pyvideo.org/pycon-de-2017/vim-your-python-python-your-vim.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Miroslav Šedivý</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/vim-your-python-python-your-vim.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Miroslav Šedivý&lt;/strong&gt; (&amp;#64;eumiro)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What do you use to write source code, docs, books or e-mails? Single brain, single pair of hands, single keyboard, but a different keyboard layout for each language and a different text editor for each purpose?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Do you use an IDE to work on Python code, then switch to an e-mail client to write a message, then open a different editor to work on the documentation and finally ssh to a remote server to edit a configuration file? Do you switch languages frequently or are your colleagues named Müller, François, Muñoz or even Šedivý?&lt;/p&gt;
&lt;p&gt;I'll show you how I am happily typing in several languages on a single standard US keyboard layout and why my CapsLock became so useful.&lt;/p&gt;
&lt;p&gt;I'll show you how I use a single editor on all my machines to produce all sorts of text, especially Python code with a few useful plugins.&lt;/p&gt;
&lt;p&gt;I'll show you my own plugin written in Python to hack my e-mails far beyond imagination.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="ide"></category><category term="neovim"></category><category term="vim"></category><category term="editor"></category><category term="python"></category></entry><entry><title>Python + Windows, like a boss</title><link href="https://pyvideo.org/pycon-italia-2017/python-windows-like-a-boss.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Nicola Iarocci</name></author><id>tag:pyvideo.org,2017-04-09:pycon-italia-2017/python-windows-like-a-boss.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Historically, Python coding on Windows has been kind of troublesome, but
not anymore. Since a couple of years ago it is possible write awesome
quality Python code with Visual Studio. This is good news for Python
developers of all levels, because Visual Studio offers and incredible
set of tools to enhance all the stages of product development: from
managing virtual environments and handling package management, to
writing and refactoring code, up to testing &amp;amp; debugging - all of that
for free. In this talk I will demo how you can use PTVS to boost your
Python development on Windows.&lt;/p&gt;
</summary><category term="windows"></category><category term="Python"></category><category term="IDE"></category></entry><entry><title>42 PyCharm Tips and Tricks</title><link href="https://pyvideo.org/pycon-italia-2017/42-pycharm-tips-and-tricks.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Dmitry Trofimov</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/42-pycharm-tips-and-tricks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyCharm, a Python IDE with its free and open-source community edition,
in last several years has become a tool of choice for more and more
Python developers. But not everybody uses its full power. Moreover, most
only use a fraction of the functionality it provides.&lt;/p&gt;
&lt;p&gt;The reality is that an IDE is not just about a set of integrated tools,
but an environment that understands the semantics of your project, of
what you’re doing. It can leverage this to provide you with
functionality that can make repetitive mundane tasks become
frictionless, as well as give insight into potential problems.&lt;/p&gt;
&lt;p&gt;In this session, we will go through 42 the most powerful features the
IDE offers and whether you do web development or work with data using
Python, you will benefit knowing how the IDE can leverage your
programming skills.&lt;/p&gt;
</summary><category term="text-editors"></category><category term="Pycharm"></category><category term="IDE"></category></entry><entry><title>Continuous Delivery for Iot with Python and Iottly</title><link href="https://pyvideo.org/pycon-italia-2017/continuous-delivery-for-iot-with-python-and-iottly.html" rel="alternate"></link><published>2017-04-07T00:00:00+00:00</published><updated>2017-04-07T00:00:00+00:00</updated><author><name>Stefano Terna</name></author><id>tag:pyvideo.org,2017-04-07:pycon-italia-2017/continuous-delivery-for-iot-with-python-and-iottly.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We know, continuous delivery is one of the current buzzwords (much like
IoT was a couple of years ago). But think of an industrial IoT project
connecting thousands of remote and inaccessible devices which should be
kept secure and updated over time. Now, imagine you can just write
Python code for your devices, test it over-the-internet both locally in
the lab, and in a real test environment simply by pushing your code to
specific branches and finally just pushing to master to update the
entire fleet.&lt;/p&gt;
&lt;p&gt;During the talk we will use Iottly to showcase this continuous delivery
pattern for the internet of things, with live code and connected devices
(Raspberry Pi).&lt;/p&gt;
&lt;p&gt;Iottly is a Development and Management Cloud Service for IoT Projects,
built by TomorrowData. Iottly is written in Python and is open source
(github). It features a Python sandbox for the devices, an online editor
to program the devices over-the-internet, and the integration with git
as the base for continuous delivery.&lt;/p&gt;
</summary><category term="raspberrypi"></category><category term="git"></category><category term="continuous-delivery"></category><category term="iot"></category><category term="over-the-air firmware upgrade"></category><category term="InternetOfThings"></category><category term="InternetDelleCose"></category><category term="github"></category><category term="IDE"></category></entry><entry><title>Svilluppare con python sull'iPad</title><link href="https://pyvideo.org/pycon-italia-2017/svilluppare-con-python-sullipad.html" rel="alternate"></link><published>2017-04-07T00:00:00+00:00</published><updated>2017-04-07T00:00:00+00:00</updated><author><name>Lelio Campanile</name></author><id>tag:pyvideo.org,2017-04-07:pycon-italia-2017/svilluppare-con-python-sullipad.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Da quando è stato introdotto l’iPad, questo si è evoluto velocemente,
trasformandosi da un iPhone agli steroidi ad un surrogato di computer
ultraportatile. Questo mi ha spinto ad esplorare la piattaforma per
vedere fino a che punto ci si poteva spingere nell’utilizzo di un iPad
come sostituto di un ultra portatile: volevo poter sviluppare con python
anche su un iPad.&lt;/p&gt;
&lt;p&gt;Finalmente dopo molte ricerche scopro l’app Pythonista che consente di
sviluppare in python sull’iPad e senza alcun jailbreak, secondo le
regole della Apple!&lt;/p&gt;
&lt;p&gt;Vi voglio far conoscere questo strumento con il quale potrete sviluppare
script python per automatizzare il vostro lavoro sull’iPad, fare test al
volo di codici anche quando non avete un pc, utilizzare l’iPad per le
vostre ricerche scientifiche (grazie al supporto di numpy e matplotlib)
ad adirittura scrivere app con una gui che potrete pubblicare sull’app
store!!!&lt;/p&gt;
</summary><category term="Python"></category><category term="IDE"></category><category term="python3"></category><category term="matplotlib"></category><category term="pydata"></category></entry><entry><title>Python IDEs Panel</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--python-ides-panel.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--python-ides-panel.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python IDEs Panel&lt;/p&gt;
&lt;p&gt;Moderated by Michael Foord&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Dino Viehland - Python Tools for Visual Studio&lt;/li&gt;
&lt;li&gt;Dmitry Jemerov - PyCharm&lt;/li&gt;
&lt;li&gt;Todd Whiteman - ActiveState Komodo IDE&lt;/li&gt;
&lt;li&gt;Stephan Deibel - WingWare IDE&lt;/li&gt;
&lt;li&gt;Barry Warsaw - Emacs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As Python becomes more popular, more users are wanting IDEs that provide
code completion, integrated source code control, project management, and
other developer tools. This panel includes representatives from a number
of Python- specific or Python-supporting IDE vendors, showing the ways
that IDEs can speed up development on any platform.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;For many developers, IDEs are an essential tool-just as essential as
source code control. The growth of Python in recent years has led to a
number of projects and vendors developing Python-specific or
Python-supporting IDEs. This panel will allow attendees to compare and
contrast the different IDEs available.&lt;/p&gt;
</summary><category term="emacs"></category><category term="ide"></category><category term="komodo"></category><category term="komodoide"></category><category term="pycharm"></category><category term="pycon"></category><category term="pycon2011"></category><category term="pythontoolsforvisualstudio"></category><category term="visualstudio"></category><category term="wingware"></category></entry></feed>