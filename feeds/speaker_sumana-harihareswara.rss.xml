<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Sumana Harihareswara</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 19 May 2024 00:00:00 +0000</lastBuildDate><item><title>HTTP Can Do That?!</title><link>https://pyvideo.org/pycon-us-2016/sumana-harihareswara-http-can-do-that-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Sumana Harihareswara&lt;/p&gt;
&lt;p&gt;Learn how to get more performance, testability, and flexibility out of your web apps, using features already built into HTTP. I'll walk you through case studies exploring good (and bad) ideas, using Python, your browser, netcat, and other common tools.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sumana Harihareswara</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:/pycon-us-2016/sumana-harihareswara-http-can-do-that-pycon-2016.html</guid><category>PyCon US 2016</category></item><item><title>Argument Clinic: What Healthy Professional Conflict Looks Like</title><link>https://pyvideo.org/pycon-us-2023/argument-clinic-what-healthy-professional-conflict-looks-like.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What does healthy disagreement look like? Many of us have never
experienced healthy conflict at work, and so assume our only options are
to either avoid conflict or have a nasty fight. But it doesn't have to
be that way: professional disagreement can be direct without being
nasty. We want to show what that looks like.&lt;/p&gt;
&lt;p&gt;In this model argument, presented as a play, watch two engineering
managers disagree about something. How do they work through their
disagreement -- politely and effectively? Watch our the characters
figure out what they're really clashing about, learn about each other's
perspectives, and come to a better decision than either could alone.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sumana Harihareswara</dc:creator><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-04-21:/pycon-us-2023/argument-clinic-what-healthy-professional-conflict-looks-like.html</guid><category>PyCon US 2023</category></item><item><title>Keynote - Sumana Harihareswara</title><link>https://pyvideo.org/pycon-us-2024/keynote-sumana-harihareswara.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sumana Harihareswara</dc:creator><pubDate>Sun, 19 May 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-05-19:/pycon-us-2024/keynote-sumana-harihareswara.html</guid><category>PyCon US 2024</category></item><item><title>Code Review, Forwards and Back</title><link>https://pyvideo.org/pygotham-2017/code-review-forwards-and-back.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The setting: an office conference room. The characters: a developer, who's written a chunk of new Python code, and a team lead, who's about to review it. You'll see the code. It's not great.&lt;/p&gt;
&lt;p&gt;What happens if the reviewer waves it through, or lets conflict aversion get the best of them? What if the reviewer says it should be &amp;quot;better&amp;quot; but doesn't articulate how? What if the review is abrasive, or nitpicky, or laid-back? What if the reviewer rewrites the code right there and then? And if we fast-forward to the same team years later, how has this code reviewing style affected the quality and evolution of the codebase, and the team's culture, skill and sustainability?&lt;/p&gt;
&lt;p&gt;See a fast-paced montage of ways things can go. Recognize patterns from your past and present. Learn scripts for phrasing criticism constructively. And laugh.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sumana Harihareswara</dc:creator><pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-06:/pygotham-2017/code-review-forwards-and-back.html</guid><category>PyGotham 2017</category></item><item><title>Python Grab Bag: A Set of Short Plays</title><link>https://pyvideo.org/pygotham-2018/python-grab-bag-a-set-of-short-plays.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A frenetic combination of educational and entertaining segments, as chosen
by the audience! In between segments, audience members will shout out
numbers from a menu, and we’ll perform the selected segment: it may be a
short monologue, it may be a play, it may be a physical demo, or it may be a
tiny traditional conference talk.&lt;/p&gt;
&lt;p&gt;Audience members should walk away with some additional understanding of the
history of Python, knowledge of some tools and libraries available in the
Python ecosystem, and some Python-related amusement.&lt;/p&gt;
&lt;p&gt;This talk is inspired by [the Neo-Futurists’ Infinite
Wrench](&lt;a class="reference external" href="http://www.nyneofuturists.org/"&gt;http://www.nyneofuturists.org/&lt;/a&gt;), a creative and energetic piece of
theater.&lt;/p&gt;
&lt;p&gt;The audience can select from these plays:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The Unvarnished Truth&lt;/li&gt;
&lt;li&gt;&amp;lt;tt&amp;gt;from import import import&amp;lt;/tt&amp;gt;&lt;/li&gt;
&lt;li&gt;WHAT'S the DEAL with CLIENTS?&lt;/li&gt;
&lt;li&gt;A Play Entirely Full of Monty Python References&lt;/li&gt;
&lt;li&gt;A Proposal for Explaining PEPs&lt;/li&gt;
&lt;li&gt;GNU Mailman: A Pythonic Playlist&lt;/li&gt;
&lt;li&gt;Soup, Scrape, Sweep&lt;/li&gt;
&lt;li&gt;Generators: Taste the Freshness&lt;/li&gt;
&lt;li&gt;This Is How We Do It&lt;/li&gt;
&lt;li&gt;Cookie For Your Thoughts&lt;/li&gt;
&lt;li&gt;If Shakespeare Wrote Incident Reports&lt;/li&gt;
&lt;li&gt;Code Review: Fast Forward and Back&lt;/li&gt;
&lt;li&gt;When The Old Was New&lt;/li&gt;
&lt;li&gt;Things We Don't Say At The Daily Standup Meeting&lt;/li&gt;
&lt;li&gt;The Relief of Reuse (The Colorful &amp;lt;tt&amp;gt;argparse&amp;lt;/tt&amp;gt; Play)&lt;/li&gt;
&lt;li&gt;Be A Better Bureaucrat (The Intellectual &amp;lt;tt&amp;gt;argparse&amp;lt;/tt&amp;gt; Play)&lt;/li&gt;
&lt;li&gt;Speaking Python&lt;/li&gt;
&lt;li&gt;The End (Of 2.7) Is Near (feat. Jason as Guido van Rossum)&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Owen</dc:creator><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-06:/pygotham-2018/python-grab-bag-a-set-of-short-plays.html</guid><category>PyGotham 2018</category></item><item><title>Apply for Grants To Fund Open Source Work</title><link>https://pyvideo.org/pyohio-2020/apply-for-grants-to-fund-open-source-work.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When I tell people about grants they could get to help fund work on open
source software projects, sometimes they are surprised because they
didn't know such grants existed. I share:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sample foundations and funders (such as
&lt;a class="reference external" href="https://www.mozilla.org/moss"&gt;Mozilla&lt;/a&gt;, the &lt;a class="reference external" href="https://chanzuckerberg.com/eoss/"&gt;Chan Zuckerberg
Initiative&lt;/a&gt;,
&lt;a class="reference external" href="https://nlnet.nl/"&gt;NLNet&lt;/a&gt;, and
&lt;a class="reference external" href="https://innovationfund.comcast.com/"&gt;Comcast&lt;/a&gt;) who want to fund
open source software projects, and how much they're paying out&lt;/li&gt;
&lt;li&gt;a quick case study on how the Python Software Foundation got funding
from Open Tech Fund to &lt;a class="reference external" href="https://wiki.python.org/psf/PackagingWG#Warehouse:_OTF_grant"&gt;improve security, accessibility, and
localization for
PyPI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;key steps in figuring out a good project idea, budgeting, hiring, and
submitting&lt;/li&gt;
&lt;li&gt;how the new &lt;a class="reference external" href="https://wiki.python.org/psf/ProjectFundingWG"&gt;Project Funding Working
Group&lt;/a&gt; at the PSF
can help you along the way&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sumana Harihareswara</dc:creator><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-25:/pyohio-2020/apply-for-grants-to-fund-open-source-work.html</guid><category>PyOhio 2020</category></item></channel></rss>