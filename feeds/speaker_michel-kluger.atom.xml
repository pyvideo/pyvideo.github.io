<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Michel Klüger</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_michel-kluger.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-11-02T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Sparse Dataframes, a Memory Must</title><link href="https://pyvideo.org/pycon-fr-2024/sparse-dataframes-a-memory-must.html" rel="alternate"></link><published>2024-11-02T00:00:00+00:00</published><updated>2024-11-02T00:00:00+00:00</updated><author><name>Michel Klüger</name></author><id>tag:pyvideo.org,2024-11-02:/pycon-fr-2024/sparse-dataframes-a-memory-must.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this short talk, I will show some examples of how sparse dtypes in dataframes can be great for memory saving when working with sparsely populated data.&lt;/p&gt;
&lt;p&gt;Showing the benefits of using metadata— alongside the pitfalls and the conversion costs—we can compare the pandas approach versus the pure …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this short talk, I will show some examples of how sparse dtypes in dataframes can be great for memory saving when working with sparsely populated data.&lt;/p&gt;
&lt;p&gt;Showing the benefits of using metadata— alongside the pitfalls and the conversion costs—we can compare the pandas approach versus the pure NumPy/ SciPy approach.&lt;/p&gt;
&lt;p&gt;Finally, using linear systems problems (with LCA backgrounds) as examples, we can compare a few methods and see what stands out.&lt;/p&gt;
</content><category term="PyCon FR 2024"></category></entry></feed>