<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_nick-murdoch.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-09-16T00:00:00+00:00</updated><entry><title>A Cython Walkthrough</title><link href="https://pyvideo.org/pycon-uk-2018/a-cython-walkthrough.html" rel="alternate"></link><published>2018-09-16T00:00:00+00:00</published><updated>2018-09-16T00:00:00+00:00</updated><author><name>Nick Murdoch</name></author><id>tag:pyvideo.org,2018-09-16:pycon-uk-2018/a-cython-walkthrough.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speed up your Python and link it with C&lt;/p&gt;
&lt;p&gt;Cython is a tool that can convert regular Python modules, or Python with
some additional syntax, into C extension modules that can be imported
from regular Python code.&lt;/p&gt;
&lt;p&gt;This provides a significant speed improvement on most code, and
additionally allows the direct use of C functions within your code.&lt;/p&gt;
&lt;p&gt;In this talk I plan to run through three use cases for Cython and how
these have helped me in projects that are either speed-sensitive or need
to intermix with external C projects.&lt;/p&gt;
&lt;p&gt;The talk should be suitable for anyone with good basic knowledge of
regular Python or better -- cursory knowledge of C is useful but not
needed.&lt;/p&gt;
</summary></entry></feed>