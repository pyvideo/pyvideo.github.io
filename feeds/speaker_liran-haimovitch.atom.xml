<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_liran-haimovitch.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-08-17T00:00:00+00:00</updated><entry><title>Understanding Python's Debugging Internals</title><link href="https://pyvideo.org/pybay-2019/understanding-pythons-debugging-internals.html" rel="alternate"></link><published>2019-08-17T00:00:00+00:00</published><updated>2019-08-17T00:00:00+00:00</updated><author><name>Liran Haimovitch</name></author><id>tag:pyvideo.org,2019-08-17:pybay-2019/understanding-pythons-debugging-internals.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk was presented at PyBay2019 - 4th annual Bay Area Regional Python conference. See pybay.com for more details about PyBay and click SHOW MORE for more information about this talk.&lt;/p&gt;
&lt;p&gt;Description
Have you ever wondered how Python debugging looks on the inside? During this session, we’ll share how debugging actually works in Python. We’ll discuss the differences between CPython and PyPy interpreters, explain the underlying debugging mechanism and show you how to utilize this knowledge at work and up your watercooler talk game.&lt;/p&gt;
&lt;p&gt;Abstract
The mainstream and off-the-beaten-track Python debuggers out there: pdb/bdb, PyDev Debugger - Eclipse/IntelliJ, IDLE, Atom, and others.&lt;/p&gt;
&lt;p&gt;What is the underlying tech of Python debuggers? 1. Introduce the (hard to decipher) sys.settrace function and review its public documentation 2. Provide the missing documentation for sys.settrace and explain what it actually does.
3. Show a snippet of example code and explain how to handle multithreading when debugging&lt;/p&gt;
&lt;p&gt;CPython Performance Benchmarks. 1. Review the performance optimizations we've done to maximize sys.settrace 2. Introduce the CPython Performance Benchmarks 3. Deep-dive into these benchmarks - why they matter 4. Discuss the alternatives of sys.set_trace&lt;/p&gt;
&lt;p&gt;Quick intro to PyPy interpreter . 1. Share the performance benchmarks for PyPy 2. Discuss our insights (&lt;/p&gt;
&lt;p&gt;What do you do once your debugger stopped? 1. Introduce the Python frame object and inspect module 2. Share example code 3. Discuss possible use cases&lt;/p&gt;
&lt;p&gt;Original slides: &lt;a class="reference external" href="https://t.ly/LdK68"&gt;https://t.ly/LdK68&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;About the speaker
Liran is the Co-Founder and CTO of Rookout, the data collection and delivery company. He’s an advocate of modern software methodologies like agile, lean and devops. Liran’s passion is to understand how software actually works. When he's not thinking of code, he's usually diving or hiking&lt;/p&gt;
&lt;p&gt;Sponsor Acknowledgement
This and other PyBay2019 videos are via the help of our media partner AlphaVoice (&lt;a class="reference external" href="https://www.alphavoice.io/"&gt;https://www.alphavoice.io/&lt;/a&gt;)!&lt;/p&gt;
&lt;p&gt;#pybay #pybay2019 #python #python3 #gdb&lt;/p&gt;
</summary></entry><entry><title>Understanding Python’s Debugging Internals - Liran Haimovitch - PyCon Israel 2019</title><link href="https://pyvideo.org/pycon-israel-2019/understanding-pythons-debugging-internals-liran-haimovitch-pycon-israel-2019.html" rel="alternate"></link><published>2019-06-03T00:00:00+00:00</published><updated>2019-06-03T00:00:00+00:00</updated><author><name>Liran Haimovitch</name></author><id>tag:pyvideo.org,2019-06-03:pycon-israel-2019/understanding-pythons-debugging-internals-liran-haimovitch-pycon-israel-2019.html</id><summary type="html"></summary></entry><entry><title>Understanding Python’s Debugging Internals</title><link href="https://pyvideo.org/pycon-us-2019/understanding-pythons-debugging-internals.html" rel="alternate"></link><published>2019-05-03T15:15:00+00:00</published><updated>2019-05-03T15:15:00+00:00</updated><author><name>Liran Haimovitch</name></author><id>tag:pyvideo.org,2019-05-03:pycon-us-2019/understanding-pythons-debugging-internals.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Knowing your enemies is as important as knowing your friends.
Understanding your debugger is a little of both. Have you ever wondered
how Python debugging looks on the inside? On our journey to building a
Python debugger, we learned a lot about its internals, quirks and more.&lt;/p&gt;
&lt;p&gt;During this session, we’ll share how debugging actually works in Python.
We’ll discuss the differences between CPython and PyPy interpreters,
explain the underlying debugging mechanism and show you how to utilize
this knowledge at work and up your watercooler talk game.&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>