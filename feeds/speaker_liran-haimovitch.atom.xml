<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Liran Haimovitch</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_liran-haimovitch.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-04-27T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Understanding Python's Debugging Internals</title><link href="https://pyvideo.org/pybay-2019/understanding-pythons-debugging-internals.html" rel="alternate"></link><published>2019-08-17T00:00:00+00:00</published><updated>2019-08-17T00:00:00+00:00</updated><author><name>Liran Haimovitch</name></author><id>tag:pyvideo.org,2019-08-17:/pybay-2019/understanding-pythons-debugging-internals.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk was presented at PyBay2019 - 4th annual Bay Area Regional Python conference. See pybay.com for more details about PyBay and click SHOW MORE for more information about this talk.&lt;/p&gt;
&lt;p&gt;Description
Have you ever wondered how Python debugging looks on the inside? During this session, we’ll share …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk was presented at PyBay2019 - 4th annual Bay Area Regional Python conference. See pybay.com for more details about PyBay and click SHOW MORE for more information about this talk.&lt;/p&gt;
&lt;p&gt;Description
Have you ever wondered how Python debugging looks on the inside? During this session, we’ll share how debugging actually works in Python. We’ll discuss the differences between CPython and PyPy interpreters, explain the underlying debugging mechanism and show you how to utilize this knowledge at work and up your watercooler talk game.&lt;/p&gt;
&lt;p&gt;Abstract
The mainstream and off-the-beaten-track Python debuggers out there: pdb/bdb, PyDev Debugger - Eclipse/IntelliJ, IDLE, Atom, and others.&lt;/p&gt;
&lt;p&gt;What is the underlying tech of Python debuggers? 1. Introduce the (hard to decipher) sys.settrace function and review its public documentation 2. Provide the missing documentation for sys.settrace and explain what it actually does.
3. Show a snippet of example code and explain how to handle multithreading when debugging&lt;/p&gt;
&lt;p&gt;CPython Performance Benchmarks. 1. Review the performance optimizations we've done to maximize sys.settrace 2. Introduce the CPython Performance Benchmarks 3. Deep-dive into these benchmarks - why they matter 4. Discuss the alternatives of sys.set_trace&lt;/p&gt;
&lt;p&gt;Quick intro to PyPy interpreter . 1. Share the performance benchmarks for PyPy 2. Discuss our insights (&lt;/p&gt;
&lt;p&gt;What do you do once your debugger stopped? 1. Introduce the Python frame object and inspect module 2. Share example code 3. Discuss possible use cases&lt;/p&gt;
&lt;p&gt;Original slides: &lt;a class="reference external" href="https://t.ly/LdK68"&gt;https://t.ly/LdK68&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;About the speaker
Liran is the Co-Founder and CTO of Rookout, the data collection and delivery company. He’s an advocate of modern software methodologies like agile, lean and devops. Liran’s passion is to understand how software actually works. When he's not thinking of code, he's usually diving or hiking&lt;/p&gt;
&lt;p&gt;Sponsor Acknowledgement
This and other PyBay2019 videos are via the help of our media partner AlphaVoice (&lt;a class="reference external" href="https://www.alphavoice.io/"&gt;https://www.alphavoice.io/&lt;/a&gt;)!&lt;/p&gt;
&lt;p&gt;#pybay #pybay2019 #python #python3 #gdb&lt;/p&gt;
</content><category term="PyBay 2019"></category></entry><entry><title>Understanding Python’s Debugging Internals - Liran Haimovitch - PyCon Israel 2019</title><link href="https://pyvideo.org/pycon-israel-2019/understanding-pythons-debugging-internals-liran-haimovitch-pycon-israel-2019.html" rel="alternate"></link><published>2019-06-03T00:00:00+00:00</published><updated>2019-06-03T00:00:00+00:00</updated><author><name>Liran Haimovitch</name></author><id>tag:pyvideo.org,2019-06-03:/pycon-israel-2019/understanding-pythons-debugging-internals-liran-haimovitch-pycon-israel-2019.html</id><content type="html"></content><category term="PyCon Israel 2019"></category></entry><entry><title>Understanding Python’s Debugging Internals</title><link href="https://pyvideo.org/pycon-us-2019/understanding-pythons-debugging-internals.html" rel="alternate"></link><published>2019-05-03T15:15:00+00:00</published><updated>2019-05-03T15:15:00+00:00</updated><author><name>Liran Haimovitch</name></author><id>tag:pyvideo.org,2019-05-03:/pycon-us-2019/understanding-pythons-debugging-internals.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Knowing your enemies is as important as knowing your friends.
Understanding your debugger is a little of both. Have you ever wondered
how Python debugging looks on the inside? On our journey to building a
Python debugger, we learned a lot about its internals, quirks and more.&lt;/p&gt;
&lt;p&gt;During this …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Knowing your enemies is as important as knowing your friends.
Understanding your debugger is a little of both. Have you ever wondered
how Python debugging looks on the inside? On our journey to building a
Python debugger, we learned a lot about its internals, quirks and more.&lt;/p&gt;
&lt;p&gt;During this session, we’ll share how debugging actually works in Python.
We’ll discuss the differences between CPython and PyPy interpreters,
explain the underlying debugging mechanism and show you how to utilize
this knowledge at work and up your watercooler talk game.&lt;/p&gt;
</content><category term="PyCon US 2019"></category><category term="talk"></category></entry><entry><title>Effective Protobuf: Everything You Wanted To Know, But Never Dared To Ask</title><link href="https://pyvideo.org/pycon-us-2022/effective-protobuf-everything-you-wanted-to-know-but-never-dared-to-ask.html" rel="alternate"></link><published>2022-04-27T00:00:00+00:00</published><updated>2022-04-27T00:00:00+00:00</updated><author><name>Liran Haimovitch</name></author><id>tag:pyvideo.org,2022-04-27:/pycon-us-2022/effective-protobuf-everything-you-wanted-to-know-but-never-dared-to-ask.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A talk of 40 minutes covering the following topics:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Introduction to serialization and its place in software engineering&lt;/li&gt;
&lt;li&gt;Static typed vs dynamic typed serialization&lt;/li&gt;
&lt;li&gt;Textual vs binary serialization: pros and cons&lt;/li&gt;
&lt;li&gt;Popular serialization frameworks&lt;/li&gt;
&lt;li&gt;Why Protobuf&lt;/li&gt;
&lt;li&gt;Quick intro to Protobuf (just enough to get by)&lt;/li&gt;
&lt;li&gt;Protobuf performance challenges and …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A talk of 40 minutes covering the following topics:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Introduction to serialization and its place in software engineering&lt;/li&gt;
&lt;li&gt;Static typed vs dynamic typed serialization&lt;/li&gt;
&lt;li&gt;Textual vs binary serialization: pros and cons&lt;/li&gt;
&lt;li&gt;Popular serialization frameworks&lt;/li&gt;
&lt;li&gt;Why Protobuf&lt;/li&gt;
&lt;li&gt;Quick intro to Protobuf (just enough to get by)&lt;/li&gt;
&lt;li&gt;Protobuf performance challenges and tradeoffs&lt;/li&gt;
&lt;li&gt;Async synchronization: pros and cons&lt;/li&gt;
&lt;li&gt;Field encoding: under the hood and what we learn&lt;/li&gt;
&lt;li&gt;Managing the cost of abstractions&lt;/li&gt;
&lt;li&gt;Data deduplication and compression&lt;/li&gt;
&lt;li&gt;Field reuse: the whys and hows&lt;/li&gt;
&lt;li&gt;gRPC: pros and cons&lt;/li&gt;
&lt;li&gt;Protobuf over websocket or HTTP&lt;/li&gt;
&lt;li&gt;Thank you&lt;/li&gt;
&lt;/ol&gt;
</content><category term="PyCon US 2022"></category></entry></feed>