<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 12 May 2018 00:00:00 +0000</lastBuildDate><item><title>Lightning Talks Saturday Evening 2018-05-12</title><link>https://pyvideo.org/pycon-us-2018/lightning-talks-saturday-evening-2018-05-12.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;table border="1" class="colwidths-given docutils"&gt;
&lt;caption&gt;Lightning Talks&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="10%" /&gt;
&lt;col width="30%" /&gt;
&lt;col width="60%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Time&lt;/th&gt;
&lt;th class="head"&gt;Speaker&lt;/th&gt;
&lt;th class="head"&gt;Title&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=00m10s"&gt;00:10&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Caleb Collins-Parks&lt;/td&gt;
&lt;td&gt;AREPL - A real-time python evaluator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=04m35s"&gt;04:35&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Michael Foord&lt;/td&gt;
&lt;td&gt;Abstractions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=10m27s"&gt;10:27&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Turicas (Álvaro) Justen&lt;/td&gt;
&lt;td&gt;Roasting Coffee with Python&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=16m27s"&gt;16:27&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Petr Viktorin&lt;/td&gt;
&lt;td&gt;Blinky's Async Adventure&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=22m17s"&gt;22:17&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;Type Hint&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=26m25s"&gt;26:25&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Scott Sanderson&lt;/td&gt;
&lt;td&gt;A Class is a Poor Man's...Loop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=31m25s"&gt;31:25&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Nick Humrich&lt;/td&gt;
&lt;td&gt;RIP HTTP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=36m08s"&gt;36:08&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Allen Downey&lt;/td&gt;
&lt;td&gt;Modeling and Simulation in Python&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=40m00s"&gt;40:00&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Petr Mitev&lt;/td&gt;
&lt;td&gt;Python in Arch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=44m53s"&gt;44:53&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Steven C. Howell&lt;/td&gt;
&lt;td&gt;Bayesian Hacking&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=50m47s"&gt;50:47&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;James Bennett Saxon&lt;/td&gt;
&lt;td&gt;Code Lives &amp;amp; Things can happen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=56m42s"&gt;56:42&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Andrés García García&lt;/td&gt;
&lt;td&gt;Why should we care about Processing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=61:40"&gt;1:01:40&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Meredydd Luff&lt;/td&gt;
&lt;td&gt;Making the web more pythonic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=c-I0md_3fbQ&amp;amp;t=67:10"&gt;1:07:10&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Kenneth Reitz&lt;/td&gt;
&lt;td&gt;Running for the board﻿&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Collins-Parks</dc:creator><pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-12:pycon-us-2018/lightning-talks-saturday-evening-2018-05-12.html</guid><category>lightning talks</category></item><item><title>Foundations of Numerical Computing in Python</title><link>https://pyvideo.org/pycon-us-2018/foundations-of-numerical-computing-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is one of the world's most popular programming languages for numerical
computing. In areas of application like physical simulation, signal processing,
predictive analytics, and more, engineers and data scientists increasingly use
Python as their primary tool for working with numerical large-scale data.&lt;/p&gt;
&lt;p&gt;Despite this diversity of application domains, almost all numerical programming
in Python builds upon a small foundation of libraries. In particular, the
&lt;cite&gt;numpy.ndarray&lt;/cite&gt; is the core data structure for the entire PyData ecosystem, and
the &lt;cite&gt;numpy&lt;/cite&gt; library provides many of the foundational algorithms used to power
more domain-specific libraries.&lt;/p&gt;
&lt;p&gt;The goal of this tutorial is to provide an introduction to numpy -- how it
works, how it's used, and what problems it aims to solve. In particular, we
will focus on building up students' mental model of how numpy works and how
&lt;strong&gt;idiomatic&lt;/strong&gt; usage of numpy allows us to implement algorithms much more
efficiently than is possible in pure Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Sanderson</dc:creator><pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-09:pycon-us-2018/foundations-of-numerical-computing-in-python.html</guid><category>numpy</category></item><item><title>Playing with Python Bytecode</title><link>https://pyvideo.org/pygotham-2016/playing-with-python-bytecode.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever wondered what Python is actually doing when it executes your code? Want to learn to hand-craft artisanal Python bytecode? In this talk, we explain CPython's internal code representation, and we demonstrate techniques for modifying code objects for fun and profit.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Sanderson</dc:creator><pubDate>Sat, 16 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-16:pygotham-2016/playing-with-python-bytecode.html</guid><category>bytecode</category></item><item><title>Unspeakably Evil Hacks in Service of Marginally Improved Syntax</title><link>https://pyvideo.org/pybay-2016/unspeakably-evil-hacks-in-service-of-marginally-improved-syntax.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of Python's strengths as a dynamic language is its suite of powerful metaprogramming tools. What happens, however, when you want to move beyond the tools provided by &amp;quot;traditional&amp;quot; metaprogramming techniques? This talk will take the audience on a brief tour of projects and techniques that stretch the boundaries of what's possible in Python.
​
Abstract
In this talk, we provide an introduction to several lesser-known techniques for hacking extending the functionality of Python. Along the way, we consider the costs (in clarity, portability, or otherwise) of employing nonstandard tools to work around limitations of Python.&lt;/p&gt;
&lt;p&gt;Topics may include:
- Runtime Bytecode Rewriting (&lt;a class="reference external" href="https://github.com/llllllllll/codetransformer"&gt;https://github.com/llllllllll/codetransformer&lt;/a&gt;)
- Hooking the Lexer with Custom Encodings (&lt;a class="reference external" href="https://github.com/dropbox/pyxl"&gt;https://github.com/dropbox/pyxl&lt;/a&gt;)
- Import Hooks (&lt;a class="reference external" href="https://github.com/hylang/hy"&gt;https://github.com/hylang/hy&lt;/a&gt;, &lt;a class="reference external" href="http://cython.org/"&gt;http://cython.org/&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bio:&lt;/strong&gt;
Scott Sanderson is an engineer at Quantopian, where he is responsible for the design of Quantopian's backtesting and research APIs. He is a core developer on the open source backtesting library Zipline, and he is a contributor to several projects in the PyData ecosystem, including IPython and the Jupyter Notebook. Scott graduated from Williams College in 2013 with bachelor's degrees in Mathematics and Philosophy.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/pybay2016/scott-sanderson-unspeakably-evil-hacks-in-service-of-marginally-improved-syntax-compile-time-python-programming"&gt;https://speakerdeck.com/pybay2016/scott-sanderson-unspeakably-evil-hacks-in-service-of-marginally-improved-syntax-compile-time-python-programming&lt;/a&gt;
​&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Sanderson</dc:creator><pubDate>Sat, 20 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-20:pybay-2016/unspeakably-evil-hacks-in-service-of-marginally-improved-syntax.html</guid></item><item><title>Playing with Python Bytecode</title><link>https://pyvideo.org/pycon-us-2016/scott-sanderson-joe-jevnik-playing-with-python-bytecode-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speakers: Scott Sanderson, Joe Jevnik&lt;/p&gt;
&lt;p&gt;Ever wondered what Python is actually doing when it executes your code?  Want to learn to hand-craft artisanal Python bytecode?  In this talk, we explain CPython's internal code representation, and we demonstrate techniques for modifying code objects for fun and profit.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Sanderson</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/scott-sanderson-joe-jevnik-playing-with-python-bytecode-pycon-2016.html</guid></item></channel></rss>