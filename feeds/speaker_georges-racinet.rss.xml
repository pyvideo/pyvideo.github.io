<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 02 Nov 2019 00:00:00 +0000</lastBuildDate><item><title>GitLab + Mercurial = Heptapod</title><link>https://pyvideo.org/pycon-fr-2019/gitlab-mercurial-heptapod.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Heptapod est un projet communautaire dérivé de GitLab pour y intégrer
Mercurial, le système de contrôle de version distribué
(DVCS) écrit principalement en Python.&lt;/p&gt;
&lt;p&gt;Après un prototype en 2018, le projet Heptapod monte actuellement en
puissance, suscitant d'autant plus d'intérêt que la communauté
Mercurial cherche des alternatives à Bitbucket.&lt;/p&gt;
&lt;p&gt;La présentation fournira les prérequis nécessaires s'agissant de
Mercurial, puis se focalisera avec des exemples sur l'interaction avec
Heptapod dans le cadre d'un workflow Mercurial moderne.
Enfin, on évoquera l'état d'avancement et le futur du projet, notamment les
développements Python en cours et à venir, pour ceux qui seraient intéressés à contribuer.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Georges Racinet</dc:creator><pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-02:pycon-fr-2019/gitlab-mercurial-heptapod.html</guid></item><item><title>Gestion de stocks en Python avec Anyblok / WMS</title><link>https://pyvideo.org/pycon-fr-2018/gestion-de-stocks-en-python-avec-anyblok-wms.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Anyblok / WMS est un tout nouvel ensemble de bibliothèques pour écrire
des applications de gestion de stocks et de logistique en Python3, avec
PostgreSQL, AnyBlok et SQLAlchemy.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pypi.org/project/anyblok-wms-base/"&gt;https://pypi.org/project/anyblok-wms-base/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blog.racinet.fr/tag/logistique.html"&gt;https://blog.racinet.fr/tag/logistique.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://anyblok-wms-base.readthedocs.io/"&gt;https://anyblok-wms-base.readthedocs.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/AnyBlok/anyblok_wms_base"&gt;https://github.com/AnyBlok/anyblok_wms_base&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;L'objectif est de fournir une fondation solide et agréable aux
développeurs d'applications concrètes et à leurs mainteneurs.&lt;/p&gt;
&lt;p&gt;Les cas d'utilisation potentiels concernent tout ce qui touche au suivi
d'objets physiques, donc la partie logistique de l'e-commerce, bien sûr,
mais aussi les petits magasins, les parcs de matériel technique, la
gestion de production (GPAO) et pourquoi pas l'humanitaire.&lt;/p&gt;
&lt;p&gt;Quelques mots d'ordre du développement en &amp;quot;té&amp;quot; : flexibilité,
généricité, traçabilité, adaptabilité (à la réalité), euh… qualité et
bien sûr liberté !&lt;/p&gt;
&lt;p&gt;Le développement de la couche de base a commencé cette année ; on espère
être en voie de sortir la version 1.0 au moment de la PyConFR, d'avoir
une première application finale en production, de lancer des
développements publics de plus haut niveau, d'accueillir des
contributions…&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Georges Racinet</dc:creator><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-06:pycon-fr-2018/gestion-de-stocks-en-python-avec-anyblok-wms.html</guid></item><item><title>Anyblok</title><link>https://pyvideo.org/pycon-fr-2015/anyblok.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Un cadre modulaire et dynamique pour réaliser vos applications métier.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Anyblok est un moteur d'applications métier à chargement dynamique de
modules (les &lt;em&gt;bloks&lt;/em&gt;). Il est écrit en Python 3, en ayant à cœur de
respecter les meilleures pratiques, notamment en termes d'utilisation de
composants standard : la persistance est fondée sur SQLAlchemy, les
bloks sont des paquets Python standard, une couche web Pyramid est
fournie, facultative et remplaçable…&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Georges Racinet</dc:creator><pubDate>Sat, 17 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-17:pycon-fr-2015/anyblok.html</guid></item></channel></rss>