<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_vikram-bhat.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-08-16T00:00:00+00:00</updated><entry><title>Unit testing using monkey patching in pytest</title><link href="https://pyvideo.org/pybay-2019/unit-testing-using-monkey-patching-in-pytest.html" rel="alternate"></link><published>2019-08-16T00:00:00+00:00</published><updated>2019-08-16T00:00:00+00:00</updated><author><name>Vikram Bhat</name></author><id>tag:pyvideo.org,2019-08-16:pybay-2019/unit-testing-using-monkey-patching-in-pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk was presented at PyBay2019 - 4th annual Bay Area Regional Python conference. See pybay.com for more details about PyBay and click SHOW MORE for more information about this talk.&lt;/p&gt;
&lt;p&gt;Description
Unit testing is loved by so many that it is already a very popular concept. But I will try to make unit testing even simpler with pytest using monkey patching. Come to learn about unit testing with pytest using monkey patching.&lt;/p&gt;
&lt;p&gt;Abstract
Everyone loves unit testing. Developers rarely submit code for reviews without adding unit testing. But can we make this writing unit tests even simpler in Python?&lt;/p&gt;
&lt;p&gt;PyTest provides us with an amazing set of tools and libraries to write functional tests, but can PyTest be used for Unit testing also? Of course it can! Not only can you write simple unit tests with PyTest, you can write tests for complex logic as well as code which depend on external services using PyTest. Having worked on PyTest for the last 5 years, I was amazed at the power and capabilities of PyTests for writing quality tests.&lt;/p&gt;
&lt;p&gt;Monkey Patching is a common concept, but it is not used widely outside of unit-tests. Python has its own internal libraries for writing unit tests and mocking, MonkeyPatching using PyTest makes the tests a lot simpler to write..&lt;/p&gt;
&lt;p&gt;We will cover how PyTest, MonkeyPatching and Unit tests come together to not only make it easy to write tests, but also make it fun.&lt;/p&gt;
&lt;p&gt;This talk is for all levels and does not require any specific knowledge of PyTest.&lt;/p&gt;
&lt;p&gt;Original slides: &lt;a class="reference external" href="https://t.ly/XZWn5"&gt;https://t.ly/XZWn5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;About the speaker
Vikram is a software engineer from the Bay Area and has worked at companies like Sony PlayStation and Box. He has been working on Python for the last 5 years mainly in the areas of software automation, tools, infrastructure and software testing. He really enjoys building tools using Python and learning about best practices in coding and software testing.&lt;/p&gt;
&lt;p&gt;Sponsor Acknowledgement
This and other PyBay2019 videos are via the help of our media partner AlphaVoice (&lt;a class="reference external" href="https://www.alphavoice.io/"&gt;https://www.alphavoice.io/&lt;/a&gt;)!&lt;/p&gt;
&lt;p&gt;#pybay #pybay2019 #python #python3 #gdb&lt;/p&gt;
</summary></entry></feed>