<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 06 Oct 2018 00:00:00 +0000</lastBuildDate><item><title>FaaS with no strings attached</title><link>https://pyvideo.org/pycon-es-2018/faas-with-no-strings-attached.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Desde que se empezaron a abandonar las aplicaciones monolíticas la tendencia ha ido hacia una separación en servicios cada vez más pequeños que ofreciesen mejor escalabilidad, separación de responsabilidades y agilidad a la hora de desplegar. Estos últimos años ha aparecido una nueva evolución de estas arquitecturas, las Functions as a Service, que son piezas de código que escalan de manera automática y reducen los costes ya que no consumen ningún recurso mientras están en reposo.&lt;/p&gt;
&lt;p&gt;Como contrapartida este tipo de funciones necesitan una gran infraestuctura a nivel de cantidad de servidores y virtualización que solo unos pocos proveedores de gran tamaño pueden ofrecer. Actualmente los proveedores que disponen de estas infraestructuras imponen unas limitaciones y requisitos como que estén atados a una plataforma privada, el soporte a solo algunos lenguajes o tiempos de ejecución limitados. Estas condiciones pueden dificultar el desarrollo o quitar libertad al producto que depende de un proveedor.&lt;/p&gt;
&lt;p&gt;En la charla explicaré el patrón FaaS y las ventajes e inconvenientes de su uso. También hablaré de OpenFaas, una plataforma de código abierto que permite eliminar las dependencias de los proveedores y da total libertad respecto a lenguajes y modo de uso.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unai Pastor</dc:creator><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-06:pycon-es-2018/faas-with-no-strings-attached.html</guid></item></channel></rss>