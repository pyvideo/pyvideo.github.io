<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_mark-lavin.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-09-16T00:00:00+00:00</updated><entry><title>You Belong with Me: Scraping Taylor Swift Lyrics with Python and Celery</title><link href="https://pyvideo.org/pydata-carolinas-2016/you-belong-with-me-scraping-taylor-swift-lyrics-with-python-and-celery.html" rel="alternate"></link><published>2016-09-16T00:00:00+00:00</published><updated>2016-09-16T00:00:00+00:00</updated><author><name>Rebecca Conley</name></author><id>tag:pyvideo.org,2016-09-16:pydata-carolinas-2016/you-belong-with-me-scraping-taylor-swift-lyrics-with-python-and-celery.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will demonstrate an example application of using Celery to
extract all of the lyrics of the inspiring and influential Taylor
Swift from the Internet. Using a light-hearted approach and practical
Python examples, we aim to teach people the basics of using Celery for
data extraction.&lt;/p&gt;
&lt;p&gt;Celery is an open source, Python-based, asynchronous task framework
which is well-suited for extracting data from webpages, APIs, and text
files. With its power comes a bit of a learning curve. This talk
covers some of the first questions a new Celery user might have. It
will also point out some common pitfalls for beginning users.&lt;/p&gt;
</summary></entry><entry><title>Maintaining Your Sanity While Maintaining Your Open Source App</title><link href="https://pyvideo.org/djangocon-us-2012/maintaining-your-sanity-while-maintaining-your-op.html" rel="alternate"></link><published>2012-09-04T00:00:00+00:00</published><updated>2012-09-04T00:00:00+00:00</updated><author><name>Mark Lavin</name></author><id>tag:pyvideo.org,2012-09-04:djangocon-us-2012/maintaining-your-sanity-while-maintaining-your-op.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Django has a thriving community of open source pluggable applications.
Maintaining an external application can be a rewarding experience and
doesn't need to take over your life. Learn what it takes to package,
document and test your Django app so that others can use and contribute
to what you've built.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="section" id="introduction-overview"&gt;
&lt;h4&gt;Introduction/Overview&lt;/h4&gt;
&lt;p&gt;So you want to release your Django app into the wild. Now what? I'll go
over packaging your application to add to the Python Package Index
(PyPi), creating documentation to host on Read The Docs and setup an
environment to test your application against different versions of
Python and Django. I'll also go over some things you should and
shouldn't do when maintaining your app over the years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="packaging"&gt;
&lt;h4&gt;Packaging&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Creating a setup.py&lt;/li&gt;
&lt;li&gt;Registering your package&lt;/li&gt;
&lt;li&gt;Uploading your package&lt;/li&gt;
&lt;li&gt;Sane versioning with PEP386&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="documentation"&gt;
&lt;h4&gt;Documentation&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Getting started with Sphinx&lt;/li&gt;
&lt;li&gt;Using Read the Docs&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="testing"&gt;
&lt;h4&gt;Testing&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Running your app tests&lt;/li&gt;
&lt;li&gt;Testing multiple Python/Django versions with tox&lt;/li&gt;
&lt;li&gt;Testing your documentation build&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="things-to-do"&gt;
&lt;h4&gt;Things to Do&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;State your goals&lt;/li&gt;
&lt;li&gt;Let others help you&lt;/li&gt;
&lt;li&gt;Include a license&lt;/li&gt;
&lt;li&gt;Prepare for the future&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="things-to-avoid"&gt;
&lt;h4&gt;Things to Avoid&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Rejecting every contribution&lt;/li&gt;
&lt;li&gt;Accepting every contribution&lt;/li&gt;
&lt;li&gt;Developer burnout&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h4&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;Reusable applications are my favorite feature of Django. It does take
work to maintain an open source app but it can be quite rewarding. If
you use these tools you can help provide your users with the best
experience and empower them to help you with your application.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="django"></category></entry><entry><title>REST: It's not just for servers</title><link href="https://pyvideo.org/djangocon-us-2014/rest-its-not-just-for-servers.html" rel="alternate"></link><published>2014-09-19T00:00:00+00:00</published><updated>2014-09-19T00:00:00+00:00</updated><author><name>Mark Lavin</name></author><id>tag:pyvideo.org,2014-09-19:djangocon-us-2014/rest-its-not-just-for-servers.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Have you ever written or used an API wrapper for a webservice? REST is a
client-server architecture model and building the server is only half of
the challenge. This talk will walk through some of the challenges of
building a REST client, describe some best practices and some patterns
to avoid, and discuss how we can all work to build better APIs for an
open web.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/FPWl/"&gt;http://amara.org/v/FPWl/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Anatomy of a Django Project</title><link href="https://pyvideo.org/djangocon-us-2014/anatomy-of-a-django-project.html" rel="alternate"></link><published>2014-09-12T00:00:00+00:00</published><updated>2014-09-12T00:00:00+00:00</updated><author><name>Mark Lavin</name></author><id>tag:pyvideo.org,2014-09-12:djangocon-us-2014/anatomy-of-a-django-project.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Websites built with Django are built on &amp;quot;projects&amp;quot; which are composed of
oneor more &amp;quot;apps&amp;quot;. But what is a project really? This talk will dissect
a Django project to understand which pieces are convention and which are
required. It explain what if anything separates a project from an app
and answer common questions about projects vs apps.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/FNEk/"&gt;http://amara.org/v/FNEk/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Intro to Client-Side Testing</title><link href="https://pyvideo.org/djangocon-us-2015/intro-to-client-side-testing-by-mark-lavin.html" rel="alternate"></link><published>2015-09-24T00:00:00+00:00</published><updated>2015-09-24T00:00:00+00:00</updated><author><name>Mark Lavin</name></author><id>tag:pyvideo.org,2015-09-24:djangocon-us-2015/intro-to-client-side-testing-by-mark-lavin.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Intro to Client-Side Testing&lt;/p&gt;
&lt;p&gt;Intro/Background Example Project Getting Started with Selenium
Navigating pages Finding elements Waiting on actions Unittesting with
QUnit Why QUnit? Tests and assertions Test fixtures Additional Resources
Q&amp;amp;A&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/HIXN/"&gt;http://amara.org/v/HIXN/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Django Authors Panel</title><link href="https://pyvideo.org/djangocon-us-2015/django-authors-panel.html" rel="alternate"></link><published>2015-09-22T00:00:00+00:00</published><updated>2015-09-22T00:00:00+00:00</updated><author><name>Mark Lavin</name></author><id>tag:pyvideo.org,2015-09-22:djangocon-us-2015/django-authors-panel.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Django Authors Panel by Mark Lavin, Andrew Pinkham, Buddy Lindsey, Peter
Baumgartner, Rikki Endsley and Tracy Osborn&lt;/p&gt;
&lt;p&gt;This will be a moderated Q&amp;amp;A with a panel of Django authors. Questions
will be collected in advance from community suggestions. There will also
be time for some questions from the audience.&lt;/p&gt;
&lt;p&gt;The panel will include:&lt;/p&gt;
&lt;p&gt;Andrew Pinkham - author of &amp;quot;Django Unleashed&amp;quot; Mark Lavin - co-author of
&amp;quot;Lightweight Django&amp;quot; Tracy Osborn - author of &amp;quot;Hello Web App&amp;quot; Peter
Baumgartner - co-author of &amp;quot;High Performance Django&amp;quot;&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/HHp3/"&gt;http://amara.org/v/HHp3/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Designers + Developers: Collaborating on your Python project</title><link href="https://pyvideo.org/pycon-us-2013/designers-developers-collaborating-on-your-pyt.html" rel="alternate"></link><published>2013-03-16T00:00:00+00:00</published><updated>2013-03-16T00:00:00+00:00</updated><author><name>Julia Elman</name></author><id>tag:pyvideo.org,2013-03-16:pycon-us-2013/designers-developers-collaborating-on-your-pyt.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Working in teams is an important part of what we do as developers &amp;amp;
designers. Whether it's desktop applications or mobile sites, we work
together to create successful end products. But how do we work together
in different environments? What is the best work-flow for a mix of skill
sets?&lt;/p&gt;
&lt;p&gt;We'll be talking about our various methods &amp;amp; work-flows that we found
successful in working collaboratively.&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>