<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 18 Nov 2017 00:00:00 +0000</lastBuildDate><item><title>Lightning Talks</title><link>https://pyvideo.org/pytexas-2017/lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;table border="1" class="colwidths-given docutils"&gt;
&lt;caption&gt;Lightning Talks&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="10%" /&gt;
&lt;col width="30%" /&gt;
&lt;col width="60%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Time&lt;/th&gt;
&lt;th class="head"&gt;Speaker&lt;/th&gt;
&lt;th class="head"&gt;Title&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=00m00s"&gt;00:00&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Walker Hale&lt;/td&gt;
&lt;td&gt;Conda packages for bash scripts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=05m10s"&gt;05:10&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Ricky Whitaker&lt;/td&gt;
&lt;td&gt;Becoming Comfortable in Discomfort: A few life lessons from quitting my job&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=12m26s"&gt;12:26&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Moshe Zadka&lt;/td&gt;
&lt;td&gt;Introducing NColony&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=17m05s"&gt;17:05&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Peter Graham&lt;/td&gt;
&lt;td&gt;Safely using read replica with postgres&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=24m12s"&gt;24:12&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;John Arbelaez&lt;/td&gt;
&lt;td&gt;The pyslackers community&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=30m52s"&gt;30:52&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Caroline D Dikibo&lt;/td&gt;
&lt;td&gt;OSS Project Awareness: Zulip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=w3Z3P0aDwN4&amp;amp;t=39m22s"&gt;39:22&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dustin Ingram&lt;/td&gt;
&lt;td&gt;Good Hacker; Bad Hacker&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Walker Hale</dc:creator><pubDate>Sat, 18 Nov 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-11-18:pytexas-2017/lightning-talks.html</guid><category>lightning talks</category></item><item><title>Filtering and Deduplicating Data in IPython Notebook</title><link>https://pyvideo.org/pytexas-2013/filtering-and-deduplicating-data-in-ipython-notebook.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk provides a practical demonstration of how I used IPython Notebook to filter and then de-duplicate a set of 2877 records from a tab separated value (text) file. Using a file of 117 cases and a fairy complex set of business criteria that combined separate concepts of &amp;quot;most recent&amp;quot; and &amp;quot;most modern&amp;quot;, I reduced the set of records down from 20 columns x 2877 records to 13 columns x 615 records. The end result was the output of this computation and a script that could be used for other data sets. (There were 9 more data sets.)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Walker Hale</dc:creator><pubDate>Fri, 16 Aug 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-08-16:pytexas-2013/filtering-and-deduplicating-data-in-ipython-notebook.html</guid></item><item><title>PyYAML, ElementTree, and Liquibase</title><link>https://pyvideo.org/pytexas-2013/pyyaml-elementtree-and-liquibase.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will cover two libraries:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;xml.etree.ElementTree - part of the standard library for parsing, manipulating, or generating XML&lt;/li&gt;
&lt;li&gt;PyYAML - for parsing or generating YAML (and JSON)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will demonstrate the benefits of both libraries, and then demonstrate how the combination of the two allows writing YAML for situations where hand-generated XML is required but tedious. The practical example is Liquibase, a product that uses user-generated XML to make gradual changes to database schema.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Walker Hale</dc:creator><pubDate>Fri, 16 Aug 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-08-16:pytexas-2013/pyyaml-elementtree-and-liquibase.html</guid></item><item><title>Daemon Slaying! Or, Unix Daemons in Python for fun and profit!</title><link>https://pyvideo.org/pytexas-2011/daemon-slaying--or--unix-daemons-in-python-for-fu.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn the in's and out's of creating Unix Daemons in Python. Walker Hale
will walk you through several examples, gotchas, and tips and tricks.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Daemons are those pieces of software in Unix (including Linux and Mac OS
X) that run in the background and typically start automatically during
system boot. Times when you might want a daemon include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Monitoring an &amp;quot;inbox&amp;quot; directory in situations where a cron job is not
appropriate&lt;/li&gt;
&lt;li&gt;Managing (possibly multiple) instances of software according to
business rules&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although most daemons are written in C, Python is a great alternative.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Walker Hale</dc:creator><pubDate>Sat, 10 Sep 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-09-10:pytexas-2011/daemon-slaying--or--unix-daemons-in-python-for-fu.html</guid><category>gotchas</category></item><item><title>Logging De-Mystified! Basics to Advanced!</title><link>https://pyvideo.org/pytexas-2011/logging-de-mystified--basics-to-advanced.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk covers the Python Logging Module!&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Walker Hale will explore the standard Python Logging Module and provide
a tour from the basics through intermediate examples, and touch on
advanced logging strategies.&lt;/p&gt;
&lt;p&gt;Do you write programs that run longer than 5 minutes? Would you like to
leverage Python's excellent logging system more fully? Even if you don't
use Python for your long-running processes, you will learn valuable and
widely- applicable logging techniques.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Walker Hale</dc:creator><pubDate>Sat, 10 Sep 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-09-10:pytexas-2011/logging-de-mystified--basics-to-advanced.html</guid></item><item><title>Lightning Talks - Wednesday</title><link>https://pyvideo.org/scipy-2012/lightning-talks-wednesday.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;ol class="arabic simple"&gt;
&lt;li&gt;SciPy Sparse Graphs, Jake Vanderplas.&lt;/li&gt;
&lt;li&gt;Animation for Traits and Chaco, Corran Webster.&lt;/li&gt;
&lt;li&gt;Pynthantics, Jon Roland.&lt;/li&gt;
&lt;li&gt;State of the Numba, Jon Riehl.&lt;/li&gt;
&lt;li&gt;Pipe-o-matic call, Walker Hale.&lt;/li&gt;
&lt;li&gt;A Command ND-Array, Frédéric Bastien.&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jake Vanderplas</dc:creator><pubDate>Wed, 18 Jul 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-07-18:scipy-2012/lightning-talks-wednesday.html</guid><category>lightning talks</category><category>Plenary</category></item><item><title>Python Metaprogramming for Mad Scientists and Evil Geniuses</title><link>https://pyvideo.org/pycon-us-2012/python-metaprogramming-for-mad-scientists-and-evi.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk covers the power and metaprogramming features of Python that
cater to mad scientists and evil geniuses. This will also be of interest
to others who just want to use of Python in a more power (hungry) way.
The core concept is that you can synthesize functions, classes and
modules without a direct correspondence to source code. You can also
mutate third-party objects and apps.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Walker Hale</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-09:pycon-us-2012/python-metaprogramming-for-mad-scientists-and-evi.html</guid></item></channel></rss>