<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 17 Sep 2018 00:00:00 +0000</lastBuildDate><item><title>XArray: the power of pandas for multidimensional arrays</title><link>https://pyvideo.org/pycon-uk-2018/xarray-the-power-of-pandas-for-multidimensional-arrays.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Processing thousands of satellite images to understand air quality in the UK - it's efficient and easy with XArray&lt;/p&gt;
&lt;p&gt;&amp;quot;I wish there was a way to easily manipulate this huge multi-dimensional
array in Python...&amp;quot;, I thought, as I stared at a huge chunk of satellite
data on my laptop. The data was from a satellite measuring air quality -
and I wanted to slice and dice the data in some supposedly simple ways.
Using pure numpy - the go-to library when the words 'multi-dimensional',
'array' and 'python' are mentioned in the same sentence - was just such
a pain. What I wished for was something like pandas - with datetime
indexes, fancy ways of selecting subsets, group-by operations and so on
- but something that would work with my huge multi-dimensional array.&lt;/p&gt;
&lt;p&gt;The solution: XArray - a wonderful library which provides the power of
pandas for multi-dimensional data. In this talk I will introduce the
XArray library by showing how just a few lines of code can answer
questions about my data that would take a lot of complex code to answer
with pure numpy - questions like 'What is the average air quality in
March?', 'What is the time series of air quality in Southampton?' and
'What is the seasonal average air quality for each census output area?'.&lt;/p&gt;
&lt;p&gt;After demonstrating how these questions can be answered easily with
XArray, I will introduce the fundamental XArray data types, and show how
indexes can be added to raw arrays to fully utilise the power of XArray.
I will discuss how to get data in and out of XArray, and how XArray can
use dask for high- performance data processing on multiple cores, or
distributed across multiple machines. Finally I will leave you with a
taster of some of the advanced features of XArray - including seamless
access to data via the internet using OpenDAP, complex apply functions,
and XArray extension libraries.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robin Wilson</dc:creator><pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-09-17:pycon-uk-2018/xarray-the-power-of-pandas-for-multidimensional-arrays.html</guid></item><item><title>ReciPy Effortless Provenance Tracking for Python</title><link>https://pyvideo.org/euroscipy-2015/recipy-effortless-provenance-tracking-for-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever run a Python script to produce some outputs and then forgotten exactly how you created them? For example, you created plot.png a few weeks ago and now you want to use it in a publication. By adding a single line of code to your script, ReciPy will log your inputs, outputs and code each time you run it. Come and find out how to use it, how it hooks into Python, and how you can help.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robin Wilson</dc:creator><pubDate>Mon, 05 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-05:euroscipy-2015/recipy-effortless-provenance-tracking-for-python.html</guid></item></channel></rss>