<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Markus Holtermann</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 23 Oct 2021 00:00:00 +0000</lastBuildDate><item><title>Integrating 2 factor authentication into your project</title><link>https://pyvideo.org/djangocon-au-2016/integrating-2-factor-authentication-into-your-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most websites these days require some kind of authentication. User name + password is the most common one. OAuth with Facebook / Github / Google / Twitter is also common. But sometimes you can't rely on 3rd party services and user name + password is not enough. In those cases 2 Factor Authentication is a nice, additional security layer. Use e.g. a phone to ensure a more secure authentication.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:/djangocon-au-2016/integrating-2-factor-authentication-into-your-project.html</guid><category>DjangoCon AU 2016</category></item><item><title>Oh, I Found a Security Issue</title><link>https://pyvideo.org/djangocon-au-2017/oh-i-found-a-security-issue.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever thought about what happens when somebody finds a security issue in Django? How does one responsibly disclose the issue? What happens after that? How does the Django team work on it? What happens until a Django security release is published? What comes afterwards?&lt;/p&gt;
&lt;p&gt;Also, Django is ‚Äúreassuringly secure‚Äù. Let‚Äôs look at the history üòâ&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-04:/djangocon-au-2017/oh-i-found-a-security-issue.html</guid><category>DjangoCon AU 2017</category></item><item><title>Login canary</title><link>https://pyvideo.org/djangocon-europe-2015/markus-holtermann-login-canary-at-djangocon-europe.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-10:/djangocon-europe-2015/markus-holtermann-login-canary-at-djangocon-europe.html</guid><category>DjangoCon Europe 2015</category></item><item><title>forms are static -- no they aren't</title><link>https://pyvideo.org/djangocon-europe-2015/markus-holtermann-forms-are-static-no-they-arent.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Wed, 15 Jul 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-07-15:/djangocon-europe-2015/markus-holtermann-forms-are-static-no-they-arent.html</guid><category>DjangoCon Europe 2015</category></item><item><title>Don't be afraid of writing migrations</title><link>https://pyvideo.org/djangocon-europe-2016/dont-be-afraid-of-writing-migrations.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You can find more about this talk on &lt;a class="reference external" href="https://2016.djangocon.eu/speakers/4"&gt;djangocon.eu&lt;/a&gt;. This video is hosted by &lt;a class="reference external" href="http://opbeat.com/community/posts/dont-be-afraid-of-writing-migrations-by-markus-holtermann/"&gt;opbeat.com&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Fri, 01 Apr 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-04-01:/djangocon-europe-2016/dont-be-afraid-of-writing-migrations.html</guid><category>DjangoCon Europe 2016</category><category>django</category></item><item><title>To Index or Not, That's Not The Question</title><link>https://pyvideo.org/djangocon-europe-2017/to-index-or-not-thats-not-the-question.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Database indexes play a key role in every database query. Hence, it‚Äôs not a question that you should be able to define them through Django. While you‚Äôre already kind of able to do that with &lt;cite&gt;dbindex=true&lt;/cite&gt; and &lt;cite&gt;index_together&lt;/cite&gt;, these options are rather limiting. Django 1.11 comes with a new feature to allow you to express your index requirements much more granular.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Tue, 04 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-04:/djangocon-europe-2017/to-index-or-not-thats-not-the-question.html</guid><category>DjangoCon Europe 2017</category></item><item><title>On The Look-Out For Your Data</title><link>https://pyvideo.org/djangocon-europe-2018/on-the-look-out-for-your-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you have data in the database of your Django project? Do you want to find that the needle in the haystack of your data? There are plenty options how you can achieve that. With various levels of complexity, confidence, and reliability. I'll give an insight into what the most common are nowadays.&lt;/p&gt;
&lt;p&gt;You're tasked with building a search for the project you're working on. But where do you start? What search implementation are you going to use? There's a sheer unlimited set of ways to implement &amp;quot;I'm looking for X in Y&amp;quot; out there. Elasticsearch, LIKE and ILIKE queries, MySQL's Fulltext Search, PostgreSQL's Fulltext Search, Solr, Whoosh, Xapian, to only name a few. I'll be looking at the most common ones and will be showing some basic implementation techniques.&lt;/p&gt;
&lt;p&gt;You should be familiar with Django in so much as that I'm not talking about how to create or update an object in a database. You should also have an idea of what database transactions are. The talk will feature some code snippets that I will provide in full, afterward.&lt;/p&gt;
&lt;p&gt;Markus Holtermann&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:/djangocon-europe-2018/on-the-look-out-for-your-data.html</guid><category>DjangoCon Europe 2018</category></item><item><title>A Pony On The Move: How Migrations Work In Django üêé - Markus Holtermann</title><link>https://pyvideo.org/djangocon-europe-2020/a-pony-on-the-move-how-migrations-work-in-django-markus-holtermann.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon Europe 2020 (Virtual)
September 18, 2020 - 11h15 (GMT+1)&lt;/p&gt;
&lt;p&gt;‚ÄúA Pony On The Move: How Migrations Work In Django üêé‚Äù by Markus Holtermann&lt;/p&gt;
&lt;p&gt;Django ships with a built-in migration framework since version 1.7 in 2014. While migrations are widely used by almost every Django project ever since, there is little known about the internals of the migration framework. This talk will look into its components and how they are tied together.&lt;/p&gt;
&lt;p&gt;Note: Q&amp;amp;A not available due to technical problems.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-09-18:/djangocon-europe-2020/a-pony-on-the-move-how-migrations-work-in-django-markus-holtermann.html</guid><category>DjangoCon Europe 2020</category></item><item><title>Writing Safe Database Migrations</title><link>https://pyvideo.org/djangocon-europe-2021/writing-safe-database-migrations.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django‚Äôs built-in migration framework is great. And it works tremendously. But that‚Äôs only on the surface. Whenever you deploy your code and apply migrations in production, you are about to enter dangerous territory. I will point out common pitfalls and show you ways to avoid them. And with some additional best practices at hand, you will be ready for your next production deployment.&lt;/p&gt;
&lt;p&gt;The talk slides are available on &lt;strong&gt;Speaker Deck&lt;/strong&gt; (&lt;a class="reference external" href="https://speakerdeck.com/markush/writing-safe-database-migrations-djangocon-europe-2021"&gt;https://speakerdeck.com/markush/writing-safe-database-migrations-djangocon-europe-2021&lt;/a&gt;).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Wed, 02 Jun 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-06-02:/djangocon-europe-2021/writing-safe-database-migrations.html</guid><category>DjangoCon Europe 2021</category><category>Django</category><category>DjangoConEU</category><category>djangoconeu2021</category></item><item><title>Logging Rethought 2: The Actions of Frank Taylor Jr.</title><link>https://pyvideo.org/djangocon-europe-2019/logging-rethought-2-the-actions-of-frank-taylor-jr.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We build services, potentially used by hundreds, thousands or even millions of people. And despite all the testing we do, some operations and interactions with these services will not work out the way we expect or hope. Wouldn‚Äôt it be great to be able to reconstruct what led to a problem? And then analyze if the same problem occurred at other times?
In this talk, I want to look at structured logging. What are the benefits of it over plain-text logging? How can it be used effectively?
Logging, by itself, can help to trace bugs. Structured logging adds additional, post-logging capabilities when used correctly. Because log events are structured data, they can be analyzed much more efficiently and effectively than plain text log messages. Furthermore, one can even build graphs and diagrams to visualize what‚Äôs happening in a service nicely.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-04-20:/djangocon-europe-2019/logging-rethought-2-the-actions-of-frank-taylor-jr.html</guid><category>DjangoCon Europe 2019</category></item><item><title>SSL All The Things</title><link>https://pyvideo.org/djangocon-us-2016/ssl-all-the-things.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2016 - SSL All The Things by Markus Holtermann&lt;/p&gt;
&lt;p&gt;Over the last few years SSL/TLS encryption of not only websites but many other services as well has risen tremendously. The Let‚Äôs Encrypt organization and certificate authority (CA) makes that pretty easy. Since September 2015 almost 1.8 million certificates have been issued. And you can use it, too. For free!&lt;/p&gt;
&lt;p&gt;In this talk I'll demonstrate how to integrate SSL/TLS and point out some common pitfalls. I‚Äôll briefly layout the Let's Encrypt ACME protocol and explain what you need to set up in Django to make SSL/TLS the default and only way to access your site.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-14:/djangocon-us-2016/ssl-all-the-things.html</guid><category>DjangoCon US 2016</category></item><item><title>An Introduction to Kubernetes ‚ò∏Ô∏è</title><link>https://pyvideo.org/djangocon-us-2021/an-introduction-to-kubernetes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every other job opening for an IT position mentions Kubernetes. But unless you‚Äôve worked with Kubernetes or seen it in action, you probably only have a vague idea of what it is, what it does and can do, or how to use it. And that‚Äôs understandable. It‚Äôs this big, abstract, software, that is supposed to ‚Äúsolve all the problems‚Äù. In this talk I‚Äôll go through some of the concepts Kubernetes has. We‚Äôll approach these by deploying a Django application, with the intent, that next time somebody asks you, ‚ÄúDo you know Kubernetes?‚Äù, you can confidently answer ‚ÄúYes!‚Äù.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-10-23:/djangocon-us-2021/an-introduction-to-kubernetes.html</guid><category>DjangoCon US 2021</category></item><item><title>SSL all the things</title><link>https://pyvideo.org/kiwi-pycon-2016/ssl-all-the-things.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Markus Holtermann
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/134/"&gt;https://kiwi.pycon.org/schedule/presentation/134/&lt;/a&gt;
Over the last few years SSL/TLS encryption of websites has risen tremendously. The Let‚Äôs Encrypt organization makes that pretty easy. And you can use it, too. For free! In this talk I'll show how to integrate SSL/TLS and point out some common pitfalls.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:/kiwi-pycon-2016/ssl-all-the-things.html</guid><category>Kiwi PyCon 2016</category></item><item><title>Oh I found a security issue - Markus Holtermann</title><link>https://pyvideo.org/pycaribbean-2018/oh-i-found-a-security-issue-markus-holtermann.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sat, 17 Feb 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-02-17:/pycaribbean-2018/oh-i-found-a-security-issue-markus-holtermann.html</guid><category>PyCaribbean 2018</category></item><item><title>Core Team Panel, featuring: Chris Beaven, Markus Holterman, Russell Keith-Magee, Curtis Maloney</title><link>https://pyvideo.org/pycon-au-2015/core-team-panel-featuring-chris-beaven-markus.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Beaven</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-04:/pycon-au-2015/core-team-panel-featuring-chris-beaven-markus.html</guid><category>PyCon AU 2015</category></item><item><title>The Necessity of Configuration and System Management Tools</title><link>https://pyvideo.org/pycon-au-2015/the-necessity-of-configuration-and-system-managem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In practically every moment of our life we rely on the possibly largest
communication medium humanity ever had. The Internet. Being able to at
least partially understand how this &lt;em&gt;thing&lt;/em&gt; works, we know that it takes
a lot of work to keep it running smoothly.&lt;/p&gt;
&lt;p&gt;To do that IT administrators use configuration and system management
tools to deploy changes to thousands of servers and keep them in sync.
But how can one roll back a change done in the past that turned out to
introduce a bug?&lt;/p&gt;
&lt;p&gt;This talk I will introduce you to configuration management and explain
the problems that arise over time and make changing something back
complicated or even impossible.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-03:/pycon-au-2015/the-necessity-of-configuration-and-system-managem.html</guid><category>PyCon AU 2015</category></item><item><title>SSL all the things</title><link>https://pyvideo.org/pycon-au-2016/pycon-au-2016-ssl-all-the-things.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Markus Holtermann
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/50/view_talk"&gt;https://2016.pycon-au.org/schedule/50/view_talk&lt;/a&gt;
Over the last few years SSL/TLS encryption of websites has risen tremendously. The Let‚Äôs Encrypt organization makes that pretty easy. And you can use it, too. For free! In this talk I'll show how to integrate SSL/TLS and point out some common pitfalls.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:/pycon-au-2016/pycon-au-2016-ssl-all-the-things.html</guid><category>PyCon AU 2016</category></item><item><title>Logging Rethought 2: The Actions of Frank Taylor Jr.</title><link>https://pyvideo.org/pycon-au-2019/logging-rethought-2-the-actions-of-frank-taylor-jr.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We build services, potentially used by thousands or even millions of people. And despite all the testing we do, some interactions with these services will not work out the way we hope. Wouldn‚Äôt it be great to reconstruct what let to a problem and analyze if the problem occurred at other times?&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/logging-rethought-2-the-actions-of-frank-taylor-jr"&gt;https://2019.pycon-au.org/talks/logging-rethought-2-the-actions-of-frank-taylor-jr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Aug  3 13:30:00 2019 at C3.4 &amp;amp; C3.5&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sat, 03 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-03:/pycon-au-2019/logging-rethought-2-the-actions-of-frank-taylor-jr.html</guid><category>PyCon AU 2019</category></item><item><title>All Hands on Deck ‚Äì Handling Security Issues</title><link>https://pyvideo.org/pycon-au-2020/all-hands-on-deck-handling-security-issues.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Markus Holtermann&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/U9GBBD"&gt;https://2020.pycon.org.au/program/U9GBBD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We live in a world of technology and engineering where almost everything around us requires software. Unfortunately, the software we use or build has bugs. While most bugs can &amp;quot;just&amp;quot; be fixed, there are these other types of bugs, called vulnerabilities. Vulnerabilities can be found in our own infrastructure, on customers' infrastructure, or ‚Äî worse ‚Äî around user data.&lt;/p&gt;
&lt;p&gt;Sadly, we see reports of leaked personal data on a daily basis. And when it comes to the companies who just had data leaked, it is astounding how rattled and unprepared they are for the situation. In fact, a lot of companies are puzzled when someone external approaches them about a possible security issue publicly. They don't know how to react and often react in the worst possible way: denial. But it is also about issues that are found from within the company. Issues that may not directly affect personal information. There is more to do than telling customers there is a security release of some software.&lt;/p&gt;
&lt;p&gt;IT security is a sheer endless topic to talk about. It is a mindset and a company culture that must be lived by each and everyone within a company. In this talk, I will point out what roles individual departments play. Because there are more questions to be answered than ‚Äúhow and when are customers informed about an issue and a corresponding solution‚Äù. Are details about the issue released, and if so, when, and will the details be released publicly or only to customers? How will a public outcry about an issue on social media be dealt with? Is the social media team equipped to handle the masses? Will the sales and marketing teams be able to handle a hesitant customers base? What legal implications does the issue have? Who coordinates, makes decisions, and stays on top all of these moving parts?&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Fri Sep  4 14:30:00 2020 at Python 2&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-09-05:/pycon-au-2020/all-hands-on-deck-handling-security-issues.html</guid><category>PyCon AU 2020</category><category>MarkusHoltermann</category><category>PyCon</category><category>PyConAU</category><category>PyConline</category><category>Python</category><category>pyconau</category><category>pyconau_2020</category></item><item><title>Knock, knock! Who's there?</title><link>https://pyvideo.org/pycon-au-2021/knock-knock-whos-there.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;(Markus Holtermann) It's at the core of most IT systems that surround us. Without it, nobody would know each other on the Internet. And whatever we'd do would not be secure.&lt;/p&gt;
&lt;p&gt;I'm talking about Identification and Authentication. But which options are out there to identify and authenticate someone?&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2021.pycon.org.au/program/QB9EHQ/"&gt;https://2021.pycon.org.au/program/QB9EHQ/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;python, pycon, australia, programming, conference, technical, pyconline, developers, panel, sessions, libraries, frameworks, community, sysadmins, students, education, data, science&lt;/p&gt;
&lt;p&gt;Videos licensed as CC-BY-NC-SA 4.0&lt;/p&gt;
&lt;p&gt;PyCon AU is the national conference for the Python programming community, bringing together professional, student and enthusiast developers, sysadmins and operations folk, students, educators, scientists, statisticians, and many others besides, all with a love for working with Python.&lt;/p&gt;
&lt;p&gt;PyCon AU informs the country‚Äôs Python developers with presentations, tutorials and panel sessions by experts and core developers of Python, as well as the libraries and frameworks that they rely on.&lt;/p&gt;
&lt;p&gt;Produced by Next Day Video Australia: &lt;a class="reference external" href="https://nextdayvideo.com.au"&gt;https://nextdayvideo.com.au&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Sep 10 17:00:00 2021 at Snakeoil Academy (Security &amp;amp; Privacy)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-09-11:/pycon-au-2021/knock-knock-whos-there.html</guid><category>PyCon AU 2021</category><category>MarkusHoltermann</category><category>pyconau</category><category>pyconau_2021</category></item><item><title>SSL all the things</title><link>https://pyvideo.org/pycon-de-2016/ssl-all-the-things.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the last few years SSL/TLS encryption of not only websites but many other services as well has risen tremendously. The Let‚Äôs Encrypt organization and certificate authority (CA) makes that pretty easy. Since September 2015 more than 10 million certificates have been issued. And you can use it, too. For free!In this talk I'll give a quick introduction how SSL/TLS works. I‚Äôll briefly layout the Let's Encrypt ACME protocol and explain what you need to make use of it. I will then give some examples of how to use SSL in Python while not shooting yourself in the foot or knee.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sat, 29 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-29:/pycon-de-2016/ssl-all-the-things.html</guid><category>PyCon DE 2016</category></item><item><title>Less Obvious Things To Do With Django's ORM.</title><link>https://pyvideo.org/pycon-sk-2019/less-obvious-things-to-do-with-djangos-orm.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django‚Äôs ORM is powerful. And it has been for ages. It only became even
more powerful over the last years. Django‚Äôs ORM can be intimidating
because it can do so many things. And it can also be confusing when
trying to find out how to do things.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-03-23:/pycon-sk-2019/less-obvious-things-to-do-with-djangos-orm.html</guid><category>PyCon SK 2019</category></item><item><title>Logging Rethought 2: The Actions of Frank Taylor Jr.</title><link>https://pyvideo.org/pycon-uk-2019/logging-rethought-2-the-actions-of-frank-taylor-jr.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We build services, potentially used by millions of people. And despite all the testing we do, some interactions with these services will not work out the way we hope. Wouldn‚Äôt it be great to reconstruct what let to a problem and analyze if the problem occurred at other times?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-09-13:/pycon-uk-2019/logging-rethought-2-the-actions-of-frank-taylor-jr.html</guid><category>PyCon UK 2019</category></item><item><title>Oh, I found a Security Issue</title><link>https://pyvideo.org/pyconweb-2017/oh-i-found-a-security-issue.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A talk together with Florian Apolloner&lt;/p&gt;
&lt;p&gt;Ever thought about what happens when somebody finds a security issue in Django? How does one responsibly disclose the issue? What happens after that? How does the Django team work on it? What happens until a Django security release is published? What comes afterwards?
Also, Django is ‚Äúreassuringly secure‚Äù. Let‚Äôs look at the history ;-)&lt;/p&gt;
&lt;p&gt;We'll give an insight on how the Django team handles security issues,
which can serve as a guideline and followed in own projects. We'll
will also review the history of Django's security issues to identify
hotspots and areas to look out for.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:/pyconweb-2017/oh-i-found-a-security-issue.html</guid><category>PyConWeb 2017</category><category>django</category><category>security</category></item><item><title>To index or not, that's not the question</title><link>https://pyvideo.org/pyconweb-2017/to-index-or-not-thats-not-the-question.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Database indexes play a key role in every database query. Hence, it's not a question that you should be able to define them through Django. While you're already kind of able to do that with &lt;cite&gt;dbindex=true&lt;/cite&gt; and &lt;cite&gt;index_together&lt;/cite&gt;, these options are rather limiting. Django 1.11 comes with a new feature to allow you to express your index requirements much more granular.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Markus Holtermann</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:/pyconweb-2017/to-index-or-not-thats-not-the-question.html</guid><category>PyConWeb 2017</category><category>django</category></item></channel></rss>