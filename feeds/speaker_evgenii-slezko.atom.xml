<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_evgenii-slezko.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-06-22T00:00:00+00:00</updated><entry><title>Переход на SOA в существующем Python-проекте. Тяжеловато или ничего?</title><link href="https://pyvideo.org/pycon-russia-2018/perekhod-na-soa-v-sushchestvuiushchem-python-proekte-tiazhelovato-ili-nichego.html" rel="alternate"></link><published>2018-06-22T00:00:00+00:00</published><updated>2018-06-22T00:00:00+00:00</updated><author><name>Евгений Слезко</name></author><id>tag:pyvideo.org,2018-06-22:pycon-russia-2018/perekhod-na-soa-v-sushchestvuiushchem-python-proekte-tiazhelovato-ili-nichego.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Евгений Слезко&lt;/strong&gt; , Marilyn System&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pycon.ru/2018/en/program/content/slezko/"&gt;**Переход на SOA в существующем Python-проекте. Тяжеловато или
ничего?**&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;В докладе я поделюсь нашим опытом внедрения сервисно-ориентированной
архитектуры в системе, которая разрабатывается на языке Python уже более
5 лет. Зачем это нужно? Какие проблемы решает, а какие создает? О чем
стоит позаботиться в самом начале? Какой профит как с точки зрения
инженера, так и с точки зрения управления разработкой?&lt;/p&gt;
&lt;p&gt;Доклад рассчитан на опытных разработчиков, системных архитекторов и
руководителей разных уровней, которые столкнулись или столкнутся с
вопросом перехода на сервисно-ориентированную архитектуру в своих
проектах.&lt;/p&gt;
</summary></entry></feed>