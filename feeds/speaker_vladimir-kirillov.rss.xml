<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 28 Apr 2018 00:00:00 +0000</lastBuildDate><item><title>Ur/web: web development with one language or what to expect from mypy</title><link>https://pyvideo.org/pycon-ukraine-2018/urweb-web-development-with-one-language-or-what-to-expect-from-mypy.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vladimir Kirillov</dc:creator><pubDate>Sat, 28 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-28:pycon-ukraine-2018/urweb-web-development-with-one-language-or-what-to-expect-from-mypy.html</guid></item><item><title>Debugging Python Applications in Production</title><link>https://pyvideo.org/pycon-ukraine-2012/debugging-python-applications-in-production.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Due to dynamic and interpreted nature of Python applications it's not hard to employ a limited set of debugging techniques in development and use a variety of debugging tools. However all nasty bugs tend to happen only in production, the very constrained environment without possibilities to edit code, restart, freeze or reconfigure in runtime to suspend services or scare the bug away. This talk is going to cover a set of techniques of debugging, tracing and profiling production Python code in Linux and Solaris environments (with focus on Linux). I'm going to show how to take advantage of GDB, strace, kernel memory, tcpdump, DTrace, SystemTap and all the related software tools to fully introspect what's going on in the Python-powered system.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vladimir Kirillov</dc:creator><pubDate>Sun, 21 Oct 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/debugging-python-applications-in-production.html</guid></item><item><title>Enjoying Calculus in Python</title><link>https://pyvideo.org/pycon-ukraine-2016/enjoying-calculus-in-python.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ian Tsybulkin</dc:creator><pubDate>Sun, 24 Apr 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-04-24:pycon-ukraine-2016/enjoying-calculus-in-python.html</guid></item><item><title>From the first love to a serious relationship: Python to Haskell</title><link>https://pyvideo.org/pycon-ukraine-2014/from-the-first-love-to-a-serious-relationship-py.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a terrific everyday tool for solving practical tasks, but
there always was a missing thing here and there. Vlad has tried many
languages during his career as an engineer, got excited with a
functional programming community and settled with using Haskell as a
prime-time instrument. Come to the talk to find out what's going on. In
this talk passion is going to be (almost) purely technical and no hello
worlds, promise.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vladimir Kirillov</dc:creator><pubDate>Sun, 02 Nov 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-11-02:pycon-ukraine-2014/from-the-first-love-to-a-serious-relationship-py.html</guid></item></channel></rss>