<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Dave Brondsema</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_dave-brondsema.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-03-09T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Decorators and Context Managers</title><link href="https://pyvideo.org/pycon-us-2012/decorators-and-context-managers.html" rel="alternate"></link><published>2012-03-09T00:00:00+00:00</published><updated>2012-03-09T00:00:00+00:00</updated><author><name>Dave Brondsema</name></author><id>tag:pyvideo.org,2012-03-09:/pycon-us-2012/decorators-and-context-managers.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn how decorators and context managers work, see several popular
examples, and get a brief intro to writing your own. Decorators wrap
your functions to easily add more functionality. Context managers use
the 'with' statement to make indented blocks magical. Both are very
powerful parts of the python language â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn how decorators and context managers work, see several popular
examples, and get a brief intro to writing your own. Decorators wrap
your functions to easily add more functionality. Context managers use
the 'with' statement to make indented blocks magical. Both are very
powerful parts of the python language; come learn how to use them in
your code.&lt;/p&gt;
</content><category term="PyCon US 2012"></category></entry></feed>