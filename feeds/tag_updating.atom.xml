<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_updating.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2011-07-18T00:00:00+00:00</updated><entry><title>Teaching an Old Pony New Tricks: Maintaining and Updating an Aging Django Project</title><link href="https://pyvideo.org/djangocon-us-2010/djangocon-2010--teaching-an-old-pony-new-tricks--.html" rel="alternate"></link><published>2010-09-07T00:00:00+00:00</published><updated>2010-09-07T00:00:00+00:00</updated><author><name>Shawn Rider</name></author><id>tag:pyvideo.org,2010-09-07:djangocon-us-2010/djangocon-2010--teaching-an-old-pony-new-tricks--.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PBS began development on its first Django project in 2006 using Django
0.96. PBS TeacherLine launched in 2007 and continues to run today. This
talk will discuss the process for designing the PBS TeacherLine
codebase, how new advanced features were added over the years, and
pitfalls you can avoid when planning projects for longevity and easy
maintenance.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;PBS chose Django after seeing a presentation by Jacob Kaplan-Moss and
Adrian Holovaty at OSCON 2006. That Fall, PBS Education began work on a
new version of the PBS TeacherLine website. The site most users see when
they visit PBS TeacherLine is essentially a brochure and catalog that
allows educators to purchase seats in online professional development
courses. However, behind the scenes is an administrative infrastructure
that allows over 50 PBS stations and PBS national staff members to
administrate hundreds of course sections and over ten thousand learners
every year. There are robust features for accounting, reporting, student
and staff management just to name a few.&lt;/p&gt;
&lt;p&gt;The TeacherLine website was initially written using Django 0.96. The
site is currently running Django 1.2 and has had major upgrades made to
some of the core systems including the implementation of a robust
message queue solution to handle the most intense administrative
functions. Over the past four years, the PBS Education Technology Team
has learned many lessons about system design, best practices, handling
upgrades, and creating Django-based code that is flexible and easy to
maintain.&lt;/p&gt;
&lt;p&gt;In this discussion we will look at some of the more interesting points
in the history of PBS TeacherLine, including design patterns,
workarounds that were eventually made obsolete by improvements in the
Django framework, and the process of iteratively improving functionality
and features. We will discuss successes and failures, including the
pitfalls we avoided and (perhaps more interestingly) those we did not.&lt;/p&gt;
</summary><category term="djangocon"></category><category term="djangocon2010"></category><category term="maintenance"></category><category term="updating"></category></entry><entry><title>Latest advances in the Google APIs platform</title><link href="https://pyvideo.org/europython-2011/latest-advances-in-the-google-apis-platform.html" rel="alternate"></link><published>2011-07-18T00:00:00+00:00</published><updated>2011-07-18T00:00:00+00:00</updated><author><name>Ali Afshar</name></author><id>tag:pyvideo.org,2011-07-18:europython-2011/latest-advances-in-the-google-apis-platform.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Ali Afshar - 21 June 2011 in &amp;quot;Track Ravioli&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will give an outline of the advances that Google have made in
API delivery over the last year, and how it is relevant to you as a
Python developer. The talk is suitable for beginners and advanced
developers.&lt;/p&gt;
&lt;p&gt;We will describe the underlying platform, and the built-in features that
all Google APIs inherit.&lt;/p&gt;
&lt;p&gt;We will focus on how the Python libraries for this API platform are
generated and can be used as a single library that doesn't require
updating with API updates, as Python lends itself perfectly to the
nature of this platform.&lt;/p&gt;
</summary><category term="api"></category><category term="google"></category><category term="updating"></category></entry></feed>