<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_dan-callahan.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-05-12T00:00:00+00:00</updated><entry><title>Dan Callahan - Keynote - PyCon 2018</title><link href="https://pyvideo.org/pycon-us-2018/dan-callahan-keynote-pycon-2018.html" rel="alternate"></link><published>2018-05-12T00:00:00+00:00</published><updated>2018-05-12T00:00:00+00:00</updated><author><name>Dan Callahan</name></author><id>tag:pyvideo.org,2018-05-12:pycon-us-2018/dan-callahan-keynote-pycon-2018.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dan Callahan&lt;/p&gt;
</summary><category term="keynote"></category></entry><entry><title>The New Mobile Web: Service Worker, Push, and App Manifests</title><link href="https://pyvideo.org/pycon-us-2016/dan-callahan-the-new-mobile-web-service-worker-push-and-app-manifests-pycon-2016.html" rel="alternate"></link><published>2016-05-31T00:00:00+00:00</published><updated>2016-05-31T00:00:00+00:00</updated><author><name>Dan Callahan</name></author><id>tag:pyvideo.org,2016-05-31:pycon-us-2016/dan-callahan-the-new-mobile-web-service-worker-push-and-app-manifests-pycon-2016.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dan Callahan&lt;/p&gt;
&lt;p&gt;Compared to native apps, mobile websites are at a disadvantage: no installing, no push notifications, and they only work when you're online. This year, that changes.&lt;/p&gt;
&lt;p&gt;Browser vendors are working together to implement open standards that address each of these shortcomings. This session examines how the Service Worker, Push, and App Manifest specifications fill the gap between web and native.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Beyond Passwords: Secure Authentication with Mozilla Persona</title><link href="https://pyvideo.org/pycon-ca-2012/beyond-passwords-secure-authentication-with-mozi.html" rel="alternate"></link><published>2012-11-11T00:00:00+00:00</published><updated>2012-11-11T00:00:00+00:00</updated><author><name>Dan Callahan</name></author><id>tag:pyvideo.org,2012-11-11:pycon-ca-2012/beyond-passwords-secure-authentication-with-mozi.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Persona is a decentralized, cross-browser login system that eliminates
site passwords. Learn about its design with a focus on adding it to
Python-based webapps, drawing from Mozilla's own experience.&lt;/p&gt;
</summary></entry><entry><title>Quick Wins for Better Website Security</title><link href="https://pyvideo.org/pycon-ca-2013/quick-wins-for-better-website-security.html" rel="alternate"></link><published>2013-08-11T00:00:00+00:00</published><updated>2013-08-11T00:00:00+00:00</updated><author><name>Dan Callahan</name></author><id>tag:pyvideo.org,2013-08-11:pycon-ca-2013/quick-wins-for-better-website-security.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn quick and easy techniques to improve your website's security,
protect against session hijacking, and defend against XSS and data
injection attacks.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Beyond Passwords: Secure Authentication with Mozilla Persona</title><link href="https://pyvideo.org/pycon-us-2013/beyond-passwords-secure-authentication-with-mozi-0.html" rel="alternate"></link><published>2013-03-16T00:00:00+00:00</published><updated>2013-03-16T00:00:00+00:00</updated><author><name>Dan Callahan</name></author><id>tag:pyvideo.org,2013-03-16:pycon-us-2013/beyond-passwords-secure-authentication-with-mozi-0.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Mozilla Persona is a decentralized, cross-browser authentication system
that completely eliminates website passwords. It's simple, secure, and
privacy-protecting. This talk explores the design of Persona with a
focus on adding it as a login option to Python-based webapps, drawing
from Mozilla's own experience switching many Django (and non-Django)
sites away from passwords and to Persona.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Quick Wins for Better Website Security</title><link href="https://pyvideo.org/pycon-us-2014/quick-wins-for-better-website-security-0.html" rel="alternate"></link><published>2014-04-13T00:00:00+00:00</published><updated>2014-04-13T00:00:00+00:00</updated><author><name>Dan Callahan</name></author><id>tag:pyvideo.org,2014-04-13:pycon-us-2014/quick-wins-for-better-website-security-0.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn quick, easy, and lesser-known techniques to improve your website's
security, protect against session hijacking, and defend against XSS and
data injection attacks.&lt;/p&gt;
</summary></entry><entry><title>Fire your supervisord running Python apps on CoreOS</title><link href="https://pyvideo.org/pycon-us-2015/fire-your-supervisord-running-python-apps-on-core.html" rel="alternate"></link><published>2015-04-11T00:00:00+00:00</published><updated>2015-04-11T00:00:00+00:00</updated><author><name>Dan Callahan</name></author><id>tag:pyvideo.org,2015-04-11:pycon-us-2015/fire-your-supervisord-running-python-apps-on-core.html</id><summary type="html"></summary></entry><entry><title>My Python's a little Rust-y</title><link href="https://pyvideo.org/pycon-us-2015/my-pythons-a-little-rust-y.html" rel="alternate"></link><published>2015-04-11T00:00:00+00:00</published><updated>2015-04-11T00:00:00+00:00</updated><author><name>Dan Callahan</name></author><id>tag:pyvideo.org,2015-04-11:pycon-us-2015/my-pythons-a-little-rust-y.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Rust is a new systems programming language from Mozilla that combines
strong compile-time correctness guarantees with fast performance... and
it plays nice with ctypes! Come learn how you can call Rust functions
from Python code and finally say goodbye to hacking C!&lt;/p&gt;
</summary></entry></feed>