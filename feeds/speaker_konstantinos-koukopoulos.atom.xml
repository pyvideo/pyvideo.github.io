<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_konstantinos-koukopoulos.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-02-04T00:00:00+00:00</updated><entry><title>Going global with Python</title><link href="https://pyvideo.org/pycon-belarus-2017/going-global-with-python.html" rel="alternate"></link><published>2017-02-04T00:00:00+00:00</published><updated>2017-02-04T00:00:00+00:00</updated><author><name>Konstantinos Koukopoulos</name></author><id>tag:pyvideo.org,2017-02-04:pycon-belarus-2017/going-global-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most people in the world don’t speak English, and are more comfortable
using software in their native language. Yet around the world software
is usually produced with English text by default. This weird situation
might seem normal if you think of Software Localization in terms of
string freezes, content handoffs and the emailing of spreadsheets with
content strings. Can it be different? Can translation work follow the
pace of today’s software delivery pipelines, and join in on the
continuous delivery party? In this talk, we will discuss software
localization and some ways that teams can improve their localization
processes, from the personal perspective of a Python dev team based in
Greece. What challenges did we face and what did we learn while building
our own web-based localization automation platform using Django and
Python?&lt;/p&gt;
</summary></entry></feed>