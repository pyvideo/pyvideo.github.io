<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_chris-fournier.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-11-19T00:00:00+00:00</updated><entry><title>Navigating a Data Warehouse via CLI</title><link href="https://pyvideo.org/pycon-ca-2017/navigating-a-data-warehouse-via-cli.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Chris Fournier</name></author><id>tag:pyvideo.org,2017-11-19:pycon-ca-2017/navigating-a-data-warehouse-via-cli.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At Shopify we have over 3000 Python batch ETL jobs. These jobs depend upon each other’s output forming a directed acyclic graph that, when visualized, is indiscernible from the hairballs that my cat pukes up.&lt;/p&gt;
&lt;p&gt;These jobs are created by a team of over 100 analysts and engineers who deploy on average 15 changes to them per day to production. With so many people and such a rapid pace of change, understanding how a dataset is constructed, debugging relationships, tracing the flow of data, or even just asking how prevalent a feature or type of relationship is becomes has been a daunting task requiring tracing not only 20k lines of YAML schedule files and 50k lines of Python code.&lt;/p&gt;
&lt;p&gt;To make asking questions about these jobs tractable, we’ve created a series of CLI tools that, when combined with unix tools, makes answering questions about our schedule possible.&lt;/p&gt;
&lt;p&gt;I’ll cover how we flatten that graph into a series of tables that we can output using a CLI tool and then how one can use grep, awk, sort, join, and column to answer some real questions that we had about our schedule.&lt;/p&gt;
</summary></entry></feed>