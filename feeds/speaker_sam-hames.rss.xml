<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 02 Aug 2019 00:00:00 +0000</lastBuildDate><item><title>You don't always need NumPy</title><link>https://pyvideo.org/pycon-au-2019/you-dont-always-need-numpy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The numerical Python ecosystem and communities are mature and powerful, but sometimes we can be too quick to reach for the numerical hammer when simpler options exist. This talk will outline some areas where the numerical stack may not be the best starting point, and survey some alternatives.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2019.pycon-au.org/talks/you-dont-always-need-numpy"&gt;https://2019.pycon-au.org/talks/you-dont-always-need-numpy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fri Aug  2 09:30:00 2019 at C3.6&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Hames</dc:creator><pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-08-02:pycon-au-2019/you-dont-always-need-numpy.html</guid></item><item><title>Tutorial: A Practical Introduction To Machine Learning</title><link>https://pyvideo.org/pycon-au-2016/tutorial-a-practical-introduction-to-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sam Hames
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/133/view_talk"&gt;https://2016.pycon-au.org/schedule/133/view_talk&lt;/a&gt;
Machine learning is a hot topic, with lots of hype about what it can and might do. Given the broad landscape of machine learning, and the continuing proliferation of new tools and techniques it can be difficult to get a pragmatic view of how machine learning can be used, or even where to start.&lt;/p&gt;
&lt;p&gt;This tutorial will provide a high level introduction to machine learning: what it is, what kind of problems we can solve with it, and how can we apply it. In doing so this tutorial will also introduce the scikit-learn library and show you why this library is a central part of the machine learning ecosystem in Python.&lt;/p&gt;
&lt;p&gt;We will start from scratch with a small example dataset, and walk through the process of building and carefully validating a classifier with scikit-learn. The practical focus during the tutorial will be on hands on implementation and experimentation. The technical focus will be on machine learning algorithms as black boxes for making decisions.&lt;/p&gt;
&lt;p&gt;Assumed background: This tutorial only assumes that you are comfortable with Python the language. We will &lt;em&gt;not&lt;/em&gt; assume that you have any maths background, or that you are familiar with numerical computing: discussion of maths and algorithms will be strictly limited to hand waving.&lt;/p&gt;
&lt;p&gt;About Jack&lt;/p&gt;
&lt;p&gt;Jack Simpson is a PhD candidate at the Australian National University working on image processing and behavioural analysis. He received his Software Carpentry Instructor training over a year ago and since then has organised and taught multiple workshops university.&lt;/p&gt;
&lt;p&gt;About Alistair&lt;/p&gt;
&lt;p&gt;Alistair Walsh is a cognitive neuroscientist currently working at The University of Melbourne, Research Platforms department as a Community Manager. He teaches Python, machine learning and text and image processing to researchers who aren't from a computer science background but need to use programming tools in their research. Alistair is also an instructor trainer for Software Carpentry and has run Software Carpentry programming workshops in Melbourne, Sydney and Adelaide.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Hames</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/tutorial-a-practical-introduction-to-machine-learning.html</guid></item><item><title>Automated Scientific Pipelines With Doit</title><link>https://pyvideo.org/pycon-au-2015/automated-scientific-pipelines-with-doit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Doit is a Python library for task management and automation. It provides
a straightforward Python approach to manage and execute any series of
interrelated tasks, such as in scientific data analysis. Doit can be
used as a command line substitute for Make to drive existing
tools/applications, or can be integrated directly with your application
at the Python level. Task automation can be as simple as manually
specifying a dictionary of dependencies, target files and actions, or as
complex as automatically determining dependencies and whether a task is
up to date using arbitrary Python expressions. This talk will give an
overview of why and how to use doit for your project.&lt;/p&gt;
&lt;p&gt;This talk assumes no particular background except some familiarity with
Python, but is geared towards a scientific computing audience and will
touch on automated data analysis as a motivating example.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Hames</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-03:pycon-au-2015/automated-scientific-pipelines-with-doit.html</guid></item></channel></rss>