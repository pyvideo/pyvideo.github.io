<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Pandy Knight</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_pandy-knight.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-04-13T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Lightning Talks Day 1</title><link href="https://pyvideo.org/djangocon-us-2019/lightning-talks-day-1.html" rel="alternate"></link><published>2019-09-23T00:00:00+00:00</published><updated>2019-09-23T00:00:00+00:00</updated><author><name>Wayne Merry</name></author><id>tag:pyvideo.org,2019-09-23:/djangocon-us-2019/lightning-talks-day-1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon 2019 - Lightning Talks Day 1 by Various Speakers&lt;/p&gt;
&lt;p&gt;Wayne Merry 00:00
Ayaz Amlani 5:24
Tyler Rudie 9:37
Pandy Knight 14:30
Dustin Ingram 18:32
Paul Stieber 22:23
Dawn Wages 26:16&lt;/p&gt;
&lt;p&gt;This talk was presented at: &lt;a class="reference external" href="https://2019.djangocon.us/talk/lightning-talks/"&gt;https://2019.djangocon.us/talk/lightning-talks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LINKS â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon 2019 - Lightning Talks Day 1 by Various Speakers&lt;/p&gt;
&lt;p&gt;Wayne Merry 00:00
Ayaz Amlani 5:24
Tyler Rudie 9:37
Pandy Knight 14:30
Dustin Ingram 18:32
Paul Stieber 22:23
Dawn Wages 26:16&lt;/p&gt;
&lt;p&gt;This talk was presented at: &lt;a class="reference external" href="https://2019.djangocon.us/talk/lightning-talks/"&gt;https://2019.djangocon.us/talk/lightning-talks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LINKS:
Follow Kojo Idrissa ðŸ‘‡
On Twitter: &lt;a class="reference external" href="https://twitter.com/Transition"&gt;https://twitter.com/Transition&lt;/a&gt;
Official homepage: &lt;a class="reference external" href="http://kojoidrissa.com/"&gt;http://kojoidrissa.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow DjangCon US ðŸ‘‡
&lt;a class="reference external" href="https://twitter.com/djangocon"&gt;https://twitter.com/djangocon&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow DEFNA ðŸ‘‡
&lt;a class="reference external" href="https://twitter.com/defnado"&gt;https://twitter.com/defnado&lt;/a&gt;
&lt;a class="reference external" href="https://www.defna.org/"&gt;https://www.defna.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Intro music: &amp;quot;This Is How We Quirk It&amp;quot; by Avocado Junkie.
Video production by Confreaks TV.
Captions by White Coat Captioning.&lt;/p&gt;
</content><category term="DjangoCon US 2019"></category></entry><entry><title>Awesome Modern Web Testing with Playwright</title><link href="https://pyvideo.org/pycon-us-2022/awesome-modern-web-testing-with-playwright.html" rel="alternate"></link><published>2022-04-27T00:00:00+00:00</published><updated>2022-04-27T00:00:00+00:00</updated><author><name>Pandy Knight</name></author><id>tag:pyvideo.org,2022-04-27:/pycon-us-2022/awesome-modern-web-testing-with-playwright.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everybody gets frustrated when web apps are broken, but testing them thoroughly doesn't need to be a chore. Playwright, a new open-source browser automation tool from Microsoft, makes testing web apps fun! Playwright outperforms other tools like Selenium WebDriver with a slew of nifty features like automatic waiting, mobile â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everybody gets frustrated when web apps are broken, but testing them thoroughly doesn't need to be a chore. Playwright, a new open-source browser automation tool from Microsoft, makes testing web apps fun! Playwright outperforms other tools like Selenium WebDriver with a slew of nifty features like automatic waiting, mobile emulation, and network interception. Plus, with isolated browser contexts, Playwright tests can set up much faster than traditional Web UI tests.&lt;/p&gt;
&lt;p&gt;In this tutorial, we will build a Python test automation project from the ground up. We will automate web search engine tests together step-by-step using Playwright for interactions and pytest for execution.&lt;/p&gt;
&lt;p&gt;Specifically, we will cover:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;How to install and configure Playwright&lt;/li&gt;
&lt;li&gt;How to integrate Playwright with pytest, Pythonâ€™s leading test framework&lt;/li&gt;
&lt;li&gt;How to perform interactions through page objects&lt;/li&gt;
&lt;li&gt;How to conveniently run different browsers, capture videos, and run tests in parallel&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By the end of this tutorial, you'll be empowered to test modern web apps with modern web test tools. You'll also have an example project to be the foundation for your future tests. You can use Playwright to test Django apps, Flask apps, or any other kinds of apps!&lt;/p&gt;
</content><category term="PyCon US 2022"></category><category term="tutorial"></category></entry><entry><title>Lightning Talks - Day 3</title><link href="https://pyvideo.org/pycon-us-2022/lightning-talks-day-3.html" rel="alternate"></link><published>2022-04-27T00:00:00+00:00</published><updated>2022-04-27T00:00:00+00:00</updated><author><name>Pandy Knight</name></author><id>tag:pyvideo.org,2022-04-27:/pycon-us-2022/lightning-talks-day-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are a ~ 5 minutes long, on any topic of interest to other Python people. It doesn't have to be about something that you wrote, it can be something that you learned, or a technique you think other people will be interested in.&lt;/p&gt;
&lt;p&gt;Speakers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:23 - Pandy Knight â€¦&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are a ~ 5 minutes long, on any topic of interest to other Python people. It doesn't have to be about something that you wrote, it can be something that you learned, or a technique you think other people will be interested in.&lt;/p&gt;
&lt;p&gt;Speakers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:23 - Pandy Knight - How to write a test case&lt;/li&gt;
&lt;li&gt;05:09 - Shreya Batra - The Effects of Computational THinking&lt;/li&gt;
&lt;li&gt;09:36 - Patrick Arminio - The fastest way to fetch the latest python version&lt;/li&gt;
&lt;li&gt;11:57 - Ray McLendon - Not all data is created equal&lt;/li&gt;
&lt;li&gt;16:24 - Geir Arne Hjelle - Reading PEPs&lt;/li&gt;
&lt;li&gt;21:30 - Jonathan Helmus - Pip install Python?&lt;/li&gt;
&lt;li&gt;26:07 - Jelle Zijlstra - PEP 688: Typing for the buffer protocol&lt;/li&gt;
&lt;li&gt;29:30 - Nick Muoh - Post pandemic meetuup&lt;/li&gt;
&lt;li&gt;33:25 - multiple speakers talking about Regional Python Conferences&lt;/li&gt;
&lt;/ul&gt;
</content><category term="PyCon US 2022"></category><category term="lightning talks"></category></entry><entry><title>Managing the Test Data Nightmare</title><link href="https://pyvideo.org/pycon-us-2022/managing-the-test-data-nightmare.html" rel="alternate"></link><published>2022-04-27T00:00:00+00:00</published><updated>2022-04-27T00:00:00+00:00</updated><author><name>Pandy Knight</name></author><id>tag:pyvideo.org,2022-04-27:/pycon-us-2022/managing-the-test-data-nightmare.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Good data for testing can be a nightmare to manage. Sometimes, teams donâ€™t have much control over the data in their systems under testâ€”itâ€™s just dropped in, and it can change arbitrarily. Other times, teams need to build their own data sets, either before testing or â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Good data for testing can be a nightmare to manage. Sometimes, teams donâ€™t have much control over the data in their systems under testâ€”itâ€™s just dropped in, and it can change arbitrarily. Other times, teams need to build their own data sets, either before testing or during testing. Inaccurate data can leave test gaps. Incorrect or stale data can break tests. Large data can consume too much time. Ugh!&lt;/p&gt;
&lt;p&gt;In this talk, weâ€™ll cover strategies for defeating many types of test data nightmares:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;recognizing the difference between product data and test case data&lt;/li&gt;
&lt;li&gt;deciding when to prepare data statically beforehand or dynamically during testing&lt;/li&gt;
&lt;li&gt;using data to control how tests run or reflect product state&lt;/li&gt;
&lt;li&gt;hard-coding values versus discovering data in the system&lt;/li&gt;
&lt;li&gt;avoiding collisions on shared data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The strategies we cover can be applied to any project in any language. After this talk, you will wake up from the nightmare and handle test data cleanly and efficiently like a pro!&lt;/p&gt;
</content><category term="PyCon US 2022"></category></entry><entry><title>What framework should I use for web testing?</title><link href="https://pyvideo.org/pycon-us-2023/what-framework-should-i-use-for-web-testing.html" rel="alternate"></link><published>2023-04-22T00:00:00+00:00</published><updated>2023-04-22T00:00:00+00:00</updated><author><name>Pandy Knight</name></author><id>tag:pyvideo.org,2023-04-22:/pycon-us-2023/what-framework-should-i-use-for-web-testing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web apps these days are bigger than ever! With added complexity comes
higher risk for bugs and poor user experience. One of the best ways to
improve quality during development is to build feedback loops with
automated test suites that run continuously. These days, there are three
major open â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web apps these days are bigger than ever! With added complexity comes
higher risk for bugs and poor user experience. One of the best ways to
improve quality during development is to build feedback loops with
automated test suites that run continuously. These days, there are three
major open source test frameworks for automating web UI tests:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Selenium, the old-school browser automation tool&lt;/li&gt;
&lt;li&gt;Cypress, the darling framework for frontend developers&lt;/li&gt;
&lt;li&gt;Playwright, the dark horse rising in popularity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These three can test any kind of web app, including ones developed in
Python, but which one is best? In this talk, Iâ€™ll give a brief overview
of each one, including example code for a basic search engine test. We
will compare and contrast their features head-to-head so that you can
make the right decision for your team.&lt;/p&gt;
</content><category term="PyCon US 2023"></category></entry><entry><title>def test_crash_course_with_pytest():</title><link href="https://pyvideo.org/pycon-us-2024/def-test_crash_course_with_pytest.html" rel="alternate"></link><published>2024-05-16T00:00:00+00:00</published><updated>2024-05-16T00:00:00+00:00</updated><author><name>Pandy Knight</name></author><id>tag:pyvideo.org,2024-05-16:/pycon-us-2024/def-test_crash_course_with_pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;pytest&lt;/tt&gt; is Python's most popular test framework. It makes testing
simple and fun, and its rich plugin ecosystem enables you to do just
about anything! However, writing &lt;em&gt;good&lt;/em&gt; tests is still challenging.
There is testing theory that goes along with testing practice.&lt;/p&gt;
&lt;p&gt;In this tutorial, let's learn how to â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;pytest&lt;/tt&gt; is Python's most popular test framework. It makes testing
simple and fun, and its rich plugin ecosystem enables you to do just
about anything! However, writing &lt;em&gt;good&lt;/em&gt; tests is still challenging.
There is testing theory that goes along with testing practice.&lt;/p&gt;
&lt;p&gt;In this tutorial, let's learn how to start testing in Python with
&lt;tt class="docutils literal"&gt;pytest&lt;/tt&gt;. Specifically, we will cover:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Configuring projects for testing&lt;/li&gt;
&lt;li&gt;Writing and running test functions with pytest's basic mechanics&lt;/li&gt;
&lt;li&gt;Parameterizing tests&lt;/li&gt;
&lt;li&gt;Handling setup and cleanup with fixtures&lt;/li&gt;
&lt;li&gt;A little bit of mocking to go a long way&lt;/li&gt;
&lt;li&gt;Testing web APIs and UIs with Playwright&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Bring your laptops, because we will be doing hands-on code the whole
tutorial! By the end of this tutorial, you'll be able to test your
Python code like a champion.&lt;/p&gt;
</content><category term="PyCon US 2024"></category></entry><entry><title>How to Write a Test Case</title><link href="https://pyvideo.org/pyohio-2020/how-to-write-a-test-case.html" rel="alternate"></link><published>2020-07-25T00:00:00+00:00</published><updated>2020-07-25T00:00:00+00:00</updated><author><name>Pandy Knight</name></author><id>tag:pyvideo.org,2020-07-25:/pyohio-2020/how-to-write-a-test-case.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing is vital for any type of software. Python has frameworks like
unittest and pytest for automating tests, too. But how can we write
&lt;em&gt;good&lt;/em&gt; test cases? One of the best patterns to follow is to write
independent test cases using the &lt;em&gt;Arrange-Act-Assert&lt;/em&gt; pattern. It works
for any kind â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing is vital for any type of software. Python has frameworks like
unittest and pytest for automating tests, too. But how can we write
&lt;em&gt;good&lt;/em&gt; test cases? One of the best patterns to follow is to write
independent test cases using the &lt;em&gt;Arrange-Act-Assert&lt;/em&gt; pattern. It works
for any kind of functional test. I'll show how it's done so that you can
write tests like a champ!&lt;/p&gt;
</content><category term="PyOhio 2020"></category></entry><entry><title>Start Testing in 5 Minutes Flat</title><link href="https://pyvideo.org/pyohio-2021/start-testing-in-5-minutes-flat.html" rel="alternate"></link><published>2021-07-31T00:00:00+00:00</published><updated>2021-07-31T00:00:00+00:00</updated><author><name>Pandy Knight</name></author><id>tag:pyvideo.org,2021-07-31:/pyohio-2021/start-testing-in-5-minutes-flat.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every software project should have some degree of testing. Why? No code
is perfect, and bugs happen! Unfortunately, many people don't write
tests because they feel like it's too much work, or they don't know how
to start.&lt;/p&gt;
&lt;p&gt;In this lightning talk, I'll show you how to start testing â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every software project should have some degree of testing. Why? No code
is perfect, and bugs happen! Unfortunately, many people don't write
tests because they feel like it's too much work, or they don't know how
to start.&lt;/p&gt;
&lt;p&gt;In this lightning talk, I'll show you how to start testing your code
using &lt;tt class="docutils literal"&gt;pytest&lt;/tt&gt;. We will cover how to configure &lt;tt class="docutils literal"&gt;pytest&lt;/tt&gt;, where to
put tests, and how to write concise yet meaningful tests. Slides will
include example code with full test cases. I'll also share resources for
learning more advanced techniques. In 5 minutes flat, you'll see just
how easy it is to add valuable tests to your Python projects!&lt;/p&gt;
</content><category term="PyOhio 2021"></category></entry><entry><title>A Quickstart to Web Testing with Playwright</title><link href="https://pyvideo.org/pyohio-2022/a-quickstart-to-web-testing-with-playwright.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Pandy Knight</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/a-quickstart-to-web-testing-with-playwright.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Playwright is a fantastic new open source web testing framework from
Microsoft. With Playwright, you can automate tests for web apps and REST
APIs that run on multiple browsers without flaky failures. It's a nice,
modern alternative to Selenium WebDriver, and you can use Playwright in
plain-old Python!&lt;/p&gt;
&lt;p&gt;In â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Playwright is a fantastic new open source web testing framework from
Microsoft. With Playwright, you can automate tests for web apps and REST
APIs that run on multiple browsers without flaky failures. It's a nice,
modern alternative to Selenium WebDriver, and you can use Playwright in
plain-old Python!&lt;/p&gt;
&lt;p&gt;In this concise 10-minute quickstart, we'll learn how to configure a
Python project with Playwright and &lt;tt class="docutils literal"&gt;pytest&lt;/tt&gt;, automate a basic web
test, and run it against different browsers. You'll be able to add more
tests to our starter project on your own after the talk!&lt;/p&gt;
&lt;p&gt;Example code with full instructions can be found here: &lt;a class="reference external" href="https://github.com/AutomationPanda/playwright-python-tutorial"&gt;https://github.com/AutomationPanda/playwright-python-tutorial&lt;/a&gt;&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>Full-Stack Python with HTMX</title><link href="https://pyvideo.org/pyohio-2023/full-stack-python-with-htmx.html" rel="alternate"></link><published>2023-12-16T00:00:00+00:00</published><updated>2023-12-16T00:00:00+00:00</updated><author><name>Pandy Knight</name></author><id>tag:pyvideo.org,2023-12-16:/pyohio-2023/full-stack-python-with-htmx.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;These days, JavaScript dominates the front-end web ecosystem because it
is the primary language for the browser. That means you need to use
JavaScript for dynamic web page interactions, even if your backend is
written in a different language like Python. However, that's no longer
the case! Thanks to â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;These days, JavaScript dominates the front-end web ecosystem because it
is the primary language for the browser. That means you need to use
JavaScript for dynamic web page interactions, even if your backend is
written in a different language like Python. However, that's no longer
the case! Thanks to &lt;a class="reference external" href="https://htmx.org/"&gt;HTMX&lt;/a&gt;, we can develop dynamic
interactions directly in hypertext rather than in explicit JS code. In
this lightning talk, I'll show you how to create a &lt;a class="reference external" href="https://github.com/AutomationPanda/bulldoggy-reminders-app"&gt;full-stack Python
app&lt;/a&gt; with
FastAPI, HTMX, and a few other Python tools. You will learn how to build
modern web apps entirely in Python â€“ as well as how HTMX democratizes
front-end web development!&lt;/p&gt;
</content><category term="PyOhio 2023"></category></entry><entry><title>Lightning Talks (Day 1)</title><link href="https://pyvideo.org/pytexas-2024/lightning-talks-day-1.html" rel="alternate"></link><published>2024-04-20T00:00:00+00:00</published><updated>2024-04-20T00:00:00+00:00</updated><author><name>Pandy Knight</name></author><id>tag:pyvideo.org,2024-04-20:/pytexas-2024/lightning-talks-day-1.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are five minute talks on a variety of subjects.&lt;/p&gt;
</content><category term="PyTexas 2024"></category></entry><entry><title>Building a test framework from scratch (or not)!</title><link href="https://pyvideo.org/pytexas-2025/building-a-test-framework-from-scratch-or-not.html" rel="alternate"></link><published>2025-04-13T00:00:00+00:00</published><updated>2025-04-13T00:00:00+00:00</updated><author><name>Pandy Knight</name></author><id>tag:pyvideo.org,2025-04-13:/pytexas-2025/building-a-test-framework-from-scratch-or-not.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pytest is a fantastic test framework, but why use it when you can just build your own test framework from scratch? Sounds wild, right? Well, it is! In this talk, we will learn what testing in Python is all about by iteratively building features of a framework from the â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pytest is a fantastic test framework, but why use it when you can just build your own test framework from scratch? Sounds wild, right? Well, it is! In this talk, we will learn what testing in Python is all about by iteratively building features of a framework from the ground up. Through this, we will learn not just what goes into a test framework but why those features are there - the runner, the structure, the assertions, and more. We will develop a deep understanding of how test frameworks work and also how to write good tests with them. We will also gain immense appreciation for mature test frameworks like pytest that save our time by providing off-the-shelf testing features that deliver serious value.&lt;/p&gt;
</content><category term="PyTexas 2025"></category></entry><entry><title>Lighting Talks Day 1</title><link href="https://pyvideo.org/pytexas-2025/lighting-talks-day-1.html" rel="alternate"></link><published>2025-04-12T00:00:00+00:00</published><updated>2025-04-12T00:00:00+00:00</updated><author><name>Lynn Root</name></author><id>tag:pyvideo.org,2025-04-12:/pytexas-2025/lighting-talks-day-1.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lighting Talks Day 1&lt;/p&gt;
</content><category term="PyTexas 2025"></category></entry></feed>