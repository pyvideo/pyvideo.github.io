<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_internet-of-things.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-08-25T00:00:00+00:00</updated><entry><title>Build and hack your own IoT with MQTT</title><link href="https://pyvideo.org/kiwi-pycon-2019/build-and-hack-your-own-iot-with-mqtt.html" rel="alternate"></link><published>2019-08-25T00:00:00+00:00</published><updated>2019-08-25T00:00:00+00:00</updated><author><name>Agnetha Korevaar</name></author><id>tag:pyvideo.org,2019-08-25:kiwi-pycon-2019/build-and-hack-your-own-iot-with-mqtt.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Connecting the things in the Internet of Things (IoT) is hard. This talk will introduce MQTT - a messaging protocol which makes it easier to exchange information between disparate devices. You'll be equipped to build your own IoT system and hack it to find some of its weaknesses.&lt;/p&gt;
</summary><category term="iot"></category><category term="internet of things"></category><category term="MQTT"></category></entry><entry><title>Putting Things on the Internet</title><link href="https://pyvideo.org/pycon-israel-2017/putting-things-on-the-internet.html" rel="alternate"></link><published>2017-06-12T00:00:00+00:00</published><updated>2017-06-12T00:00:00+00:00</updated><author><name>Yuval Adam</name></author><id>tag:pyvideo.org,2017-06-12:pycon-israel-2017/putting-things-on-the-internet.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In a world where simply connecting random household appliances to the Internet is considered 'innovation', a counter-proposal must be presented. In this talk we explore the free-as-in-freedom technologies that enable developers to build real-life applications based on physical devices. Buzzwords will be harmed during this talk.&lt;/p&gt;
</summary><category term="internet of things"></category></entry><entry><title>402: Payment Required. Micropayments for IoT</title><link href="https://pyvideo.org/pycon-au-2016/402-payment-required-micropayments-for-iot.html" rel="alternate"></link><published>2016-08-12T00:00:00+00:00</published><updated>2016-08-12T00:00:00+00:00</updated><author><name>Mitchell O'Neill</name></author><id>tag:pyvideo.org,2016-08-12:pycon-au-2016/402-payment-required-micropayments-for-iot.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What if you could provide access to sensor data in exchange for small amounts of payment, or give your devices a stipend and they could autonomously engage in commerce with in a marketplace of machines? Payment solutions for microresources thus far have either required cumbersome aggregation, billing and centeralised metering or have been deemed too cheap to meter. We'll explore technology that could reduce this friction such as the bitcoin blockchain and open source python libraries that allow your devices to engage in micropayments in a fast, trustless and cheap manner.&lt;/p&gt;
</summary><category term="Internet-of-Things"></category><category term="Micro-Payments"></category></entry><entry><title>Controlling a 3D printer with Python</title><link href="https://pyvideo.org/pycon-au-2016/controlling-a-3d-printer-with-python.html" rel="alternate"></link><published>2016-08-12T00:00:00+00:00</published><updated>2016-08-12T00:00:00+00:00</updated><author><name>James Stewart</name></author><id>tag:pyvideo.org,2016-08-12:pycon-au-2016/controlling-a-3d-printer-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Additive manufacturing ('3D printing') has already proven to be a revolutionary technology in industries as diverse as medicine, architecture, industrial design and aerospace. At the same time affordable consumer-grade printers have put 3d printing increasingly within reach of the general public. However the user interfaces of most 3D printers still leave something to be desired. Interaction is generally performed via a monochrome LCD and jog dial. Network connectivity is often an afterthought with file transfers primarily performed via SD Card. OpenGB is an Open Source 3D printer control interface. It was developed in conjunction with re:3D as part of the Open Gigabot project but was designed to work on a variety of Open Source 3D printers. In this talk James Stewart will describe the OpenGB backend which is written in Python and acts as an intermediary between the network and the printer. Various technologies are employed including: Tornado, Websockets, JSONRPC, Multiprocessing &amp;amp; pySerial. As well as 3D printing enthusiasts, this talk will be of interest to anybody using Python to control a lower-level controller such as Arduino.&lt;/p&gt;
</summary><category term="Internet-of-Things"></category><category term="OpenGB"></category><category term="3D Printing"></category></entry><entry><title>ESP8266 and MicroPython</title><link href="https://pyvideo.org/pycon-au-2016/esp8266-and-micropython.html" rel="alternate"></link><published>2016-08-12T00:00:00+00:00</published><updated>2016-08-12T00:00:00+00:00</updated><author><name>Nick Moore</name></author><id>tag:pyvideo.org,2016-08-12:pycon-au-2016/esp8266-and-micropython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The ESP8266 is an exciting new WiFi enabled SoC which is not only small and fast but also very very cheap. And now it can run Python! This talk discusses the ins and outs of ESP8266 chips and modules, how to install MicroPython, and what you can do with it once you've installed it.&lt;/p&gt;
</summary><category term="Internet-of-Things"></category><category term="MicroPython"></category><category term="ESP8266"></category></entry><entry><title>GPS Tracking with Python</title><link href="https://pyvideo.org/pycon-au-2016/gps-tracking-with-python.html" rel="alternate"></link><published>2016-08-12T00:00:00+00:00</published><updated>2016-08-12T00:00:00+00:00</updated><author><name>Caleb Hattingh</name></author><id>tag:pyvideo.org,2016-08-12:pycon-au-2016/gps-tracking-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is very well-suited to implement GPS tracking services. Devices need to report position data to servers, and Python handles this role well, especially with the new support for asynchronous event loops in Python 3 which can handle tens of thousands of simultaneous connections. In addition, the struct module in the Python standard library makes short work of processing binary data supplied by devices. In addition to basic interaction with tracking devices, this talk will also present methods of integration (server) testing using py.test, as well as considerations regarding support for both UDP and TCP protocols in the same stack, since different GPS tracking devices may prefer one or the other.&lt;/p&gt;
</summary><category term="Internet-of-Things"></category><category term="GPS"></category></entry><entry><title>Internet of Things - Lightning Talks</title><link href="https://pyvideo.org/pycon-au-2016/iot-lightning-talks.html" rel="alternate"></link><published>2016-08-12T00:00:00+00:00</published><updated>2016-08-12T00:00:00+00:00</updated><author><name>Michael Wheeler</name></author><id>tag:pyvideo.org,2016-08-12:pycon-au-2016/iot-lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Internet of Things - Lightning Talks&lt;/p&gt;
</summary><category term="Internet-of-Things"></category><category term="lightning talks"></category></entry><entry><title>OpenBMC: Boot your server with Python</title><link href="https://pyvideo.org/pycon-au-2016/openbmc-boot-your-server-with-python.html" rel="alternate"></link><published>2016-08-12T00:00:00+00:00</published><updated>2016-08-12T00:00:00+00:00</updated><author><name>Joel Stanley</name></author><id>tag:pyvideo.org,2016-08-12:pycon-au-2016/openbmc-boot-your-server-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenBMC is an open source software project that replaces the Baseboard Management Controller firmware that is responsible for turning off and on, and managing the health of your server. The core of the software that performs these functions is implemented in Python, allowing easy to read, modify and debug firmware that is traditionally not accessible to a user. This talk will cover the architecture of the OpenBMC and demonstrate how easy it is to support a new server platform by writing a few lines of Python.&lt;/p&gt;
</summary><category term="Internet-of-Things"></category><category term="OpenBMC"></category></entry><entry><title>Scripting the Internet of Things</title><link href="https://pyvideo.org/pycon-au-2016/scripting-the-internet-of-things.html" rel="alternate"></link><published>2016-08-12T00:00:00+00:00</published><updated>2016-08-12T00:00:00+00:00</updated><author><name>Damien George</name></author><id>tag:pyvideo.org,2016-08-12:pycon-au-2016/scripting-the-internet-of-things.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A big part of the Internet of Things are the end nodes, such as sensors, that are controlled by microcontrollers or other small computing devices. These devices are getting more and more sophisticated and it can be beneficial to program them with a scripting language instead of a low-level language like C. Such scripting languages need to be implemented specifically to fit and run on a microcontroller and in this talk I will discuss a few of them: Python, Lua, JavaScript and Ruby. I will talk in detail about MicroPython, a lean and efficient reimplementation of Python 3 with a reduced standard library, that runs on microcontrollers and can be used to build Internet-of-Things devices. There will be plenty of time in the talk for questions and open discussion.&lt;/p&gt;
</summary><category term="Internet-of-Things"></category><category term="MicroPython"></category></entry><entry><title>The Internet of (Better) Things</title><link href="https://pyvideo.org/pycon-au-2016/the-internet-of-better-things.html" rel="alternate"></link><published>2016-08-12T00:00:00+00:00</published><updated>2016-08-12T00:00:00+00:00</updated><author><name>Nick Moore</name></author><id>tag:pyvideo.org,2016-08-12:pycon-au-2016/the-internet-of-better-things.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Internet of Things! Existential menace or meaningless buzzword? Automating away drudgery or just eroding privacy? Cornucopia or Panopticon? We'll look at the poor state of the current IoT in terms of security, privacy and interoperation. We'll consider a set of requirements for a better IoT. And we'll look at what we as Pythonistas can do to improve on this, as a community and an industry.&lt;/p&gt;
</summary><category term="Internet-of-Things"></category><category term="Security"></category><category term="Privacy"></category><category term="Interoperation"></category></entry><entry><title>Working with real-time data streams in Python</title><link href="https://pyvideo.org/pycon-au-2016/working-with-real-time-data-streams-in-python.html" rel="alternate"></link><published>2016-08-12T00:00:00+00:00</published><updated>2016-08-12T00:00:00+00:00</updated><author><name>Lachlan Blackhall</name></author><id>tag:pyvideo.org,2016-08-12:pycon-au-2016/working-with-real-time-data-streams-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An increasing number of devices and applications are producing vast amounts of data in real time. This can include measurements, sensor readings, and performance data. Making this data useful often requires that we analyse and use the data in real time but this requires techniques to aggregate, filter, and smooth the data. Drawing on simple and well-tested techniques from mathematics and engineering allows us to solve these problems quickly and efficiently. This talk will describe how Python can be used to develop powerful capabilities for working with real-time data streams and provide simple examples you can start using yourself.&lt;/p&gt;
</summary><category term="Internet-of-Things"></category><category term="Data"></category><category term="Real-time"></category><category term="Kalman Filter"></category></entry><entry><title>Die Dinge im Internet der Dinge mit Python verbinden...</title><link href="https://pyvideo.org/pycon-de-2013/die-dinge-im-internet-der-dinge-mit-python-verbin.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Andreas Schreiber</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/die-dinge-im-internet-der-dinge-mit-python-verbin.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Das Internet der Dinge besteht aus kleinen, manchmal intelligenten,
Geräten und Sensoren, die über das Internet verbunden sind. Typische
Sensoren sind Wettermessgeräte oder medizinische Geräte. Das Internet
der Dinge wird nun bald real da sein, was durch günstige kleine
Einplatinencomputer wie Raspberry Pi oder Arduino mit beeinflusst wird.
Allerdings haben diese Geräte nicht viel Rechenleistung. Außerdem sind
sie in machen Umgebungen auch nur mit eingeschränkter Netzwerkbandbreite
angebunden. Um nun (viele) solche Geräte zu verbinden und Daten
austauschen zu lassen sind sehr leichtgewichtige Protokolle und
Implementierungen notwendig.&lt;/p&gt;
&lt;p&gt;Der Vortrag ist über das Protokoll &lt;a class="reference external" href="http://mqtt.org/"&gt;Message Queuing Telemetry
Transport&lt;/a&gt; (MQTT), ein sehr geeignetes Protokoll
zum Verbinden kleiner Geräte und Sensoren. MQTT basiert auf einer
Publish/Subscribe-Architektur. Es eignet sich gut zum Schicken von Daten
von Sensoren zu anderen Geräten. Zum Beispiel lassen sich
Temperaturmesswerte von einem Temperaturfühler ohne viel Overhead zu
einem Server schicken oder zu einem Smartphone als Push-Nachricht
übermitteln. Ein andere Anwendung von MQTT sind Chat-Systeme, z.B. ist
das &lt;a class="reference external" href="https://www.facebook.com/messages/"&gt;Facebook-Messaging&lt;/a&gt; auf
Basis von MQTT implementiert.&lt;/p&gt;
&lt;p&gt;In dem Vortrag geht es vor allem um Open-Source-Implementierungen von
MQTT. Speziell wird der freie MQTT-Broker
&lt;a class="reference external" href="http://mosquitto.org/"&gt;Mosquitto&lt;/a&gt; und dessen
Python-Client-Bibliothek vorgestellt. Mosquitto ist eine
leichtgewichtige Implementierung die effizient auf günstigen
Einplatinenrechnern oder Smartphones läuft. An ein paar Bespielen in
Python wird im Vortrag verdeutlicht wie leicht sich Anwendungen auf
Basis von MQTT realisieren lassen: Die Übertragung von
Temperaturmesswerten per Raspberry Pi zu einem Server, das Senden von
Push-Nachrichten zu Android-Smartphones und das Senden von Smartphones
aus einer Kivy-App heraus.&lt;/p&gt;
</summary><category term="internet of things"></category><category term="mqtt"></category><category term="quantified self"></category><category term="raspberry pi"></category><category term="temperaturmessung"></category></entry></feed>