<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_tuning.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2011-03-11T00:00:00+00:00</updated><entry><title>First steps in performance tuning</title><link href="https://pyvideo.org/djangocon-us-2010/djangocon-2010--first-steps-in-performance-tuning.html" rel="alternate"></link><published>2010-09-08T00:00:00+00:00</published><updated>2010-09-08T00:00:00+00:00</updated><author><name>Russell Keith-Magee</name></author><id>tag:pyvideo.org,2010-09-08:djangocon-us-2010/djangocon-2010--first-steps-in-performance-tuning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So you've built your first Django website. You've tested it, you've
released it, you've got a few customers... and a few more... and a few
more... and now you're having performance problems. What do you do? This
talk will look at some performance problems you may experience, and show
some simple (and creative) ways to squeeze the most out of your server
hardware.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The talk is especially aimed at web developers that haven't got a
background in computing, but nonetheless have fallen into a web
development role. Topics will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How to work out that you have a problem&lt;/li&gt;
&lt;li&gt;Getting computation out of the request/response loop&lt;/li&gt;
&lt;li&gt;Caching -- when, how, and problems that caching introduces&lt;/li&gt;
&lt;li&gt;Setting up a webserver to avoid deadlocks&lt;/li&gt;
&lt;li&gt;Likely causes (and solutions) of database bottlenecks&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="djangocon"></category><category term="djangocon2010"></category><category term="performance"></category><category term="tuning"></category></entry><entry><title>Swarming the Web: Evolving the Perfect Config File</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--swarming-the-web--evolving-the-perfec.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Kurt Grandis</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--swarming-the-web--evolving-the-perfec.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Swarming the Web: Evolving the Perfect Config File&lt;/p&gt;
&lt;p&gt;Presented by Kurt Grandis&lt;/p&gt;
&lt;p&gt;Deployed web applications are typically run on top of stacks of highly
configurable middleware. The number of tunable parameters and their
impact are rarely fully explored. Using SciPy and a set of common
Python-based web tools this session will present a new method of
automatically tuning a typical LAMP stack for optimal performance.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Deployed web applications typically run on top of stacks of configurable
technology (e.g. web servers, interface modules, software load
balancers, databases). Each of these components often has dozens of
tuneable parameters. How many times are those values typically tweaked
before a final set of tuned parameters are settled on? What criteria are
typically used to determine the optimal set?&lt;/p&gt;
&lt;p&gt;This session presents a new method of automatically tuning a common LAMP
stack for optimal performance. We explore a solution using some common
Python-based automated deployment and load testing tools and dive into
scientific computing with SciPy.&lt;/p&gt;
</summary><category term="lamp"></category><category term="pycon"></category><category term="pycon2011"></category><category term="scipy"></category><category term="tuning"></category><category term="webapps"></category></entry></feed>