<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_matt-makai.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-04-12T00:00:00+00:00</updated><entry><title>Making Django Play Nice with Third Party Services</title><link href="https://pyvideo.org/djangocon-us-2013/making-django-play-nice-with-third-party-services.html" rel="alternate"></link><published>2013-10-01T00:00:00+00:00</published><updated>2013-10-01T00:00:00+00:00</updated><author><name>Matt Makai</name></author><id>tag:pyvideo.org,2013-10-01:djangocon-us-2013/making-django-play-nice-with-third-party-services.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;MAKING DJANGO PLAY NICE WITH THIRD PARTY SERVICES&lt;/p&gt;
&lt;p&gt;Thursday 10 a.m.--10:45 a.m.&lt;/p&gt;
&lt;p&gt;Audience level: Intermediate&lt;/p&gt;
&lt;p&gt;DESCRIPTION Modern Django projects combine custom apps with third party
services, such as Twilio and Stripe, to create a complete product.
Choosing the right services for your application can make or break its
usefulness to users as well as your sanity during maintenance. This talk
will show you how to properly evaluate, integrate, and maximize what you
get out of SaaS products in your Django projects.&lt;/p&gt;
&lt;p&gt;ABSTRACT THE FOUR STEPS: IDENTIFY, EVALUATE, INTEGRATE, AND MAINTAIN
Identify&lt;/p&gt;
&lt;p&gt;What problem needs to be solved? Finding services and their competitors
Cost model fit - are they successful when you're successful? Identify
Checklist Evaluate&lt;/p&gt;
&lt;p&gt;Instructions and walkthroughs - Stripe example Their platform technology
- Twilio example Open source community and dev team responsiveness -
Urban Airship example Long term viability and future service plans -
Intercom.io example Evaluation checklist Integrate&lt;/p&gt;
&lt;p&gt;Settings best practices, environment variables (SECRET_KEY) Test versus
production (functional testing) Limiting coupling (code examples) When
it breaks, how will you break? Integration checklist Maintain&lt;/p&gt;
&lt;p&gt;Keeping up with security updates Regression testing Maintenance
checklist Conclude&lt;/p&gt;
&lt;p&gt;Combined Four Steps Checklist Review Takeaway story: SimpleGeo&lt;/p&gt;
</summary></entry><entry><title>Choose Your Own Django Deployment Adventure</title><link href="https://pyvideo.org/djangocon-us-2014/choose-your-own-django-deployment-adventure.html" rel="alternate"></link><published>2014-09-19T00:00:00+00:00</published><updated>2014-09-19T00:00:00+00:00</updated><author><name>Kate Heddleston</name></author><id>tag:pyvideo.org,2014-09-19:djangocon-us-2014/choose-your-own-django-deployment-adventure.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;From WSGI servers and reverse proxies to continuous integration and
automated configuration management, the Django deployment environment is
a complicated collection of tools for developers new to the framework.
This talk explains the most confusing Django deployment topics as chosen
by the audience in real-time via text message votes. Bring your phone to
participate!&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/FPWh/"&gt;http://amara.org/v/FPWh/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>How to Solve Django's Top 5 Enterprise Headaches</title><link href="https://pyvideo.org/djangocon-us-2014/how-to-solve-djangos-top-5-enterprise-headaches.html" rel="alternate"></link><published>2014-09-16T00:00:00+00:00</published><updated>2014-09-16T00:00:00+00:00</updated><author><name>Matt Makai</name></author><id>tag:pyvideo.org,2014-09-16:djangocon-us-2014/how-to-solve-djangos-top-5-enterprise-headaches.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The top five Django problems in large enterprise organizations are
integrating with Active Directory, passing security audits, transferring
data from legacy systems, installing packages from PyPI through proxy
servers and combating misperceptions around dynamically typed
programming languages. We'll solve these problems with code and
resources to back up arguments to enterprise stakeholders.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/FOPZ/"&gt;http://amara.org/v/FOPZ/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Full Stack Python</title><link href="https://pyvideo.org/europython-2014/full-stack-python.html" rel="alternate"></link><published>2014-07-22T00:00:00+00:00</published><updated>2014-07-22T00:00:00+00:00</updated><author><name>Matt Makai</name></author><id>tag:pyvideo.org,2014-07-22:europython-2014/full-stack-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;There has been a lot of noise about being a &amp;quot;full stack developer&amp;quot;
recently. What does the full web stack look like for Python and how do
you go about learning each piece?&lt;/p&gt;
&lt;p&gt;This talk will guide you up the layers from the server that handles the
web request through the JavaScript that executes on a user's browser.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk distills information from the open source guide &lt;a class="reference external" href="http://www.fullstackpython.com/"&gt;Full Stack
Python&lt;/a&gt; I wrote into a 30 minute
talk on web stack layers. An approximate timeline for this talk would
be:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;5 min: intro story&lt;/li&gt;
&lt;li&gt;5 min: what the web developers need to know about virtual servers,
web servers, and WSGI servers&lt;/li&gt;
&lt;li&gt;5 min: what do web frameworks provide?&lt;/li&gt;
&lt;li&gt;5 min: what are the most important parts of your web application to
analyze and monitor?&lt;/li&gt;
&lt;li&gt;5 min: static files and execution on the user's browser&lt;/li&gt;
&lt;li&gt;5 min: concluding story and resources to learn more&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a high level overview intended for developers who are new to
Python web development and need to understand what the web stack layers
are and how they fit together.&lt;/p&gt;
</summary></entry><entry><title>Choose Your Own WSGI Deployment Adventure</title><link href="https://pyvideo.org/pycon-us-2015/choose-your-own-wsgi-deployment-adventure.html" rel="alternate"></link><published>2015-04-12T00:00:00+00:00</published><updated>2015-04-12T00:00:00+00:00</updated><author><name>Kate Heddleston</name></author><id>tag:pyvideo.org,2015-04-12:pycon-us-2015/choose-your-own-wsgi-deployment-adventure.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From servers and proxies to configuration management, the Web Server
Gateway Interface (WSGI) deployment ecosystem is complicated for new
developers. This choose your own adventure talk contains decision points
for the audience to choose topics via text and email votes. Each choice
leads down a separate path to explain different confusing WSGI subjects.
Bring your phone or laptop to participate!&lt;/p&gt;
</summary></entry><entry><title>Don't Make Us Say We Told You So: virtualenv for New Pythonistas</title><link href="https://pyvideo.org/pycon-us-2015/dont-make-us-say-we-told-you-so-virtualenv-for.html" rel="alternate"></link><published>2015-04-11T00:00:00+00:00</published><updated>2015-04-11T00:00:00+00:00</updated><author><name>Matt Makai</name></author><id>tag:pyvideo.org,2015-04-11:pycon-us-2015/dont-make-us-say-we-told-you-so-virtualenv-for.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Even though itâ€™s possible to program without using virtual environments,
you can shoot yourself in the foot without them. This talk will start
with an illustration of how not using virtual environments can mess you
up as a programmer, and will walk you through a simple way to get
started with good habits using virtualenv.&lt;/p&gt;
</summary></entry></feed>