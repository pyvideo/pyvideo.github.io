<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Human-Machine-Interaction</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 23 Jul 2020 00:00:00 +0000</lastBuildDate><item><title>Attractive GUIs with PySimpleGUI</title><link>https://pyvideo.org/europython-2020/attractive-guis-with-pysimplegui.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With PySimpleGUI everyone can build powerful GUI applications without a steep learning curve.&lt;/p&gt;
&lt;p&gt;In the Python landscape, there are several high-end GUI packages. Of course, there’s tkinter which is part of the standard library. And there is wxPython and several versions of Qt. What they share is that they are very flexible but not only have a steep learning curve but also take considerable development effort to realize even a simple user interface.
At the other of the spectrum, there are several design tools that either generate code of a layout structure. In many cases, the functionality is rather limited, though.
Relatively recent, an independent open-source developer (not me) has made a product that tries to bridge the gap between these two worlds: PySimpleGUI. This package runs on top of tkinter, QT for Windows, wxPython and Remi.
In this talk, I want to show the design methodology behind this fascinating product that might change the way people look at GUIs.
I will start with live coding a simple yet not evident program that shows the basic concepts. With this, I will demonstrate the design philosophy.
PySimpleGUI can also be used to implement a user-friendly interface as opposed to command-line interfaces.
From there, I will give an overview of some more elements present in this package.
Finally, I will show a full-featured GUI program with several bells and whistles.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ruud van der Ham</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/attractive-guis-with-pysimplegui.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>General</category><category>Human-Machine-Interaction</category><category>python</category></item><item><title>Building smarter solutions with no expertise in machine learning</title><link>https://pyvideo.org/europython-2020/building-smarter-solutions-with-no-expertise-in-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ML? API? AutoML? Python is the language of choice to solve problems with machine learning, but what can we build in only a few hours or days and without any expertise? In this session, we'll see how to benefit from existing ML models and how to create a custom model with AutoML techniques. We’ll also be active players of a live demo, so don't put your smartphone on airplane mode!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Laurent PICARD</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/building-smarter-solutions-with-no-expertise-in-machine-learning.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Computer Vision</category><category>Human-Machine-Interaction</category><category>Machine-Learning</category><category>Natural Language Processing</category><category>Public Cloud (AWS/Google/...)</category></item></channel></rss>