<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_frank-j-wierzbicki.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2011-03-11T00:00:00+00:00</updated><entry><title>Extending Java Applications with Jython (#65)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--extending-java-applications-with-jyth.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Frank J Wierzbicki</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--extending-java-applications-with-jyth.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Extending Java Applications with Jython&lt;/p&gt;
&lt;p&gt;Presented by Frank J Wierzbicki (Jython)&lt;/p&gt;
&lt;p&gt;Jython is an implementation of Python for the JVM. This talk covers the
options available for integrating Jython and Java code, especially Java
calling into Jython, since this is the trickier case. This talk will
also cover some Java specific deployment options, such as deploying your
Jython application as a jar file. Jar files allow you to package
Java/Jython applications into a single archive. In many environments a
user can click on a jar file to launch the contained application.&lt;/p&gt;
</summary><category term="jython"></category><category term="pycon"></category><category term="pycon2010"></category></entry><entry><title>Panel: Python VMs</title><link href="https://pyvideo.org/pycon-us-2011/panel-python-vms.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Brett Cannon</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/panel-python-vms.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Panel: Python VMs&lt;/p&gt;
&lt;p&gt;Presented by Jacob Kaplan-Moss, Brett Cannon, Maciej Fijalkowski, Frank
Wierzbicki, Dino Viehland&lt;/p&gt;
&lt;p&gt;Python is lucky enough to have a healthy ecosystem of virtual machines
(VMs) exist. CPython, Jython, IronPython, and PyPy are all used
extensively by people in real-world situations. This panel brings
together a representative from each of the major VMs to discuss where
they are now, going in the future, and to answer questions from the
community.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;All four major Python VMs will be represented:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://python.org/"&gt;CPython&lt;/a&gt;: Brett Cannon&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.jython.org/"&gt;Jython&lt;/a&gt;: Frank Wierzbicki&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ironpython.net/"&gt;IronPython&lt;/a&gt;: Dino Viehland&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pypy.org/"&gt;PyPy&lt;/a&gt;: Maciej Fijalkowski Moderation will be
handled by Jacob Kaplan-Moss of Django.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="cpython"></category><category term="ironpython"></category><category term="jython"></category><category term="pycon"></category><category term="pycon2011"></category><category term="pypy"></category></entry></feed>