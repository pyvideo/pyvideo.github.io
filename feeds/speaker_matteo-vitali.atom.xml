<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Matteo Vitali</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_matteo-vitali.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-06-03T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Come sfruttare le session auth di Django per un progetto multi tenant</title><link href="https://pyvideo.org/pycon-italia-2022/come-sfruttare-le-session-auth-di-django-per-un-progetto-multi-tenant.html" rel="alternate"></link><published>2022-06-03T00:00:00+00:00</published><updated>2022-06-03T00:00:00+00:00</updated><author><name>Matteo Vitali</name></author><id>tag:pyvideo.org,2022-06-03:/pycon-italia-2022/come-sfruttare-le-session-auth-di-django-per-un-progetto-multi-tenant.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Come sfruttare le potenzialità della session auth di Django in un
progetto multi tenant - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Descriverò l’approccio e il metodo di implementazione di un’app multi
tenant in Django, nella quale viene sfruttata la session auth di Django
per recuperare il tenant che domina ogni risorsa …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Come sfruttare le potenzialità della session auth di Django in un
progetto multi tenant - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Descriverò l’approccio e il metodo di implementazione di un’app multi
tenant in Django, nella quale viene sfruttata la session auth di Django
per recuperare il tenant che domina ogni risorsa richiesta dietro
autenticazione. Una soluzione a cui la letteratura sul tema non fa
solitamente riferimento. La “letteratura” sull’argomento multi tenant è
abbastanza varia a approfondita e come del resto lo sono anche i metodi
e gli approcci alla gestione a tenant multipli. In questo talk verrà
descritto, attraverso alcuni esempi, il metodo adottato per la gestione
di un’app backend in Django, con gestione di tenant multipli e
interfacciabile, dietro autenticazione, tramite chiamate API RESTful.
Adottando la session authentication di Django, verrà mostrato come sia
possibile renderla depositaria del tenant che domina tutte le risorse
richieste, per poter filtrarle dinamicamente sulla base dei dati
depositati nella sessione di autenticazione di un utente.&lt;/p&gt;
&lt;p&gt;Speaker: Matteo Vitali&lt;/p&gt;
</content><category term="PyCon Italia 2022"></category><category term="apis"></category><category term="authentication"></category><category term="django"></category><category term="rest"></category></entry></feed>