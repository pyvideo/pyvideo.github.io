<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 27 Jul 2018 00:00:00 +0000</lastBuildDate><item><title>Domain-Driven Design Patterns in Python</title><link>https://pyvideo.org/europython-2018/domain-driven-design-patterns-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Domain-Driven Design (DDD) is an approach to software development that
emphasises high-fidelity modelling of the problem domain, and which uses
a software implementation of the domain model as a foundation for system
design. This approach helps organize and minimize the essential
complexity of your software. DDD has been used with success within the
traditional enterprise programming ecosystems of Java and .NET, but has
seen only limited adoption in the Python community.&lt;/p&gt;
&lt;p&gt;In this talk we introduce Python programmers to the core tactical
patterns of DDD and show how they can be realised in idiomatic Python,
freeing the most valuable parts of your system – the domain model – from
onerous dependencies on particular databases or application frameworks.&lt;/p&gt;
&lt;p&gt;In this talk we share what we’ve learned from applying DDD in Python to
large projects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Smallshire</dc:creator><pubDate>Fri, 27 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-27:europython-2018/domain-driven-design-patterns-in-python.html</guid></item></channel></rss>