<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_bottlenecks.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-08-22T00:00:00+00:00</updated><entry><title>Stop Tilting at Windmills - Spotting Bottlenecks</title><link href="https://pyvideo.org/djangocon-us-2011/stop-tilting-at-windmills-spotting-bottlenecks.html" rel="alternate"></link><published>2011-09-05T00:00:00+00:00</published><updated>2011-09-05T00:00:00+00:00</updated><author><name>Brandon Konkle</name></author><id>tag:pyvideo.org,2011-09-05:djangocon-us-2011/stop-tilting-at-windmills-spotting-bottlenecks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Stop Tilting at Windmills--Spotting Bottlenecks&lt;/p&gt;
&lt;p&gt;Presented by Yann Malet and Brandon Konkle&lt;/p&gt;
&lt;p&gt;Learn the questions to ask and the tools to use to spot performance
problems in your application. We won't tell you how to scale your site,
but we will show you how to locate the bottlenecks as they pop up.&lt;/p&gt;
</summary><category term="bottlenecks"></category><category term="djangocon"></category><category term="djangocon2011"></category></entry><entry><title>Web Server Bottlenecks And Performance Tuning</title><link href="https://pyvideo.org/pycon-au-2012/web-server-bottlenecks-and-performance-tuning-0.html" rel="alternate"></link><published>2012-08-22T00:00:00+00:00</published><updated>2012-08-22T00:00:00+00:00</updated><author><name>Graham Dumpleton</name></author><id>tag:pyvideo.org,2012-08-22:pycon-au-2012/web-server-bottlenecks-and-performance-tuning-0.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A benchmark of a hello world application is often what developers use to
make the all important decision of what web hosting infrastructure they
use. Worse is that in many cases this is the only sort of performance
testing or monitor&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A benchmark of a hello world application is often what developers use to
make the all important decision of what web hosting infrastructure they
use. Worse is that in many cases this is the only sort of performance
testing or monitoring they will ever do. When it comes to their
production applications they are usually flying blind and have no idea
of how it is performing and what they need to do to tune their web
application stack.&lt;/p&gt;
&lt;p&gt;This talk will provide an overview as to where in your overall request
handling pipeline the main overheads are going to arise. It will then
zoom in and discuss different limiting factors or bottlenecks which can
arise within your WSGI server stack and system that can directly affect
the performance of your Python web application.&lt;/p&gt;
&lt;p&gt;Such factors that will be discussed will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use of threads vs processes.&lt;/li&gt;
&lt;li&gt;Number of processors available.&lt;/li&gt;
&lt;li&gt;Python global interpreter lock (GIL)&lt;/li&gt;
&lt;li&gt;Amount of memory available.&lt;/li&gt;
&lt;li&gt;Slow HTTP browsers/clients.&lt;/li&gt;
&lt;li&gt;Browser keep alive connections.&lt;/li&gt;
&lt;li&gt;Need to handle static assets.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From this will be provided some general guidelines of what is a good
configuration/architecture to use for different types of Python web
applications.&lt;/p&gt;
&lt;p&gt;The importance of continuous production monitoring will also be covered,
ensuring that you know when the performance of your system is dropping
off due to changing traffic patterns as well as code changes you have
made in your actual web application.&lt;/p&gt;
</summary><category term="bottlenecks"></category><category term="performance"></category></entry></feed>