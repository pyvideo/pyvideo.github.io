<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_igor-davydenko.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-10-03T00:00:00+00:00</updated><entry><title>How I migrate from REST API to GraphQL</title><link href="https://pyvideo.org/odessapy-2018/how-i-migrate-from-rest-api-to-graphql.html" rel="alternate"></link><published>2018-09-30T00:00:00+00:00</published><updated>2018-09-30T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2018-09-30:odessapy-2018/how-i-migrate-from-rest-api-to-graphql.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hype around GraphQL now bigger than ever and I want to talk about it. How's easy to migrate from REST API to GraphQL, especially if you are Django developer? What you need to know to succeed? GraphQL in production is not a myth, and there are libraries to make it easy in Python world. Let's talk about them and path to migrate from Django REST Framework to Django + Graphene. Also I will talk why the migration will benefit frontend developers as well.&lt;/p&gt;
</summary><category term="graphql"></category></entry><entry><title>How to make your own CI/CD tool with Python 3</title><link href="https://pyvideo.org/pycon-estonia-2019/how-to-make-your-own-cicd-tool-with-python-3.html" rel="alternate"></link><published>2019-10-03T00:00:00+00:00</published><updated>2019-10-03T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2019-10-03:pycon-estonia-2019/how-to-make-your-own-cicd-tool-with-python-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Igor is a web developer from Kyiv, Ukraine, who advocates for using type hints in Python and loves to create web applications. In asyncio I trust.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Get tickets for PyCon Estonia 2020 - &lt;a class="reference external" href="https://bit.ly/pycon2020"&gt;https://bit.ly/pycon2020&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python is nearing 3 decades in existence (yes, kinda hard to believe). Where do we go from here? We have the same question, hence PyCon 2019 will be a peek into the future of Python. Come, hang out with an inspired crowd, have rich, direct conversations and who knows, maybe you’ll even find an answer.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pycon.ee"&gt;https://pycon.ee&lt;/a&gt;
&lt;a class="reference external" href="https://twitter.com/PyConEstonia"&gt;https://twitter.com/PyConEstonia&lt;/a&gt;
&lt;a class="reference external" href="https://www.facebook.com/events/vaba-lava/pycon-estonia-2019/318811955508926/"&gt;https://www.facebook.com/events/vaba-lava/pycon-estonia-2019/318811955508926/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>How type annotations make your code better</title><link href="https://pyvideo.org/pycon-de-2018/how-type-annotations-make-your-code-better.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/how-type-annotations-make-your-code-better.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Type annotations still not received that amount of popularity, that
should. People still finding them hard and sometimes ambiguous to use.
But if you start new project in Python in 2018 you should consider using
type annotations in your code and this short talk describes why.&lt;/p&gt;
&lt;p&gt;I'll go over examples, where type annotations helped my team to create
less complex code, and how using type annotations changing your mind for
projecting &amp;amp; implementing features for your project.&lt;/p&gt;
</summary><category term="Infrastructure"></category><category term="Web"></category></entry><entry><title>Is asyncio stack ready for web development?</title><link href="https://pyvideo.org/pycon-cz-2018/is-asyncio-stack-ready-for-web-development.html" rel="alternate"></link><published>2018-06-03T00:00:00+00:00</published><updated>2018-06-03T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2018-06-03:pycon-cz-2018/is-asyncio-stack-ready-for-web-development.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you're developing web applications with Python you might have heard about asyncio stack (Python 3, asyncio, aiohttp, uvloop, etc.). It allows developers to create websites without using Django, Flask or other synchronous web frameworks.&lt;/p&gt;
&lt;p&gt;Let's talk about why asyncio stack became popular for web development among Pythonistas, especially in Eastern Europe (Ukraine, Russia, etc). I will tell you about projects that are using it and how they compare to more traditional ones.&lt;/p&gt;
&lt;p&gt;I will also talk about lessons learned from developing, testing and deploying application used to sign legal documents online in Ukraine: aiohttp.&lt;/p&gt;
</summary></entry><entry><title>Oh my py or Type annotations in Python, Игор Давыденко</title><link href="https://pyvideo.org/kyivpy/oh-my-py-or-type-annotations-in-python-igor-davydenko.html" rel="alternate"></link><published>2016-12-03T00:00:00+00:00</published><updated>2016-12-03T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2016-12-03:kyivpy/oh-my-py-or-type-annotations-in-python-igor-davydenko.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kyiv.py #19&lt;/p&gt;
&lt;p&gt;Overview of type annotations in Python, when to use them, why and what the benefits.&lt;/p&gt;
</summary></entry><entry><title>Python and React.js live coding session</title><link href="https://pyvideo.org/kyivpy/python-and-reactjs-live-coding-session.html" rel="alternate"></link><published>2015-04-25T00:00:00+00:00</published><updated>2015-04-25T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2015-04-25:kyivpy/python-and-reactjs-live-coding-session.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Igor Davydenko - Python and React.js live coding session&lt;/p&gt;
</summary></entry><entry><title>In Flask we Trust</title><link href="https://pyvideo.org/pycon-ukraine-2012/in-flask-we-trust.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/in-flask-we-trust.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;Flask is not a new Django&lt;/li&gt;
&lt;li&gt;Requests and responses&lt;/li&gt;
&lt;li&gt;More about contexts and proxies&lt;/li&gt;
&lt;li&gt;Signed sessions&lt;/li&gt;
&lt;li&gt;All truth about applications and blueprints&lt;/li&gt;
&lt;li&gt;Multiple applications and multiple blueprints&lt;/li&gt;
&lt;li&gt;Extensions&lt;/li&gt;
&lt;li&gt;List of extensions you should know&lt;/li&gt;
&lt;li&gt;Deployment&lt;/li&gt;
&lt;li&gt;Is it fast? Compare with other Python frameworks&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Lightning talk - Learn Python</title><link href="https://pyvideo.org/pycon-ukraine-2012/lightning-talk-learn-python.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/lightning-talk-learn-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PYCON 2012. Lightning Talks. Igor Davydenko&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Circle CI or: How I learned to stop worrying and love CI again</title><link href="https://pyvideo.org/pycon-ukraine-2016/circle-ci-or-how-i-learned-to-stop-worrying-and-love-ci-again.html" rel="alternate"></link><published>2016-04-23T00:00:00+00:00</published><updated>2016-04-23T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2016-04-23:pycon-ukraine-2016/circle-ci-or-how-i-learned-to-stop-worrying-and-love-ci-again.html</id><summary type="html"></summary></entry><entry><title>Why Python 3.6 is faster than Python 3.5?</title><link href="https://pyvideo.org/pycon-belarus-2017/why-python-36-is-faster-than-python-35.html" rel="alternate"></link><published>2017-02-04T00:00:00+00:00</published><updated>2017-02-04T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2017-02-04:pycon-belarus-2017/why-python-36-is-faster-than-python-35.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Detailed review of changes &amp;amp; optimizations in Python 3.6, which
increased performance compared to Python 3.5 code. With examples and
explanations.&lt;/p&gt;
</summary></entry><entry><title>Welcome to async/await era</title><link href="https://pyvideo.org/pycon-finland-2015/welcome-to-asyncawait-era.html" rel="alternate"></link><published>2015-10-19T00:00:00+00:00</published><updated>2015-10-19T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2015-10-19:pycon-finland-2015/welcome-to-asyncawait-era.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyCon Finland 2015
Igor Davydenko - Welcome to async/await era&lt;/p&gt;
&lt;p&gt;PEP492 accepted and Python 3.5 will have new async/await statements. Talk will introduce them to the audience and shows examples on how to and when to use.&lt;/p&gt;
&lt;p&gt;Talk also covers how async/await helps to write better and clear asyncio web applications on top of aiohttp library and shows common patterns to use, while making backend applications on Python 3.5.&lt;/p&gt;
&lt;p&gt;About the author:  Python &amp;amp; React.js developer from Kyiv, Ukraine. Love creating API for humans, open source libraries, and giving talks about the process. In Python 3 &amp;amp; asyncio I trust.&lt;/p&gt;
</summary></entry><entry><title>Asyncio Stack &amp; React.js or Development on the Edge</title><link href="https://pyvideo.org/europython-2015/asyncio-stack-reactjs-or-development-on-the-edge.html" rel="alternate"></link><published>2015-08-03T00:00:00+00:00</published><updated>2015-08-03T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2015-08-03:europython-2015/asyncio-stack-reactjs-or-development-on-the-edge.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Igor Davydenko - Asyncio Stack &amp;amp; React.js or Development on the Edge
[EuroPython 2015]
[20 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;Times changed, with introducing asyncio to Python standard library
many and many developers think about switching from previous solutions
to aio stack. Talk will introduce aiohttp, aioredis &amp;amp; aiopg -
cornerstones for building modern Python backends and show common
problems &amp;amp; solutions while switching to aio stack.&lt;/p&gt;
&lt;p&gt;But not only Python changed. In second part, I'll talk about what new
happened in frontend development, how new ES6 features modified
JavaScript, and what React.js &amp;amp; Flux means for Python developers.&lt;/p&gt;
&lt;p&gt;Talk will cover real-world web application, which used aio stack on
backend and React.js &amp;amp; Flux approach on frontend and provide useful
observations for other developers interested in these topics.&lt;/p&gt;
</summary></entry></feed>