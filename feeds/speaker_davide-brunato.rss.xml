<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Davide Brunato</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 03 Jun 2022 00:00:00 +0000</lastBuildDate><item><title>Validazione e decodifica di file XML con Python</title><link>https://pyvideo.org/pycon-italia-2017/validazione-e-decodifica-di-file-xml-con-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Per la schematizzazione di documenti XML sono disponibili diversi
standard, tra questi XML Schema. La prima problematica è quella di poter
validare file XML secondo il loro rispettivo schema. Un’altra esigenza è
la conversione dell’XML in strutture dati in cui siano valorizzati i
tipi base definiti nello schema e la struttura nidificata in cui sono
inseriti, similmente a quello che è già reso disponibile per JSON.&lt;/p&gt;
&lt;p&gt;In ambito scientifico, nell’ambito delle attività del progetto europeo
MaX (Materials design at the Exascale), per semplificare l’interscambio
di dati dati XML tra diversi software di simulazione, si è deciso di
adottare un approccio unitario e sistematico alla validazione e alla
decodifica dei dati XML prodotti.&lt;/p&gt;
&lt;p&gt;Pertanto è in fase di sviluppo una nuova libreria (xmlschema), basata
sulla libreria standard ElementTree di Python, che permette di validare
e decodificare dati XML con schemi XSD. La decodifica di un documento
XML produce un dizionario nidificato con i valori terminali appartenenti
ai corrispondenti tipi elementari.&lt;/p&gt;
&lt;p&gt;Nella presentazione parlerei delle problematiche degli schemi XSD,
dell’ambito scientifico in cui è stata sviluppata la libreria e della
struttura della libreria stessa, illustrando e magari raccogliendo
qualche idea per migliorarla.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Davide Brunato</dc:creator><pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-08:/pycon-italia-2017/validazione-e-decodifica-di-file-xml-con-python.html</guid><category>PyCon Italia 2017</category><category>xml</category><category>mathematical-modelling</category><category>encoding</category><category>Python</category><category>simulation</category><category>validation</category><category>physics</category><category>metadata</category></item><item><title>Il rasoio dei generatori di Python per semplificare il codice e ridurre l'uso di memoria</title><link>https://pyvideo.org/pycon-italia-2018/il-rasoio-dei-generatori-di-python-per-semplificare-il-codice-e-ridurre-luso-di-memoria.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I generatori sono una delle caratteristiche più avanzate di Python ma
anche meglio integrate con le altre parti del linguaggio e con una
sintassi molto simile ad altri costrutti. In particolare Python 3 fa un
utilizzo più esteso dei iteratori anche nelle funzioni base e semplifica
ulteriormente l’uso dei generatori. In questa presentazione illustrerei
il funzionamento delle funzioni generatrici e dei generatori partendo
dalle basi dell’iterazione. Analizzerei inoltre i vantaggi che i
generatori possono portare nella semplificazione del codice e nella
riduzione dell’uso di memoria, con degli esempi di codice e di misura
delle prestazioni e delle risorse utilizzate. Come esempio conclusivo
presenterei un modulo per il parsing di XPath, completamente basato sui
generatori.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 12:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Davide Brunato</dc:creator><pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-22:/pycon-italia-2018/il-rasoio-dei-generatori-di-python-per-semplificare-il-codice-e-ridurre-luso-di-memoria.html</guid><category>PyCon Italia 2018</category><category>iterators</category><category>xpath</category><category>Python</category><category>generators</category></item><item><title>From XML to JSON and beyond</title><link>https://pyvideo.org/pycon-italia-2022/from-xml-to-json-and-beyond.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From XML to JSON and beyond - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;I want to share my experience on converting XML data to JSON, talking
about the existing conventions, some that expect a loss of information
and others that are lossless, with a focus on conversion methods defined
by XPath 3.1. JSON has been often described as an XML alternative or
even a replacement. This can be true in several applications, but many
often XML persists due to its more richer characteristics and pretty
different architectural scopes. So crucial is the build of conversion
tools and mapping conventions, to let the data communication effective
between the different formats. Despite many defined conventions also
XPath 3.1 put a step in this direction. So don’t trash old XML data, but
use them for what is better suited and convert them to send chunks of
JSON data to other systems or to submit to other applications.&lt;/p&gt;
&lt;p&gt;Speaker: Davide Brunato&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Davide Brunato</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/from-xml-to-json-and-beyond.html</guid><category>PyCon Italia 2022</category><category>compiler and interpreters</category><category>data structures</category><category>open source</category></item></channel></rss>