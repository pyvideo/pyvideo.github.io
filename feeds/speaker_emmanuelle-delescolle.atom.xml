<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_emmanuelle-delescolle.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-07-27T00:00:00+00:00</updated><entry><title>A tale of refactoring</title><link href="https://pyvideo.org/europython-2018/a-tale-of-refactoring.html" rel="alternate"></link><published>2018-07-27T00:00:00+00:00</published><updated>2018-07-27T00:00:00+00:00</updated><author><name>Emmanuelle Delescolle</name></author><id>tag:pyvideo.org,2018-07-27:europython-2018/a-tale-of-refactoring.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A couple years ago I was approached by a client to help them improve the
performance and maintainability of their code.&lt;/p&gt;
&lt;p&gt;That code was filled with very long functions, some of them with very
similar code and the project was really hard to understand as a whole.&lt;/p&gt;
&lt;p&gt;My first reflex was to refactor this code code to make it more
understandable. In my opinion, it did fit part of my assignment as
understandable code is easier to maintain but it was also very helpful
later in letting me make small changes with full knowledge of what was
going to be affected by those changes.&lt;/p&gt;
&lt;p&gt;Large methods and functions is something that creeps into our code
whether we plan for it or not. This talk is about one way to deal with
it.&lt;/p&gt;
&lt;p&gt;This talk will be based on code provided by the GildedRose Refcatoring
Kata: &lt;a class="reference external" href="https://github.com/emilybache/GildedRose-Refactoring-Kata"&gt;https://github.com/emilybache/GildedRose-Refactoring-Kata&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Prerequisites: - Basic knowledge of Python - Basic knowledge of OOP&lt;/p&gt;
&lt;p&gt;Goals: - Demonstrate one approach for refactoring code - Show how to
leverage Pythonâ€™s dynamic nature to make code simpler&lt;/p&gt;
</summary></entry><entry><title>I think I wrote a Rapid Web Application Development tool</title><link href="https://pyvideo.org/pycon-uk-2017/i-think-i-wrote-a-rapid-web-application-development-tool.html" rel="alternate"></link><published>2017-10-29T15:30:00+01:00</published><updated>2017-10-29T15:30:00+01:00</updated><author><name>Emmanuelle Delescolle</name></author><id>tag:pyvideo.org,2017-10-29:pycon-uk-2017/i-think-i-wrote-a-rapid-web-application-development-tool.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It all started with someone asking me about configuring a well known python ERP system for managing members of an organisation. My answer was that configuring a full-blown ERP for this kind of task was most likely too much of a hassle and that Django would probably be better suited for that kind of job.&lt;/p&gt;
&lt;p&gt;After that, since Django comes with built-in functionalities used by the core of most ERP systems, I started wondering how Django would fare to manage more complex things than a &amp;quot;simple users list&amp;quot; and started the task building a full enterprise management system for our small company. Of course, this is not what the original Django developers had in mind when they wrote it and therefore it has some limitations for that use-case. Some of those limitations can be addressed with existing plugins, others can't.&lt;/p&gt;
&lt;p&gt;For the past couple of years I've been assembling some libraries (both python and javascript) in order to help me build this management system that could &amp;quot;handle anything&amp;quot;. After the fact, when I look back at the work that has been done, it looks a lot like a Rapid Web Application Development tool.&lt;/p&gt;
&lt;p&gt;At some point in our tech life, we all decide it would be better to write something &amp;quot;from scratch&amp;quot; rather than using existing tools. Usually it helps us learn new concepts and technologies and is always worth it. The end-result though, often means significant effort and the initial goals are not always met.&lt;/p&gt;
</summary></entry><entry><title>Building SAAs with django and polla</title><link href="https://pyvideo.org/pycon-uk-2015/building-saas-with-django-and-polla.html" rel="alternate"></link><published>2015-09-19T00:00:00+00:00</published><updated>2015-09-19T00:00:00+00:00</updated><author><name>Emmanuelle Delescolle</name></author><id>tag:pyvideo.org,2015-09-19:pycon-uk-2015/building-saas-with-django-and-polla.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Airavata is a tool to help run multiple websites under Django using the
same codebase and the same database. This talk will demonstrate how to
build a SAAS service with those tools.&lt;/p&gt;
&lt;p&gt;In the meantime you can already checkout &lt;a class="reference external" href="https://bitbucket.org/levit_scs/airavata"&gt;the project's
page&lt;/a&gt;.&lt;/p&gt;
</summary></entry><entry><title>Behind the scenes: writing tutorials</title><link href="https://pyvideo.org/pycon-uk-2016/behind-the-scenes-writing-tutorials.html" rel="alternate"></link><published>2016-09-18T00:00:00+00:00</published><updated>2016-09-18T00:00:00+00:00</updated><author><name>Emmanuelle Delescolle</name></author><id>tag:pyvideo.org,2016-09-18:pycon-uk-2016/behind-the-scenes-writing-tutorials.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Emmanuelle Delescolle&lt;/p&gt;
&lt;p&gt;There are many ways to contribute to OpenSource, writing code is only one of them. Sadly writing code is often the only one which is recognized as valuable. Among the many ways you can contribute to OpenSource, one is writing tutorials, books, workshop or class lessons. In short different ways to spread knowledge. But what constitute the process of building such resources?&lt;/p&gt;
</summary></entry><entry><title>Project templates - alternatives and tools</title><link href="https://pyvideo.org/djangocon-europe-2015/emmanuelle-delescolle-project-templates-and-tools.html" rel="alternate"></link><published>2015-07-22T00:00:00+00:00</published><updated>2015-07-22T00:00:00+00:00</updated><author><name>Emmanuelle Delescolle</name></author><id>tag:pyvideo.org,2015-07-22:djangocon-europe-2015/emmanuelle-delescolle-project-templates-and-tools.html</id><summary type="html"></summary></entry></feed>