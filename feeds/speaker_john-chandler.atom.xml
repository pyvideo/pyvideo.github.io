<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_john-chandler.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-09-18T00:00:00+00:00</updated><entry><title>Taming a Legacy Codebase with (Micro)services</title><link href="https://pyvideo.org/pycon-uk-2015/taming-a-legacy-codebase-with-microservices.html" rel="alternate"></link><published>2015-09-19T00:00:00+00:00</published><updated>2015-09-19T00:00:00+00:00</updated><author><name>John Chandler</name></author><id>tag:pyvideo.org,2015-09-19:pycon-uk-2015/taming-a-legacy-codebase-with-microservices.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is a story of killing-off a legacy codebase written in PHP. To the
business, it &amp;quot;just works&amp;quot; and the customers love it. To the developers,
it's an unmaintainable nightmare of bad practice that has resisted every
attempt to rewrite from scratch.&lt;/p&gt;
&lt;p&gt;From the ashes of those doomed rewrites came a more incremental
approach, finding areas in the code that could be extracted into small,
composable services.&lt;/p&gt;
&lt;p&gt;I'll discuss why microservices are nothing new, how our approach
evolved, the challenges of adoption, and the pros and cons of the
approach. Although I won't delve too deeply into the technology stack,
I'll doff my (metaphorical) hat to Django REST Framework and a few other
tools of choice that have made the work possible.&lt;/p&gt;
&lt;p&gt;I hope to cut through the microservices hype, and illustrate one way of
using them to refactor, and ultimately replace, a legacy monolith.&lt;/p&gt;
</summary></entry><entry><title>Neurodiversity in Technology</title><link href="https://pyvideo.org/pycon-uk-2016/neurodiversity-in-technology.html" rel="alternate"></link><published>2016-09-18T00:00:00+00:00</published><updated>2016-09-18T00:00:00+00:00</updated><author><name>John Chandler</name></author><id>tag:pyvideo.org,2016-09-18:pycon-uk-2016/neurodiversity-in-technology.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;John Chandler&lt;/p&gt;
&lt;p&gt;We rightly talk a lot about diversity in technology these days. One area that seems to be neglected is to do with neurodiversity: the acknowledgement of neurological diversity as a result of Autism Spectrum, ADHD, Dyspraxia, Dyslexia, Dyscalculia, Tourette Syndrome, and more.&lt;/p&gt;
&lt;p&gt;&amp;quot;Neurodiversity may be every bit as crucial for the human race as biodiversity is for life in general. Who can say what form of wiring will prove best at any given moment? Cybernetics and computer culture, for example, may favor a somewhat autistic cast of mind.&amp;quot; - Harvey Blume&lt;/p&gt;
&lt;p&gt;I hope to provide an introduction to this large and complex subject, with particular reference to autism and its hidden contribution to computing. Disclaimer: I am considered neurotypical and am not an expert!&lt;/p&gt;
</summary></entry></feed>