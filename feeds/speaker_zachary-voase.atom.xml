<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_zachary-voase.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-11-18T00:00:00+00:00</updated><entry><title>Call C code quickly and compatibly with CFFI</title><link href="https://pyvideo.org/pycon-ca-2017/call-c-code-quickly-and-compatibly-with-cffi.html" rel="alternate"></link><published>2017-11-18T00:00:00+00:00</published><updated>2017-11-18T00:00:00+00:00</updated><author><name>Zachary Voase</name></author><id>tag:pyvideo.org,2017-11-18:pycon-ca-2017/call-c-code-quickly-and-compatibly-with-cffi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wanted to speed up a slow part of your Python program by rewriting part of it in C? Maybe you needed to use a C/C++ library, but couldn't find a Python binding? This talk will get you started with CFFI, a modern approach to calling into C code from Python. CFFI (FFI stands for 'foreign function interface') produces code that works with both CPython and PyPy, and across Python 2 and 3. It doesn't require learning a custom 'wrapping' language, and can have less runtime overhead than ctypes.&lt;/p&gt;
&lt;p&gt;In my talk, I'll walk through the process of exposing a small C-based data structure in Python, and then packaging it up with setuptools. You don't need to be an expert C programmer to get great results!&lt;/p&gt;
</summary></entry></feed>