<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Gregory M. Kapfhammer</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_gregory-m-kapfhammer.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-07-26T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Using GitHub, Travis CI, and Python to Introduce Collaborative Software Development</title><link href="https://pyvideo.org/pycon-us-2018/using-github-travis-ci-and-python-to-introduce-collaborative-software-development.html" rel="alternate"></link><published>2018-05-10T00:00:00+00:00</published><updated>2018-05-10T00:00:00+00:00</updated><author><name>Gregory M. Kapfhammer</name></author><id>tag:pyvideo.org,2018-05-10:/pycon-us-2018/using-github-travis-ci-and-python-to-introduce-collaborative-software-development.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Real-world software engineering is collaborative, commonly involving the use of Git, GitHub, and continuous integration with Travis CI. This presentation will explain how to use these technologies and platforms to teach interdisciplinary and introductory courses in computer programming and software engineering. This presentation will first show how to create …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Real-world software engineering is collaborative, commonly involving the use of Git, GitHub, and continuous integration with Travis CI. This presentation will explain how to use these technologies and platforms to teach interdisciplinary and introductory courses in computer programming and software engineering. This presentation will first show how to create a GitHub organization connected to a GitHub Classroom with unlimited private repositories that contain instructor solutions and starter kits and assignment submissions for both individual and team-based programming assignments. The talk will next explain how to connect GitHub repositories to continuous integration servers hosted by Travis CI, thus supporting the cloud-based execution of tests and checks.&lt;/p&gt;
&lt;p&gt;The presentation will subsequently introduce a Python program, called
&lt;a class="reference external" href="https://github.com/gkapfham/gatorgrader"&gt;GatorGrader&lt;/a&gt;, that supports the local and cloud-based checking of a
student’s source code and technical writing for a programming project.
GatorGrader can check, for example, that a submission contains the
required number of comments and produces the correct number of lines of
console output. Suitable for use on either a local workstation or a
cloud-based server provided by Travis CI, GatorGrader can, for instance,
ensure that a student makes the requisite number of commits to a GitHub
repository and structures a program in a specified fashion. GatorGrader
can also invoke external programs that ensure the quality of a student’s
technical writing. Finally, since most of the aforementioned assignments
are designed to be completed in teams, this presentation introduces
&lt;a class="reference external" href="https://github.com/GatorGrouper/gatorgrouper"&gt;GatorGrouper&lt;/a&gt;, another Python program that uses student responses on a
Google Form to create suitable groups of students who collaboratively
complete programming projects with GitHub.&lt;/p&gt;
</content><category term="PyCon US 2018"></category></entry><entry><title>Lightning Talks 2</title><link href="https://pyvideo.org/pycon-us-2021/lightning-talks-2.html" rel="alternate"></link><published>2021-05-14T00:00:00+00:00</published><updated>2021-05-14T00:00:00+00:00</updated><author><name>Dustin Ingram</name></author><id>tag:pyvideo.org,2021-05-14:/pycon-us-2021/lightning-talks-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Agenda of Lightning Talks  - Hosted by Dustin Ingram and Lorena Mesa&lt;/p&gt;
&lt;p&gt;Aakanksha Chouhan - Moulding Data for ML&lt;/p&gt;
&lt;p&gt;Andres &amp;amp; Denny - PyCon Latam the conference you don't want to miss&lt;/p&gt;
&lt;p&gt;Cristián Maureira-Fredes - Python Chile and its first PyCon!&lt;/p&gt;
&lt;p&gt;Dia-ning Yudono - Parametrizing tests with unittest and pytest&lt;/p&gt;
&lt;p&gt;Gregory M. Kapfhammer - Committing to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Agenda of Lightning Talks  - Hosted by Dustin Ingram and Lorena Mesa&lt;/p&gt;
&lt;p&gt;Aakanksha Chouhan - Moulding Data for ML&lt;/p&gt;
&lt;p&gt;Andres &amp;amp; Denny - PyCon Latam the conference you don't want to miss&lt;/p&gt;
&lt;p&gt;Cristián Maureira-Fredes - Python Chile and its first PyCon!&lt;/p&gt;
&lt;p&gt;Dia-ning Yudono - Parametrizing tests with unittest and pytest&lt;/p&gt;
&lt;p&gt;Gregory M. Kapfhammer - Committing to Writing Good Commit Messages: Supporting the   Creation of Human and Machine-Readable Commit Messages with Python&lt;/p&gt;
&lt;p&gt;Rumanu - Save Sheldon, in 5 minutes!&lt;/p&gt;
&lt;p&gt;Sebastian Witowski - 9 Jupyter notebook tricks for your next Advent of Code&lt;/p&gt;
&lt;p&gt;Dhananjay Jindal - f-Strings: How cool are they?&lt;/p&gt;
&lt;p&gt;Grey Li - FastAPI Seems Good, so Why Don't We Build Something Similar For Flask?&lt;/p&gt;
&lt;p&gt;Jeremy Gibson - direnv will change your life... maybe.&lt;/p&gt;
&lt;p&gt;Jürgen Gmach - How to Maintain Many, Many, Many, Many... Many Git Repositories?&lt;/p&gt;
</content><category term="PyCon US 2021"></category></entry><entry><title>Using Python, Travis CI, and GitHub to Effectively Teach Programming</title><link href="https://pyvideo.org/pygotham-2018/using-python-travis-ci-and-github-to-effectively-teach-programming.html" rel="alternate"></link><published>2018-10-05T00:00:00+00:00</published><updated>2018-10-05T00:00:00+00:00</updated><author><name>Gregory M. Kapfhammer</name></author><id>tag:pyvideo.org,2018-10-05:/pygotham-2018/using-python-travis-ci-and-github-to-effectively-teach-programming.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Real-world software engineering is collaborative, commonly involving the use of Git, GitHub, and continuous integration with Travis CI. Suitable for both full-time educators and members of industry who educate their colleagues, this presentation will explain how to use these technologies and platforms to teach interdisciplinary and introductory courses in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Real-world software engineering is collaborative, commonly involving the use of Git, GitHub, and continuous integration with Travis CI. Suitable for both full-time educators and members of industry who educate their colleagues, this presentation will explain how to use these technologies and platforms to teach interdisciplinary and introductory courses in computer programming and software engineering.&lt;/p&gt;
&lt;p&gt;The presentation will first show how to create a GitHub organization connected to a GitHub Classroom with unlimited private repositories that contain instructor solutions and starter kits and submissions from both individual and team-based assignments. The talk will next explain how to connect GitHub repositories to continuous integration servers hosted by Travis CI, thus supporting the cloud-based execution of tests and checks.&lt;/p&gt;
&lt;p&gt;The presentation will subsequently introduce the design and implementation of and the testing strategy for a Python program that supports the local and cloud-based checking of the source code and technical writing for a project. Designed to complement the automated checks performed by a test suite, this tool, called [GatorGrader](&lt;a class="reference external" href="https://github.com/GatorEducator/gatorgrader"&gt;https://github.com/GatorEducator/gatorgrader&lt;/a&gt;), can verify that a submission contains the required number of comments and produces the correct number of lines of console output. It can also, for instance, ensure that a student makes the requisite number of commits to a GitHub repository and implements a program in a specified fashion.&lt;/p&gt;
&lt;p&gt;Ultimately, people who attend this talk will learn more about how to use platforms like GitHub and Travis CI, open-source Python packages, and Python programming language features to effectively deliver instructional materials and assess assignment submissions.&lt;/p&gt;
</content><category term="PyGotham 2018"></category></entry><entry><title>Type Annotations in Python: Terribly Intimidating or Tremendously Informative?</title><link href="https://pyvideo.org/pyohio-2021/type-annotations-in-python-terribly-intimidating-or-tremendously-informative.html" rel="alternate"></link><published>2021-07-31T00:00:00+00:00</published><updated>2021-07-31T00:00:00+00:00</updated><author><name>Gregory M. Kapfhammer</name></author><id>tag:pyvideo.org,2021-07-31:/pyohio-2021/type-annotations-in-python-terribly-intimidating-or-tremendously-informative.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many software developers have written a Python program without
explicitly declaring the types of the parameters for a function's
parameters or return values. Since the Python programming language now
supports type annotations, many people in the community are exploring
this way to describe the data that a function accepts …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many software developers have written a Python program without
explicitly declaring the types of the parameters for a function's
parameters or return values. Since the Python programming language now
supports type annotations, many people in the community are exploring
this way to describe the data that a function accepts as input and
produces as output. When you start to apply Python's type annotations,
their syntax and meaning can be confusing and it is common to wonder
whether or not there is any benefit to adding them at all!&lt;/p&gt;
&lt;p&gt;This presentation will introduce Python's type annotations by
iteratively applying them to a function that does not have explicit
types. After explaining how to use the types available in the &lt;tt class="docutils literal"&gt;typing&lt;/tt&gt;
package, this talk will illustrate the ways in which a static type
checker like &lt;tt class="docutils literal"&gt;mypy&lt;/tt&gt; can find bugs in a Python program before it is
executed. People who watch this talk will gain the knowledge they need
to start writing their first type annotations, use them to improve their
Python programs, and ultimately find them to be beneficial.&lt;/p&gt;
</content><category term="PyOhio 2021"></category></entry><entry><title>Chasten Your Python Program: Configurable Program Analysis and Linting with XPath</title><link href="https://pyvideo.org/pyohio-2025/chasten-your-python-program-configurable-program-analysis-and-linting-with-xpath.html" rel="alternate"></link><published>2025-07-26T00:00:00+00:00</published><updated>2025-07-26T00:00:00+00:00</updated><author><name>Gregory M. Kapfhammer</name></author><id>tag:pyvideo.org,2025-07-26:/pyohio-2025/chasten-your-python-program-configurable-program-analysis-and-linting-with-xpath.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="section" id="abstract"&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Stop wrestling with regular expressions (regex) and complex abstract
syntax tree&lt;/div&gt;
&lt;div class="line"&gt;(AST)-based frameworks to analyze and lint your Python code! Chasten
offers an&lt;/div&gt;
&lt;div class="line"&gt;elegant solution by leveraging XPath expressions to search Python's
abstract&lt;/div&gt;
&lt;div class="line"&gt;syntax tree, making static code analysis both powerful and accessible.
In this&lt;/div&gt;
&lt;div class="line"&gt;talk, you'll …&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="section" id="abstract"&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Stop wrestling with regular expressions (regex) and complex abstract
syntax tree&lt;/div&gt;
&lt;div class="line"&gt;(AST)-based frameworks to analyze and lint your Python code! Chasten
offers an&lt;/div&gt;
&lt;div class="line"&gt;elegant solution by leveraging XPath expressions to search Python's
abstract&lt;/div&gt;
&lt;div class="line"&gt;syntax tree, making static code analysis both powerful and accessible.
In this&lt;/div&gt;
&lt;div class="line"&gt;talk, you'll discover how to implement custom linting rules, enforce
coding&lt;/div&gt;
&lt;div class="line"&gt;standards, and perform sophisticated pattern matching in your Python
projects&lt;/div&gt;
&lt;div class="line"&gt;using a tool designed for both simplicity and flexibility. Whether
you're a&lt;/div&gt;
&lt;div class="line"&gt;developer tired of writing fragile regex patterns, an instructor
validating&lt;/div&gt;
&lt;div class="line"&gt;student code, or a project maintainer who wants to ensure code
quality, Chasten&lt;/div&gt;
&lt;div class="line"&gt;provides the perfect balance of power and usability for your static
analysis&lt;/div&gt;
&lt;div class="line"&gt;needs. More details about chasten are available at:&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="https://github.com/AstuteSource/chasten"&gt;https://github.com/AstuteSource/chasten&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="key-takeaways"&gt;
&lt;h4&gt;Key Takeaways&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create custom linting rules through simple YAML configuration&lt;/li&gt;
&lt;li&gt;Practical examples of enforcing code standards on documentation and
code&lt;/li&gt;
&lt;li&gt;Ways to analyze results through interactive dashboards with Datasette&lt;/li&gt;
&lt;li&gt;How to integrate Chasten into development workflow and CI/CD
pipelines&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="PyOhio 2025"></category></entry></feed>