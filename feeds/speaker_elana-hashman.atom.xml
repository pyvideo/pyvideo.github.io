<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_elana-hashman.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-04T11:30:00+00:00</updated><entry><title>The Black Magic of Python Wheels</title><link href="https://pyvideo.org/pycon-us-2019/the-black-magic-of-python-wheels.html" rel="alternate"></link><published>2019-05-04T11:30:00+00:00</published><updated>2019-05-04T11:30:00+00:00</updated><author><name>Elana Hashman</name></author><id>tag:pyvideo.org,2019-05-04:pycon-us-2019/the-black-magic-of-python-wheels.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you’ve ever &lt;tt class="docutils literal"&gt;pip install&lt;/tt&gt;ed a Python package with C extensions on
Linux, it was probably a painful experience, having to download and
install development headers for libraries you’ve never even heard of.
Maybe you’ve given up on pip and have switched to Conda. But it doesn’t
have to be this way! The Python Packaging Authority has been working
hard to solve this problem with a new distribution format for compiled
Python code, called “wheels.”&lt;/p&gt;
&lt;p&gt;In this talk, we’ll descend into the practice of PEPs 513 and 571:
arcane scrolls that can equip Python developers with spells to
pre-compile applications and libraries in a way that allows most Linux
end users to run them directly. I’ll show you how to hex compiled
artifacts and source code into the wheel format, harness application
binary interfaces (ABIs) to use external libraries, brave the eldritch
horrors of the dynamic linker, and bind these all together in the
manylinux environment. Come learn to harness the black magic of Python
wheels, and you too can spare your users pain… for a price.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Teaching Python: The Hard Parts</title><link href="https://pyvideo.org/pycon-us-2016/elana-hashman-teaching-python-the-hard-parts-pycon-2016.html" rel="alternate"></link><published>2016-05-31T00:00:00+00:00</published><updated>2016-05-31T00:00:00+00:00</updated><author><name>Elana Hashman</name></author><id>tag:pyvideo.org,2016-05-31:pycon-us-2016/elana-hashman-teaching-python-the-hard-parts-pycon-2016.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Elana Hashman&lt;/p&gt;
&lt;p&gt;So you want to share the love and start teaching Python? It's dangerous to go alone! In this talk, I will share some of my experience teaching Python to newcomers of all levels and issues I've encountered. I hope to raise your awareness of some of the pitfalls different beginner Python programmers encounter, giving you some tools to help you build curriculum and answer difficult student questions.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>