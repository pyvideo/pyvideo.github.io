<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_word2vec.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-11-27T00:00:00+00:00</updated><entry><title>Recipe2Vec: How word2vec helped us discover related Tasty recipes</title><link href="https://pyvideo.org/pydata-new-york-city-2017/recipe2vec-how-word2vec-helped-us-discover-related-tasty-recipes.html" rel="alternate"></link><published>2017-11-27T00:00:00+00:00</published><updated>2017-11-27T00:00:00+00:00</updated><author><name>Meghan Heintz</name></author><id>tag:pyvideo.org,2017-11-27:pydata-new-york-city-2017/recipe2vec-how-word2vec-helped-us-discover-related-tasty-recipes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Your user knows they want a healthyish but tasty pasta for dinner but aren't quite sure exactly which recipe to choose. How can you help narrow their search and show them closely related recipes to give them enough options without making their search exhausting? This talk will show you BuzzFeed/Tasty tech's solution to creating a consistent method for finding similar Tasty recipes using word2vec.&lt;/p&gt;
</summary><category term="word2vec"></category></entry></feed>