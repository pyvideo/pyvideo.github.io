<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 07 Nov 2015 00:00:00 +0000</lastBuildDate><item><title>Scaling Python</title><link>https://pyvideo.org/pycon-ca-2015/scaling-python-james-king.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;You might have heard from smart people that dynamic languages are not suitable for large projects. We're going to look at what it takes to manage one of the largest Python projects powering public clouds at Dreamhost and Rackspace as well as private ones at CERN: Openstack!&lt;/p&gt;
&lt;p&gt;We'll gather some data about current Openstack deployments used in production, review some source code from various projects, see some anecdotes from devops people who deploy these systems, and explore the infrastructure and quality assurance processes used to maintain this massive code base.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James King</dc:creator><pubDate>Sat, 07 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-07:pycon-ca-2015/scaling-python-james-king.html</guid></item><item><title>Distributed Programming in Python: A Model for Strong, Eventual Consistency</title><link>https://pyvideo.org/pycon-ca-2012/distributed-programming-in-python-a-model-for-st.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Starting with the theory behind eventual consistency we'll dive into a
practical toolkit, knockblock, for programming these types of systems.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James King</dc:creator><pubDate>Sat, 10 Nov 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-11-10:pycon-ca-2012/distributed-programming-in-python-a-model-for-st.html</guid></item><item><title>Hy: A Lisp That Compiles to Python</title><link>https://pyvideo.org/pycon-ca-2013/hy-a-lisp-that-compiles-to-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Hy is a Lisp that compiles to Python AST. It has full interoperability
with Python and macros! This talk introduces Hy and will dig into the
compiler and demonstrate how dynamically generating Python ASTs can be
fun and useful.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James King</dc:creator><pubDate>Sun, 11 Aug 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-08-11:pycon-ca-2013/hy-a-lisp-that-compiles-to-python.html</guid><category>talk</category></item><item><title>Castle Anthrax: Dungeon Generation Techniques</title><link>https://pyvideo.org/pycon-us-2014/castle-anthrax-dungeon-generation-techniques.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Come and learn the techniques used for generating random dungeon-like
levels for games. You don't have to know what Rogue is to enjoy this
talk. Prepare yourself for a plethora of Monty Python references and
we'll have some fun.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James King</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-12:pycon-us-2014/castle-anthrax-dungeon-generation-techniques.html</guid></item></channel></rss>