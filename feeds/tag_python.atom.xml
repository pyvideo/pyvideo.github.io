<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_python.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-08-24T00:00:00+00:00</updated><entry><title>Python: A Medley of Programming Paradigms</title><link href="https://pyvideo.org/kiwi-pycon-2019/python-a-medley-of-programming-paradigms.html" rel="alternate"></link><published>2019-08-24T00:00:00+00:00</published><updated>2019-08-24T00:00:00+00:00</updated><author><name>Simon Merrick</name></author><id>tag:pyvideo.org,2019-08-24:kiwi-pycon-2019/python-a-medley-of-programming-paradigms.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Exploring Python's multiple programming paradigms - Imperative, Procedural, Functional and Object Oriented - and their applications through Python examples.&lt;/p&gt;
</summary><category term="programming paradigms"></category><category term="python"></category></entry><entry><title>Colaboratory el GDocs para Machine Learning</title><link href="https://pyvideo.org/pyday-nea-2019/colaboratory-el-gdocs-para-machine-learning.html" rel="alternate"></link><published>2019-06-29T00:00:00+00:00</published><updated>2019-06-29T00:00:00+00:00</updated><author><name>Diego Alcides Ramirez</name></author><id>tag:pyvideo.org,2019-06-29:pyday-nea-2019/colaboratory-el-gdocs-para-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vamos a utilizar google colaboratory para ver un ejemplo de clasificación de imágenes de artículos a través de una red neuronal.&lt;/p&gt;
&lt;p&gt;Charla dada en el PyDay NEA 2019, Resistencia, Chaco, Argentina, UTN FRRE, French y Ayacucho, el 29/06/2019&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://eventos.python.org.ar/events/pydaynea2019/activity/187/"&gt;https://eventos.python.org.ar/events/pydaynea2019/activity/187/&lt;/a&gt;&lt;/p&gt;
</summary><category term="colaboratory"></category><category term="machine learning"></category><category term="pyar"></category><category term="pydaynea"></category><category term="python"></category><category term="pythonargentina"></category><category term="tensorflow"></category><category term="utn"></category></entry><entry><title>Primeros pasos con MicroPython</title><link href="https://pyvideo.org/pyday-nea-2019/primeros-pasos-con-micropython.html" rel="alternate"></link><published>2019-06-29T00:00:00+00:00</published><updated>2019-06-29T00:00:00+00:00</updated><author><name>Guillermo Sampallo</name></author><id>tag:pyvideo.org,2019-06-29:pyday-nea-2019/primeros-pasos-con-micropython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Conocer cuales son los pasos necesarios para trabajar con MicroPython y como hacerlo. Pequeña demo de como entrar en el mundo IoT con MicroPython&lt;/p&gt;
&lt;p&gt;Charla dada en el PyDay NEA 2019, Resistencia, Chaco, Argentina, UTN FRRE, French y Ayacucho, el 29/06/2019&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://eventos.python.org.ar/events/pydaynea2019/activity/186/"&gt;https://eventos.python.org.ar/events/pydaynea2019/activity/186/&lt;/a&gt;&lt;/p&gt;
</summary><category term="esp8266"></category><category term="iot"></category><category term="micropython"></category><category term="pyar"></category><category term="pydaynea"></category><category term="python"></category><category term="pythonargentina"></category><category term="utn"></category></entry><entry><title>PyFE, software para la emision de comprobantes electronicos</title><link href="https://pyvideo.org/pyday-nea-2019/pyfe-software-para-la-emision-de-comprobantes-electronicos.html" rel="alternate"></link><published>2019-06-29T00:00:00+00:00</published><updated>2019-06-29T00:00:00+00:00</updated><author><name>Jose Oscar Vogel</name></author><id>tag:pyvideo.org,2019-06-29:pyday-nea-2019/pyfe-software-para-la-emision-de-comprobantes-electronicos.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyFE es un sistema de facturacion electronica, con la posibilidad de exportar datos para contadores (RG 3685, Iva Ventas, etc), tambien realizar la consulta de CUIT en los padrones de la Afip, constatacion de comprobantes, todo utilizando Python con PyQT y para la parte de conexion con la Afip usando pyafipws&lt;/p&gt;
&lt;p&gt;Charla dada en el PyDay NEA 2019, Resistencia, Chaco, Argentina, en UTN FRRE, French y Ayacucho, el 29/06/2019
&lt;a class="reference external" href="https://eventos.python.org.ar/events/pydaynea2019/activity/182/"&gt;https://eventos.python.org.ar/events/pydaynea2019/activity/182/&lt;/a&gt;&lt;/p&gt;
</summary><category term="pyafipws"></category><category term="pyar"></category><category term="pydaynea"></category><category term="pyqt"></category><category term="python"></category><category term="pythonargentina"></category><category term="utn"></category></entry><entry><title>Scrapeando con Python</title><link href="https://pyvideo.org/pyday-nea-2019/scrapeando-con-python.html" rel="alternate"></link><published>2019-06-29T00:00:00+00:00</published><updated>2019-06-29T00:00:00+00:00</updated><author><name>Pelin Rodriguez</name></author><id>tag:pyvideo.org,2019-06-29:pyday-nea-2019/scrapeando-con-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mi experiencia en scrapping con Python y selenium&lt;/p&gt;
&lt;p&gt;Mostraremos como se puede hacer scrapping de sitios web, desde sitios basicos, con inicio de sesion y hasta llegar a los que usan y abusan de JS.&lt;/p&gt;
&lt;p&gt;Charla dada en el PyDay NEA 2019, Resistencia, Chaco, Argentina, UTN FRRE, French y Ayacucho, el 29/06/2019&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://eventos.python.org.ar/events/pydaynea2019/activity/183/"&gt;https://eventos.python.org.ar/events/pydaynea2019/activity/183/&lt;/a&gt;&lt;/p&gt;
</summary><category term="beautifulsoap"></category><category term="pyar"></category><category term="pydaynea"></category><category term="python"></category><category term="pythonargentina"></category><category term="scrapping"></category><category term="selenium"></category><category term="utn"></category><category term="webscrapping"></category></entry><entry><title>Python Performance: Past, Present and Future</title><link href="https://pyvideo.org/europython-2019/python-performance-past-present-and-future.html" rel="alternate"></link><published>2019-07-12T00:00:00+00:00</published><updated>2019-07-12T00:00:00+00:00</updated><author><name>Victor Stinner</name></author><id>tag:pyvideo.org,2019-07-12:europython-2019/python-performance-past-present-and-future.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Performance: Past, Present and Future&lt;/p&gt;
</summary><category term="python"></category></entry><entry><title>Python Standard Library, The Hidden Gems</title><link href="https://pyvideo.org/europython-2019/python-standard-library-the-hidden-gems.html" rel="alternate"></link><published>2019-07-12T00:00:00+00:00</published><updated>2019-07-12T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2019-07-12:europython-2019/python-standard-library-the-hidden-gems.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python Standard Library is a very rich toolset, which is the reason
why Python is stated to come with &amp;quot;batteries included&amp;quot;. In such an
amount of features and tools it's easy to get lost and miss some of the
less unknown modules or gems hidden within the whole load of functions
and classes.&lt;/p&gt;
&lt;p&gt;This talk aims at showcasing some recipes, snippets and usages of
standard library modules and functions that are less known or that are
not covered in the most common books and tutorials available for Python.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The talk will try to showcase a bunch of short examples in the hope to
foster the &amp;quot;oh, wow! I didn't think about that&amp;quot; reaction at least once
in the audience.&lt;/div&gt;
&lt;div class="line"&gt;We will see how frequently for tasks where you used third party
libraries or frameworks a solution bultin into the standard library is
already available, and such solution is guaranteed to be maintained
and well working for the years to come thanks to the standard library
reliability and stability.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The showcased examples are took from the “Modern Python Standard Library
Cookbook” book that I authored.&lt;/p&gt;
</summary><category term="CPython"></category><category term="Debugging"></category><category term="Development"></category><category term="General"></category><category term="python"></category></entry><entry><title>The soul of the beast</title><link href="https://pyvideo.org/europython-2019/the-soul-of-the-beast.html" rel="alternate"></link><published>2019-07-12T00:00:00+00:00</published><updated>2019-07-12T00:00:00+00:00</updated><author><name>Pablo Salgado</name></author><id>tag:pyvideo.org,2019-07-12:europython-2019/the-soul-of-the-beast.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="section" id="why"&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;The audience will discover one of the core pieces of the language that
sits at the middle of the decisions about what new rules can or cannot
be implemented in the Python programming language. They will learn how
the particularities of the grammar limit what can be achieved but also
serve to maintain the language consistent, powerful but straightforward.
Attendants will learn how core developers solved some challenging
scenarios that arise as a consequence of said limitations or how others
cannot be resolved unless Python gets a significant transformation in
the internal mechanism that parses the grammar. Finally, they will learn
how a new rule is added to the CPython grammar, serving as a perfect
example of how all the pieces come together. In summary, the audience
will gain a more technical response to why people perceive the Python
programming language as easy but powerful one and at the same time will
gain some insight on how to understand and extend the pieces that form
it. This talk will not only help members of the audience understand
better the design of the language a how grammars and parser work, but
will also help people wanting to contribute to CPython understanding the
general structure of the compiler pipeline and how to work on it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="who"&gt;
&lt;h4&gt;Who&lt;/h4&gt;
&lt;p&gt;This talk is for those that want to understand Python a bit deeper: not
only how everything works under the hood but also what are the technical
decisions in its making and what are the consequences. The talk is
targeted to all Python programmers, no matter the skill level as
everyone will find something for their particular level of expertise:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Beginner programmers will be introduced in the topic of language
grammars and will learn what a Grammar is and what are the building
blocks. Also, the audience members in this level will gain insight into
how everything is thread together in CPython.&lt;/li&gt;
&lt;li&gt;Medium and advanced programmers will learn some in-depth technical
details and how they relate to features they already know and
understand. The talk not only will try to enlight some new areas related
to grammar technicalities, parser features and design and CPython
implementation details but will also connect many pieces of information
to explain how the small technical decisions impact the bigger picture.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="outline"&gt;
&lt;h4&gt;Outline&lt;/h4&gt;
&lt;p&gt;Who am I&lt;/p&gt;
&lt;p&gt;What is the Python Grammar&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What is grammar?&lt;/li&gt;
&lt;li&gt;How they look like.&lt;/li&gt;
&lt;li&gt;Elements: terminal symbols, nonterminal symbols, productions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The properties of Python Grammar?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Leftmost derivation&lt;/li&gt;
&lt;li&gt;1 token lookahead&lt;/li&gt;
&lt;li&gt;No epsilon productions! (Plus what epsilon productions are)&lt;/li&gt;
&lt;li&gt;Some immediate consequences of these properties.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How the Python parser generator works&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;General structure of the parser generator.&lt;/li&gt;
&lt;li&gt;Non Deterministic Finite Automata&lt;/li&gt;
&lt;li&gt;Deterministic Finite Automata.&lt;/li&gt;
&lt;li&gt;Some examples (with cool graphs!) generated from the
python grammar and the parser generator of the actual
finite automatas that Python uses.&lt;/li&gt;
&lt;li&gt;Concrete syntax trees.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Advantages of the grammar (or &amp;quot;why Python is so easy to understand)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;LL(1) grammars are context-free (no state to maintain while
parsing).&lt;/li&gt;
&lt;li&gt;LL(1) grammars are simple to implement and very fast to parse.&lt;/li&gt;
&lt;li&gt;LL(1) grammars are very limited, keeping the language simple&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Disadvantages of the grammar:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Grammar ambiguity.&lt;/li&gt;
&lt;li&gt;LL(1) grammars need some hacks for very simple things.&lt;/li&gt;
&lt;li&gt;How keyword arguments were incorporated in the grammar with a hack:
The grammar rule is very strange because it is &amp;quot;fixed&amp;quot; in the Abstract
syntax tree&lt;/li&gt;
&lt;li&gt;Why parenthesized with statements cannot be implemented (with
statements
formed of multiple elements surrounded by parenthesis and separated by
commas).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Implementing a new grammar rule in CPython: the arrow operator :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A complete mini-tutorial on how to introduce a new operator: A -&amp;gt; B
that gets executed as A.&lt;strong&gt;rarrow&lt;/strong&gt;(B).&lt;/li&gt;
&lt;li&gt;Altering the grammar and generating the new parser.&lt;/li&gt;
&lt;li&gt;Introducing a new token.&lt;/li&gt;
&lt;li&gt;Changing the tokenizer.&lt;/li&gt;
&lt;li&gt;Changing the Abstract Syntax Tree Generator.&lt;/li&gt;
&lt;li&gt;Changing the compiler.&lt;/li&gt;
&lt;li&gt;Implementing the new opcode.&lt;/li&gt;
&lt;li&gt;Implementing the &lt;strong&gt;rarrow&lt;/strong&gt; protocol.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The future and summary of the talk:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;We have been discussing in the CPython discourse to change the
parser generator to something
more powerful.&lt;/li&gt;
&lt;li&gt;Dangers and advantages of other parser generators.&lt;/li&gt;
&lt;li&gt;What other implementations are using?&lt;/li&gt;
&lt;li&gt;Summary of the talk&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="Abstractions"></category><category term="CPython"></category><category term="Performance"></category><category term="python"></category></entry><entry><title>Advanced pytest</title><link href="https://pyvideo.org/europython-2019/advanced-pytest.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Raphael Pierzina</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/advanced-pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are many reasons why I think pytest is a fantastic test framework:
assertion introspection, setup and teardown with fixtures, parametrized
tests. But plugins are the real game changer!&lt;/p&gt;
&lt;p&gt;We'll dive right into customizing a test suite by developing a series of
pytest plugins based on a few neat hacks. We'll learn how to
automatically add markers to slow running tests, run only tests that use
a fixture which can be specified on the CLI, generate test reports in a
custom format, and automatically create GitHub issues for test
regressions. We'll wrap up this talk by using Cookiecutter to create
Python packages from our plugins that are ready to be published on PyPI.&lt;/p&gt;
</summary><category term="Test Libraries (pytest/nose/...)"></category><category term="Testing"></category><category term="python"></category></entry><entry><title>Introduction to Python and MongoDB</title><link href="https://pyvideo.org/europython-2019/introduction-to-python-and-mongodb.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Joe Drumgoole</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/introduction-to-python-and-mongodb.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;This talk will give anyone who has a basic knowledge of Python insight
into how&lt;/div&gt;
&lt;div class="line"&gt;easy it is to build database applications using the PyMongo Python
library for MongoDB. There will be live coding!&lt;/div&gt;
&lt;/div&gt;
</summary><category term="python"></category></entry><entry><title>Testing Microservices: fast and with confidence</title><link href="https://pyvideo.org/europython-2019/testing-microservices-fast-and-with-confidence.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Stephan Jaensch</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/testing-microservices-fast-and-with-confidence.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A main advantage of microservices is improved developer velocity. One
roadblock to achieving it is giving developers the confidence that their
changes are correct and safe, which is a challenging problem in such a
distributed architecture. Typical approaches involve relying on
automated end- to-end testing, which is costly to set up, develop tests
for and run.&lt;/p&gt;
&lt;p&gt;In this talk I will explore an approach to testing that does not require
the presence of any external dependencies (not even &amp;quot;fake&amp;quot; or &amp;quot;test
double&amp;quot; implementations of them), but provides many of the benefits of
an end-to-end test. Come by to learn about how we can use a downstream
service's API specification to make sure the system under test interacts
with it in the correct way (&amp;quot;contract testing&amp;quot;) - a key ingredient
missing from most unit or integration test setups. We'll then go even
further to cover testing scenarios that previously could only be covered
with end-to-end tests: how to maintain and validate state of your
downstream dependencies.&lt;/p&gt;
</summary><category term="Distributed Systems"></category><category term="Microservices"></category><category term="Testing"></category><category term="python"></category></entry><entry><title>“When a biologist met Python”</title><link href="https://pyvideo.org/europython-2019/when-a-biologist-met-python.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Maria Molina-Contreras</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/when-a-biologist-met-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Biology and computing are closer than we usually think, for example
many algorithms are inspired in biology patterns, and complementary to
that, researchers needs special algorithms to have a better
understanding of our environment. Thus, there is a strong relation an
dependency.&lt;/div&gt;
&lt;div class="line"&gt;In the past years, Biology has been transformed into computational
biology. Therefore&lt;/div&gt;
&lt;div class="line"&gt;technological advances helps us to predict physical interactions
between atoms and DNA, because we are being able to integrate
information from biology into algorithms.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Python has become a popular programming language in biosciences because
it has a clean syntax that makes it easy to read language. In addition
to this, there are many modules (toolkits) extending to different
biological domains, like metabolomics, structure analysis,
phylogenomics, molecular biology and others. Python is currently
improving researcher’s workflow, helping us to focus on the theory or
experimental part, instead of fighting with old buggy applications.&lt;/p&gt;
&lt;p&gt;This talk aims to be oriented to all audiences (with/without biological
background) since we will go together through an amazing adventure into
the natural sciences using tools like Biopython, Bokeh, Networkx, Ecopy
and much more! Are you brave enough to follow me on this journey?&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Data Science"></category><category term="Natural Science"></category><category term="Scientific Libraries (Numpy/Pandas/SciKit/...)"></category><category term="python"></category></entry><entry><title>Accelerate your Deep Learning Inferencing with the Intel® DL Boost technology</title><link href="https://pyvideo.org/europython-2019/accelerate-your-deep-learning-inferencing-with-the-intelr-dl-boost-technology.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Shailen Sobhee</name></author><id>tag:pyvideo.org,2019-07-10:europython-2019/accelerate-your-deep-learning-inferencing-with-the-intelr-dl-boost-technology.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn about Intel® Deep Learning Boost, also known as Vector Neural
Network Instructions (VNNI), a new set of AVX-512 instructions, that are
designed to deliver significantly more efficient Deep Learning
(Inference) acceleration. Through this technology, I will show you how
you can perform low-precision (INT8) inference much faster on hardware
that support the VNNI instruction set (for example, the 2nd generation
Intel Xeon Scalable processors, codenamed, Cascade Lake). In the live
Jupyter notebook session, you can will be able to see the benefits of
this new hardware technology.&lt;/p&gt;
&lt;p&gt;Note: This is an advanced talk. Knowledge about Deep Learning,
Inferencing and basic awareness of hardware instruction sets would be
desirable.&lt;/p&gt;
</summary><category term="Data Science"></category><category term="Deep Learning"></category><category term="Performance"></category><category term="python"></category></entry><entry><title>From days to minutes, from minutes to milliseconds with SQLAlchemy</title><link href="https://pyvideo.org/europython-2019/from-days-to-minutes-from-minutes-to-milliseconds-with-sqlalchemy.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Leonardo Rochael Almeida</name></author><id>tag:pyvideo.org,2019-07-10:europython-2019/from-days-to-minutes-from-minutes-to-milliseconds-with-sqlalchemy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Object Relational Mappers (ORMs) are awesome enhancers of developer
productivity. The freedom of having the library write that SQL and give
you back a useful, rich model instance (or a bunch of them) instead of
just a tuple or a list of records is simply amazing.&lt;/p&gt;
&lt;p&gt;But if you forget you have an actual database behind all that
convenience, then it'll bite you back, usually when you've been in
production for a while, after you've accumulated enough data that your
once speedy application starts slowing down do a crawl.&lt;/p&gt;
&lt;p&gt;Databases work best when you ask them once for (or to do) a bunch of
stuff, instead of asking them lots of times for small stuff.&lt;/p&gt;
&lt;p&gt;We'll discuss how innocent looking attribute accesses on your model
instances translate to sequential queries (the infamous N+1 problem).&lt;/p&gt;
&lt;p&gt;Then we'll go through some practical solutions, taken from real cases,
that resulted in massive speed ups. We'll cover how changes in Python
code resulted in changes to the resulting SQL Queries.&lt;/p&gt;
&lt;p&gt;We'll see solutions not only for queries, but also for inserts and
updates, which tend to be less well documented.&lt;/p&gt;
&lt;p&gt;Though this talk focuses on SQLAlchemy, the lessons should be applicable
to most ORMs in most programing languages. The ideas discussed, and
solutions proposed are also valid for any storage back-end, not only SQL
databases.&lt;/p&gt;
&lt;p&gt;This talk is geared towards Python developers with systems that talk to
databases. It should be accessible to anyone who already programs in
Python (early intermediary level), but will be most useful for
developers with projects talking to SQL databases, specially using an
ORM like SQLAlchemy. Attendees will learn to detect how N+1 query
situations arise and how to work around them effectively. They will also
learn how to do mass inserts and mass updates with SQLAlchemy.&lt;/p&gt;
</summary><category term="Debugging"></category><category term="Performance"></category><category term="SQL Alchemy"></category><category term="python"></category></entry><entry><title>Python vs Rust for Simulation</title><link href="https://pyvideo.org/europython-2019/python-vs-rust-for-simulation.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Alisa Dammer</name></author><id>tag:pyvideo.org,2019-07-10:europython-2019/python-vs-rust-for-simulation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Both Python and Rust are getting more and more popularity. Although it
is unfair to compare them directly, this talk aims to provide a clear
comparison with a pre-defined criteria applied to a specific use-case.&lt;/div&gt;
&lt;div class="line"&gt;Writing a simulation engine is very similar to writing a game engine
and requires certain features from a language or framework.&lt;/div&gt;
&lt;div class="line"&gt;Possible comparison criteria:&lt;/div&gt;
&lt;div class="line"&gt;1. Performance&lt;/div&gt;
&lt;div class="line"&gt;2. Simplicity&lt;/div&gt;
&lt;div class="line"&gt;3. Amount of code necessary for a MVP&lt;/div&gt;
&lt;div class="line"&gt;4. Utilities: docs, tests, profile&lt;/div&gt;
&lt;div class="line"&gt;5. Compatibility&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Tl;dr&lt;/div&gt;
&lt;div class="line"&gt;Do I want to go back to Python after Rust? Maybe+)&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Code Analysis"></category><category term="Development"></category><category term="Rust"></category><category term="python"></category></entry><entry><title>Python's Parallel Programming Possibilities - 4 levels of concurrency</title><link href="https://pyvideo.org/europython-2019/pythons-parallel-programming-possibilities-4-levels-of-concurrency.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Samuel Colvin</name></author><id>tag:pyvideo.org,2019-07-10:europython-2019/pythons-parallel-programming-possibilities-4-levels-of-concurrency.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I'm going to talk about the 4 main levels of parallelism in modern
Computing:&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;- multiple (virtual) machines&lt;/div&gt;
&lt;div class="line"&gt;- multiple processes&lt;/div&gt;
&lt;div class="line"&gt;- multiple threads&lt;/div&gt;
&lt;div class="line"&gt;- multiple green threads, aka asyncio&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Why you might use each of them, how to go about doing so with python and
some of the pitfalls you might fall into along the way.&lt;/p&gt;
&lt;p&gt;To do so, I'll give short examples in code of achieving each level:&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;- leveraging multiple hosts using RQ, and also the possibility of RPC
with HTTP&lt;/div&gt;
&lt;div class="line"&gt;- multiprocessing and threading using their respective modules from
the python standard library&lt;/div&gt;
&lt;div class="line"&gt;- asyncio demonstrated with AIOHTTP&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That sounds great, but there are &amp;quot;gotchas&amp;quot; you should know about before
you get started, for example:&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;- multiple machines can actually be multiple virtual machines on the
same host&lt;/div&gt;
&lt;div class="line"&gt;- effectively communicating between processes is hard, how can we go
about making it easier?&lt;/div&gt;
&lt;div class="line"&gt;- the limitations of threading and the GIL&lt;/div&gt;
&lt;div class="line"&gt;- run_in_executor - do we ever really need to use multiprocessing or
threading directly again&lt;/div&gt;
&lt;div class="line"&gt;- use of asyncio when dealing with both networking between hosts and
between processes - you end up using two different kinds of
concurrency at the same time. That can be confusing, but also awesome.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I'll finish of by showcasing a library I built, arq which is a job
queueing and RPC library for python which uses asyncio and Redis.&lt;/p&gt;
</summary><category term="ASYNC / Concurrency"></category><category term="Messaging and Job Queues"></category><category term="Multi-Processing"></category><category term="Multi-Threading"></category><category term="python"></category></entry><entry><title>Sharing is Caring! - how to free the CPU from message passing hell - shared memory saved the day</title><link href="https://pyvideo.org/pycon-italia-2019/sharing-is-caring-how-to-free-the-cpu-from-message-passing-hell-shared-memory-saved-the-day.html" rel="alternate"></link><published>2019-05-05T00:00:00+00:00</published><updated>2019-05-05T00:00:00+00:00</updated><author><name>Andrei Neagu</name></author><id>tag:pyvideo.org,2019-05-05:pycon-italia-2019/sharing-is-caring-how-to-free-the-cpu-from-message-passing-hell-shared-memory-saved-the-day.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When dealing with a real time application in which you are required to
process a lot of data from multiple sources in parallel, system
resources disappear quickly. Add some CPU intensive processing and you
are set to fail.&lt;/p&gt;
&lt;p&gt;This talk will illustrate a solution to solve a CPU bound problem with a
data stream of tens of megabytes. I will talk about how easy it is to
fail and how to obtain a working solution.&lt;/p&gt;
&lt;p&gt;The following arguments will be discussed:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;threading and its limitations&lt;/li&gt;
&lt;li&gt;multiprocessing and its limitations&lt;/li&gt;
&lt;li&gt;serialization&lt;/li&gt;
&lt;li&gt;shared memory&lt;/li&gt;
&lt;li&gt;a solution: multiprocessing + shared memory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Code will be provided and shown during the talk.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1656"&gt;https://python.it/feedback-1656&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 11:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="threading"></category><category term="SharedMemory"></category><category term="#Python"></category><category term="python3"></category><category term="multiprocessing"></category></entry><entry><title>Uno sguardo alle Dataclasses: quando una namedtuple non basta</title><link href="https://pyvideo.org/pycon-italia-2019/uno-sguardo-alle-dataclasses-quando-una-namedtuple-non-basta.html" rel="alternate"></link><published>2019-05-05T00:00:00+00:00</published><updated>2019-05-05T00:00:00+00:00</updated><author><name>Alessandro Cucci</name></author><id>tag:pyvideo.org,2019-05-05:pycon-italia-2019/uno-sguardo-alle-dataclasses-quando-una-namedtuple-non-basta.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hanno fatto la loro prima apparizione in Python 3.7, sono la moda del
momento. Sto parlando delle DataClasses, definite nella PEP557 come
“mutable namedtuples with defaults”. Inizieremo facendo un ripasso
veloce sulla bellezza, ma anche sui limiti, delle namedtuple,
continuando poi con un tour alla scoperta di questo nuovo strumento
regalatoci da Eric V. Smith (Python Core Developer) e di come può
esserci d’aiuto nello scrivere nuove classi con minimo sforzo. Oltre
alla definizione come Standard Library suggerisce, verranno proposti
degli esempi di codice per far capire in maniera semplice ai
programmatori che si avvicinano per la prima volta a questo modulo le
caratteristiche, le differenze rispetto ad altri strumenti, e i vantaggi
nell’usare le dataclasses nei loro programmi.&lt;/p&gt;
&lt;p&gt;Feedback form: &lt;a class="reference external" href="https://python.it/feedback-1534"&gt;https://python.it/feedback-1534&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 12:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="data-structures"></category><category term="object-oriented-programming"></category><category term="Python"></category><category term="python3"></category></entry><entry><title>Usa lo Zen, Luke!</title><link href="https://pyvideo.org/pycon-italia-2019/usa-lo-zen-luke.html" rel="alternate"></link><published>2019-05-05T00:00:00+00:00</published><updated>2019-05-05T00:00:00+00:00</updated><author><name>Lorenzo Mele</name></author><id>tag:pyvideo.org,2019-05-05:pycon-italia-2019/usa-lo-zen-luke.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nel nostro lavoro ci troviamo spesso di fronte a scelte difficili da
prendere, compromessi che possono compromettere il nostro codice o altre
scelte future. Per fortuna abbiamo una guida che ci può aiutare a
compiere queste scelte un po’ più facilmente: lo Zen di Python. In
questo talk voglio mostrare alcuni casi reali in cui lo zen ci può
aiutare a scrivere codice migliore, più manutenibile e più bello.
Impossibile parlare di tutto lo zen, prenderò quattro o cinque consigli
e proporrò un caso reale, cioè un pezzo di codice in produzione, per
mostrarne la veridicità.&lt;/p&gt;
&lt;p&gt;Non sono richiesti pre-requisiti, si parlerà di concetti generali.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Presentazione:`link &amp;lt;https://docs.google.com/presentation/d/1GUdMd7VCQqyHHgWxSq2mf2Ot370ERWVsCwN5ln7EfEc/edit?usp=sharing&amp;gt;`__&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:https://python.it/feedback-1664&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 11:00 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="Zen"></category></entry><entry><title>A Worked Intro to Scikit-learn</title><link href="https://pyvideo.org/pycon-italia-2019/a-worked-intro-to-scikit-learn.html" rel="alternate"></link><published>2019-05-04T00:00:00+00:00</published><updated>2019-05-04T00:00:00+00:00</updated><author><name>Anders Bogsnes</name></author><id>tag:pyvideo.org,2019-05-04:pycon-italia-2019/a-worked-intro-to-scikit-learn.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A talk introducing the audience to Scikit-learn as a library aimed at
people who know Python at a beginner/intermediate level but are new to
machine learning concepts. The goal of the talk is for the audience to
leave with an understanding of the foundations of machine learning while
respecting how easy it is to make a wrong choice that invalidates your
model.&lt;/p&gt;
&lt;p&gt;It will be a short background on scikit-learn followed by a livecoding
demo where I demonstrate how scikit-learn works and detail common
pitfalls.&lt;/p&gt;
&lt;p&gt;I will demonstrate ways of coping with problems such as data leakage,
the importance of train-test splits, choosing metrics wisely, and
explain how cross-validation works and why we use it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1596"&gt;https://python.it/feedback-1596&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Saturday 4 May&lt;/strong&gt; at 10:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="pydata"></category><category term="Python"></category><category term="scikit-learn"></category><category term="Machine Learning"></category><category term="analytics"></category><category term="data"></category><category term="sklearn"></category></entry><entry><title>Machine Learning for Inventory Management</title><link href="https://pyvideo.org/pycon-italia-2019/machine-learning-for-inventory-management.html" rel="alternate"></link><published>2019-05-04T00:00:00+00:00</published><updated>2019-05-04T00:00:00+00:00</updated><author><name>Laura De Stefanis</name></author><id>tag:pyvideo.org,2019-05-04:pycon-italia-2019/machine-learning-for-inventory-management.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Material forecast is the process of deciding which items to stock in the
inventory, how much, and when. Aim of the forecast is to increase parts
availability with the less possible impact on inventory, having enough
stock in the warehouse to ensure the business keeps moving but not
enough stock to drain its limited cash reserves. This decision process
is being profoundly revised in its foundational concepts, thanks to new
classification methodologies enabled by Machine Learning. We integrated
domain knowledge and ML to create a new classification and level setting
process, leveraging on 6 years of data and new statistical indicators
for demand patter. These new features are used to run the machine
learning algorithm that classify Make To Stock / Make To Order items in
a single flow approach. The validation phase is reduced at each
iteration as ML model can be re-trained to incorporate past validations,
increasing efficiency and performances. Level setting problem is
addressed benchmarking ML methods (Reinforcement Learning), Montecarlo
simulations and traditional statistical methodologies. Regarding RL and
Montecarlo we established punishments for letting an particular
inventory item run out of stock and we also punish the model for stock
too higher value for too long. For rewards, we primarily focus on
ordering items within a safe window before the demand. First application
of this new methodology brings a 20% reduction of inventory, without
impact on sales, and a workload reduction of about 70%.&lt;/p&gt;
&lt;p&gt;Feedback form: &lt;a class="reference external" href="https://python.it/feedback-1554"&gt;https://python.it/feedback-1554&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Saturday 4 May&lt;/strong&gt; at 12:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="logistics"></category><category term="clustering"></category><category term="statistics"></category><category term="Python"></category><category term="Big-Data"></category><category term="gestionali"></category><category term="django"></category><category term="supplychain"></category><category term="sql"></category><category term="Artificial Intelligence"></category></entry><entry><title>Pipenv per la gestione delle dipendenze negli ambienti di sviluppo e di produzione</title><link href="https://pyvideo.org/pycon-italia-2019/pipenv-per-la-gestione-delle-dipendenze-negli-ambienti-di-sviluppo-e-di-produzione.html" rel="alternate"></link><published>2019-05-04T00:00:00+00:00</published><updated>2019-05-04T00:00:00+00:00</updated><author><name>Marco Santamaria</name></author><id>tag:pyvideo.org,2019-05-04:pycon-italia-2019/pipenv-per-la-gestione-delle-dipendenze-negli-ambienti-di-sviluppo-e-di-produzione.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pipenv permette la creazione automatica di un virtual environment e
l’installazione di pacchetti Python attraveso una elegante interfaccia a
riga di comando che riunisce in un unico strumento le funzionalità di
PIP e virtualenv. Allo stesso tempo permette di tracciare in modo facile
ed affidabile le dipendenze di un’applicazione attraverso i file Pipfile
e Pipfile.lock, mettendo fine ai problemi derivanti dall’uso dei file
requirements.txt e permettendo build deterministici.&lt;/p&gt;
&lt;p&gt;Inizialmente verranno presentate le motivazioni principali che
giustificano l’uso di pipenv: 1. dipendenze astratte e concrete
(setup.py vs requirements.txt) 2. problemi nell’uso di file
requirements.txt 3. librerie vs applicazioni 4. necessità di build
deterministici&lt;/p&gt;
&lt;p&gt;In seguito verranno descritte le funzionalità principali di pipenv per
la gestione dei pacchetti e virtual environment nell’ambiente di
sviluppo: 5. Installazione di pipenv nelle principali distribuzioni
Linux e in Windows 6. I comandi “pipenv install”, “pipenv shell”,
“pipenv run” 7. I file Pipfile e Pipfile.lock&lt;/p&gt;
&lt;p&gt;Poi si introdurranno alcune funzionalità avanzate di pipenv: 8. “pipenv
graph” per la visualizzazione del grafo delle dipendenze 9. “pipenv
check” per controllare vulnerabilità di sicurezza 10. configurazione
tramite variabili d’ambiente&lt;/p&gt;
&lt;p&gt;Infine verranno prese in esame alcune utili funzionalità che permettono
a pipenv di entrare a pieno titolo nel processo di deploy di
un’applicazione Python: 11. i comandi “pipenv install –deploy” e “pipenv
sync” 12. il supporto di file dot-env&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1714"&gt;https://python.it/feedback-1714&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Saturday 4 May&lt;/strong&gt; at 11:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="dependency-management"></category><category term="virtualenv"></category><category term="pipenv"></category><category term="Python"></category><category term="pip"></category><category term="packages"></category></entry><entry><title>Predicting Human Activity using Time Series Analysis</title><link href="https://pyvideo.org/pycon-italia-2019/predicting-human-activity-using-time-series-analysis.html" rel="alternate"></link><published>2019-05-04T00:00:00+00:00</published><updated>2019-05-04T00:00:00+00:00</updated><author><name>Akul Mehra</name></author><id>tag:pyvideo.org,2019-05-04:pycon-italia-2019/predicting-human-activity-using-time-series-analysis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Time series is referred to as sequence of data points measured over
successive intervals of time. Time series analysis is performed to
extract meaningful statistics and characteristics of the data. For
example, this analysis can be used to predict future based on the past
events. Such use cases of this analysis are stock market prediction,
weather prediction and web traffic prediction.&lt;/p&gt;
&lt;p&gt;In this talk, we’ll be understanding the basics and how to perform time
series analysis and machine learning for a given dataset. For this talk,
we’ll be using the UCI Human Activity Recognition (HAR) Data Set to
classify a given activity performed by the human as one of the following
activities: Walking, Sitting, Standing or Laying.&lt;/p&gt;
&lt;p&gt;The talk would be intermediate level and basics of Python and Pandas are
required. Understanding of Machine Learning algorithms and signal
processing would be helpful.&lt;/p&gt;
&lt;p&gt;Feedback form: &lt;a class="reference external" href="https://python.it/feedback-1576"&gt;https://python.it/feedback-1576&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Saturday 4 May&lt;/strong&gt; at 18:00 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="TimeSeriesAnalysis"></category><category term="data-science"></category><category term="machine-language"></category><category term="Python"></category><category term="data-exploration"></category><category term="Data-Scientist"></category><category term="MachineLearning"></category><category term="TimeSeries"></category><category term="pandas"></category><category term="DataEngineering"></category></entry><entry><title>Scrivere i primi test frontend con python? Si Può!</title><link href="https://pyvideo.org/pycon-italia-2019/scrivere-i-primi-test-frontend-con-python-si-puo.html" rel="alternate"></link><published>2019-05-04T00:00:00+00:00</published><updated>2019-05-04T00:00:00+00:00</updated><author><name>Fiorella De Luca</name></author><id>tag:pyvideo.org,2019-05-04:pycon-italia-2019/scrivere-i-primi-test-frontend-con-python-si-puo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://splinter.readthedocs.io/en/latest/"&gt;Splinter&lt;/a&gt; è uno
strumento open source per testare le applicazioni web usando Python. Ti
consente di automatizzare le azioni del browser, come visitare URL e
interagire con i loro elementi. Vi parlerò di come realizzare i test
frontend utilizzando Splinter, perché usarlo per il frontend, cosa
differenzia Splinter dagli altri tool ma sopratutto come integrarlo nei
nostri progetti Django.&lt;/p&gt;
&lt;p&gt;Lo scopo di questo talk è di presentare le potenzialità di Splinter,
inoltre verranno mostrati dei casi d’uso e le informazioni necessarie
per poterlo installare e utilizzare.&lt;/p&gt;
&lt;p&gt;Il talk è rivolto a sviluppatori web con esperienza in python.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1730"&gt;https://python.it/feedback-1730&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Saturday 4 May&lt;/strong&gt; at 12:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="#splinter"></category><category term="#selenium"></category><category term="#Python"></category></entry><entry><title>Sviluppare per Alexa in Python</title><link href="https://pyvideo.org/pycon-italia-2019/sviluppare-per-alexa-in-python.html" rel="alternate"></link><published>2019-05-04T00:00:00+00:00</published><updated>2019-05-04T00:00:00+00:00</updated><author><name>Alberto Anceschi</name></author><id>tag:pyvideo.org,2019-05-04:pycon-italia-2019/sviluppare-per-alexa-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In questo talk verrà mostrato come sviluppare una Skill per Amazon Alexa
in italiano. Verranno presentati i concetti e le metodologie utili allo
sviluppo di un’interfaccia vocale, le risorse e gli strumenti a
disposizione dello sviluppatore ed infine i requisiti qualitativi da
rispettare affinché la Skill sviluppata venga pubblicata sullo store. La
Skill fornirà insight sul traffico del sito web, interfacciandosi con
Google Analytics attraverso autenticazione dell’utente. Requisiti:
serverless (AWS Lambda), Oauth.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1676"&gt;https://python.it/feedback-1676&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Saturday 4 May&lt;/strong&gt; at 11:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="#assistant"></category><category term="#Python"></category><category term="#google"></category><category term="#api"></category><category term="#voice"></category><category term="#alexa"></category><category term="#analytics"></category></entry><entry><title>Hearing Colours and Seeing Sounds using Python</title><link href="https://pyvideo.org/pycon-italia-2019/hearing-colours-and-seeing-sounds-using-python.html" rel="alternate"></link><published>2019-05-03T00:00:00+00:00</published><updated>2019-05-03T00:00:00+00:00</updated><author><name>Aakanksha Chouhan</name></author><id>tag:pyvideo.org,2019-05-03:pycon-italia-2019/hearing-colours-and-seeing-sounds-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;We humans are the masterpieces. We are born with awesome capabilities
and applaudable talents making us different from one another. As an
individual , nobody thinks the way others do , they have their own
intriguing ways to look at this world. Few of us have this exceptional
quality to be able to visualise sounds and map colours with the words.
It is termed as Synesthesia. It is fascinating to know how human brain
can see sounds and hear colours, how it thinks of a word, and sees
blocks of colours, and then these blocks get translated into letters.
There are few who see the letters with a halo-effect. The letters
give- off almost a glow of a certain colour.It is a striking fact that
the synesthetic brains are wired a little differently from the ones of
non-synesthetes.&lt;/div&gt;
&lt;div class="line"&gt;This talk will cover the interesting applications of python
programming by harnessing simple mathematical techniques to simulate
the synesthetic ( bridging modalities) behaviour of brain. It is
really appealing to be able to look at the world wearing colourful
shades and building an AI that does bridge these modalities (vision ,
hearing ,etc ) is truly astounding. The talk covers an interesting
viewpoint on how python can be used widely to analyse some of the
really complex human brain behaviours ,in addition to solving
comparatively trivial real world problems.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Link to the slides :
&lt;a class="reference external" href="https://speakerdeck.com/aakanksha07/hearing-colours-and"&gt;https://speakerdeck.com/aakanksha07/hearing-colours-and&lt;/a&gt;-
seeing-sounds-using-python?slide=28&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1776"&gt;https://python.it/feedback-1776&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 10:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="Algorithms"></category><category term="Artificial Intelligence"></category><category term="Machine Learning"></category></entry><entry><title>Using Python to create political acts</title><link href="https://pyvideo.org/pycon-italia-2019/using-python-to-create-political-acts.html" rel="alternate"></link><published>2019-05-03T00:00:00+00:00</published><updated>2019-05-03T00:00:00+00:00</updated><author><name>Felipe Cabral</name></author><id>tag:pyvideo.org,2019-05-03:pycon-italia-2019/using-python-to-create-political-acts.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Last Pycon Italia I showed how my team has using Python and Data Science
to fight corruption - &lt;a class="reference external" href="https://www.youtube.com/watch?v=JiJ5a4CXRF8&amp;amp;t=8s"&gt;https://www.youtube.com/watch?v=JiJ5a4CXRF8&amp;amp;t=8s&lt;/a&gt;
This time I want to show something that can be replicated in Italy right
after we finish the presentation.&lt;/p&gt;
&lt;p&gt;As &amp;#64;participatory (World Bank Internet impact researcher) says, every
country has a good response for public pressure across the internet, and
this response is even better within autocratic governments because they
want to keep healthy international relations. But how we can keep a
record of all the drafts of legislation that are happening right now?
How we can use this information and create an action for the public to
show their agreement or not for every change that happens.&lt;/p&gt;
&lt;p&gt;With Scrapy, Python, Django, and Open source! Let me show you how has
been done in Brazil and the Pipeline that makes possible to replicated
here in Italy!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1702"&gt;https://python.it/feedback-1702&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 10:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="web-scraping"></category><category term="Python"></category><category term="programming"></category><category term="scrapy"></category><category term="api"></category><category term="open-data"></category><category term="opendata"></category><category term="hacking"></category></entry><entry><title>Final Remarks and Conference Close for PyCon 2019</title><link href="https://pyvideo.org/pycon-us-2019/final-remarks-and-conference-close-for-pycon-2019.html" rel="alternate"></link><published>2019-05-05T00:00:00+00:00</published><updated>2019-05-05T00:00:00+00:00</updated><author><name>Ernest W. Durbin III</name></author><id>tag:pyvideo.org,2019-05-05:pycon-us-2019/final-remarks-and-conference-close-for-pycon-2019.html</id><summary type="html"></summary><category term="coding"></category><category term="ernest"></category><category term="pycon"></category><category term="python"></category><category term="tutorial"></category></entry><entry><title>Building your own conversational AI with open source tools</title><link href="https://pyvideo.org/pycon-de-2018/building-your-own-conversational-ai-with-open-source-tools.html" rel="alternate"></link><published>2018-10-26T00:00:00+00:00</published><updated>2018-10-26T00:00:00+00:00</updated><author><name>Justina Petraitytė</name></author><id>tag:pyvideo.org,2018-10-26:pycon-de-2018/building-your-own-conversational-ai-with-open-source-tools.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Conversational AI is far from being a solved problem, but you don’t need
to rely on third-party APIs to build great chat and voice apps.&lt;/p&gt;
&lt;p&gt;In this talk we will live-code a useful, engaging conversational AI bot
based entirely on machine learning. We’ll be using Rasa NLU &amp;amp; Rasa Core,
which are open source libraries for building machine learning-based
chatbots and voice assistants. We will teach our system how to hold
multi-turn conversations by creating some initial training data, and
then refine its behaviour by interacting with the system and providing
feedback. We will cover the fundamentals of conversational AI, including
the most important algorithms for intent classification, entity
extraction, and dialogue management.&lt;/p&gt;
&lt;p&gt;What will attendees learn:&lt;/p&gt;
</summary><category term="Artificial Intelligence"></category><category term="NLP"></category><category term="Machine Learning"></category><category term="Python"></category></entry><entry><title>Concurrency in Python - concepts, frameworks and best practices</title><link href="https://pyvideo.org/pycon-de-2018/concurrency-in-python-concepts-frameworks-and-best-practices.html" rel="alternate"></link><published>2018-10-26T00:00:00+00:00</published><updated>2018-10-26T00:00:00+00:00</updated><author><name>Stefan Schwarzer</name></author><id>tag:pyvideo.org,2018-10-26:pycon-de-2018/concurrency-in-python-concepts-frameworks-and-best-practices.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you run in situations where concurrent execution could speed up
your Python code? Are you using a GUI toolkit?&lt;/p&gt;
&lt;p&gt;This talk gives you the background to use concurrency in your code
without shooting yourself in the foot - which is quite easy if you don't
understand how concurrent execution differs from linear execution!&lt;/p&gt;
&lt;p&gt;The presentation starts with explaining some concepts like concurrency,
parallelism, resources, atomic operations, race conditions and
deadlocks.&lt;/p&gt;
&lt;p&gt;Then we discuss the commonly-used approaches to concurrency:
multithreading with the &lt;tt class="docutils literal"&gt;threading&lt;/tt&gt; module, multiprocessing with the
&lt;tt class="docutils literal"&gt;multiprocessing&lt;/tt&gt; module, and event loops (which include the
&lt;tt class="docutils literal"&gt;asyncio&lt;/tt&gt; framework). Each of these approaches has its typical use
cases, which are explained.&lt;/p&gt;
&lt;p&gt;You can implement concurrency on a number of abstraction levels. The
lowest level consists of primitives like locks, events, semaphores and
so on. A higher abstraction level is using queues, typically with worker
threads or processes. Even higher abstraction levels are active objects
(hiding primitives or queues behind an API; this includes &amp;quot;actors&amp;quot; if
you heard of them), the thread and process pools in
&lt;tt class="docutils literal"&gt;concurrent.futures&lt;/tt&gt; and the &lt;tt class="docutils literal"&gt;asyncio&lt;/tt&gt; framework. Finally, you can
&amp;quot;outsource&amp;quot; concurrency by leaving it to a message broker, which is a
distinct process that receives and distributes messages.&lt;/p&gt;
&lt;p&gt;The talk closes with some tips and best practices, mainly:&lt;/p&gt;
</summary><category term="Parallel Programming"></category><category term="Programming"></category><category term="Python"></category></entry><entry><title>Python Decorators: Gift or Poison?</title><link href="https://pyvideo.org/pycon-de-2018/python-decorators-gift-or-poison.html" rel="alternate"></link><published>2018-10-26T00:00:00+00:00</published><updated>2018-10-26T00:00:00+00:00</updated><author><name>Anastasiia Tymoshchuk</name></author><id>tag:pyvideo.org,2018-10-26:pycon-de-2018/python-decorators-gift-or-poison.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why would you ever need to use decorators in Python? Have you ever had
the task when you need to use one function in few places and you really
wanted to avoid of code duplicating? For example to add some logging
into functions or timers, etc. Decorators in Python are super powerful
with these tasks, but at the same time they are super complicated,
sometimes even magical. When I started learning Python, Decorators were
really like a magic: how to use them, how are they working, lots of
questions. The goal is to make the things easier and clear to answer a
question: to use or not to use Decorators in your project.&lt;/p&gt;
</summary><category term="Python"></category></entry><entry><title>Beyond Jupyter Notebooks - Building your own Data Science platform with Python &amp; Docker</title><link href="https://pyvideo.org/pycon-de-2018/beyond-jupyter-notebooks-building-your-own-data-science-platform-with-python-docker.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Joshua Görner</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/beyond-jupyter-notebooks-building-your-own-data-science-platform-with-python-docker.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Interactive notebooks like Jupyter have become more and more popular in
the recent past and build the core of many data scientist's workplace.
Being accessed via web browser they allow scientists to easily structure
their work by combining code and documentation.&lt;/p&gt;
&lt;p&gt;Yet notebooks often lead to isolated and disposable analysis artefacts.
Keeping the computation inside those notebooks does not allow for
convenient concurrent model training, model exposure or scheduled model
retraining.&lt;/p&gt;
&lt;p&gt;Those issues can be addressed by taking advantage of recent developments
in the discipline of software engineering. Over the past years
containerization became the technology of choice for crafting and
deploying applications. Building a data science platform that allows for
easy access (via notebooks), flexibility and reproducibility (via
containerization) combines the best of both worlds and addresses Data
Scientist's hidden needs.&lt;/p&gt;
</summary><category term="Artificial Intelligence"></category><category term="Algorithms"></category><category term="Data Science"></category><category term="DevOps"></category><category term="Infrastructure"></category><category term="Jupyter"></category><category term="Machine Learning"></category><category term="Programming"></category><category term="Python"></category></entry><entry><title>Big Data Systems Performance: The Little Shop of Horrors</title><link href="https://pyvideo.org/pycon-de-2018/big-data-systems-performance-the-little-shop-of-horrors.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Jens Dittrich</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/big-data-systems-performance-the-little-shop-of-horrors.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The confusion around terms such as like NoSQL, Big Data, Data Science,
Spark, SQL, and Data Lakes often creates more fog than clarity. However,
clarity about the underlying technologies is crucial to designing the
best technical solution in any field relying on huge amounts of data
including data science, machine learning, but also more traditional
analytical systems such as data integration, data warehousing,
reporting, and OLAP.&lt;/p&gt;
&lt;p&gt;In my presentation, I will show that often at least three dimensions are
cluttered and confused in discussions when it comes to data management:
First, buzzwords (labels &amp;amp; terms like &amp;quot;big data&amp;quot;, &amp;quot;AI&amp;quot;, &amp;quot;data lake&amp;quot;);
second, data design patterns (principles &amp;amp; best practices like:
selection push-down, materialization, indexing); and Third, software
platforms (concrete implementations &amp;amp; frameworks like: Python, DBMS,
Spark, and NoSQL-systems).&lt;/p&gt;
&lt;p&gt;Only by keeping these three dimensions apart, it is possible to create
technically-sound architectures in the field of big data analytics.&lt;/p&gt;
&lt;p&gt;I will show concrete examples, which through a simple redesign and wise
choice of the right tools and technologies, run thereby up to 1000 times
faster. This in turn triggers tremendous savings in terms of development
time, hardware costs, and maintenance effort.&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Big Data"></category><category term="Data Science"></category><category term="Infrastructure"></category><category term="Parallel Programming"></category><category term="Programming"></category><category term="Python"></category><category term="Science"></category></entry><entry><title>Driving simulation and data analysis of magnetic nanostructures through Jupyter Notebook</title><link href="https://pyvideo.org/pycon-de-2018/driving-simulation-and-data-analysis-of-magnetic-nanostructures-through-jupyter-notebook.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Hans Fangohr</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/driving-simulation-and-data-analysis-of-magnetic-nanostructures-through-jupyter-notebook.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We present ongoing work from a project that makes a particular computer
simulation (implemented in C++ and Tk/Tcl) accessible through a Python
interface, and through the Jupyter Notebook. The talk describes the
motivation and current status of the project.&lt;/p&gt;
&lt;p&gt;In more detail, the computer simulation in question is the Object
Oriented Micromagnetic Modelling Framework
(&lt;a class="reference external" href="http://math.nist.gov/oommf/"&gt;OOMMF&lt;/a&gt;) which is likely the most
widely used micromagnetic simulation package. It can be driven through a
graphical (Tk) user interface or through a configuration file that
defines a simulation run.&lt;/p&gt;
&lt;p&gt;In this talk, we first show a Python interface to OOMMF that allows the
driving of OOMMF simulations from a Python program or interpreter
prompt. This way we embed a widely used scientific code from 1990s in a
general purpose programming language
[&lt;a class="reference external" href="https://doi.org/10.1063/1.4977225"&gt;1&lt;/a&gt;] and enable the full use of
the ecosystem of scientific libraries available for Python. For example,
design optimisation, specialised post-processing, and the creation of
figures can all be carried out using a single script; making the work
more easily reproducible.&lt;/p&gt;
&lt;p&gt;Second, we integrate the Python interface to OOMMF into a Jupyter
notebook, so that all existing benefits of using Jupyter are inherited
for the use in computational micromagnetics, which is the reason we
named our code Jupyter- OOMMF (&lt;a class="reference external" href="http://joommf.github.io/"&gt;JOOMMF&lt;/a&gt;). A
&lt;a class="reference external" href="https://tryjoommf.soton.ac.uk/"&gt;JupyterHub installation&lt;/a&gt; of the tool
reduces barriers in uptake, and all the code is &lt;a class="reference external" href="https://github.com/joommf"&gt;on
github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We discuss the benefits of driving computer simulation and data analysis
through Jupyter Notebooks.&lt;/p&gt;
&lt;p&gt;This project is a part of the Jupyter-OOMMF (JOOMMF) activity in the
&lt;a class="reference external" href="http://opendreamkit.org/"&gt;OpenDreamKit&lt;/a&gt; project and we acknowledge
financial support from Horizon 2020 European Research Infrastructures
project (676541). The work is also supported by the EPSRC CDT in Next
Generation Computational Modelling EP/L015382/1, and the EPSRC grants
EP/M022668/1 and EP/N032128/1.&lt;/p&gt;
&lt;p&gt;For additional context: micromagnetic modelling is a key research method
in academia and industry to support development of high-capacity
magnetic storage devices that are cheap, fast, and reliable, and to
enable research into future alternative storage and processing
technologies such as spintronics. The OOMMF modelling package has been
used in &lt;a class="reference external" href="https://math.nist.gov/oommf/oommf_cites.html"&gt;over 2500
publications&lt;/a&gt; since
1999.&lt;/p&gt;
&lt;p&gt;[1] Beg, M., Pepper, R. A., and Fangohr, H. User interfaces for
computational science: A domain specific language for OOMMF embedded in
Python. AIP Advances 7, 056025 (2017), &lt;a class="reference external" href="https://doi.org/10.1063/1.4977225"&gt;https://doi.org/10.1063/1.4977225&lt;/a&gt;&lt;/p&gt;
</summary><category term="Data Science"></category><category term="Jupyter"></category><category term="Programming"></category><category term="Python"></category><category term="Science"></category></entry><entry><title>How to teach space invaders to your computer</title><link href="https://pyvideo.org/pycon-de-2018/how-to-teach-space-invaders-to-your-computer.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>David Wölfle</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/how-to-teach-space-invaders-to-your-computer.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;First things first: playing good old Atari games might be cool but why
should I write a program for doing it? Well teaching a computer to play
a game means teaching it to develop strategies and use foresight
planning to solve a certain problem. The tools you gather while solving
i.e. space invaders are the same you may use to solve any problem which
requires a sequential set of decisions in order to find an optimal
solution to some problem, like i.e. controlling a robot that collects
garbage. Furthermore, there is a lot of scientific research on
reinforcement learning that focuses on solving Atari games which makes
it a good starting point, as large amounts of publications and open
source code already exists.&lt;/p&gt;
&lt;p&gt;What to expect from this talk? At first there will be a very short
introduction to reinforcement learning theory, just the very basics,
common applications and some references for further reading. Next points
are, how to run Atari games from inside python for a learning task (with
OpenAI's gym), and where to find an algorithm for the actual learning
problem. Finally it will be shown how to build it all together in a
jupyter notebook and let the algorithm play the game. Et voilà that's
your computer beating you in space invaders.&lt;/p&gt;
</summary><category term="Deep Learning &amp; Artificial Intelligence"></category><category term="Jupyter"></category><category term="Python"></category><category term="Science"></category></entry><entry><title>Machine Learning as a Service: How to deploy ML Models as APIs without going nuts</title><link href="https://pyvideo.org/pycon-de-2018/machine-learning-as-a-service-how-to-deploy-ml-models-as-apis-without-going-nuts.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Anand Chitipothu</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/machine-learning-as-a-service-how-to-deploy-ml-models-as-apis-without-going-nuts.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Often, the most convenient way to deploy a machine model is an API. It
allows accessing it from various programming environments and also
decouples the development and deployment of the models from its use.&lt;/p&gt;
&lt;p&gt;However, building an good API is hard. It involves many nitty-gritties
and many of them need to repeated everytime an API is built. Also, it is
very important to have a client library so that the API can be easily
accessed. If you every plan to use it from Javascript directly, then you
need to worry about cross-origin-resource-sharing etc. All things add up
and building APIs for machine very tedious.&lt;/p&gt;
&lt;p&gt;In this talk demonstrates how deploying machine learning models an APIs
can be made fun by using right programming abstractions. This presents
couple of opensource libraries
&lt;a class="reference external" href="https://firefly-%20python.readthedocs.io/en/latest/"&gt;firefly&lt;/a&gt; and
&lt;a class="reference external" href="https://rorodata.github.io/rorolite/"&gt;rorolite&lt;/a&gt; which are built for
this very purpose.&lt;/p&gt;
</summary><category term="Machine Learning"></category><category term="Python"></category><category term="Web"></category></entry><entry><title>Observe all your applications</title><link href="https://pyvideo.org/pycon-de-2018/observe-all-your-applications.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Christoph Heer</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/observe-all-your-applications.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You just deployed your new version of an application or micro-service;
how do you know everything works as expected? You run your comprehensive
test suite to verify functional correctness for known scenarios and
performance tests before deploying, but does your application really
work at the moment or is it just responding with error messages to all
incoming requests?&lt;/p&gt;
&lt;p&gt;I’m part of the team that runs a huge infrastructure for the SAP HANA
development. This infrastructure is vital for nearly all development &amp;amp;
testing activities of SAP HANA. As this infrastructure is powered by
multiple in-house developed applications, we immediately want to know if
an application starts to fail and we need to be able to quickly diagnose
what caused the failure.&lt;/p&gt;
&lt;p&gt;This talk will give you an overview how we monitor our full stack from
the 2000 physical machines up to the 10,000 parallel running Python
application processes, micro-service instances and batch processing
jobs. It includes a review about the used tools, bad and good examples
of instrumentation in Python code, the resulting visualisation and an
outlook on upcoming improvements.&lt;/p&gt;
</summary><category term="DevOps"></category><category term="Infrastructure"></category><category term="Networks"></category><category term="Programming"></category><category term="Python"></category></entry><entry><title>Processing Geodata using Python</title><link href="https://pyvideo.org/pycon-de-2018/processing-geodata-using-python.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Martin Christen</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/processing-geodata-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a large amount of Python modules available suitable for spatial
data processing. In this talk, it is shown how to analyze, manipulate
and visualize geospatial data by using open source modules. The
following modules will be introduced:&lt;/p&gt;
</summary><category term="Big Data"></category><category term="Data Science"></category><category term="Jupyter"></category><category term="Python"></category><category term="Visualisation"></category></entry><entry><title>Python on the blockchain: Triumphs and tribulations in a crypto startup</title><link href="https://pyvideo.org/pycon-de-2018/python-on-the-blockchain-triumphs-and-tribulations-in-a-crypto-startup.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>Danny McDonald</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/python-on-the-blockchain-triumphs-and-tribulations-in-a-crypto-startup.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While many cryptographic components of blockchain protocols can be
extremely complex, blockchain systems themselves are relatively easy to
understand when viewed from a distance. To take the example of Bitcoin,
users store digital currency in hardware or software wallets, and use
private keys to sign and broadcast transactions. Broadcasted
transactions are grouped together into a block through a cryptographic
process known as mining, with miners rewarded through the collection of
transaction fees and the issuance of new coins. The mined block of
transactions is appended to the existing chain, and verified by a global
network of nodes. This process repeats in perpetuity, with each newly
added block adding to the trustedness and security of data stored on the
chain.&lt;/p&gt;
&lt;p&gt;Increased interest in and demand for cryptocurrencies has brought about
a need for places where digital assets can easily be bought, sold or
traded. Our platform, Bitpanda, accomplishes this with a backend written
in Python, and relying heavily on Django and MySQL databases. In our
presentation, we begin by providing a brief overview of how blockchains
work. Following this, we describe the Python architecture that (e.g.)
generates cryptocurrency wallets, builds, signs and sends transactions,
and monitors blockchains for new, relevant data. Key challenges,
solutions and failures encountered during the development of the system,
and growth of our team, are presented.&lt;/p&gt;
&lt;p&gt;Throughout our talk, we also highlight a number of broader social
implications of blockchains, and our work with them. More specifically,
we describe the need for open-innovation based approaches to blockchain
development, the value of open-source within the blockchain community,
and the current lack of critical discourse surrounding the potential
uses of blockchains as mechanisms of surveillance and control.&lt;/p&gt;
</summary><category term="Business &amp; Start-Ups"></category><category term="Community"></category><category term="Django"></category><category term="Infrastructure"></category><category term="Python"></category></entry><entry><title>Achieving Resilient Code with Integration Tests</title><link href="https://pyvideo.org/pycon-de-2018/achieving-resilient-code-with-integration-tests.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Alexandre Figura</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/achieving-resilient-code-with-integration-tests.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You are maybe like me: I never learned at school how to write tests. My
teachers gave me at first a broad overview of computer history. Then,
they explained me some basic design patterns. And to finish, I often had
to write more or less basic programs, to validate and demonstrate my
skills. Not the kind of code I would be really proud of today: the
procrastinator monkey living in my head at this time was more thinking
about planning my summer holidays, rather than writing Ninja code!&lt;/p&gt;
&lt;p&gt;And to make things worse, my studies focused on network and system
engineering. Not software architecture. Funny story, because I decided
to become programmer a couple of years later…&lt;/p&gt;
&lt;p&gt;What I realize now is that I don’t have as much time as before to learn.
And in a world driven by business, where time is money, and where
tradeoffs are the rule, there is rarely enough money to write both shiny
new features and a complete test suite.&lt;/p&gt;
&lt;p&gt;People who practice Test-Driven Development know how complicated it can
be to write proper tests. TDD is often discouraging at first: the
learning curve is steep. But this problem also exists in the testing
world in general. Because writing good tests is hard, many beginners get
headaches trying to reach this goal. How to convince project managers to
have more time for writing tests in these conditions…&lt;/p&gt;
&lt;p&gt;But “le jeu en vaut la chandelle” as we say in French (&amp;quot;the juice is
worth the squeeze&amp;quot;). Well tested applications are not only easier to
maintain and extend. They also have in general a better API. That’s what
we will see in this talk, by focusing on how to write integration tests.
Our journey will begin with a presentation of different testing
strategies. We will then jump to the practical part, using Pytest,
interface testing , dependency injections and stubs, amongst many
others. And because we want to add nice buzzwords on our resume after
PyConDE, we will finish this talk by automating the whole with Docker
Compose.&lt;/p&gt;
</summary><category term="Programming"></category><category term="Python"></category></entry><entry><title>Active Learning - Building Semi-supervised Classifiers when Labeled Data is not Available</title><link href="https://pyvideo.org/pycon-de-2018/active-learning-building-semi-supervised-classifiers-when-labeled-data-is-not-available.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Dr. Hendrik Niemeyer</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/active-learning-building-semi-supervised-classifiers-when-labeled-data-is-not-available.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In many situations large datasets are available but unfortunately
labeling is expensive and time consuming. Active Learning is a concept
for building classifiers by letting the algorithm choose the training
data it uses. This achieves greater accuracy than just labeling a random
subset of the available dataset.&lt;/p&gt;
&lt;p&gt;The active learning algorithm selects some unlabeled data instances
which are then labeled by a human annotator. Given this information a
classifier is trained and new instances for the human annotator to label
are selected. This iterative process tries to label as few instances as
possible while achieving high classification accuracy.&lt;/p&gt;
&lt;p&gt;In this talk I will give a general overview of the core concepts and
techniques of active learning like algorithms for selecting the queries
and convergence criteria.&lt;/p&gt;
</summary><category term="Artificial Intelligence"></category><category term="Algorithms"></category><category term="Data Science"></category><category term="Machine Learning"></category><category term="Python"></category></entry><entry><title>Case Study in Travel Business - Understanding agent connections using NetworkX</title><link href="https://pyvideo.org/pycon-de-2018/case-study-in-travel-business-understanding-agent-connections-using-networkx.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Cheuk Ting Ho</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/case-study-in-travel-business-understanding-agent-connections-using-networkx.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Network analysis is getting more and more attention in Business
Intelligence, people hope to get information out of the structure of an
organization or a communication network. In this talk, we use the hotel
room search requests from travel agents, including online public
website, B2C, B2B and B2B2C, to build a relational network among them.
By using this network as an example, we demonstrate how insights can be
extract by studying network properties.&lt;/p&gt;
&lt;p&gt;In the first half of the talk, we will explain how the network is built
using NetworkX, an open-source python library that is designed for the
creation, manipulation, and study of the structure, dynamics, and
functions of complex networks. When 2 agents are making the same search
at the same time , a link ( or an “edge” in network analysts terms) is
made pointing form the initial searcher to the subsequent searcher.
Using a list of these searches, a directed graph is built. We will also
demonstrate how to pick the biggest connected component out form the
graph. In the second half, with the graphs created, we show how
different functions of NetworkX can be used to study the graphs. By
compare the graph properties of our graph to the other popular network
graphs, we can get the insight of how the network was created. Also by
studying the graphs, we can understand the behavior of the agents and
can even figure out which agents are acting as main hubs in the network.&lt;/p&gt;
&lt;p&gt;This talk is for people who are interested in network analysis and would
like to see how it can be used in a business case. Audiences with any
level of python experience can learn some basic concept of network
analysis work and how it can be applied to provide business insights.&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Networks"></category><category term="Python"></category></entry><entry><title>Introduction and practical experience about Quantum Computing using the Python libraries from IBM and Google</title><link href="https://pyvideo.org/pycon-de-2018/introduction-and-practical-experience-about-quantum-computing-using-the-python-libraries-from-ibm-and-google.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Dr. Andreas Riegg</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/introduction-and-practical-experience-about-quantum-computing-using-the-python-libraries-from-ibm-and-google.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As publicly announced in early 2018, Daimler AG has started cooperations
with IBM and Google on Quantum Computing. When doing concrete
experiments with the Quantum Computing cloud based offerings, two
different Python libraries provided by IBM and Google are used. They are
named QISKIT in the case of IBM and CIRQ in the case of Google. The
experiments with both libraries are handled using appropriate Jupyter
Notebooks. This talk gives a brief introduction on Quantum Computing,
specifically on Quantum Computers based on transmon-based QBits. This is
followed by an introduction of the both Python libraries that are used.
Then some details about the Jupyter notebooks that are used are given.
The talk will finish with some demos and an overview about the most
important practical experiences with both Quantum Computing offerings.&lt;/p&gt;
</summary><category term="Jupyter"></category><category term="Programming"></category><category term="Python"></category><category term="Science"></category></entry><entry><title>IoT using Python on Linux: Lessons Learned</title><link href="https://pyvideo.org/pycon-de-2018/iot-using-python-on-linux-lessons-learned.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Thomas Keppler</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/iot-using-python-on-linux-lessons-learned.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In a distributed sensor network system with a Java based Cloud
application, mobile apps and a proprietary radio protocol accompanying
it we developed an IoT appliance that connects the existing radio
infrastructure to the Cloud service developed in-house.&lt;/p&gt;
&lt;p&gt;Using CPython 3.5 + Debian GNU/Linux 9 on an ARMv7 platform, we
developed the following features:&lt;/p&gt;
&lt;p&gt;Over the course of this project, we learned a lot about Test Driven
Development of Python apps in teams and DevOps in the IoT space. We
would now like to share our experience developing a Python application
for a headless IoT device and the things we would liked to have known
upfront.&lt;/p&gt;
&lt;p&gt;The talk is held both by Matthias Schmidt (Senior Architect at diva-e)
and Thomas Keppler (Software Developer at diva-e).&lt;/p&gt;
</summary><category term="DevOps"></category><category term="Infrastructure"></category><category term="Networks"></category><category term="Programming"></category><category term="Python"></category></entry><entry><title>Pyccel, a Fortran static compiler for scientific High-Performance Computing</title><link href="https://pyvideo.org/pycon-de-2018/pyccel-a-fortran-static-compiler-for-scientific-high-performance-computing.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Dr. Ing. Ratnani Ahmed</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/pyccel-a-fortran-static-compiler-for-scientific-high-performance-computing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Pyccel&lt;/em&gt; is a new &lt;strong&gt;static compiler&lt;/strong&gt; for Python that uses &lt;strong&gt;Fortran&lt;/strong&gt;
as backend language while enabling High-Performance Computing &lt;strong&gt;HPC&lt;/strong&gt;
capabilities.&lt;/p&gt;
&lt;p&gt;Fortran is a computer language for scientific programming that is
tailored for efficient run-time execution on a wide variety of
processors. Even if the &lt;em&gt;2003&lt;/em&gt; and &lt;em&gt;2008&lt;/em&gt; standards added major
improvements like &lt;em&gt;OOP, Coarrays, Submodules, do concurrent&lt;/em&gt; , etc ...
they are not covered by all available compilers. Moreover, the Fortran
developer still suffers from the lack of &lt;strong&gt;meta-programming&lt;/strong&gt; compared
to &lt;strong&gt;C++&lt;/strong&gt; ones. Therefore, it is more and more difficult for applied
mathematicians and computational physicists to write applications at the
&lt;em&gt;state of art&lt;/em&gt; (targeting CPUs, GPUs, MICs) while implementing
complicated algorithms or numerical schemes.&lt;/p&gt;
&lt;p&gt;Pyccel can be used in two cases:&lt;/p&gt;
&lt;p&gt;In order to achieve the second point, we developed an internal DSL for
&lt;em&gt;types&lt;/em&gt; and &lt;em&gt;macros&lt;/em&gt;. The later is used to map sentences based on
&lt;em&gt;mpi4py&lt;/em&gt; , &lt;em&gt;scipy.linalg.blas or lapack&lt;/em&gt; onto the appropriate calls in
Fortran. Moreover, two parsers, for &lt;em&gt;OpenMP&lt;/em&gt; and &lt;em&gt;OpenACC&lt;/em&gt; , were added
too, allowing for explicit parallelism through the use of pragmas.&lt;/p&gt;
&lt;p&gt;Last but not least, Pyccel is an extension of &lt;strong&gt;Sympy&lt;/strong&gt;. Actually, it
converts a Python code to symbolic expressions/trees, from a Full Syntax
Tree ( &lt;em&gt;RedBaron&lt;/em&gt; ), then annotates the new AST using types or different
settings provided by the user.&lt;/p&gt;
&lt;p&gt;In this talk, after a brief description of Pyccel, I will show different
applications including Finite Elements (1d, 2d, 3d), Semi-Lagrangian
schemes (4d), Kronecker linear solvers, diagnostics for 5D kinetic
simulations and Machine Learning for Partial Differential Equations.&lt;/p&gt;
</summary><category term="Artificial Intelligence"></category><category term="Algorithms"></category><category term="Astronomy"></category><category term="Parallel Programming"></category><category term="Programming"></category><category term="Python"></category><category term="Science"></category></entry><entry><title>Scalable Scientific Computing using Dask</title><link href="https://pyvideo.org/pycon-de-2018/scalable-scientific-computing-using-dask.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Uwe L. Korn</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/scalable-scientific-computing-using-dask.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;</summary><category term="Algorithms"></category><category term="Big Data"></category><category term="Data Science"></category><category term="Parallel Programming"></category><category term="Python"></category></entry><entry><title>Script, Library, or Executable: You can have it all!</title><link href="https://pyvideo.org/pycon-de-2018/script-library-or-executable-you-can-have-it-all.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Luke Lee</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/script-library-or-executable-you-can-have-it-all.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will describe one possible way to achieve this using the following
features:&lt;/p&gt;
&lt;p&gt;We want to create a package layout that can support a CLI interface, an
importable library, and a GUI all while sharing as much code as
possible.&lt;/p&gt;
&lt;p&gt;Although text and graphical interfaces are very different we can provide
a consistent API with careful consideration. This way users can easily
use our library or either interface without starting all over again.&lt;/p&gt;
&lt;p&gt;First we will layout a single-file CLI script using argparse similar to
the Unix &lt;tt class="docutils literal"&gt;wc&lt;/tt&gt; tool that takes a text file and outputs the following
information:&lt;/p&gt;
&lt;p&gt;We'll discuss the &lt;tt class="docutils literal"&gt;__name__ == __main__&lt;/tt&gt; Python idiom, separating the
argument parsing from the main function, and why keeping as little as
possible in &lt;tt class="docutils literal"&gt;__main__&lt;/tt&gt; is better for reusability.&lt;/p&gt;
&lt;p&gt;There are several pros and cons to providing others with a single-file
script. It's easy to develop and simple to read, but it requires any
user to have the correct version of Python installed. It's also
difficult for other developers to reuse the code in their own projects
or deploy to PyPI.&lt;/p&gt;
&lt;p&gt;Next we'll take our single-file script and expand it into a basic Python
package using a main folder, &lt;strong&gt;init&lt;/strong&gt;.py, and a cli.py script to expose
the same CLI as before.&lt;/p&gt;
&lt;p&gt;We'll discuss how to restructure the main and parsing functions from
step 1 into an public API defined by the &lt;strong&gt;init&lt;/strong&gt;.py that exposes the
same CLI functionality as a library.&lt;/p&gt;
&lt;p&gt;We won't dive into setup.py at all, but there will be links and a brief
description on the various tools to layout a package such as
cookiecutter and setup.py.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://github.com/chriskiehl/Gooey"&gt;Gooey&lt;/a&gt; project can easily
expose a CLI as GUI with a few decorators. We'll discuss briefly how to
use Gooey and some of the extra functionality it provides to create more
advanced GUIs.&lt;/p&gt;
&lt;p&gt;We'll also give a simple mental model for how it maps argparse argument
types to GUI widgets.&lt;/p&gt;
&lt;p&gt;Until step 3 all we required of users was a working Python 3
installation. However, adding Gooey requires users to have a working
Python installer, the Gooey library, and wxPython. Typically GUIs are
meant for higher-level users so asking them to install all of this to
benefit from our little app is too much.&lt;/p&gt;
&lt;p&gt;Instead we'll see how we run PyInstaller on our entry script to package
up all our dependencies &lt;strong&gt;including&lt;/strong&gt; Python itself into a simple
executable. We'll briefly discuss the build and dist output folders from
PyInstaller along with the ability to use it to package all sorts of
complicated Python applications using Qt, Numpy, etc.&lt;/p&gt;
&lt;p&gt;End-users in management don't even have to know we used Python!&lt;/p&gt;
</summary><category term="Programming"></category><category term="Python"></category></entry><entry><title>Selinon - dynamic distributed task flows</title><link href="https://pyvideo.org/pycon-de-2018/selinon-dynamic-distributed-task-flows.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Fridolín Pokorný</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/selinon-dynamic-distributed-task-flows.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever tried to define and process complex workflows for data
processing? If the answer is yes, you might have struggled to find the
right framework for that. You've probably came across Celery - popular
task flow management for Python. Celery is great, but it does not
provide enough flexibility and dynamic features needed badly in complex
flows. As we discovered all the limitations, we decided to implement
Selinon.&lt;/p&gt;
&lt;p&gt;Have you ever tried to define and process complex workflows for data
processing? If the answer is yes, you might have struggled to find the
right framework for that. You've probably came across Celery - popular
task flow management for Python. Celery is great, but it does not
provide enough flexibility and dynamic features needed badly in complex
flows. As we discovered all the limitations, we decided to implement
Selinon.&lt;/p&gt;
&lt;p&gt;Selinon enhances Celery task flow management and allows you to create
and model task flows in your distributed environment that can
dynamically change behavior based on computed results in your cluster,
automatically resolve tasks that need to be executed in case of
selective task runs, automatic tracing mechanism and many others.&lt;/p&gt;
</summary><category term="Big Data"></category><category term="Infrastructure"></category><category term="Parallel Programming"></category><category term="Programming"></category><category term="Python"></category></entry><entry><title>Testing in Python - The Big Picture</title><link href="https://pyvideo.org/pycon-de-2018/testing-in-python-the-big-picture.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Niklas Meinzer</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/testing-in-python-the-big-picture.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Any team developing and maintaining software - be it free and open
source or commercial - employs one form of software testing or another.
But what are the different kinds of tests in our tool boxes? And how are
they best used? In this talk we'll take a look around and try to answer
these questions.&lt;/p&gt;
&lt;p&gt;First, we'll examine the basic concepts of testing: Everyone has
probably at least heard about &lt;em&gt;unit tests&lt;/em&gt; , but are they all you need?
&lt;em&gt;Performance tests&lt;/em&gt; can help you find out how well your product performs
under load and detect bottle necks early on. &lt;em&gt;Manual testing&lt;/em&gt; is often
looked down upon, since it's not automated, but is it always a bad idea?
And what even &lt;em&gt;is&lt;/em&gt; &lt;em&gt;mutation testing&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;We'll also get to know a lot of the amazing testing tools from the
Python ecosystem. Find out what the best test runner is (Spoiler alert:
it's pytest). Learn how to make writing test more fun and less work
using tools like mock, Faker and factory_boy. Measure the quality of
your test suite using coverage.py.&lt;/p&gt;
&lt;p&gt;But no tool is the right one for any situation. We'll also talk about
when and how to use each of the tools, while debunking common
misconceptions and demonstrating best practices.&lt;/p&gt;
</summary><category term="Programming"></category><category term="Python"></category></entry><entry><title>Django-freeradius</title><link href="https://pyvideo.org/pycon-italia-2018/django-freeradius.html" rel="alternate"></link><published>2018-04-22T00:00:00+00:00</published><updated>2018-04-22T00:00:00+00:00</updated><author><name>Fiorella De Luca</name></author><id>tag:pyvideo.org,2018-04-22:pycon-italia-2018/django-freeradius.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://freeradius.org/"&gt;Freeradius&lt;/a&gt; è il server Radius open source
più popolare e diffuso al mondo e supporta tutti i protocolli di
autenticazione più comuni. Per renderne più agevole l’utilizzo,
all’interno della comunità OpenWISP è stato deciso di sviluppare
django-freeradius. Si tratta di un’interfaccia web per gestire i
database Freeradius basata su Django che si avvale delle RESTful API per
gestire l’autorizzazione, la post autenticazione e l’accounting di
freeradius. Django-freeradius è un’ app riutilizzabile ed estensibile.
In questo talk vi parlerò di come ho implementato questo primo nucleo di
django-freeradius durante il Google Summer of Code 2017.&lt;/p&gt;
&lt;p&gt;Lo scopo di questo talk è di presentare le potenzialità di
django-freeradius, inoltre verrà mostrato un caso d’uso e le
informazioni necessarie per poterlo installare e utilizzare nella vostra
infrastruttura.&lt;/p&gt;
&lt;p&gt;Il talk è rivolto a sviluppatori web con esperienza in django e/o a
programmatori con conoscenze di freeradius.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 12:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="web"></category><category term="radius"></category><category term="django-rest-framework"></category><category term="django"></category></entry><entry><title>Il rasoio dei generatori di Python per semplificare il codice e ridurre l'uso di memoria</title><link href="https://pyvideo.org/pycon-italia-2018/il-rasoio-dei-generatori-di-python-per-semplificare-il-codice-e-ridurre-luso-di-memoria.html" rel="alternate"></link><published>2018-04-22T00:00:00+00:00</published><updated>2018-04-22T00:00:00+00:00</updated><author><name>Davide Brunato</name></author><id>tag:pyvideo.org,2018-04-22:pycon-italia-2018/il-rasoio-dei-generatori-di-python-per-semplificare-il-codice-e-ridurre-luso-di-memoria.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I generatori sono una delle caratteristiche più avanzate di Python ma
anche meglio integrate con le altre parti del linguaggio e con una
sintassi molto simile ad altri costrutti. In particolare Python 3 fa un
utilizzo più esteso dei iteratori anche nelle funzioni base e semplifica
ulteriormente l’uso dei generatori. In questa presentazione illustrerei
il funzionamento delle funzioni generatrici e dei generatori partendo
dalle basi dell’iterazione. Analizzerei inoltre i vantaggi che i
generatori possono portare nella semplificazione del codice e nella
riduzione dell’uso di memoria, con degli esempi di codice e di misura
delle prestazioni e delle risorse utilizzate. Come esempio conclusivo
presenterei un modulo per il parsing di XPath, completamente basato sui
generatori.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 12:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="iterators"></category><category term="xpath"></category><category term="Python"></category><category term="generators"></category></entry><entry><title>Integration tests ready to use with pytest-play</title><link href="https://pyvideo.org/pycon-italia-2018/integration-tests-ready-to-use-with-pytest-play.html" rel="alternate"></link><published>2018-04-22T00:00:00+00:00</published><updated>2018-04-22T00:00:00+00:00</updated><author><name>Serena Martinetti</name></author><id>tag:pyvideo.org,2018-04-22:pycon-italia-2018/integration-tests-ready-to-use-with-pytest-play.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In my talk I will introduce a new pytest plugin with which it is very
easy (even for non-technical) go to create and run new integration
testing at any level of IOT complex systems.&lt;/p&gt;
&lt;p&gt;pytest-play is a pytest plugin that allows you to play a JSON file that
describes some actions and assertions. We can use actions like: -
Selenium, driving the browser for the UI test - MQTT messages,
simulating a device - API calls - queries to Cassandra or PostgresSQL
(in the future) - custom commands, thanks to the pluggable architecture
Other advantages: - UI tests more reliable with implicit waits before
interacting with the elements - BDD support to make the scenario more
legible - reusability of steps&lt;/p&gt;
&lt;p&gt;I will show you how easy it is to create a json and execute it on the
fly on a Continuous Integration system. So let’s start having fun in
testing with pytest-play.&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="continuous-integration"></category><category term="open source"></category><category term="Python"></category><category term="testing"></category><category term="selenium"></category><category term="integration"></category><category term="api"></category><category term="pytest"></category><category term="Functional Testing"></category></entry><entry><title>Practical Machine Learning with Python and scikit-learn</title><link href="https://pyvideo.org/pycon-italia-2018/practical-machine-learning-with-python-and-scikit-learn.html" rel="alternate"></link><published>2018-04-22T00:00:00+00:00</published><updated>2018-04-22T00:00:00+00:00</updated><author><name>Andrea Grandi</name></author><id>tag:pyvideo.org,2018-04-22:pycon-italia-2018/practical-machine-learning-with-python-and-scikit-learn.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A tutorial for intermediate Python developers with none or little
knowledge about Machine Learning.&lt;/p&gt;
&lt;p&gt;After presenting an existing dataset and giving a bit of context about
the problem, I will show step by step how to analyse it, train a
supervised classification model, optimise it and make predictions.&lt;/p&gt;
&lt;p&gt;During the tutorial we will make use of the following libraries and
tools: pandas, jupyter, matplotlib, numpy, scikit-learn, scipy.&lt;/p&gt;
&lt;p&gt;Even if it won’t be possible to follow each singular attendee, it’s
strongly suggested to have a laptop ready with Python 3 installed and a
virtual environment properly configured and ready to be used. In this
way attendees will have the possibility to try the shown code and
examples.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 11:15 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="Data-Scientist"></category><category term="scikit-learn"></category><category term="machine-learning"></category></entry><entry><title>Python e Elasticsearch: dal Text Search a NLP e oltre</title><link href="https://pyvideo.org/pycon-italia-2018/python-e-elasticsearch-dal-text-search-a-nlp-e-oltre.html" rel="alternate"></link><published>2018-04-22T00:00:00+00:00</published><updated>2018-04-22T00:00:00+00:00</updated><author><name>Dario Balinzo</name></author><id>tag:pyvideo.org,2018-04-22:pycon-italia-2018/python-e-elasticsearch-dal-text-search-a-nlp-e-oltre.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il Talk è rivolto a sviluppatori Python intermedi. Non è richiesta
nessuna conoscenza su Elasticsearch.&lt;/p&gt;
&lt;p&gt;Nell’introduzione presenteremo le librerie elasticsearch-py e
elasticsearch- dsl introducendo i concetti base di ElasticSearch.
Saranno prima presentate le metodologie di indicizzazione per
ottimizzare la ricerca su grandi quantità di dati, mostrando come
inserire i propri dati nel motore di ricerca.&lt;/p&gt;
&lt;p&gt;Dopo passeremo alle query (dal text search alle geo queries ) e relative
aggregazioni, facendo vedere come estrarre informazioni dai dati in
maniera veloce e migliorare così la user experience.&lt;/p&gt;
&lt;p&gt;In seguito saranno presentate funzionalità di ricerca avanzate,
spiegando come arricchire le proprie webapp con le funzionalità
dinamiche di “search as you type”, autocompletamento e suggerimento.&lt;/p&gt;
&lt;p&gt;Infine mostreremo come utilizzare tecniche di Data Analytics avanzate
come il NLP: analizzando i testi sarà possibile fare “language
detection”, “text classification” e “keyword extraction”. In tal modo
non solo si può trovare velocemente cosa si sta cercando, ma analizzare
commenti e recensioni per capire se i clienti sono soddisfatti.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 14:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="nlp"></category><category term="nosql"></category><category term="Python"></category><category term="bigdata"></category><category term="elasticsearch"></category><category term="Full Text Search"></category></entry><entry><title>Serverless SQL queries from Python with AWS Athena...or power to Data Scientists!</title><link href="https://pyvideo.org/pycon-italia-2018/serverless-sql-queries-from-python-with-aws-athenaor-power-to-data-scientists.html" rel="alternate"></link><published>2018-04-22T00:00:00+00:00</published><updated>2018-04-22T00:00:00+00:00</updated><author><name>Daniela Scardi</name></author><id>tag:pyvideo.org,2018-04-22:pycon-italia-2018/serverless-sql-queries-from-python-with-aws-athenaor-power-to-data-scientists.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Audience&lt;/strong&gt; : beginner&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt; The goal of this talk is to explain how Athena, a
serverless sql-like query service provided by Amazon’s AWS, combined
with a Python library called PyAthena, made it possible to store and
query as much data as needed with low costs, high performances and in a
Pythonesque way.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt; We found ourselves in a sticky situation: for monitoring
and debugging reasons we had the need to store a large amount of data
(around 200 million rows), trying not to spend the entire year’s budget
but still managing to efficiently query the data in an interactive
setting. With such Big Data, we could not simply resort to Data Science
tools like Pandas and hope for the best. Our first idea was to just
shove it all in our Postgres DB: since both data and database were
stored on Amazon’s AWS infrastructure, all we had to do was to write
ad-hoc import and update queries. Sadly, our poor Postgres machine took
the hit, and was not able to respond to our requirements without greatly
increasing our costs. Then we found out about Athena: a serverless,
Presto-based, sql compliant database, that reads directly from S3
folders and creates a virtual table on which you can run sql queries.
Using Python’s Athena library (PyAthena) our query execution time
dropped from hours to seconds, we simplified the infrastructure and
decreased our costs, without the need to pay and maintain a dedicated
server. In this talk we will show why Athena was the right solution for
our use case and present its Python library with its functionalities.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 15:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="aws"></category><category term="storage"></category><category term="cloud"></category><category term="sql"></category></entry><entry><title>Going Isomorphic with Django and React</title><link href="https://pyvideo.org/pycon-italia-2018/going-isomorphic-with-django-and-react.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Mattia Larentis</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/going-isomorphic-with-django-and-react.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In web development, an isomorphic application is one whose code (in this
case, JavaScript) can run both in the server (in this case, Django) and
the client. In this talk we will understand how it works and why it can
be useful in the daily life. This talk is for developers (both
backenders and frontenders) who believe in “DRY” and will love to learn
something new.&lt;/p&gt;
&lt;p&gt;repo: &lt;a class="reference external" href="https://github.com/nostalgiaz/django-react-ssr"&gt;https://github.com/nostalgiaz/django-react-ssr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 18:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="typescript"></category><category term="Python"></category><category term="reactjs"></category><category term="isomorphic"></category><category term="django"></category><category term="rendering"></category><category term="javascript"></category><category term="browser"></category></entry><entry><title>Google loves Python 2.0</title><link href="https://pyvideo.org/pycon-italia-2018/google-loves-python-20.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Simone Dalla</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/google-loves-python-20.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il talk vuole illustrare gli strumenti e le Api Python che Google mette
a disposizione liberamente agli sviluppatori per interagire con alcune
delle sue applicazioni più diffuse come Google Calendar, Google Docs,
Google Drive, Google Gmail. Verrà illustrato quindi l’uso delle Google
API Client Libraries e verranno mostrati esempi pratici per creare e
popolare un Foglio di Google, creare appuntamenti su un Google Calendar,
fare l’upload di un file su Google Drive ed analizzare la propria
casella Gmail. Per seguire il talk è sufficiente una discreta conoscenza
del linguaggio Python.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 17:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="api"></category><category term="google"></category><category term="integration"></category><category term="REST"></category></entry><entry><title>Hacking Your Way Into Machine Learning</title><link href="https://pyvideo.org/pycon-italia-2018/hacking-your-way-into-machine-learning.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Laksh Arora</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/hacking-your-way-into-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You might have heard of Machine Learning from your co-worker or in a local meetup and are enticed to get started but not sure how to take that first step. Confused between different sources, where to start from or how to proceed given a particular problem statement or dataset, then this talk is for you. It is aimed at complete beginners ( maybe you? ) who are just starting in machine learning and are ready to commit.
The talk will go something like this - each of the following items will be explained how it’s useful and why we should use it. Then alongside showcase, that same step applied to the real example(dataset) of that particular item so that the audience will be able to grasp the idea. It will add to around 35 minutes leaving us with 10 minutes for Q&amp;amp;A.
1) Context ( 5 mins ):
Discuss why we need Machine Learning and how we can use Machine Learning in different domains.
2) Resources ( 3 mins):
Talks about the dataset availability, online competitions, and Open Source libraries such as Scikit-learn, Matplotlib, Keras.
3) Jupyter Notebook (25 mins):
This Jupyter notebook will be a great starting point for most Supervised Machine Learning projects that involve common tasks: a) Imports and data loading (2 mins )
b) Data Exploration (5 mins)
c) Data Cleaning (3 mins)
d) Feature Engineering (4 mins)
e) Model Exploration (6 mins)
f) Final Model Building and Prediction ( 5 mins)
4) Wrap up ( 2 mins ):
Finalizing my talk, sharing some tips etc.
5) Q&amp;amp;A ( 10 mins ):
Question and Answering with the Audience.
Hope to inspire the audience to get started with machine learning, explore different domains, to learn, to create and engage with the Machine Learning Community.&lt;/p&gt;
</summary><category term="data-analysis"></category><category term="data-visualization"></category><category term="Python"></category><category term="scikit-learn"></category><category term="matplotlib"></category><category term="analytics"></category><category term="scipy"></category><category term="machine-learning"></category><category term="data"></category><category term="Statistical Learning"></category></entry><entry><title>Heroku: come deployare un'app Django in 10 minuti!</title><link href="https://pyvideo.org/pycon-italia-2018/heroku-come-deployare-unapp-django-in-10-minuti.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Sabatino Severino</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/heroku-come-deployare-unapp-django-in-10-minuti.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Se sei stanco di occuparti di &lt;em&gt;load balancing&lt;/em&gt; , &lt;em&gt;routing&lt;/em&gt; e &lt;em&gt;cloud
monitoring&lt;/em&gt; e vorresti dedicarti solo a &lt;em&gt;lambda function&lt;/em&gt; , &lt;em&gt;list
comprehension&lt;/em&gt; o &lt;em&gt;class-based view&lt;/em&gt; allora questo è il talk che fa per
te.&lt;/p&gt;
&lt;p&gt;Heroku è la piattaforma PaaS ( &lt;em&gt;Platform as a Service&lt;/em&gt; ) che consente
agli sviluppatori di creare, eseguire e gestire applicazioni interamente
nel cloud. Ad essere fornito come servizio non c’è solo l’hardware, ma
anche la piattaforma che astrae l’hardware stesso e permette di
usufruire di funzionalità che consentono di ottenere bilanciamenti
automatici, gestione del deployment e altro ancora.&lt;/p&gt;
&lt;p&gt;Il vantaggio per l’utente è quello di concentrarsi solo ed
esclusivamente sullo sviluppo dell’applicazione senza perdersi
nell’analisi di problematiche legate all’ambiente in cui essa deve
essere distribuita ottenendo così la scalabilità e l’affidabilità
necessaria.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 15:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="paas"></category><category term="continuous-integration"></category><category term="github"></category><category term="continuous-delivery"></category><category term="Python"></category><category term="pipeline"></category><category term="django"></category><category term="heroku"></category><category term="git"></category><category term="deployment"></category><category term="web development"></category></entry><entry><title>IoT con Python: si può fare! dall'ESP8266 alla casa domotica</title><link href="https://pyvideo.org/pycon-italia-2018/iot-con-python-si-puo-fare-dallesp8266-alla-casa-domotica.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Lelio Campanile</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/iot-con-python-si-puo-fare-dallesp8266-alla-casa-domotica.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Se anche tu negli ultimi tempi hai sentito l’irrefrenabile bisogno di
accendere le luci della tua casa mentre sei in vacanza o di guardare
cosa fanno i tuoi animaletti quando non ci sei, ma non ti accontenti…
allora questo talk fa per te!&lt;/p&gt;
&lt;p&gt;Vi farò vedere come è possibile avere uno stack completo di sviluppo per
la domotica completamente in python, dalla programmazione dei sensori
attraverso gli economici ESP 8266 e suoi derivati ai sistemi di gestione
complessi.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 17:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="micropython"></category><category term="iot"></category><category term="Python"></category><category term="practice"></category><category term="automation"></category><category term="raspberrypi"></category></entry><entry><title>Panino Digitale: una applicazione pratica di educazione creativa</title><link href="https://pyvideo.org/pycon-italia-2018/panino-digitale-una-applicazione-pratica-di-educazione-creativa.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Mauro Angioni</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/panino-digitale-una-applicazione-pratica-di-educazione-creativa.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;L’istruzione tecnica è stata introdotta ai tempi della rivoluzione
industriale anche in funzione della necessità di avere operai
specializzati, una volta formato l’operaio svolgeva pressoché la stessa
mansione per tutta la vita. Dalla Rivoluzione Industriale a oggi, il
lavoro si è evoluto in modo considerevole. Tuttavia, queste grandi
trasformazioni del passato sono state graduali, mentre oggi i
cambiamenti sono repentini, trasversali e dirompenti. La formazione
scolastica è rimasta ancorata a schemi tradizionali. Il fine ultimo
della scuola dovrebbe essere quello di fare uscire ragazzi
intraprendenti e capaci di trarre soddisfazione dallo stesso
apprendimento, e le esperienze di alternanza scuola-lavoro nelle aziende
assumono un ruolo importante per la loro formazione, per le soft skill,
per mantenere alto l’interesse, per rendere lo studente protagonista e
consapevole.&lt;/p&gt;
&lt;p&gt;Questa è la storia di un gruppo di studenti di un istituto tecnico
superiore, appassionati di Python e provenienti da esperienze di
alternanza e di partecipazione alle conferenze di comunità, che hanno
immaginato di sviluppare autonomamente Panino Digitale, un’applicazione
basata sul framework Django, con cui gli studenti possano prenotare il
panino al bar della scuola. Per realizzarla concretamente, hanno
coinvolto i loro docenti, condiviso l’idea con la loro comunità
scolastica, raccolto nuovi contributori tra i loro compagni, e chiesto
supporto, affiancamento e strumenti alla community Python e ai suoi
membri.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 12:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="istruzione"></category><category term="community"></category><category term="django"></category></entry><entry><title>Recent advancements in NLP and Deep Learning: A Quant's Perspective</title><link href="https://pyvideo.org/pycon-italia-2018/recent-advancements-in-nlp-and-deep-learning-a-quants-perspective.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Umit Mert Cakmak</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/recent-advancements-in-nlp-and-deep-learning-a-quants-perspective.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a gold-rush among hedge-funds for text mining algorithms to
quantify textual data and generate trading signals. Harnessing the power
of alternative data sources became crucial to find novel ways of
enhancing trading strategies.&lt;/p&gt;
&lt;p&gt;With the proliferation of new data sources, natural language data became
one of the most important data sources which could represent the public
sentiment and opinion about market events, which then can be used to
predict financial markets.&lt;/p&gt;
&lt;p&gt;Talk is split into 5 parts;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Who is a quant and how do they use NLP?&lt;/li&gt;
&lt;li&gt;How deep learning has changed NLP?&lt;/li&gt;
&lt;li&gt;Let’s get dirty with word embeddings&lt;/li&gt;
&lt;li&gt;Performant deep learning layer for NLP: The Recurrent Layer&lt;/li&gt;
&lt;li&gt;Using all that to make money&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="who-is-a-quant-and-how-do-they-use-nlp"&gt;
&lt;h4&gt;1. Who is a quant and how do they use NLP?&lt;/h4&gt;
&lt;p&gt;Quants use mathematical and statistical methods to create algorithmic
trading strategies.&lt;/p&gt;
&lt;p&gt;Due to recent advances in available deep learning frameworks and
datasets (time series, text, video etc) together with decreasing cost of
parallelisable hardware, quants are experimenting with various NLP
methods which are applicable to quantitative trading.&lt;/p&gt;
&lt;p&gt;In this section, we will get familiar with the brief history of text
mining work that quants have done so far and recent advancements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-deep-learning-has-changed-nlp"&gt;
&lt;h4&gt;2. How deep learning has changed NLP?&lt;/h4&gt;
&lt;p&gt;In recent years, data representation and modeling methods are vastly
improved. For example when it comes to textual data, rather than using
high dimensional sparse matrices and suffering from curse of
dimensionality, distributional vectors are more efficient to work with.&lt;/p&gt;
&lt;p&gt;In this section, I will talk about distributional vectors a.k.a. word
embeddings and recent neural network architectures used when building
NLP models.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="lets-get-dirty-with-word-embeddings"&gt;
&lt;h4&gt;3. Let’s get dirty with word embeddings&lt;/h4&gt;
&lt;p&gt;Models such as Word2vec or GloVe helps us create word embeddings from
large unlabeled corpus which represent the relation between words, their
contextual relationships in numerical vector spaces and these
representations not only work for words but also could be used for
phrases and sentences.&lt;/p&gt;
&lt;p&gt;In this section, I will talk about inner workings of these models and
important points when creating domain-specific embeddings (e.g. for
sentiment analysis in financial domain).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="performant-deep-learning-layer-for-nlp-the-recurrent-layer"&gt;
&lt;h4&gt;4. Performant deep learning layer for NLP: The Recurrent Layer&lt;/h4&gt;
&lt;p&gt;Recurrent Neural Networks (RNNs) can capture and hold the information
which was seen before (context), which is important for dealing with
unbounded context in NLP tasks.&lt;/p&gt;
&lt;p&gt;Long Short Term Memory (LSTM) networks, which is a special type of RNN,
can understand the context even if words have long term dependencies,
words which are far back in their sequence.&lt;/p&gt;
&lt;p&gt;In this talk, I will compare LSTMs with other deep learning
architectures and will look at LSTM unit from a technical point of view.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="using-all-that-to-make-money"&gt;
&lt;h4&gt;5. Using all that to make money&lt;/h4&gt;
&lt;p&gt;Financial news, especially if it’s major, can change the sentiment among
investors and affect the related asset price with immediate price
corrections.&lt;/p&gt;
&lt;p&gt;For example, what’s been communicated in quarterly earnings calls might
indicate whether the price of share will drop or increase based on the
language used. If the message of the company is not direct and featuring
complex sounding language, it usually indicates that there’s some shady
stuff going on and if this information extracted right, it’s a valuable
trading signal. For similar reasons, scanning announcements and
financial disclosures for trading signals became a common NLP practice
in investment industry.&lt;/p&gt;
&lt;p&gt;In this section, I will talk about the various data sources that
researchers can use and also explain common NLP workflows and deep
learning practices for quantifying textual data for generating trading
signals.&lt;/p&gt;
&lt;p&gt;I will end with summary with application architecture in case anyone
would like to implement similar systems for their own use.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 14:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="nlp"></category><category term="data-science"></category><category term="Keras"></category><category term="Python"></category><category term="Deep-Learning"></category><category term="machine-learning"></category><category term="spaCy"></category><category term="nltk"></category></entry><entry><title>Using Python to bring democracy to the A.I. age</title><link href="https://pyvideo.org/pycon-italia-2018/using-python-to-bring-democracy-to-the-ai-age.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Felipe Cabral</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/using-python-to-bring-democracy-to-the-ai-age.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TL;DR&lt;/p&gt;
&lt;div class="section" id="when-you-go-full-big-data-at-public-data-and-become-a-citzen"&gt;
&lt;h4&gt;When you go full Big Data at public data and become a citzen.&lt;/h4&gt;
&lt;p&gt;Audience type: developers, data scientists of any level of expertise.&lt;/p&gt;
&lt;p&gt;After a political coup Brazil drowned in scandals and political
disbelief. That was the final straw for us.&lt;/p&gt;
&lt;p&gt;We created a bot persona who uses Machine Learning to analyze public
spending, launching our own data journalism investigations. As expected
we use the internet publicize our findings and icing on it was to use
Twitter to directly engage the public and politicians under the topic of
suspicious expenses.&lt;/p&gt;
&lt;p&gt;Come with me and I’ll show some figures from Brazilian corruption, share
some code and cherry-pick the best of our toolbox to deal with public
data and machine learning. I’ll introduce our public dashboard that
makes visualization and browsing government data easy peasy. And surely
we can take a look in some tweets from Rosie, the robot, and how some
politicians are now vociferating with a ROBOT on social media.&lt;/p&gt;
&lt;p&gt;And you guessed it right: everything is open-source and our mission is
to create a global community to bring democracy to the A.I. age.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 18:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="machine-learning"></category><category term="Python"></category><category term="agile"></category><category term="Data Mining"></category><category term="bigdata"></category><category term="data-visualization"></category><category term="OpenSource"></category><category term="data-analysis"></category><category term="e-gov"></category><category term="data"></category></entry><entry><title>DjangoProject.com - Ricerca Full-Text con PostgreSQL</title><link href="https://pyvideo.org/pycon-italia-2018/djangoprojectcom-ricerca-full-text-con-postgresql.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Paolo Melchiorre</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/djangoprojectcom-ricerca-full-text-con-postgresql.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il sito web ufficiale del progetto &lt;strong&gt;Django&lt;/strong&gt; (
&lt;a class="reference external" href="http://www.djangoproject.com"&gt;www.djangoproject.com&lt;/a&gt; ) è basato
sull’ultima versione stabile di Django, la &lt;strong&gt;documentazione&lt;/strong&gt; del
progetto è generata con &lt;strong&gt;Sphinx&lt;/strong&gt; ed i documenti generati sono poi
memorizzati su &lt;strong&gt;PostgreSQL&lt;/strong&gt; per essere visualizzati sul sito.&lt;/p&gt;
&lt;p&gt;Il modulo per la &lt;strong&gt;ricerca&lt;/strong&gt; della documentazione nel sito del progetto
Django è molto utilizzato e fino a poco tempo fa era &lt;strong&gt;basato&lt;/strong&gt; su
&lt;strong&gt;Elasticsearch&lt;/strong&gt;. L’utilizzo di Elasticsearch ha causato &lt;strong&gt;problemi&lt;/strong&gt;
nella sincronizzazione dei dati e nell’aggiornamento dei driver di
connessione.&lt;/p&gt;
&lt;blockquote&gt;
In questo talk vedremo &lt;strong&gt;come&lt;/strong&gt; ho &lt;strong&gt;aggiornato&lt;/strong&gt; la funzione di
&lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/search/?q=full+text+search"&gt;ricerca&lt;/a&gt;
del &lt;strong&gt;sito del progetto Django&lt;/strong&gt; utilizzando il modulo di &lt;strong&gt;Ricerca
Full- Text&lt;/strong&gt; di Django basato direttamente su &lt;strong&gt;PostgreSQL&lt;/strong&gt;. Questo
ha &lt;strong&gt;semplificato&lt;/strong&gt; molto l’infrastruttura e &lt;strong&gt;velocizzato&lt;/strong&gt; l’
&lt;strong&gt;aggiornamento&lt;/strong&gt; della documentazione, senza perdere nessuna delle
precedenti &lt;strong&gt;funzioni&lt;/strong&gt; di ricerca ma anzi migliorandole ed
aggiungendone altre da tempo richieste dagli &lt;strong&gt;utenti&lt;/strong&gt;.&lt;/blockquote&gt;
&lt;p&gt;Tramite questo talk potrai &lt;strong&gt;imparare&lt;/strong&gt; come &lt;strong&gt;aggiungere&lt;/strong&gt; una nuova
funzione di &lt;strong&gt;Ricerca Full-Text&lt;/strong&gt; nel &lt;strong&gt;tuo progetto&lt;/strong&gt; basato su Django
e PostgreSQL. In alternativa potreai imparare come &lt;strong&gt;aggiornare&lt;/strong&gt; la
ricerca esistente nel tuo sito se usi Elasticsearch o &lt;strong&gt;motori di
ricerca&lt;/strong&gt; simili .&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;em&gt;Per una **introduzione*&lt;/em&gt; ai temi del talk puoi leggere il mio articolo
sulla &lt;a class="reference external" href="http://www.paulox.net/2017/12/22/full-text-search-in-django-with-%20postgresql/"&gt;&amp;quot;Ricerca Full-Text in Django con
PostgreSQL&amp;quot;&lt;/a&gt;
basato sul mio talk presentato al &lt;a class="reference external" href="https://www.pycon.it/conference/talks/ricerca-full-text-in-django-con-%20postgresql"&gt;PyCon
Otto&lt;/a&gt;
nel 2017.*&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 16:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="web"></category><category term="search"></category><category term="postgresql"></category><category term="postgres"></category><category term="database"></category><category term="Python"></category><category term="documentation"></category><category term="django"></category><category term="elasticsearch"></category><category term="sphinx"></category><category term="Full Text Search"></category><category term="python3"></category></entry><entry><title>Elastic by examples ==&gt; Tutto (o quasi) quello che è possibile fare con ElasticSearch&amp;Phyton</title><link href="https://pyvideo.org/pycon-italia-2018/elastic-by-examples-tutto-o-quasi-quello-che-e-possibile-fare-con-elasticsearchphyton.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Stefano Pampaloni</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/elastic-by-examples-tutto-o-quasi-quello-che-e-possibile-fare-con-elasticsearchphyton.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I casi d’uso di Elasticsearch sono molti e non è sempre facile capire le
potenzialità di questa soluzione. Abbiamo quindi deciso di mostrare
esempi pratici in contesti anche molto diversi fra loro, per dare spunti
concreti su come è possibile sfruttare lo Stack Elastic&lt;/p&gt;
&lt;p&gt;Di seguito un elenco non esaustivo dei contesti applicativi: - Search
applicativo e web - Thread security analysis - Gestione e Analisi log -
Time series analysis su metriche - Geosearch - Semantic Search - APM -
Graph analysis&lt;/p&gt;
&lt;p&gt;Faremo anche vedere come implementare soluzioni di Machine Learning e
IoT, integrando ES con altri componenti Opensource Non sono richieste
competenze pregresse se non una conoscenza base di Python&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 14:30 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="elasticsearch"></category><category term="examples"></category></entry><entry><title>Evolution or stagnation programming languages</title><link href="https://pyvideo.org/pycon-italia-2018/evolution-or-stagnation-programming-languages.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Daniele Esposti</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/evolution-or-stagnation-programming-languages.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Programming languages evolves with the need to the developers, but not
all of them evolves at the same speed and sometimes some languages stays
almost the same for decades. Is this a sign of stagnation? Is it
possible to evolve a language without breaking retrocompatibility?&lt;/p&gt;
&lt;p&gt;This talk will cover how Python and Javascript approached the problem in
a radically different way, with their pro and cons and with the
consequences on the community.&lt;/p&gt;
&lt;p&gt;The main points of this talk are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;comparation of the new features in both languages&lt;/li&gt;
&lt;li&gt;strategies used to port or run the code on different versions of the
language&lt;/li&gt;
&lt;li&gt;impact of the new features and tool on the respective developer’s
communities&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The intent is to start a constructive discussion about the
retrocompatility in Python.&lt;/p&gt;
&lt;p&gt;For this talk you don’t need to have a deep knowledge of Python or
Javascript.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 11:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="javascript"></category><category term="programming-languages"></category></entry><entry><title>PostgreSQL &amp; Python: La coppia perfetta.</title><link href="https://pyvideo.org/pycon-italia-2018/postgresql-python-la-coppia-perfetta.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Giulio Calacoci</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/postgresql-python-la-coppia-perfetta.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Questo talk parla di amore. Della combinazione perfetta fra PostgreSQL e
Python. PostgreSQL é il database scelto di default da molti sviluppatori
Python, perché é robusto, stabile e open source. Noi di 2ndQuadrant
viviamo con PostgreSQL e amiamo anche Python, usandolo il piú possibile
per progetti open source pubblici e per i progetti interni. Voglio
condividere con voi l’amore per PostgreSQL e Python mostrando come la
“coppia perfetta” possa lavorare in perfetta simbiosi.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;venerdì 20 aprile&lt;/strong&gt; at 11:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="Love"></category><category term="postgresql"></category><category term="postgres"></category><category term="elephant"></category></entry><entry><title>Pygame torna a scuola</title><link href="https://pyvideo.org/pycon-italia-2018/pygame-torna-a-scuola.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Maurizio Boscaini</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/pygame-torna-a-scuola.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python è presente da alcuni anni nella scuola italiana. Alcuni licei
scientifici e alcuni istituti tecnici lo utilizzano come linguaggio di
introduzione alla programmazione grazie alla sua immediatezza e
semplicità sintattica, utile in una fase in cui l’attenzione è
concentrata sugli algoritmi e sui fondamenti di un linguaggio di
programmazione.&lt;/p&gt;
&lt;p&gt;Il passo successivo potrebbe essere quello di insegnare con Python anche
il secondo livello classico della programmazione: la programmazione ad
oggetti. La programmazione di videogiochi e la libreria Pygame offrono
la possibilità di rendere questo passaggio relativamente semplice e
sicuramente interessante. Inoltre, la possibilità di affrontare
tematiche concrete e reali come quelle legate alla programmazione di
videogiochi 2D permette di capire la “logica” e l’importanza di un
approccio object oriented. In particolare, il concetto di sprite ben si
presta ad essere preso come “modello” di classe.&lt;/p&gt;
&lt;p&gt;L’intervento presenta i risultati di una sperimentazione didattica
svolta presso l’ITI Marconi di Verona. Il talk parte dalle basi della
programmazione di videogiochi 2D (game loop, immagini, suoni, double
buffering, sprite…) e dei moduli principali di Pygame per arrivare a
costruire un semplice ma non banale videogioco in stile “arcade”.&lt;/p&gt;
&lt;p&gt;Link slides:
&lt;a class="reference external" href="https://docs.google.com/presentation/d/13HSMniO6ttSIN1-NdBcjo9Kez-B7-5szl"&gt;https://docs.google.com/presentation/d/13HSMniO6ttSIN1-NdBcjo9Kez-B7-5szl&lt;/a&gt;-
gT8gYOO5U/edit?usp=sharing&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 15:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="game-development"></category><category term="programming-paradigms"></category><category term="Python"></category><category term="libraries"></category><category term="games"></category><category term="Pedagogical learning"></category></entry><entry><title>Sports performance evaluation: from cognitive mechanisms to data-driven algorithms</title><link href="https://pyvideo.org/pycon-italia-2018/sports-performance-evaluation-from-cognitive-mechanisms-to-data-driven-algorithms.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Luca Pappalardo</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/sports-performance-evaluation-from-cognitive-mechanisms-to-data-driven-algorithms.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
Not everything that counts can be counted, and not everything that
can be counted counts. A. Einstein&lt;/blockquote&gt;
&lt;p&gt;Humans are routinely asked to evaluate the performance of other
individuals, separating success from failure and affecting outcomes from
science to education and sports. Yet, little is known about the aspects
that determine the human perception of performance. How do expert
reviewers, as well as ordinary people, arrive to their evaluations? To
what extent these evaluations are based on objective performance
features? How are they affected by subjective biases or contextual
influences?&lt;/p&gt;
&lt;p&gt;This talk will answer these fascinating questions focusing on &lt;em&gt;soccer&lt;/em&gt; ,
the most popular sport in the world. Firstly, we will show how machine
learning can accurately reproduce the mechanisms human judges use to
evaluate the performance of soccer players, uncovering limits and
characteristics of the human evaluation process. Second, we design a
Python package that allows, in a completely unsupervised and data-driven
way, to (i) evaluate the quality of a player’s performance and (ii) rank
soccer players based on their performances.&lt;/p&gt;
&lt;p&gt;The first part of the talk will show how soccer ratings assigned to
every player of a game by sport-specialized newspapers are associated
with a high- dimensional vector of features extracted by massive data
which describe any quantifiable aspects of soccer games. The talk will
show how, by using Scikit- learn, we can train an &lt;em&gt;artificial judge&lt;/em&gt;
which learns the relation between technical performance and soccer
ratings, hence &lt;em&gt;accurately reproducing&lt;/em&gt; the human evaluation process. By
inspecting the structure of the artificial judge, the talk will show
that the human evaluation criteria follow a simplistic cognitive process
based on a simple heuristic: judges first select a limited number of
features which attract their attention and then rate a performance based
on the presence of noticeable values, i.e., features values far from the
norm that can be easily brought to mind.&lt;/p&gt;
&lt;p&gt;The second part of the talk will show how to overcome the simplicity of
the human evaluation process presenting &lt;strong&gt;PlayeRank&lt;/strong&gt; , a Python package
which implements an unsupervised data-driven framework to evaluate the
performance of soccer players in the main European leagues. The talk
will show how to use PlayeRank to construct a data-driven ranking of
players and highlight the factors which determine why celebrated
players, like Messi and Cristiano Ronaldo, actually result to be the top
players in the world. The modules composing PlayeRank will be presented,
showing how they allow the user to define the features characterizing a
performance, to detect in an automatic way the relevance of each
player’s action to a game outcome, to detect the role of a player given
his game data, to rate every performance as well as to obtain a final
ranking of all players in Europe. A short demo will be provided during
the talk through a Jupyter notebook, exploiting interactive data
visualization with the Bokeh package.&lt;/p&gt;
&lt;p&gt;The audience will learn how to use Python to construct evaluation
algorithms entirely based on machine learning and big data, a step
forward to a thorough and objective evaluation of performance which
overcomes the biases and the limitations of human perception of
performance. Just a basic knowledge of Python and of data mining
principles is required for a full understanding of the talk.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;venerdì 20 aprile&lt;/strong&gt; at 15:15 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="mathematical-modelling"></category><category term="Python"></category><category term="bigdata"></category><category term="sports-analytics"></category><category term="Machine Learning"></category><category term="analytics"></category><category term="Algorithms"></category><category term="Data Mining"></category><category term="sklearn"></category></entry><entry><title>Usare Odoo come framework</title><link href="https://pyvideo.org/pycon-italia-2018/usare-odoo-come-framework.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Eliumara López</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/usare-odoo-come-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il framework Odoo offre agli sviluppatori la possibilità di estendere
Odoo per raggiungere gli obiettivi di business e (si spera) rendere Odoo
più adatto al flusso di lavoro aziendale. In questo talk tratteremo come
realizzare: La struttura di base di un modulo Odoo. Lo sviluppo di un
modulo Odoo base. Creazione e modifica di un Report Qweb in Odoo.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;venerdì 20 aprile&lt;/strong&gt; at 16:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="github"></category><category term="postgresql"></category><category term="postgres"></category><category term="#Python"></category><category term="Python"></category><category term="#Odoo"></category><category term="Qweb"></category><category term="git"></category><category term="#OCA"></category><category term="#PostrgreSQL"></category><category term="#github"></category></entry><entry><title>Usare Odoo come framework</title><link href="https://pyvideo.org/pycon-italia-2018/usare-odoo-come-framework.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Eliumara López</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/usare-odoo-come-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il framework Odoo offre agli sviluppatori la possibilità di estendere
Odoo per raggiungere gli obiettivi di business e (si spera) rendere Odoo
più adatto al flusso di lavoro aziendale. In questo talk tratteremo come
realizzare: La struttura di base di un modulo Odoo. Lo sviluppo di un
modulo Odoo base. Creazione e modifica di un Report Qweb in Odoo.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;venerdì 20 aprile&lt;/strong&gt; at 16:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="github"></category><category term="postgresql"></category><category term="postgres"></category><category term="#Python"></category><category term="Python"></category><category term="#Odoo"></category><category term="Qweb"></category><category term="git"></category><category term="#OCA"></category><category term="#PostrgreSQL"></category><category term="#github"></category></entry><entry><title>Voting-based Ranking Combination using Python</title><link href="https://pyvideo.org/pycon-italia-2018/voting-based-ranking-combination-using-python.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Ferran Muiños</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/voting-based-ranking-combination-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Slides:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://slides.com/ferranmuinos/deck#/"&gt;Using votes to combine
rankings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;How to best combine the outcome of several ranked data into a single,
meaningful consensus ranking is a recurrent problem in scientific data
analysis. Particularly, in genome data analysis we are often bound to
merge ranked data arising from separate statistical analyses.&lt;/p&gt;
&lt;p&gt;Traditional blending strategies applied in the field rely on techniques
to combine statistical significance, but this approach on its own has
been associated with a number of caveats.&lt;/p&gt;
&lt;p&gt;We hereto present a voting-based heuristics implemented in Python which
leverages both Schulze’s voting algorithm and optimization techniques to
combine rankings upon credibility scores inferred from prior knowledge.
This rationale can be used alongside state-of-the-art methods to
systematically incorporate prior knowledge, thereby leading to more
interpretable outcomes. The scope of the method is quite general and may
be of use in other data analysis contexts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Contributors:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Presenter: &lt;a class="reference external" href="https://goo.gl/QDCMf3"&gt;Ferran Muiños&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Authors of the work: &lt;a class="reference external" href="https://goo.gl/QDCMf3"&gt;Ferran Muiños&lt;/a&gt;,
&lt;a class="reference external" href="https://goo.gl/weg7Nh"&gt;Francisco Martínez-Jiménez&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Focus:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To showcase a scientific data analysis problem arising from the study of
cancer biology and how we approached it by implementing our own tool in
Python.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Target Audience:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The talk aims to a broad Python audience. Minimum Python fluency is
required. Acquaintance with basic notions of data analysis may be
helpful to best follow the talk.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;venerdì 20 aprile&lt;/strong&gt; at 16:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="statistics"></category><category term="genetics"></category><category term="bio-informatics"></category><category term="data-analysis"></category></entry><entry><title>APIs: Gateway to world's data</title><link href="https://pyvideo.org/pycon-sk-2018/apis-gateway-to-worlds-data.html" rel="alternate"></link><published>2018-03-11T00:00:00+00:00</published><updated>2018-03-11T00:00:00+00:00</updated><author><name>Martin Strapko</name></author><id>tag:pyvideo.org,2018-03-11:pycon-sk-2018/apis-gateway-to-worlds-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Today, APIs all around the web provide access to big volumes of valuable
information. Combining multiple 3rd party sources with your own
company's data can often help paint a bigger picture. Come and find out
how we used Python to integrate various APIs such as Steam, Facebook and
Appsflyer, and learn the tricks we used to do it.&lt;/p&gt;
</summary><category term="API"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Charon and the way out from a pickle hell</title><link href="https://pyvideo.org/pycon-sk-2018/charon-and-the-way-out-from-a-pickle-hell.html" rel="alternate"></link><published>2018-03-11T00:00:00+00:00</published><updated>2018-03-11T00:00:00+00:00</updated><author><name>Peter Bábics</name></author><id>tag:pyvideo.org,2018-03-11:pycon-sk-2018/charon-and-the-way-out-from-a-pickle-hell.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pickle ako formát pre serializáciu je tu s nami už dlhú dobu, jeho
prednosti sú jasné, rýchla serializácia a implementácia v štandardnej
knižnici.&lt;/p&gt;
&lt;p&gt;Taktiež má aj určité nevýhody, ktoré často dokážu prevýšiť, medzi nimi
sú napríklad bezpečnostné hrozby a minimálna podpora migrácií. U nás v
Quantlane bola hlavným problémom chýbajúca podpora migrácii, nakoľko
aktívny vývoj aplikácie vždy vedie k zmenám v dátových štruktúrach.&lt;/p&gt;
&lt;p&gt;Z tohto dôvodu sme vytvorili &lt;tt class="docutils literal"&gt;charon&lt;/tt&gt;, jednoduchý serializačný
nástroj, ktorý si kladie za cieľ previesť komplexné dátové štruktúry do
jednoduchých základných typov (dict, list, skalárne hodnoty), ktoré sa
následne dajú jednoducho serializovať pomocou ďaľších knižníc ako
napriklád json, yaml a iné. Knižnica ponúka rôzne metatesty ako
napríklad kontrolovanie verzie serializačných funkcií voči dátovým typom
pomocou hashov AST, kontrolu serializačnej pipeline alebo aj kontrola či
majú všetky serializačné funkcie test.&lt;/p&gt;
</summary><category term="Charon"></category><category term="Pickle"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Getting started with HDF5 and PyTables</title><link href="https://pyvideo.org/pycon-sk-2018/getting-started-with-hdf5-and-pytables.html" rel="alternate"></link><published>2018-03-11T00:00:00+00:00</published><updated>2018-03-11T00:00:00+00:00</updated><author><name>Giacomo Debidda</name></author><id>tag:pyvideo.org,2018-03-11:pycon-sk-2018/getting-started-with-hdf5-and-pytables.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;HDF5 is a data model, a library, a file format for storing and managing
big and complex data. PyTables is a Python package built on top of the
HDF5 library and NumPy. It provides a high-level interface with advanced
indexing and database-like query capabilities. PyTables is both easy to
use and extremely fast, so it might be an invaluable tool if you need to
work with large, hierarchical datasets. At the end of this talk you will
learn what HDF5 is, why it might be the right file format for you, and
where PyTables fits in the Python data ecosystem.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Outline:&lt;/div&gt;
&lt;div class="line"&gt;- What is HDF5 and who uses it?&lt;/div&gt;
&lt;div class="line"&gt;- Brief overview of the HDF5 data model&lt;/div&gt;
&lt;div class="line"&gt;- First steps with PyTables&lt;/div&gt;
&lt;div class="line"&gt;- PyTables tools&lt;/div&gt;
&lt;div class="line"&gt;- Search big data with PyTables and NumExpr&lt;/div&gt;
&lt;div class="line"&gt;- Additional resources to learn more&lt;/div&gt;
&lt;div class="line"&gt;- Q&amp;amp;A&lt;/div&gt;
&lt;/div&gt;
</summary><category term="HDF5"></category><category term="PyCon SK"></category><category term="PyTables"></category><category term="Python"></category></entry><entry><title>Making Python Behave</title><link href="https://pyvideo.org/pycon-sk-2018/making-python-behave.html" rel="alternate"></link><published>2018-03-11T00:00:00+00:00</published><updated>2018-03-11T00:00:00+00:00</updated><author><name>Vladimir Kopso</name></author><id>tag:pyvideo.org,2018-03-11:pycon-sk-2018/making-python-behave.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We at SolarWinds Pingdom believe we have made some nice tricks while
writing our end-to-end automation Framework.&lt;/p&gt;
&lt;p&gt;And of course, the Python language and its ecosystem was what enabled
this magic.&lt;/p&gt;
&lt;p&gt;So we want to share some tips for making your code cleaner and life
easier, not only when you are trying to implement BDD at your project.&lt;/p&gt;
&lt;p&gt;General tips and lessons learned from writing good behavior-driven
automation are also included.&lt;/p&gt;
</summary><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>“Secret” information about the code we write</title><link href="https://pyvideo.org/pycon-sk-2018/secret-information-about-the-code-we-write.html" rel="alternate"></link><published>2018-03-11T00:00:00+00:00</published><updated>2018-03-11T00:00:00+00:00</updated><author><name>Tibor Arpáš</name></author><id>tag:pyvideo.org,2018-03-11:pycon-sk-2018/secret-information-about-the-code-we-write.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Podľa môjho názoru vývojové prostredia (IDE) zanedbávaju runtime aspekt
programov, ktoré v nich píšeme. Historicky sa tieto prostredia asi
vyvinuli z textových editorov a postupne dostávaju viac a viac funkcií a
umožňujú viacero pohľadov na zdrojový kód a jeho všakovaké aspekty.
Vývojové prostredia dokážu zázraky so zdrojovými súbormi, ktoré nám
ležia na disku.&lt;/p&gt;
&lt;p&gt;Avšak zdrojáky nepíšeme aby ležali na disku ale kvôli tomu aby nám
bežali ako programy. Pri behu môže vznikať kopec zaujímavých informácií
spätne využiteľných pri programovaní. Dôraz vývojových prostredí na
statické zdrojové kódy škodí najmä dynamickým programovacím jazykom ako
je Python. Chcel by som odprezentovať a získať spätnú väzbu na 3-5
nápadov ktoré majú za cieľ práve preniesť rôzne informácie z behu Python
programu naspäť do prostredia v ktorom sa píše zdrojový kód. V ideálnom
prípade presne na riadok alebo dokonca na výraz, ktorý programátor práve
píše alebo sa s ním dokonca trápi.&lt;/p&gt;
&lt;p&gt;Príklady týchto nápadov:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;prezentácia stack trace informácie v IDE, na konkrétnych riadkoch kde
tento stack trace vznikol, intuitívna navigácia po framoch stacktrace,
hint na hodnoty lokálnych premenných jednotlivých framov&lt;/li&gt;
&lt;li&gt;prenos a výpis log hlášok v IDE na konkrétmych riadkoch, ktoré tento
výpis vygenerovali&lt;/li&gt;
&lt;li&gt;coverage informácia na riadku, ale vrátane informácie Who Tests What
(ktorý, test vykonal tento riadok, pozri napr.
&lt;a class="reference external" href="https://bitbucket.org/ned/coveragepy/issues/170/show-who-tests-what"&gt;https://bitbucket.org/ned/coveragepy/issues/170/show-who-tests-what&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;použiteľnejšia reprezentácia spustených/úspešných/zlyhaných testov ako
momentálne používaný rozbaľovací strom. Doklikať sa ku konkrétnemu
výsledku testu v Pycharm test runneri často trvá minútu a po každom
spustení testov sa táto manuálna práca zahodí a treba začať klikať
odznova. Navrhnem intuitívnejší spôsob prezentácie.&lt;/li&gt;
&lt;li&gt;meta nápad: implementovať prezentované nápady bude stáť nezanedbateľné
úsilie. Kedže vývojových prostredí je veľké množstvo, a každé ma
rozdielne API ideálne je navrhnúť všeobecný protokol, ktorý by oddeľoval
IDE a zdroje runtime informácií podobne ako to robí Language Server
Protocol (&lt;a class="reference external" href="https://microsoft.github.io/language-server-protocol/"&gt;https://microsoft.github.io/language-server-protocol/&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>7 Steps to a Clean Issue Tracker</title><link href="https://pyvideo.org/pycon-sk-2018/7-steps-to-a-clean-issue-tracker.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Lasse Schuirmann</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/7-steps-to-a-clean-issue-tracker.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A lot of open source maintainers suffer from having to maintain the
flood of incoming issues/tikets on their project. We've scraped more
than 10000 GitHub projects and interviewed more than 100 software
developers and project managers of companies like GitLab. As a result,
we have identified a few simple steps that can help managing the load of
issues.&lt;/p&gt;
&lt;p&gt;This talk sums up the steps and approaches needed to deal with this as
well as automate it.&lt;/p&gt;
&lt;p&gt;For a full summary, check out &lt;a class="reference external" href="https://about.gitlab.com/2017/10/26/triage-issues-gitmate/"&gt;our blog post with
GitLab&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="who-and-why"&gt;
&lt;h4&gt;Who and Why&lt;/h4&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The talk is for project managers and open source maintainers or
software developers that deal with issues every day. This includes
specifically people working in teams with more than 30 issues a
month opened.&lt;/li&gt;
&lt;li&gt;There's no background knowledge needed. The talk will be best for
people who have triaged issues before at least in a small scale and
recognize the problem, they will be able to pick up the approaches
better and faster.&lt;/li&gt;
&lt;li&gt;On an emotional level, I expect the audience to get to know the
&amp;quot;attitude&amp;quot; needed to get rid of noise when triaging issues. After
the talk, they should have a few concrete steps in mind that they
can try using in the first days and eventually deduct their own
process from it.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</summary><category term="GitHub"></category><category term="GitLab"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Around the World in 30 minutes</title><link href="https://pyvideo.org/pycon-sk-2018/around-the-world-in-30-minutes.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Štěpán Tomsa</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/around-the-world-in-30-minutes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lidé mluví různými jazyky. Ba co hůř, oni jimi i píší a to i na
počítači. Tyto jazyky se nepíší vždy latinkou. A i když ano, není ani ta
vždy stejná. Tito lidé mají navíc v těchto jazycích a znakových sadách
dokonce i jména, poštovní adresy atd. a vyplňují je třeba do webových
formulářů. A to vše je jen začátek boje s řetězci…&lt;/p&gt;
&lt;p&gt;To, že v řetězcích se většinou ukrývá text v nějakém lidském jazyce, asi
všichni tušíme. Snad jsme se každý i pokusili někdy nějaký takový
zpracovat, porovnávat, řadit, ti odvážnější třeba i skloňovat. Odhrňme
závěs a posviťme si na některé z těch unicodových nestvůr. Nakonec
budeme rádi, že se nám takový text aspoň zobrazí na obrazovce; a někdy
dokonce i správně. Alespoň dokud se nám na webu nezaregistruje někdo z
Klingonské říše…&lt;/p&gt;
</summary><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Automated network OS testing</title><link href="https://pyvideo.org/pycon-sk-2018/automated-network-os-testing.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Tomáš Kubina</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/automated-network-os-testing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Our target was to automate recurring testing done to secure stability
of software deployed for Orange BS international networks (JunOS,
CISCO IOS).&lt;/div&gt;
&lt;div class="line"&gt;Target is to make this automation as reliable as manual tests,
user-friendly, faster, so people can focus on more complex test and
simple and mid-simple test to be executed during nights/weekends and
be able to run them more frequently.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We have an lab network and decided to use NAPALM framework (library that
implements a set of functions to interact with different router vendor
devices using a unified API) as it supports all types of devices that we
need to test. There is support for configuring devices, but mainly for
retrieving operational state of devices, that is key for our testing.&lt;/p&gt;
&lt;p&gt;As a result of several months work we have now basic environment for
testing thanks to NAPALM, but for our need we had to extend it with
several functions for parsing operational data. These functions are
covering different areas as IS-IS, LDP, BFD, BGP, PIM, MPLS TE and help
us to properly check overall status of the box. As I work for OBS these
functions are Service Provider oriented. Our goal is to publish them
either as part of NAPALM official package or external extension. So also
others can benefit from the work that was done as part our project.&lt;/p&gt;
</summary><category term="NAPALM"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Campaign Automation &amp; Abusing Celery Properly</title><link href="https://pyvideo.org/pycon-sk-2018/campaign-automation-abusing-celery-properly.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Peter Dolák</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/campaign-automation-abusing-celery-properly.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Celery is an asynchronous task queue allowing easy distributed job
execution in Python. This talk will, after a short introduction to
Celery, share what we learned when we used it as the backbone for the
campaign automation module of Exponea experience cloud. Serving over a
hundred millions of our client's customers across the world with
incredibly diverse use cases, we have heavily used some of Celery's most
obscure functionality in often unintended ways. Join us for a bumpy ride
towards a stability and scalability and learn many insights useful if
you ever need to run some serious asynchronous jobs yourself. Barf bags
not included.&lt;/p&gt;
</summary><category term="Celery"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Designing fast and scalable Python MicroServices with django</title><link href="https://pyvideo.org/pycon-sk-2018/designing-fast-and-scalable-python-microservices-with-django.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Dinesh Joshi</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/designing-fast-and-scalable-python-microservices-with-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;django, combined with the django REST framework, makes it very easy to
build RESTful MicroServices. However, django is perceived to have some
overhead making it hard to build fast and scalable MicroServices. This
talk shows you how to squeeze the last bit of performance from django.
We will focus on django’s key architectural components and the right way
to use them. Using profiling, we will identify bottlenecks and fix them
enabling you to build scalable RESTful services that play to django’s
strengths. At the end of the talk you will have a good handle on
building scalable MicroServices with django.&lt;/p&gt;
</summary><category term="Django"></category><category term="Django REST framework"></category><category term="MicroServices"></category><category term="PyCon SK"></category><category term="Python"></category><category term="RESTful services"></category></entry><entry><title>Implementing distributed systems with Consul</title><link href="https://pyvideo.org/pycon-sk-2018/implementing-distributed-systems-with-consul.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Matúš Valo</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/implementing-distributed-systems-with-consul.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Developing distributed systems is hard. Implementing distributed system
from scratch requires knowledge of specialized algorithms and
programming techniques. Consul is distributed system which enables us to
build distributed system only by using Consul HTTP API. In our
presentation, we are going to show basic concepts of consul, building
our own consul cluster and showing how consul can be used for
implementing distributed system. Our discussion will include also
showing how we can benefit from consul even when using already existing
python distributed components.&lt;/p&gt;
</summary><category term="Consul"></category><category term="Distributed systems"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Industrial Machine Learning: Building scalable distributed machine learning pipelines with Python</title><link href="https://pyvideo.org/pycon-sk-2018/industrial-machine-learning-building-scalable-distributed-machine-learning-pipelines-with-python.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Alejandro Saucedo</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/industrial-machine-learning-building-scalable-distributed-machine-learning-pipelines-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk would provide useful and practical understanding on how to
build industry-ready machine learning models in python through
distributed, horizontally-scalable architectures. I will include why and
when these architectures are required, best practices, caveats,
technologies to use them, and a practical implementation using celery +
rabbitmq.&lt;/p&gt;
</summary><category term="Machine Learning"></category><category term="PyCon SK"></category><category term="Python"></category><category term="celery"></category><category term="rabbitmq"></category></entry><entry><title>Kiwi.com in ZOO</title><link href="https://pyvideo.org/pycon-sk-2018/kiwicom-in-zoo.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Stanislav Komanec</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/kiwicom-in-zoo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Počas posledných mesiacov, kedy naša firma rástla neuveriteľným tempom,
sa začal objavovať probém zdieľania best-practice naprieč Kiwi.com. V
micro- service orientovanej architektúre bolo nemožné, aby jeden človek
mal prehľad nad technologickým stackom všetkých služieb. S týmto
problémom sme sa rozhodli bojovať a vytvoriť službu, ktorá si bude držať
nad všetkými repozitármi prehľad a bude automaticky auditovať jednolivé
projekty. Poukážem na nevyhnutnosť používania systémov, ktoré uľahčujú
prácu a súčastne sa poutžívajú na zvyšovanie kvality servicov.&lt;/p&gt;
</summary><category term="PyCon SK"></category><category term="Python"></category><category term="kiwi.com"></category></entry><entry><title>LOCKED SHIELDS: What a good cyber testing looks like</title><link href="https://pyvideo.org/pycon-sk-2018/locked-shields-what-a-good-cyber-testing-looks-like.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Peter Garaj</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/locked-shields-what-a-good-cyber-testing-looks-like.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cvičenie Locked Shields je organizované Centrom výnimočnosti pre oblasť
kybernetickej obrany (CCD CoE). Svojou veľkosťou, rozsiahlosťou a
zameraním je Lockes Shields jedným s najunikátnejších kybercvičení na
svete. Ako človek, ktorý sa tohto každoročného cvičenia sporadicky
zúčastňuje by som rád povedal niečo o tom, ako to vypadá zvnútra a ako
sa slovenská vojenská kybernetická elita cvičí na zásah proti
kybernarušiteľom.&lt;/p&gt;
</summary><category term="LOCKED SHIELDS"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Our DevOps journey, is SRE the next stop?</title><link href="https://pyvideo.org/pycon-sk-2018/our-devops-journey-is-sre-the-next-stop.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Martin Strycek</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/our-devops-journey-is-sre-the-next-stop.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over past few years we see significant raise in technology requirements,
complexity of managing and delivering high reliability systems. Based on
our first-hand experience we see that there does not exist one silver
bullet way of doing DevOps and way how you manage Continuous Delivery
features. At Kiwi.com the transformation went from small applications to
complex micro services architectures. This change did also impact the
infrastructure not only by numbers of servers, also on complexity of the
system and ended with hybrid model of cloud and bare metal solution. In
this talk I will cover how our team of DevOps and Engineers battles with
tasks such as deployment to many enviroments, infrastructure changes,
monitoring and also creation of processes and runbooks. We believe that
this talk can inspire you to adapt changes within your teams and never
stop improving how you manage your infrastructure.&lt;/p&gt;
</summary><category term="DevOps"></category><category term="PyCon SK"></category><category term="Python"></category><category term="SRE"></category></entry><entry><title>Programming Python as performance: live coding with FoxDot</title><link href="https://pyvideo.org/pycon-sk-2018/programming-python-as-performance-live-coding-with-foxdot.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Ryan Kirkbride</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/programming-python-as-performance-live-coding-with-foxdot.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I will introduce the topic of live coding; the interactive
programming experience for generating audio and visuals but this talk
will mainly focus on audio. Live coders use programming languages to
describe rules for generating music but then re-write these rules while
the program is running. By continually writing and re-writing these
rules live coders creating a shifting musical experience that is always
in flux. All of this happens live in front of audience with the code
projected for all to see. I will go on to discuss the multiple tools
that are available for live coding and showcase the FoxDot environment,
which allows you to live code music using Python. I will talk about the
motivation for developing FoxDot and describe some of its key features
as well as how you can set it up yourself at home. The talk will be
concluded with a short demonstration that will be part explanation and
part performance.&lt;/p&gt;
</summary><category term="FoxDot"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Pythonic code, by example</title><link href="https://pyvideo.org/pycon-sk-2018/pythonic-code-by-example.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Michael Kennedy</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/pythonic-code-by-example.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We often hear the term Pythonic thrown around, but what exactly does it
mean? This talk will take you on a tour of some of the more important
pythonic concepts. You will see many examples of perfectly functional
Python code that is quite non-pythonic. We will evolve that code into
more an idiomatic form that fits better with the Python language and its
users.&lt;/p&gt;
</summary><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Skynet your Infrastructure with QUADS</title><link href="https://pyvideo.org/pycon-sk-2018/skynet-your-infrastructure-with-quads.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Will Foster</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/skynet-your-infrastructure-with-quads.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The very small 2-person DevOps team within Red Hat Performance/Scale
Engineering has developed a set of Open Source Python-based systems and
network automation provisioning tools designed to end-to-end automate
the provisioning of large-scale systems and network switches using tools
like Foreman, Ansible, and other Open Source bits.&lt;/p&gt;
&lt;p&gt;QUADS – or “quick and dirty scheduler” allows a normally overburdened
DevOps warrior to fully automate large swaths of systems and network
devices based on a schedule, even set systems provisioning to fire off
in the future so they can focus on important things like Netflix and
popcorn or not reading your emails while your datacenter burns in an
inferno of rapid, automated skynet provisioning. QUADS will also
auto-generate up-to-date infrastructure documentation, track scheduling,
systems assignments and more.&lt;/p&gt;
&lt;p&gt;In this talk we’ll show you how we’re using QUADS (backed by Foreman) to
empower rapid, meaningful performance and scale testing of Red Hat
products and technologies. While QUADS is a new project and under
constant development, the design approach to handling large-scale
systems provisioning as well as the current codebase is consumable for
others interested in improving the efficiency and level of automation
within their infrastructure.&lt;/p&gt;
&lt;p&gt;We'll also dive into purposeful development design choices, how some of
these choices might not scale for the future (but work well at present)
and provide a future roadmap of a new redesign based on Flask, Celery,
Sqlite and friends.&lt;/p&gt;
</summary><category term="DevOps"></category><category term="PyConSK"></category><category term="Python"></category><category term="Quads"></category></entry><entry><title>The Truth about Mastering Big Data</title><link href="https://pyvideo.org/pycon-sk-2018/the-truth-about-mastering-big-data.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Anton Caceres</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/the-truth-about-mastering-big-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What do you think is the most essential skill a data scientist should
master? Knowledge of deep learning tools? Hadoop? SciPy?&lt;/p&gt;
&lt;p&gt;This talk reveals the cornerstone of data science: nothing is as
important as asking data the right questions. To make it work, we need
some tools and curiosity.&lt;/p&gt;
&lt;p&gt;While focusing on tools, we will first go over the data science subject
as a whole, define our goals, continue with an overview of the essential
Python packages like Pandas and Jupyter Notebook, and conclude with a
live demo. The purpose of this talk is to understand our data: read it,
visualize, and formulate right questions, as well as to endorse your
imagination as a data scientist.&lt;/p&gt;
</summary><category term="Big Data"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Tools to interact with Bitcoin and Ethereum</title><link href="https://pyvideo.org/pycon-sk-2018/tools-to-interact-with-bitcoin-and-ethereum.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Ondrej Sika</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/tools-to-interact-with-bitcoin-and-ethereum.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You probably know Bitcoin. Nowadays, Bitcoin and cryptocurrencies
ecosystem is one of fastest growing industries. Many people build
software on the top of those distributed networks. I'll show you tools
you can use to interact with Bitcoin and Ethereum. From simple stuff
like wallets and transaction to playing with smart contracts.&lt;/p&gt;
</summary><category term="Bitcoin"></category><category term="Ethereum"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>When your wetware has too many threads - Tips from an ADHDer on how to improve your focus</title><link href="https://pyvideo.org/pycon-sk-2018/when-your-wetware-has-too-many-threads-tips-from-an-adhder-on-how-to-improve-your-focus.html" rel="alternate"></link><published>2018-03-10T00:00:00+00:00</published><updated>2018-03-10T00:00:00+00:00</updated><author><name>Aaron Bassett</name></author><id>tag:pyvideo.org,2018-03-10:pycon-sk-2018/when-your-wetware-has-too-many-threads-tips-from-an-adhder-on-how-to-improve-your-focus.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;My brain is different. The regions involved in concentration, impulse
control, and inhibition are smaller than usual; Like somewhere between
5% and 12% of adults I have ADHD. Even if you do not have the disorder
yourself you probably work, live or know someone who does. But the world
is not designed for people with ADHD, so to be successful I’ve had to
develop techniques to keep my concentration and procrastination in
check.&lt;/p&gt;
&lt;p&gt;In this talk, we’ll briefly look at what ADHD is and how it impairs not
only concentration but also executive function. Then we’ll explore how
changes in the workplace can benefit not just those with ADHD, but
anyone whose work requires creativity or extended periods of focus.
Next, we’ll look at some persistent myths about productivity, and what
you can do personally to increase your concentration and output without
burning out. Then I’ll present some techniques you can rollout within
your team to remove distractions while improving the quality of
communication.&lt;/p&gt;
</summary><category term="ADHD"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Conference opening (Friday) - Pycon SK 2018</title><link href="https://pyvideo.org/pycon-sk-2018/conference-opening-friday-pycon-sk-2018.html" rel="alternate"></link><published>2018-03-09T00:00:00+00:00</published><updated>2018-03-09T00:00:00+00:00</updated><author><name>Richard Kellner</name></author><id>tag:pyvideo.org,2018-03-09:pycon-sk-2018/conference-opening-friday-pycon-sk-2018.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pycon SK 2018 conference opening on Friday&lt;/p&gt;
&lt;p&gt;00:00 - Opening words, Richard Kellner
03:12 - Programming contest, Daniel Kontšek
05:16 - Opening words (cont'd), Richard Kellner
09:26 - Kistler
11:24 - Red Hat
12:02 - Eset
12:34 - Solargis
13:47 - Closing words, Richard Kellner&lt;/p&gt;
</summary><category term="Conference opening"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Docs or it didn't happen</title><link href="https://pyvideo.org/pycon-sk-2018/docs-or-it-didnt-happen.html" rel="alternate"></link><published>2018-03-09T00:00:00+00:00</published><updated>2018-03-09T00:00:00+00:00</updated><author><name>Mikey Ariel</name></author><id>tag:pyvideo.org,2018-03-09:pycon-sk-2018/docs-or-it-didnt-happen.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you ever skimmed through a README, tried to follow a quickstart
tutorial, attempted to decipher an error message, or typed '--help' in
your terminal, congratulations -- you have encountered documentation!&lt;/p&gt;
&lt;p&gt;Long gone are the days of massive books with never-ending stories about
your software. Today's users are smarter and less patient, which means
that we no longer need to document &lt;em&gt;all the things&lt;/em&gt;, as long as what we
do document is clear, concise, helpful, and accessible. And that's where
the real work starts.&lt;/p&gt;
&lt;p&gt;Documentation requires some attitude adjustment, since prose doesn't
neatly compile into binaries as code does. But Don't Panic(tm)! No
matter what your role is in the community, you can apply a few key
principles from the technical writing world to make your project more
docs-friendly, and therefore more user- and contributor-friendly.&lt;/p&gt;
&lt;p&gt;This high-level (and all-level) talk aims to introduce or re-acquaint
you with topics such as content strategy, docs-as-code, optimized DevOps
for docs, and contribution workflows. Open-source projects of all
shapes, ages, sizes are welcome!&lt;/p&gt;
</summary><category term="Documentation"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>How do we struggle with Python in Martin?</title><link href="https://pyvideo.org/pycon-sk-2018/how-do-we-struggle-with-python-in-martin.html" rel="alternate"></link><published>2018-03-09T00:00:00+00:00</published><updated>2018-03-09T00:00:00+00:00</updated><author><name>Tomáš Dudík</name></author><id>tag:pyvideo.org,2018-03-09:pycon-sk-2018/how-do-we-struggle-with-python-in-martin.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Od roku 2014 sa programovacím jazykom na gymnáziu Viliama Pauliny Tótha
stal Python. O tom akým spôsobom prebieha výučba, ako sme sa k jazyku
Python dostali a aké problémy sme museli riešiť, by som sa chcel s vami
podeliť. Nedajú sa ani opomenúť herné prostredia, ktoré pri vyučovaní
využívame. Takisto v poslednom roku sme začali využívať Jupyter
Notebooky s rozšírením Nbgrader, čo výučbu opäť posunulo dopredu. Ako
inšpiráciu pre ostatných by som rád ukázal aj niektoré príklady, s
ktorými trápime našich študentov.&lt;/p&gt;
</summary><category term="Education"></category><category term="JupiterNotebook"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Interviews (CC) - Pycon SK 2018</title><link href="https://pyvideo.org/pycon-sk-2018/interviews-cc-pycon-sk-2018.html" rel="alternate"></link><published>2018-03-09T00:00:00+00:00</published><updated>2018-03-09T00:00:00+00:00</updated><author><name>Richard Kellner</name></author><id>tag:pyvideo.org,2018-03-09:pycon-sk-2018/interviews-cc-pycon-sk-2018.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Interviews with PyCon SK 2018 conference participants.&lt;/p&gt;
&lt;p&gt;Richard Kellner - Conference Chair:
00:00 - What was the biggest challenge you had to face, while preparing the PyCon conference?
00:22 - Do you remember your first rendezvous with Python?
00:40 - What do you like the most about working with Python?
01:00 - Will you find motivation also to prepare the next year?
01:05 - What's your favourite programming language?
01:40 - What's your favourite animal?
02:04 - Would you like to say something to the organizers?
02:54 - Is this your first time on PyCon Slovakia?
03:11 - Can you see the improvement in comparison to previous years?
03:42 - Would you like to come also next year?
03:58 - Which presentation did you like the most?
04:35 - How did you like this conference?
EXTRA
04:52 - Which library do you use the most?
05:18 - How was the party yesterday?&lt;/p&gt;
</summary><category term="Conference"></category><category term="PyConSK"></category><category term="Python"></category></entry><entry><title>Open educational resources for learning Python</title><link href="https://pyvideo.org/pycon-sk-2018/open-educational-resources-for-learning-python.html" rel="alternate"></link><published>2018-03-09T00:00:00+00:00</published><updated>2018-03-09T00:00:00+00:00</updated><author><name>Ján Gondoľ</name></author><id>tag:pyvideo.org,2018-03-09:pycon-sk-2018/open-educational-resources-for-learning-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Otvorené vzdelávacie zdroje sú otvorene licencované materiály, ktoré je
možné bezplatne získavať, používať, upravovať, kombinovať s inými
zdrojmi a šíriť ďalej. Patria medzi ne výukové materiály ako napr.
články na webe, videá z konferencií a ďalších zdrojov, učebnice a
podobne. Príspevok poskytne prehľad dostupných otvorene licencovaných
vzdelávacích materiálov (predovšetkým v slovenčine, češtine a
angličtine), ako aj možností, ktorými môžu učitelia sami prispieť k
lepšej dostupnosti vzdelávacích materiálov (napr. zdieľaním odkazov s
kolegami prostredníctvom repozitára, ktorý sa momentálne pripravuje a
bude na PyConSK dostupný, či prekladom anglických materiálov do
slovenského jazyka).&lt;/p&gt;
</summary><category term="EduTack"></category><category term="Otvorené vzdelávacie zdroje"></category><category term="PyCon SK"></category><category term="Python"></category></entry><entry><title>Protecting Privacy and Security — For Yourself and Your Community</title><link href="https://pyvideo.org/pycon-sk-2018/protecting-privacy-and-security-for-yourself-and-your-community.html" rel="alternate"></link><published>2018-03-09T00:00:00+00:00</published><updated>2018-03-09T00:00:00+00:00</updated><author><name>Justin Mayer</name></author><id>tag:pyvideo.org,2018-03-09:pycon-sk-2018/protecting-privacy-and-security-for-yourself-and-your-community.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Internet service providers, ad networks, governments… Many organizations
have increasing access to our personal information. Protecting privacy
in this environment is a non-trivial effort, and the threats posed by
malicious attackers further exacerbates this problem. We, as developers,
owe it to ourselves and to our communities to do the best we can to
improve our collective security and privacy.&lt;/p&gt;
&lt;p&gt;Attendees of this talk will walk away with a thorough understanding of
the following topics and the problems they solve:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;multi-factor authentication&lt;/li&gt;
&lt;li&gt;encrypted DNS&lt;/li&gt;
&lt;li&gt;SSH/VPN tunnels&lt;/li&gt;
&lt;li&gt;full disk encryption&lt;/li&gt;
&lt;li&gt;compartment isolation&lt;/li&gt;
&lt;li&gt;“onion-skin” routing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition, digital interactions with other people increasingly occur
via hosted services, which while convenient can compromise the privacy,
integrity, and control of our data. With some open-source software and
inexpensive virtual servers, we can take back control and empower us all
to securely share our lives with one another.&lt;/p&gt;
</summary><category term="Privacy"></category><category term="PyCon SK"></category><category term="Python"></category><category term="Security"></category></entry><entry><title>Python Days in Martin and follow-up activities</title><link href="https://pyvideo.org/pycon-sk-2018/python-days-in-martin-and-follow-up-activities.html" rel="alternate"></link><published>2018-03-09T00:00:00+00:00</published><updated>2018-03-09T00:00:00+00:00</updated><author><name>Lenka Huňorová</name></author><id>tag:pyvideo.org,2018-03-09:pycon-sk-2018/python-days-in-martin-and-follow-up-activities.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;V júni 2017 sa na SPŠ Martin a na Gymnáziu V.P.T. Martin uskutočnila
dvojdňová konferencia o jazyku Python, na ktorej sa zúčastnilo cca 80
žiakov z 8 stredných škôl okresu Martin i Dolného Kubína. Prednášajúcimi
a vedúcimi workshopov boli odborníci z praxe a učitelia z vysokých škôl.
Odzneli zaujímavé prednášky, robilo sa veľa workshopov. Na konferencii
sme nadviazali spoluprácu s prednášajúcimi i lepšiu spoluprácu medzi
školami. Taktiež sa nám podarilo konferenciu a programovací jazyk Python
spopularizovať v regionálnych médiách.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Následne sme na SPŠ Martin i na Gymnáziu V.P.T. v Martine začali v šk.
roku 2017/2018 učiť programovanie v jazyku Python, robiť v tomto
jazyku ročníkové projekty, súťažiť v Zenite a celkovo tento jazyk
podporovať. Sami žiaci prinášajú nové nápady a zlepšenia, napríklad
pripraviť mini Python Day pre žiakov základných škôl, ktorí by sa
chceli venovať štúdiu programovania na SŠ a pod.&lt;/div&gt;
&lt;div class="line"&gt;Taktiež by sme chceli na PyCone SK 2018 so žiakmi našej školy
predstaviť práce - maturitné zadania, ktoré robia v jazyku Python
alebo iné programy, ktoré robia na hodinách, prípadne vo voľnom čase.&lt;/div&gt;
&lt;/div&gt;
</summary><category term="PyCon SK"></category><category term="Python"></category><category term="Python Days"></category></entry></feed>