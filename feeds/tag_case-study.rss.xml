<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - case study</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 03 Jun 2022 00:00:00 +0000</lastBuildDate><item><title>Pyramid advanced configuration tactics for nice apps and libs</title><link>https://pyvideo.org/europython-2013/pyramid-advanced-configuration-tactics-for-nice-apps-and-libs.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Georges Dubus</dc:creator><pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-05:/europython-2013/pyramid-advanced-configuration-tactics-for-nice-apps-and-libs.html</guid><category>EuroPython 2013</category><category>web</category><category>pyramid</category><category>case-study</category></item><item><title>SimpleManagement: come semplificare la gestione progetti con Python</title><link>https://pyvideo.org/europython-2013/simplemanagement-come-semplificare-la-gestione-progetti-con-python.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Maurizio Delmonte</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:/europython-2013/simplemanagement-come-semplificare-la-gestione-progetti-con-python.html</guid><category>EuroPython 2013</category><category>project-management</category><category>open-source</category><category>teamwork</category><category>zope</category><category>plone</category><category>case-study</category></item><item><title>Lost in OAuth? Learn Velruse And Get Your Life Back!</title><link>https://pyvideo.org/europython-2013/lost-in-oauth-learn-velruse-and-get-your-life-back.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Mleczko</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:/europython-2013/lost-in-oauth-learn-velruse-and-get-your-life-back.html</guid><category>EuroPython 2013</category><category>web</category><category>pyramid</category><category>HTTP</category><category>open-source</category><category>case-study</category></item><item><title>Celery and Social Networks. 5 Things I Have Learned During Earthquake Hackathon.</title><link>https://pyvideo.org/europython-2013/celery-and-social-networks-5-things-i-have-learned-during-earthquake-hackathon.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Mleczko</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:/europython-2013/celery-and-social-networks-5-things-i-have-learned-during-earthquake-hackathon.html</guid><category>EuroPython 2013</category><category>celery</category><category>security</category><category>open-source</category><category>case-study</category><category>social</category></item><item><title>Downloading a Billion Files in Python</title><link>https://pyvideo.org/europython-2019/downloading-a-billion-files-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You've been given a task. You need to download some files from a server
to your local machine. The files are fairly small, and you can list and
access these files from the remote server through a REST API. You'd like
to download them as fast as possible. The catch? There's a billion of
them. Yes, one billion files.&lt;/p&gt;
&lt;p&gt;How would would you do this? Would you do this synchronously in a single
for loop? Would you use a producer/consumer queue with threads?
Multiprocessing? Asyncio?&lt;/p&gt;
&lt;p&gt;In this talk, we'll examine 3 different mechanisms for concurrently
downloading files: multithreading, multiprocessing, and asyncio.&lt;/p&gt;
&lt;p&gt;For each of these mechanisms we'll look at design best practices, how to
handle debugging and error handling, and of course the overall
performance. By examining three different approaches using the same data
set, we gain a better understanding of the tradeoffs of each approach so
we can pick the right library for the job.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Saryerwinnie</dc:creator><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-12:/europython-2019/downloading-a-billion-files-in-python.html</guid><category>EuroPython 2019</category><category>ASYNC / Concurrency</category><category>Case Study</category><category>Multi-Processing</category><category>Multi-Threading</category><category>Performance</category></item><item><title>Enhancing Angklung Music Rehearsals with Python</title><link>https://pyvideo.org/europython-2019/enhancing-angklung-music-rehearsals-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Angklung is a traditional musical instrument from Indonesia. This
instrument has a lot of variety in how it is performed; a common format
is the orchestral format in which 15-30 players gather to form a team.
Playing Angklung in this way is fun but also presents some challenges
that are hard to solve manually.&lt;/p&gt;
&lt;p&gt;First, I will introduce you to the instrument and how it works/how it is
played. Then, I will show you how Python-based algorithms can be used to
ease the pains of managing Angklung teams, by reading Angklung-specific
sheet music and calculating the most optimal distribution of Angklung
based on several important factors.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trapsilo Bumi</dc:creator><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-12:/europython-2019/enhancing-angklung-music-rehearsals-with-python.html</guid><category>EuroPython 2019</category><category>Algorithms</category><category>Analytics</category><category>Beginners</category><category>Case Study</category><category>Use Case</category></item><item><title>How we run GraphQL APIs in production on our Kubernetes cluster</title><link>https://pyvideo.org/europython-2019/how-we-run-graphql-apis-in-production-on-our-kubernetes-cluster.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I would like to share the workflow and tools we use to
build, deploy and operate GraphQL APIs on our on-premise Kubernetes
cluster.&lt;/p&gt;
&lt;p&gt;I will share code and command examples explaining how we are operating
our applications since our recent transition from REST APIs on Web
servers to GraphQL APIs containers on Kubernetes.&lt;/p&gt;
&lt;p&gt;This talk will not be about the difference between REST and GraphQL but
focus on the workflow, tools and experience we gained in switching our
run time environments and API models.&lt;/p&gt;
&lt;p&gt;At Numberly, we have built and are operating our own on-premise
Kubernetes cluster so we will also be talking about its capabilities and
share some of the experience we gained in doing so.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Proposed agenda:&lt;/div&gt;
&lt;div class="line"&gt;- Our previous workflow and its limitations&lt;/div&gt;
&lt;div class="line"&gt;- How we designed our Kubernetes cluster, its capabilities and the
choices we made&lt;/div&gt;
&lt;div class="line"&gt;- Developer workflow, environments management and deployment&lt;/div&gt;
&lt;div class="line"&gt;- Our GraphQL stack, featuring a sample application&lt;/div&gt;
&lt;div class="line"&gt;- What we're still working on to improve&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexys Jacob</dc:creator><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-12:/europython-2019/how-we-run-graphql-apis-in-production-on-our-kubernetes-cluster.html</guid><category>EuroPython 2019</category><category>APIs</category><category>Best Practice</category><category>Case Study</category><category>Docker</category><category>Infrastructure</category></item><item><title>Tips for the scientific programmer</title><link>https://pyvideo.org/europython-2019/tips-for-the-scientific-programmer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is a talk for people who need to perform large numeric
calculations. They could be scientists, developers working in close
contact with scientists, or even people working on finance and other
quantitative fields. Such people are routinely confronted with issues
like&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;1 parallelism: how to parallelize calculations efficiently&lt;/div&gt;
&lt;div class="line"&gt;2 data: how to store and manage large amounts of data efficiently&lt;/div&gt;
&lt;div class="line"&gt;3 memory: how to avoid running out of memory&lt;/div&gt;
&lt;div class="line"&gt;4 performance: how to be fast&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The goal of the talk is to teach some lessons learned after several
years of doing numeric simulations in a context were micro-optimizations
are the least important factor, while overall architecture, design
choices and good algorithms are of paramount importance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michele Simionato</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-11:/europython-2019/tips-for-the-scientific-programmer.html</guid><category>EuroPython 2019</category><category>Algorithms</category><category>Architecture</category><category>Big Data</category><category>Case Study</category><category>Performance</category></item><item><title>The dos and don'ts of task queues</title><link>https://pyvideo.org/europython-2019/the-dos-and-donts-of-task-queues.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At Kiwi.com we heavily rely on task queues and asynchronous execution of
code to process large amounts of requests coming to our back-ends. With
the separation of our codebase to microservices, we can quickly try new
tools and different approaches to process these large volumes of
requests. The microservice we’ll be talking about is making unreliable
slow 3rd party services reliable and asynchronous with a bit of business
logic sprinkled on top of it. We’ll tell a failure story of ours but
resulting in a valuable lesson.&lt;/p&gt;
&lt;p&gt;Most of our services use Celery and it’s the go-to tool for new services
as well but we wanted to be different with this new microservice. RQ is
the next best choice for task queues and it is presented as simpler and
more straightforward than Celery. That can definitely be true but after
3 weeks of research, development and struggling we found out the
unpleasant truth about being simple and making the right choices. We
won’t talk about comparing the frameworks but rather about the approach
on how to experiment with new things in your environment. After that,
we’ll present our current setup which can take upon any number of
tasks*. How we orchestrate the app and continuously integrate and
deploy and what fun things await ahead of us in the development.&lt;/p&gt;
&lt;p&gt;*Conditions may apply.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Petr Stehlík</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-10:/europython-2019/the-dos-and-donts-of-task-queues.html</guid><category>EuroPython 2019</category><category>ASYNC / Concurrency</category><category>Architecture</category><category>Best Practice</category><category>Case Study</category><category>failures/mistakes</category></item><item><title>Accessible Python education for schoolgirls using Avocados, Zombies, and Korean!</title><link>https://pyvideo.org/europython-2020/accessible-python-education-for-schoolgirls-using-avocados-zombies-and-korean.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Imagine this school scenario: an entire year group of students aged 11-12, the majority completely new to coding, undergoing 6 hours of compulsory lessons on Python for Scientific Computing.&lt;/p&gt;
&lt;p&gt;Now imagine these outcomes:
•       Students wanting to continue coding from the lessons outside of class in their own time
•       Students asking to replicate the lesson computing environment at home
•       Students disappointed for the lessons to come to an end and asking for more
•       Students struggling in Science discovering intrinsic ability in computing, bringing new enjoyment and confidence&lt;/p&gt;
&lt;p&gt;And lastly, imagine that all the students are girls!&lt;/p&gt;
&lt;p&gt;This talk will share this actual case study of a pioneering Python education initiative implemented at a secondary school for girls in London, UK for a cohort of 120 students.&lt;/p&gt;
&lt;p&gt;The audience will gain actionable insights of the factors that enabled these children to develop basic but working proficiency of a mainstream scientific data stack using typical school IT resources.&lt;/p&gt;
&lt;p&gt;Ultimately, this talk aims to increase awareness of Scientific Computing &amp;amp; Data Science as potentially effective and empowering Python education for young people.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chiin-Rui Tan</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/accessible-python-education-for-schoolgirls-using-avocados-zombies-and-korean.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Case Study</category><category>Data Science</category><category>Education</category><category>Learning</category><category>Scientific Libraries (Numpy/Pandas/SciKit/...)</category></item><item><title>Building The Perfect Personalised Menu Using Python</title><link>https://pyvideo.org/europython-2020/building-the-perfect-personalised-menu-using-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How Gousto is building an algorithm to offer personalised menus to their customers using python&lt;/p&gt;
&lt;p&gt;This talk will describe how Gousto, a leading recipe box service based in the UK, is using python to build a personalisation ecosystem. Our menu planning optimisation algorithm allows us to create the perfect mix of recipes, ensuring a variety of dish types, cuisines and ingredients. Our recommendation engine sitting on top of this can then offer each customer a personally curated menu, making sure that users have meaningful choice. All this while ensuring that we are also optimising for maximum performance from the operations point of view!&lt;/p&gt;
&lt;p&gt;To build this, we have used a range of Python packages, such as DEAP for implementing genetic algorithms, and integrations, such as the one for graph database neo4j.&lt;/p&gt;
&lt;p&gt;The talk will give an overview of our methods, our infrastructure, our results and everything that we have learnt along the way!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Irene Iriarte</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/building-the-perfect-personalised-menu-using-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Algorithms</category><category>Case Study</category><category>Data Science</category><category>E-Commerce</category><category>Machine-Learning</category></item><item><title>Extending HTTP for fun and non-profit</title><link>https://pyvideo.org/europython-2020/extending-http-for-fun-and-non-profit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;My journey into the IETF HTTP workgroup&lt;/p&gt;
&lt;p&gt;Writing API guidelines is a best practice for standardizing APIs produced by thousands of service provider, but what happens when those rules are not backed by internet standards?&lt;/p&gt;
&lt;p&gt;This talk proposes an iterative strategy for identify and standardize inside IETF key features of your API guidelines.
The steps includes feature landscaping, stakeholder identification and engagement, prototyping and writing an actual internet-draft.&lt;/p&gt;
&lt;p&gt;The strategy is shown using two examples:
- rewriting of &lt;cite&gt;Digest&lt;/cite&gt; header RFC3230 adding clarifications useful for implementors;
- proposing new &lt;cite&gt;RateLimit&lt;/cite&gt; headers and engage with implementors (Microsoft, Red Hat, Kong, ..).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Roberto Polli</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/extending-http-for-fun-and-non-profit.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>APIs</category><category>Best Practice</category><category>Case Study</category><category>Community</category><category>HTTP</category></item><item><title>Mastering a data pipeline with Python: 6 years of learned lessons from mistakes</title><link>https://pyvideo.org/europython-2020/mastering-a-data-pipeline-with-python-6-years-of-learned-lessons-from-mistakes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building data pipelines are a consolidated task, there are a vast number of tools that automate and help developers to create data pipelines with few clicks on the cloud. It might solve non-complex or well-defined standard problems. This presentation is a demystification of years of experience and painful mistakes using Python as a core to create reliable data pipelines and manage insanely amount of valuable data. Let's cover how each piece fits into this puzzle: data acquisition, ingestion, transformation, storage, workflow management and serving. Also, we'll walk through best practices and possible issues. We'll cover PySpark vs Dask and Pandas, Airflow, and Apache Arrow as a new approach.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robson Junior</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/mastering-a-data-pipeline-with-python-6-years-of-learned-lessons-from-mistakes.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>Big Data</category><category>Case Study</category><category>Data Science</category><category>Open-Source</category></item><item><title>Painless Machine Learning in Production</title><link>https://pyvideo.org/europython-2020/painless-machine-learning-in-production.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Developing machine learning models is easy; training, deploying, monitoring, scaling, and maintaining them in an automated fashion - all while maintaining your sanity - is hard.&lt;/p&gt;
&lt;p&gt;In this session, I'll discuss the infrastructure and tooling my small team of data science practitioners and engineers is using to manage and orchestrate the machine learning model lifecycle, including pitfalls we've encountered along the way. Particular attention will be paid to where we've opted to use off-the-shelf solutions versus developing our own, the importance of developer ergonomics, and how to maximally empower data scientists to get their work into production without the need for a dedicated MLOps team.&lt;/p&gt;
&lt;p&gt;The talk will cover our ML stack as it exists in production today, and will touch on our application of a number of technologies and techniques, including:
- AWS SageMaker
- Airflow
- Docker
- Cookiecutter
- Property-based testing
- Jsonschema
- Linting
- Slack integration
- Model artifacts and diagnostics
- Automated deployments and rollbacks
- Healthchecks
- Autoscaling
- DBT&lt;/p&gt;
&lt;p&gt;At the end of the session, attendees should expect to leave with new insights that they can apply immediately to their own ML systems and infrastructure, as well as a better understanding of how to minimize engineering and ops overhead, in the real world, across data science teams of any size and composition.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chase Stevens</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/painless-machine-learning-in-production.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Case Study</category><category>Data Science</category><category>DevOps general</category><category>Infrastructure</category><category>Machine-Learning</category></item><item><title>Python Emergency Remote Teaching</title><link>https://pyvideo.org/europython-2020/python-emergency-remote-teaching.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Online Python programming course offered in response to a COVID-19 pandemic lockdown&lt;/p&gt;
&lt;p&gt;During the pandemic lockdown of COVID-19, we found a very different context from the usual: a) students with much more time available for learning b) many students who did not have a personal computer and could only access classes by cell phone c) difficulty to realistically assess learning. In this lecture we will present the real experiences in a traditional programming course given during the Covid-19 pandemic.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fernando Masanori Ashikaga</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/python-emergency-remote-teaching.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>Case Study</category><category>Community</category><category>Education</category></item><item><title>Reduce hardware costs in Internet of Things using Python</title><link>https://pyvideo.org/europython-2020/reduce-hardware-costs-in-internet-of-things-using-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An electronics teacher's perspective&lt;/p&gt;
&lt;p&gt;I guide students in developing systems which are real world and need less hardware. This is possible in 2 steps. One,reduce collecting data which is already available online. Two, compute on cloud instead on the hardware.&lt;/p&gt;
&lt;p&gt;Cloud computing and Web services have opened a plethora of ways which were science fiction for electronics academia. Python packages such as requests, beautifulsoup and pyserial automate electronics at the grassroot level pushing  all complexities to the cloud.&lt;/p&gt;
&lt;p&gt;This talk is about how I motivate students to use python for tasks which otherwise would require complex setup and costly hardware. I will present case studies of accessing websites (ethically per se!) of Indian Meteorological Department and Indian Railways for Internet of Things.
Ready to return to a classroom session? Login for More!!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vijay Sajjanar</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/reduce-hardware-costs-in-internet-of-things-using-python.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Beginners</category><category>Case Study</category><category>Data</category><category>Internet of Things</category><category>Web Crawling</category></item><item><title>Running Unit Test on Top of Serverless Service</title><link>https://pyvideo.org/europython-2020/running-unit-test-on-top-of-serverless-service.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Increase your parallelization by 50x&lt;/p&gt;
&lt;p&gt;I will share on how to utilize serverless architecture for a less common scenario - unit testing.
As part of the talk, we will also discuss different approaches to parallelizing unit test suite execution.
Attendees will also learns on cost-benefit analysis related to increasing developer productivity.&lt;/p&gt;
&lt;p&gt;Outline:
- Introduction
- Different approaches to parallelizing unit test execution with pro &amp;amp; cons
- What we learned (gotcha) when implementing serverless as a unit test runner
- Cost-Benefit Analysis and usage report,
- Q&amp;amp;A&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adinata Thayib</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/running-unit-test-on-top-of-serverless-service.html</guid><category>EuroPython 2020</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Case Study</category><category>Multi-Processing</category><category>Public Cloud (AWS/Google/...)</category><category>Test Libraries (pytest/nose/...)</category><category>Tooling</category></item><item><title>La Continuous Delivery è una condizione mentale</title><link>https://pyvideo.org/pycon-italia-2022/la-continuous-delivery-e-una-condizione-mentale.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La Continuous Delivery è una condizione mentale - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In questo talk racconterò il mio percorso evolutivo da un approccio
waterfall a quello iterativo passando per i tanti errori commessi.
Mostrerò come abbiamo realizzato un template che aiuta nel processo di
Continuous Delivery utilizzando Kubernetes, Docker, Python e Terraform.
Vedo la gente passare i venerdì a fare rilasci in produzione e passare
il weekend a fare bug fixing. Vedo la gente stufa di fare sempre le
stesse attività ripetitive e perseverare nella solita routine da
developer frustrato. Ma tutto questo si può evitare con un cambio di
mentalità. Quello che voglio raccontare in questo talk è il mio percorso
evolutivo da un approccio waterfall a quello iterativo passando per i
tanti errori commessi.&lt;/p&gt;
&lt;p&gt;Racconterò come abbiamo realizzato un template che aiuta nel processo di
Continuous Delivery, dove la parola “continuous” è quella che definisce
bene l’importanza di questo processo. Nell’Agile Software Development,
il rilascio del software funzionante è uno dei punti più importanti e
questo deve avvenire spesso. Per poter rilasciare nuove funzionalità
però, dovremo scrivere tutti i test necessari, eseguirli, creare una
build e infine effettuare il deploy vero e proprio.&lt;/p&gt;
&lt;p&gt;Nello sviluppo del software moderno la Continuous Delivery (CD) è quel
processo che permette all’intero team di affrontare qualsiasi
cambiamento, come nuove feature, bugfix o esperimenti, in un modo
sostenibile, sicuro e rapido. In questo processo generalmente vengono
utilizzate tra le altre cose, due pratiche per effettuare i rilasci
continui: Continuous Integration (CI) e Continuous Deployment (CD).&lt;/p&gt;
&lt;p&gt;In questo talk racconterò come, insieme ai miei colleghi, siamo arrivati
alla costruzione di un processo automatizzato per effettuare rilasci sin
dal primo commit utilizzando Kubernetes, Docker, Python e Terraform per
la creazione di applicazioni web basate su Django e React.&lt;/p&gt;
&lt;p&gt;Slide:&lt;/p&gt;
&lt;p&gt;Speaker: Raffaele Colace&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raffaele Colace</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/la-continuous-delivery-e-una-condizione-mentale.html</guid><category>PyCon Italia 2022</category><category>agile</category><category>best practice</category><category>case study</category><category>devops</category><category>django</category></item><item><title>Optimal design &amp; control of a telecommunications network</title><link>https://pyvideo.org/pycon-italia-2022/optimal-design-control-of-a-telecommunications-network.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Optimal design &amp;amp; control of a telecommunications network - PyCon Italia
2022&lt;/p&gt;
&lt;p&gt;Everyone wants to go faster on the Internet, or design faster networks.
You can throw a lot of money to it or you can squeeze every bit from it.
I’ll show through a research project how can we do the latter and create
better networks. These two years have shown big weaknesses in the design
and usage of the Internet and many other important enterprise networks.
A good Quality of Experience and cost-effectiveness are paramount for
network operators and designers. Enter optimal design and control…
Through the use of optimal control it’s possibile to double the
performance with respect to how it’s operated today, furthermore it
allows us to better organize the network in order to minimally distrupt
the users in the event of a failure. I’ll show through two examples the
algorithms, the theory behind them and the code.&lt;/p&gt;
&lt;p&gt;Speaker: Andi Dulla&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andi Dulla</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/optimal-design-control-of-a-telecommunications-network.html</guid><category>PyCon Italia 2022</category><category>abstractions</category><category>architecture</category><category>case study</category><category>communication</category></item><item><title>Predictive maintenance: from data collection to ML key approaches</title><link>https://pyvideo.org/pycon-italia-2022/predictive-maintenance-from-data-collection-to-ml-key-approaches.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Predictive maintenance: from data collection to ML key approaches -
PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;Predictive Maintenance (PM) prevents future system failures and helps to
reduce the maintenance costs. Machine Learning with the use of IoT
Sensors is the most efficient approach. Come to see some case study
solved by Vedrai - one of the top AI startups in Europe - and how it
addresses the topic. PROBLEM.&lt;/p&gt;
&lt;p&gt;The world we live in today is highly dependent on the functioning of
machines and systems. Breakdown of machinery and tools should never come
as a surprise. When predictive maintenance is working effectively,
maintenance is only performed on machines when it is required. That is,
just before failure is likely to occur. This brings reduction of the
downtime and cost, maximizes component utilization and residual useful
life.&lt;/p&gt;
&lt;p&gt;SOLUTION.&lt;/p&gt;
&lt;p&gt;Machine learning-based PdM is one of the best-known data-based
analytical approaches for monitoring industrial systems to maximize
reliability and efficiency. It is the most efficient method as it allows
the maintenance team to anticipate failure predictions, reduce equipment
downtime, increase reliability and improve performance by reducing
operations and maintenance expenses. The talk will outline the
methodologies applied by Vedrai Team - one of the top AI startups in
Europe - that allow it to overcome the most common obstacles of ML-based
PdM.&lt;/p&gt;
&lt;p&gt;TALK OUTLINE.&lt;/p&gt;
&lt;p&gt;The main purpose of this presentation is to show how to build and use
PdM models in their entirety, and it will be based on the following
steps:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;collect OT (operational technology), IT (informational technology)
data and other information about manufacturing processes&lt;/li&gt;
&lt;li&gt;search patterns and detect anomalies&lt;/li&gt;
&lt;li&gt;train ML model to provide early warning notifications and diagnosis
of equipment problems days, weeks or months in advance of the fault&lt;/li&gt;
&lt;li&gt;present key studies that show how ML algorithms can effectively
estimate the maintenance plan&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Speaker: KHVATOVA KRISTINA&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">KHVATOVA KRISTINA</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/predictive-maintenance-from-data-collection-to-ml-key-approaches.html</guid><category>PyCon Italia 2022</category><category>case study</category><category>education</category><category>iot</category><category>machine learning</category><category>predictions</category></item><item><title>Python's Life of the Brain</title><link>https://pyvideo.org/pycon-italia-2022/pythons-life-of-the-brain.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python’s Life of the Brain - PyCon Italia 2022&lt;/p&gt;
&lt;p&gt;In this talk, you will learn how to analyse the data coming from the
human brain, how to visualise and process individual neurons, how to
design customised cognitive experiments and finally how to create your
own brain from scratch in jupyter notebook! There is no need to praise
Python for its ubiquitousness in various areas of industry or science.
We all know about Python applications to engineering, web development,
data analysis, or machine learning. But an emerging number of packages
appear that allow scientists and brain research enthusiasts to analyse
the data coming from the brain, visualise and process individual neurons
from various brain areas, design customised cognitive experiments and
finally simulate the whole brain in silico! In this talk, you’ll learn
how to do that, without leaving your jupyter notebook.&lt;/p&gt;
&lt;p&gt;Speaker: Dominik Krzeminski&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dominik Krzeminski</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-06-03:/pycon-italia-2022/pythons-life-of-the-brain.html</guid><category>PyCon Italia 2022</category><category>case study</category><category>education</category><category>open source</category><category>tooling</category><category>visualization</category></item></channel></rss>