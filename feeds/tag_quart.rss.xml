<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Quart</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 16 May 2025 00:00:00 +0000</lastBuildDate><item><title>Quart in Action: Async APIs for Model Front-Ends</title><link>https://pyvideo.org/flaskcon-2023/quart-in-action-async-apis-for-model-front-ends.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, Adam will show you how to build async APIs using Quart.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Englander</dc:creator><pubDate>Sat, 16 Dec 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-12-16:/flaskcon-2023/quart-in-action-async-apis-for-model-front-ends.html</guid><category>FlaskCon 2023</category><category>quart</category><category>async</category><category>api</category></item><item><title>Testing Flask and Quart apps with Playwright</title><link>https://pyvideo.org/flaskcon-2025/testing-flask-and-quart-apps-with-playwright.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pamela Fox shows how Playwright can be used to write and run tests against a Flask/Quart app in a browser. Presented at FlaskCon 2025.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pamela Fox</dc:creator><pubDate>Fri, 16 May 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-05-16:/flaskcon-2025/testing-flask-and-quart-apps-with-playwright.html</guid><category>FlaskCon 2025</category><category>FlaskCon</category><category>Playwright</category><category>Testing</category><category>Flask</category><category>Quart</category><category>Browser Testing</category><category>Python</category></item><item><title>Turn your Flask App into Async using Quart</title><link>https://pyvideo.org/pycon-philippines-2019/turn-your-flask-app-into-async-using-quart.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you already use our beloved micro-framework Flask but have a problem with the speed and scalability? We hear a lot of buzz with the new fancy asynchronous Python programming using async/await keyword to make our Python code run faster. But really how async works are still not spread well and the majority of Python programmer still not familiar using async/await keyword. In this talks, because Flask is not intended to support async (yet), we are will explore Quart, the Python ASGI web microframework. It is intended to provide the easiest way to use asyncio functionality in a web context, especially with existing Flask apps. This is possible as the Quart API is a superset of the Flask API. So you can instantly migrate your Flask app easily!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Doni Rubiagatra</dc:creator><pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-02-23:/pycon-philippines-2019/turn-your-flask-app-into-async-using-quart.html</guid><category>PyCon Philippines 2019</category><category>quart</category><category>flask</category><category>async</category></item></channel></rss>