<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_image-match.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-05-31T00:00:00+00:00</updated><entry><title>One in a billion: finding matching images in very large corpora</title><link href="https://pyvideo.org/pydata-berlin-2016/one-in-a-billion-finding-matching-images-in-very-large-corpora.html" rel="alternate"></link><published>2016-05-31T00:00:00+00:00</published><updated>2016-05-31T00:00:00+00:00</updated><author><name>Ryan Henderson</name></author><id>tag:pyvideo.org,2016-05-31:pydata-berlin-2016/one-in-a-billion-finding-matching-images-in-very-large-corpora.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Berlin 2016&lt;/p&gt;
&lt;p&gt;The goal was not only to support high write volumes of over 10k/s but also to support fast lookup of similar images around 1-2s for over 1B images. Though similar paid services and free image hashing libraries exist, this may be the first complete free open-source solution. Available at: &lt;a class="reference external" href="https://github.com/ascribe/image-match"&gt;https://github.com/ascribe/image-match&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;image-match started as an internal project. We needed a way, given some target image, to find similar images downloaded by our web-crawler (think Tineye).&lt;/p&gt;
&lt;p&gt;So not only did we need to support fast, accurate lookup for millions or even billions of images, we also needed to facilitate very high volume insertion -- around 10k images per second.&lt;/p&gt;
&lt;p&gt;In my talk, I will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The Problem: why is finding similar images hard?&lt;/li&gt;
&lt;li&gt;Algorithm: based on this paper&lt;/li&gt;
&lt;li&gt;Performance: but does it scale?&lt;/li&gt;
&lt;li&gt;Alternatives&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="image-match"></category></entry></feed>