<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_nicholas-hunt-walker.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-01-22T00:00:00+00:00</updated><entry><title>A Web App in Four Frameworks</title><link href="https://pyvideo.org/pycascades-2018/a-web-app-in-four-frameworks.html" rel="alternate"></link><published>2018-01-22T00:00:00+00:00</published><updated>2018-01-22T00:00:00+00:00</updated><author><name>Nicholas Hunt-Walker</name></author><id>tag:pyvideo.org,2018-01-22:pycascades-2018/a-web-app-in-four-frameworks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we take a tour of some Python web frameworks through the lens of an API for the same web application: a simple To Do list. We'll see how the same problems are handled across Django, Flask, Pyramid, and Tornado, and why you might choose one over the rest.&lt;/p&gt;
</summary><category term="framework"></category><category term="Django"></category><category term="Flask"></category><category term="Pyramid"></category><category term="Tornado"></category></entry></feed>