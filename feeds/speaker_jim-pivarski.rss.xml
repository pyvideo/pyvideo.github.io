<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Jim Pivarski</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 11 Jul 2022 00:00:00 +0000</lastBuildDate><item><title>Awkward Array: Manipulating JSON like Data with NumPy like Idioms</title><link>https://pyvideo.org/scipy-2020/awkward-array-manipulating-json-like-data-with-numpy-like-idioms.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jim Pivarski</dc:creator><pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-06:/scipy-2020/awkward-array-manipulating-json-like-data-with-numpy-like-idioms.html</guid><category>SciPy 2020</category></item><item><title>SciPy Tools Plenary Day 1</title><link>https://pyvideo.org/scipy-2021/scipy-tools-plenary-day-1.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">K. Jarrod Millman</dc:creator><pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-07-12:/scipy-2021/scipy-tools-plenary-day-1.html</guid><category>SciPy 2021</category></item><item><title>Loopy and Unloopy Programming Techniques</title><link>https://pyvideo.org/scipy-2022/loopy-and-unloopy-programming-techniques.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's curious that Python is now the leading language for scientific computing, since pure Python code is not fast and slow code × big data = long wait times. However, most number-crunching in Python is performed by optimized, precompiled libraries: Python only directs the computation, steering it toward the user's intent. As a consequence, the most basic syntax you might learn in an introductory programming class—&lt;cite&gt;if&lt;/cite&gt;, &lt;cite&gt;for&lt;/cite&gt;, and &lt;cite&gt;while&lt;/cite&gt; loops—is not what you should use when dealing with big data. You should use &amp;quot;&amp;quot;vectorized&amp;quot;&amp;quot; expressions, like slices, broadcasting, and reducers.&lt;/p&gt;
&lt;p&gt;This tutorial is an introduction to vectorized array programming. Python beginners are welcome—unfamiliar syntax will be minimized and explained as necessary—because the focus is on _techniques_, rather than language or library features. It is a guided tour through problems with loopy and unloopy solutions, using NumPy and Awkward Array for concreteness, but the techniques can be adapted to any array-oriented setting, such as GPU programming (demo included).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/jpivarski-talks/2022-07-11-scipy-loopy-tutorial"&gt;https://github.com/jpivarski-talks/2022-07-11-scipy-loopy-tutorial&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jim Pivarski</dc:creator><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-07-11:/scipy-2022/loopy-and-unloopy-programming-techniques.html</guid><category>SciPy 2022</category></item></channel></rss>