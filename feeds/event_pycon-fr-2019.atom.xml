<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-fr-2019.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-11-02T00:00:00+00:00</updated><entry><title>Ajoutez de l'observabilité à votre application Django</title><link href="https://pyvideo.org/pycon-fr-2019/ajoutez-de-lobservabilite-a-votre-application-django.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Lionel Porcheron</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/ajoutez-de-lobservabilite-a-votre-application-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Avant, on monitorait les serveurs avec un ping et un check de connection tcp. En 2019, on observe les applications et l'infrastructure qui la supporte.
Le but de cette présentation et de montrer comment avec quelques outils Open Source autour de Prometheus vous pouvez récolter des tonnes d'informations précieuses sur la santé de votre application et de votre infrastructure qui peuvent être utiles pour mieux comprendre ce qui se passe dans et autour de votre application.&lt;/p&gt;
</summary></entry><entry><title>APIs and Language Processing with Python for Twitter</title><link href="https://pyvideo.org/pycon-fr-2019/apis-and-language-processing-with-python-for-twitter.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Sonal Sannigrahi</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/apis-and-language-processing-with-python-for-twitter.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you wanted to know in real time what everyone’s saying about anything—ranging from the Amazon fires to the latest iPhone release? Fear not, Twitter is the key. Learn about engaging with the Twitter API and using language processing as a tool to discover interesting patterns about your data! In this talk, I’ll cover the concept of the Twitter REST API, along with a new geolocating tool developed for Python, and lastly, a simple way to analyse tweet sentiments.&lt;/p&gt;
</summary></entry><entry><title>Après Jupyter notebook, voici JupyterLab</title><link href="https://pyvideo.org/pycon-fr-2019/apres-jupyter-notebook-voici-jupyterlab.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Maxime Morinière</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/apres-jupyter-notebook-voici-jupyterlab.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le notebook de Jupyter est un grand succès, si bien que certains y voient le nouvel Excel. La version 1.0 de son successeur, JupyterLab, est sortie cet été. Après un rapide coup d'oeil des nouveautés visuelles et fonctionnelles, je présenterai quelques cas d'utilisation que j'ai apprécié, spécifiques à JupyterLab ou non (édition LateX, visualisation de cartes, utilisation de nbformat pour créer des notebooks de manière programmatique, conversion en pages de documentation avec nbsphinx, ...). Je donnerai enfin quelques références utiles et parlerai d'autres projets reliés à l'écosystème jupyter que je n'ai pas encore testé mais qui me semblent intéressants à suivre.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://gitlab.com/mmoriniere/pyconfr_2019"&gt;https://gitlab.com/mmoriniere/pyconfr_2019&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Augmentez vos données avec les algorithmes de graphes</title><link href="https://pyvideo.org/pycon-fr-2019/augmentez-vos-donnees-avec-les-algorithmes-de-graphes.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Estelle Scifo</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/augmentez-vos-donnees-avec-les-algorithmes-de-graphes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La représentation des données sous forme de graphes, encore à la marge il y a quelques années, croit de jour en jour. Avec l'essor des bases de données graphes comme Amazon Azure ou Neo4j, ce type de données n'est plus réservé au GAFA et les applications sont nombreuses.&lt;/p&gt;
&lt;p&gt;Dans cette présentation, je vous ferai découvrir certains algorithmes indispensables pour caractériser des données graphes comme la détection de communautés, mais aussi comment aller vers des algorithmes prédictifs de machine learning tels que la prédiction de liens.&lt;/p&gt;
</summary></entry><entry><title>Automating Vulnerability Detection at Scale with CHOPCHOP</title><link href="https://pyvideo.org/pycon-fr-2019/automating-vulnerability-detection-at-scale-with-chopchop.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Paul Amar</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/automating-vulnerability-detection-at-scale-with-chopchop.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hundreds of vulnerabilities are getting disclosed each week and the number of CVE has just been exploding during the last few years. When a new vulnerability comes out, the usual questions from the management are : &amp;quot;Are we impacted? If so, how many servers are vulnerable to X?&amp;quot;. During this presentation, we will release &amp;quot;ChopChop&amp;quot;, an internal tool we built aimed at solving problematics around vulnerability detection/regression.&lt;/p&gt;
&lt;p&gt;Chopchop aims at providing a fully-featured scanner allowing you :
- to easily scan your servers
- integrate new plugins (aka new vulnerability checks) without pain.
- get pragmatic results in term of security&lt;/p&gt;
&lt;p&gt;We created this tool back in 2017 at Michelin integrating popular checks (eg. non-interpreted .htpasswd, .git folder accessible in the webroot, wildcard in crossdomain.xml, ...) and is now, one of our go-to tool, also integrated inside our CI/CD pipeline in order to tackle security in its whole.&lt;/p&gt;
</summary></entry><entry><title>AutoML : 40 heures que je fais du machine learning sans que j’en susse rien !</title><link href="https://pyvideo.org/pycon-fr-2019/automl-40-heures-que-je-fais-du-machine-learning-sans-que-jen-susse-rien.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Laurent Picard</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/automl-40-heures-que-je-fais-du-machine-learning-sans-que-jen-susse-rien.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;« Il y a plus de quarante ans que je dis de la prose sans que j'en susse rien, et je vous suis le plus obligé du monde de m'avoir appris cela. » — Monsieur Jourdain&lt;/p&gt;
&lt;p&gt;40 ans, c'est le temps qui a été nécessaire aux experts pour parvenir à ce stade de l'apprentissage machine : surpassant les algorithmes traditionnels, des modèles de réseaux neuronaux peuvent maintenant comprendre texte, image, audio et vidéo. De 4 à 40 heures, c'est le temps désormais suffisant à tout développeur pour utiliser un tel modèle, voire en créer un nouveau et résoudre un problème métier unique.&lt;/p&gt;
&lt;p&gt;« Serait-il alors possible de générer des modèles sur mesure, sans aucune expertise, et sans même le savoir ? » — Moi (développeur gentilhomme)&lt;/p&gt;
&lt;p&gt;Dans cette session, nous verrons ce que permettent des modèles pré-entraînés (API de machine learning), comment aller au-delà en générant un modèle personnalisé (nouvelles techniques AutoML), et nous participerons à une démo live tous ensemble. Ne mettez pas vos smartphones en mode avion !&lt;/p&gt;
</summary></entry><entry><title>Boîte à outils Python de l'expert CTF</title><link href="https://pyvideo.org/pycon-fr-2019/boite-a-outils-python-de-lexpert-ctf.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Mathis Hammel</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/boite-a-outils-python-de-lexpert-ctf.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lors de cette conférence présentée par trois passionnés de compétitions en cybersécurité, nous vous parlerons de tous les outils et astuces que nous utilisons pour décrocher la première place !&lt;/p&gt;
&lt;p&gt;Les grandes thématiques abordées seront :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Reverse Engineering : Dans ce type d'épreuve, il faut comprendre la logique d'un programme (souvent compilé et/ou obfusqué) afin d'y injecter un bug ou de contourner une protection logique.&lt;/li&gt;
&lt;li&gt;Sécurité web : Exploiter des failles de sécurité d'un site web parmi les grandes familles connues - Injection SQL, XSS, et bien d'autres...&lt;/li&gt;
&lt;li&gt;Cryptographie : Pour percer les secrets les mieux gardés, il faut parfois user des faiblesses de conception des cryptosystèmes.&lt;/li&gt;
&lt;li&gt;Pwn : Souvent combiné au Reverse Engineering, cette discipline complexe consiste à manipuler l'exécution d'un programme en assembleur pour effectuer des actions non autorisées.&lt;/li&gt;
&lt;li&gt;Programmation : Pour pouvoir répondre à un problème trop complexe pour les humains, il faut savoir combiner un peu d'astuce et beaucoup de scripting.&lt;/li&gt;
&lt;li&gt;Forensics : Retrouver une aiguille dans une botte de foin en utilisant une grande variété de supports : capture réseau, contenu d'un disque dur, dump de mémoire vive, etc.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Booster Python avec Rust : le cas de Mercurial</title><link href="https://pyvideo.org/pycon-fr-2019/booster-python-avec-rust-le-cas-de-mercurial.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Raphaël Gomès</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/booster-python-avec-rust-le-cas-de-mercurial.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Historiquement, le gestionnaire de version Mercurial utilise des modules en C pour améliorer ses performance lorsque Python ne suffit plus. L'année dernière, des contributeurs ont commencé à utiliser des modules en Rust comme une alternative plus sécuritaire, plus agréable et mieux outillée que C afin de compléter la base Python de Mercurial.&lt;/p&gt;
&lt;p&gt;Depuis fin 2018, Octobus a le plus grand nombre de contributions Rust dans Mercurial. Nous avons découvert des problèmes liés l'interaction de ces deux langages et trouvé des solutions qui n'avaient jusque-là  - à notre connaissance -  jamais été publiées sur Internet.&lt;/p&gt;
&lt;p&gt;Au programme :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Une vue d'ensemble de l'intégration de Rust à Python&lt;/li&gt;
&lt;li&gt;Les points positifs et négatifs de notre solution et les alternatives&lt;/li&gt;
&lt;li&gt;Des chiffres comparatifs de performance&lt;/li&gt;
&lt;li&gt;Une porte ouverte à la curiosité quant aux détails excessivement techniques.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Brancher Anyblok à 14 ans d'historique métier</title><link href="https://pyvideo.org/pycon-fr-2019/brancher-anyblok-a-14-ans-dhistorique-metier.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Jean-Sébastien Suzanne</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/brancher-anyblok-a-14-ans-dhistorique-metier.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[AnyBlok](&lt;a class="reference external" href="http://github.com/anyblok"&gt;http://github.com/anyblok&lt;/a&gt;) est un framework python open source, dont l'objectif est de faciliter le développement d'applications métiers. Il est basé sur des librairies python réputées telles que : [SQLAlchemy](&lt;a class="reference external" href="http://www.sqlalchemy.org/"&gt;http://www.sqlalchemy.org/&lt;/a&gt;), [Pyramid](&lt;a class="reference external" href="https://trypyramid.com"&gt;https://trypyramid.com&lt;/a&gt;) ...&lt;/p&gt;
&lt;p&gt;En prod depuis 3 ans, résultat de 6 ans de travail de son créateur Jean-Sébastien Suzanne, passionné et persévérant, il a basé ses travaux sur plus de 15 ans d'expérience en développement d'applications métiers.&lt;/p&gt;
&lt;p&gt;Retour d'expérience sur la reprise progressive d'une application PHP avec 15 ans d'historique, en python et en utilisant la même base de données. Quelles ont été les évolutions à apporter à AnyBlok et comment AnyBlok nous a facilité la tâche.&lt;/p&gt;
</summary></entry><entry><title>Building a Text Processing Pipeline − Application to Relationship Detection between Fictional Characters</title><link href="https://pyvideo.org/pycon-fr-2019/building-a-text-processing-pipeline-application-to-relationship-detection-between-fictional-characters.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Arnault Chazareix</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/building-a-text-processing-pipeline-application-to-relationship-detection-between-fictional-characters.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the years, we have flooded the Internet with information and opinions about everything.
We are at the point where it is impossible to read everything about a subject.
The purpose of this talk is to demonstrate how we can build a text processing pipeline to extract information by reading website pages.
We will go through the conception of a text processing pipeline to detect relationships between Fictional Characters of any show.
The goal is to be able to remember the characters and their relationships before the release of the next season without having to binge-watch all the seasons again.&lt;/p&gt;
</summary></entry><entry><title>Carnet de recherche scientifique avec Python (Git + Jupyter Notebook + Pandoc)</title><link href="https://pyvideo.org/pycon-fr-2019/carnet-de-recherche-scientifique-avec-python-git-jupyter-notebook-pandoc.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Constance de Quatrebarbes</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/carnet-de-recherche-scientifique-avec-python-git-jupyter-notebook-pandoc.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Comment rendre un projet scientifique plus ouvert, plus lisible et s'assurer que les résultats soient reproductibles?&lt;/p&gt;
&lt;p&gt;Ce talk propose de montrer comment réaliser un carnet de recherche scientifique d'équipe
avec Git + Jupyter Notebook et Pandoc pour dévoiler la recherche en train de se faire.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mise en place de l'environnement de travail&lt;/li&gt;
&lt;li&gt;développement en équipe&lt;/li&gt;
&lt;li&gt;test et validation&lt;/li&gt;
&lt;li&gt;publication&lt;/li&gt;
&lt;li&gt;peer reviewing&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Classification automatique de nuage de points en 3D : dessine-moi une falaise !</title><link href="https://pyvideo.org/pycon-fr-2019/classification-automatique-de-nuage-de-points-en-3d-dessine-moi-une-falaise.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Raphael Delhome</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/classification-automatique-de-nuage-de-points-en-3d-dessine-moi-une-falaise.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Oslandia est un prestataire de service spécialisé en architecture SIG (Systèmes d'Information Géographique) et en développement Open Source utilisant Python au quotidien. Dans le cadre de notre activité de R&amp;amp;D, nous avons été amenés à développer un programme pour la segmentation automatique de nuages de points en 3D.&lt;/p&gt;
&lt;p&gt;La présentation sera l'occasion de faire un retour sur ce projet, entre description du contexte du projet, développement en Python, et construction d'algorithme de machine learning.&lt;/p&gt;
&lt;p&gt;Tout d'abord, un besoin métier : en environnement montagneux, il convient donc de maîtriser les risques d'éboulement en répondant à une question très simple : &lt;em&gt;de quoi sont constituées les falaises&lt;/em&gt; ? Ensuite, très vite, un constat douloureux : impossible de faire de l'apprentissage supervisé sans données labellisées (exit le Deep Learning...).&lt;/p&gt;
&lt;p&gt;À partir de prises de vue photogrammétriques, nous détaillerons le petit pipeline de traitement de données développé pour l'occasion, qui mobilise des bibliothèques telles que &lt;cite&gt;laspy&lt;/cite&gt;, &lt;cite&gt;pandas&lt;/cite&gt; ou encore &lt;cite&gt;scikit-learn&lt;/cite&gt;. Compte tenu des quantités de données mobilisées, une bonne touche de &lt;cite&gt;multiprocessing&lt;/cite&gt; agrémentera aussi un exposé où la question des performances aura une place de choix.&lt;/p&gt;
</summary></entry><entry><title>Comment faire confiance aux métadonnées de musique</title><link href="https://pyvideo.org/pycon-fr-2019/comment-faire-confiance-aux-metadonnees-de-musique.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Paul Tremberth</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/comment-faire-confiance-aux-metadonnees-de-musique.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Did you know American singer/songwriter Joan Baez has a near-homonym in Colombia, Joan Báez, who plays progressive rock?
Did you know there are (at least) two bands called Aggression that play thrash metal?
Jazzman Avishai Cohen, anyone? There are two contemporary jazz musicians who go by that name.&lt;/p&gt;
&lt;p&gt;At Deezer, the data we receive from music labels is often ambiguous. And if we display an album in the wrong artist page, users get (rightfully!) mad and may turn to the competition the next time they want to listen to their favorite tracks.&lt;/p&gt;
&lt;p&gt;In this talk, I'll present some of the techniques we use to verify our metadata and fix our music catalog.
We leverage several metadata sources to consolidate a &amp;quot;source of truth&amp;quot; which then helps us spot &amp;amp; correct errors in our database.
We'll explore topics like record linkage, bag-of-words, TF-IDF, graph algorithms and community detections. All of this in Python using scikit-learn, scipy and networkx.&lt;/p&gt;
&lt;p&gt;Slides available at &lt;a class="reference external" href="https://speakerdeck.com/ptrmbrth/how-to-trust-music-metadata-pycon-fr-2019"&gt;https://speakerdeck.com/ptrmbrth/how-to-trust-music-metadata-pycon-fr-2019&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Comment hériter de str et survivre</title><link href="https://pyvideo.org/pycon-fr-2019/comment-heriter-de-str-et-survivre.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Rémi Bois</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/comment-heriter-de-str-et-survivre.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hériter de str ou de int est généralement une mauvaise idée : mieux vaut encapsuler.
Qu'importe ! Lançons nous dans la construction d'une classe héritant de str et voyons quels problèmes se posent avant de tenter de les résoudre au mieux.
Un talk technique mais accessible pour mieux comprendre comment un str nait et comment
intercepter ses méthodes, le tout en pur Python.&lt;/p&gt;
</summary></entry><entry><title>Comment j’optimise ma sécurité avec mes ressources mentales limitées</title><link href="https://pyvideo.org/pycon-fr-2019/comment-joptimise-ma-securite-avec-mes-ressources-mentales-limitees.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Nina Cercy</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/comment-joptimise-ma-securite-avec-mes-ressources-mentales-limitees.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;54 secondes, c’est le temps qu’un être humain moyen passe chaque jour à choisir ses chaussettes. Sa sécurité informatique ne devrait pas lui prendre plus de temps. Pourtant, les injonctions sont légion : un mot de passe par application, de préférence avec des chiffres, des lettres, Julien Courbet et des caractères spéciaux ; le tout stocké dans votre mémoire s’il vous plaît - ou dans un gestionnaire de mots de passe, mais, horresco referens, pas dans le cloud !&lt;/p&gt;
&lt;p&gt;Dédramatisons : ce qui compte vraiment, c’est de savoir ce qu’on protège, de qui on le protège et comment on le protège. Ici, on se concentre sur le mot de passe, avec un framework mental qui vous apprendra à vous poser les bonnes questions en moins de temps qu’il n’en faut pour dire socquettes.&lt;/p&gt;
</summary></entry><entry><title>Computation Techniques for Encrypted Data</title><link href="https://pyvideo.org/pycon-fr-2019/computation-techniques-for-encrypted-data.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Gajendra Deshpande</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/computation-techniques-for-encrypted-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The session begins with a discussion on homomorphic properties of cryptographic algorithms such as RSA, Elgamal, Paillier, Elliptic Curve and Gentry's Cryptosystems with demonstration. The session discusses the concept of recryption for secure computation. This session also discusses a case study on how machine learning technique can be applied on encrypted data for secure computation and protecting machine learning model. Finally the utility of homomorphic encryption for block chain will be discussed.&lt;/p&gt;
</summary></entry><entry><title>Dash : applications web de visualisation de données interactives sans Javascript</title><link href="https://pyvideo.org/pycon-fr-2019/dash-applications-web-de-visualisation-de-donnees-interactives-sans-javascript.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Dom Weldon</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/dash-applications-web-de-visualisation-de-donnees-interactives-sans-javascript.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Aujourd’hui, on ne veut plus simplement produire un rapport PDF pour son projet de data science ou d'apprentissage automatique. De plus en plus, les utilisateurs souhaitent des outils interactifs permettant d'explorer des données avec des visualisations et des graphiques interactifs. Ces outils étant exécutés dans un navigateur web, soit il faut embaucher un spécialiste front end  qui respire le Javascript dans son équipe soit il faut que les data scientists  apprennent les technologies web. Ces alternatives ne sont pas pratiques et sont coûteuses. L’alternative se nomme Dash !&lt;/p&gt;
&lt;p&gt;Dash, une bibliothèque de Plotly, peut résoudre le dilemme ainsi: les scientifiques de données peuvent faire les sites interactifs utilisant uniquement le Python et une connaissance minimale du HTML, et absolument aucun JavaScript.&lt;/p&gt;
&lt;p&gt;À decisionLab, une société de conseil en modélisation mathématique du centre du Londres, nous avons adopté Dash pour créer des interfaces pour nos POCs et les premiers alphas de nos projets. Bien que nous ne fassions pas officiellement partie du projet Dash, en l’utilisant quotidiennement, à travers de nombreux projets, nous avons acquis de nombreuses connaissances. Nous aimerions les partager ainsi que des conseils et des bonnes pratiques. Puis obtenir vos retours!&lt;/p&gt;
&lt;p&gt;Cette conférence donnera un aperçu de Dash, de son fonctionnement et de son utilité, avant de présenter certains problèmes pouvant survenir lorsque les data scientists  sont laissés à eux-mêmes pour créer des applications Web, et que les ingénieurs informatiques doivent travailler avec l'écosystème pydata. Nous identifierons aussi certaines des limites de Dash, et discuterons de la façon de prendre la décision d'arrêter d'utiliser Dash pour commencer à créer une application Web complète.&lt;/p&gt;
</summary></entry><entry><title>Data center DIY avec Python et Raspberry Pi</title><link href="https://pyvideo.org/pycon-fr-2019/data-center-diy-avec-python-et-raspberry-pi.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Arthur Vuillard</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/data-center-diy-avec-python-et-raspberry-pi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;À des fins expérimentales, nous avons monté un micro data center dans la cave de l'immeuble de bureau. L'objectif de ces expérimentations est d'amener plus d'écologie dans l'hébergement de services informatiques.
Pour ce faire, nous nous sommes appuyés sur ce que nous savions faire : du Python, du logiciel libre, du Do It Yourself, avec en particulier le µ ordinateur Raspberry Pi.&lt;/p&gt;
&lt;p&gt;Nous allons vous présenter les idées que nous avons eues, leurs mises en oeuvres, les problèmes rencontrés et les perspectives pour la suite. Nous parlerons en particulier du dispositif pour surveiller la température dans la pièce et évacuer la chaleur, du dispositif pour suivre la consommation énergétique, et de l'orchestration des services installés sur les serveurs.&lt;/p&gt;
</summary></entry><entry><title>Déployer Django avec Compose</title><link href="https://pyvideo.org/pycon-fr-2019/deployer-django-avec-compose.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Mehdi Raddadi</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/deployer-django-avec-compose.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Explication de la construction d'un squelette de projet déployé avec docker-compose ainsi que le processus de développement associé. Tests en local et sur gitlab-ci puis déploiement.&lt;/p&gt;
</summary></entry><entry><title>Déployer Flask sur AWS Lambda avec Zappa &amp; GitLab</title><link href="https://pyvideo.org/pycon-fr-2019/deployer-flask-sur-aws-lambda-avec-zappa-gitlab.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Fred Zind</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/deployer-flask-sur-aws-lambda-avec-zappa-gitlab.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;pre&gt;Présentation d'un _chatbot_ basique utilisant une application mono-page _Flask_ (avec une larme de JS) qui répond avec des données provenant des API _MapQuest_ et _Wikipedia_.

La particularité offerte par _Zappa_ est d'avoir un _Flask_ des plus classique en local (pour le dev) et de simplifier le déploiement vers _AWS-Lambda_ pour la mise à dispo vers le monde. _Gitlab_ permet d'automatiser l'usage de _Zappa_, mettre à jour le JS avec la réponse AWS, puis héberger les fichiers statiques .

Le niveau technique nécessaire est faible : les débutant(e)s sont bienvenue et les expérimentés prévenus !&lt;/pre&gt;</summary></entry><entry><title>Du SQL à Neo4j avec python</title><link href="https://pyvideo.org/pycon-fr-2019/du-sql-a-neo4j-avec-python.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Estelle Scifo</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/du-sql-a-neo4j-avec-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dans cette présentation, je vous parlerai de bases de données graphes, en particulier comment passer d'un modèle de données orienté tables en SQL à un modèle de type graphe en prenant l'exemple de la base de données en vogue, Neo4j. Après une petite introduction à Neo4j et à son langage de requête, Cypher, je vous montrerai des exemples d'intégration entre python et Neo4j.&lt;/p&gt;
</summary></entry><entry><title>Épanouissement personnel et collectif dans le monde du développement informatique en télétravail</title><link href="https://pyvideo.org/pycon-fr-2019/epanouissement-personnel-et-collectif-dans-le-monde-du-developpement-informatique-en-teletravail.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Pierre Verkest</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/epanouissement-personnel-et-collectif-dans-le-monde-du-developpement-informatique-en-teletravail.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Venez découvrir la vie en entreprise chez Anybox, nos difficultés personnelles ou collectives ainsi que les réussites, petite ESN (20 personnes), organisée en télétravail généralisé depuis 2016 et en holacracy depuis 2017, nous revenons sur nos explorations, en passant par l'agilité depuis la gestion des projets clients à la gestion de l'organisation.&lt;/p&gt;
&lt;p&gt;C’est avec enthousiasme que nous viendrons mêler nos expériences aux vôtres !&lt;/p&gt;
</summary></entry><entry><title>Equip Your Performance Toolbox − Cython vs. Pybind11</title><link href="https://pyvideo.org/pycon-fr-2019/equip-your-performance-toolbox-cython-vs-pybind11.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Gavin Chan</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/equip-your-performance-toolbox-cython-vs-pybind11.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Developing Python applications is handy and rapid, but performance is always concerned, especially on the CPU bound components. We'll first go through the common tools and tricks which may surprise you on the performance improvement, and compare the two prevailing tools, Cython and Pybind11. Finally, their similarity and difference, in terms of implementation and performance, will be listed out so that attendees can thoroughly understand the criteria to choose the right library in their projects.&lt;/p&gt;
</summary></entry><entry><title>Ever Wondered what is the Best Company that Suits You?</title><link href="https://pyvideo.org/pycon-fr-2019/ever-wondered-what-is-the-best-company-that-suits-you.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Taneja Ankisetty</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/ever-wondered-what-is-the-best-company-that-suits-you.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working individuals, top management and investors are in constant turmoil to find the right company from plethora of options. This presentation aims to help find answers for them. An individual could gauge if he’s being underpaid or overpaid. Top management could have a quick, summarized and transparent feedback from their employees. A company could discover about its competitors strengths and weaknesses.&lt;/p&gt;
&lt;p&gt;Attendees will learn how to scrape numerical and text data (reviews) from online websites and transform into structured data. Analyze trends and aggregate numerical data at different levels to form the big picture about the company. However, compiling text is a powerful means to understand details and also sentiment of employees. So we form tf-idf matrix, apply dimensional reduction techniques and explore clustering to summarize reviews. Finally, we will delve into simpler methods that are more apt than ML algorithms for this problem statement.&lt;/p&gt;
</summary></entry><entry><title>Everything You Want to Know About Kubernetes (Preferably Before Using It)</title><link href="https://pyvideo.org/pycon-fr-2019/everything-you-want-to-know-about-kubernetes-preferably-before-using-it.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Guillaume Gelin</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/everything-you-want-to-know-about-kubernetes-preferably-before-using-it.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a lot of hype about Kubernetes those days, but do you know what Kubernetes really gives you, out of the box? Not as much as you might expect.&lt;/p&gt;
&lt;p&gt;« Kubernetes is a platform for building platforms. It's a better place to start; not the endgame. » Kelsey Hightower (Developer Advocate at Google)&lt;/p&gt;
&lt;p&gt;In this talk, I will present my experience as a software engineer who started building a bare-metal Kubernetes cluster without much knowledge in networking or other low-level infrastructure concepts, but with a developer background and mindset that ended up being quite useful.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Chapter I. The Origins&lt;ul&gt;
&lt;li&gt;Where we are coming from&lt;/li&gt;
&lt;li&gt;Kubernetes overview&lt;/li&gt;
&lt;li&gt;Why Kubernetes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Chapter II. Minimum Viable Cluster&lt;ul&gt;
&lt;li&gt;Requirements we settled on&lt;/li&gt;
&lt;li&gt;Choices we made&lt;/li&gt;
&lt;li&gt;What you get (or miss) at this point&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Chapter III. Going Further&lt;ul&gt;
&lt;li&gt;A few more choices&lt;/li&gt;
&lt;li&gt;Tools we decided to use&lt;/li&gt;
&lt;li&gt;Tools we developed ourselves&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Chapter IV. Nowadays&lt;ul&gt;
&lt;li&gt;Live demo (maybe)&lt;/li&gt;
&lt;li&gt;Current platform status&lt;/li&gt;
&lt;li&gt;Next steps&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Chapter V. Step Back&lt;ul&gt;
&lt;li&gt;Our opinion on Kubernetes&lt;/li&gt;
&lt;li&gt;Recommendations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>GitLab + Mercurial = Heptapod</title><link href="https://pyvideo.org/pycon-fr-2019/gitlab-mercurial-heptapod.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Georges Racinet</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/gitlab-mercurial-heptapod.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Heptapod est un projet communautaire dérivé de GitLab pour y intégrer
Mercurial, le système de contrôle de version distribué
(DVCS) écrit principalement en Python.&lt;/p&gt;
&lt;p&gt;Après un prototype en 2018, le projet Heptapod monte actuellement en
puissance, suscitant d'autant plus d'intérêt que la communauté
Mercurial cherche des alternatives à Bitbucket.&lt;/p&gt;
&lt;p&gt;La présentation fournira les prérequis nécessaires s'agissant de
Mercurial, puis se focalisera avec des exemples sur l'interaction avec
Heptapod dans le cadre d'un workflow Mercurial moderne.
Enfin, on évoquera l'état d'avancement et le futur du projet, notamment les
développements Python en cours et à venir, pour ceux qui seraient intéressés à contribuer.&lt;/p&gt;
</summary></entry><entry><title>gRPC/Python : Exemple pratique d'utilisation de micro-services pour une (mini) application d'analyse sémantique de textes (NPL)</title><link href="https://pyvideo.org/pycon-fr-2019/grpcpython-exemple-pratique-dutilisation-de-micro-services-pour-une-mini-application-danalyse-semantique-de-textes-npl.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Lionel Atty</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/grpcpython-exemple-pratique-dutilisation-de-micro-services-pour-une-mini-application-danalyse-semantique-de-textes-npl.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;mots clés: Python gRPC micro-services NPL Spacy packaging architecture Docker&lt;/p&gt;
&lt;p&gt;Après une (courte) présentation du framework Google gRPC (paradigmes, protocoles, API de communications, ...), on s'intéressera à son binding spécifique Python.
On présentera une utilisation (concrète) des outils du framework gRPC (Python) via le développement d'une (mini) application Python.
L'application permet d'analyser des contenus textes (texte associé à des tweets).
Cette analyse (sémantique) s'appuie sur des outils (python) de NPL (Natural Processing Langage).
L'étude (du développement) de cette application nous offre un cadre de (semi)production,
à travers lequel on pourra aborder des considérations de production (ou mise en production) d'applications python.
On s'intéressera particulièrement à des notions d'architecture et (un peu) d'infras:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;propositions de stratégie de packaging/structuration/versionnement de projets python avec micros-services&lt;/li&gt;
&lt;li&gt;tests unitaires: comment tester des micro-services gRPC ? (framework de tests: PyTest)&lt;/li&gt;
&lt;li&gt;docker: outils de dev, containeurs de production, stratégie de releases&lt;/li&gt;
&lt;li&gt;CI/CD: CircleCI, TravisCI&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>How I Fell In Love With Pytype &amp; Why You Should Too</title><link href="https://pyvideo.org/pycon-fr-2019/how-i-fell-in-love-with-pytype-why-you-should-too.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Nathaniel Manista</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/how-i-fell-in-love-with-pytype-why-you-should-too.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all are always finding complex and novel ways of making mistakes and introducing defects into our software, and we all want all the help we can get and all the tools we can carry in our toolbox to fix our mistakes and defects. I’ll relate how experience changed me from a detractor of Pytype to one of its biggest fans and why I believe that it is one of the best tools we can use to craft correct Python code.&lt;/p&gt;
</summary></entry><entry><title>Impacts technologiques − Au delà du code</title><link href="https://pyvideo.org/pycon-fr-2019/impacts-technologiques-au-dela-du-code.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Geoffroy Bailly</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/impacts-technologiques-au-dela-du-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A l'heure actuelle la technologie est un sujet sensible, notre métier est ainsi controversé entre impact climatique et social. Nous explorerons les problèmes de la technologie numérique avec des exemples inattendus de conséquences et les moyens afin de concevoir des outils plus respectueux, durables  et bénéfiques. Cette présentation ne traitera pas de technique et se destine au grand public autant qu'aux développeurs/développeuses.&lt;/p&gt;
</summary></entry><entry><title>Je construis mon premier moteur (asynchrone) de Python 2 à Python 3.7</title><link href="https://pyvideo.org/pycon-fr-2019/je-construis-mon-premier-moteur-asynchrone-de-python-2-a-python-37.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Romain Bellan</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/je-construis-mon-premier-moteur-asynchrone-de-python-2-a-python-37.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;L'asynchrone dans les versions récentes de Python n'est plus à présenter. Nous vous proposons donc une autre approche, avec un voyage commençant par Python 2.7 pour bien comprendre les concepts et comment les couches bas niveaux peuvent être implémentées. On utilisera ensuite progressivement les fonctionnalités des versions plus récentes (3.4, 3.5...) pour simplifier ce moteur.&lt;/p&gt;
&lt;p&gt;Cette présentation contiendra du « live coding ».&lt;/p&gt;
</summary></entry><entry><title>La série Chernobyl à travers le prisme de l'intelligence artificielle</title><link href="https://pyvideo.org/pycon-fr-2019/la-serie-chernobyl-a-travers-le-prisme-de-lintelligence-artificielle.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Pierre-Loïc Bayart</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/la-serie-chernobyl-a-travers-le-prisme-de-lintelligence-artificielle.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;L'intelligence artificielle a permis des avancés très intéressantes dans de nombreux domaines. Alors pourquoi ne pas s'en servir pour analyser une série? Grâce à de l'analyse du langage naturel principalement, je vous propose une analyse de la série Chernobyl qui permettra une mise en perspective de la série avec les évènements qui se sont réellement déroulés.
Site de la présentation :
&lt;a class="reference external" href="https://pierre-loic.github.io/"&gt;https://pierre-loic.github.io/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>La visualisation dynamique des données en Python</title><link href="https://pyvideo.org/pycon-fr-2019/la-visualisation-dynamique-des-donnees-en-python.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Romain Colle</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/la-visualisation-dynamique-des-donnees-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python est aujourd’hui le langage principal pour l’analyse de données, mais il y a une étape qui reste encore longue et mal optimisée : le passage du notebook vers la visualisation dans les applications BI des utilisateurs métier. Dans quasiment tous les cas il faut réécrire le code dans le langage de l’application BI, c’est long et très mal adapté à une approche agile d’itérations successives.&lt;/p&gt;
&lt;p&gt;Chez ActiveViam j’ai voulu accélérer ce process et concevoir un système qui permette de sauter entièrement cette étape. Le but du projet était de mettre la visualisation directement dans le notebook, pas juste des graphes statiques mais quelques chose de vraiment dynamique.&lt;/p&gt;
&lt;p&gt;Le résultat, que je propose de présenter, c’est une librairie Python que nous avons mise en open source et qui permet de visualiser les données en continu à mesure qu’on les charge et qu’on les travaille en Python dans son notebook. C’est utile pour faire ses propres analyses, mais surtout quand il faut concevoir des dashboards qui seront utilisés par d’autres services dans l’entreprise. Les allers-retours avec le métier se font beaucoup plus vite et une fois que les specs et l’apparence du dashboard sont validées par les utilisateurs finaux, passer en production est aussi rapide puisque cela peut se faire en quelques clics – avec ce système on ne construit pas juste une preview ou un mock-up avec Python mais bien l’application analytique finale.&lt;/p&gt;
</summary></entry><entry><title>Le code ne suffit pas</title><link href="https://pyvideo.org/pycon-fr-2019/le-code-ne-suffit-pas.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Constance de Quatrebarbes</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/le-code-ne-suffit-pas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dans la lignée de l'intervention de Joachim Jablon en 2018, cette intervention présentera quelques pistes pour un environnement de développement plus inclusif:  retour d'expérience, partage de réflexion et de lecture,  mais surtout propositions de bonnes pratiques notamment en terme de management/gestion de projet pour mieux intégrer la variété des profils et leur spécificité - notamment celle des femmes.&lt;/p&gt;
&lt;p&gt;Elle recensera les initiatives qui donnent leur place aux profils encore minoritaires dans la communauté Open Source.&lt;/p&gt;
</summary></entry><entry><title>Le processus de lisibilité de code à Google</title><link href="https://pyvideo.org/pycon-fr-2019/le-processus-de-lisibilite-de-code-a-google.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Bruno Cauet</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/le-processus-de-lisibilite-de-code-a-google.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le processus de « readability » (lisibilité) de code à Google est un mécanisme qui, pour chaque language de programmation, garantit la bonne qualité de la codebase en déterminant qui peut soumettre du code dans quel langage.&lt;/p&gt;
&lt;p&gt;Je compte aborder les points suivants :
* le rôle de la « readability » dans les revues de code
* les différents acteurs du système
* les outils logiciels qui forment le système
* le travail du « readability reviewer »
* le style Google
* Bilan et futur du système&lt;/p&gt;
</summary></entry><entry><title>Le saviez-vous ?</title><link href="https://pyvideo.org/pycon-fr-2019/le-saviez-vous.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Kevin Samuel</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/le-saviez-vous.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Saviez-vous que Python avait une variable magique &lt;cite&gt;__debug__&lt;/cite&gt; ? Que &lt;cite&gt;functools.partial()&lt;/cite&gt; pouvait remplacer de nombreuses lambdas ? Que vous pouviez décompresser un zip dans un faux fichier en mémoire avec &lt;cite&gt;io.ByteIO&lt;/cite&gt; ? Que &lt;cite&gt;PYTHONSTARTUP&lt;/cite&gt; rendait votre shell plus beau et musclé ?&lt;/p&gt;
&lt;p&gt;À moins d'avoir lu tout doc.python.org, cette petite heure va vous faire pétiller de découvertes !&lt;/p&gt;
</summary></entry><entry><title>Le Witness Angel, la cryptographie au service de la justice et de la vie privée</title><link href="https://pyvideo.org/pycon-fr-2019/le-witness-angel-la-cryptographie-au-service-de-la-justice-et-de-la-vie-privee.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Pascal Chambon</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/le-witness-angel-la-cryptographie-au-service-de-la-justice-et-de-la-vie-privee.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cette conférence présentera la façon dont Python, et ses bibliothèques cryptographiques/web de haut niveau, sont mis au service du premier prototype de &amp;quot;Witness Angel&amp;quot;.&lt;/p&gt;
&lt;p&gt;Le Witness Angel est un huissier personnel, un dispositif qui permet d'assurer le respect de la vie privée des citoyens, tout en offrant de puissants moyens de preuve aux victimes de violences/chantages/harcèlements et autres, grâce à un mécanisme innovant appelé &amp;quot;Écriture Seule&amp;quot; (plus d'infos sur &lt;a class="reference external" href="https://medium.com/&amp;#64;pakaldebonchamp/le-concept-witness-angel-bdfb7025f4f8"&gt;https://medium.com/&amp;#64;pakaldebonchamp/le-concept-witness-angel-bdfb7025f4f8&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;La conférence exposera les tenants et aboutissants de ce projet, rappellera les fondamentaux de la cryptographie, évoquera l'avancement à ce jour (en particulier suite au Hackathon), et les pistes pour contourner à terme les possibles limitations de CPython (performance, autonomie de batterie sur périphériques mobiles...).&lt;/p&gt;
</summary></entry><entry><title>Les décorateurs : Kézako ?</title><link href="https://pyvideo.org/pycon-fr-2019/les-decorateurs-kezako.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Alexis Benoist</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/les-decorateurs-kezako.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vous avez vu un décorateur avec leur traditionnel &amp;#64; au dessus d'une fonction et vous vous demandez comment ça marche ? Cette session est faite pour vous !
Nous montrerons leur comportement et comment les implémenter pour maitriser leur magie.&lt;/p&gt;
</summary></entry><entry><title>LSTM Variational AutoEncoders for Network Signal Anomaly Detection</title><link href="https://pyvideo.org/pycon-fr-2019/lstm-variational-autoencoders-for-network-signal-anomaly-detection.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Facundo Calcagno</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/lstm-variational-autoencoders-for-network-signal-anomaly-detection.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A major French telecom provider has entrusted our team to develop a tool capable of accurately detecting anomalies in their network. This tool is to be deployed in a central surveillance cockpit that monitors the whole network in order to assist analysts in detecting and identifying risks, vulnerabilities and incidents in the network in real time.&lt;/p&gt;
&lt;p&gt;The solution proposedis based on state-of-the-art Deep Learning technology, more specifically, we developed the &amp;quot;Croissant&amp;quot; model, a Bidirectional LSTM Variational Autoencoder (VAE) that monitors the traffic in the network and triggers an alarm when an anomaly is detected. To cope with the large amounts of data, e.g., the number of inbound and outbound bytes of more than 300K devices within the network every 5 minutes, our model was developed to function at scale and using an adapted software and hardware solutions such as DGX stations for training and server equipped with NVIDIA T4s for inference/operations.&lt;/p&gt;
&lt;p&gt;The talk with go deeply into the architecture of the selected model and explaining step by step why it works and how it is going to be implemented.&lt;/p&gt;
</summary></entry><entry><title>Marshmallow, de la sérialisation à la construction d'une API REST</title><link href="https://pyvideo.org/pycon-fr-2019/marshmallow-de-la-serialisation-a-la-construction-dune-api-rest.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Jérôme Lafréchoux</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/marshmallow-de-la-serialisation-a-la-construction-dune-api-rest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La question de la sérialisation des données se pose quand on doit échanger des objets métier via un service web, ou bien les enregistrer en base de données ou simplement dans des fichiers.&lt;/p&gt;
&lt;p&gt;Pour cela, on a recours à une bibliothèque de sérialisation telle que marshmallow.&lt;/p&gt;
&lt;p&gt;Dans un premier temps, on expliquera succinctement les enjeux de la sérialisation et l'intérêt d'une bibliothèque dédiée.&lt;/p&gt;
&lt;p&gt;Puis on détaillera les fonctionnalités majeures de marshmallow : validation, customisation de champs, imbrication,
pré/post-traitements,...&lt;/p&gt;
&lt;p&gt;Ensuite, on abordera les fonctionnalités fournies par quelques bibliothèques de son écosystème : génération de schémas marshmallow depuis un ORM/ODM, désérialisation des requêtes d'un service web, génération automatique de documentation OpenAPI (Swagger).&lt;/p&gt;
&lt;p&gt;Et enfin on présentera flask-smorest, un cadriciel de développement d'API REST basé sur Flask et marshmallow :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Définition des entrées/sorties de l'API avec des schémas&lt;/li&gt;
&lt;li&gt;Génération automatique de doc OpenAPI et exposition de cette doc via une interface interactive&lt;/li&gt;
&lt;li&gt;Pagination&lt;/li&gt;
&lt;li&gt;Génération et vérification d'ETag&lt;/li&gt;
&lt;li&gt;Messages d'erreur structurés et explicites&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Mettez Elasticsearch à votre service</title><link href="https://pyvideo.org/pycon-fr-2019/mettez-elasticsearch-a-votre-service.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Alexandre Garel</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/mettez-elasticsearch-a-votre-service.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Octopusmind fait une utilisation intensive d'Elasticsearch.
Je vous ferais découvrir une partie des possibilités qu'offre Elasticsearch du point de vue du développeur.
Nous verrons rapidement comment utiliser des bibliothèques Python afférentes: elasticsearch-dsl, django-elasticsearch-dsl et luqum.
Il y aura bien sûr quelques astuces et aperçus d'utilisation avancée..&lt;/p&gt;
</summary></entry><entry><title>Micro framework visuel avec Tkinter</title><link href="https://pyvideo.org/pycon-fr-2019/micro-framework-visuel-avec-tkinter.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>François Girault</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/micro-framework-visuel-avec-tkinter.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lors de PyConFr 2018, l'intervention &amp;quot;Tkinter, toujours de la partie ?&amp;quot; ( &lt;a class="reference external" href="https://github.com/fgirault/pyconfr2018"&gt;https://github.com/fgirault/pyconfr2018&lt;/a&gt; ) revenait sur les possibilités d'usages modernes du toolkit graphique fourni en standard avec Python en démystifiant sa rusticité.
Cette année, nous verrons comment construire un micro framework &amp;quot;flat design&amp;quot;, à la manière des design frameworks populaires dans le monde du web, pour produire des interfaces graphiques ergonomiques et cohérentes.&lt;/p&gt;
</summary></entry><entry><title>Monitoring : de rien à bien</title><link href="https://pyvideo.org/pycon-fr-2019/monitoring-de-rien-a-bien.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Guillaume Ayoub</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/monitoring-de-rien-a-bien.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mettre en place des gros outils de monitoring peut être assez complexe, surtout lorsqu'on n'a que quelques sites à surveiller. À partir de ce constat, nous avons décidé il y a quelques années de développer nos propres petits outils libres de monitoring en Python, simples à installer et à maintenir.&lt;/p&gt;
</summary></entry><entry><title>Optimizing Python at Scale</title><link href="https://pyvideo.org/pycon-fr-2019/optimizing-python-at-scale.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Bogdan Balas</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/optimizing-python-at-scale.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cover a brief history of YouTube and Python, our frontends and our Python based templating language (Spitfire).  Follow up with the challenges of optimizing for latency in a Python web server.  Then talk about how we used Clif and Cython as well as other tricks to optimize key parts of our serving infrastructure to meet our latency needs. Spitfire, Clif and Cython are all open source tools available for the python community&lt;/p&gt;
</summary></entry><entry><title>Passer à Python 3</title><link href="https://pyvideo.org/pycon-fr-2019/passer-a-python-3.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Michel Casabianca</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/passer-a-python-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La fin du support de Python 2 est annoncée pour le 1er janvier 2020, donc la question du passage à Python ne se pose plus. La seule question qui reste est comment ? Cette conférence présente les différences majeures entre Python 2 et 3 et comment migrer dans de bonnes conditions du code vers Python 3.&lt;/p&gt;
</summary></entry><entry><title>Plénière n°1 / Keynote #1: The 750,000-Line Long Pull Request: Crafting a more Resilient Open Source Community</title><link href="https://pyvideo.org/pycon-fr-2019/pleniere-ndeg1-keynote-1-the-750000-line-long-pull-request-crafting-a-more-resilient-open-source-community.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Anna-Livia Gomart</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/pleniere-ndeg1-keynote-1-the-750000-line-long-pull-request-crafting-a-more-resilient-open-source-community.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since 2011, a community of developers and economists are developing
OpenFisca, an open source framework in Python that turns law into
software so it can be used by administrations, economists and
activists.&lt;/p&gt;
&lt;p&gt;As the community around OpenFisca grew, we needed to adapt to new
expertises, new expectations, and new work habits. The arrival of a
very large PR tested of the work we had put in to create a resilient
community.&lt;/p&gt;
&lt;p&gt;In this talk, I will describe how we worked to create a dynamic
community that can deal with uncertainty (new contributors, very large
PRs, …) and grow to reach new heights in the hope it can inspire
others.&lt;/p&gt;
</summary></entry><entry><title>Plénière n°2 / Keynote #2: Au bonheur des likes</title><link href="https://pyvideo.org/pycon-fr-2019/pleniere-ndeg2-keynote-2-au-bonheur-des-likes.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Nina Cercy</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/pleniere-ndeg2-keynote-2-au-bonheur-des-likes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Biais cognitifs, sciences comportementales, incitations douces : le
cerveau des utilisateurs/trices est devenu notre terrain de jeu — et
l’infantilisation notre meilleur business model.&lt;/p&gt;
&lt;p&gt;Face aux hochets attentionnels et aux biberons de dopamine, notre
capacité à proposer un numérique adulte, émancipateur est la victime
collatérale du capitalisme de l’attention. Ne jetons pas le bébé avec
l’eau du bain : la science comportementale, c’est aussi le remède dans
le mal.&lt;/p&gt;
</summary></entry><entry><title>Plénière n°3 / Keynote #3: The Role of 21st Century Technology in Protests</title><link href="https://pyvideo.org/pycon-fr-2019/pleniere-ndeg3-keynote-3-the-role-of-21st-century-technology-in-protests.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Cheuk Ting Ho</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/pleniere-ndeg3-keynote-3-the-role-of-21st-century-technology-in-protests.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since June 2019, Hong Kong shocked the world with massive protests. As protesters are mainly young, educated and technology-aware people, they are trying to use the new technology to outwit the government which also use AI and technology to control its people. Who got the upper hand?&lt;/p&gt;
&lt;p&gt;Have you ever think about using Tinder to look for a ‘date’ in the protest? Or using Uber to call for a free ride to drive you to safety?&lt;/p&gt;
&lt;p&gt;In the first part of the talk, we will cover the background of the protest, why it happened and how it is started. We will briefly talk about the politic environment of Hong Kong and what causes the protest 1: the fear of losing a “high degree of autonomy”
In the second part, which is the main part of the talk, we will cover how technology/ apps like Telegram, Tinder, Pokemon Go, Twitch, AirDrop, Bridgefy, Uber, etc were used in by the protesters and what
role they play in the protest. People use Telegram’s encryption to communicate without worrying leaking of identity; they use Tinder to spread the news about where and when to protest; They use Pokemon Go
to gather people 4; AirDrop to spread the message to the Chinese tourists; Bridgefy to communicate where internet is not available at crowded areas 3; Uber to let the protested know where there are
volunteer drivers to take you to safety.&lt;/p&gt;
&lt;p&gt;In the third part, we will have a look at what technology the Chinese government may use to tighten its grip over Hong Kong. One of the front lines of the protest in the online activism 5, the Chinese
government has it’s own ‘50 cent army’ which is also known as ‘China bots’ who were paid to leave pro-CCP comments on social media. Which eventually cause Twitter and Facebook to shout down lots of accounts. Also, there are attacks cyberattacks, suspected to be related to the protest, towards Telegram and an online forum LiHKG which the protesters used to communicate. It is also suspected that the
government installed ‘smart’ lamppost which use facial detection to monitor the citizen of Hong Kong after protested found parts made by a Shanghai company which also made the surveillance cameras in mainland China 6.&lt;/p&gt;
&lt;p&gt;This talk is for audients who are interested to know how our lives are changed by technology and how they could influence our society. By the end of the talk, audients will be more aware of what consequence new technology may bring us and be more thoughtful about the ethics behind the implementation of technology.&lt;/p&gt;
</summary></entry><entry><title>Plongée au cœur du modèle asynchrone Python</title><link href="https://pyvideo.org/pycon-fr-2019/plongee-au-coeur-du-modele-asynchrone-python.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Antoine "entwanne" Rozo</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/plongee-au-coeur-du-modele-asynchrone-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tout mécanisme Python, que ce soit les itérables, les conteneurs ou encore les appelables, repose sur des interfaces simples.
Le modèle de programmation asynchrone et ses coroutines n'échappent pas à la règle et se basent aussi sur des méthodes spéciales que nous allons découvrir.&lt;/p&gt;
&lt;p&gt;L'objectif de cette présentation est d'explorer ces interfaces et de construire pas à pas un équivalent minimaliste d'asyncio.&lt;/p&gt;
</summary></entry><entry><title>Pourquoi j'ai traduit une partie de la doc de python et pourquoi je vais continuer</title><link href="https://pyvideo.org/pycon-fr-2019/pourquoi-jai-traduit-une-partie-de-la-doc-de-python-et-pourquoi-je-vais-continuer.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Pierre Bousquié</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/pourquoi-jai-traduit-une-partie-de-la-doc-de-python-et-pourquoi-je-vais-continuer.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Retour d'expérience sur ma participation à la traduction de la doc suite à la précédente pyconfr.
Mon objectif: vous donner le virus également :).&lt;/p&gt;
</summary></entry><entry><title>« Privacy by design » : protéger les données personnelles, 1 million de lignes de code à la fois</title><link href="https://pyvideo.org/pycon-fr-2019/privacy-by-design-proteger-les-donnees-personnelles-1-million-de-lignes-de-code-a-la-fois.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>François Séguin</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/privacy-by-design-proteger-les-donnees-personnelles-1-million-de-lignes-de-code-a-la-fois.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Câbles diplomatiques américains, emails de Sony Pictures, photos de prototype d'iPhone : on sait que ces informations sont confidentielles, et elles ont pourtant été victimes de fuites. Les informations personnelles de nos utilisateurs sont tout aussi confidentielles, et nous devons les protéger.
Les logs et interfaces d'une application web exposent souvent des données personnelles: comment les expurger et/ou restreindre leur accès?
Je partagerai mes travaux sur la protection des données personnelles dans un écosystème mature de plusieurs millions de lignes de code, et du paquet open-source pour Django que nous avons créé.&lt;/p&gt;
</summary></entry><entry><title>Pytest: Yes Let's Go</title><link href="https://pyvideo.org/pycon-fr-2019/pytest-yes-lets-go.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Santiago E Fraire Willemoes</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/pytest-yes-lets-go.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;My intention with this talk is to help people understand how tests can help us write better code and how it can guide our designs. In this opportunity I'll show how to do this using pytest, and get most of its power.&lt;/p&gt;
&lt;p&gt;I'm a Python developer who also happens to have written some Java, which has a strong influence in how mocks came to be, and this has influenced my way of testing.&lt;/p&gt;
&lt;p&gt;Combine this with a sudden motivation to start doing TDD, and I'd say there's a lot to be shared.&lt;/p&gt;
&lt;p&gt;I will show different pytest features and how they can assist us in writing easier, and understandable tests.&lt;/p&gt;
&lt;div class="section" id="overview"&gt;
&lt;h4&gt;Overview&lt;/h4&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Some words about testing&lt;/li&gt;
&lt;li&gt;Understanding the core of pytest&lt;/li&gt;
&lt;li&gt;Tests as documentation&lt;/li&gt;
&lt;li&gt;Fixtures&lt;/li&gt;
&lt;li&gt;Parametrize&lt;/li&gt;
&lt;li&gt;Mocks / Understanding mocks / Using mocks&lt;/li&gt;
&lt;li&gt;Refactoring with tests in mind&lt;/li&gt;
&lt;li&gt;TDD&lt;/li&gt;
&lt;li&gt;Plugins&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</summary></entry><entry><title>Python et la CAO</title><link href="https://pyvideo.org/pycon-fr-2019/python-et-la-cao.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Philippe Boulanger</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/python-et-la-cao.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python est un langage qui permet de laisser libre-court à son imagination: même la CAO, un domaine plus souvent couvert par le C++, est accessible aux développeurs Python grâce à pythonOCC (merci M. Paviot). FreeCAD est le parfait exemple d'application scriptable en Python. Mais il y a aussi Blender ou les outils de C4W-Digiléa et bien d'autres...&lt;/p&gt;
</summary></entry><entry><title>Python + Neo4j: How a Graph DB Can Make a Transit App More Intelligent</title><link href="https://pyvideo.org/pycon-fr-2019/python-neo4j-how-a-graph-db-can-make-a-transit-app-more-intelligent.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Navid Nobani</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/python-neo4j-how-a-graph-db-can-make-a-transit-app-more-intelligent.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Although there are tens of transit applications available in national and global levels, most of them (more or less) perform in the same way: mapping the desired path asked by the user (origin, destination) on the timetable provided by the transportation company and providing official schedules to the user. While this process was acceptable years ago, with the advances in the computer science and evolution of unstructured databases we can expect to receive something more robust than a digital version of the (train, bus, …) timetable, something that provide us with the expected delays based on the current situation (weather, temperature, events,…)&lt;/p&gt;
&lt;p&gt;In this talk, I show you how I’ve used python to create a database for various parameters impacting transportation delays using web scrapping and how using Neo4j, I’ve created a transportations network which is used for finding the best path based on transportation times.&lt;/p&gt;
&lt;p&gt;Topics: - Scrapping and data storage (structures and Unstructured): Getting weather, temperature, local events, planned maintenances and saving them in MongoDB and SQL databases - Creating a Neo4j database: Mapping the actual connections between transportation means - Finding the best path: using Dijkstra and A* algorithms to find the best paths, minimizing the travel time.&lt;/p&gt;
&lt;p&gt;Level of expected Audience: Basic knowledge of Python and databases&lt;/p&gt;
</summary></entry><entry><title>Python pour tous : amener un zeste de programmation dans les milieux moins favorisés</title><link href="https://pyvideo.org/pycon-fr-2019/python-pour-tous-amener-un-zeste-de-programmation-dans-les-milieux-moins-favorises.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Nathanaël Langlois</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/python-pour-tous-amener-un-zeste-de-programmation-dans-les-milieux-moins-favorises.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python, aussi bien utilisé pour du développement d’application que pour des programmes de calculs complexe, ouvre par sa facilité de prise en main un champ gigantesque de possibilité à toutes les populations. L’association “Zeste de Savoir”, fédérée autour d’un site communautaire de partage de connaissances éponyme, organise régulièrement des ateliers dans des universités à destination de collégiens et lycéens en proposant notamment aux enfants de quartiers défavorisés de s’y joindre. Comment rendre la programmation simple et attractive ? C'est ce à quoi nous tentons de répondre dans nos ateliers et cette conférence.&lt;/p&gt;
</summary></entry><entry><title>RedisGears</title><link href="https://pyvideo.org/pycon-fr-2019/redisgears.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Itamar Haber</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/redisgears.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Redis is an in memory, key-value, database written in C. The main advantages of Redis are performance, simplicity and extensibility. It introduces some common datatypes (like Strings, Hashes, Lists) and allows you to query the data using simple commands like GET/SET which retrieve the exact key you were asking for or allowing single key in-place update&lt;/p&gt;
&lt;p&gt;One shortcoming of Redis is that it does not support cross-key/cross-shards aggregation queries, while there are several use-cases in which users might want to e.g count how many times a property appears in subset of all hashes or group by some value and return a unique count.&lt;/p&gt;
&lt;p&gt;In order to achieve these things a user usually has three patterns he can use:
1. Retrieve all the data from the Redis and run the aggregation on the client side.
2. Analyze the data by another system like spark/hadoop and perform those queries there.
3. Use Redis embedded Lua capabilities and write some lua code that performs the aggregation on the server side.&lt;/p&gt;
&lt;p&gt;The first and the second option require moving all the data over the network. While the third option is good for a single Redis server, but it does not support clustering and requires writing a Lua script which is not a common programming language that most engineers/data scientists are familiar with.&lt;/p&gt;
&lt;p&gt;In the last couple of months we, at Redislabs, developed a new programming module called RedisGears. RedisGears utilizes an embedded python interpreter to allow the users to run their Python based Map-Reduce on Redis. The API allows to the user to perform aggregation queries on all or part of the data by defining python lambda functions that will be executed on all or part of the data in Redis.&lt;/p&gt;
&lt;p&gt;RedisGears uses an internal CPython C API like sub-interpreter and GIL handling to allow environment distinction between different Redis clients executions. In addition RedisGears uses the CPython API to expose inner Redis capabilities via a Python script (like command execution and internal modules integration).&lt;/p&gt;
&lt;p&gt;Last, following the Streams support in Redis,  it also supports Streaming API processing, allowing the user to trigger a Python based execution plan on a Stream event.&lt;/p&gt;
</summary></entry><entry><title>Robotique : Python au service de machines qui bougent</title><link href="https://pyvideo.org/pycon-fr-2019/robotique-python-au-service-de-machines-qui-bougent.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Yoan Mollard</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/robotique-python-au-service-de-machines-qui-bougent.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python est, avec C++, l'un des 2 langages officiels du middleware robotique opensource ROS (Robot Operating System).&lt;/p&gt;
&lt;p&gt;Il s'agît d'un couteau suisse logiciel permettant de piloter des robots de toutes tailles, allant de petits robots roulants jusqu'à des manipulateurs industriels de plusieurs tonnes.&lt;/p&gt;
&lt;p&gt;Au dessus d'un automate assurant le contrôle et la sûreté électromécaniques, Python peut intervenir sur toute ou partie du cycle de fonctionnement robotique : perception de l'environnement, prise de décision, contrôle des moteurs et des trajectoires, interface homme-robot.&lt;/p&gt;
&lt;p&gt;Durant cette conférence nous verrons les rudiments de l'écosystème ROS, nous démarrerons un robot martien simulé que nous contrôlerons en 4 lignes de code Python, et nous ouvrirons sur comment aller plus loin avec les ressources de formation robotique ROS4PRO à destination des techniciens et ingénieurs en activité ou en devenir.&lt;/p&gt;
</summary></entry><entry><title>Solving Python Cold Start Issues in Cloud Infrastructure</title><link href="https://pyvideo.org/pycon-fr-2019/solving-python-cold-start-issues-in-cloud-infrastructure.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Denys Makogon</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/solving-python-cold-start-issues-in-cloud-infrastructure.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all do cloud applications, no matter if they were built with the cloud (an app that consumes cloud services) or for the cloud (an app that was designed to run within cloud/container). The only thing that we, as Python community, haven’t talked out loud is imports performance that is so critical for business especially when you run your own business and cloud provider charges your own credit card.&lt;/p&gt;
&lt;p&gt;Until Python 3.7 it was quite challenging to profile application code dependencies and imports specifically. With a new imports profiler, Python developers can measure how much time each import takes at the startup. The interesting thing, a new profiler opened the whole new Python problem - cold start issue. In this talk, we will go through one very challenging case: Python in serverless and why most of the Python libraries were never been designed to start fast.&lt;/p&gt;
&lt;p&gt;If you’re going to attend this talk you’d get the following key takeaways:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python coding strategy (placement, efficient and delayed imports)&lt;/li&gt;
&lt;li&gt;New things in Python 3.7 related to imports&lt;/li&gt;
&lt;li&gt;Module coding strategy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and my favourite ones:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why you should be careful with python code in serverless.&lt;/li&gt;
&lt;li&gt;How to profile cold start and measure overall startup time.&lt;/li&gt;
&lt;li&gt;The best CPU/RAM configuration for performing cold startup time measures.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Structurez vos applications Python avec un système de Plugins</title><link href="https://pyvideo.org/pycon-fr-2019/structurez-vos-applications-python-avec-un-systeme-de-plugins.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Joachim Trouverie</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/structurez-vos-applications-python-avec-un-systeme-de-plugins.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Découvrez les avantages de découper votre application Python en utilisant un système de plugin.&lt;/p&gt;
&lt;p&gt;En utilisant un système de plugin votre code sera plus facilement maintenable et pourra être plus facilement couvert par vos tests unitaires. Il sera également plus aisé de participer au code du projet pour un nouveau venu.&lt;/p&gt;
</summary></entry><entry><title>TDID − « Test Driven Infrastructure Developpement » avec Salt, GitLab, Kitchen et Testinfra</title><link href="https://pyvideo.org/pycon-fr-2019/tdid-test-driven-infrastructure-developpement-avec-salt-gitlab-kitchen-et-testinfra.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Arthur Lutz</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/tdid-test-driven-infrastructure-developpement-avec-salt-gitlab-kitchen-et-testinfra.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Déployer une infrastructure avec SaltStack avec l'assurance qualité assurée dans Gitlab avec des linters, et des tests en machine virtuelle avec Kitchen et testinfra.&lt;/p&gt;
&lt;p&gt;Pour une infrastructure complexe géré en infrastructure-as-code avec SaltStack, comment nous avons mis en place de l'assurance qualité, des tests pour faciliter l'intégration de modifications, ainsi que l'assurance que la description de l'infrastructure peux s'appliquer. Retour d’expérience de travaux effectué avec un hébergeur utilisant Salt pour sa gestion d'infrastructure et ses déploiements.&lt;/p&gt;
&lt;p&gt;Composants exposés :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;saltstack  pour décrire son infrastructure&lt;/li&gt;
&lt;li&gt;salt-formulas pour un déploiement de services avec du code mutualisé&lt;/li&gt;
&lt;li&gt;yamllint pour tester la syntaxe et les conventions du yaml&lt;/li&gt;
&lt;li&gt;flake8 pour le code python (pep8 compliance)&lt;/li&gt;
&lt;li&gt;pytest pour tester certains templates jinja&lt;/li&gt;
&lt;li&gt;doc8 pour tester la documentation d'infrastructure&lt;/li&gt;
&lt;li&gt;tox pour lancer les tests dans des environnements reproductibles&lt;/li&gt;
&lt;li&gt;kitchen (ruby) pour piloter le cycle de test (création machine virtuelle, application de l'état désiré, lancement des tests, destruction de la machine virtuelle)&lt;/li&gt;
&lt;li&gt;testinfra pour écrire des tests d'infrastructure en python&lt;/li&gt;
&lt;li&gt;gitlab pour lancer l'ensemble en intégration continue&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Témoignage : comment j'ai survécu à ma thèse en machine learning avec Python ?</title><link href="https://pyvideo.org/pycon-fr-2019/temoignage-comment-jai-survecu-a-ma-these-en-machine-learning-avec-python.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Ikram Chraibi Kaadoud</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/temoignage-comment-jai-survecu-a-ma-these-en-machine-learning-avec-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Je propose un témoignage sur mon utilisation de Python durant mes travaux de thèse pour développer un réseau de neurones récurrents doté d'unités LSTM, Long Short Term Memory.
Face à des outils comme Keras, Tensorflow, pytorch etc., j'ai choisi d'implémenter ma propre solution avec Python, sans solliciter de solutions existantes car ces solutions ne me semblaient pas satisfaisante pour répondre à la question de l'interprétabilité dominante dans mes travaux de thèse.
J'ai donc décidé de &amp;quot;mettre les mains dans le cambouis &amp;quot; pour mieux comprendre les boites noires que sont les réseaux de neurones et ainsi mener a bien ma thèse et acquérir la légitimité nécessaire pour parler de Machine Learning.&lt;/p&gt;
&lt;p&gt;Ce beau challenge s'est alors accompagné de nombreuses péripéties : 1) Comprendre ce qu'est un LSTM. Pour cela, j'ai surtout implémenté ce que j'en comprenais : d'abord un bloc à une cellule, puis un réseau doté d'une couche d'entrée et de sortie, puis un réseau avec plusieurs blocs et cellules. 2) Ecrire des équations en python. J'ai ainsi découvert les mathématiques en python lors de mon implémentation de matrices de dérivées partielles nécessaire à l'apprentissage du réseau de neurones. 3) Développer en Python des concepts poussés, tels que : utiliser une structure de classe pour l'architecture, développer des distances mathématiques entre des vecteurs numériques, implémenter et générer des graphes, etc..&lt;/p&gt;
&lt;p&gt;Une fois mon réseau neuronal fonctionnel  (qui apprend et qui prédit avec de bonnes performances), je me suis ensuite intéressée à comment Python pouvait m'aider à expliciter ce qui se passe dans mon réseau avec par exemple Matplotlib, numpy, la librairie sickit learn... Et souvent j'ai passé des semaines à vérifier mes résultats ! En effet, un code qui compile n'est pas synonyme de réseau qui apprend, et cela est une réalité dont j'ai surtout pris la mesure lors de mes développements.&lt;/p&gt;
&lt;p&gt;Dans cette démarche d'expérience et de challenge, j'ai dû par conséquent persévéré de nombreuses fois, ce qui est encore le cas aujourd'hui (dans la mesure du possible). En effet, partir de zéro permet d'aborder les questions autrement. Certes il m'a fallu plus de temps et d'énergie pour construire mon réseau mais une fois cela réalisé, j'en maîtrisais toutes les briques et je pouvais aller plus loin dans son exploitation, sa modification et fouiller son raisonnement (les valeurs d'activation) plus profondément. Tel est le sentiment que j'en avais.&lt;/p&gt;
</summary></entry><entry><title>Tests : la jungle des frameworks</title><link href="https://pyvideo.org/pycon-fr-2019/tests-la-jungle-des-frameworks.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Robin Huart</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/tests-la-jungle-des-frameworks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Les tests sont nécessaires à la qualité logicielle; ils se déclinent de différentes manières : unitaires, fonctionnels, etc... Les méthodes agiles via le BDD et le TDD lui font la part belle. Quels frameworks pour quels objectifs? Comment faire les bons choix?&lt;/p&gt;
</summary></entry><entry><title>The Joy of Creating Art with Code</title><link href="https://pyvideo.org/pycon-fr-2019/the-joy-of-creating-art-with-code.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Neeraj Pandey</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/the-joy-of-creating-art-with-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Art is everywhere and it’s beautiful. Unleash the creative artist inside you with the beauty of Generative Art. Learn how algorithms are used to create these aesthetic art forms, how motion and structures emit sounds and what toolkits are required to do so. The talk will take the audience to a small history of Generative Art and how autonomously these art forms are created using algorithms with various examples using Processing, Numpy, PyCario and more.&lt;/p&gt;
</summary></entry><entry><title>ToFu − An Open-Source Python/Cython Library for Synthetic Tomography Diagnostics on Tokamaks</title><link href="https://pyvideo.org/pycon-fr-2019/tofu-an-open-source-pythoncython-library-for-synthetic-tomography-diagnostics-on-tokamaks.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Laura Mendoza</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/tofu-an-open-source-pythoncython-library-for-synthetic-tomography-diagnostics-on-tokamaks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nuclear fusion comes along with great promises of almost limitless energy with little risks and waste. But it also comes with significant scientific and technological complexities. Decades of efforts may find an echo in ITER, an international tokamak being built to address this challenge. A tokamak is a particular kind of advanced experimental nuclear fusion reactor. It is a torus-shaped vacuum vessel in which a hydrogen plasma of very low density is heated up to temperatures (10-100 millions of degrees Celsius) allowing nuclear fusion reactions to occur. The torus-shaped plasma radiates light, which is measured in various wavelength domains by dedicated sets of detectors (called diagnostics), like 2D cameras observing visible light, 1D arrangements of diodes sensitive to X-rays, ultra-violet spectrometers... Due to the torus shape, the plasma is axisymmetric, and like in medical imaging, tomography methods can be used to diagnose the light radiated in a plasma cross-section.
For all diagnostics, one can seek to solve the direct or the inverse problem. The direct problem consists in computing the measurements from a known plasma light emissivity, provided by a plasma simulation for example.
The inverse problem consists in computing the plasma light emissivity from experimental measurements. The algorithms involved in solving both the direct and inverse problem are very similar, no matter the wavelength domain.&lt;/p&gt;
&lt;p&gt;Like many, the fusion community tends to suffer from a lack of reproducibility of the results it publishes. This problem is particularly acute in the case of tomography diagnostics since the inverse problem is ill-posed and the solution unicity is not guaranteed. There are also many possible simplifying hypotheses that may, or may not, be relevant for each diagnostic. In this regard, the historical uses of the community display a large variety of single-user black-box codes, each typically designed by a student, and often forgotten or left as is until a new student is hired and starts all over again.&lt;/p&gt;
&lt;p&gt;In this context, a machine-independent, open-source and documented python library, ToFu, was started to provide the fusion community with a common and free reference tool.
We thus aim at improving reproducibility by providing a known and transparent tool, able to efficiently solve both the direct and inverse problem for tomography diagnostics. It can use very simple hypothesis or very complete diagnostics descriptions alike, one of the ideas being that it should allow users to perform accurate calculations easily, sparing them the need to simplify hypotheses that are not always valid.&lt;/p&gt;
&lt;p&gt;A zero version of tofu, fully operational but not user-friendly enough, was first developed between 2014 and 2016 when it was used for published results. Strong with this first proof of principle, a significant effort was initiated in 2017 to completely re-write the code with a stronger emphasis on python community standards (PEP8), version control (Github), performance (cython), packaging (pip and conda), continuous integration (nosetests and travis), modularity (architecture refurbishing), user-friendliness (renamings, utility tools) and object-oriented coding (class inheritance).
This effort is still ongoing to this day and is scheduled to go on for the next 2.5 years. However, the first milestones have been reached, and we would like to present the first re-written modules to the python community, for publicity, advice, feedback, mutually enriching exchanges and more generally because we feel tofu is part of the large open-source python scientific community.&lt;/p&gt;
&lt;p&gt;The code is composed of several modules: a geometry module, a data visualization module, a meshing module, and an inversion module. We will present the geometry module (containing ray-tracing tools, spatial integration algorithms...) and the data module (making use of &lt;tt class="docutils literal"&gt;matplotlib&lt;/tt&gt; for pre-defined interactive figures). Using profiling tools, the numerical core of the geometry module was optimized and parallelized recently in &lt;tt class="docutils literal"&gt;Cython&lt;/tt&gt; making the code more than ten thousand times faster than the previous version on some test cases. Memory usage has also been reduced by half on the largest test cases.&lt;/p&gt;
</summary></entry><entry><title>Turning Spatial Data into Arrays: Python Coming Handy for GIS People!</title><link href="https://pyvideo.org/pycon-fr-2019/turning-spatial-data-into-arrays-python-coming-handy-for-gis-people.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Julie Pierson</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/turning-spatial-data-into-arrays-python-coming-handy-for-gis-people.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GIS software is used to analyze spatial data. In some cases, GIS data can be voluminous and Python can come in handy.&lt;/p&gt;
&lt;p&gt;Such a case will be described here. I was trying to visualize superpositions between rectangular extents (a lot of rectangular extents !) and found QGIS and PostGIS too slow for the job (although I must say I'm no PostGIS guru). I then used Python to convert my extents into arrays of 0 and 1 and could add them all in a few minutes, and visualize superpositions by turning the resulting array into an asc file. Sorry if this is not quite clear, it's easier to explain with a few pictures, as often is the case with spatial data !&lt;/p&gt;
&lt;p&gt;I then tried to substract 2 of the resulting asc files to visualize the evolution between 2 dates, and stumbled upon a problem in Python : the files were too big to be held in memory. A developer helped me solved this problem and I undestood better how memory is used in Python and how to hold in memory only one line of a file.&lt;/p&gt;
&lt;p&gt;All in all, this is a story about GIS people venturing into Python programming !&lt;/p&gt;
&lt;p&gt;Scripts can be found here : &lt;a class="reference external" href="https://github.com/UMR-PASSAGES/metadata-extents"&gt;https://github.com/UMR-PASSAGES/metadata-extents&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Un Captcha libre, c'est possible !</title><link href="https://pyvideo.org/pycon-fr-2019/un-captcha-libre-cest-possible.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Mindiell</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/un-captcha-libre-cest-possible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Le Captcha (ou Completely Automatized Public Turing test to tell Computers and Humans Apart) est un moyen a priori simple de déterminer si l'utilisateur stué derrière un site web est un humain ou un robot.
Cet outil est aujourd'hui souvent synonyme de ReCaptcha, technologie rachetée par Google en 2009. Malheureusement, cet outil est surtout utilisé à des fins de surveillance et d'espionnage, voire pour améliorer des IA utilisées par l'armée américaine.&lt;/p&gt;
&lt;p&gt;C'est en souhaitant lutter contre les abus de Google via cette technologie que j'ai travaillé sur un prototype fonctionnel qui pourrait facilement remplacer l'actuel. Pas forcément plus compliqué, pas forcément plus fiable, ce test est, par contre, beaucoup plus libre, son code source est ouvert et chacun peut l'installer chez soi (ou dans son entreprise).&lt;/p&gt;
&lt;p&gt;On parlera donc de ce qu'est un Captcha, de ce que ça demande comme travail de recherche pour générer des tests de manière automatisée, de gérer des tests pour les déficients visuels (accessibilité quoi), de l'adapter pour remplacer un ReCaptcha le plus facilement possible, bref de comment faire un Captcha de A à Z !&lt;/p&gt;
</summary></entry><entry><title>Un CMS conçu pour la performance écologique</title><link href="https://pyvideo.org/pycon-fr-2019/un-cms-concu-pour-la-performance-ecologique.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Hugo Delval</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/un-cms-concu-pour-la-performance-ecologique.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Les CMS sont parmis les types de site les plus demandés, souvent déployés pour de simples sites vitrines. Le compromis entre légèreté et personnalisation n'est pas simple. En résulte des pages de sites vitrines contenant des centaines de requêtes, du javascript venant de tous les horizons, tout cela pour permettre d'observer une animation de chargement. Nous avons travaillé sur une solution pour mettre fin à tout ça, pour le découvrir, venez voir notre présentation.&lt;/p&gt;
&lt;p&gt;Topics abordés : impact écologique, éco-conception, pages statiques, django, wagtail, nginx&lt;/p&gt;
</summary></entry><entry><title>Understand RegEx using deep learning</title><link href="https://pyvideo.org/pycon-fr-2019/understand-regex-using-deep-learning.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Shubhadeep Roychowdhury</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/understand-regex-using-deep-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;“Some people, when confronted with a problem, think “I know, I’ll use regular expressions.” Now they have two problems.” - Jamie Zawinski&lt;/p&gt;
&lt;p&gt;I was staring to my screen and there was this — &lt;cite&gt;^(http|https|ftp):[/]{2}([a-zA-Z0-9-.]+.[a-zA-Z]{2,4})(:[0-9]+)?/?([a-zA-Z0-9-._?,'/\+&amp;amp;amp;%$#=~]*)&lt;/cite&gt;
I could understand that it is, may be, talking about some kind of URL pattern. But what the meaning of it? No answer. And Stackoverflow was no help.&lt;/p&gt;
&lt;p&gt;This when I started my project to automatically generate the intent of any RegEx expression given the expression itself. Without any prior domain knowledge.
I will walk you through the data I used, how I built my models, and the outcomes achieved.
I will also provide a notebook so you’ll be able to play with it.&lt;/p&gt;
</summary></entry><entry><title>Where in the World is "11 H 1-2"? − Aligning Public Datasets With Nazca</title><link href="https://pyvideo.org/pycon-fr-2019/where-in-the-world-is-11-h-1-2-aligning-public-datasets-with-nazca.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Carine Dengler</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/where-in-the-world-is-11-h-1-2-aligning-public-datasets-with-nazca.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The access to data stocks made publicly available has never been easier than in present times. Among
many others, FranceArchives and the Muséum National d’Histoire Naturelle are examples of public institutions
providing access to their data. FranceArchives is a service by the Service interministériel des archives de France (SIAF) to help researchers and enthusiasts explore the French archives by grouping and enriching information about their contents. The Muséum National d’Histoire Naturelle (MNHN) is launching the « data.mnhn.fr » project which aims to unify their data stocks and integrate additional information in order to present their naturalists' academic career. In order to
help navigate these enormous amounts of data, both institutions aim to enrich their data stocks by integrating
additional information from third-party sources, such as e.g. Wikidata and Geonames.&lt;/p&gt;
&lt;p&gt;To this end, tools such as Nazca are used to align the datasets in question. There are two main challenges: the datasets' sizes and the heterogenity between them. Nazca is an open-source highly adaptable Python tool addressing both challenges by providing blocking algorithms to reduce the number of comparisons and normalization functions to clean up the data. The tool provides a customizable pipeline containing the normalization, blocking and alignment steps and automatically collects and re-assembles the results at the end.&lt;/p&gt;
&lt;p&gt;The talk is split into two major parts: we begin by shortly introducing Nazca and its pipeline. We then illustrate how its used in FranceArchives to align geographical data to Geonames and close by explaining how it is used to create controlled vocabularies for names in data.mnhn.fr.&lt;/p&gt;
</summary></entry><entry><title>Workalendar, cette bibliothèque qui ne prend jamais de vacances</title><link href="https://pyvideo.org/pycon-fr-2019/workalendar-cette-bibliotheque-qui-ne-prend-jamais-de-vacances.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Bruno Bord</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/workalendar-cette-bibliotheque-qui-ne-prend-jamais-de-vacances.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La réponse à la question &amp;quot;combien y a-t-il de jours ouvrés entre le 16 avril et le 3 mai ?&amp;quot; peut paraître simple... Mais on se rend vite compte qu'il faut préciser un peu...&lt;/p&gt;
&lt;p&gt;De quelle année ?&lt;/p&gt;
&lt;p&gt;Mais aussi et surtout : dans quel pays ?&lt;/p&gt;
&lt;p&gt;Parce que toutes les nations du monde n'offrent pas les mêmes jours fériés ou chômés à leur population, parce que même au sein d'un même pays on peut avoir plusieurs calendriers et parce que la vie serait trop rasoir sans cas particuliers, il a fallu essayer de trouver une réponse logicielle à la question initiale.&lt;/p&gt;
&lt;p&gt;Workalendar est une bibliothèque Python, développée pour la société PeopleDoc en tant que logiciel libre (licence MIT, 50+ contributeurs). Elle compte plus de 230 calendriers du monde entier, capables de calculer les jours fériés d'une soixantaine de pays... autant que possible.&lt;/p&gt;
&lt;p&gt;Cette conférence présentera un tour d'horizon de la bibliothèque et ces usages, et vous en apprendrez sûrement sur le Jour de la Réconciliation en Afrique du Sud, le Premier Jour de l'Été islandais... et le calendrier de la Mongolie !&lt;/p&gt;
</summary></entry><entry><title>Zero to Blockchain in 30 minutes</title><link href="https://pyvideo.org/pycon-fr-2019/zero-to-blockchain-in-30-minutes.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Carine-Belle + Yonatan</name></author><id>tag:pyvideo.org,2019-11-02:pycon-fr-2019/zero-to-blockchain-in-30-minutes.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will build a working blockchain with all the basic functionality, and deploy our own currency, pyconCoin - from scratch.&lt;/p&gt;
&lt;p&gt;Let’s take a complicated topic, break it up into simple building blocks, and connect the dots in our favorite way - by implementing them in Python.&lt;/p&gt;
&lt;p&gt;It's incredibly cool to see how easy it is to create things that sound relatively complex.&lt;/p&gt;
&lt;p&gt;No understanding in blockchain is needed for this talk.&lt;/p&gt;
</summary></entry></feed>