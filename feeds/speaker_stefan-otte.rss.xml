<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 06 Jul 2018 00:00:00 +0000</lastBuildDate><item><title>Deep Neural Networks with PyTorch</title><link>https://pyvideo.org/pydata-berlin-2018/deep-neural-networks-with-pytorch.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn PyTorch and implement deep neural networks (and classic machine
learning models). This is a hands on tutorial which is geared toward
people who are new to PyTorch.&lt;/p&gt;
&lt;p&gt;PyTorch is a relatively new neural network library which offers a nice
tensor library, automatic differentiation for gradient descent, strong
and easy gpu support, dynamic neural networks, and is &lt;em&gt;easy to debug&lt;/em&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stefan Otte</dc:creator><pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-06:pydata-berlin-2018/deep-neural-networks-with-pytorch.html</guid></item><item><title>On Bandits, Bayes, and swipes: gamification of search</title><link>https://pyvideo.org/pydata-berlin-2017/on-bandits-bayes-and-swipes-gamification-of-search.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk will show how to use active learning to work with Small Data. Active learning is an underappreciated subfield of ML where the algorithm actively gathers labeled data, e.g. it can query the user for the most informative data. I will discuss the basics of active learning theory, and look at a case study showing how to use active learning and tailor it to a practical problem.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The first part of the talk is about active learning:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What is it?&lt;/li&gt;
&lt;li&gt;How does it work?&lt;/li&gt;
&lt;li&gt;What are the different flavours of active learning?&lt;/li&gt;
&lt;li&gt;Does it help me solve my problem?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The second part presents a case study where we developed an engaging and fun way to search for your dream car.&lt;/p&gt;
&lt;p&gt;The case study&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;uses an intuitive interface (swipes),&lt;/li&gt;
&lt;li&gt;actively and efficiently explores and learns the user's preferences (with multi-armed bandits, an active learning algorithm),&lt;/li&gt;
&lt;li&gt;incorporates priors (clustering and Bayes to avoid popularity biases)&lt;/li&gt;
&lt;li&gt;is scalable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The talk is less about specific tools and libs - even though everything was done with pythonâ€™s usual suspects (numpy, scipy, sklearn, flask, etc.) - but how to make active learning work for you.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stefan Otte</dc:creator><pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-30:pydata-berlin-2017/on-bandits-bayes-and-swipes-gamification-of-search.html</guid></item></channel></rss>