<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Niels Bantilan</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_niels-bantilan.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-07-10T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Statistical Typing: A Runtime TypingSystem for Data Science&amp;Machine Learning</title><link href="https://pyvideo.org/pycon-us-2021/statistical-typing-a-runtime-typingsystem-for-data-sciencemachine-learning.html" rel="alternate"></link><published>2021-05-14T00:00:00+00:00</published><updated>2021-05-14T00:00:00+00:00</updated><author><name>Niels Bantilan</name></author><id>tag:pyvideo.org,2021-05-14:/pycon-us-2021/statistical-typing-a-runtime-typingsystem-for-data-sciencemachine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data science and machine learning rely on high quality datasets for visualization, statistical inference, and modeling. However, the barriers to testing data processing, analysis, or model-training code are high, even with the extensive tooling that the python ecosystem offers, such as
pandas, pytest, and hypothesis.&lt;/p&gt;
&lt;p&gt;To address this problem …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data science and machine learning rely on high quality datasets for visualization, statistical inference, and modeling. However, the barriers to testing data processing, analysis, or model-training code are high, even with the extensive tooling that the python ecosystem offers, such as
pandas, pytest, and hypothesis.&lt;/p&gt;
&lt;p&gt;To address this problem, in this talk I define statistical typing as a general concept describing a runtime typing system, which extends primitive data types like bool, str, and float into the class of statistical data types. By providing additional semantics about the properties held by a collection of data points, statistical typing enables us to naturally express types as multivariate schemas. It also enables us to implement schemas as generative data contracts, which serve to both validate data at runtime and generate valid samples for testing purposes.&lt;/p&gt;
&lt;p&gt;I'll use pandera, a pandas data testing library, to illustrate how statistical typing makes data testing easier by enabling you to validate real-world data with reusable schemas and isolate units of processing, analysis, and model-training code.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://pandera-dev.github.io/pandera-presentations/slides/20210515_pycon_statistical_typing.slides.html"&gt;https://pandera-dev.github.io/pandera-presentations/slides/20210515_pycon_statistical_typing.slides.html&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon US 2021"></category></entry><entry><title>Pandera: Statistical Data Validation of Pandas Dataframes</title><link href="https://pyvideo.org/scipy-2020/pandera-statistical-data-validation-of-pandas-dataframes.html" rel="alternate"></link><published>2020-07-06T00:00:00+00:00</published><updated>2020-07-06T00:00:00+00:00</updated><author><name>Niels Bantilan</name></author><id>tag:pyvideo.org,2020-07-06:/scipy-2020/pandera-statistical-data-validation-of-pandas-dataframes.html</id><content type="html"></content><category term="SciPy 2020"></category></entry><entry><title>Machine Learning for Production Workloads with Flyte</title><link href="https://pyvideo.org/scipy-2022/machine-learning-for-production-workloads-with-flyte.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>Niels Bantilan</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/machine-learning-for-production-workloads-with-flyte.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MLOps encapsulates the discipline of – and infrastructure that supports – building and maintaining machine learning models in production. This talk highlights four challenges in carrying this out effectively: data quality, reproducibility, recoverability, and auditability. You’ll learn how Flyte, an open source data- and machine-learning-aware orchestration tool, is designed to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MLOps encapsulates the discipline of – and infrastructure that supports – building and maintaining machine learning models in production. This talk highlights four challenges in carrying this out effectively: data quality, reproducibility, recoverability, and auditability. You’ll learn how Flyte, an open source data- and machine-learning-aware orchestration tool, is designed to overcome these challenges and how you can apply the higher-level ideas baked into Flyte to your work!&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry><entry><title>Pandera: Beyond Pandas Data Validation</title><link href="https://pyvideo.org/scipy-2023/pandera-beyond-pandas-data-validation.html" rel="alternate"></link><published>2023-07-10T00:00:00+00:00</published><updated>2023-07-10T00:00:00+00:00</updated><author><name>Niels Bantilan</name></author><id>tag:pyvideo.org,2023-07-10:/scipy-2023/pandera-beyond-pandas-data-validation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data quality remains a core concern for practitioners of machine learning, data science, and data engineering, and in recent years specialized packages have emerged to validate and monitor data and models. However, as the open source community iterates on data frameworks – notably, highly performant entrants such as Polars – data …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data quality remains a core concern for practitioners of machine learning, data science, and data engineering, and in recent years specialized packages have emerged to validate and monitor data and models. However, as the open source community iterates on data frameworks – notably, highly performant entrants such as Polars – data quality libraries need to catch up to support them. In this talk, you will learn about Pandera and its journey from being a pandas-only validator to a generic tool for testing arbitrary data containers so that it can provide a standardized way of creating data validation tools.&lt;/p&gt;
</content><category term="SciPy 2023"></category></entry></feed>