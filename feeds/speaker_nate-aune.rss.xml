<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 17 Oct 2018 00:00:00 +0000</lastBuildDate><item><title>Anatomy of Open edX - a modern online learning platform serving over 35 million users</title><link>https://pyvideo.org/djangocon-us-2018/anatomy-of-open-edx-a-modern-online-learning-platform-serving-over-35-million-users.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What does it take to build a web application that can serve millions of
concurrent users? This talk will dissect Open edX, the open source
online learning platform that powers edX.org and hundreds of other sites
around the world.&lt;/p&gt;
&lt;p&gt;Open edX is written in Django but relies on a slew of other software to
work at scale. We’ll break down the components of the entire software
architecture, and explain how each component is used. This will give
attendees some insights into how they might architect their web
application if they’re building software to serve a large audience.&lt;/p&gt;
&lt;p&gt;We’ll discuss how Open edX utilizes both MySQL and MongoDB as data
stores and why it uses MySQL for student data and MongoDB for course
data. We’ll describe the queing architecture of Celery and RabbitMQ to
process background jobs, and Hadoop for processing terabytes of learner
analytics data.&lt;/p&gt;
&lt;p&gt;DevOps enthusiasts will not be disappointed as we’ll go into the use of
Ansible and Terraform for deploying the entire suite of software in a
consistent and repeatable way up to popular cloud providers such as AWS,
Google Cloud and Azure.&lt;/p&gt;
&lt;p&gt;What will attendees learn? The attendees will get a close look at a
modern Django-based web application to see how it’s architected, and
come away with a better understanding of design decisions when building
a web application that needs to serve 35M users from every country in
the world. Attendees will also be equipped with the knowledge to run
Open edX on their laptop or in the cloud, if they want to explore the
software further.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nate Aune</dc:creator><pubDate>Wed, 17 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-17:djangocon-us-2018/anatomy-of-open-edx-a-modern-online-learning-platform-serving-over-35-million-users.html</guid></item><item><title>Anatomy of Open edX - a modern online learning platform</title><link>https://pyvideo.org/pybay-2017/anatomy-of-open-edx-a-modern-online-learning-platform.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You may have heard of edX.org, the MOOC site created by Harvard and MIT, but did you know that the software powering this site is open source and written in Python? We’ll do a technical deep dive and explore how this software is built in a scalable way to serve millions of concurrent learners, and also show you how you can create your own Open edX site to deliver online courses at scale.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What does it take to build a web application that can serve millions of concurrent users? This talk will dissect Open edX, the open source online learning platform that powers edX.org and hundreds of other sites around the world.&lt;/p&gt;
&lt;p&gt;Open edX is written in Django but relies on a slew of other software to work at scale. We’ll break down the components of the entire software architecture, and explain how each component is used. This will give attendees some insights into how they might architect their web application if they’re building software to serve a large audience.&lt;/p&gt;
&lt;p&gt;We’ll discuss how Open edX utilizes both MySQL and MongoDB as data stores and why it uses MySQL for student data and MongoDB for course data. We’ll describe the queing architecture of Celery and RabbitMQ to process background jobs, and Hadoop for processing terabytes of learner analytics data.&lt;/p&gt;
&lt;p&gt;DevOps enthusiasts will not be disappointed as we’ll go into the use of Ansible and Terraform for deploying the entire suite of software in a consistent and repeatable way up to popular cloud providers such as AWS, Google Cloud and Azure.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bio&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;My first exposure to Python was in 2003 when I began using the Plone CMS, which is based on Zope. This ignited a lifelong love affair with Python. In 2004, I founded Jazkarta, a Boston-based web consultancy to build websites for organizations like Harvard, Oxfam and Smithsonian. Back when PaaS’es were sexy, I founded DjangoZoom to make it easy to get your Django apps running in the cloud. Now I’m leading the 20 person distributed team at Appsembler, whose mission is to empower trainers and educators to create delightful online learning experiences.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nate Aune</dc:creator><pubDate>Sun, 13 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-13:pybay-2017/anatomy-of-open-edx-a-modern-online-learning-platform.html</guid></item><item><title>Lightning Talks - Day 1</title><link>https://pyvideo.org/djangocon-us-2010/djangocon-2010--lightning-talks---day-1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;00:00 - David Gouldin: Hash Signaling Made Easy
(&lt;a class="reference external" href="http://github.com/dgouldin/django-hashsignal"&gt;http://github.com/dgouldin/django-hashsignal&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;05:20 - Tareque Mossain: Django ORM Tips&lt;/li&gt;
&lt;li&gt;11:20 - Nathan?: OpenID in Django&lt;/li&gt;
&lt;li&gt;18:00 - Ben? and Jeremy?: Django efficacy project--call for case
studies&lt;/li&gt;
&lt;li&gt;19:40 - Tobias McNulty: django.contrib.messages and contributing to
Django core&lt;/li&gt;
&lt;li&gt;25:00 - Jason ?: Django Config Store
(&lt;a class="reference external" href="http://github.com/zbyte64/django-configstore"&gt;http://github.com/zbyte64/django-configstore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;28:25 - Niall Kelly: Giving Django a new front door&lt;/li&gt;
&lt;li&gt;32:00 - Justin Lilly: Meetup Meeter&lt;/li&gt;
&lt;li&gt;33:50 - Jesse Noller: WTF: PSF and DSF&lt;/li&gt;
&lt;li&gt;40:00 - dmoisset ?: How request routing should be&lt;/li&gt;
&lt;li&gt;45:30 - Gabriel Falcao: Feeding your ponies with lettuce
(&lt;a class="reference external" href="http://lettuce.it/"&gt;http://lettuce.it/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;50:40 - Nate Aune: djangozoom: Effortless cloud deployment
(&lt;a class="reference external" href="http://djangozoom.com/ponyexpress"&gt;http://djangozoom.com/ponyexpress&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[NOTE: If you know the people whose names have a ?, please add a comment
so we can fix it in the description. Thanks!]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Gouldin</dc:creator><pubDate>Tue, 07 Sep 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-09-07:djangocon-us-2010/djangocon-2010--lightning-talks---day-1.html</guid><category>lightning talks</category><category>django-configstore</category><category>django.contrib.messages</category><category>django-hashsignal</category><category>djangozoom</category><category>dsf</category><category>hash-signaling</category><category>lettuce</category><category>openid</category><category>orm</category><category>psf</category><category>routing</category></item><item><title>Deploying web applications to the cloud with Python</title><link>https://pyvideo.org/europython-2011/deploying-web-applications-to-the-cloud-with-pyth.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Nate Aune - 23 June 2011 in &amp;quot;Track Ravioli&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How can Python help you deploy web applications to the cloud? Amazon EC2
provides virtual machines on demand but as a developer you still have to
configure these machines and push your code to them. Fabric is a Python
library that lets you execute commands on a remote machine, and Boto is
a Python library for interfacing with Amazon web services. By using
Fabric and Boto, you can easily create repeatable deployments and
provision new resources as needed with minimal effort.&lt;/p&gt;
&lt;p&gt;This talk will introduce Amazon Web Services and how to launch new
machines using simple Boto scripts, and how to get started making your
own repeatable deployments using Fabric scripts.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nate Aune</dc:creator><pubDate>Sun, 24 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-24:europython-2011/deploying-web-applications-to-the-cloud-with-pyth.html</guid><category>boto</category><category>cloud</category><category>deploy</category><category>ec2</category><category>fabric</category><category>web</category></item><item><title>An iPhone-Python love affair: Building APIs for mobile</title><link>https://pyvideo.org/europython-2011/an-iphone-python-love-affair-building-apis-for-m.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Anna Callahan,Nate Aune - 24 June 2011 in &amp;quot;Track
Spaghetti&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mobile apps are the hot item of the day - and the best mobile apps are
backed by a great website. Python web developer Nate Aune and iPhone
developer Anna Callahan will show you how we built a simple music web
app in Django with a native iPhone app that communicates with it.
Attendees of this talk will see a concrete case study of building an
application that exposes an API for mobile devices.&lt;/p&gt;
&lt;p&gt;Our web app exposes a JSON API for sending and receiving data from the
mobile device. We’ll talk about why we chose Django and the TastyPie API
package, and discuss other Python-based frameworks that could be used to
build the API such as Pyramid, Flask and Bottle. We’ll also compare REST
and custom APIs to understand best practices for building APIs designed
for mobile devices.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anna Callahan</dc:creator><pubDate>Thu, 07 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-07:europython-2011/an-iphone-python-love-affair-building-apis-for-m.html</guid><category>api</category><category>django</category><category>flask</category><category>json</category><category>mobile</category><category>rest</category><category>tastypie</category><category>web</category></item><item><title>PyCon 2009: Plenary: Afternoon Lightning Talks</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--plenary--afternoon-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plenary: Afternoon Lightning Talks&lt;/p&gt;
&lt;p&gt;(00:05) Easy command line parsing with argparse - Steven Bethard&lt;/p&gt;
&lt;p&gt;(04:14) Moments - Charles Brandt&lt;/p&gt;
&lt;p&gt;(11:45) Crowdsourcing lightning -&lt;/p&gt;
&lt;p&gt;(13:40) Python 3.1 changes - Benjamin Peterson&lt;/p&gt;
&lt;p&gt;(19:35) The Poor Man's Continuous Integration - Zain Memon&lt;/p&gt;
&lt;p&gt;(25:55) cluemapper - Nate Aune&lt;/p&gt;
&lt;p&gt;(29:55) ReleaseBot - Brian Warner&lt;/p&gt;
&lt;p&gt;(34:50) worldPloneday - Jordan Baker and Roberto&lt;/p&gt;
&lt;p&gt;(40:15) blist - Daniel Stutzbach&lt;/p&gt;
&lt;p&gt;(45:10) Python Open Source Overview on Launchpad - Gary Poster&lt;/p&gt;
&lt;p&gt;(49:50) Pyjamas - Bernd Dorn&lt;/p&gt;
&lt;p&gt;(53:50) &amp;nbsp;is Evil and IP Addresses in Python - Gregory Smith&lt;/p&gt;
&lt;p&gt;(56:00) ctypes - Jason Coombs&lt;/p&gt;
&lt;p&gt;(61:10) Come to EuroPython - Jonathan Hartley&lt;/p&gt;
&lt;p&gt;(65:45) Zope - Lennart Regebro&lt;/p&gt;
&lt;p&gt;(71:05) Site Checker - Eric Holscher&lt;/p&gt;
&lt;p&gt;(76:20) PSF Community Awards&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steven Bethard</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--plenary--afternoon-lightning-talks.html</guid><category>lightning talks</category><category>argparse</category><category>blist</category><category>cluemapper</category><category>ctypes</category><category>launchpad</category><category>moments</category><category>plone</category><category>pycon</category><category>pycon2009</category><category>pyjamas</category><category>python31</category><category>sitechecker</category><category>testing</category><category>twill</category><category>zope</category></item><item><title>Deploy your Python app in 5 min with a PaaS</title><link>https://pyvideo.org/pycon-us-2013/deploy-your-python-app-in-5-min-with-a-paas.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;How can you avoid servers and get back to coding? Platform-as-a-service
(PaaS) makes deployment easy. But which PaaS do you choose and how do
you get started? This talk will examine several of the leading PaaS
providers and discuss their pros/cons. We'll also give examples for how
to deploy the same app to each of them to see the differences.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nate Aune</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-03-15:pycon-us-2013/deploy-your-python-app-in-5-min-with-a-paas.html</guid><category>talk</category></item></channel></rss>