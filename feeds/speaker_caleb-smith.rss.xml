<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 24 Sep 2015 00:00:00 +0000</lastBuildDate><item><title>Introduction to Celery</title><link>https://pyvideo.org/pyohio-2014/introduction-to-celery.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Many people in the Python community have heard of Celery and aren't
really sure when to use it or how to get started. This talk covers some
of the first questions of a new Celery user. It will also point out some
common pitfalls for beginning users.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Smith</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/introduction-to-celery.html</guid><category>talk</category></item><item><title>The D is Silent: Challenges in Teaching Django</title><link>https://pyvideo.org/djangocon-us-2015/the-d-is-silent-challenges-in-teaching-django-by.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The D is Silent: Challenges in Teaching Django&lt;/p&gt;
&lt;p&gt;What are Django's important design decisions? Maximizes for the 90%
case, but allows for uncommon cases Batteries included Emphasis on
documentation and testing &amp;quot;Configuration over convention&amp;quot; and &amp;quot;Explicit
is better than implicit&amp;quot; What are the benefits of each choice? Good
high-level documentation Easy access to quality libraries An invitation
to explore. What challenges are a consequence of these choices. Do I
need all of Django? What is Django and what is Python? The mixed bag of
&amp;quot;Configuration over convention&amp;quot; What does Flask do differently? How does
Ruby on Rails differ and which parts are harder or easier to teach.
Common mistakes when teaching Django How Django lends itself well to a
Constructivist teaching approach, especially Jerome Bruner's &amp;quot;Spiral
Curriculum&amp;quot;.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/HIXO/"&gt;http://amara.org/v/HIXO/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Smith</dc:creator><pubDate>Thu, 24 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-24:djangocon-us-2015/the-d-is-silent-challenges-in-teaching-django-by.html</guid></item><item><title>The D is Silent: Challenges in Teaching Django</title><link>https://pyvideo.org/djangocon-us-2015/djangocon-2015-the-d-is-silent-challenges-in-by.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The D is Silent: Challenges in Teaching Django by Caleb Smith&lt;/p&gt;
&lt;p&gt;What are Django's important design decisions? Maximizes for the 90%
case, but allows for uncommon cases Batteries included Emphasis on
documentation and testing &amp;quot;Configuration over convention&amp;quot; and &amp;quot;Explicit
is better than implicit&amp;quot; What are the benefits of each choice? Good
high-level documentation Easy access to quality libraries An invitation
to explore. What challenges are a consequence of these choices. Do I
need all of Django? What is Django and what is Python? The mixed bag of
&amp;quot;Configuration over convention&amp;quot; What does Flask do differently? How does
Ruby on Rails differ and which parts are harder or easier to teach.
Common mistakes when teaching Django How Django lends itself well to a
Constructivist teaching approach, especially Jerome Bruner's &amp;quot;Spiral
Curriculum&amp;quot;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Smith</dc:creator><pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-18:djangocon-us-2015/djangocon-2015-the-d-is-silent-challenges-in-by.html</guid></item></channel></rss>