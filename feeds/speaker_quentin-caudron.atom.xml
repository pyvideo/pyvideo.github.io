<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_quentin-caudron.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-07-06T00:00:00+00:00</updated><entry><title>Introduction to data analytics with pandas</title><link href="https://pyvideo.org/pydata-seattle-2017/introduction-to-data-analytics-with-pandas.html" rel="alternate"></link><published>2017-07-06T00:00:00+00:00</published><updated>2017-07-06T00:00:00+00:00</updated><author><name>Quentin Caudron</name></author><id>tag:pyvideo.org,2017-07-06:pydata-seattle-2017/introduction-to-data-analytics-with-pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data analytics in Python benefits from the beautiful API offered by the pandas library. With it, manipulating and analysing data is fast and seamless. In this workshop, we'll take a hands-on approach to performing an exploratory analysis in pandas. We'll begin by importing some real data. Then, we'll clean it, transform it, and analyse it, finishing with some visualisations.&lt;/p&gt;
&lt;p&gt;Introduction
In this hands-on workshop, we'll walk through the exploratory analysis of real-world data. Datasets are often messy, full of holes and inconsistencies, and a data scientist or analyst may spend a large fraction of their time cleaning and preparing data.&lt;/p&gt;
&lt;p&gt;Fortunately, pandas makes a lot of this fairly trivial. It allows the user to import data from all sorts of different sources, and then manipulate the powerful DataFrame object. Analytics with pandas are human-friendly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Workshop&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pulling in the data
Starting with some data in CSV form, we'll look at the general properties of our dataset. What columns do we have; what kind of values are contained in them ? We'll identify problematic fields, and join two datasets to make one complete dataframe.&lt;/p&gt;
&lt;p&gt;Cleaning
We've identified problems with our data, and now it's time to correct them. We'll fill in missing values, drop irrelevant rows, and fix incorrect datatypes.&lt;/p&gt;
&lt;p&gt;Transforming the data
Next, we'll standardise some numerical fields where we're looking for deviations rather than absolute values, and derive some new columns based on the data we have.&lt;/p&gt;
&lt;p&gt;Visualisation
Throughout, we'll be generating visualisations, to guide us in where to go next.&lt;/p&gt;
&lt;p&gt;Prerequisites
You'll need to be fairly comfortable working with Python. We won't be doing anything overly complicated, but having a grasp of Python syntax is expected.&lt;/p&gt;
&lt;p&gt;Laptop
If you want to follow along, please have a working Python setup, with pandas and matplotlib installed. Aim for a recent version of pandas. If you're unsure what to install, I recommend getting Python 3 through Anaconda : &lt;a class="reference external" href="https://www.continuum.io/downloads"&gt;https://www.continuum.io/downloads&lt;/a&gt; - this distribution comes with everything you need and is very friendly.&lt;/p&gt;
</summary></entry></feed>