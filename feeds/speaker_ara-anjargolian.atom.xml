<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ara-anjargolian.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-09-13T00:00:00+00:00</updated><entry><title>Performant Django</title><link href="https://pyvideo.org/djangocon-us-2014/performant-django.html" rel="alternate"></link><published>2014-09-13T00:00:00+00:00</published><updated>2014-09-13T00:00:00+00:00</updated><author><name>Ara Anjargolian</name></author><id>tag:pyvideo.org,2014-09-13:djangocon-us-2014/performant-django.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Since the days of version 1.0, the Django community has added countless
features that address performance pain points; everything from cached
template loaders to prefetch_related(), the staticfiles app to
django-debug-toolbar. But how do you use these tools to make your site
fast? In this talk we take a meandering survey through the Django/Python
performance landscape.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/FNEq/"&gt;http://amara.org/v/FNEq/&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>