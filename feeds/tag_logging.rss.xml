<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 13 May 2018 00:00:00 +0000</lastBuildDate><item><title>Gathering and visualizing metrics with ZeroMQ, Redis &amp; Graphite</title><link>https://pyvideo.org/pycon-japan-2012/gathering-and-visualizing-metrics-with-zeromq-redis-graphite.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will present a small system to collect, summarize and graph detailed application metrics. The system is simple, reliable and easy to extend. In this talk, I’ll walk through the tools, configuration and Python code which glues everything together.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Dorsey</dc:creator><pubDate>Sat, 15 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-15:pycon-japan-2012/gathering-and-visualizing-metrics-with-zeromq-redis-graphite.html</guid><category>metrics</category><category>logging</category><category>zeromq</category><category>redis</category><category>graphite</category></item><item><title>Effortless Logging: A deep dive into the logging module</title><link>https://pyvideo.org/pycon-us-2018/effortless-logging-a-deep-dive-into-the-logging-module.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Logs are our best friend, especially on those late nights when we try to troubleshoot a problem in production that was written by a co-worker who is on vacation. Logs are the main way to know what is happening with an application at runtime, but we don’t realize how important they are until we actually need them. Unfortunately, they are usually an under-estimated part of the development process.&lt;/p&gt;
&lt;p&gt;This talk aims to transmit the need for the logging module, briefly explains how to use it and how it is built, and dives into all the complexity that is hidden to us. This will help attendees not just understand all the magic that allows us to inspect our applications at runtime, but also to avoid mistakes and adapt the module to our needs for more esoteric scenarios.&lt;/p&gt;
&lt;p&gt;The talk is structured to simplify the understanding of the logging module. Many people have read the documentation, but still struggle to fully understand what is happening under the hood. This talk aims to eliminate that barrier by presenting it in an easier-to-digest manner.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mario Corchero</dc:creator><pubDate>Sun, 13 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-13:pycon-us-2018/effortless-logging-a-deep-dive-into-the-logging-module.html</guid><category>logging</category></item><item><title>Logueando como un pro, porque llenar un script con prints sigue siendo cutre</title><link>https://pyvideo.org/pycon-es-2017/logueando-como-un-pro-porque-llenar-un-script-con-prints-sigue-siendo-cutre.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A menudo necesitamos un cierto nivel de comunicación desde nuestros scripts y el candidato preferido por todos es &lt;cite&gt;print()&lt;/cite&gt; para sacar mensajes en el intérprete... ¡hasta que conozcas &lt;cite&gt;logging&lt;/cite&gt;!&lt;/p&gt;
&lt;p&gt;Vamos a conocer el módulo &lt;cite&gt;logging&lt;/cite&gt; de la biblioteca estándar: ¿Para qué es útil? ¿Cuáles son sus componentes principales? ¿Cómo puedo aprovecharlo? Y veremos muchos ejemplos: entre ellos, entenderemos por fin el &lt;cite&gt;LOGGING&lt;/cite&gt; de los ajustes de Django.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">J.Romero</dc:creator><pubDate>Sat, 23 Sep 2017 11:00:00 +0200</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-es-2017/logueando-como-un-pro-porque-llenar-un-script-con-prints-sigue-siendo-cutre.html</guid><category>logging</category></item><item><title>Lightning Talks 4: Logs with context</title><link>https://pyvideo.org/pyday-galicia-2017/lightning-talks-4-logs-with-context.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eloy Coto Pereiro</dc:creator><pubDate>Sat, 10 Jun 2017 18:45:00 +0200</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-10:pyday-galicia-2017/lightning-talks-4-logs-with-context.html</guid><category>lightning talks</category><category>pyday</category><category>Galicia</category><category>logging</category></item><item><title>Twiggy: A Pythonic Logger</title><link>https://pyvideo.org/chipy/twiggy--a-pythonic-logger.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Twiggy is an early-stage project to build a more Pythonic logging
module. It was started at Pycon 2010.&lt;/p&gt;
&lt;p&gt;Home:
&lt;a class="reference external" href="http://python-%20twiggy.googlecode.com"&gt;http://python-twiggy.googlecode.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the notes for a quick overview
&lt;a class="reference external" href="http://pythontwiggy.googlecode.com/hg/notes.html"&gt;http://pythontwiggy.googlecode.com/hg/note
s.html&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Fein</dc:creator><pubDate>Thu, 08 Apr 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-04-08:chipy/twiggy--a-pythonic-logger.html</guid><category>chipy</category><category>logging</category><category>twiggy</category></item><item><title>Remote execution of Python scripts using Viri</title><link>https://pyvideo.org/europython-2011/remote-execution-of-python-scripts-using-viri.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Marc Garcia - 21 June 2011 in &amp;quot;Track Tagliatelle&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Viri is a system for automatic distribution and execution of Python code
on remote machines. This is especially useful when dealing with a large
group of hosts.&lt;/p&gt;
&lt;p&gt;With Viri, Sysadmins can write their own scripts, and easily distribute
and execute them on any number of remote machines. Depending on the
number of computers to administrate, Viri can save thousands of hours,
that Sysadmins would spend transferring files, logging into remote
hosts, and waiting for the scripts to finish. Viri automates the whole
process.&lt;/p&gt;
&lt;p&gt;Viri can also be useful for remotely managing host settings. It should
work together with an application where the information about hosts
would be maintained. This information can include cron tasks, firewall
rules, backup settings,etc. After a simple Integration of this
application with your Viri infrastructure, you can change any settings
in the application, and see how it gets applied on the target host
automatically.&lt;/p&gt;
&lt;p&gt;The talk will cover next topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to Viri&lt;/li&gt;
&lt;li&gt;Live demo on how to install Viri, write a Viri task, and execute it
in a remote host&lt;/li&gt;
&lt;li&gt;Security concerns using Viri&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check &lt;a class="reference external" href="http://www.viriproject.com"&gt;Viri project page&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garcia</dc:creator><pubDate>Mon, 18 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-18:europython-2011/remote-execution-of-python-scripts-using-viri.html</guid><category>backup</category><category>logging</category><category>scripts</category></item><item><title>Robert Coup - Monitoring and debugging your live applications</title><link>https://pyvideo.org/kiwi-pycon-2009/robert-coup---monitoring-and-debugging-your-live-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Monitoring and debugging your live application&lt;/p&gt;
&lt;p&gt;Presented by Robert Coup&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Ever wondered what is going on inside your app? Learn some tools and
ideas you can use for sussing it out.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Debugging issues in live applications can be a real nightmare. Add some
more logging, restart it, wait for the failure/load case and try and
deduce a bit more. Even with awesome test coverage you still need to
debug those tricky problems. This talk will introduce some ideas for
monitoring and debugging your live applications. The key things to cover
are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;the standard logging module and learning how to drive it well. How to
log effectively so it makes sense later, and what sorts of things we
should be instrumenting and measuring.&lt;/li&gt;
&lt;li&gt;how to set up a remote console session into our running application,
so we can interrogate variables and run code to figure out what's
going on.&lt;/li&gt;
&lt;li&gt;how to incorporate IRC or IM bots so we can interact with our apps
from the desktop, and how they can interact with us.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Coup</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/robert-coup---monitoring-and-debugging-your-live-.html</guid><category>debugging</category><category>im</category><category>irc</category><category>kiwipycon</category><category>kiwipycon2009</category><category>logging</category></item></channel></rss>