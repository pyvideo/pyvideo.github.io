<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 15 Sep 2019 00:00:00 +0000</lastBuildDate><item><title>FastAPI from the ground up</title><link>https://pyvideo.org/pycon-uk-2019/fastapi-from-the-ground-up.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What comes next after Django and it's Django REST Framework? This talk shows how to build a simple REST API for a database from the ground up using FastAPI.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Withers</dc:creator><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-09-15:pycon-uk-2019/fastapi-from-the-ground-up.html</guid></item><item><title>Making all the boring things go away</title><link>https://pyvideo.org/pycon-uk-2017/making-all-the-boring-things-go-away.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Whenever we come to write a script, there's a bunch of stuff we don't really want to deal with: command line option processing, config files, user preferences, logging, structuring code for testability.&lt;/p&gt;
&lt;p&gt;This talk goes through the problems you're likely to hit with each of these and ways that you can both &amp;quot;do it right&amp;quot; and not have to implement it all yourself.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Withers</dc:creator><pubDate>Thu, 26 Oct 2017 16:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-26:pycon-uk-2017/making-all-the-boring-things-go-away.html</guid><category>boilerplate</category></item><item><title>Things to make writing tests easier</title><link>https://pyvideo.org/pycon-us-2013/things-to-make-writing-tests-easier.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Writing tests is often hard enough as it is, without having to keep on
writing the same boiler plate to set things up and check outcomes. I've
collected a bunch of these tools that are all documented, flexible and
have unit tests of their own. I'd like to share those with people
interested in using them so they can spend more time writing code and
less time worrying about how to test it properly.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Withers</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-03-16:pycon-us-2013/things-to-make-writing-tests-easier.html</guid><category>talk</category></item></channel></rss>