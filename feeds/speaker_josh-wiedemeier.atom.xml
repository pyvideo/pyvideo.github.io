<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Josh Wiedemeier</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_josh-wiedemeier.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-05-17T00:00:00+00:00</updated><subtitle></subtitle><entry><title>There and Back Again: Reverse Engineering Python Binaries</title><link href="https://pyvideo.org/pycon-us-2024/there-and-back-again-reverse-engineering-python-binaries.html" rel="alternate"></link><published>2024-05-17T00:00:00+00:00</published><updated>2024-05-17T00:00:00+00:00</updated><author><name>Josh Wiedemeier</name></author><id>tag:pyvideo.org,2024-05-17:/pycon-us-2024/there-and-back-again-reverse-engineering-python-binaries.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Companies and malware authors use packaging tools to distribute products
and payloads as Python bytecode (.pyc) files, often thinking that their
secret logic will be unreadable by humans. Using a simple example, we
will teach curious developers how to interpret and decompile Python
bytecode by hand. Finally, we will â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Companies and malware authors use packaging tools to distribute products
and payloads as Python bytecode (.pyc) files, often thinking that their
secret logic will be unreadable by humans. Using a simple example, we
will teach curious developers how to interpret and decompile Python
bytecode by hand. Finally, we will discuss challenges and solutions of
automating Python decompilation.&lt;/p&gt;
&lt;p&gt;This talk is targeted towards intrepid intermediate Python developers
who are looking to take a look under the hood, and reverse engineers who
are looking to add Python binaries to their repertoire. Unlike previous
bytecode-oriented talks at PyCon, which primarily focus on Python's
execution model, this talk is primarily interested in recovering Python
source code from Python bytecode.&lt;/p&gt;
</content><category term="PyCon US 2024"></category></entry></feed>