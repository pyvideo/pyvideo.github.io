<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Denis Viviès</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_denis-vivies.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-11-03T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Qu'est-ce qu'il y a dans un virtualenv?</title><link href="https://pyvideo.org/pycon-fr-2024/quest-ce-quil-y-a-dans-un-virtualenv.html" rel="alternate"></link><published>2024-11-03T00:00:00+00:00</published><updated>2024-11-03T00:00:00+00:00</updated><author><name>Denis Viviès</name></author><id>tag:pyvideo.org,2024-11-03:/pycon-fr-2024/quest-ce-quil-y-a-dans-un-virtualenv.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;L'utilisation d'environnements virtuels (virtualenvs) est la solution recommandée pour séparer ses dépendances en Python. Mais vous-êtes vous déjà demandé comment ils fonctionnaient? À quoi sert ce &lt;cite&gt;source venv/bin/activate&lt;/cite&gt;?  Après un rappel de comment se servir des virtualenvs, nous verrons leur architecture et comment ils séparent nos dépendances …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;L'utilisation d'environnements virtuels (virtualenvs) est la solution recommandée pour séparer ses dépendances en Python. Mais vous-êtes vous déjà demandé comment ils fonctionnaient? À quoi sert ce &lt;cite&gt;source venv/bin/activate&lt;/cite&gt;?  Après un rappel de comment se servir des virtualenvs, nous verrons leur architecture et comment ils séparent nos dépendances avant de voir d'autres solutions (Anaconda, pex, ...)&lt;/p&gt;
</content><category term="PyCon FR 2024"></category></entry></feed>