<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_steve-baker.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-09-11T00:00:00+00:00</updated><entry><title>Making randomly generated guitar effect patches that don't sound terrible</title><link href="https://pyvideo.org/kiwi-pycon-2016/making-randomly-generated-guitar-effect-patches-that-dont-sound-terrible.html" rel="alternate"></link><published>2016-09-11T00:00:00+00:00</published><updated>2016-09-11T00:00:00+00:00</updated><author><name>Steve Baker</name></author><id>tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/making-randomly-generated-guitar-effect-patches-that-dont-sound-terrible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Steve Baker
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/140/"&gt;https://kiwi.pycon.org/schedule/presentation/140/&lt;/a&gt;
Modern guitar effects processors are available which have flexible and complex signal processing pipelines and can be controlled remotely via MIDI. I attempt to use python to create good and interesting sounds by randomly generating effects patches.&lt;/p&gt;
</summary></entry><entry><title>The Pythonista's 3D printing toolchain</title><link href="https://pyvideo.org/kiwi-pycon-2015/the-pythonistas-3d-printing-toolchain.html" rel="alternate"></link><published>2015-09-06T00:00:00+00:00</published><updated>2015-09-06T00:00:00+00:00</updated><author><name>Steve Baker</name></author><id>tag:pyvideo.org,2015-09-06:kiwi-pycon-2015/the-pythonistas-3d-printing-toolchain.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/SolidCode/SolidPython"&gt;SolidPython&lt;/a&gt; is a Python
module which allows executed Python to generate OpenSCAD script.
&lt;a class="reference external" href="http://www.openscad.org/"&gt;OpenSCAD&lt;/a&gt; is software for creating solid
3D CAD models. OpenSCAD is not an interactive modeller, instead it is
something like a 3D-compiler that reads in a script file that describes
the object and renders the 3D model from this script file.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/daid/Cura"&gt;Cura&lt;/a&gt; is the Python-based user
interface to the CuraEngine slicing library, which processes 3D models
into 3D printing instructions for various printers.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.botqueue.com/"&gt;BotQueue&lt;/a&gt; is a 3D printing job-control
service, allowing remote submission and monitoring of printing jobs to
any number of printers.&lt;/p&gt;
&lt;p&gt;This talk will take a tour through SolidPython, Cura, and BotQueue
showing how Python can help with the design, preparation, and printing
of your doodad, widget, or dingus.&lt;/p&gt;
</summary></entry></feed>