<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-es-2017.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-09-24T16:30:00+02:00</updated><entry><title>Clausura - PyConES 2017</title><link href="https://pyvideo.org/pycon-es-2017/clausura-pycones-2017.html" rel="alternate"></link><published>2017-09-24T16:30:00+02:00</published><updated>2017-09-24T16:30:00+02:00</updated><author><name>Juan Luis Cano</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/clausura-pycones-2017.html</id><summary type="html"></summary><category term="closing ceremony"></category></entry><entry><title>Código abierto: Mucho camino por delante</title><link href="https://pyvideo.org/pycon-es-2017/codigo-abierto-mucho-camino-por-delante.html" rel="alternate"></link><published>2017-09-24T15:30:00+02:00</published><updated>2017-09-24T15:30:00+02:00</updated><author><name>Juan Luis Cano</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/codigo-abierto-mucho-camino-por-delante.html</id><summary type="html"></summary><category term="keynote"></category></entry><entry><title>How to hug Pandas</title><link href="https://pyvideo.org/pycon-es-2017/how-to-hug-pandas.html" rel="alternate"></link><published>2017-09-24T14:30:00+02:00</published><updated>2017-09-24T14:30:00+02:00</updated><author><name>Eyad Tomeh</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/how-to-hug-pandas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Una breve introducción al tratamiento de datos con Pandas. Hablaremos de: Cómo cargar datos para su procesado, tipos de datos básicos (DataFrame, Series...), información estadística sobre los datos, indexación de los datos, consulta a los datos: Slicing y filtering, operaciones vectoriales, agrupación y agregación de datos.&lt;/p&gt;
</summary><category term="pandas"></category></entry><entry><title>Iniciación Open edX</title><link href="https://pyvideo.org/pycon-es-2017/iniciacion-open-edx.html" rel="alternate"></link><published>2017-09-24T14:30:00+02:00</published><updated>2017-09-24T14:30:00+02:00</updated><author><name>Alejandro León</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/iniciacion-open-edx.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla expondremos qué es Open edX, el potencial que tiene, se explicará su arquitectura - montada en Python / Django - y las posibilidades de extensión que presenta (XBlocks).&lt;/p&gt;
&lt;p&gt;Explicaremos como montar un Open edX desde cero, haciendo uso de una máquina Full Stack de la versión más reciente y mostraremos cuales son los parámetros de configuración básicos para la personalización de la plataforma. Explicaremos a su vez la posibilidad de crear e instalar un tema que personalice los estilos de la plataforma a nuestro gusto, y de qué forma se crean e incorporan XBlocks a una plataforma Open edX.&lt;/p&gt;
&lt;p&gt;Esta charla va destinada a personas con cualquier nivel de Python / Django.&lt;/p&gt;
</summary><category term="open edx"></category></entry><entry><title>Serverless with Python</title><link href="https://pyvideo.org/pycon-es-2017/serverless-with-python.html" rel="alternate"></link><published>2017-09-24T14:30:00+02:00</published><updated>2017-09-24T14:30:00+02:00</updated><author><name>Alejandro Guirao</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/serverless-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Serverless&lt;/em&gt; es una innovadora manera de desarrollar aplicaciones que consiste en funciones que son invocadas puntualmente. A partir de ahora, olvídate de administrar servidores. Tan sólo concéntrate en tu código. En esta charla explicaré cómo comenzar a desarrollar aplicaciones &lt;em&gt;serverless&lt;/em&gt; con Python en la plataforma más popular para ello (&lt;a class="reference external" href="https://aws.amazon.com/es/lambda/"&gt;AWS - Lambda&lt;/a&gt;) así como en una alternativa open source (&lt;a class="reference external" href="https://github.com/iron-io/functions"&gt;IronFunctions&lt;/a&gt;).&lt;/p&gt;
</summary><category term="serverless"></category></entry><entry><title>Developing in a black hole</title><link href="https://pyvideo.org/pycon-es-2017/developing-in-a-black-hole.html" rel="alternate"></link><published>2017-09-24T14:00:00+02:00</published><updated>2017-09-24T14:00:00+02:00</updated><author><name>Javier Aceituno Lapido</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/developing-in-a-black-hole.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La productividad depende del dominio que tengamos de las herramientas utilizadas&amp;quot;.&lt;/p&gt;
&lt;p&gt;¿Sientes que las herramientas de desarrollo que utilizas son pesadas?, ¿piensas que te hacen ser menos productivo?, ¿quieres tener la máxima productividad sin levantar las manos del teclado?. Si es así, esta charla es para tí.&lt;/p&gt;
&lt;p&gt;En esta charla mostraré cuales son las herramientas que utilizo día a día en el desarrollo de software, y como, integrando&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;el editor de texto, vim&lt;/li&gt;
&lt;li&gt;el multiplexador de terminal, tmux&lt;/li&gt;
&lt;li&gt;el cliente de HTTP, httpie&lt;/li&gt;
&lt;li&gt;el procesador de json, jq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conseguimos un entorno de desarrollo muy productivo, todo ello corriendo sobre un simple terminal&lt;/p&gt;
</summary></entry><entry><title>Flask vs Django</title><link href="https://pyvideo.org/pycon-es-2017/flask-vs-django.html" rel="alternate"></link><published>2017-09-24T14:00:00+02:00</published><updated>2017-09-24T14:00:00+02:00</updated><author><name>Dario Varotto</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/flask-vs-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Flask or Django? Which one is better? We know the answer: it depends!
In RavenPack, we use both frameworks in big projects and for that, we have been dealing with its strengths and weaknesses in a real-world environment.&lt;/p&gt;
</summary><category term="flask"></category><category term="django"></category></entry><entry><title>OpenCV el ojo de la serpiente que todo lo ve</title><link href="https://pyvideo.org/pycon-es-2017/opencv-el-ojo-de-la-serpiente-que-todo-lo-ve.html" rel="alternate"></link><published>2017-09-24T14:00:00+02:00</published><updated>2017-09-24T14:00:00+02:00</updated><author><name>Juan Francisco Huete Verdejo</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/opencv-el-ojo-de-la-serpiente-que-todo-lo-ve.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla vamos a ver las nociones básicas de OpenCV, conectaremos una webcam y veremos como en tiempo real se puede obtener información del entorno que nos rodea.
Se explicará un poco de código sencillo con resultados sorprendentes y se mostrarán algunos ejemplos mas elaborados.&lt;/p&gt;
</summary><category term="opencv"></category></entry><entry><title>Fullstack Single Page Applications con Django + Webpack + Vue.js</title><link href="https://pyvideo.org/pycon-es-2017/fullstack-single-page-applications-con-django-webpack-vuejs.html" rel="alternate"></link><published>2017-09-24T12:30:00+02:00</published><updated>2017-09-24T12:30:00+02:00</updated><author><name>Javier Abadía</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/fullstack-single-page-applications-con-django-webpack-vuejs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Veremos cómo montar una app fullstack usando Django y Vue.js con todos los ingredientes necesarios:
- cómo integrar webpack para empaquetar la parte de cliente (Javascript, CSS y otros recursos) a partir de los fuentes
- cómo configurar el entorno de desarrollo para disfrutar de la super productividad que aporta hot-module-reloading en el flujo de trabajo normal
- cómo crear REST endpoints en Django
- cómo gestionar la autenticación de usuarios y las sesiones con Django.&lt;/p&gt;
&lt;p&gt;La charla será una demo de cómo crear una app de este estilo de principio a fin.&lt;/p&gt;
</summary><category term="django"></category><category term="webpack"></category><category term="vue.js"></category></entry><entry><title>Pytest recomendaciones, paquetes básicos para testing en Python y Django</title><link href="https://pyvideo.org/pycon-es-2017/pytest-recomendaciones-paquetes-basicos-para-testing-en-python-y-django.html" rel="alternate"></link><published>2017-09-24T12:30:00+02:00</published><updated>2017-09-24T12:30:00+02:00</updated><author><name>Andreu Vallbona Plazas</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/pytest-recomendaciones-paquetes-basicos-para-testing-en-python-y-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Durante el desarrollo de software es vital el uso de test, bien sean unitarios, funcionales o de integración. Uno de los frameworks de testing disponibles de Python es pytest el cual es considerado prácticamente un estándar en la comunidad de Python debido a su sencillez y su extenso uso en la mayoría de proyectos de software de Python. Esta charla no trata sobre buenas prácticas de testing sino de la presentación y consejos de uso sobre una selección “curada” de plugins de pytest.&lt;/p&gt;
</summary><category term="pytest"></category></entry><entry><title>Exprimiendo el ORM de Django</title><link href="https://pyvideo.org/pycon-es-2017/exprimiendo-el-orm-de-django.html" rel="alternate"></link><published>2017-09-24T12:00:00+02:00</published><updated>2017-09-24T12:00:00+02:00</updated><author><name>Héctor Pablos López</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/exprimiendo-el-orm-de-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Muchas veces nos resulta mucho más fácil escribir una consulta a base de datos en SQL plano que lidiar con las limitaciones del ORM de Django, perdiendo así la gran potencia y limpieza que este nos ofrece.&lt;/p&gt;
&lt;p&gt;Los operadores Q() y F() son, muchas veces, algo que copiamos de la documentación sin entender completamente. Hacer joins simples puede no ser posible, y no hablemos de joins con claves foráneas de más de una columna.&lt;/p&gt;
&lt;p&gt;Acabamos abusando del método extra() y la clase RawSQL cuando, en realidad, pueden no ser necesarios.&lt;/p&gt;
&lt;p&gt;La experiencia nos ha enseñado a sacar el máximo partido de esta funcionalidad y exprimir al máximo sus posiblidades, limitando al máximo la escritura de código SQL plano. Explicaremos cómo, mediante la definición de algunos elementos básicos e intermedios para manipular querysets y la presentación de algunos trucos útiles.&lt;/p&gt;
&lt;p&gt;Puede que te ahorre un par de consultas a la documentación y que descubras alguna cosa nueva, o simplemente que vuelvas a apreciar el ORM de Django.&lt;/p&gt;
</summary><category term="django"></category><category term="orm"></category></entry><entry><title>pytest más allá de la documentación</title><link href="https://pyvideo.org/pycon-es-2017/pytest-mas-alla-de-la-documentacion.html" rel="alternate"></link><published>2017-09-24T12:00:00+02:00</published><updated>2017-09-24T12:00:00+02:00</updated><author><name>Víctor Muñoz Berti</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/pytest-mas-alla-de-la-documentacion.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pytest es un framework de testing a la vez sencillo e increíblemente avanzado. Si bien las técnicas básicas son accesibles y están bien documentadas, dentro de pytest existe toda una familia de herramientas que nos permiten realizar operaciones tan exóticas como útiles con nuestras suites de tests.&lt;/p&gt;
</summary><category term="pytest"></category></entry><entry><title>Aplicaciones Geográficas con Django</title><link href="https://pyvideo.org/pycon-es-2017/aplicaciones-geograficas-con-django.html" rel="alternate"></link><published>2017-09-24T11:30:00+02:00</published><updated>2017-09-24T11:30:00+02:00</updated><author><name>Alicia Pérez</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/aplicaciones-geograficas-con-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La 'ubicación' es una de las variables más importantes en cualquier problema, y es una de las más complicadas de manejar.&lt;/p&gt;
&lt;p&gt;Django - sin ser un servidor geográfico de primera clase - proporciona una buena plataforma para incorporar el &amp;quot;dónde&amp;quot; en nuestras aplicaciones.&lt;/p&gt;
&lt;p&gt;Presentaremos - de forma práctica - las capacidades geográficas de Django (acceso a BB.DD espaciales, consultas geográficas) y sus limitaciones, indicando herramientas complementarias (p.ej. Leaflet) o stacks alternativos.&lt;/p&gt;
</summary><category term="gis"></category><category term="django"></category></entry><entry><title>Beyond the 10%: analysis of the gender-diversity gap</title><link href="https://pyvideo.org/pycon-es-2017/beyond-the-10-analysis-of-the-gender-diversity-gap.html" rel="alternate"></link><published>2017-09-24T11:30:00+02:00</published><updated>2017-09-24T11:30:00+02:00</updated><author><name>Daniel Izquierdo</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/beyond-the-10-analysis-of-the-gender-diversity-gap.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Women represent half of the population. The technological industry claims that around 30% of their work force are women. And that percentage decreases down to 20% when focusing on the tech. teams.&lt;/p&gt;
&lt;p&gt;If we analyze open source communities, those hardly reach 10% of the population as this is the case of the OpenStack Foundation or the Linux Kernel.&lt;/p&gt;
&lt;p&gt;This talk will show previous analysis and data publicly available with this respect, and an analysis of the Python community to compare to&lt;/p&gt;
</summary></entry><entry><title>Haskell es mi pastor y Python, mi profeta</title><link href="https://pyvideo.org/pycon-es-2017/haskell-es-mi-pastor-y-python-mi-profeta.html" rel="alternate"></link><published>2017-09-24T11:30:00+02:00</published><updated>2017-09-24T11:30:00+02:00</updated><author><name>Braulio Vargas López</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/haskell-es-mi-pastor-y-python-mi-profeta.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla se explicará el paradigma de programación funcional. Para ello, se utilizará como ejemplo el lenguaje puramente funcional Haskell y se explicará cómo hacer programación funcional en Python. Por último, se comparará la eficiencia y la elegancia del paradigma de programación funcional frente al imperativo.&lt;/p&gt;
</summary><category term="haskell"></category><category term="functional programming"></category></entry><entry><title>Crea, empaqueta y distribuye tu propia aplicación</title><link href="https://pyvideo.org/pycon-es-2017/crea-empaqueta-y-distribuye-tu-propia-aplicacion.html" rel="alternate"></link><published>2017-09-24T10:30:00+02:00</published><updated>2017-09-24T10:30:00+02:00</updated><author><name>José Antonio Perdiguero</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/crea-empaqueta-y-distribuye-tu-propia-aplicacion.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;¡Distribuye tu aplicación! Una guía sobre cómo usar las herramientas para empaquetado y distribución de Python. Entre otros aspectos se cubrirá la generación de una estructura básica para aplicaciones, cómo crear un fichero setup.py básico y algunas construcciones más avanzadas, y por último cómo registrar y subir tu aplicación a PyPI.&lt;/p&gt;
</summary></entry><entry><title>Desplegando apliaciones Django en Swarm</title><link href="https://pyvideo.org/pycon-es-2017/desplegando-apliaciones-django-en-swarm.html" rel="alternate"></link><published>2017-09-24T10:30:00+02:00</published><updated>2017-09-24T10:30:00+02:00</updated><author><name>Yamila Moreno</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/desplegando-apliaciones-django-en-swarm.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El mundo de los orquestadores está en un momento de auge; cada vez en más sitios reclaman conocimientos de devops, para atender a los nuevos retos, de escala global, a los que se enfrentan nuestros servicios.&lt;/p&gt;
&lt;p&gt;Junto al conocimiento de todo el ecosistema de nuevas herramientas (Docker, Kubernetes, Swarm...), hace falta también revisitar la forma que damos a nuestras aplicaciones, para que puedan ser fácilmente desplegables. La filosofía de los microservicios, con sus luces y sombras, ayuda a que hagamos aplicaciones bien encapsuladas y que se pueden poner en producción de forma más ágil y limpia.&lt;/p&gt;
</summary></entry><entry><title>Why lazy developers write beautiful code</title><link href="https://pyvideo.org/pycon-es-2017/why-lazy-developers-write-beautiful-code.html" rel="alternate"></link><published>2017-09-24T10:30:00+02:00</published><updated>2017-09-24T10:30:00+02:00</updated><author><name>Javier Arias</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/why-lazy-developers-write-beautiful-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There has been a lot of discussion during the last 50 years about the nature of programming: Is it an art like poetry? Is it craftsmanship like pottery? Is it an exact science like physics? Or a non exact science like medicine? Is it engineering like bridge building?&lt;/p&gt;
&lt;p&gt;Whatever the nature of software development is: during this time, a lot of tools and techniques have appeared to make your lazy-developer life more difficult: Coding conventions, OOP, FP, SOLID, Design Patterns, Tests, TDD, UML, Use-cases, CASE tools, Refactoring, RUP, Agile, SCRUM, Continuous Integration, Code Complexity Metrics, Emergent Architecture, DevOps, SCM... and whatnot!
But, sometimes, being a lazy developer makes you do things that seemed counterintuitive, in order to pursue your main objective: WORK LESS.&lt;/p&gt;
</summary></entry><entry><title>Desplegando Python continuamente sin esfuerzo</title><link href="https://pyvideo.org/pycon-es-2017/desplegando-python-continuamente-sin-esfuerzo.html" rel="alternate"></link><published>2017-09-24T10:00:00+02:00</published><updated>2017-09-24T10:00:00+02:00</updated><author><name>Ana López Pérez</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/desplegando-python-continuamente-sin-esfuerzo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Los términos &amp;quot;despliegue continuo&amp;quot; e &amp;quot;integración continua&amp;quot; están cada vez más presentes en el léxico del programador. Si bien Python es un lenguaje tremendamente apropiado para aplicar estas prácticas, la cantidad de herramientas, opciones o, simplemente, de conceptos hace que el recién llegado alcance un nivel de confusión tal que la tarea parezca imposible. Usando herramientas habituales en Python mostraremos que construir un sistema de despliegue continuo es cómodo y sencillo.&lt;/p&gt;
</summary><category term="continuous integration"></category><category term="continuous delivery"></category></entry><entry><title>Open Sourceando en Orange</title><link href="https://pyvideo.org/pycon-es-2017/open-sourceando-en-orange.html" rel="alternate"></link><published>2017-09-24T10:00:00+02:00</published><updated>2017-09-24T10:00:00+02:00</updated><author><name>Ivan Robles</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/open-sourceando-en-orange.html</id><summary type="html"></summary></entry><entry><title>¡Python a los 17 y en 3 meses!</title><link href="https://pyvideo.org/pycon-es-2017/python-a-los-17-y-en-3-meses.html" rel="alternate"></link><published>2017-09-24T10:00:00+02:00</published><updated>2017-09-24T10:00:00+02:00</updated><author><name>Jara Ramos</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/python-a-los-17-y-en-3-meses.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;¿Para qué quiero yo saber Python en la adolescencia? ¿A qué retos me he enfrentado en esta aventura? ¿Con qué me quedo? Estas preguntas y otras resueltas por una chica de 17 años que se lanzó a aprender Pyhon para hacer su monografía.&lt;/p&gt;
</summary></entry><entry><title>Killo io el Google Español creado en Python</title><link href="https://pyvideo.org/pycon-es-2017/killo-io-el-google-espanol-creado-en-python.html" rel="alternate"></link><published>2017-09-24T09:30:00+02:00</published><updated>2017-09-24T09:30:00+02:00</updated><author><name>Jorge Coronado</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/killo-io-el-google-espanol-creado-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Killo.io es un motor de búsqueda que rankea los resultados de una búsqueda por el nivel de seguridad de la web. Realiza una función que ningún otro buscador ha desarrollado. Auditorias de seguridad de forma automatizada.&lt;/p&gt;
</summary></entry><entry><title>Sysadmin vs Django</title><link href="https://pyvideo.org/pycon-es-2017/sysadmin-vs-django.html" rel="alternate"></link><published>2017-09-24T09:30:00+02:00</published><updated>2017-09-24T09:30:00+02:00</updated><author><name>Juan Diego Godoy Robles</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/sysadmin-vs-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Basado en una historia real xP … se mostrará como es posible desarrollar una webapp con Python afrontando un deadline ajustado y sin experiencia previa en desarrollo frontend.&lt;/p&gt;
&lt;p&gt;Este proyecto se convirtió en una experiencia altamente gratificante aunque no exenta de escollos, solventados con mayor o menor fortuna. Precisamente estos tips prácticos serán los que protagonicen la charla con un objetivo claro, intentar facilitar el transito del novato al mundo Django.&lt;/p&gt;
&lt;p&gt;Alguno de los puntos que trataremos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;La elección del framework con Django como opción natural.&lt;/li&gt;
&lt;li&gt;¿Cómo me monto mi entorno de desarrollo? (docker-compose)&lt;/li&gt;
&lt;li&gt;¿Qué motor de BBDD elijo?&lt;/li&gt;
&lt;li&gt;Estructuración del proyecto&lt;/li&gt;
&lt;li&gt;settings.py y .env&lt;/li&gt;
&lt;li&gt;Esquema de urls&lt;/li&gt;
&lt;li&gt;Autenticación / Registro&lt;/li&gt;
&lt;li&gt;Modelos y Vistas ... tal para cual&lt;/li&gt;
&lt;li&gt;Django Rest Framework o el Santo Grial de nuestro Backend&lt;/li&gt;
&lt;li&gt;Cómo diseñar nuestro Frontend, el mundo de los templates&lt;/li&gt;
&lt;li&gt;Gestión de permisos .. cada oveja con su pareja&lt;/li&gt;
&lt;li&gt;JS, Bootstrap , ¿eso que es lo es?&lt;/li&gt;
&lt;li&gt;Ya tengo mi web ¿ahora qué? Estrategias de despliegue&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nos iremos con una app en el portátil y con suerte quedareis tan enganchados como yo al universo Django.&lt;/p&gt;
</summary><category term="django"></category></entry><entry><title>Apertura Domingo - PyConES 2017</title><link href="https://pyvideo.org/pycon-es-2017/apertura-domingo-pycones-2017.html" rel="alternate"></link><published>2017-09-24T09:15:00+02:00</published><updated>2017-09-24T09:15:00+02:00</updated><author><name>Mario Corchero</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/apertura-domingo-pycones-2017.html</id><summary type="html"></summary></entry><entry><title>Charlas rápidas</title><link href="https://pyvideo.org/pycon-es-2017/charlas-rapidas.html" rel="alternate"></link><published>2017-09-23T18:00:00+02:00</published><updated>2017-09-23T18:00:00+02:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/charlas-rapidas.html</id><summary type="html"></summary><category term="lightning talks"></category></entry><entry><title>Ampliando la documentación de APIs con drf-swagger-customization</title><link href="https://pyvideo.org/pycon-es-2017/ampliando-la-documentacion-de-apis-con-drf-swagger-customization.html" rel="alternate"></link><published>2017-09-23T17:30:00+02:00</published><updated>2017-09-23T17:30:00+02:00</updated><author><name>Andrés Rojano Ruiz</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/ampliando-la-documentacion-de-apis-con-drf-swagger-customization.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presentación del paquete drf-swagger-customization, una extensión de django-swagger que nos permitirá añadir documentación adicional a la generada de forma automática por el django-swagger.&lt;/p&gt;
&lt;p&gt;Además, se hablará de la necesidad que llevó a su desarrollo y como se planteó la solución. Se mencionarán frameworks de desarrollo de APIs como djangorest-framework y swagger.&lt;/p&gt;
</summary><category term="drf-swagger-customization"></category></entry><entry><title>Discovering python search engine</title><link href="https://pyvideo.org/pycon-es-2017/discovering-python-search-engine.html" rel="alternate"></link><published>2017-09-23T17:30:00+02:00</published><updated>2017-09-23T17:30:00+02:00</updated><author><name>Jose Manuel Ortega</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/discovering-python-search-engine.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducción a los principales motores de búsqueda que podemos encontrar en python comentando las principales características de cada uno de ellos. Se comentarán los principales motores de búsqueda que podemos integrar en nuestras aplicaciones como elasticsearch,Whoosh y PostGres Full text para aplicaciones web con django.&lt;/p&gt;
</summary></entry><entry><title>Herramienta para lograr ser un experto en Python</title><link href="https://pyvideo.org/pycon-es-2017/herramienta-para-lograr-ser-un-experto-en-python.html" rel="alternate"></link><published>2017-09-23T17:30:00+02:00</published><updated>2017-09-23T17:30:00+02:00</updated><author><name>José Javier Merchante</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/herramienta-para-lograr-ser-un-experto-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Los lenguajes de programación tienden a seguir unos convenios, o unas guías de estilo, que en el caso de Python es PEP8 y se han diseñado herramientas para comprobarlo y evaluarlo (Pylint, pep8, ...)&lt;/p&gt;
&lt;p&gt;Por otro lado, cada lenguaje de programación tiene unos determinados &amp;quot;idioms&amp;quot;, es decir, unas determinadas palabras reservadas y expresiones que son propias de cada lenguaje.&lt;/p&gt;
&lt;p&gt;Aprender en profundidad un lenguaje de programación, y dichos &amp;quot;idioms&amp;quot;, puede llevar meses o incluso años. Dicho aprendizaje se adquiere con la práctica, colaborando con expertos en el ámbito y documentándose a partir de libros y otros recursos.&lt;/p&gt;
&lt;p&gt;Existen muchos programadores, que aun teniendo experiencia, utilizan Python como si estuvieran programando en otro lenguaje, es decir, sin la utilización de los &amp;quot;idioms&amp;quot; que se hacen necesarios.&lt;/p&gt;
&lt;p&gt;Por todo ello, hemos creado una herramienta que analiza los proyectos de los usuarios, detecta la utilización de determinados &amp;quot;idioms&amp;quot;, y de este modo, muestra el nivel de Pythonista y proporciona recursos que ayudan a perfeccionar los conocimientos en Python.&lt;/p&gt;
</summary></entry><entry><title>Cómo diseñar un programa CLI fácil de lanzar, con un Click</title><link href="https://pyvideo.org/pycon-es-2017/como-disenar-un-programa-cli-facil-de-lanzar-con-un-click.html" rel="alternate"></link><published>2017-09-23T17:00:00+02:00</published><updated>2017-09-23T17:00:00+02:00</updated><author><name>Santiago Saavedra</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/como-disenar-un-programa-cli-facil-de-lanzar-con-un-click.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Estás construyendo un script o un pequeño frontend para probar tu biblioteca. ¿Como probar sus distintas opciones?&lt;/p&gt;
&lt;p&gt;Podrías usar argparse, pero cada vez los CLI tienen más parámetros que dependen del modo o del subcomando, así que necesitas algo modular. Esta charla presentará Click, una biblioteca diseñada para hacer sencillo exponer programas CLI, que incluso te permite interoperar argumentos con variables de entorno. Ejecuta tus scripts tanto en local como en un cluster sin ningún esfuerzo.&lt;/p&gt;
</summary><category term="click"></category></entry><entry><title>Metaclases: exactamente qué y (sobre todo) por qué</title><link href="https://pyvideo.org/pycon-es-2017/metaclases-exactamente-que-y-sobre-todo-por-que.html" rel="alternate"></link><published>2017-09-23T17:00:00+02:00</published><updated>2017-09-23T17:00:00+02:00</updated><author><name>Pablo Galindo Salgado</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/metaclases-exactamente-que-y-sobre-todo-por-que.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El objetivo de estar charla es abordar un problema que parece ser desafortunadamente común entre el material disponible sobre las metaclases: por más que nos lo expliquen nos sigue sin quedar claro qué son las metaclases… o lo olvidamos a los diez minutos. Los ejemplos que se usan para ilustrar esa cosa tan arcana son casi inevitablemente crípticos, solucionando de forma compleja problemas demasiado rebuscados y que no nos hemos encontrado jamás en nuestro día a día. ¿Tienen realmente alguna utilidad práctica, o son sólo una excusa usada por ponentes para parecer r/iamverysmart? ¿Por qué deberían importarme a mí, con mi nivel medio de Python?&lt;/p&gt;
&lt;p&gt;Lo que vamos a hacer en esta charla es empezar describiendo un problema: queremos implementar el mismo comportamiento (por ejemplo, logging) en todos los métodos de mi clase. Para ello tenemos varias opciones, en creciente orden de complejidad: (a) copiar y pegar la misma línea de código en todos los métodos, (b) usar un decorador en cada método y (c) usar un decorador de clase. Pero ninguna solución es ideal, y la falta de elegancia provoca lamentos y lágrimas. Es ante un problema así cuando las metaclases tienen una función, y agradeceremos que se encuentren en nuestro repertorio de habilidades de Python.&lt;/p&gt;
&lt;p&gt;Entendiendo por qué nos hacen falta, procedereremos a explicar cómo crear una: primero repasando brevemente la función de __new__() e __init__() para clases normales, y a continuación mostrando cómo hacer lo mismo con las metaclases. Ilustraremos esto con varios ejemplos, usando metaclases para añadir funcionalidad de auto-logging o compilación just-in-time, como hace Numba, a nuestro código. Por último, y a modo de curiosidad, continuaremos hacia mayores niveles de abstracción, aprendiendo qué son los hooks de metaclases y para qué son útiles los ficheros .pth.&lt;/p&gt;
</summary><category term="metaclass"></category></entry><entry><title>Tu web está lista, ¿lo sabe Google?</title><link href="https://pyvideo.org/pycon-es-2017/tu-web-esta-lista-lo-sabe-google.html" rel="alternate"></link><published>2017-09-23T17:00:00+02:00</published><updated>2017-09-23T17:00:00+02:00</updated><author><name>Beatriz González</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/tu-web-esta-lista-lo-sabe-google.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Llevas meses peleándote con el código, luchando con bugs… Y por fin terminas el proyecto y lo haces público. Pero no entra nadie...&lt;/p&gt;
&lt;p&gt;¿Se te olvida algo? ¿Estás seguro de que has hecho todo lo posible en cada fase del desarrollo para que la web se posicione en Google? ¿Has elegido las URLs correctas o los títulos adecuados? ¿Te acordaste de bloquear la indexación de los entornos de prueba?&lt;/p&gt;
</summary><category term="seo"></category><category term="django"></category></entry><entry><title>Corrigiendo 1000 exámenes con un pelín de OpenCV</title><link href="https://pyvideo.org/pycon-es-2017/corrigiendo-1000-examenes-con-un-pelin-de-opencv.html" rel="alternate"></link><published>2017-09-23T16:30:00+02:00</published><updated>2017-09-23T16:30:00+02:00</updated><author><name>Siro Moreno</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/corrigiendo-1000-examenes-con-un-pelin-de-opencv.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El objetivo de la charla es hacer una pequeña demostración del uso de algunas de las bibliotecas más icónicas, hiladas a través del objetivo final de analizar fácilmente un examen tipo test.&lt;/p&gt;
&lt;p&gt;Numpy y Matplotlib son dos de las bibliotecas más importantes en el Python científico, usadas para trabajar con arrays y representaciones gráficas respectivamente.&lt;/p&gt;
&lt;p&gt;Como una imagen en escala de grises en el fondo no es más que una matriz, usaremos unas pocas manipulaciones básicas con imágenes para mostrar cómo trabajar con funciones de Numpy, hacer slicings, etc.&lt;/p&gt;
&lt;p&gt;La interfaz de Matplotlib más sencilla, Pyplot, es muy útil para realizar muchos gráficos sin hacer un gran esfuerzo. Podemos mostrar un ejemplo sencillo de estas capacidades representando los contornos que detectemos sobre la imagen original.&lt;/p&gt;
&lt;p&gt;También se presentarán algunas de las funciones más básicas de OpenCV, uno de los paquetes de software más importantes de visión artificial. Usaremos las funciones de desenfoque, umbral y detección de contornos.&lt;/p&gt;
&lt;p&gt;Si el tiempo fuera suficiente, echaremos también un vistazo a la librería openpyxl, que nos permitirá importar y exportar datos de tablas de Excel.&lt;/p&gt;
&lt;p&gt;Puede ser importante resaltar explícitamente que debido a las limitaciones de tiempo, las librerías no pueden ser mostradas en profundidad, y que probablemente no habrá nada o casi nada de live coding. Sin embargo, todo el código usado, incluso para las imágenes intermedias, será publicado en forma de Notebook de Jupyter a través de Github.&lt;/p&gt;
</summary><category term="opencv"></category></entry><entry><title>Introducción a GraphQL</title><link href="https://pyvideo.org/pycon-es-2017/introduccion-a-graphql.html" rel="alternate"></link><published>2017-09-23T16:30:00+02:00</published><updated>2017-09-23T16:30:00+02:00</updated><author><name>Adrián Matellanes</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/introduccion-a-graphql.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En la actualidad, la mayoría de las APIs que usamos a diario son REST o SOAP. La necesidad de ofrecer productos más complejos que simples aplicaciones CRUD donde creamos, borramos, listamos y modificamos recursos ha empujado a cambiar la forma en la que interactuamos con las APIs. En 2012, Facebook desarrolló GraphQL y lo lanzó al público en 2015 como proyecto open source. GraphQL nace para solucionar la mayoría de los problemas que nos encontramos cuando interactuamos con una API REST.&lt;/p&gt;
</summary><category term="graphql"></category></entry><entry><title>¡Atrapa ese asteroide con poliastro!</title><link href="https://pyvideo.org/pycon-es-2017/atrapa-ese-asteroide-con-poliastro.html" rel="alternate"></link><published>2017-09-23T15:30:00+02:00</published><updated>2017-09-23T15:30:00+02:00</updated><author><name>Antonio Hidalgo</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/atrapa-ese-asteroide-con-poliastro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;poliastro es una biblioteca de código abierto escrita en Python puro utilizada para hacer cálculos orbitales. Este año participó en el Summer of Code de la Agencia Espacial Europea (SOCIS), un programa parecido al de Google que otorga becas a estudiantes para desarrollar código abierto en verano. En esta charla hablaremos de la API que se ha desarrollado durante el verano para descargar datos de asteroides, cometas y otros objetos ¡incluyendo alguna demo!&lt;/p&gt;
</summary><category term="poliastro"></category></entry><entry><title>Sistemas Expertos en Python con PyKnow</title><link href="https://pyvideo.org/pycon-es-2017/sistemas-expertos-en-python-con-pyknow.html" rel="alternate"></link><published>2017-09-23T15:30:00+02:00</published><updated>2017-09-23T15:30:00+02:00</updated><author><name>Roberto Abdelkader Martínez Pérez</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/sistemas-expertos-en-python-con-pyknow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presentación de PyKnow, una librería para Python con la que es posible escribir nuestros propios sistemas expertos con Python de forma nativa.&lt;/p&gt;
&lt;p&gt;Iniciaremos la sesión con una introducción a las bases de la inteligencia artificial, en concreto en el área de los sistemas expertos con un breve repaso histórico, terminando con el estado actual general y particularmente en el ecosistema de Python.&lt;/p&gt;
&lt;p&gt;En esta sesión presentaré varios ejemplos para ilustrar en que tipo de problemas tiene sentido utilizar un sistema experto y en cuáles no.&lt;/p&gt;
&lt;p&gt;Veremos código real que se utiliza en producción donde PyKnow permite a los usuarios de la aplicación alterar el comportamiento de la misma sin tocar una sola línea de código.&lt;/p&gt;
&lt;p&gt;Para finalizar repasaremos el roadmap para próximas versiones y tendremos una ronda de preguntas y respuestas.&lt;/p&gt;
</summary><category term="pyknow"></category></entry><entry><title>Ansible</title><link href="https://pyvideo.org/pycon-es-2017/ansible.html" rel="alternate"></link><published>2017-09-23T15:00:00+02:00</published><updated>2017-09-23T15:00:00+02:00</updated><author><name>Roberto Majadas</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/ansible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ansible es un sistema de gestión de la configuración del software desarrollado en python que permite automatizar la configuración e instalación de software en ordenadores. Con este sistema es posible, a traves de ssh, instalar, configurar, cambiar ficheros, reiniciar servicios. Y al estar desarrollado en python permite a los programadores extenderlo y embeberlo con relativa facilidad.&lt;/p&gt;
</summary><category term="ansible"></category></entry><entry><title>Come learn about the Python Software Foundation!</title><link href="https://pyvideo.org/pycon-es-2017/come-learn-about-the-python-software-foundation.html" rel="alternate"></link><published>2017-09-23T15:00:00+02:00</published><updated>2017-09-23T15:00:00+02:00</updated><author><name>Naomi Ceder</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/come-learn-about-the-python-software-foundation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The PSF plays a key role in fostering the Python community around the world. Come find out what the PSF does (and doesn't do), how it works, how the PSF can support your community, and how you can be part of the PSF. We'll describe the membership model and how everyone can be a member, and many people can be voting members. We will also talk about the PSF Grants program, and answer any questions you might have. Everyone is welcome, both non-members and members! PSF stickers will also be available&lt;/p&gt;
</summary><category term="python software foundation"></category></entry><entry><title>Deep Learning models in Python without gibberish</title><link href="https://pyvideo.org/pycon-es-2017/deep-learning-models-in-python-without-gibberish.html" rel="alternate"></link><published>2017-09-23T13:00:00+02:00</published><updated>2017-09-23T13:00:00+02:00</updated><author><name>Maite Giménez</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/deep-learning-models-in-python-without-gibberish.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Las dos tecnologías más disruptivas actualmente en AI son el Deep Learning y el Reinforcement Learning. ¿Podemos hacernos ricos aplicando estas tecnologías al mundo de las finanzas? En esta charla daremos algunas claves sobre cómo usar Tensorflow para crear redes neuronales que aprenden a invertir en los mercados, y una introducción al Deep Q Learning, un algoritmo de aprendizaje con refuerzo que aprende el “juego” de la Bolsa como cualquier otro robot sometido a ciclos de acción + recompensa.&lt;/p&gt;
</summary><category term="tensorflow"></category></entry><entry><title>Patrones de diseño. Python boloñesa</title><link href="https://pyvideo.org/pycon-es-2017/patrones-de-diseno-python-bolonesa.html" rel="alternate"></link><published>2017-09-23T13:00:00+02:00</published><updated>2017-09-23T13:00:00+02:00</updated><author><name>Álvaro León</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/patrones-de-diseno-python-bolonesa.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cómo pasar de escribir código espaghetti a código claro, explícito reutilizable y mantenible, echando un vistazo a algunos patrones de diseño para sacar buen partido de las características más pythónicas del lenguaje.&lt;/p&gt;
</summary><category term="design patterns"></category></entry><entry><title>Utilizando BreakOut Detection para detección de anomalías en serie</title><link href="https://pyvideo.org/pycon-es-2017/utilizando-breakout-detection-para-deteccion-de-anomalias-en-serie.html" rel="alternate"></link><published>2017-09-23T13:00:00+02:00</published><updated>2017-09-23T13:00:00+02:00</updated><author><name>Valery Calderón Briz</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/utilizando-breakout-detection-para-deteccion-de-anomalias-en-serie.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La librería &amp;quot;BreakOut Detection&amp;quot; está desarrollada en R por lo que aprendemos a llamarla desde python y a utilizar correctamente los parámetros que condicionan el algoritmo y nos ayudan a tener una correcta detección de anomalías dependiendo del caso que se presente.&lt;/p&gt;
&lt;p&gt;El BreakOut Detection es muy útil para obtener una detección de anomalías en una serie de datos respecto al tiempo, está fue desarrollada por el equipo de Twitter y funciona correctamente sin necesidad de una gran complejidad o muchos recursos.&lt;/p&gt;
</summary><category term="R"></category><category term="breakout detection"></category></entry><entry><title>¿DÃ³nde estÃ¡ mi Ã±?</title><link href="https://pyvideo.org/pycon-es-2017/da3nde-esta-mi-a-.html" rel="alternate"></link><published>2017-09-23T12:30:00+02:00</published><updated>2017-09-23T12:30:00+02:00</updated><author><name>Miguel González Álvarez</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/da3nde-esta-mi-a-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Se hará un repaso histórico sobre como se ha ido afrontando el problema de la representación de caracteres por de medios electrónicos a lo largo de la historia desde el telégrafo hasta el estándar actual.&lt;/p&gt;
&lt;p&gt;Seguidamente describiremos como se manejaba en Python 2 y qué cambios se produjeron con la llegada de Python 3.&lt;/p&gt;
</summary><category term="unicode"></category></entry><entry><title>Modelo de Redes Neuronales Recurrentes para el Análisis y Predicción de Series Temporales -PyConES17</title><link href="https://pyvideo.org/pycon-es-2017/modelo-de-redes-neuronales-recurrentes-para-el-analisis-y-prediccion-de-series-temporales-pycones17.html" rel="alternate"></link><published>2017-09-23T12:30:00+02:00</published><updated>2017-09-23T12:30:00+02:00</updated><author><name>J.C. González-Avella</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/modelo-de-redes-neuronales-recurrentes-para-el-analisis-y-prediccion-de-series-temporales-pycones17.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En está propuesta se introduce el uso de Redes Neuronales de tipo LSTM como nuevo enfoque para tratar el problema del análisis y predicción de series temporales. Como casos de estudio aplicamos esta metodología al estudio del consumo eléctrico en la población de Sóller (Mallorca) y en el estudio del consumo eléctrico en la isla de Tenerife. El objetivo es mostrar cómo, con este enfoque se puede predecir el consumo eléctrico de las poblaciones con un grado de precisión que ronda el 93%.&lt;/p&gt;
</summary></entry><entry><title>NASAL Geom Salvando vidas con Python</title><link href="https://pyvideo.org/pycon-es-2017/nasal-geom-salvando-vidas-con-python.html" rel="alternate"></link><published>2017-09-23T12:30:00+02:00</published><updated>2017-09-23T12:30:00+02:00</updated><author><name>Jose Luis Cercos Pita</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/nasal-geom-salvando-vidas-con-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NASAL-Geom es un reconstructor de geometrías 3D de cavidades nasales llamado a ayudar a reducir la nada despreciable tasa de fracaso del 25% al 30% que se da en cirugías en el contexto de la rinología. Durante la charla veremos como funciona este software de procesado de imágenes tomográficas.&lt;/p&gt;
</summary></entry><entry><title>Factories, what the hell?</title><link href="https://pyvideo.org/pycon-es-2017/factories-what-the-hell.html" rel="alternate"></link><published>2017-09-23T12:00:00+02:00</published><updated>2017-09-23T12:00:00+02:00</updated><author><name>Miguel Jiménez</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/factories-what-the-hell.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;¿Cuantas veces has tenido la base de datos de tu proyecto vacía y has necesitado poblarla para desarrollar?... 1... 2... 3... 4..... Seguro que miles de veces y esto es un problema porque necesitas poder poblar tu bd para así empezar a desarrollar cuanto antes. El objetivo de la charla será mostrar como poblar de forma genérica rápidamente nuestra base de datos para así conseguir replicar esto en todas las máquinas que necesitemos en menos de 1 minuto.&lt;/p&gt;
</summary></entry><entry><title>Machine Learning in production</title><link href="https://pyvideo.org/pycon-es-2017/machine-learning-in-production.html" rel="alternate"></link><published>2017-09-23T12:00:00+02:00</published><updated>2017-09-23T12:00:00+02:00</updated><author><name>Luis Mesas</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/machine-learning-in-production.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Una vez tenemos el modelo diseñado por los data scientists hay que ponerlo en pro, pero ninguna de las herramientas que han usado son viables en producción y tienen problemas de escalabilidad ¿Que hacemos ahora?. En esta charla veremos arquitecturas aplicadas a 2 casos de uso típicos: arquitectura de ejecución única reutilizable y arquitectura de uso contínuo con bucle de feedback.&lt;/p&gt;
</summary><category term="machine learning"></category></entry><entry><title>Mi coche ya es mayor de edad, creo que puede conducir solito</title><link href="https://pyvideo.org/pycon-es-2017/mi-coche-ya-es-mayor-de-edad-creo-que-puede-conducir-solito.html" rel="alternate"></link><published>2017-09-23T12:00:00+02:00</published><updated>2017-09-23T12:00:00+02:00</updated><author><name>Ricardo Guerrero Gómez-Olmedo</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/mi-coche-ya-es-mayor-de-edad-creo-que-puede-conducir-solito.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El contenido de esta charla se enfocará en todos los pasos necesarios para hacer que un coche sea capaz de aprender nuestro estilo de conducción en un simulador.&lt;/p&gt;
&lt;p&gt;El esquema aproximado de la charla es el siguiente (aunque puede haber ligeros cambios):&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Haremos una introducción a las 2 tendencias existentes en los coches autónomos: la perspectiva de la robótica y la perspectiva de la IA.&lt;/li&gt;
&lt;li&gt;Tras esa introducción entraremos de lleno en el problema viendo como es el simulador que vamos a utilizar, los datos que genera y como es la problemática que queremos afrontar.&lt;/li&gt;
&lt;li&gt;Pasaremos a describir como usaremos Pandas y Matplotlib para hacer una exploración de los datos generados.&lt;/li&gt;
&lt;li&gt;Dado que los datos generados no van a ser suficientes ni vamos a tenerlos distribuidos como queremos, aplicaremos técnicas de aumento de datos con Numpy y OpenCV para solucionar esto.&lt;/li&gt;
&lt;li&gt;Una vez que ya tenemos todo a punto, es el momento de pasar a Keras (con el Backend de Tensorflow) para crear nuestro modelo de Deep Learning.&lt;/li&gt;
&lt;li&gt;¿Como testeamos el resultado? Veremos que a veces las métricas no lo son todo y es el momento de probar otras cosas.&lt;/li&gt;
&lt;li&gt;Por último aprenderemos la importancia de la calidad de los datos y se expondrán algunas de las problemáticas que pueden surgir a lo largo del proyecto.&lt;/li&gt;
&lt;/ol&gt;
</summary></entry><entry><title>Cómo complicar innecesariamente tu vida programando una shell asíncrona en Python</title><link href="https://pyvideo.org/pycon-es-2017/como-complicar-innecesariamente-tu-vida-programando-una-shell-asincrona-en-python.html" rel="alternate"></link><published>2017-09-23T11:00:00+02:00</published><updated>2017-09-23T11:00:00+02:00</updated><author><name>Javier Torres Niño</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/como-complicar-innecesariamente-tu-vida-programando-una-shell-asincrona-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;¿Harto de escribir siempre los mismos comandos en tu shell? ¿No estaría bien que los comandos fueran asíncronos? ¿Te gusta complicarte la vida innecesariamente?&lt;/p&gt;
&lt;p&gt;Si la respuesta a estas preguntas es sí, escribir tu propia shell puede ser la solución a tus &amp;quot;problemas&amp;quot;.&lt;/p&gt;
&lt;p&gt;En esta charla hablaremos de cómo se puede utilizar Python, junto con prompt_toolkit, asyncio y ply para
escribir tu propio intérprete de comandos avanzado, con interfaz gráfica en modo texto y ejecución asíncrona de tareas.&lt;/p&gt;
</summary></entry><entry><title>Logueando como un pro, porque llenar un script con prints sigue siendo cutre</title><link href="https://pyvideo.org/pycon-es-2017/logueando-como-un-pro-porque-llenar-un-script-con-prints-sigue-siendo-cutre.html" rel="alternate"></link><published>2017-09-23T11:00:00+02:00</published><updated>2017-09-23T11:00:00+02:00</updated><author><name>J.Romero</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/logueando-como-un-pro-porque-llenar-un-script-con-prints-sigue-siendo-cutre.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A menudo necesitamos un cierto nivel de comunicación desde nuestros scripts y el candidato preferido por todos es &lt;cite&gt;print()&lt;/cite&gt; para sacar mensajes en el intérprete... ¡hasta que conozcas &lt;cite&gt;logging&lt;/cite&gt;!&lt;/p&gt;
&lt;p&gt;Vamos a conocer el módulo &lt;cite&gt;logging&lt;/cite&gt; de la biblioteca estándar: ¿Para qué es útil? ¿Cuáles son sus componentes principales? ¿Cómo puedo aprovecharlo? Y veremos muchos ejemplos: entre ellos, entenderemos por fin el &lt;cite&gt;LOGGING&lt;/cite&gt; de los ajustes de Django.&lt;/p&gt;
</summary><category term="logging"></category></entry><entry><title>Machine Learning for developers</title><link href="https://pyvideo.org/pycon-es-2017/machine-learning-for-developers.html" rel="alternate"></link><published>2017-09-23T11:00:00+02:00</published><updated>2017-09-23T11:00:00+02:00</updated><author><name>Rodrigo Cabello</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/machine-learning-for-developers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Siempre has escuchado el termino Machine learning y pones caras raras? En esta sesión explicaremos de una manera muy sencilla los principales conceptos. También veremos cómo Azure Machine Learning Studio nos ayudará a crear nuestros experimentos de una manera fácil y sencilla. Además veremos cómo Python nos puede echar una mano a la hora de ejecutar algunos scripts que puedan ser necesarios para pre-procesar nuestros datos.&lt;/p&gt;
&lt;p&gt;Introducción a Machine Learning ¿Qué es?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Principales conceptos:&lt;/li&gt;
&lt;li&gt;Aprendizaje supervisado y no supervisado&lt;/li&gt;
&lt;li&gt;Aprendizaje supervisado&lt;/li&gt;
&lt;li&gt;Clasificación&lt;/li&gt;
&lt;li&gt;Regresión&lt;/li&gt;
&lt;li&gt;Detección de anomalías.&lt;/li&gt;
&lt;li&gt;Algoritmos de aprendizaje automático&lt;/li&gt;
&lt;li&gt;Tipos de algoritmos&lt;/li&gt;
&lt;li&gt;¿Cómo puedo elegir el algoritmo adecuado?&lt;/li&gt;
&lt;li&gt;Python tools visual studio (¡Soporte para Python en VS!)&lt;/li&gt;
&lt;li&gt;Probar nuestros scripts de python&lt;/li&gt;
&lt;li&gt;Azure Machine Learning Studio&lt;/li&gt;
&lt;li&gt;Obtener los datos&lt;/li&gt;
&lt;li&gt;Preprocesar los datos&lt;/li&gt;
&lt;li&gt;Definir las características&lt;/li&gt;
&lt;li&gt;Elegir y aplicar un algoritmos de aprendizaje&lt;/li&gt;
&lt;li&gt;Probar nuestro experimento y publicarlo&lt;/li&gt;
&lt;li&gt;Ejemplos adicionales de experimentos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por último, veremos una aplicación desarrollada en Flask que realizará el proceso de cuantización de imágenes haciendo uso de los Web services creados con Azure Machine Learning.&lt;/p&gt;
</summary><category term="machine learning"></category></entry><entry><title>City attractiveness seen through Twitter</title><link href="https://pyvideo.org/pycon-es-2017/city-attractiveness-seen-through-twitter.html" rel="alternate"></link><published>2017-09-23T10:30:00+02:00</published><updated>2017-09-23T10:30:00+02:00</updated><author><name>Antònia Tugores</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/city-attractiveness-seen-through-twitter.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How long would information originating from a given city require to reach any other city if were to pass from person to person only through face to face conversations? Or, what is the likelihood that information reaches a certain distance away after a given time period. We introduce a method to assess the attractiveness of cities using geolocated tweets as a proxy for human mobility.&lt;/p&gt;
</summary></entry><entry><title>High impact refactors while keeping the lights on</title><link href="https://pyvideo.org/pycon-es-2017/high-impact-refactors-while-keeping-the-lights-on.html" rel="alternate"></link><published>2017-09-23T10:30:00+02:00</published><updated>2017-09-23T10:30:00+02:00</updated><author><name>Diego Muñoz</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/high-impact-refactors-while-keeping-the-lights-on.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Reemplazar, cambiar o incluso evolucionar una plataforma de software con años de desarrollo ya aplicados nunca es tarea fácil. A su vez, el software tiende a crecer y cambiar como si de un ser vivo se tratara, haciendo cada desarrollo un poco más complejo que el anterior, forzando a llevar documentaciones, wikis, seguir procesos, y ralentizando nuevos proyectos.&lt;/p&gt;
&lt;p&gt;En esta charla hablaremos de cómo en Ticketea, que lleva 7 años funcionando con éxito, estamos acometiendo importantes cambios internos, tanto reescrituras de componentes existentes como nuevas piezas intentando modificar lo menos posible los flujos de negocio actuales, aplicando patrones de diseño como parallel change, event bus, o event sourcing. Pondremos como ejemplo el desarrollo de nuestra nueva API de compras (usando Python 3), la cual escucha determinados sucesos o eventos que suceden en la plataforma principal (construida con PHP y Python 2), gestiona todo el flujo de compra y emite de vuelta los datos para reincorporarlos a dicha plataforma, permitiendo pensar un sistema diferente, tiene las mismas restricciones.&lt;/p&gt;
&lt;p&gt;También estamos intentando implantar como objetivos o metas para todo proyecto las siguientes ideas y principios:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Hacer software simple&lt;/li&gt;
&lt;li&gt;Iterar, iterar, iterar&lt;/li&gt;
&lt;li&gt;Paridad Desarrollo-Producción&lt;/li&gt;
&lt;li&gt;Automatización de operaciones (Docker y AWS)&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="refactoring"></category></entry><entry><title>Usando Python y SocketIO para aplicaciones en tiempo real</title><link href="https://pyvideo.org/pycon-es-2017/usando-python-y-socketio-para-aplicaciones-en-tiempo-real.html" rel="alternate"></link><published>2017-09-23T10:30:00+02:00</published><updated>2017-09-23T10:30:00+02:00</updated><author><name>Oscar Ramírez</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/usando-python-y-socketio-para-aplicaciones-en-tiempo-real.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La presentación se basa en explicar de forma sencilla y muy visual una aplicación basada en eventos e interacciones en tiempo real creada para la ocasión.&lt;/p&gt;
&lt;p&gt;Estructura de la presentación:     Vista preliminar de la aplicación en tiempo real y explicación de las partes principales.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introducción a Socket.IO explicando los aspecto más importantes.&lt;/li&gt;
&lt;li&gt;Explicar las partes de la aplicación que usan Socket.IO tanto en el lado del cliente como en el del servidor.&lt;/li&gt;
&lt;li&gt;Explicación de como testear y desplegar este tipo de soluciones en entornos de producción.&lt;/li&gt;
&lt;li&gt;Ejemplo en vivo de carga de usuarios para valorar el rendimiento de estas soluciones.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Come for the language, stay for the community</title><link href="https://pyvideo.org/pycon-es-2017/come-for-the-language-stay-for-the-community.html" rel="alternate"></link><published>2017-09-23T09:30:00+02:00</published><updated>2017-09-23T09:30:00+02:00</updated><author><name>Naomi Ceder</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/come-for-the-language-stay-for-the-community.html</id><summary type="html"></summary><category term="keynote"></category></entry><entry><title>Apertura Sabado - PyConES 2017</title><link href="https://pyvideo.org/pycon-es-2017/apertura-sabado-pycones-2017.html" rel="alternate"></link><published>2017-09-23T09:00:00+02:00</published><updated>2017-09-23T09:00:00+02:00</updated><author><name>Mario Corchero</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/apertura-sabado-pycones-2017.html</id><summary type="html"></summary><category term="opening"></category></entry><entry><title>Codelab: ¿Podemos predecir quién muere en Juego de Tronos con TensorFlow?</title><link href="https://pyvideo.org/pycon-es-2017/codelab-podemos-predecir-quien-muere-en-juego-de-tronos-con-tensorflow.html" rel="alternate"></link><published>2017-09-22T18:00:00+02:00</published><updated>2017-09-22T18:00:00+02:00</updated><author><name>Gema Parreño</name></author><id>tag:pyvideo.org,2017-09-22:pycon-es-2017/codelab-podemos-predecir-quien-muere-en-juego-de-tronos-con-tensorflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En este taller daremos un enfoque práctico al Deep Learning y
exploraremos TensorFlow, un framework originalmente liberado por
Google para construir modelos computacionales sobre grafos.&lt;/p&gt;
&lt;p&gt;Daremos un ejemplo, sobre el conjunto de datos de Juego de Tronos
recopilado originalmente por la Universidad Politécnica de Munich,
para, con los pequeños datos sociodemográficos que tenemos de los
personajes, decidir cuánta vida puede quedarles a manos del escritor.&lt;/p&gt;
</summary><category term="workshop"></category><category term="tensorflow"></category></entry><entry><title>Load test your backend with locust.io</title><link href="https://pyvideo.org/pycon-es-2017/load-test-your-backend-with-locustio.html" rel="alternate"></link><published>2017-09-22T15:00:00+02:00</published><updated>2017-09-22T15:00:00+02:00</updated><author><name>David Saltares</name></author><id>tag:pyvideo.org,2017-09-22:pycon-es-2017/load-test-your-backend-with-locustio.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is your capacity? Does your backend scale? Are you on the edge of an outage? Find out with locust.io, a Python based load testing tool. Locust.io is open source, battle-tested, extensible and can help you sleep better at night ahead of a big product release.&lt;/p&gt;
</summary></entry><entry><title>Parallel and non parallel stuff</title><link href="https://pyvideo.org/pycon-es-2017/parallel-and-non-parallel-stuff.html" rel="alternate"></link><published>2017-09-22T15:00:00+02:00</published><updated>2017-09-22T15:00:00+02:00</updated><author><name>Pablo Galindo Salgado</name></author><id>tag:pyvideo.org,2017-09-22:pycon-es-2017/parallel-and-non-parallel-stuff.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;¡Oh no: otro tutorial de programación paralela y asíncrona en Python! ¿Cúando dejarán de insistir en el mismo asunto una y otra vez? Si alguna vez te has preguntado esto, este NO es tu taller. En cambio, si quieres volver a oir lo mismo de siempre acerca de hilos, procesos, el GIL, asyncio y demás amigos...¡Este es el taller de tus sueños! En este tutorial haremos un viaje através de todos estos conceptos desde la base, entendiendo en detalle los conceptos, los problemas y las soluciones.&lt;/p&gt;
</summary><category term="workshop"></category></entry><entry><title>Python+TensorFlow Cómo Ganar Dinero en Bolsa aplicando Deep Learning</title><link href="https://pyvideo.org/pycon-es-2017/pythontensorflow-como-ganar-dinero-en-bolsa-aplicando-deep-learning.html" rel="alternate"></link><published>2017-09-22T15:00:00+02:00</published><updated>2017-09-22T15:00:00+02:00</updated><author><name>Jose Miguel Leiva Murillo</name></author><id>tag:pyvideo.org,2017-09-22:pycon-es-2017/pythontensorflow-como-ganar-dinero-en-bolsa-aplicando-deep-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Las dos tecnologías más disruptivas actualmente en AI son el Deep Learning y el Reinforcement Learning. ¿Podemos hacernos ricos aplicando estas tecnologías al mundo de las finanzas? En esta charla daremos algunas claves sobre cómo usar Tensorflow para crear redes neuronales que aprenden a invertir en los mercados, y una introducción al Deep Q Learning, un algoritmo de aprendizaje con refuerzo que aprende el “juego” de la Bolsa como cualquier otro robot sometido a ciclos de acción + recompensa.&lt;/p&gt;
</summary><category term="tensorflow"></category></entry><entry><title>¿Qué tiene en común Donald Trump con los tacones en las oficinas de Reino Unido?</title><link href="https://pyvideo.org/pycon-es-2017/que-tiene-en-comun-donald-trump-con-los-tacones-en-las-oficinas-de-reino-unido.html" rel="alternate"></link><published>2017-09-22T15:00:00+02:00</published><updated>2017-09-22T15:00:00+02:00</updated><author><name>Irene Pérez Encinar</name></author><id>tag:pyvideo.org,2017-09-22:pycon-es-2017/que-tiene-en-comun-donald-trump-con-los-tacones-en-las-oficinas-de-reino-unido.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Es tan sólo una de las muchas preguntas que podemos responder mediante el análisis de datos aumentados con información geográfica.&lt;/p&gt;
&lt;p&gt;En este taller analizaremos algunos conjuntos de datos con información geográfica para intentar responder a este tipo de preguntas con unas pocas líneas de Python.&lt;/p&gt;
</summary><category term="gis"></category><category term="data analisys"></category></entry><entry><title>Vigilante de Wallapop</title><link href="https://pyvideo.org/pycon-es-2017/vigilante-de-wallapop.html" rel="alternate"></link><published>2017-09-22T15:00:00+02:00</published><updated>2017-09-22T15:00:00+02:00</updated><author><name>Andros Fenollosa Hurtado</name></author><id>tag:pyvideo.org,2017-09-22:pycon-es-2017/vigilante-de-wallapop.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Construye una simple web para ser ¡el más rápido en Wallapop! Programaremos una aplicación sencilla en Flask para automatizar búsquedas. Cuando un nuevo artículo se ponga a la venta, con los filtros que nos interesan, nos llegará de forma automática un email con toda la información. E incluso con ¡un botón para comprarlo! Ahora ya sabes porque no encuentras buenas ofertas. ¡¡¡Las pillé yo!!!&lt;/p&gt;
</summary><category term="workshop"></category></entry></feed>