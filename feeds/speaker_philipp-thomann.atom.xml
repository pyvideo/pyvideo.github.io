<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Philipp Thomann</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_philipp-thomann.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2020-07-23T00:00:00+00:00</updated><subtitle></subtitle><entry><title>PlotVR - walk through your data</title><link href="https://pyvideo.org/europython-2019/plotvr-walk-through-your-data.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Philipp Thomann</name></author><id>tag:pyvideo.org,2019-07-11:/europython-2019/plotvr-walk-through-your-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you bored by 3D-plots that only give you a simple rotatable
2d-projection? plotVR is an open source package that provides a simple
way for data scientists to plot data, pick up a phone, get a real 3d
impression - either by VR or by AR - and use the computer's …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you bored by 3D-plots that only give you a simple rotatable
2d-projection? plotVR is an open source package that provides a simple
way for data scientists to plot data, pick up a phone, get a real 3d
impression - either by VR or by AR - and use the computer's keyboard to
walk through the scatter plot:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.github.com/thomann/plotVR"&gt;https://www.github.com/thomann/plotVR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After installing and plotting your dataframe open your phone's browser
and use your GoogleVR Cardboard. Furthermore performant Android- and
iOS-apps are available - both support VR-Cardboard and the iOS-Version
also AR.&lt;/p&gt;
&lt;p&gt;Once you are immersed in your Cardboard how do you navigate through the
scatter? plotVR lets you use the computer's keyboard to walk as you
would in any first person game.&lt;/p&gt;
&lt;p&gt;You want to share your impression? Just save the HTML and publish it.&lt;/p&gt;
&lt;p&gt;The technologies beneath this project are: a web server that handles the
communication between the DataScience-session and the phone, WebSockets
to quickly proxy the keyboard events, QR-codes facilitate the simple
pairing of both, and an HTML-Page on the computer to grab the keyboard
events. And the translation of these keyboard events into 3D terms is a
nice exercise in three.js, OpenGL, and SceneKit for HTML, Android, and
iOS resp.&lt;/p&gt;
&lt;p&gt;Ready to see your data as you have never seen before? Join the talk!&lt;/p&gt;
</content><category term="EuroPython 2019"></category><category term="3D"></category><category term="Augmented Reality"></category><category term="Data Science"></category><category term="Open-Source"></category><category term="Visualization"></category></entry><entry><title>NLPeasy - a Workflow to Analyse, Enrich, and Explore Textual Data</title><link href="https://pyvideo.org/europython-2020/nlpeasy-a-workflow-to-analyse-enrich-and-explore-textual-data.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Philipp Thomann</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/nlpeasy-a-workflow-to-analyse-enrich-and-explore-textual-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Use pre-trained NLP-models, ingest into Elastic Search, and enjoy auto-generated Kibana dashboards!&lt;/p&gt;
&lt;p&gt;Ever wanted to try out NLP methods but it felt it too cumbersome to set up a workflow for textual data? How to enrich your data based on textual features and explore the results?&lt;/p&gt;
&lt;p&gt;NLPeasy (&lt;a class="reference external" href="https://github.com/d-one/NLPeasy"&gt;https://github …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Use pre-trained NLP-models, ingest into Elastic Search, and enjoy auto-generated Kibana dashboards!&lt;/p&gt;
&lt;p&gt;Ever wanted to try out NLP methods but it felt it too cumbersome to set up a workflow for textual data? How to enrich your data based on textual features and explore the results?&lt;/p&gt;
&lt;p&gt;NLPeasy (&lt;a class="reference external" href="https://github.com/d-one/NLPeasy"&gt;https://github.com/d-one/NLPeasy&lt;/a&gt;) does that: Enrich the data using well-known pre-trained models (Word embeddings, Sentiment Analysics, POS, Dependency Parsing). Then start the Elastic Stack on your Docker. Set-up indices and ingest it in bulk. And finally generate Kibana dashboards to explore the results.&lt;/p&gt;
&lt;p&gt;Complicated? Not at all! Just do it in a simple Jupyter Notebook.&lt;/p&gt;
&lt;p&gt;In this presentation we will give an architecture overview of the different components and demonstrate the capabilities of this Python package.&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Data Science"></category><category term="Elastic Search"></category><category term="Machine-Learning"></category><category term="Natural Language Processing"></category></entry></feed>