<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 28 Jul 2016 00:00:00 +0000</lastBuildDate><item><title>Where is the bottleneck?</title><link>https://pyvideo.org/europython-2016/where-is-the-bottleneck.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Manuel Miranda - Where is the bottleneck?
[EuroPython 2016]
[18 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/where-is-the-bottleneck"&gt;https://ep2016.europython.eu//conference/talks/where-is-the-bottleneck&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;We all know Python strength does not rely on its performance and speed
when running programs. This plus the flexibility of it, can lead to
build real slow and bad quality software.&lt;/p&gt;
&lt;p&gt;In this talk you will discover a set of useful tools for diagnosing
where the bottleneck is in your programs along with trips for quickly
realizing which is the most needed resource.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Have you ever felt like your software is eating your resources and you
have no clue why? Have you reviewed all the lines, debugged and
printed everything but you still don't know what's wrong?&lt;/p&gt;
&lt;p&gt;In this talk I will conduct a fast intro of a basic set of tools you
can use to diagnose your software's performance and then we will go
through a simple piece of code to show how those tools work and what
you can expect from them&lt;/p&gt;
&lt;p&gt;This set of tools will include basic ones given by the OS itself like
&lt;cite&gt;htop&lt;/cite&gt;, &lt;cite&gt;lsof&lt;/cite&gt;, &lt;cite&gt;ps&lt;/cite&gt; and more advanced ones that let you plot the
memory usage for given functions like &lt;cite&gt;memory_profiler&lt;/cite&gt;, check CPU
usage and the call graph between functions like &lt;cite&gt;cprofile&lt;/cite&gt; and
&lt;cite&gt;kcachegrind&lt;/cite&gt; and others.&lt;/p&gt;
&lt;p&gt;By the end of the talk, you should have an idea of which are the most
typical causes that can make your program slow and you will have a
list of tools to search for and identify the source of the problems.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Manuel Miranda</dc:creator><pubDate>Thu, 28 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-28:europython-2016/where-is-the-bottleneck.html</guid></item></channel></rss>