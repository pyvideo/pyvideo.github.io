<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 05 May 2019 00:00:00 +0000</lastBuildDate><item><title>Usa lo Zen, Luke!</title><link>https://pyvideo.org/pycon-italia-2019/usa-lo-zen-luke.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nel nostro lavoro ci troviamo spesso di fronte a scelte difficili da
prendere, compromessi che possono compromettere il nostro codice o altre
scelte future. Per fortuna abbiamo una guida che ci può aiutare a
compiere queste scelte un po’ più facilmente: lo Zen di Python. In
questo talk voglio mostrare alcuni casi reali in cui lo zen ci può
aiutare a scrivere codice migliore, più manutenibile e più bello.
Impossibile parlare di tutto lo zen, prenderò quattro o cinque consigli
e proporrò un caso reale, cioè un pezzo di codice in produzione, per
mostrarne la veridicità.&lt;/p&gt;
&lt;p&gt;Non sono richiesti pre-requisiti, si parlerà di concetti generali.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Presentazione:`link &amp;lt;https://docs.google.com/presentation/d/1GUdMd7VCQqyHHgWxSq2mf2Ot370ERWVsCwN5ln7EfEc/edit?usp=sharing&amp;gt;`__&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:https://python.it/feedback-1664&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 11:00 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lorenzo Mele</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-italia-2019/usa-lo-zen-luke.html</guid><category>Python</category><category>Zen</category></item></channel></rss>