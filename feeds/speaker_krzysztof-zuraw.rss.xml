<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 09 Mar 2018 00:00:00 +0000</lastBuildDate><item><title>Solutions Reviews</title><link>https://pyvideo.org/pycon-sk-2018/solutions-reviews.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Did you ever found out a bug in production that was caused by not
understanding what are requirements?&lt;/p&gt;
&lt;p&gt;Did you implement your code only to see that your solutions are not
optimal for the code review? This and other similar problems can be
avoided by using solution reviews. In my talk, I want to talk about what
exactly is solutions reviews, what benefits it gives you and your team,
what are drawbacks of such methods. I will guide you through my
experiment with using different methods for solution reviews and which
were good and which weren't.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Å»uraw</dc:creator><pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-03-09:pycon-sk-2018/solutions-reviews.html</guid><category>PyCon SK</category><category>Python</category></item></channel></rss>