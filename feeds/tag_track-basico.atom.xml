<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_track-basico.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-02-02T00:00:00+00:00</updated><entry><title>Click: Como hacer interfaces de comandos con Python</title><link href="https://pyvideo.org/pycon-es-2015/click-como-hacer-interfaces-de-comandos-con-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Roberto Majadas Lopez</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/click-como-hacer-interfaces-de-comandos-con-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Click es un paquete de Python que permite la creación rápida y bonita de interfaces de linea de comandos, utilizando pocas lineas de código, de una manera bastante estructurada y componible. Click resuelve las típicas situaciones en las que el programador se ve obligado a hacer un interfaz de comandos y termina por hacerse uno propio.&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Como crear un bot para Telegram</title><link href="https://pyvideo.org/pycon-es-2015/como-crear-un-bot-para-telegram.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Urtzi Odriozola Lizaso</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/como-crear-un-bot-para-telegram.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla veremos como es posible crear un bot para Telegram utilizando la libreria pyTelegramBotAPI y Telegram Bot API. Se mostraran los pasos a seguir para crear un bot sencillo que pueda aceptar interacción del usuario&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Funcional para trollear</title><link href="https://pyvideo.org/pycon-es-2015/funcional-para-trollear.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Alejandro Enrique Brito Monedero</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/funcional-para-trollear.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Usar lo que nos ofrece python para volver scripts imperativos en funcionales* y trollear a los colegas&lt;/p&gt;
&lt;p&gt;* Ciertas restricciones aplican&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Having it All: Distributed services with Django, Boto, and SQS queues</title><link href="https://pyvideo.org/pycon-es-2015/having-it-all-distributed-services-with-django-boto-and-sqs-queues.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>J. V. Trigo</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/having-it-all-distributed-services-with-django-boto-and-sqs-queues.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How do you let untrained people in your company run sensitive processes on different remote servers? Processes that must run asynchronously and sequentially while accessing different common resources? And how do you do it quickly and make it robust? I will show how we used Django, SQS and Boto to create a distributed and decoupled solution that let users invoke services asynchronously, which is secure, scalable and ensures that processes using common resources ran in sequence.&lt;/p&gt;
</summary><category term="Track Básico"></category><category term="django"></category><category term="sqs"></category><category term="boto"></category></entry><entry><title>Implantación de ElasticSearch: problemas y soluciones</title><link href="https://pyvideo.org/pycon-es-2015/implantacion-de-elasticsearch-problemas-y-soluciones.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>M. Sánchez</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/implantacion-de-elasticsearch-problemas-y-soluciones.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla se presentará de manera resumida un caso real: el proceso de implantación de ElasticSearch en una aplicación de Django. Partiendo de la motivación de implementar un buscador, veremos los problemas encontrados por nuestro equipo (¡y sus soluciones!). A saber: instalación, definición de los documentos, modo de conexión, indexado, particionado y sincronía con nuestra base de datos.&lt;/p&gt;
</summary><category term="Track Básico"></category><category term="elasticsearch"></category><category term="django"></category></entry><entry><title>Introducción a los DSL (Domain Specific Languages) en Python</title><link href="https://pyvideo.org/pycon-es-2015/introduccion-a-los-dsl-domain-specific-languages-en-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>J. Ignacio Rodríguez</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/introduccion-a-los-dsl-domain-specific-languages-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Los lenguajes específicos de dominio son lenguajes especializados, simplificados y limitados a la resolución de problemas de un dominio concreto. Usados correctamente mejoran la productividad de los desarrolladores, así como la comunicación con los usuarios o expertos de otros dominios, entre otras ventajas. En esta charla introductoria veremos qué son, para qué sirven, en qué casos usarlos y algunas librerías de Python que nos facilitarán crear nuestros propios lenguajes específicos de dominio.&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>La maquinaria de import, ese mágico desconocido</title><link href="https://pyvideo.org/pycon-es-2015/la-maquinaria-de-import-ese-magico-desconocido.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Raúl Cumplido</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/la-maquinaria-de-import-ese-magico-desconocido.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Importar módulos y librerías en python es una de las cosas más mágicas que existen. Básicamente funciona pero no sabemos como ni porque. En la charla se explicará como funciona y porque puede ser útil saber como funciona.&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>let's Twisted again!</title><link href="https://pyvideo.org/pycon-es-2015/lets-twisted-again.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Israel D. Aguilar</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/lets-twisted-again.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Haz que tus programas sean reactivos a determinados eventos de red. Para ello podemos contar con el framework conocido como Twisted, durante la charla aprenderás lo básico para usarla.
Twisted es un motor orientado a eventos de redes y tiene licencia de código libre (MIT).&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Life of a Python program</title><link href="https://pyvideo.org/pycon-es-2015/life-of-a-python-program.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Francisco Fernández Castaño</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/life-of-a-python-program.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sometimes is good to know what's happening under the hood,
this talk will explain how CPython works internally since
we type &lt;cite&gt;python myprogram.py&lt;/cite&gt; until our code is finally executed
explaining the process that CPython does to run our programs.&lt;/p&gt;
&lt;p&gt;The goal of this talk is explain people how to explore the code
of the interpreter itself using some common tools and let regular
Python developers that aren't used to work with C lose the fear
about looking under the hood.&lt;/p&gt;
</summary><category term="Track Básico"></category><category term="CPython"></category></entry><entry><title>Objetos mutable e inmutables y errores típicos</title><link href="https://pyvideo.org/pycon-es-2015/objetos-mutable-e-inmutables-y-errores-tipicos.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Pablo Enfedaque</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/objetos-mutable-e-inmutables-y-errores-tipicos.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla veremos varios errores típicos hechos al usar objetos mutables de Python, revisaremos 5 conceptos clave para entender lo que estaba sucediendo en cada caso y, finalmente, la forma de resolver o evitar esos errores.&lt;/p&gt;
&lt;p&gt;Nivel requerido: Básico / Intermedio. Los asistentes deben saber algunos conceptos de Python como declaración de clases y funciones, la herencia, atributos de clase...&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Plone 5: el CMS del futuro, en el presente</title><link href="https://pyvideo.org/pycon-es-2015/plone-5-el-cms-del-futuro-en-el-presente.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Mikel Larreategi</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/plone-5-el-cms-del-futuro-en-el-presente.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plone es un gestor de documental y contenidos con más de 10 años de recorrido. Creado inicialmente como una &amp;quot;cara bonita&amp;quot; del Content Management Framework ha evolucionado hasta nuestros días para traer una experiencia de uso y funcionalidades del más alto nivel.&lt;/p&gt;
&lt;p&gt;Con las últimas modificaciones realizadas durante el desarrollo, está a punto de publicarse la versión 5 de este CMS, íntegramente escrito en Python, y que presentaremos en esta charla.&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Extending Python</title><link href="https://pyvideo.org/pycon-es-2015/pycon-es-2015-extending-python-francisco-fernandez-castano-track-basico.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Francisco Fernández Castaño</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/pycon-es-2015-extending-python-francisco-fernandez-castano-track-basico.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a great language, but there are occasions where we need access to low level operations or connect with some database driver written in C or we need to overcome to some speed boottleneck in Python due to some limitation in the language, like NumPy or Scikit-learn do, using extensions.&lt;/p&gt;
&lt;p&gt;With the FFI(Foreign function interface) we can connect Python with other languages like C, C++ and even Rust or Fortran.&lt;/p&gt;
</summary><category term="Track Básico"></category><category term="ffi"></category></entry><entry><title>Python descriptors al detalle</title><link href="https://pyvideo.org/pycon-es-2015/python-descriptors-al-detalle.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Pablo Enfedaque</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/python-descriptors-al-detalle.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla repasaremos el protocolo de los descriptores, casos de uso y sus aplicaciones más directas en la librería estándar, como son properties y slots.&lt;/p&gt;
&lt;p&gt;La audiencia debería tener un conocimiento medio / alto de Python y entender el data model de los objetos de Python (los magic methods).&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Python Funcional</title><link href="https://pyvideo.org/pycon-es-2015/python-funcional.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Guillermo Vayá Pérez</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/python-funcional.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Implementación de varios de los elementos que componen la programación funcional mediante Python.&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Python in the Sky</title><link href="https://pyvideo.org/pycon-es-2015/python-in-the-sky.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>David Arcos</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/python-in-the-sky.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Case study of Immfly’s Wireless In-Flight Entertainment system, built using Python.&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Revisión de código en Python</title><link href="https://pyvideo.org/pycon-es-2015/revision-de-codigo-en-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Cesar Cardenas Desales</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/revision-de-codigo-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El objetivo de esta charla es dar a conocer los beneficios de la revisión de código, detallando los aspectos prácticos para llevar a cabo esta técnica de manera exitosa en proyectos colaborativos de desarrollo de software escritos en Python.&lt;/p&gt;
</summary><category term="Track Básico"></category><category term="code review"></category></entry><entry><title>#!/usr/bin/python (Python para Sysadmins)</title><link href="https://pyvideo.org/pycon-es-2015/usrbinpython-python-para-sysadmins.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Andreu Belmonte Peña</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/usrbinpython-python-para-sysadmins.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla se presenta la experiencia de un Sysadmin utilizando Python como lenguaje de scripting avanzado.&lt;/p&gt;
&lt;p&gt;Se introducirán funcionalidades básicas del lenguajes así como una serie de módulos y trucos que facilitarán la vida de cualquier administrador de sistemas que quiera ir más allá de bash.&lt;/p&gt;
&lt;p&gt;Esta es la charla que me hubiera gustado escuchar cuando empecé a escriptar mis primeras tareas para gestionar servidores y servicios y que me hubiera ahorrado tiempo y facilitado la vida.&lt;/p&gt;
</summary><category term="Track Basico"></category></entry></feed>