<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_hsueh-tsung-kuo.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-06-27T00:00:00+00:00</updated><entry><title>VapourSynth comes, does it indicate that AviSynth will shutdown?</title><link href="https://pyvideo.org/pycon-apac-2014/vapoursynth-comes-does-it-indicate-that-avisynth.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Hsueh-Tsung Kuo</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/vapoursynth-comes-does-it-indicate-that-avisynth.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;VapourSynth is a powerful tool for video post-production. In contrast to
video editing tools with GUI interface, it parses expressions and
statements from Python script, builds corresponding filter graph, and
cheats output video as regular uncompressed RGB/YUV AVI stream file.
Thus, everyone can view video editing result just by playing Python
script as a regular AVI file.&lt;/p&gt;
&lt;p&gt;The concept of VapourSynth is based on AviSynth, the most famous script
based video editing tools. However, AviSynth is too old, inefficient,
has disorder filter set, and there are many limitations in its specific
script language (lack of for/while loop). That is why project holder
introduces many advantages into VapourSynth, such as better resource
usage, frame level concurrent processing, simplified filter set, and
describes video processing flow with Python!&lt;/p&gt;
&lt;p&gt;Will VapourSynth be the future of script based video editing? Let's make
some simple VapourSynth scripts and realize what VapourSynth can do!&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Source: A little programmer from animation studio. He joins or hosts
development of many utilities for animation staff in studio. He is very
familiar with AviSynth, and has embedded it into production or
exhibition application.&lt;/p&gt;
&lt;p&gt;Faith: Loves the style of functional programming language, but always
uses imperative and object-oriented coding style for real life problem.
Believes voxel based rendering is the future, but always works on
rendering module with polygon based rendering. Asks friends to own a car
with Hybrid Synergy Drive, but drives a car with 4-speed automatic
transmission plus inefficient torque converter inside.&lt;/p&gt;
&lt;p&gt;In another words, lip-service technology geek.&lt;/p&gt;
</summary></entry></feed>