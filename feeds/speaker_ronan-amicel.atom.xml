<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ronan-amicel.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-09-23T00:00:00+00:00</updated><entry><title>Techniques de test avancées en Python</title><link href="https://pyvideo.org/pycon-fr-2017/techniques-de-test-avancees-en-python.html" rel="alternate"></link><published>2017-09-23T00:00:00+00:00</published><updated>2017-09-23T00:00:00+00:00</updated><author><name>Ronan Amicel</name></author><id>tag:pyvideo.org,2017-09-23:pycon-fr-2017/techniques-de-test-avancees-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cette conférence présente différentes techniques de test avancées en Python, telles que :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;lancer ses tests sur plusieurs versions de Python avec tox et pyenv&lt;/li&gt;
&lt;li&gt;remplacer un objet par une imitation avec unittest.mock&lt;/li&gt;
&lt;li&gt;geler le temps un instant avec freezegun&lt;/li&gt;
&lt;li&gt;simuler une API REST distante avec responses&lt;/li&gt;
&lt;li&gt;tester plusieurs scénarios avec des tests paramétrés&lt;/li&gt;
&lt;li&gt;tester des propriétés en générant automatiquement des cas aléatoires avec hypothesis&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cette conférence s'adresse aux développeurs Python de niveau intermédiaire ou avancé, qui ont déjà écrit des tests automatisés et veulent approfondir le sujet.&lt;/p&gt;
</summary></entry><entry><title>Rendez votre code Python plus beau !</title><link href="https://pyvideo.org/pycon-fr-2013/rendez-votre-code-python-plus-beau.html" rel="alternate"></link><published>2013-11-30T00:00:00+00:00</published><updated>2013-11-30T00:00:00+00:00</updated><author><name>Ronan Amicel</name></author><id>tag:pyvideo.org,2013-11-30:pycon-fr-2013/rendez-votre-code-python-plus-beau.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Apprenez à mieux utiliser les possibilités de Python pour rendre votre
code plus élégant, plus lisible, plus performant. Avec de nombreux
exemples que vous pourrez appliquer dès demain sur votre propre code.&lt;/p&gt;
</summary></entry></feed>