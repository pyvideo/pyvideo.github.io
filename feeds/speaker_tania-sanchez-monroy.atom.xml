<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_tania-sanchez-monroy.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-07-25T00:00:00+00:00</updated><entry><title>A Jupyter Enhancement Proposal Story</title><link href="https://pyvideo.org/europython-2018/a-jupyter-enhancement-proposal-story.html" rel="alternate"></link><published>2018-07-25T00:00:00+00:00</published><updated>2018-07-25T00:00:00+00:00</updated><author><name>Raniere Silva</name></author><id>tag:pyvideo.org,2018-07-25:europython-2018/a-jupyter-enhancement-proposal-story.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python users should be familiar with the concept of Python Enhancement
Proposals (PEPs), the way that the Python language evolves over time. In
a similar fashion, the Jupyter project has Jupyter Enhancement Proposals
(JEPs). This talk with cover the proposer first-hand experience when
submiting JEP 23 - Add Template as Metatada enhancement proposal from
itâ€™s beginning, during EuroPython 2017, up to its current status. We
will, in addition, present efforts made as part of the OpenDreamKit
project to perform Jupyter notebooks conversions using custom metadata,
templates, and exporters, in a programmatic way.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;0:00 - 0:05 Who are we? We are impostors! 0:05 - 0:10 Our previous
experience with Jupyter Notebook. We will talk about the time that
Software Carpentry used Jupyter Notebook for their lesson creation and
OpenDreamKit Jupyter notebook programmatic notebooks conversion. 0:10 -
0:15 You are not alone. We will talk how the idea for the Jupyter
Enhancement Proposals (JEPs) borned at EuroPython 2017 Help Desk 0:15 -
0:20 Writing our first Jupyter Enhancement Proposals. We will cover our
steps to create the pull request required by the Jupyter Project. 0:20 -
0:25 What is the current status of the Jupyter Enhancement Proposals? We
will cover any progress from the time of this talk proposal submission
and the date of it presentation. 0:25 - 0:30 Time for questions&lt;/p&gt;
</summary></entry><entry><title>Down the rabbit hole. A 101 on reproducible workflows with Python</title><link href="https://pyvideo.org/pycon-us-2018/down-the-rabbit-hole-a-101-on-reproducible-workflows-with-python.html" rel="alternate"></link><published>2018-05-09T00:00:00+00:00</published><updated>2018-05-09T00:00:00+00:00</updated><author><name>Tania  Sanchez Monroy</name></author><id>tag:pyvideo.org,2018-05-09:pycon-us-2018/down-the-rabbit-hole-a-101-on-reproducible-workflows-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There has been a massive interest in reproducible research / data
analysis pipelines over the last few years.
But... how can I ensure that what I produce as a Python
user is reproducible?
In this tutorial we'll be taking you on a journey down the rabbit hole
of reproducibility.
We'll be taking a step by step approach to reproducible scientific development
in Python.
This means you get a crash course on version control, execution environments, testing,
and continuous integration. And a guide on how to integrate all of these in your
software projects.
By the end of the course we hope you will have the necessary tools to make your
Python workflows reproducible no matter if you're starting a brand new project
or if this is ready to be shared with the world.&lt;/p&gt;
</summary><category term="reproducibility"></category></entry></feed>