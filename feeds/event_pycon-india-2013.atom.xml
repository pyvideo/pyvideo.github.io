<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-india-2013.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-09-01T00:00:00+00:00</updated><entry><title>Applications of Python in Robotics</title><link href="https://pyvideo.org/pycon-india-2013/applications-of-python-in-robotics.html" rel="alternate"></link><published>2013-09-01T00:00:00+00:00</published><updated>2013-09-01T00:00:00+00:00</updated><author><name>Lentin Joseph</name></author><id>tag:pyvideo.org,2013-09-01:pycon-india-2013/applications-of-python-in-robotics.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is extensively used in in the field of robotics mainly because of
the easiness in implementation. Some of the popular python frameworks
used in robotics are Robotic Operating System(ROS), OpenCV-Python and
PyQT&lt;/p&gt;
&lt;p&gt;My talk will be divided into the following broad categories:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to robotics and associated technologies&lt;/li&gt;
&lt;li&gt;Introduction to arduino and interfacing&lt;/li&gt;
&lt;li&gt;Introduction to raspberry Pi and interfacing&lt;/li&gt;
&lt;li&gt;Various Python frameworks used in robotics&lt;/li&gt;
&lt;li&gt;Introduction to ROS framework and importance of rospy&lt;/li&gt;
&lt;li&gt;Introduction of OpenCV and explantion of python wrapper of OpenCV&lt;/li&gt;
&lt;li&gt;Introduction to image processing using ROS and Python&lt;/li&gt;
&lt;li&gt;Introduction to PIL(Python Image Processing Library)&lt;/li&gt;
&lt;li&gt;Introduction to Python GUI toolkit such as PyQT (with demos and
examples)&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Data visualisation in PowerPoint with Python</title><link href="https://pyvideo.org/pycon-india-2013/data-visualisation-in-powerpoint-with-python.html" rel="alternate"></link><published>2013-09-01T00:00:00+00:00</published><updated>2013-09-01T00:00:00+00:00</updated><author><name>Anand S</name></author><id>tag:pyvideo.org,2013-09-01:pycon-india-2013/data-visualisation-in-powerpoint-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What if Python created your slides for you?&lt;/p&gt;
&lt;p&gt;What if it could create animations in PowerPoint that are not humanly
possible to match in terms of fineness, accuracy or richness?&lt;/p&gt;
&lt;p&gt;That's what this session aims to do. And to answer the inevitable
question &amp;quot;But why PowerPoint?&amp;quot; all I have to say is: once you remove
PowerPoint's user interface, the underlying canvas and rendering engine
is as flexible as SVG or Inkscape.&lt;/p&gt;
&lt;p&gt;Plus, corporates love paying for stuff like this.&lt;/p&gt;
</summary></entry><entry><title>Experiments in data mining, entity disambiguation and how to think data-structures for designing beautiful algorithms</title><link href="https://pyvideo.org/pycon-india-2013/experiments-in-data-mining-entity-disambiguation-and-how-to-think-data-structures-for-designing-beautiful-algorithms.html" rel="alternate"></link><published>2013-09-01T00:00:00+00:00</published><updated>2013-09-01T00:00:00+00:00</updated><author><name>Ekta Grover</name></author><id>tag:pyvideo.org,2013-09-01:pycon-india-2013/experiments-in-data-mining-entity-disambiguation-and-how-to-think-data-structures-for-designing-beautiful-algorithms.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session is for people who would like to move from pure play
analytics to heavy data lifting and data engineering applications. With
a background in Computer science and Quantitative economics, I blend
these two approaches to bring quick wins(and Fail cheaper) to solve some
of most interesting problems around us today- for fun and profit.&lt;/p&gt;
&lt;p&gt;The four problems I will discuss are around –&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Scoring your connections to find your net worth in LinkedIn [Data
structures, Algorithms , Data mining &amp;amp; Visualization]&lt;/li&gt;
&lt;li&gt;Building your custom distance metrics (with Graphs as base
data-structure) and finger keying – with applications for
hand-collected data-sets, susceptible to entirely different distance
metrics, than traditionally explored [Algorithms]&lt;/li&gt;
&lt;li&gt;Building relevant Job feeds in Linkedin (TF-IDF) and (possibly)
hacking around Job applications [Relevance Algorithms, Linguist
pre-processing &amp;amp; visualization]&lt;/li&gt;
&lt;li&gt;Developing a custom batch aggregation platform - with competing
system goals [developing scoring metrics, concept of centrality &amp;amp;
formal constructs to measure recency]&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Most of all you will learn the why and why not of things, that I will
keep coming back to as I discus the problems above. This I feel is the
most important differentiator between coding well and coding for
scale, and helps build a structured thought process to problem
solving.&lt;/div&gt;
&lt;div class="line"&gt;By the end of the session, you will have seen a blend of tools ranging
from Python (Algorithms &amp;amp; data mining &amp;amp; Graph Theory) , Python, R &amp;amp;
ink space (Graphical representation &amp;amp; visualization)&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The session will be heavy on algorithms, and thinking data structures,
so to make most of this, you need – a background/Interest in Computer
science and Quantitative vigor with some hands-on coding experience, and
a mind that wants to learn more.&lt;/p&gt;
</summary></entry><entry><title>Implementation of pyCUDA</title><link href="https://pyvideo.org/pycon-india-2013/implementation-of-pycuda.html" rel="alternate"></link><published>2013-09-01T00:00:00+00:00</published><updated>2013-09-01T00:00:00+00:00</updated><author><name>Aditya Atluri</name></author><id>tag:pyvideo.org,2013-09-01:pycon-india-2013/implementation-of-pycuda.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk starts with introduction to modules in python and how to
implement them. Then, Boost python which helps codepy to implement
metaprogramming in python. Then, on pyCUDA, how all the delivered talk
gets together to form such a powerful package and implementation of
pyCUDA. Implementation of Copperhead, the total scripting module for
GPU.&lt;/p&gt;
</summary></entry><entry><title>Internet of things - Arduino &lt;3 Python</title><link href="https://pyvideo.org/pycon-india-2013/internet-of-things-arduino-3-python.html" rel="alternate"></link><published>2013-09-01T00:00:00+00:00</published><updated>2013-09-01T00:00:00+00:00</updated><author><name>Avik Dhupar</name></author><id>tag:pyvideo.org,2013-09-01:pycon-india-2013/internet-of-things-arduino-3-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Arduino can be accessed using pyserial library of Python. This workshop
explores an opportunity to teach the control of Arduino via python for
both Arduino and Python beginners.&lt;/p&gt;
&lt;p&gt;The workshop would include the design of a simple security system
wherein if the object that you are trying to protect is touched, it
sends an alert.&lt;/p&gt;
</summary></entry><entry><title>Let's talk testing with Selenium</title><link href="https://pyvideo.org/pycon-india-2013/lets-talk-testing-with-selenium.html" rel="alternate"></link><published>2013-09-01T00:00:00+00:00</published><updated>2013-09-01T00:00:00+00:00</updated><author><name>Anisha Narang</name></author><id>tag:pyvideo.org,2013-09-01:pycon-india-2013/lets-talk-testing-with-selenium.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Outline:&lt;/div&gt;
&lt;div class="line"&gt;Why is testing important?&lt;/div&gt;
&lt;div class="line"&gt;Brief on Selenium with Python as a testing framework&lt;/div&gt;
&lt;div class="line"&gt;Best practices for automated testing&lt;/div&gt;
&lt;div class="line"&gt;An approach to automated testing with a demo&lt;/div&gt;
&lt;div class="line"&gt;How to maintain your test scripts?&lt;/div&gt;
&lt;div class="line"&gt;Generate detailed HTML reports for the test runs&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Focus on:&lt;/div&gt;
&lt;div class="line"&gt;Testing the search functionality for any application, common UI
features such as text highlighting, selecting checkboxes, text
presence etc.&lt;/div&gt;
&lt;div class="line"&gt;Understanding the UI elements and building test script&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Making python Interactive and fun using IPython notebook</title><link href="https://pyvideo.org/pycon-india-2013/making-python-interactive-and-fun-using-ipython-notebook.html" rel="alternate"></link><published>2013-09-01T00:00:00+00:00</published><updated>2013-09-01T00:00:00+00:00</updated><author><name>Konark Modi</name></author><id>tag:pyvideo.org,2013-09-01:pycon-india-2013/making-python-interactive-and-fun-using-ipython-notebook.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Starting from the very basics of IPython, we shall discuss the
following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Overview of IPython notebook UI.&lt;/li&gt;
&lt;li&gt;The input, Output and history&lt;/li&gt;
&lt;li&gt;How IPython helps consume and understand documentation of libraries
and functions easily and in an efficient manner.&lt;/li&gt;
&lt;li&gt;The magic of magic functions in IPython&lt;/li&gt;
&lt;li&gt;Brief overview of underlying functionality of IPython : Kernels and
different processes.&lt;/li&gt;
&lt;li&gt;IPython notebook is not only about code : Various representation
styles that come in-built.&lt;/li&gt;
&lt;li&gt;Brief introduction of IPython Cluster.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Predicting Black Swan Events</title><link href="https://pyvideo.org/pycon-india-2013/predicting-black-swan-events.html" rel="alternate"></link><published>2013-09-01T00:00:00+00:00</published><updated>2013-09-01T00:00:00+00:00</updated><author><name>Michael McKerns</name></author><id>tag:pyvideo.org,2013-09-01:pycon-india-2013/predicting-black-swan-events.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We have developed a new rigorous mathematical framework for quantifying
risk designed to utilize all available information and predict the
impact of Black Swan events. These rigorous predictors are global
optimizations over all possible valid scenarios, and do not rely on
common approximations in computing priors that lead to the exclusion of
high-impact rare events. Such optimizations, however, are
high-dimensional, highly-constrained, and non- convex, and generally
impossible to solve with current optimization technology. I will present
an overview of our mathematical framework, and the powerful optimization
software we have developed to rigorously solve real- world problems in
predictive science, finance, and technology. The software runs in
standard python on a simple laptop -- however, it trivially scales up to
potentially petascale and larger calculations running on some of the
largest computers on the planet.&lt;/p&gt;
</summary></entry><entry><title>Python for Humans - Remix!</title><link href="https://pyvideo.org/pycon-india-2013/python-for-humans-remix.html" rel="alternate"></link><published>2013-09-01T00:00:00+00:00</published><updated>2013-09-01T00:00:00+00:00</updated><author><name>Kenneth Reitz</name></author><id>tag:pyvideo.org,2013-09-01:pycon-india-2013/python-for-humans-remix.html</id><summary type="html"></summary><category term="keynote"></category></entry><entry><title>Python in Raspberry Pi</title><link href="https://pyvideo.org/pycon-india-2013/python-in-raspberry-pi.html" rel="alternate"></link><published>2013-09-01T00:00:00+00:00</published><updated>2013-09-01T00:00:00+00:00</updated><author><name>Sudar Muthu</name></author><id>tag:pyvideo.org,2013-09-01:pycon-india-2013/python-in-raspberry-pi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Raspberry Pi is a credit card size computer, single board computer which
was developed with the intention to promoting the learning of computer
science in schools.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Python is the main programming language in Raspberry Pi. In fact&lt;/div&gt;
&lt;div class="line"&gt;'Pi' in Raspberry Pi stands for Python.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This talk will introduce different ways by which we can program
Raspberry Pi using Python and I will also be covering different ways by
which we can interact with external hardware/devices from Python.&lt;/p&gt;
</summary></entry><entry><title>Real-Time stream computation on graphs using Storm, Neo4j and Python</title><link href="https://pyvideo.org/pycon-india-2013/real-time-stream-computation-on-graphs-using-storm-neo4j-and-python.html" rel="alternate"></link><published>2013-09-01T00:00:00+00:00</published><updated>2013-09-01T00:00:00+00:00</updated><author><name>Sonal Raj</name></author><id>tag:pyvideo.org,2013-09-01:pycon-india-2013/real-time-stream-computation-on-graphs-using-storm-neo4j-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="section" id="storm"&gt;
&lt;h4&gt;Storm&lt;/h4&gt;
&lt;p&gt;We will briefly outline the installation and features of Twitter’s Storm
framework and basic operations which make it an ideal tool for real-time
stream processing of data. We will also look into it's Fault-Tolerance
capabilities using programmatic implementations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="neo4j"&gt;
&lt;h4&gt;Neo4J&lt;/h4&gt;
&lt;p&gt;We will briefly introduce Neo4j, a No-SQL graph Database – how it works,
its APIs, working with REST and Cypher.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="distributed-graph-operations"&gt;
&lt;h4&gt;Distributed Graph Operations&lt;/h4&gt;
&lt;p&gt;We shall then focus on how Storm and Neo4J can be made to work in co-
ordination in a distributed environment to produce efficient and fast
operations on significantly large graph data. The session will also
include a live implementation of a scenario to demonstrate the use of
Storm, Neo4J and their co-ordinated jobs in Python.&lt;/p&gt;
&lt;p&gt;Finally the growing social applications of graph databases will not be a
mystery anymore !&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>Scrape the web using Scrapy</title><link href="https://pyvideo.org/pycon-india-2013/scrape-the-web-using-scrapy.html" rel="alternate"></link><published>2013-09-01T00:00:00+00:00</published><updated>2013-09-01T00:00:00+00:00</updated><author><name>Anuvrat Parashar</name></author><id>tag:pyvideo.org,2013-09-01:pycon-india-2013/scrape-the-web-using-scrapy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Extracting structured information from a webpages is a relatively
simple task in python, given the innumerable tools at our disposal
namely BeautifulSoup, PyQuery, lxml etc. However, crawling and
scraping data from multiple websites makes the job difficult because
everyone on the internet likes to structure their information
differently.&lt;/div&gt;
&lt;div class="line"&gt;Crawling upto 10 portals is manageable upto 10 portals, beyond that it
becomes a menace. What we need then, is a framework to keep the
crawling and parsing logic separate and also help manage the parsers.
This is where scrapy comes to our assistance. It is the most pythonic
way of scraping the web.&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Ansible: Configuration Management Simplified</title><link href="https://pyvideo.org/pycon-india-2013/ansible-configuration-management-simplified.html" rel="alternate"></link><published>2013-08-31T00:00:00+00:00</published><updated>2013-08-31T00:00:00+00:00</updated><author><name>Ausmarton Zarino Fernandes</name></author><id>tag:pyvideo.org,2013-08-31:pycon-india-2013/ansible-configuration-management-simplified.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ansible is unlike mainstream configuration management tools as in, it
does not require a centralised server for management. It's very
lightweight and doesn't require any kind of client daemon to be running
on every managed instance. This along with it's ease of configuration in
yaml, make it a very good candidate for managing small to medium sized
infrastructures where the overhead of having a constantly polling client
daemon would be quite visible.&lt;/p&gt;
&lt;p&gt;A benefit over the more popular tools like Chef and Puppet includes the
fact that for the most part, one does not need to write code for setting
up common infrastructures, machine configurations are done in yaml.
Python knowledge would be required when writing plugins to add more
functionality to ansible.&lt;/p&gt;
&lt;p&gt;I will cover the architecture of ansible and yaml configurations.
Finally, I'll demonstrate the use of it to set up a small infrastructure
by writing playbooks for it.&lt;/p&gt;
</summary></entry><entry><title>Build your next python project - Super fast, distributed and infinitely scalable, Using ZeroMQ</title><link href="https://pyvideo.org/pycon-india-2013/build-your-next-python-project-super-fast-distributed-and-infinitely-scalable-using-zeromq.html" rel="alternate"></link><published>2013-08-31T00:00:00+00:00</published><updated>2013-08-31T00:00:00+00:00</updated><author><name>Srinivasan R</name></author><id>tag:pyvideo.org,2013-08-31:pycon-india-2013/build-your-next-python-project-super-fast-distributed-and-infinitely-scalable-using-zeromq.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;All web applications aren't as simple as following a 20 minute blog
tutorial in a web framework. There are lot of components which handle
the business logic and they might all not work on the same machine (or
even be built using the same programming language).&lt;/p&gt;
&lt;p&gt;When you build at web scale, you should look at how to build your system
distributed across multiple machines.&lt;/p&gt;
&lt;p&gt;The talk will be about&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why use a message queue.&lt;/li&gt;
&lt;li&gt;How zeromq is different from other message queues.&lt;/li&gt;
&lt;li&gt;How to write a basic networked program using zeromq.&lt;/li&gt;
&lt;li&gt;How you can use zeromq to write concurrent &amp;amp; parallel systems.&lt;/li&gt;
&lt;li&gt;The various patterns &amp;amp; configurations zeromq can be used in to build
your distributed system.&lt;/li&gt;
&lt;li&gt;Various protocols that can be used&lt;/li&gt;
&lt;li&gt;How to make your python program talk with any other programming
language easily.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Chugging Flask: Gyaan from building REST APIs for an Android App</title><link href="https://pyvideo.org/pycon-india-2013/chugging-flask-gyaan-from-building-rest-apis-for-an-android-app.html" rel="alternate"></link><published>2013-08-31T00:00:00+00:00</published><updated>2013-08-31T00:00:00+00:00</updated><author><name>Aravind Krishnaswamy</name></author><id>tag:pyvideo.org,2013-08-31:pycon-india-2013/chugging-flask-gyaan-from-building-rest-apis-for-an-android-app.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We used &lt;tt class="docutils literal"&gt;Flask&lt;/tt&gt; to build out the API backend for an Android app that's
scaled up to &amp;gt; &lt;em&gt;200,000&lt;/em&gt; users. With an iOS app that's in development,
we expect this to soon double.&lt;/p&gt;
&lt;p&gt;We've learnt a ton of little things along the way, and have had to make
various architectural and design decisions. In my experience, it's easy
to google and find a lot of information on SO or HN, but it's not always
easy to put these in context to see what's really relevant to you. In
this talk, I'll attempt to talk through the &lt;em&gt;why&lt;/em&gt; behind various choices
we made, and engage in &lt;em&gt;dialog&lt;/em&gt; about how these may be beneficial to you
(or not).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://web.archive.org/web/20140618164101/http://slid.es/arg0s/chugging-%20flask"&gt;Slides&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've provided a link to my slides to serve as an outline that I hope
will open up dialog with others, and help steer the direction of this
talk. Feedback and suggestions are welcome, just mention your
twitter/irc handle in your comments if you'd like to discuss things.&lt;/p&gt;
</summary></entry><entry><title>Dissecting memory mysteries of Python</title><link href="https://pyvideo.org/pycon-india-2013/dissecting-memory-mysteries-of-python.html" rel="alternate"></link><published>2013-08-31T00:00:00+00:00</published><updated>2013-08-31T00:00:00+00:00</updated><author><name>Vishal Kanaujia</name></author><id>tag:pyvideo.org,2013-08-31:pycon-india-2013/dissecting-memory-mysteries-of-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a dynamically typed language. Applications leave task of
object memory management to Python VM. Python automatically manages
memory using reference counting and garbage collection. But, Python
memory manager may bloat the VM size, and sometimes it may consume
complete main memory. It causes applications to deliver low performance
and encounter unexpected memory errors.&lt;/p&gt;
&lt;p&gt;This talk dissects the internals of CPython memory manager, its
limitations and negative impact on application behavior. We demonstrate
the problem of memory leaks by learning Python heap pattern, object
graphs and memory profiling. Next, we suggest solutions to reduce memory
footprints of applications, tools to diagnose and fix memory leaks and
lesson learned as best development practices.&lt;/p&gt;
</summary></entry><entry><title>Django: Beyond Basics</title><link href="https://pyvideo.org/pycon-india-2013/django-beyond-basics.html" rel="alternate"></link><published>2013-08-31T00:00:00+00:00</published><updated>2013-08-31T00:00:00+00:00</updated><author><name>Arun Ravindran</name></author><id>tag:pyvideo.org,2013-08-31:pycon-india-2013/django-beyond-basics.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learning programming is more fun when you can share your work with your
friends. Django makes it possible to create powerful web applications
which can be used by anyone and from anywhere. But even after reading
tutorials it is hard to actually build interesting web applications.&lt;/p&gt;
&lt;p&gt;This talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why Web Programming is Awesome and Hard&lt;/li&gt;
&lt;li&gt;Common problems faced by beginners&lt;/li&gt;
&lt;li&gt;How to improve&lt;/li&gt;
&lt;li&gt;Learning Django&lt;/li&gt;
&lt;li&gt;Patterns and Anti-patterns&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk tries to bridge that gap from a beginner to a real world
web-app builder. Learn Django best practices, tips and anti-patterns in
this fun and informative session.&lt;/p&gt;
</summary></entry><entry><title>Graph Everything</title><link href="https://pyvideo.org/pycon-india-2013/graph-everything.html" rel="alternate"></link><published>2013-08-31T00:00:00+00:00</published><updated>2013-08-31T00:00:00+00:00</updated><author><name>Kunal Kerkar</name></author><id>tag:pyvideo.org,2013-08-31:pycon-india-2013/graph-everything.html</id><summary type="html"></summary></entry><entry><title>Logging on Steroids - How we manage logs at Inmobi</title><link href="https://pyvideo.org/pycon-india-2013/logging-on-steroids-how-we-manage-logs-at-inmobi.html" rel="alternate"></link><published>2013-08-31T00:00:00+00:00</published><updated>2013-08-31T00:00:00+00:00</updated><author><name>Ajay Yadav</name></author><id>tag:pyvideo.org,2013-08-31:pycon-india-2013/logging-on-steroids-how-we-manage-logs-at-inmobi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will introduce some best practices around logging in Python(we
will use Django as an example) web apps and how to get the maximum out
of it. We will cover use case for both webserver logs and application
logs and alternative formats for logs like json. We will cover some
advanced features in python library and will move on to a full fledged
architecture to write, collect, parse and visualize logs from a cluster
of application(s) using open source tools like Logstash, Elasticsearch
etc.&lt;/p&gt;
</summary></entry><entry><title>Package and distribute your Python code</title><link href="https://pyvideo.org/pycon-india-2013/package-and-distribute-your-python-code.html" rel="alternate"></link><published>2013-08-31T00:00:00+00:00</published><updated>2013-08-31T00:00:00+00:00</updated><author><name>Sanket Saurav</name></author><id>tag:pyvideo.org,2013-08-31:pycon-india-2013/package-and-distribute-your-python-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So, you've written your nifty, super-useful Python package. Now what?&lt;/p&gt;
&lt;p&gt;This session intends to to teach the attendee everything about
packaging, documenting and distributing a Python package. Starting with
packaging basics, OS-specific packaging, specifying package
dependencies, including proper metadata, naming and versioning to
finally distributing the package on
&lt;a class="reference external" href="https://web.archive.org/web/20150105080641/https://pypi.python.org/"&gt;PyPI&lt;/a&gt;,
at the end of the session the attendee's package will be easily
installable using tools like pip and easy_install. The talk will also
emphasize on including proper tests for the package. The modules
primarily used are distutils/distutils2 (2.x), packaging (3.x). The talk
will also feature an introduction to build-systems like
&lt;a class="reference external" href="https://web.archive.org/web/20150105080641/http://www.buildout.org/"&gt;Buildout&lt;/a&gt;.&lt;/p&gt;
</summary></entry><entry><title>Rapid development &amp; integration of Real Time Communication in Websites</title><link href="https://pyvideo.org/pycon-india-2013/rapid-development-integration-of-real-time-communication-in-websites.html" rel="alternate"></link><published>2013-08-31T00:00:00+00:00</published><updated>2013-08-31T00:00:00+00:00</updated><author><name>Chetan Giridhar</name></author><id>tag:pyvideo.org,2013-08-31:pycon-india-2013/rapid-development-integration-of-real-time-communication-in-websites.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Online shopping or retail industry of the world is worth trillions of
dollars. Forrester research estimates that US online industry alone
will be worth $279 Billion by 2015!&lt;/div&gt;
&lt;div class="line"&gt;Given the scenario, website customers have an ever-growing need of
communicating with customer service representatives in real time with
a live chat or media call. Businesses can not only view it as an
opportunity to act quickly and be flexible in delivering specific
product information to customers but also to prevent or recover from
service failures &amp;amp; convert leads to sales!&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Though critical, development teams have found it difficult to develop,
maintain and integrate instant chat or media calls in their websites.
Unavailability or shortage of ready-to-use frameworks has contributed to
longer development cycles and made the task seam out-of-reach. As a
result, real time communication in websites is often considered
‘good-to-have’ and doesn’t get the due importance.&lt;/p&gt;
&lt;p&gt;This talk discusses about development &amp;amp; integration of real-time
communication applications in websites. Audiences would get an
opportunity to appreciate the concept with the help of a working
prototype. The talk also suggests Python modules for getting the task
done in a rapid &amp;amp; customised way.&lt;/p&gt;
</summary></entry><entry><title>The Paradox of Code: Asset vs. Liability</title><link href="https://pyvideo.org/pycon-india-2013/the-paradox-of-code-asset-vs-liability.html" rel="alternate"></link><published>2013-08-31T00:00:00+00:00</published><updated>2013-08-31T00:00:00+00:00</updated><author><name>Kiran Jonnalagadda</name></author><id>tag:pyvideo.org,2013-08-31:pycon-india-2013/the-paradox-of-code-asset-vs-liability.html</id><summary type="html"></summary><category term="keynote"></category></entry><entry><title>We're building Skynet and it loves Python!</title><link href="https://pyvideo.org/pycon-india-2013/were-building-skynet-and-it-loves-python.html" rel="alternate"></link><published>2013-08-31T00:00:00+00:00</published><updated>2013-08-31T00:00:00+00:00</updated><author><name>Dhananjay Sathe</name></author><id>tag:pyvideo.org,2013-08-31:pycon-india-2013/were-building-skynet-and-it-loves-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Think of Driverless cars, autonomous self learning robots, robots with
minds in the cloud. In common terms think of Trinity downloading the
routine to fly apache in The Matrix. Until now prohibitive costs,
architectural limitations , complex network setups and configurations
and limitations of computing resources have hampered some really cool
stuff in Robotics, Rapyuta attempts to solve these very issues. Off late
we have completely revamped it and added a ton of exciting new features.&lt;/p&gt;
&lt;p&gt;RoboEarth is one of the top projects in the EU funded by the FP7
framework with members including ETH Zurich, Tu Munich, Tu Eindhoven and
others and is fully available in Open Source. It draws from the strong
base and standards of ROS (www.ros.org) to bring the best of modern
robotics algorithms and software to the average developers and uses some
exciting new tech like lxc and websockets, yet is simple to use and
configure on almost any platform from EC2, Google Compute Engine,
Rackspace or even commodity hardware.&lt;/p&gt;
&lt;p&gt;This is a general purpose talk to introduce you to Rapyuta, briefly
touch on how we built it (twisted devs would love this), how you can
easily use and configure it and what it does for you. I will also try to
showcase some breakthrough real world application demos that were
presented at ROSCON '13 at Stuttgart, that would get the geeks in us
excited. There will also be some interesting pointers of how you could
use it , extend it and get involved.&lt;/p&gt;
</summary></entry><entry><title>Python In Education (Panel Discussion)</title><link href="https://pyvideo.org/pycon-india-2013/python-in-education-panel-discussion.html" rel="alternate"></link><published>2013-08-30T00:00:00+00:00</published><updated>2013-08-30T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2013-08-30:pycon-india-2013/python-in-education-panel-discussion.html</id><summary type="html"></summary></entry></feed>