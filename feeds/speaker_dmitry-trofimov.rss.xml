<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 23 Feb 2019 00:00:00 +0000</lastBuildDate><item><title>Best tools for Jupyter notebooks</title><link>https://pyvideo.org/pycon-philippines-2019/best-tools-for-jupyter-notebooks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The jupyter notebook is now a default format for scripting in many areas of computer engineering and education like data science, machine learning, and artificial intelligence. But what are the most efficient practices to work with Jupyter notebooks to get the most out of this technology? In this talk Dmitry Trofimov, team lead of PyCharm IDE, will show how different tools help you solve your daily tasks using Jupyter notebooks: JupyterLab, Hydrogen plugin for Atom, VS Code, and PyCharm (all tools are open-sourced). We will discuss their pros and cons and look at them in action.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dmitry Trofimov</dc:creator><pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-02-23:pycon-philippines-2019/best-tools-for-jupyter-notebooks.html</guid><category>Jupyter</category><category>jupyter lab</category><category>jupyterlab</category></item><item><title>42 PyCharm Tips and Tricks</title><link>https://pyvideo.org/pycon-italia-2017/42-pycharm-tips-and-tricks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyCharm, a Python IDE with its free and open-source community edition,
in last several years has become a tool of choice for more and more
Python developers. But not everybody uses its full power. Moreover, most
only use a fraction of the functionality it provides.&lt;/p&gt;
&lt;p&gt;The reality is that an IDE is not just about a set of integrated tools,
but an environment that understands the semantics of your project, of
what you’re doing. It can leverage this to provide you with
functionality that can make repetitive mundane tasks become
frictionless, as well as give insight into potential problems.&lt;/p&gt;
&lt;p&gt;In this session, we will go through 42 the most powerful features the
IDE offers and whether you do web development or work with data using
Python, you will benefit knowing how the IDE can leverage your
programming skills.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dmitry Trofimov</dc:creator><pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-08:pycon-italia-2017/42-pycharm-tips-and-tricks.html</guid><category>text-editors</category><category>Pycharm</category><category>IDE</category></item><item><title>7 years of supporting Django, Flask, Pyramid, and friends</title><link>https://pyvideo.org/pyconweb-2017/7-years-of-supporting-django-flask-pyramid-and-friends.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The first version of PyCharm IDE was released in 2010 and since the first release, it featured a special support for Django framework. After that, the support for Flask, Pyramid, and Web2Py wasn't long in coming.
But what does it means to have to support a web framework in a popular IDE? What obstacles are on the way?
In this talk looking at the well-known Python web frameworks and templating languages from the point of view of tools developer, you will learn about their differences and peculiarities, go deep into their implementation and see some very interesting examples of Python usages.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dmitry Trofimov</dc:creator><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-28:pyconweb-2017/7-years-of-supporting-django-flask-pyramid-and-friends.html</guid><category>pycharm</category></item><item><title>PyCharm tips and tricks</title><link>https://pyvideo.org/europython-2017/pycharm-tips-and-tricks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyCharm, a Python IDE with its free and open-source community
edition, in last several years has become a tool of choice for more
and more Python developers. But not everybody uses its full power.
Moreover, most only use a fraction of the functionality it provides.&lt;/p&gt;
&lt;p&gt;The reality is that an IDE is not just about a set of integrated
tools, but an environment that understands the semantics of your
project, of what you’re doing. It can leverage this to provide you
with functionality that can make repetitive mundane tasks become
frictionless, as well as give insight into potential problems.&lt;/p&gt;
&lt;p&gt;In this session, we will go through the most powerful features the
IDE offers and whether you do web development or work with data using
Python, you will benefit knowing how the IDE can leverage your
programming skills.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dmitry Trofimov</dc:creator><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-12:europython-2017/pycharm-tips-and-tricks.html</guid></item><item><title>Profiling the Unprofilable</title><link>https://pyvideo.org/pycon-de-2016/profiling-the-unprofilable.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When a program is not fast enough, we call on the profiler to save us.But what happens when the program is hard to profile, like for instance the Python Debugger? In this talk we're going dive deep into Vmprof, a Python profiler, and see how it helps us find out why a debugger can be slow. Once we find the culprit, we'll use Cython to optimise things.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dmitry Trofimov</dc:creator><pubDate>Sat, 29 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-29:pycon-de-2016/profiling-the-unprofilable.html</guid></item><item><title>Profiling the Unprofilable</title><link>https://pyvideo.org/pycon-apac-2016/profiling-the-unprofilable.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;발표자:  Dmitry Trofimov / trofimov
슬라이드:  &lt;a class="reference external" href="https://github.com/pythonkr/pyconapac-2016-files/raw/master/20160814-104-27-Dmitry%20Trofimov.pdf"&gt;https://github.com/pythonkr/pyconapac-2016-files/raw/master/20160814-104-27-Dmitry%20Trofimov.pdf&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dmitry Trofimov</dc:creator><pubDate>Tue, 30 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-30:pycon-apac-2016/profiling-the-unprofilable.html</guid></item><item><title>Can Rust make Python shine?</title><link>https://pyvideo.org/europython-2015/can-rust-make-python-shine.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dmitry Trofimov - Can Rust make Python shine?
[EuroPython 2015]
[20 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;Rust is a new programming language from Mozilla. It is fast, safe and
beautiful. It is also a very good option when needing performance. In
this talk we're going to look at Rust and see what it offers and how
we can leverage it as Python developers. And we'll do it with a case
study: a statistical profiler for Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dmitry Trofimov</dc:creator><pubDate>Wed, 05 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-05:europython-2015/can-rust-make-python-shine.html</guid></item><item><title>Profiling the unprofilable</title><link>https://pyvideo.org/europython-2016/profiling-the-unprofilable.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dmitry Trofimov - Profiling the unprofilable
[EuroPython 2016]
[18 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/profiling-the-unprofilable"&gt;https://ep2016.europython.eu//conference/talks/profiling-the-unprofilable&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;When a program is not fast enough, we call on the profiler to save us.
But what happens when the program is hard to profile, like for
instance the Python Debugger? In this talk we're going dive deep into
Vmprof, a Python profiler, and see how it helps us find out why a
debugger can be slow. Once we find the culprit, we'll use Cython to
optimise things.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Profile is the main way to find slow parts of your application, and
it's often the first approach to performance optimisation. While there
are quite a few profilers, many of them have limitations. In this talk
we're going to learn about the new statistical profiler for Python
called Vmprof that is actively being developed by the PyPy team. We'll
see how it is implemented and how to use it effectively. We will apply
it to an open source project, the Pydev.Debugger, a popular debugger
used in IDE's such as Pydev and PyCharm, and with the help of Cython
which we'll also dig into, we'll work on optimising the issues we
find.&lt;/p&gt;
&lt;p&gt;Whether it's a Python debugger, a Web Application or any other kind of
Python development you're doing, you'll learn how to effectively
profile and resolve many performance issues.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dmitry Trofimov</dc:creator><pubDate>Fri, 05 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-05:europython-2016/profiling-the-unprofilable.html</guid></item><item><title>Python Debugger Uncovered</title><link>https://pyvideo.org/europython-2014/python-debugger-uncovered.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will explain how to implement a debugger for Python. We'll
start with setting a simple trace function, then look how it is
implemented in modern IDEs like PyCharm and Pydev. Then we go further in
the details and uncover the tricks used to implement some cool features
like exception handling and multiprocess debugging.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presentation describes how to implement debugger for Python and has 4
parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Tracing Python code&lt;/p&gt;
&lt;p&gt;Explains how to use trace function&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Debugger Architecture&lt;/p&gt;
&lt;p&gt;Explains which parts consists of a modern full-fledged debugger.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;A Bit of Details&lt;/p&gt;
&lt;p&gt;Explains how to make code to work for all python versions and
implementations, survive gevent monkey-patching etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Cool Features&lt;/p&gt;
&lt;p&gt;Explains how to implement exception handling and multiprocess
debugging&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dmitry Trofimov</dc:creator><pubDate>Thu, 24 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-24:europython-2014/python-debugger-uncovered.html</guid></item><item><title>R0 DAY1-02 Python Debugger Uncovered - Dmitry Trofimov (PyCon APAC 2015)</title><link>https://pyvideo.org/pycon-apac-2015/r0-day1-02-python-debugger-uncovered-dmitry-pycon.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dmitry Trofimov&lt;/p&gt;
&lt;p&gt;This talk will explain how to implement a debugger for Python. We'll start with simple command line debugger, then look how it is implemented in modern IDEs like PyCharm and Pydev. Then we go further in the details and uncover the tricks used to implement some interesting features like multiprocess debugging, debugging of Django and Jinja2 templates and attaching to a launched Python process.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Working on PyCharm project I put my efforts into making development in Python even more pleasurable.&lt;/p&gt;
&lt;p&gt;Twitter &amp;#64;DmitryTrofimov
組織/公司 JetBrains
頭銜 PyCharm Team Lead&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tw.pycon.org/2015apac/zh/program/39"&gt;https://tw.pycon.org/2015apac/zh/program/39&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dmitry Trofimov</dc:creator><pubDate>Mon, 24 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-24:pycon-apac-2015/r0-day1-02-python-debugger-uncovered-dmitry-pycon.html</guid></item></channel></rss>