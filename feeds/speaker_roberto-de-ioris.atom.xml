<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_roberto-de-ioris.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-07-11T00:00:00+00:00</updated><entry><title>Writing websockets applications with uWSGI and Gevent</title><link href="https://pyvideo.org/europython-2013/writing-websockets-applications-with-uwsgi-and-gevent.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/writing-websockets-applications-with-uwsgi-and-gevent.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;During the 1.9 development cycle, uWSGI got high-performance websockets
support. Even if lot of pure-python technologies exist for that purpose,
none of them has/had the required performance to fit my company
development target: browser games. Thanks to the high concurrency given
by Gevent, and a couple more of uWSGI-specific features we accomplished
our task. This talk will show you how to use both uWSGI and Gevent to
write real time web apps (and games ;)&lt;/p&gt;
</summary><category term="websockets"></category></entry><entry><title>Corso di sopravvivenza per sviluppatori OpenSource</title><link href="https://pyvideo.org/europython-2013/corso-di-sopravvivenza-per-sviluppatori-opensource.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/corso-di-sopravvivenza-per-sviluppatori-opensource.html</id><summary type="html"></summary><category term="humor"></category></entry><entry><title>Unreal Engine 4 e Python: Ora si Puo'</title><link href="https://pyvideo.org/pycon-italia-2017/unreal-engine-4-e-python-ora-si-puo.html" rel="alternate"></link><published>2017-04-07T00:00:00+00:00</published><updated>2017-04-07T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2017-04-07:pycon-italia-2017/unreal-engine-4-e-python-ora-si-puo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Unreal Engine e’ la piattaforma per lo sviluppo di videogiochi tripla A
piu’ apprezzata nell’industria del settore. Da Agosto 2016 ho avuto
l’onore di integrare il supporto Python sia nel runtime che nell’editor
stesso, permettendo di sviluppare i propri giochi usando esclusivamente
Python o fare scripting dell’editor per automatizzare la pipeline di
lavoro.&lt;/p&gt;
&lt;p&gt;Il talk mostrera’ quali sono stati i passaggi salienti
dell’integrazione, come l’industria videoludica (ma anche quella
cinematografica) stanno utilizzando il plugin e quali saranno i futuri
sviluppi. Il tutto sara’ condito da un paio di demo interattive
realizzate in python.&lt;/p&gt;
</summary><category term="game-development"></category></entry><entry><title>Making Games with Python: Mission Impossible?</title><link href="https://pyvideo.org/europython-2017/making-games-with-python-mission-impossible.html" rel="alternate"></link><published>2017-07-11T00:00:00+00:00</published><updated>2017-07-11T00:00:00+00:00</updated><author><name>Martin Christen</name></author><id>tag:pyvideo.org,2017-07-11:europython-2017/making-games-with-python-mission-impossible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A discussion about making full-featured, commercial games in python,
both 2D and 3D.&lt;/p&gt;
&lt;p&gt;Looking at state of the art approaches to using python in gaming, we
will compare the alternatives: pygame (2D API), OpenGL (via
pygame/pySDL2), Unreal Engine 4 and the Godot Engine (with further
comparison to Unity 3D game engine).&lt;/p&gt;
&lt;p&gt;We will also look at other benefits of using python in the gaming
context, such as integration with 3D modelling software, scripting
the asset pipeline and GIS data integration.&lt;/p&gt;
&lt;p&gt;Finally, can (and should) python move beyond being the language of
plugins and scripts, and become the main language for creating game
development projects?&lt;/p&gt;
</summary></entry><entry><title>AAA Games with Unreal Engine 4 and Python</title><link href="https://pyvideo.org/europython-2017/aaa-games-with-unreal-engine-4-and-python.html" rel="alternate"></link><published>2017-07-10T00:00:00+00:00</published><updated>2017-07-10T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2017-07-10:europython-2017/aaa-games-with-unreal-engine-4-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Unreal Engine is the game industry leading platform for developing
AAA Videogames. Now you can script your gameplay logic, automate your
development pipelines or test your productions with Python too. The
UnrealEnginePython plugin aims at covering the whole feature set of
Unreal Engine 4 and extending it with the huge modules library
available in the Python world.&lt;/p&gt;
&lt;p&gt;The talk will briefly introduce the Unreal Engine platform and its
capabilities as well as how it can be programmed without the python
plugin (Blueprints and C++).&lt;/p&gt;
&lt;p&gt;The biggest part of the talk will focus on how the Unreal Engine 4
patterns are mapped to the python plugin, what is already working and
what you can expect from future developments.&lt;/p&gt;
&lt;p&gt;No prior knowledge of game/graphics programming is required,  and if
you are in the movie or cartoon industry you can get interesting
infos too&lt;/p&gt;
</summary></entry><entry><title>Divertiamoci con i Websocket (ma senza nodejs...)</title><link href="https://pyvideo.org/pycon-italia-2014/divertiamoci-con-i-websocket-ma-senza-nodejs.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/divertiamoci-con-i-websocket-ma-senza-nodejs.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I Websocket sono probabilmente la feature piu' interessante del mondo HTML5. Ma perche' tutti si ostinano a presentarli usando javascript server side (nodejs)? Si possono utilizzare i websocket con qualsiasi linguaggio ed ovviamente anche python. Il talk illustrera' i vari approcci (e prodotti) disponibili e le problematiche da affrontare in questo modello di sviluppo.&lt;/p&gt;
</summary></entry><entry><title>Perche' deployare applicazioni web e' cosi' difficile ???</title><link href="https://pyvideo.org/pycon-italia-2014/perche-deployare-applicazioni-web-e-cosi-difficile.html" rel="alternate"></link><published>2014-05-24T00:00:00+00:00</published><updated>2014-05-24T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2014-05-24:pycon-italia-2014/perche-deployare-applicazioni-web-e-cosi-difficile.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;E' probabilmente il rant piu' diffuso tra chi e' gia' stato convertito all'uso del pitone. E' un rant inesistente nel mondo php (piu' o meno) e da chi ancora si ostina ad usare i CGI o il vecchio asp. E' un rant inesistente tra gli sviluppatori Java, ma esplode di nuovo in chiunque di loro provi a capire come funziona il deployment di applicazioni web in ambiente Java. Mi affaccio nel mondo Ruby e osservo la stessa cosa. Che sta succedendo ? Perche' la parte meno divertente (e per molti la piu' irrilevante) dello sviluppare una applicazione web sta facendo impazzire tutti ? Cosa e' cambiato ? E' perche' alcuni individui ne sono meno affetti di altri ? Provero' a fornire le mie teorie dopo 13 anni di lotte in prima linea.&lt;/p&gt;
</summary></entry><entry><title>Modern OpenGL with Python</title><link href="https://pyvideo.org/europython-2016/modern-opengl-with-python.html" rel="alternate"></link><published>2016-08-01T00:00:00+00:00</published><updated>2016-08-01T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2016-08-01:europython-2016/modern-opengl-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The OpenGL api is one of the oldest (and most used) graphics library
in both the gaming and simulations world. In latest years the api has
been extremely re-designed to support modern hardware features
available in GPUs.
Can we build realtime graphics application with Python using OpenGL ?
Well, obviously Yes !&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;The talk will introduce how  2D and 3D graphics works, which math is
required for mastering them and why strong hardware cooperation and
heavy optimizations have been required since the very beginning of
gaming development history.&lt;/p&gt;
&lt;p&gt;Once the theory is &amp;quot;almost&amp;quot; clear, we can start talking about OpenGL,
which problems tries to solve and how it evolved in more than 20
years.&lt;/p&gt;
&lt;p&gt;The last (and the biggest) part of the talk will show how to interface
Python with OpenGL, how to draw simple 2D sprites and how to load and
show 3D models using simple lighting models.&lt;/p&gt;
&lt;p&gt;Warning: OpenGL shaders (the custom code you upload in the GPU) are
written in GLSL, a pseudo-c dialect, so expect a bit of lower-level
programming&lt;/p&gt;
</summary></entry><entry><title>uWSGI, il coltellino svizzero (di MacGyver) del deploy</title><link href="https://pyvideo.org/europython-2011/uwsgi-il-coltellino-svizzero-di-macgyver-del-d.html" rel="alternate"></link><published>2011-07-13T00:00:00+00:00</published><updated>2011-07-13T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2011-07-13:europython-2011/uwsgi-il-coltellino-svizzero-di-macgyver-del-d.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Roberto De Ioris - 21 June 2011 in &amp;quot;Track Italiana Big
Mac&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La prima parte del talk introdurra' la storia di uWSGI, dall'idea
iniziale alla messa in produzione dei primi lavori, fino alla sua
inclusione nei progetti Cherokee e Nginx.&lt;/p&gt;
&lt;p&gt;Seguira' una serie di esempi di deploy in ambienti ostili (a livello di
sicurezza, non faremo deploy nella jungla) o con risorse fortemente
limitate fino all'utilizzo delle funzionalita' integrate per il
clustering.&lt;/p&gt;
&lt;p&gt;Il talk si rivolge a tutti gli sviluppatori di applicazioni web che sono
alla ricerca di un ambiente robusto e veloce per i propri lavori, o a
chi gia' utilizza uWSGI e vuole conoscere qualcuna delle nuove
funzionalita' introdotte nel ramo di sviluppo.&lt;/p&gt;
</summary><category term="deploy"></category><category term="web"></category></entry><entry><title>Scegliere con saggezza il proprio WSGI server</title><link href="https://pyvideo.org/europython-2012/scegliere-con-saggezza-il-proprio-wsgi-server.html" rel="alternate"></link><published>2012-07-06T00:00:00+00:00</published><updated>2012-07-06T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2012-07-06:europython-2012/scegliere-con-saggezza-il-proprio-wsgi-server.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2012] Roberto De Ioris - 5 JULY 2012 in &amp;quot;Track Spaghetti&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il mondo dei WSGI server e’ costellato di miti e leggende. La maggior
parte degli utenti (soprattutto quelli alle prime armi) tende a
sceglierli in base a fattori poco rilevanti o facendosi indirizzare da
analisi completamente errate. Il talk descrivera’ cosa e’ un WSGI
server, quali sono le scelte disponibili nel mondo opensource e come
scegliere il prodotto piu’ adatto alle proprie esigenze&lt;/p&gt;
</summary></entry><entry><title>Usiamo la api di uWSGI per scrivere applicazioni meno noiose</title><link href="https://pyvideo.org/europython-2012/usiamo-la-api-di-uwsgi-per-scrivere-applicazioni.html" rel="alternate"></link><published>2012-07-06T00:00:00+00:00</published><updated>2012-07-06T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2012-07-06:europython-2012/usiamo-la-api-di-uwsgi-per-scrivere-applicazioni.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2012] Roberto De Ioris - 4 JULY 2012 in &amp;quot;Track Big Mac&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;uWSGI oltre a fornire un ambiente per eseguire le vostre applicazioni
python/WSGI, offre una serie di funzionalita’ che estendono le
possibilita’ dei vostri progetti. La api di uWSGI esporta funzioni per
gestire il tempo, i task asincroni, il monitoraggio dei file e tante
altre robe divertenti che vi eviteranno di istallare tonnellate di
grassi demoni o dire di “no” al cliente. Il talk mostrera’ vari utilizzi
della api (in ordine di complessita’) e qualcuna delle nuove features in
sviluppo&lt;/p&gt;
</summary></entry><entry><title>Esageriamo con uWSGI e Nginx</title><link href="https://pyvideo.org/europython-2012/esageriamo-con-uwsgi-e-nginx.html" rel="alternate"></link><published>2012-07-04T00:00:00+00:00</published><updated>2012-07-04T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2012-07-04:europython-2012/esageriamo-con-uwsgi-e-nginx.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2012] Roberto De Ioris - 3 JULY 2012 in &amp;quot;Track Big Mac&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Siamo tutti capaci di far girare una applicazione WSGI su un server
(indipendentemente da quale sia), ma che succede quando ne vogliamo
eseguire centinaia scritte da programmatori che non conosciamo (o che
conosciamo fin troppo bene e quindi non vorremmo avere sui nostri
server) ? uWSGI e’ un application server estremamente avanzato, usato
principalmente per l’esecuzione di applicazioni WSGI. Nginx e’ un
webserver estremamente performante e leggero. Il task mostrera’ come
usare entrambi per costruire una infrastruttura per il deployment di
applicazioni WSGI per voi, i vostri collaboratori e i vostri clienti,
tenendo i costi hardware (e umani) al minimo sindacale&lt;/p&gt;
</summary></entry><entry><title>Python e videogiochi: come siamo messi?</title><link href="https://pyvideo.org/pycon-italia-2015/python-e-videogiochi-come-siamo-messi.html" rel="alternate"></link><published>2015-05-29T00:00:00+00:00</published><updated>2015-05-29T00:00:00+00:00</updated><author><name>Roberto De Ioris</name></author><id>tag:pyvideo.org,2015-05-29:pycon-italia-2015/python-e-videogiochi-come-siamo-messi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il videogioco e’ probabilmente la massima espressione del mondo
tecnologico . Programmatori, grafici, musicisti, sceneggiatori lavorano
insieme nel costruire qualcosa che spesso si avvicina all’arte piu’ che
alla scienza. Come si colloca python in questo mondo ? C’e’ ancora
spazio per lui ? C’e’ mai stato ? Ce ne sara’ ? Possiamo fare qualcosa,
come community, per migliorare le cose ?&lt;/p&gt;
</summary></entry></feed>