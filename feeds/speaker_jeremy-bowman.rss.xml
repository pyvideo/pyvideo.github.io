<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Jeremy Bowman</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 22 Oct 2021 00:00:00 +0000</lastBuildDate><item><title>Herding Ponies: Coordinating and Automating Django Upgrades Across 100+ Repositories</title><link>https://pyvideo.org/djangocon-us-2021/herding-ponies-coordinating-and-automating-django-upgrades-across-100-repositories.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the course of upgrading multiple services (including one large enough to run afoul of seemingly every backwards-incompatible change) to new Django LTS releases several times, the Open edX project has developed a set of procedures and tools to help streamline the process.  Given how useful we've found these, and how late we often see other packages tackling these upgrades, we'd like to share what we've learned about keeping up with the upgrade treadmill.  Among the topics I'll cover are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Code refactoring scripts (often using [Bowler](&lt;a class="reference external" href="https://pybowler.io/"&gt;https://pybowler.io/&lt;/a&gt;)) to automatically fix some of the most common breaking changes&lt;/li&gt;
&lt;li&gt;Scripts to automatically update tox and continuous integration configurations to start testing new Django versions (and drop support for ones no longer needed)&lt;/li&gt;
&lt;li&gt;Scripts to track which dependencies claim to support the target release already, and manual processes to manage ones which don't use Trove classifiers correctly&lt;/li&gt;
&lt;li&gt;A script to analyze and summarize deprecation warnings captured by pytest&lt;/li&gt;
&lt;li&gt;Upgrading dependencies proactively to reduce the work needed at Django upgrade time&lt;/li&gt;
&lt;li&gt;How to identify difficult parts of the upgrade early enough to solve them in time&lt;/li&gt;
&lt;li&gt;How to handle package dependencies which don't support your target Django version by the time you need them to&lt;/li&gt;
&lt;li&gt;How to track and schedule all of the above across dozens of repositories&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All the scripts presented here are open source; links to the code will be provided, and I'll be here for the live chat if anyone wants to help refine them further.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeremy Bowman</dc:creator><pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-10-22:/djangocon-us-2021/herding-ponies-coordinating-and-automating-django-upgrades-across-100-repositories.html</guid><category>DjangoCon US 2021</category></item></channel></rss>