<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Qiusheng Wu</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_qiusheng-wu.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-07-08T00:00:00+00:00</updated><subtitle></subtitle><entry><title>An Introduction to Cloud-Based Geospatial Analysis with Earth Engine and Geemap</title><link href="https://pyvideo.org/scipy-2023/an-introduction-to-cloud-based-geospatial-analysis-with-earth-engine-and-geemap.html" rel="alternate"></link><published>2023-07-10T00:00:00+00:00</published><updated>2023-07-10T00:00:00+00:00</updated><author><name>Steve Greenberg</name></author><id>tag:pyvideo.org,2023-07-10:/scipy-2023/an-introduction-to-cloud-based-geospatial-analysis-with-earth-engine-and-geemap.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to cloud-based geospatial analysis with Earth Engine and the geemap Python package. We will cover the basics of Earth Engine data types and how to visualize, analyze, and export Earth Engine data in a Jupyter environment using geemap. We will also demonstrate how to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial is an introduction to cloud-based geospatial analysis with Earth Engine and the geemap Python package. We will cover the basics of Earth Engine data types and how to visualize, analyze, and export Earth Engine data in a Jupyter environment using geemap. We will also demonstrate how to develop and deploy interactive Earth Engine web apps. Throughout the session, practical examples and hands-on exercises will be provided to enhance learning. The attendees should have a basic understanding of Python and Jupyter Notebooks. Familiarity with Earth science and geospatial datasets is not required, but will be useful.&lt;/p&gt;
</content><category term="SciPy 2023"></category></entry><entry><title>Bridging the gap between Earth Engine and the Scientific Python Ecosystem</title><link href="https://pyvideo.org/scipy-2024/bridging-the-gap-between-earth-engine-and-the-scientific-python-ecosystem.html" rel="alternate"></link><published>2024-07-08T00:00:00+00:00</published><updated>2024-07-08T00:00:00+00:00</updated><author><name>Qiusheng Wu</name></author><id>tag:pyvideo.org,2024-07-08:/scipy-2024/bridging-the-gap-between-earth-engine-and-the-scientific-python-ecosystem.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Google Earth Engine's new data extraction interfaces seamlessly transfer geospatial data into familiar Python formats provided by NumPy, Pandas, GeoPandas, and Xarray. This integration empowers you to harness Earth Engine's vast data catalog and compute power directly within your preferred Python workflows. For example, the Xee library leverages Xarray's …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Google Earth Engine's new data extraction interfaces seamlessly transfer geospatial data into familiar Python formats provided by NumPy, Pandas, GeoPandas, and Xarray. This integration empowers you to harness Earth Engine's vast data catalog and compute power directly within your preferred Python workflows. For example, the Xee library leverages Xarray's lazy evaluation and Dask to streamline the extraction and analysis of Earth Engine data, offering a more Pythonic alternative to traditional image exports. Earth Engine's new data extraction interfaces unlock fresh geospatial analysis potential by leveraging the unique strengths of both the scientific Python ecosystem and Earth Engine.&lt;/p&gt;
</content><category term="SciPy 2024"></category></entry></feed>