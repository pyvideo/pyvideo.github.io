<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Python Web Conf 2021</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 22 Mar 2021 00:00:00 +0000</lastBuildDate><item><title>A Year Without Pants: Strategies for Successful Remote Work</title><link>https://pyvideo.org/python-web-conf-2021/a-year-without-pants-strategies-for-successful-remote-work.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;A Year Without Pants: Strategies for Successful Remote Work&amp;quot; by: Mason Egger&lt;/p&gt;
&lt;p&gt;2020 was the year of forced remote work. People struggle with this change due to lack of guidance on how to manage this shift. Due to this, many people have developed a negative opinion of remote work. However, remote work can be liberating. So how can you make working remotely enjoyable? From daily routines to simulated commutes I’ll discuss strategies for making remote work comfortable, productive, and enjoyable.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mason Egger</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/a-year-without-pants-strategies-for-successful-remote-work.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Adding Custom Control Panels to Your Plone Add-On</title><link>https://pyvideo.org/python-web-conf-2021/adding-custom-control-panels-to-your-plone-add-on.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Adding Custom Control Panels to Your Plone Add-On&amp;quot; by: Annette Lewis&lt;/p&gt;
&lt;p&gt;You’ve developed your add-on, and it’s working great. Then, you realize there’s a value that needs changing again and again. Rather than hard-coding these options in, take advantage of Plone’s registry and create your own custom control panel to allow editable options through-the-web.
I’ll walk through the steps of adding a custom control panel to a theme add-on including:
- Storing custom settings in the registry
- Creating a form to manage these settings
- Registering the control panel&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Annette Lewis</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/adding-custom-control-panels-to-your-plone-add-on.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>ADHDidn't: 7 Things That Wrecked My Productivity During WFH, and How I Dealt</title><link>https://pyvideo.org/python-web-conf-2021/adhdidnt-7-things-that-wrecked-my-productivity-during-wfh-and-how-i-dealt.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;ADHDidn't: 7 Things That Wrecked My Productivity During WFH, and How I Dealt With Them&amp;quot; by: Eli Holderness
I’m just going to say it: I’m Bad at working from home. That’s a problem, because I’ve been doing it for the last year, it looks like we might have more than a little while to go yet before office life resumes, and my ADHD isn’t exactly going anywhere in the meantime.&lt;/p&gt;
&lt;p&gt;Even aside from the myriad ways that remote working can expose issues in a company’s management or communications infrastructure, there are a whole host of problems that can arise on a personal level. In this talk, I discuss some of the ones I’ve grappled with over the last year.&lt;/p&gt;
&lt;p&gt;Can’t stay focused? End up endlessly doomscrolling, or procrastinating for hours before really starting to work for the day? Trouble sleeping, or zoning out during the day with nobody around to keep you on track? If that sounds familiar, stop by and maybe get some ideas of things you can do about it - or at least feel less alone!&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eli Holderness</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/adhdidnt-7-things-that-wrecked-my-productivity-during-wfh-and-how-i-dealt.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>After Event Social: Bartending Basics</title><link>https://pyvideo.org/python-web-conf-2021/after-event-social-bartending-basics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;After Event Social: Bartending Basics&amp;quot; by: Tito Sierra&lt;/p&gt;
&lt;p&gt;Learn the basics of bartending at home. Topics include a review of bar tools, glassware, liquor, mixing ingredients, and drink preparation. No slides… learn how to mix proper cocktails through live demonstration in the presenter’s kitchen.&lt;/p&gt;
&lt;p&gt;Bartending Basics Guide at: &lt;a class="reference external" href="https://2021.pythonwebconf.com/images/bartending-basics-python-web-conf-2021-1.pdf"&gt;https://2021.pythonwebconf.com/images/bartending-basics-python-web-conf-2021-1.pdf&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tito Sierra</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/after-event-social-bartending-basics.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Automating AWS with Python: The Easy Way To The Cloud</title><link>https://pyvideo.org/python-web-conf-2021/automating-aws-with-python-the-easy-way-to-the-cloud.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Automating AWS with Python: The Easy Way To The Cloud&amp;quot; by David Sol
Automation is key for efficient cloud management, and Python is one of the easiest ways of achieve it. Using CDK (Cloud Development Kit) for provisioning the infrastructure, and the Boto3 library to automate the operation of the cloud allows us to use AWS to its fullest.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Sol</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/automating-aws-with-python-the-easy-way-to-the-cloud.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Build Cloud Infrastructure Using Python</title><link>https://pyvideo.org/python-web-conf-2021/build-cloud-infrastructure-using-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Build Cloud Infrastructure Using Python&amp;quot; by: Sohan Maheshwar
Infrastructure as code (IaC) is the process of managing and provisioning computer data centers through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools. IaC is gaining popularity worldwide because it of its easier cloud onboarding, faster development process, customizability and shareability.&lt;/p&gt;
&lt;p&gt;This talk will show how you can build cloud infrastructure using Python and serves as a good introduction to what IaC is.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sohan Maheshwar</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/build-cloud-infrastructure-using-python.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Caching Best Practices</title><link>https://pyvideo.org/python-web-conf-2021/caching-best-practices.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Caching Best Practices&amp;quot; by: Moshe Zadka&lt;/p&gt;
&lt;p&gt;Using a database? A microservice? Then you have probably considered whether to cache some of the data you retrieve from them. Caching is supposed to make the application go fast, right? Sometimes! Caching is a subtle topic. Using caches needs to be done with care. This care should manifest beforehand, by thinking ahead of time about the data needs and latencies involved. The care should manifest while writing the code, refactoring as appropriate to take proper advantage of the cache. The care must even be applied after the code is written, by monitoring cache hit/miss rates and alerting appropriately if the cache patterns change.&lt;/p&gt;
&lt;p&gt;Using a cache well can make an application faster and cheaper to run. Using a cache badly can make an application slower, and consume more resources. Learn how to measure twice, and cache once.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Moshe Zadka</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/caching-best-practices.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Can We Deploy Yet?</title><link>https://pyvideo.org/python-web-conf-2021/can-we-deploy-yet.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Can We Deploy Yet?&amp;quot; by: Anastasiia Tymoshchuk&lt;/p&gt;
&lt;p&gt;Do you think your code is ready for production?
This talk contains a checklist for your Python code before you go to production:
- Exception handling
- How to become a detective or meaningful logging
- From code review to production or effective CI/CD
- Are your docker images secure? No problem!
- More hints and ideas&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anastasiia Tymoshchuk</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/can-we-deploy-yet.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>CI/CD Agility and Controlling Pipeline Sprawl</title><link>https://pyvideo.org/python-web-conf-2021/cicd-agility-and-controlling-pipeline-sprawl.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;CI/CD Agility and Controlling Pipeline Sprawl&amp;quot; by: Angel Rivera
The adoption of CI/CD has automated the process of how DevOps teams build, test, and deliver software at rapid speeds and with high confidence. Although CI/CD platforms offer many benefits, in the attempt to make sophisticated pipelines, many teams run into the issue of “Pipeline Sprawl”. Pipeline sprawl makes it difficult for DevOps teams to identify and reuse common execution patterns which diminishes their ability to efficiently ship new code.&lt;/p&gt;
&lt;p&gt;In this talk, Angel will discuss the common pain points associated with existing CI/CD platforms. The talk will pull in examples from his recent experience and conversations with DevOps teams from across the open source community, startups, and large enterprises. Attendees will learn technical strategies to develop optimized pipeline configurations and diminish potentially costly vendor-lock in.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Angel Rivera</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/cicd-agility-and-controlling-pipeline-sprawl.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Cloud Parallelism With Serverless On AWS</title><link>https://pyvideo.org/python-web-conf-2021/cloud-parallelism-with-serverless-on-aws.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Cloud Parallelism With Serverless On AWS&amp;quot; by: Ben Ellerby
Serverless offers scalability and speed with a nice abstraction layer to many web and mobile applications, as well as massive concurrency which can be run large workloads in parallel.&lt;/p&gt;
&lt;p&gt;This talk will discuss what is possible with Serverless for parallel algorithms and services to use.&lt;/p&gt;
&lt;p&gt;We will cover:
- What Serverless is (AWS Lambda and beyond)
- The Serverless Services on AWS and other cloud providers
- How to write code for Serverless
- How parallelism works on Serverless
- How to orchestrate parallel workloads with Serverless Services like AWS Step Functions&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Ellerby</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/cloud-parallelism-with-serverless-on-aws.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Complete Python Toolbox For Modern Developers</title><link>https://pyvideo.org/python-web-conf-2021/complete-python-toolbox-for-modern-developers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Complete Python Toolbox For Modern Developers&amp;quot; by: Jan Giacomelli
This talk looks at the various tools that simplify the development process for any developer, independent of their skill level. It starts with project creation with dependency management. It then continues on to look at tools used for testing, checking code quality, and type checking. In the end, we’ll look at documenting code.&lt;/p&gt;
&lt;p&gt;Introduction - 5min
I’ll start with the issues most Python developers face:
- creating and re-creating virtual environments
- installing, uninstalling, and updating dependencies
- writing and running tests
- following consistent code style
- avoiding security vulnerabilities
- documenting code&lt;/p&gt;
&lt;p&gt;Modern Python Environments (dependency and workspace management)
First, we’ll take a look at how to manage Python versions with pyenv. Specifically, how to:
- list available Python versions
- install a specific version
- select a specific version for your current project&lt;/p&gt;
&lt;p&gt;Next, we’ll take a look at managing dependencies. We’ll look at how to manage dependencies with several different tools:
- venv + pip
- Poetry
- pipenv
For each, we’ll look at how to manage dependencies along with the virtual environment.
We’ll finish this section by comparing the tools (their pros and cons, things they support, etc.) to make it easier to choose the right one based on your specific situation.&lt;/p&gt;
&lt;p&gt;Python testing
This section looks at some tools and techniques that help make testing in Python easier.
- Testing with pytest: How to install pytest, structure a project, run assertions, and run tests. We’ll also look at the most used plugins.
- Mocking: How to mock internal methods within your tests.
- Code coverage: We’ll discuss how to measure code coverage, which tool to use, and how to interpret the coverage percentage.&lt;/p&gt;
&lt;p&gt;Python Code Quality
This section answers the following questions:
1. What exactly is code quality?
How do we measure it?
How do we improve code quality and clean up our Python code?
We’ll look at how to improve the quality of your Python code with linters, code formatters, and security vulnerability scanners.&lt;/p&gt;
&lt;p&gt;Python Type Checking
This section answers the following questions:
1. What is type checking?
2. Why do we need it?
3. What’s the difference between static and runtime type checking?
This section looks at what type hints are and how they can benefit you. We’ll also dive into how you can use Python’s type system for type checking.&lt;/p&gt;
&lt;p&gt;Documenting Python Code
This section answers the following questions:
1. Why do you need to document your Python code?
2. What should your project documentation include?
3. How do you write and generate documentation?
This section looks at why you should document your Python code and how to generate project documentation with Sphinx and OpenAPI.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan Giacomelli</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/complete-python-toolbox-for-modern-developers.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Data Lakes and Streams with S3 and Lambda</title><link>https://pyvideo.org/python-web-conf-2021/data-lakes-and-streams-with-s3-and-lambda.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Data Lakes and Streams with S3 and Lambda&amp;quot; by: Justin Garrison
You have a data lake in S3 and it is providing great value. But it's formatted specifically for a single application and difficult to reuse. Should you copy the data and reformat it? Will you need to do that nightly as part of your ETL pipeline? How expensive is it for you to use your own data? In this talk, we'll look at options to transform your data on the fly with Lambda and Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Justin Garrison</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/data-lakes-and-streams-with-s3-and-lambda.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Debugging Your Brain</title><link>https://pyvideo.org/python-web-conf-2021/debugging-your-brain.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Debugging Your Brain&amp;quot; by: Casey Watts
The human brain is buggy. Sometimes your mind distorts reality, gets frustrated with shortcomings, and spirals out of control. With practice, you can debug your brain. Catch those distortions of reality, transform those frustrations into insight, and short-circuit those downward spirals.&lt;/p&gt;
&lt;p&gt;This talk is full of practical techniques, explained via programming metaphors. Each technique is condensed to its core idea, accompanied by just enough story to make it memorable. Specifically: Modeling The Brain, Cognitive Behavioral Therapy, Introspection, Identifying Inputs, Experience Processing, Experience Validation, and Cognitive Restructuring.&lt;/p&gt;
&lt;p&gt;This talk brings together two parts of Casey’s background: psychology and software development. Casey studied neurobiology at Yale University, and he is a co-author on several neurobiology papers. He has worked in software development for 10 years, including at Heroku.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Casey Watts</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/debugging-your-brain.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Debugging Your Plone Site</title><link>https://pyvideo.org/python-web-conf-2021/debugging-your-plone-site.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Debugging Your Plone Site&amp;quot; by: Chrissy Wainwright
Bugs happen. They can be discovered during development, through automated or manual testing, and by clients in production. I will cover basic debugging steps that can work for any type of website, then dive more specifically into debugging in Plone.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chrissy Wainwright</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/debugging-your-plone-site.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Deploying A Simple Python App to Kubernetes/OpenShift</title><link>https://pyvideo.org/python-web-conf-2021/deploying-a-simple-python-app-to-kubernetesopenshift.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Deploying A Simple Python App to Kubernetes/OpenShift&amp;quot; by: JJ Asghar&lt;/p&gt;
&lt;p&gt;JJ will walk you through deploying a simple python application to Kubernetes/OpenShift. We’ll start from the ground up, then get a complete automated build. The goal is to enable your developers to focus on code, not the infrastructure! It’s a chance to see the power of OpenShift and why taking the time to learn cloud native development can get you the velocity you need.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">JJ Asghar</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/deploying-a-simple-python-app-to-kubernetesopenshift.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Deploying a Virtual Event Platform Using Fargate and Terraform</title><link>https://pyvideo.org/python-web-conf-2021/deploying-a-virtual-event-platform-using-fargate-and-terraform.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Deploying a Virtual Event Platform Using Fargate and Terraform&amp;quot; by: Calvin Hendryx-Parker&lt;/p&gt;
&lt;p&gt;Learn to leverage cloud native tools and launch a scalable application into the Cloud with Fargate. We’ll dive in with how to getting up and running fast, but leaving the overhead of managing virtual machines and Kubernetes behind. Create and store the application Docker images in ECR and without touching the AWS console we can create fully Infrastructure as Code automated deployments via CodePipeline into Fargate containers and S3 buckets. Deliver the React application via CloudFront and S3 for full global scalability. Leave the legacy deployments behind and forge bravely into the new world of Cloud applications.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Calvin Hendryx-Parker</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/deploying-a-virtual-event-platform-using-fargate-and-terraform.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Deploying ML Solutions With Low Latency In Python</title><link>https://pyvideo.org/python-web-conf-2021/deploying-ml-solutions-with-low-latency-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Deploying ML Solutions With Low Latency In Python&amp;quot; by: Aditya Lohia
When we aim for better accuracies, sometimes we forget that the algorithms become more massive and slower. This fact renders the algorithms unusable in real-time scenarios. How do you deploy your solution? Which framework to use? Can you use Python for deploying my solution? Can you use Jetson Nano for multi-stream inferencing? If you are curious to solve these questions, join me in this talk to discover TensorRT and DeepStream and how they reduce your algorithm’s latency and memory footprint. NVIDIA TensorRT™ is an SDK for high-performance deep learning inference. It includes a deep learning inference optimizer and runtime that delivers low latency and high-throughput for deep learning inference applications. DeepStream offers a multi-platform scalable framework with TLS security to deploy on edge and connect to any cloud. If you are using a GPU and CUDA/Tensor cores, you can leverage the SDK framework to deploy bigger and better algorithms for your real-time scenarios. The main focus of this talk will be to demonstrate why, where, and how to use TensorRT and DeepStream.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aditya Lohia</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/deploying-ml-solutions-with-low-latency-in-python.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Design Thinking in Artificial Intelligence Systems</title><link>https://pyvideo.org/python-web-conf-2021/design-thinking-in-artificial-intelligence-systems.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Design Thinking in Artificial Intelligence Systems&amp;quot; by: Jatin Gupta
Design Thinking is a sought-after practice in the design world but is hardly talked about in the field of AI. As AI continues to impact millions of people around the world, having a conversation about how design thinking can be used to better design AI systems becomes that much more important.
Broadly, this talk will cover the following topics:
1. Principles of Design Thinking and its significance in AI
2. AI Ethics
3. A set of guiding principles and frameworks that teams can use to design their AI systems
4. Case studies and stories where design thinking can be/has been applied&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jatin Gupta</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/design-thinking-in-artificial-intelligence-systems.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Don’t Panic: Software Teams and the 'Somebody Else’s Problem'</title><link>https://pyvideo.org/python-web-conf-2021/dont-panic-software-teams-and-the-somebody-elses-problem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Don’t Panic: Software Teams and the 'Somebody Else’s Problem'&amp;quot; by: Hayley Denbraver&lt;/p&gt;
&lt;p&gt;Of all the strange things in the galaxy, the SEP Field might be the strangest. A Somebody Else’s Problem field renders something not invisible, but unnoticed. An SEP field relies on people’s natural disposition not to see anything they don’t want to, weren’t expecting, or can’t explain.&lt;/p&gt;
&lt;p&gt;Where might SEP fields be in your software? Where are they in your teams? What intergalactic threat is waiting for you, out in the open but entirely ignored?&lt;/p&gt;
&lt;p&gt;First, don’t panic. Second, make sure you have your towel. Third, forgive the speaker for her Hitchhiker’s Guide to the Galaxy jokes. Finally, confront the problems in front of you. All 42 of them.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hayley Denbraver</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/dont-panic-software-teams-and-the-somebody-elses-problem.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Ejector Seats and Escape Hatches: Designing Your API to Fail</title><link>https://pyvideo.org/python-web-conf-2021/ejector-seats-and-escape-hatches-designing-your-api-to-fail.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Ejector Seats and Escape Hatches: Designing Your API to Fail&amp;quot; by: Meredydd Luff
I hate to break it to you: Your API design isn't perfect. Whatever abstraction you create, it will leak, and it will fail. I don't mean throwing errors; I mean something worse: building an API that doesn't allow what your users need to do.
We've got this problem big-style at Anvil, where we're simplifying web development by letting you build &lt;em&gt;everything&lt;/em&gt;  in Python - including the UI and browser-side code. It's a challenge: the existing HTML/JS/CSS/framework ecosystem is fiendishly complex, and so huge that we can't possibly cover everything in a nice, Pythonic API - however carefully we design it.
So we need to design our APIs to fail - and to fail well. In this talk, I'll be asking:
- How do abstractions fail?
- What happens when your abstraction prevents a user from doing what they need?
- What are common strategies &amp;quot;in the wild&amp;quot;? Do you go down with the ship? Do you eject? Or can you build a real escape hatch?&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Meredydd Luff</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/ejector-seats-and-escape-hatches-designing-your-api-to-fail.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Event-Driven applications: Apache Kafka and Python</title><link>https://pyvideo.org/python-web-conf-2021/event-driven-applications-apache-kafka-and-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Event-Driven applications: Apache Kafka and Python&amp;quot; by: Francesco Tisiot
Code and data go together like tomato and basil; not many applications work without moving data in some way. As our applications modernise and evolve to become more event-driven, the requirements for data are changing. In this session we will explore Apache Kafka, a data streaming platform, to enable reliable real-time data integration for your applications.&lt;/p&gt;
&lt;p&gt;We will look at the types of problems that Kafka is best at solving, and show how to use it in your own applications. Whether you have a new application or are looking to upgrade an existing one, this session includes advice on adding Kafka using the Python libraries and includes code examples (with bonus discussion of pizza toppings) to use.&lt;/p&gt;
&lt;p&gt;With Kafka in place, many things are possible so this session also introduces Kafka Connect, a selection of pre-built connectors that you can use to route events between systems and integrate with other tools. This session is recommended for engineers and architects whose applications are ready for next-level data abilities.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Francesco Tisiot</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/event-driven-applications-apache-kafka-and-python.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Finding, and Leading, with Purpose at Work</title><link>https://pyvideo.org/python-web-conf-2021/finding-and-leading-with-purpose-at-work.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever wanted to be a better leader?
Have you ever wanted to understand people better?
Do you want to have more personal purpose and ability to help others find the same? Join John Qualls as he addresses these questions, and more.&lt;/p&gt;
&lt;p&gt;This tutorial will be broken into three topics:
Topic 1 - Why do I / they behave this way?
- What is purpose?
- What is a purpose driven individual?
- Understanding behaviors and how they drive us
- Why assessments suck!
- Break (10 min)
- Review of a behavior profile (you will have your personal profile distributed to you)
- The 4 big misalignments of people
- Break (2 Min)&lt;/p&gt;
&lt;p&gt;Topic 2 - How soft skills and EQ development is holding you back
- Why are soft skills and EQ important?
- How are they different than behaviorals?
- Break (15 min)
- Review of a soft skill/ EQ profile (you will have your personal profile distributed to you)
- Break (2min)&lt;/p&gt;
&lt;p&gt;Topic 3 - How I / we work together
- You won't get there alone
- Review of Group Behavioral Analytics (We'll review THIS group live)
- Review of Group Soft Skill/ EQ Analytics (We'll review THIS group live)
- Supercharging your professional growth
- Wrap up&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Qualls</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/finding-and-leading-with-purpose-at-work.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>From Code To Community – How Do You Run An Open Source Project?</title><link>https://pyvideo.org/python-web-conf-2021/from-code-to-community-how-do-you-run-an-open-source-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;From Code To Community – How Do You Run An Open Source Project?&amp;quot; by: Uli Hitzel
We’re all using Open Source projects and libraries for the things we build – but who is behind those projects? How do you publish your own stuff in the community ‘App Store’? And most importantly, how do you get people to use your stuff and help make it better?&lt;/p&gt;
&lt;p&gt;In this talk I’ll share my experience starting an Open Source project, we’ll speak about the various ways people can contribute, and what else you need besides being a great developer. Ultimately, I’m hoping to find people who are keen to collaborate on some of the projects I’ve started!&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Uli Hitzel</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/from-code-to-community-how-do-you-run-an-open-source-project.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Hacking Django Channels for Fun (and Profit)</title><link>https://pyvideo.org/python-web-conf-2021/hacking-django-channels-for-fun-and-profit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Hacking Django Channels for Fun (and Profit)&amp;quot; by: Calvin Hendryx-Parker&lt;/p&gt;
&lt;p&gt;Django is growing some great async features and Channels has been great for handling websockets connecting from your visitor's browser. But what happens when you need to do more? What if you want to keep long-running connections from Django to other websockets, such as Discord servers?  How do you do this and still leverage all the batteries included with Django? We will show an approach that makes this all possible and easy as a developer.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Calvin Hendryx-Parker</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/hacking-django-channels-for-fun-and-profit.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>How To Get On This Stage (And What To Do When You Get There)</title><link>https://pyvideo.org/python-web-conf-2021/how-to-get-on-this-stage-and-what-to-do-when-you-get-there.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;How To Get On This Stage (And What To Do When You Get There)&amp;quot; by: Mark Smith
Speaking at a programming conference may seem like an impossible goal for many people, for a number of reasons: fear of public speaking, the feeling that you don’t know enough to give a talk, you don’t think you have any good ideas for a talk, or maybe the idea that public speaking is very difficult. I’m going to persuade you that you should get up on stage and give a talk to your peers. Once I’ve persuaded you that you should give a talk, then I’m going to show you how.&lt;/p&gt;
&lt;p&gt;Coming up with an idea
Coming up with an idea can sometimes be the hardest part! I’ll cover how to get (and keep) ideas by looking at what you do every day, what you know most about, and keeping a notebook of ideas so that when the time comes to submit a proposal, you’ll have plenty of choice.&lt;/p&gt;
&lt;p&gt;Submitting a proposal
Submitting a proposal to a CFP can seem quite daunting. Even if it doesn’t seem daunting, there are a bunch of things you can get wrong that make it less likely for your talk to be accepted. I’ll give you several tips for increasing your chances of being selected. I’ll also talk about rejection and why you shouldn’t feel dejected about being rejected. (It happens to everyone!)&lt;/p&gt;
&lt;p&gt;Writing a talk
I’ll describe some processes for writing a talk and building a slide deck to match (if you want to!) I’ll cover some different styles of public speaking, including how to find your own style, and I’ll talk about live coding. (With a strong recommendation that you shouldn’t do it - at least until you’ve got more experience.)&lt;/p&gt;
&lt;p&gt;Preparation
Practice, practice, practice! Many inexperienced speakers underestimate how much rehearsal is required to give a great talk; I’m going to correct this misunderstanding! I’ll cover some different approaches to ensuring that you’re less nervous when it’s time to step on to the stage, and you’ve maximized your chances of your talk going smoothly.&lt;/p&gt;
&lt;p&gt;Giving your talk
After you’ve had an idea, had your proposal accepted, written your talk, designed your slides, and practiced (and practiced and practiced) it’ll be time to step behind the lectern and give your talk! I’ll give you tried and tested advice from experienced speakers to help your talk go smoothly.&lt;/p&gt;
&lt;p&gt;And you know what? Even if some things go wrong you’ll still be applauded enthusiastically by an audience of your peers!&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Smith</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/how-to-get-on-this-stage-and-what-to-do-when-you-get-there.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>How To Make Meetings Shorter, More Productive, and More Fun!</title><link>https://pyvideo.org/python-web-conf-2021/how-to-make-meetings-shorter-more-productive-and-more-fun.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;How To Make Meetings Shorter, More Productive, and More Fun!&amp;quot; by: Gabrielle Hendryx-Parker
Traditional meetings are plagued by a series of bad practices that leave participants frustrated, angry or bored out of their skulls. Whether it’s a lack of clear agenda, too many participants and no decision-maker, people on their screens not paying attention, or the group going down the rabbit hole on non-critical issues, the time you are spending in this meeting isn’t productive and you know it! Here’s instead a different format that guarantees that meetings start and end on time, keep participants engaged, focus on key issues, and make some serious progress each time the team meets. Oh, and you’ll have fun too. Sounds good? Then let’s dive in.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gabrielle Hendryx-Parker</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/how-to-make-meetings-shorter-more-productive-and-more-fun.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Intro to Pydantic, Run-Time Type Checking For Your Dataclasses</title><link>https://pyvideo.org/python-web-conf-2021/intro-to-pydantic-run-time-type-checking-for-your-dataclasses.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Intro to Pydantic, Run-Time Type Checking For Your Dataclasses&amp;quot; by: Alexander Hultnér&lt;/p&gt;
&lt;p&gt;Want static type checking in run time? Want to use standard python type annotations? Want compatibility with standard python dataclasses? Then it sounds like pydantic is something for you. Pydantic offers a pythonic way to validate your user data using run-time enforced standard type-annotations.&lt;/p&gt;
&lt;p&gt;This talk focuses on how Pydantic can be used with web APIs to simplify many parts regarding user input validation. I’ve previously back in early 2018 built a similar solution to Pydantic based upon standard dataclasses for a large B2B SaaS application built with flask. When I left that project I was briefly considered rebuilding it as open source but while doing my research I discovered Pydantic’s powers which I had put in my keep tabs on list when it was in an much earlier stage, but at this point it had evolved to a really polished library and a perfect companion for JSON-based APIs.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Hultnér</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/intro-to-pydantic-run-time-type-checking-for-your-dataclasses.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Keynote: Async, Python, and the Future</title><link>https://pyvideo.org/python-web-conf-2021/keynote-async-python-and-the-future.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Keynote: Async, Python, and the Future&amp;quot; by: Andrew Godwin
It's been over five years since &amp;quot;await&amp;quot; made it into Python, and much longer still since the first async frameworks brought us their mysterious power to serve multiple web requests at once. But where are we now? What inroads have we made?
Join us as we take a look at the current state of the Python libraries, frameworks and projects dealing with async; some thoughts on lessons we can learn from the process; and a look forward at upcoming projects, ideas and potential ways we can change, adapt, and embrace async as a part of Python web programming.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Godwin</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/keynote-async-python-and-the-future.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Keynote: Making Sense of Measures</title><link>https://pyvideo.org/python-web-conf-2021/keynote-making-sense-of-measures.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Keynote: Making Sense of Measures&amp;quot; by: Damiaan Zwietering
Starting as a side project in Python about a year ago, I looked at COVID-19 data from various angles, testing my long experience as a data scientist. Aside from exploration, visualization and mapping we can have a look at what I found when relating mitigation measures to outbreak severity for countries worldwide. It will show you how these analyses typically become an exercise in interpretation, with all the related pitfalls and limitations. Join me for a session full of hands on examples showing you the daily practice of working with Python as your tool of choice for analysis.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damiaan Zwietering</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/keynote-making-sense-of-measures.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Keynote: Redesigning the Tech Talent Pipeline</title><link>https://pyvideo.org/python-web-conf-2021/keynote-redesigning-the-tech-talent-pipeline.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Keynote: Redesigning the Tech Talent Pipeline&amp;quot; by: Linda Calvin
As tech evolves, we must think differently about sourcing talent. We'll discuss industry statistics, demystifying computer science, what the job description looks like, and 4 year vs. ..?&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Linda Calvin</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/keynote-redesigning-the-tech-talent-pipeline.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>KEYNOTE: Why the Neurodiversity Movement Will Change the World</title><link>https://pyvideo.org/python-web-conf-2021/keynote-why-the-neurodiversity-movement-will-change-the-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;KEYNOTE: Why the Neurodiversity Movement Will Change the World&amp;quot; by: Mark Fister&lt;/p&gt;
&lt;p&gt;Have you ever wondered what’s special about Einstein, Mozart, and Michelangelo?&lt;/p&gt;
&lt;p&gt;Have you ever wondered if your company will ever go from Management to True Leadership?&lt;/p&gt;
&lt;p&gt;Have you ever wondered if your company will ever be more equitable and inclusive of people who are different?&lt;/p&gt;
&lt;p&gt;And what in tarnation do these three questions have to do with each other?&lt;/p&gt;
&lt;p&gt;Come to this talk about the Neurodiversity Movement to find out.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Fister</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/keynote-why-the-neurodiversity-movement-will-change-the-world.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Lessons Learned Converting Snyk Codebase To TypeScript</title><link>https://pyvideo.org/python-web-conf-2021/lessons-learned-converting-snyk-codebase-to-typescript.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Lessons Learned Converting Snyk Codebase To TypeScript&amp;quot; by: Lili Kastilio
Over the past 18 months Snyk has been converting their entire codebase to TypeScript, I would like to share the reasons, motivations and lessons learned with others thinking to do the same. There have been wins and bumps along the way but overall they left their codebase in a much better place than ever before.&lt;/p&gt;
&lt;p&gt;Take a look where we got to so far, what slowed us down in some places and what was our plan to complete the migration to 100% of the codebase.&lt;/p&gt;
&lt;p&gt;Many companies are thinking of using TypeScript but may be scared to do so, I hope this talk can share some insight into what this journey is like.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lili Kastilio</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/lessons-learned-converting-snyk-codebase-to-typescript.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Let REST Do Rest: Deep Dive In GraphQL With Django</title><link>https://pyvideo.org/python-web-conf-2021/let-rest-do-rest-deep-dive-in-graphql-with-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Let REST Do Rest: Deep Dive In GraphQL With Django&amp;quot; by: Nisarg Shah&lt;/p&gt;
&lt;p&gt;GraphQL is a query language and uses a schema based approach. It has only one endpoint and client can request the needed data. While building APIs, schema can be fixed and teams can work independently as the structure is fixed.&lt;/p&gt;
&lt;p&gt;I will initiate my talk with some overview on GraphQL APIs and concepts of GraphQL. Following that, I will cover some core concepts which are required for developing some basic queries and mutations. Those concepts will include fields, object types, schema, resolvers, etc. Along with this, I will cover the N+1 problem of GraphQL queries and will look into a way to optimize the GraphQL queries for solving this problem.&lt;/p&gt;
&lt;p&gt;Also versioning of GraphQL APIs is not similar to versioning of REST APIs, it’s quite different and interesting. Only updates of schema fields are needed. Many times GraphQL is used, but in some cases REST is preferred over GraphQL.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nisarg Shah</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/let-rest-do-rest-deep-dive-in-graphql-with-django.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>LocalStack: Developing for AWS without AWS</title><link>https://pyvideo.org/python-web-conf-2021/localstack-developing-for-aws-without-aws.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;LocalStack: Developing for AWS without AWS&amp;quot; by: Aly Sivji&lt;/p&gt;
&lt;p&gt;Amazon Web Services (AWS) has over 175 managed services: from leveraging S3 as a storage bucket to developing voice-enabled applications with Alexa, developers can solve complex problems with a few API calls. You pay Amazon a little more and you ship products a lot faster.&lt;/p&gt;
&lt;p&gt;The question isn't should you use managed services, but how best to bring them into your organization's existing processes and workflows. You probably already have one, or more than one, AWS account to support different development environments. Setting up new resources for each team/developer to test against is going to be a lot of work related to IAM roles, policies, and permissions. Also, API calls are not free; development and testing workflows that use AWS resources cost money.&lt;/p&gt;
&lt;p&gt;Enter LocalStack. LocalStack is a testing framework used to develop cloud-native applications. Start a container and write code against a local environment that has the same functionality and APIs as AWS! This talk will discuss how to integrate LocalStack into your project by demonstrating several basic and advanced workflows. The session is geared towards intermediate and advanced developers that use AWS.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aly Sivji</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/localstack-developing-for-aws-without-aws.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Looking Outside Your Network</title><link>https://pyvideo.org/python-web-conf-2021/looking-outside-your-network.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Looking Outside Your Network&amp;quot; by: Ariel Crawley
Join me as we discuss what IT leaders and members can do to help broaden the DEI space by bringing in members outside their network. I'll highlight our organization - Indy Women in Tech - and others groups working to bring in more women, LGBTQ, Bootcamp participants, community college grads, and people of color into the tech workforce.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ariel Crawley</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/looking-outside-your-network.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Making Process Work For Your Dev Team</title><link>https://pyvideo.org/python-web-conf-2021/making-process-work-for-your-dev-team.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Making Process Work For Your Dev Team&amp;quot; by: Adrienne Lowe&lt;/p&gt;
&lt;p&gt;“I hate process.” Ever heard anyone say that? If you’ve worked on a team with slow, inflexible, and bloated processes that led to poor communication and low morale, you've got every right to say it! But it doesn’t have to be that way. Process can be a force for good on your team: for enhancing communication and alignment, for documenting shared values and commitments, and for making our work more inclusive and accessible to folks beyond our immediate team.
In this talk, you'll learn the how and why of creating and refining processes that have better buy-in, more flexibility, and more closely reflect the changing reality of our teams and goals. Whether you're a developer or a manager, and regardless of which &amp;quot;flavor&amp;quot; of Agile is your favorite (or not), you can be a force for good on your team by advocating for processes that are changeable, adaptable, documented, and have evaluation built in. Come learn how!&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrienne Lowe</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/making-process-work-for-your-dev-team.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Making Sanic Even Faster</title><link>https://pyvideo.org/python-web-conf-2021/making-sanic-even-faster.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Making Sanic Even Faster&amp;quot; by: Adam Hopkins
Sanic is one of the fastest growing frameworks in the Python world. But it is also simply one of the fastest Python web servers. This year, we are making it even faster.&lt;/p&gt;
&lt;p&gt;There are a number of under the hood changes planned for 2021 as Sanic gears up for its first “stable” release at the end of the year. You can read about some of the changes here: &lt;a class="reference external" href="https://community.sanicframework.org/t/2021-development-plan/783"&gt;https://community.sanicframework.org/t/2021-development-plan/783&lt;/a&gt;
This talk will focus on &lt;em&gt;why&lt;/em&gt; these changes are being made, and &lt;em&gt;how&lt;/em&gt; we are achieving them.&lt;/p&gt;
&lt;p&gt;Time permitting, I will also do a little demonstration about deploying production ready, high performance applications in the new world and show the practical impact.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Hopkins</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/making-sanic-even-faster.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Maps with Django</title><link>https://pyvideo.org/python-web-conf-2021/maps-with-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Maps with Django&amp;quot; by: Paolo Melchiorre&lt;/p&gt;
&lt;p&gt;A map in a website is the best way to make geographic data easily accessible to users because it represents, in a simple way, the information relating to a specific geographical area and is in fact used by many online services.&lt;/p&gt;
&lt;p&gt;Implementing a web map can be complex and many adopt the strategy of using external services, but in most cases this strategy turns out to be a major data and cost management problem.&lt;/p&gt;
&lt;p&gt;In this talk we’ll see how to create a web map with the Python based web framework Django using its GeoDjango module, storing geographic data in your local database on which to run geospatial queries.&lt;/p&gt;
&lt;p&gt;Through this intervention you can learn how to add a map on your website, starting from a simple map based on Spatialite/SQLite up to a more complex and interactive map based on PostGIS/PostgreSQL.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paolo Melchiorre</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/maps-with-django.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Modeling Financial Data In Cassandra To Serve Real Time + Batch Workloads</title><link>https://pyvideo.org/python-web-conf-2021/modeling-financial-data-in-cassandra-to-serve-real-time-batch-workloads.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Modeling Financial Data In Cassandra To Serve Real Time And Batch Workloads At Same Time&amp;quot; by: Gokul Prabagaren
This talk will explain how we have modeled customer rewards data in CapitalOne using Apache Cassandra to serve Real time microservice based workloads ( Customer accessing their rewards online ) and batch Apache Spark workloads ( Customer statements ) at same time.&lt;/p&gt;
&lt;p&gt;CapitalOne being Tech Company in Banking business, we are 100% Cloud operated Company. All our workloads are Cloud Native. This talk covers one of such use case which will explain how we have modeled customer rewards data in CapitalOne using Apache Cassandra to serve Real time microservice based workloads and batch Apache Spark workloads at same time. When customer accesses their Rewards from web or Customer receives their Rewards in Statements the Cassandra table we modeled plays a central role and services both the different workloads at same time. This talk will cover how Cassandra data is used by Spring based microservice and Spark based batch workload. I am part of team which designed and developed this application ground up and serving millions of customers now.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gokul Prabagaren</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/modeling-financial-data-in-cassandra-to-serve-real-time-batch-workloads.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Mystery ML: Classifying Text w/ Recurrent Neural Networks, Keras, Scoob and the Gang</title><link>https://pyvideo.org/python-web-conf-2021/mystery-ml-classifying-text-w-recurrent-neural-networks-keras-scoob-and-the-gang.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Mystery Machine Learning: Classifying Text with Recurrent Neural Networks, Keras, and Scoob and the Gang&amp;quot; by: Guy Royse&lt;/p&gt;
&lt;p&gt;Jinkies! Spoiler Alert! If you’ve seen Scooby-Doo, you know who the monster always is—Old Man Withers, the guy who runs the amusement park. Amusement park operators like Old Man Withers have caused Mystery, Inc. all sorts of problems over the years. Problems that could be avoided with a properly trained recurrent neural network. With RNNs, Scoob and the Gang could have built a model to classify everyone’s speech. This would show them that Old Man Withers and Redbeard’s Ghost sounded a lot alike!&lt;/p&gt;
&lt;p&gt;We can help Mystery, Inc. with this problem by building a recurrent neural network to do just that. You know we got a mystery to solve, and we’re going to solve it by building our model using lines from Scooby-Doo, Keras, and TensorFlow. Once we have our model, we’ll host it on RedisAI so we can quickly build an application to make use of it. Well, we’ve got some work to do now.&lt;/p&gt;
&lt;p&gt;I will also explain what neural networks are in general, what recurrent neural networks are in particular, and discuss some practical use of this technology. When we’re done, you’ll know how to build RNNs with Keras, use them to classify text, and integrate them into your application. But more importantly, you’re going to have yourself a Scooby snack! That’s a fact!&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guy Royse</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/mystery-ml-classifying-text-w-recurrent-neural-networks-keras-scoob-and-the-gang.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Plone for News Portals</title><link>https://pyvideo.org/python-web-conf-2021/plone-for-news-portals.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;dl class="docutils"&gt;
&lt;dt&gt;&amp;quot;Plone for News Portals&amp;quot; by: Érico Andrei&lt;/dt&gt;
&lt;dd&gt;Out-of-the-box Plone is already a good solution for news portals but with some tricks and integrations, it can scale to support a scenario with multiple editors and collaborators.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Érico Andrei</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/plone-for-news-portals.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Practical AI: Computer Vision</title><link>https://pyvideo.org/python-web-conf-2021/practical-ai-computer-vision.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Practical AI: Computer Vision&amp;quot; by: Maxwell Ogunfunwa&lt;/p&gt;
&lt;p&gt;In this current era of the internet, much of our knowledge transfer is happening via multimedia formats namely images. As a result, computer vision has blossomed, becoming the front runner in the race to actualizing artificial intelligence. In the past 5 years many state-of-the-art models have been created making computer vision more accessible to businesses.&lt;/p&gt;
&lt;p&gt;In this talk, I will explain how a modern business model can quickly adapt to these changing times and utilize computer vision to enhance their digital assets.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Maxwell Ogunfunwa</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/practical-ai-computer-vision.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Programming For Pleasure</title><link>https://pyvideo.org/python-web-conf-2021/programming-for-pleasure.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Programming For Pleasure&amp;quot; by: Daniele Procida
As programmers, we’re very lucky - our work is often creative and enjoyable, and the culture of programming itself is inventive and playful. It’s not surprising that one of the things that programmers like to do in their spare time is more programming. Programming can be a pleasure in itself. What we don’t usually recognise is that the effect of this is to make the software we create worse rather better. If we want to make better software, we need to start programming not for pleasure, but for pain.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniele Procida</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/programming-for-pleasure.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Python 1994</title><link>https://pyvideo.org/python-web-conf-2021/python-1994.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Python 1994&amp;quot; by: Paul Everitt&lt;/p&gt;
&lt;p&gt;“Come for the language, stay for the community.” The Python community started in 1994 at a NIST workshop in Maryland. What was the world of Python like in its first years? Did we have any clue whatsoever? A joke-focused tour of early Python, heavy on question-and-answer.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/python-1994.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Python + AutoML Vision = Automated Document Analysis</title><link>https://pyvideo.org/python-web-conf-2021/python-automl-vision-automated-document-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Python + AutoML Vision = Automated Document Analysis&amp;quot; by: Kim Nguyen and Shane Hathaway
Google’s AutoML Vision service is a great new tool. A client of ours had a time intensive process for classifying and routing documents. Using AutoML and Python, we helped them prototype and deploy a machine learning model to reduce the frequency of errors and accelerate overall processing of thousands of documents a day. We will describe the solution and present lessons learned.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kim Nguyen</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/python-automl-vision-automated-document-analysis.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Python Memory Deep Dive for Speed and Efficiency</title><link>https://pyvideo.org/python-web-conf-2021/python-memory-deep-dive-for-speed-and-efficiency.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Python Memory Deep Dive for Speed and Efficiency&amp;quot; by: Michael Kennedy
Python's memory story is not often told. We hear it uses reference counting and that's about the end of it. But there is so much more going on. There is also a GC backing up reference counting, why? Instagram turned theirs off and got faster, how? Python classes can be memory hogs. But there is an escape hatch that is almost always available to us which uses much less memory and is faster computationally. Yet, almost no one opens it. You might want to.&lt;/p&gt;
&lt;p&gt;Join Michael Kennedy from Talk Python Training and look at how Python memory works and design patterns for functions and classes making Python more efficient (memory-wise) and get a solid speed boost as a side benefit.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Kennedy</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/python-memory-deep-dive-for-speed-and-efficiency.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Python's NLU library: 1,000+ Models, 200+ Languages, 1 Line of Code</title><link>https://pyvideo.org/python-web-conf-2021/pythons-nlu-library-1000-models-200-languages-1-line-of-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Python's NLU library: 1,000+ Models, 200+ Languages, State of the Art Accuracy, 1 Line of Code&amp;quot; by: Christian Kasim Loan
Harness the power of 1,000+ production-grade, scalable, free &amp;amp; open-source NLP models for 200+ languages - using just 1 line of Python code by leveraging the NLU library which is powered by the award-winning Spark NLP.&lt;/p&gt;
&lt;p&gt;This webinar covers, using live coding in real-time, how to deliver summarization, translation, unsupervised keyword extraction, emotion analysis, question answering, spell checking, named entity recognition, document classification, BERTology Embeddings, and other common NLP tasks. This is all done with a single line of code, that works directly on Python strings or pandas data frames. Since NLU is based on Spark NLP, no code changes are required to scale processing to a multi-core or cluster environment - integrating natively with Ray, Dask, or Spark data frames.&lt;/p&gt;
&lt;p&gt;The recent releases for Spark NLP and NLU include pre-trained models for over 200 languages and language detection for 375 languages. This includes 20 languages families; non-Latin alphabets; languages that do not use spaces for word segmentation like Chinese, Japanese, and Korean; and languages written from right to left like Arabic, Farsi, Urdu, and Hebrew. We'll also cover some of the algorithms and models that are included. The code notebooks will be freely available online.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Kasim Loan</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/pythons-nlu-library-1000-models-200-languages-1-line-of-code.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>PyTorch To Build NLP Models Using Amazon SageMaker and Amazon Elastic Inference</title><link>https://pyvideo.org/python-web-conf-2021/pytorch-to-build-nlp-models-using-amazon-sagemaker-and-amazon-elastic-inference.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;PyTorch To Build NLP Models Using Amazon SageMaker and Amazon Elastic Inference&amp;quot; by: Suman Debnath
Implementing natural language processing (NLP) models just got simpler and faster. In this talk, we introduce BERT (Bidirectional Encoder Representation from Transformers), a state-of-the-art (SOTA) NLP model, and demonstrate how it can be used for various NLP tasks. Learn how to implement NLP models to quickly prototype products, validate new ideas, and learn SOTA NLP. And at the end we will also demo how we can use PyTorch with Amazon SageMaker to fine-tune the BERT model and deploy it with Elastic Inference.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Suman Debnath</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/pytorch-to-build-nlp-models-using-amazon-sagemaker-and-amazon-elastic-inference.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Rackio Framework - Bring the Power of Python into SBC</title><link>https://pyvideo.org/python-web-conf-2021/rackio-framework-bring-the-power-of-python-into-sbc.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Rackio Framework - Bring the Power of Python into SBC&amp;quot; by: Antonio Carrasquel
Rackio Framework is a modern Framework to develop microboard automation and control applications with Python. It implements a declarative approach to define the behavior of Automation, SCADA, Data Acquisition, Alarm and Logging IIoT applications.&lt;/p&gt;
&lt;p&gt;It was developed to bring automation and control engineers the capability of developing high end industrial solutions. Inspired by Django, Flask and Scrapy, Rackio comes with built-in batteries to make common operations and tasks in the automation field.&lt;/p&gt;
&lt;p&gt;With Rackio you can define a web based Human Machine Interface that is served within a Rackio application deployment, so you can set, monitor and admin your system.&lt;/p&gt;
&lt;p&gt;Each Rackio features comes with a built-in REST API and a SocketIO event based API.&lt;/p&gt;
&lt;p&gt;You can also define your custom API or SocketIO endpoints, including custom web pages and routes.&lt;/p&gt;
&lt;p&gt;The greater power of Rackio is it’s declarative approach to define custom State Machines, this way you can integrate Python libraries to perform Data Science, Machine Learning, Deep Learning or any Python code execution.&lt;/p&gt;
&lt;p&gt;Rackio is an ecosystem, with some extensions to level up your applications, such as Swagger-UI, Admin UI and Industrial Communication Protocols.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Antonio Carrasquel</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/rackio-framework-bring-the-power-of-python-into-sbc.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>'Search Party' - Searching your data for treasures!</title><link>https://pyvideo.org/python-web-conf-2021/search-party-searching-your-data-for-treasures.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;'Search Party' - Searching your data for treasures!&amp;quot; by: Sammy Spurlock
The Splunk Search Party Workshop is a hands-on workshop to get familiar with the most popular Splunk search commands, build dashboards, and create an alert. This is a great introduction to Splunk if you are considering it for your organization. Although this hands-on workshop doesn't require any Splunk experience, it's recommended that you complete our free Fundamentals I online training (&lt;a class="reference external" href="https://www.splunk.com/en_us/training/free-courses/splunk-fundamentals-1.html?elqTrackId=c254bb6350cd48c69c133a01506680fa&amp;amp;elqaid=5817&amp;amp;elqat=2"&gt;https://www.splunk.com/en_us/training/free-courses/splunk-fundamentals-1.html?elqTrackId=c254bb6350cd48c69c133a01506680fa&amp;amp;elqaid=5817&amp;amp;elqat=2&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sammy Spurlock</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/search-party-searching-your-data-for-treasures.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Serverless &amp; Microservices Monitoring In An IoT World</title><link>https://pyvideo.org/python-web-conf-2021/serverless-microservices-monitoring-in-an-iot-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Serverless &amp;amp; Microservices Monitoring In An IoT World&amp;quot; by: Erez Berkner
Serverless technology is a great fit for IoT workloads, and indeed we witness a constant growth in usage. When you have many sensors that are very distributed and generate a high volume of invocations, monitoring and troubleshooting become a huge challenge. In this talk we will cover:
- Why microservices, serverless &amp;amp; IoT devices are so difficult to monitor
- Understand the current methods for making microservices, serverless &amp;amp; IoT applications observable
- See best practices for monitoring microservices, serverless &amp;amp; IoT with real-world examples&lt;/p&gt;
&lt;p&gt;Join us and gain back control over your IoT environment.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erez Berkner</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/serverless-microservices-monitoring-in-an-iot-world.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>SQLAlchemy 2.0 - The One-Point-Four-Ening 2021</title><link>https://pyvideo.org/python-web-conf-2021/sqlalchemy-20-the-one-point-four-ening-2021.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;SQLAlchemy 2.0 - The One-Point-Four-Ening 2021&amp;quot; by: Mike Bayer
SQLAlchemy enters the &amp;quot;Python 3 only&amp;quot; world with an all-new rethink of it's Core and ORM APIs known as SQLAlchemy 2.0.   Right now, SQLAlchemy 2.0 is in its transitional &amp;quot;caterpillar to butterfly&amp;quot; state, which is the new SQLAlchemy 1.4 series, currently in beta releases.&lt;/p&gt;
&lt;p&gt;This tutorial will be the premiere of the classic &amp;quot;from the ground up&amp;quot; tutorial of SQLAlchemy re-imagined for the new 2.0 way of working, featuring a much greater consistency between the &amp;quot;Core&amp;quot; and &amp;quot;ORM&amp;quot; experiences.   There will be nary an &amp;quot;engine.execute()&amp;quot; nor a &amp;quot;session.query()&amp;quot; to be found.  New ORM configurational patterns are presented a well.&lt;/p&gt;
&lt;p&gt;Presented in terms of a four-layered model, which include &amp;quot;Engine and Connection Basics&amp;quot;, &amp;quot;Table Metadata&amp;quot;, &amp;quot;SQL Expression Language&amp;quot;, and &amp;quot;ORM Usage&amp;quot;, the tutorial is broken into two sections and API use is presented in terms of a console runner application which participants can install locally and follow along.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Bayer</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/sqlalchemy-20-the-one-point-four-ening-2021.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Static Sites With Sphinx and Markdown</title><link>https://pyvideo.org/python-web-conf-2021/static-sites-with-sphinx-and-markdown.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Static Sites With Sphinx and Markdown&amp;quot; by: Paul Everitt
Everybody knows Sphinx for documenting projects, Python and otherwise. But few think of Sphinx for the rest of a website.&lt;/p&gt;
&lt;p&gt;Why? Because Sphinx traditionally means authoring with reStructuredText instead of Markdown. While RST is very powerful, it's a bit quirky, and nowhere near the popularity of Markdown.&lt;/p&gt;
&lt;p&gt;But with the arrival of full Markdown support MyST, and with static site generators having a renaissance, it's time to give Sphinx a second look. Sphinx is an &amp;quot;information-rich&amp;quot; static site generator, with rich linking and many other features for authoring a knowledge base.&lt;/p&gt;
&lt;p&gt;This talk introduces Sphinx for websites, shows enabling MyST for Markdown, and compares what it has to offer versus other approaches. We’ll do a light treatment of customization. All the material in this talk comes from a published tutorial.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/static-sites-with-sphinx-and-markdown.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Streamlit: The Fastest Way To Build Data Apps</title><link>https://pyvideo.org/python-web-conf-2021/streamlit-the-fastest-way-to-build-data-apps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Streamlit: The Fastest Way To Build Data Apps&amp;quot; by: Steven Kolawole
When we think about building Python-based data science apps, we think Flask. But there is a better option now. Streamlit.&lt;/p&gt;
&lt;p&gt;Streamlit is an open-source web framework that lets you create apps for your machine learning projects with deceptively simple Python scripts, in hours. It supports hot-reloading, so your app updates live as you edit and save your file. No need to mess with HTTP requests, HTML, JavaScript, etc. In a short sentence, there is no need to write any front-end code. All you need is your favorite editor and a browser.&lt;/p&gt;
&lt;p&gt;In this talk, we’ll go through how to build a very simple Streamlit app step-by-step. I will also review the pros and cons of Streamlit, as regards to other popular Python web frameworks being used by Data Scientists and ML Engineers.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steven Kolawole</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/streamlit-the-fastest-way-to-build-data-apps.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Telling The Server User Story Through The Elastic Stack</title><link>https://pyvideo.org/python-web-conf-2021/telling-the-server-user-story-through-the-elastic-stack.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Telling The Server User Story Through The Elastic Stack&amp;quot; by: Jay Miller
Elastic has an ecosystem of products that to tell a story around both internal and external data. Companies use the Elastic Stack to gain insight on websites, businesses, and products.&lt;/p&gt;
&lt;p&gt;Diversityorgs.tech allows guests to search for diversity-focused orgs in their area.&lt;/p&gt;
&lt;p&gt;We’ll look at web traffic and examine trends in orgs searched. I'll explain ingesting that data from NGINX logs using Beats. We’ll look at analytics from Elastic App Search and visualize this information with Kibana. Finally, we'll use that information to implement a new feature giving people requests based on their perceived area, ALL WHILE REQUIRING NO COOKIES OR TRACKING FROM OUR USERS.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jay Miller</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/telling-the-server-user-story-through-the-elastic-stack.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>The Definitive Deep Dive into the .git Folder</title><link>https://pyvideo.org/python-web-conf-2021/the-definitive-deep-dive-into-the-git-folder.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;The Definitive Deep Dive into the .git Folder&amp;quot; by: Rob Richardson&lt;/p&gt;
&lt;p&gt;What’s in the .git folder? How are commits stored? How do branches work? We’ll dive deep into the objects folder, unpack commits, look at the types of DAG nodes, examine object content, and build a complete visualization of the stored content. We’ll also quickly look through Git hooks, Git config, and ref logs. Come experience the zen of git.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rob Richardson</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/the-definitive-deep-dive-into-the-git-folder.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>The Three Things All Web Professionals Must Know About Privacy</title><link>https://pyvideo.org/python-web-conf-2021/the-three-things-all-web-professionals-must-know-about-privacy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;The Three Things All Web Professionals Must Know About Privacy&amp;quot; by: Donata Stroink-Skillrud&lt;/p&gt;
&lt;p&gt;Clients trust web professionals to build them a website that generates leads. An unfortunate side effect of lead generation is the collection of personal information. For example, a website that has a contact form that collects a name and an email address collects personal information. Laws require most websites that collect PI to have a Privacy Policy. Clients often look to web professionals to answer the questions “do I really need a Privacy Policy, and why?” The fact is that most web professionals should have some knowledge of why privacy is important, what websites need a Privacy Policy, and should be the ones speaking to their clients about the topic. In this talk, I will answer all of the above questions and empower web professionals to be true advocates for privacy and protection for their clients.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Donata Stroink-Skillrud</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/the-three-things-all-web-professionals-must-know-about-privacy.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>Understand Best Practices in Building/Deploying Pyramid Cloud Application</title><link>https://pyvideo.org/python-web-conf-2021/understand-best-practices-in-buildingdeploying-pyramid-cloud-application.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Understanding Best Practices in Building and Deploying Pyramid Cloud Application&amp;quot; by: Renaldi Gondosubroto&lt;/p&gt;
&lt;p&gt;Managing small services and applications with the Pyramid framework is easy, but when we start getting into managing the bigger, cloud-based applications, we start to face challenges in ensuring that all components remains as they should be. This is one of the biggest challenges that Pyramid developers face in development of their applications. In this talk, I will talk about the pros and cons of using Pyramid for building applications as compared to other frameworks, outline how to manage such developments from the initial planning of the application based on the framework to the deployment on a cloud service based on best practices that are set out and how to avoid some of the mistakes I made when developing and deploying my own Pyramid-based services.&lt;/p&gt;
&lt;p&gt;I will cover best practice topics in planning including how to choose a persistence mechanism, planning for extensibility of the application as needed, and preparing the tools needed for the application’s layers. For the development of the application itself, I will talk about how to properly utilize scaffolds, effectively use declarative configuration, understand how to make the best use of the authentication, manage view configurations with mechanisms such as URL dispatch and traversal, monitoring the deployment on a cloud service and more. Design patterns will be talked about alongside covering these topics and how they can benefit alongside the scaling of your application. For the deployment, I will be using AWS as the cloud platform to support this context, as I have performed my deployments with it.&lt;/p&gt;
&lt;p&gt;I will then conclude the talk with a case study based on one of my own previous projects involving the development and deployment of an application I scaled up and deployed on the cloud. This is particularly to highlight some initial mistakes I made that are quite prevalent in the Pyramid community and how developers can avoid making the same mistakes when they move onto developing their own Pyramid, Cloud-based applications. Attendees will leave the talk ready to start experimenting with, building, and deploying their Pyramid applications on the cloud.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Renaldi Gondosubroto</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/understand-best-practices-in-buildingdeploying-pyramid-cloud-application.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>What You Need To Know About Python Debugging</title><link>https://pyvideo.org/python-web-conf-2021/what-you-need-to-know-about-python-debugging.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;What You Need To Know About Python Debugging&amp;quot; by: Philip Bauer
Nobody writes flawless code. Understanding and fixing the cause of errors is a large part of our daily lives as developers. Reading tracebacks, adding print-statements and taking educated guesses are just the beginning: Python has a multitude of tools and techniques and knowing how to apply them make you more productive and will boost the understanding of the code you’re otherwise banging your head against.&lt;/p&gt;
&lt;p&gt;In this tutorial you will learn how to get the most out of various debugging-tools and -approaches. You will deal with logging, tracebacks, interactive debugging, introspection and other topics and will apply each tool and technique in exercises to get familiar with it.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philip Bauer</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/what-you-need-to-know-about-python-debugging.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item><item><title>You Have Written A Web Application, Now What?</title><link>https://pyvideo.org/python-web-conf-2021/you-have-written-a-web-application-now-what.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;You Have Written A Web Application, Now What?&amp;quot; by: Amit Saha&lt;/p&gt;
&lt;p&gt;In this talk, I will discuss the next steps after you have written a web application. Python frameworks and libraries makes it really easy to write a highly performant web application out of the box, but the problems that come next needs a number of building blocks and tools to come together.&lt;/p&gt;
&lt;p&gt;We will talk about deploying your web application and discuss scaling up and down policies so that we can cater to peak traffic demands. We will discuss how we can peek into our application’s performance by exporting “health” status and metrics, and learn about implementing distributed tracing into our web application.&lt;/p&gt;
&lt;p&gt;As far as possible, the talk will discuss generic strategies, only using specific tools/software for hands-on examples.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amit Saha</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-03-22:/python-web-conf-2021/you-have-written-a-web-application-now-what.html</guid><category>Python Web Conf 2021</category><category>PythonWebConf</category><category>PythonWebConf2021</category></item></channel></rss>