<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jordan-yaker.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-06T00:00:00+00:00</updated><entry><title>Try-Monads With Big Data Using PySpark</title><link href="https://pyvideo.org/pygotham-2017/try-monads-with-big-data-using-pyspark.html" rel="alternate"></link><published>2017-10-06T00:00:00+00:00</published><updated>2017-10-06T00:00:00+00:00</updated><author><name>Jordan Yaker</name></author><id>tag:pyvideo.org,2017-10-06:pygotham-2017/try-monads-with-big-data-using-pyspark.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tired of errors killing your code when they happen? Do you often think about whether Schr√∂dinger's cat is truly dead or alive? Monads are the answer to the woes that plague your life!&lt;/p&gt;
&lt;p&gt;This talk will cover the following topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What exactly is a Monad?&lt;/li&gt;
&lt;li&gt;Ok, so what's a Try-Monad?&lt;/li&gt;
&lt;li&gt;How will a Try-Monad help with Stream Processing?&lt;/li&gt;
&lt;li&gt;How do I add a Try-Monad to a PySpark application?&lt;/li&gt;
&lt;li&gt;How do I test my Monad-ified code?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you're interested in writing Python Stream Processing applications that can handle errors gracefully then this talk is for you!&lt;/p&gt;
</summary></entry></feed>