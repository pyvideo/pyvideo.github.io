<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_kenneth-durril.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-07-30T00:00:00+00:00</updated><entry><title>Lazy is too hard! Use PDFs with Python the Robust Way</title><link href="https://pyvideo.org/pyohio-2017/lazy-is-too-hard-use-pdfs-with-python-the-robust-way.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Kenneth Durril</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/lazy-is-too-hard-use-pdfs-with-python-the-robust-way.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lazy is too hard. When I had 40,000 PDFs and needed to extract their data, I knew that the &amp;quot;lazy&amp;quot; approach was insufficient. This talk reviews tools to tame PDFs with confidence. I'll use my open-data project's workflow as an example (ETL anyone?). It's also a follow-up/response to PyOhio2016's &amp;quot;We Don’t Need No Stinkin’ PDF Library: Build PDFs with Python the Lazy Way&amp;quot;.&lt;/p&gt;
</summary></entry></feed>