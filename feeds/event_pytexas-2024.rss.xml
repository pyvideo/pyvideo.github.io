<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - PyTexas 2024</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 21 Apr 2024 00:00:00 +0000</lastBuildDate><item><title>20 GOTO 10: How to Make Scrolling ASCII Art</title><link>https://pyvideo.org/pytexas-2024/20-goto-10-how-to-make-scrolling-ascii-art.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;20 GOTO 10: How to Make Scrolling ASCII Art&lt;/p&gt;
&lt;p&gt;Scroll art is a form of animated ASCII art that beginners can make. Using loops, print(), and random numbers, you'll learn how to make a surprisingly wide variety of digital art within the constraints of text strings. You'll also learn about the history of ASCII art, computer education, and where to find inspiration for your own digital art.&lt;/p&gt;
&lt;p&gt;Speaker: Al Sweigart&lt;/p&gt;
&lt;p&gt;Al Sweigart is a software developer, artist, Fellow of the Python Software Foundation, and the author of Automate the Boring Stuff with Python and other programming books freely available under the Creative Commons license at &lt;a class="reference external" href="https://inventwithpython.com"&gt;https://inventwithpython.com&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Al Sweigart</dc:creator><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-21:/pytexas-2024/20-goto-10-how-to-make-scrolling-ascii-art.html</guid><category>PyTexas 2024</category></item><item><title>Advanced Tracking with Kalman Filters and Stone Soup</title><link>https://pyvideo.org/pytexas-2024/advanced-tracking-with-kalman-filters-and-stone-soup.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Advanced Tracking with Kalman Filters and Stone Soup&lt;/p&gt;
&lt;p&gt;Learn how to implement sophisticated tracking solutions in Python with Kalman filters and the Stone Soup framework. This demo aims to enhance your data analytics and machine learning skills by showcasing an implementation of a tracking algorithm.&lt;/p&gt;
&lt;p&gt;Speaker: Cynthia Ukawu&lt;/p&gt;
&lt;p&gt;I'm a backend software engineer for a tech company in Washington, DC.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cynthia Ukawu</dc:creator><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-21:/pytexas-2024/advanced-tracking-with-kalman-filters-and-stone-soup.html</guid><category>PyTexas 2024</category></item><item><title>Always Use Sets!</title><link>https://pyvideo.org/pytexas-2024/always-use-sets.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Always Use Sets!&lt;/p&gt;
&lt;p&gt;In this talk, we'll show how to use sets to improve the performance and clarity of our code. We'll even show non-set-like cases that gain enough performance by leveraging sets to make this approach worth some amount of extra complexity.&lt;/p&gt;
&lt;p&gt;Speaker: Andy Fundinger&lt;/p&gt;
&lt;p&gt;Andy Fundinger is a senior engineer at Bloomberg, where he develops Python applications in the Data Gateway Platform team and supports Python developers throughout the firm through the company's Python Guild. Andy has spoken several times at PyGotham, as well as other conferences such as QCon, PyCaribbean, and EuroPython.&lt;/p&gt;
&lt;p&gt;In the past, Andy has worked on private equity and credit risk applications, web services, and virtual worlds. Andy holds a master's degree in engineering from Stevens Institute of Technology.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Fundinger</dc:creator><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-21:/pytexas-2024/always-use-sets.html</guid><category>PyTexas 2024</category></item><item><title>Building Efficient Containers for Python Applications</title><link>https://pyvideo.org/pytexas-2024/building-efficient-containers-for-python-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building Efficient Containers for Python Applications&lt;/p&gt;
&lt;p&gt;In recent years, containerization using tools like Docker has become a cornerstone for deploying applications efficiently. This talk focuses on techniques and best practices to build more efficient Docker images for Python in order to generate reproducible and quicker builds while reducing the image sizes at the same time.&lt;/p&gt;
&lt;p&gt;Speaker: Avik Basu&lt;/p&gt;
&lt;p&gt;Avik is an experienced Data Scientist and Machine Learning Engineer. Currently he leads AIOps at Intuit. He was first introduced to Python in 2013 during his undergrad, and has been his primary language since then. He views writing elegant Python code as an art, blending creativity with engineering precision. Presently, he leads the Machine Learning efforts for AIOps at Intuit.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Avik Basu</dc:creator><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-21:/pytexas-2024/building-efficient-containers-for-python-applications.html</guid><category>PyTexas 2024</category></item><item><title>Day 2 Keynote - Thriving with Python</title><link>https://pyvideo.org/pytexas-2024/day-2-keynote-thriving-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Carol Willing is a three-time Python Steering Council member, a Python Core Developer, PSF Fellow, and a Project Jupyter core contributor. In 2019, she was awarded the Frank Willison Award for technical and community contributions to Python. As part of the Jupyter core team, Carol was awarded the 2017 ACM Software System Award for Project Jupyter's lasting influence. She's also a leader in open science and open-source governance serving on Quansight Labs Advisory Board and the CZI Open Science Advisory Board. She's driven to make open science accessible through open tools and learning materials. She recently served as Noteable's VP of Engineering.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carol Willing</dc:creator><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-21:/pytexas-2024/day-2-keynote-thriving-with-python.html</guid><category>PyTexas 2024</category></item><item><title>Designing a Human-Friendly CLI for API-Driven Infrastructure</title><link>https://pyvideo.org/pytexas-2024/designing-a-human-friendly-cli-for-api-driven-infrastructure.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Designing a Human-Friendly CLI for API-Driven Infrastructure&lt;/p&gt;
&lt;p&gt;As Bloomberg's infrastructure grows and evolves, the tools we use to manage it are becoming increasingly important. To streamline infrastructure management, our team set out to design a REST API and constituent CLI (Command Line Interface) that would comprise a single interface for both programmatic and human interaction with our infrastructure. Traditionally, building a CLI that is tightly coupled to an API requires maintaining a separate codebase, which is tedious and error-prone. Instead, we designed a CLI that dynamically generates commands based on the OpenAPI JSON documentation. However, since APIs are designed for computer interaction, we designed our API to include the information needed to implement a human-friendly CLI. Leveraging Python, FastAPI, and numerous other open source projects, we built a stable, extensible tool that greatly improves how we interact with our infrastructure.&lt;/p&gt;
&lt;p&gt;Speaker: Oliver Rew is a software engineer and a lifelong tinkerer/maker, I have a deep-rooted passion for building, fixing, and breaking things. I recently earned a Masters in Electrical and Computer Engineering, and have gained experience working at both small startups and large companies. I thrive on fixing hard bugs and diving deep into challenging problems.&lt;/p&gt;
&lt;p&gt;Beyond my professional work, I'm also involved in an exciting Cubesat project at Portland State University. When I'm not immersed in technology, I enjoy outdoor activities such as biking, rock-climbing, and spending quality time with my dog, Bruce.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Oliver Rew</dc:creator><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-21:/pytexas-2024/designing-a-human-friendly-cli-for-api-driven-infrastructure.html</guid><category>PyTexas 2024</category></item><item><title>Lightning Talks (Day 2)</title><link>https://pyvideo.org/pytexas-2024/lightning-talks-day-2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are five minute talks on a variety of subjects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Walker Hale</dc:creator><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-21:/pytexas-2024/lightning-talks-day-2.html</guid><category>PyTexas 2024</category></item><item><title>Oh the (Methods) You Can (Make): By Dunder Seuss</title><link>https://pyvideo.org/pytexas-2024/oh-the-methods-you-can-make-by-dunder-seuss.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Oh the (Methods) You Can (Make): By Dunder Seuss&lt;/p&gt;
&lt;p&gt;You can make many methods
Over 100 to be exact
That start with two underscores
What do you think of that?&lt;/p&gt;
&lt;p&gt;The runtime, it calls these
At points A or B
To do special magic
At runtime, you see.&lt;/p&gt;
&lt;p&gt;You may have seen _getattr_ or _init_&lt;/p&gt;
&lt;p&gt;But __rfloordiv__? What's the point of it?&lt;/p&gt;
&lt;p&gt;Come take a quick tour, your mother won't mind
And hear a talk that's one-of-a-kind
About how Python uses them under-the-hood
And how you can use them to write code that's real good&lt;/p&gt;
&lt;p&gt;Speaker: Joshua Cannon&lt;/p&gt;
&lt;p&gt;Howdy y'all! Sometimes I'm a Build Engineer and talk your ear off about tools and developer experience. Sometimes I go by &amp;quot;Dunder Seuss&amp;quot; and perform &amp;quot;edutainment&amp;quot; about Python itself. But mostly I'm just here to have fun and enjoy the company of others.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Cannon</dc:creator><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-21:/pytexas-2024/oh-the-methods-you-can-make-by-dunder-seuss.html</guid><category>PyTexas 2024</category></item><item><title>Plugging In with pkgutil, importlib, inspect, and a little spit</title><link>https://pyvideo.org/pytexas-2024/plugging-in-with-pkgutil-importlib-inspect-and-a-little-spit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plugging In with pkgutil, importlib, inspect, and a little spit&lt;/p&gt;
&lt;p&gt;Sometimes, you want to build a framework where expansion can come via installed python packages and modules. There are third party libraries to handle that, but maybe you don't want something that heavy weight, don't want to handle the burden of security and quality testing releases, or just want to write your own so you know how it works. I'll walk you through how to create a pluggable framework where plugins can be delivered as Python packages. I'll show you some useful standard library packages that you need, some pitfalls along the way, and how to get a working prototype in no time!&lt;/p&gt;
&lt;p&gt;Speaker: Josh Schneider&lt;/p&gt;
&lt;p&gt;Father of two boys. Test Automation Engineer. Primarily fluent in Python, but conversant in C#, Go, VBScript, and others. Huge movie geek.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Schneider</dc:creator><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-21:/pytexas-2024/plugging-in-with-pkgutil-importlib-inspect-and-a-little-spit.html</guid><category>PyTexas 2024</category></item><item><title>Sanely Working with Legacy Code</title><link>https://pyvideo.org/pytexas-2024/sanely-working-with-legacy-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sanely Working with Legacy Code&lt;/p&gt;
&lt;p&gt;For many developers, they will inevitably have to work with legacy code at some point in their careers. It requires a different set of skills to navigate these codebases as opposed to greenfield code where you start with a clean slate. Join me in exploring techniques to approach legacy code including how to improve documentation, increase testing coverage, refactoring code into smaller more testable units and techniques when you lack time to add tests.&lt;/p&gt;
&lt;p&gt;Speaker: Joe Cabrera&lt;/p&gt;
&lt;p&gt;I am a software engineer with +10 years of professional experience building scalable and distributed systems for companies. I am also a subject matter expert in Information Retrieval and Personalized Search. I have spoken at several Python conferences, helped to organize a conference and am involved in the Python open source community.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joe Cabrera</dc:creator><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-21:/pytexas-2024/sanely-working-with-legacy-code.html</guid><category>PyTexas 2024</category></item><item><title>System Design on Easy Mode</title><link>https://pyvideo.org/pytexas-2024/system-design-on-easy-mode.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;System Design on Easy Mode&lt;/p&gt;
&lt;p&gt;You know those system design questions you get when interviewing for senior or staff eng roles? I love them. And while I won't solve them all for you, I will teach you an easy way to solve a large class of them.&lt;/p&gt;
&lt;p&gt;Speaker: Loren Sands-Ramshaw&lt;/p&gt;
&lt;p&gt;Loren is a author, having written a book on GraphQL, has worked as a consultant at various startups. They also participate in various open-source projects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Loren Sands-Ramshaw</dc:creator><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-21:/pytexas-2024/system-design-on-easy-mode.html</guid><category>PyTexas 2024</category></item><item><title>Anarchy to Order - Organizing assorted data with Python and LLMs</title><link>https://pyvideo.org/pytexas-2024/anarchy-to-order-organizing-assorted-data-with-python-and-llms.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Anarchy to Order - Organizing assorted data with Python and LLMs&lt;/p&gt;
&lt;p&gt;Bringing structure to chaotic, heterogeneous data is critical for fueling effective applications. This talk will show how to leverage LangChain in a Python application to take assorted file types and build a unified knowledge graph stored in a Neo4j database.&lt;/p&gt;
&lt;p&gt;Key takeaways will include:
- How to ingest/import varied data file types
- Structuring/organizing data into a graph database
- Using Langchain, GraphQL, or Cypher to use this data&lt;/p&gt;
&lt;p&gt;Speaker: Jason Koo&lt;/p&gt;
&lt;p&gt;Mobile Developer turned Pythonista, Jason Koo is a Developer Advocate Manager at Neo4j who loves all things Python! Most of the time he assists a small but mighty team of Advocates but still finds time to code and speak at developer meetups, conferences, and the occasional podcast. He also organizes and hosts a thriving Graph Database Meetup group in sunny San Diego.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Koo</dc:creator><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-20:/pytexas-2024/anarchy-to-order-organizing-assorted-data-with-python-and-llms.html</guid><category>PyTexas 2024</category></item><item><title>ContainerCraft: Mastering Integration Testing with TestContainers</title><link>https://pyvideo.org/pytexas-2024/containercraft-mastering-integration-testing-with-testcontainers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ContainerCraft: Mastering Efficient Integration Testing with TestContainers&lt;/p&gt;
&lt;p&gt;In the ever-evolving landscape of software development, effective integration testing is important. My talk, titled &amp;quot;ContainerCraft: Mastering Integration Testing with TestContainers&amp;quot; delves into the art of efficient integration testing using TestContainers.&lt;/p&gt;
&lt;p&gt;Speaker: Sameer Shukla&lt;/p&gt;
&lt;p&gt;I'm Sameer Shukla, a dedicated engineer with a rich background spanning 14 years in software design and development. Beyond my role as an engineer, I am an author and researcher. I find joy in continually learning and sharing insights about cutting-edge tools and technologies through my contributions to diverse online learning platforms and esteemed international journals.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sameer Shukla</dc:creator><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-20:/pytexas-2024/containercraft-mastering-integration-testing-with-testcontainers.html</guid><category>PyTexas 2024</category></item><item><title>Iterate, Iterate, Iterate!</title><link>https://pyvideo.org/pytexas-2024/iterate-iterate-iterate.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Iterate, Iterate, Iterate!&lt;/p&gt;
&lt;p&gt;The iteration protocol and generators are Python's power tools. Properly used, they allow for clearer code that is easier to debug and understand. The talk will cover the iteration protocol itself, generator functions and expressions, the itertools and more_itertools libraries, and how to use them to up your Python level.&lt;/p&gt;
&lt;p&gt;Speaker: Moshe Zadka&lt;/p&gt;
&lt;p&gt;Moshe has been involved in the Linux community since 1998, helping in Linux &amp;quot;installation parties&amp;quot;. They have been programming Python since 1999, and has contributed to the core Python interpreter. Moshe has been a DevOps/SRE since before those terms existed, caring deeply about software reliability, build reproducibility and other such things. They have worked in companies as small as three people and as big as tens of thousands -- usually some place around where software meets infrastructure.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Moshe Zadka</dc:creator><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-20:/pytexas-2024/iterate-iterate-iterate.html</guid><category>PyTexas 2024</category></item><item><title>Lessons learned maintaining open source Python projects</title><link>https://pyvideo.org/pytexas-2024/lessons-learned-maintaining-open-source-python-projects.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lessons learned maintaining open source Python projects&lt;/p&gt;
&lt;p&gt;I started maintaining open source projects back in 2016 with tox. In 2018, I became a virtualenv maintainer. Today, this has now ballooned to 16 different packages where I'm the primary maintainer (+6 other projects where I help out). On average, these packages get more than 360 million downloads each month.&lt;/p&gt;
&lt;p&gt;In this talk, I will share my experience, and explore how I manage to pull this off while also having a primary job and a family. I will present which techniques I tried, what worked, and what did not. I will also share my views on how one should approach maintaining an open source package to avoid burnout.&lt;/p&gt;
&lt;p&gt;Speaker: Bernat Gabor&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bernat Gabor</dc:creator><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-20:/pytexas-2024/lessons-learned-maintaining-open-source-python-projects.html</guid><category>PyTexas 2024</category></item><item><title>Lightning Talks (Day 1)</title><link>https://pyvideo.org/pytexas-2024/lightning-talks-day-1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning talks are five minute talks on a variety of subjects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pandy Knight</dc:creator><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-20:/pytexas-2024/lightning-talks-day-1.html</guid><category>PyTexas 2024</category></item><item><title>PySecOps</title><link>https://pyvideo.org/pytexas-2024/pysecops.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PySecOps&lt;/p&gt;
&lt;p&gt;In today's interconnected world, securing web applications is more important than ever. This talk will explore the realm of web security vulnerabilities prevalent in Python Django applications and discuss effective DevSecOps practices to mitigate them.&lt;/p&gt;
&lt;p&gt;Speakers: Soundharya Khanapur &amp;amp; Shivani Shetty&lt;/p&gt;
&lt;p&gt;Soundharya Khanapur: I am a Masters student at NC State University and an ex-Software Engineer at Mercedes-Benz Research &amp;amp; Development India. My true passion lies in leveraging data-driven technology to bring about innovative solutions. During my leisure hours, you can often find me engaging in sports activities, embarking on explorations of new places, or immersing myself in the creation of entertaining software programs.&lt;/p&gt;
&lt;p&gt;Shivani Shetty: Hello! I'm Shivani Shetty, a cybersecurity enthusiast driven by an unyielding passion for securing the digital realm. With a solid foundation in Risk Management, Incidence Response and Network Security, I'm embarking on a mission to make cyberspace safer for everyone. My goal? To leverage my experience, insights and hunger for continuous improvement to revolutionize the cybersecurity landscape.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Soundharya Khanapur</dc:creator><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-20:/pytexas-2024/pysecops.html</guid><category>PyTexas 2024</category></item><item><title>Python Code vs Pythonic Code</title><link>https://pyvideo.org/pytexas-2024/python-code-vs-pythonic-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Code vs. Pythonic Code: What Experienced Developers Find Challenging About Learning Python&lt;/p&gt;
&lt;p&gt;Python has a reputation for being very easy to learn. Despite this, experienced developers often struggle with working as effectively with Python (e.g., writing Pythonic code) as they are with other programming languages with which they are more familiar. This talk will leverage the experiences of a professional trainer to demystify this dichotomy with the goal of understanding the motivating reasons for it, and making suggestions on how to help developers new to Python move quickly from writing Python code to writing Pythonic code.&lt;/p&gt;
&lt;p&gt;Speaker: Heather Crawford&lt;/p&gt;
&lt;p&gt;Heather Crawford is an Engineering Technical Trainer at Bloomberg and a former university professor. In her roles as a professional educator, she has taught learners at many levels from university students at all levels to both entry-level and experienced software engineers. Heather is a Python lover, who has used it since 2007.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Heather Crawford</dc:creator><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-20:/pytexas-2024/python-code-vs-pythonic-code.html</guid><category>PyTexas 2024</category></item><item><title>Rest Easy with Jupyrest: Deploy Notebooks as Web Services</title><link>https://pyvideo.org/pytexas-2024/rest-easy-with-jupyrest-deploy-notebooks-as-web-services.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Rest Easy with Jupyrest: Deploy notebooks as web services&lt;/p&gt;
&lt;p&gt;Jupyter notebooks are awesome! However, a notebook on its own is not a product or a service. Bridging this gap usually involves a complete rewrite into a web service that leaves behind all the awesome-ness of the notebook. What if we didn't have to do this? That's where Jupyrest comes in! Jupyrest is a library I created to solve this exact problem for my team at Microsoft. In this talk I'll show you how you can turn your Jupyter notebooks into a web service without any modifications to it. Jupyrest is being used at Microsoft by data scientists to deploy hundreds of microservices.&lt;/p&gt;
&lt;p&gt;Speaker: Koushik Krishnan&lt;/p&gt;
&lt;p&gt;Hi! My name is Koushik and I am an engineer at Microsoft. I work on distributed database systems and believe it or not, I use a lot of Python to build tools to so. I believe Python can help us make complicated software systems easier to operate and more performant as a result. When I am not coding I like to play disc golf and try speed-running my favorite video games.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Koushik Krishnan</dc:creator><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-20:/pytexas-2024/rest-easy-with-jupyrest-deploy-notebooks-as-web-services.html</guid><category>PyTexas 2024</category></item><item><title>The Design of Everyday APIs</title><link>https://pyvideo.org/pytexas-2024/the-design-of-everyday-apis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lynn Root is a Staff Engineer at Spotify and resident FOSS evangelist. She is a seasoned speaker on building and maintaining distributed systems, and is currently spearheading governance compliance for Spotify's ML/AI platform. Lynn is a global leader of diversity in the Python community, a member of the PyLadies Global Council, and the former Vice Chair of the Python Software Foundation Board of Directors. When her hands are not on a keyboard, they are usually holding a bass guitar.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lynn Root</dc:creator><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-20:/pytexas-2024/the-design-of-everyday-apis.html</guid><category>PyTexas 2024</category></item><item><title>Voice Computing with Python in Jupyter Notebooks</title><link>https://pyvideo.org/pytexas-2024/voice-computing-with-python-in-jupyter-notebooks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Voice Computing with Python in Jupyter Notebooks&lt;/p&gt;
&lt;p&gt;Jupyter Notebook is a popular platform for writing literate programming documents that contain computer code and its output interleaved with prose that describes the code and the output. Recently, it has become possible to use one's voice to interact with Jupyter notebooks. This capability opens access to those with impaired use of their hands. Voice computing also increases the productivity of workers who are tired of typing and increases the productivity of those workers who speak faster than they can type. I split voice computing into three activities: speech-to-text, speech-to-command, and speech-to-code. Several automated speech recognition software packages operate in Jupyter notebooks and support the three activities to a certain degree. I will provide examples of all three activities as they pertain to applications of Python to our research on the molecular structures of proteins and nucleic acids important in medicine. I have developed and shared several software tools at MooersLab on GitHub and Codeberg that facilitate using existing voice computing software in Jupyter.&lt;/p&gt;
&lt;p&gt;Speaker: Blaine Mooers&lt;/p&gt;
&lt;p&gt;Blaine Mooers is an associate professor of biochemistry and physiology at the University of Oklahoma Health Sciences. He has been using Python to develop tools to ease the use of structural biology software by his students and other scientists. He has spoken at Jupyter Con and participated in several SciPy Conferences.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Blaine Mooers</dc:creator><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-20:/pytexas-2024/voice-computing-with-python-in-jupyter-notebooks.html</guid><category>PyTexas 2024</category></item><item><title>Working with Audio in Python feat. Pedalboard</title><link>https://pyvideo.org/pytexas-2024/working-with-audio-in-python-feat-pedalboard.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working with Audio in Python (feat. Pedalboard)&lt;/p&gt;
&lt;p&gt;Python can do (nearly) anything, but using Python to work with audio has always been a complicated and messy affair. In this talk, we'll be going through how digital audio works, how Python can be used to play with audio data, and how a new library - Pedalboard - can help. Pedalboard is a simple, fast, and performant library for doing common audio tasks in Python, including applying effects, using VSTs and audio plugins, and encoding/decoding various audio formats.&lt;/p&gt;
&lt;p&gt;Speaker: Peter Sobot&lt;/p&gt;
&lt;p&gt;Peter is a Staff Machine Learning Engineer at Spotify in New York, where he helps lead their Audio Intelligence Lab - a machine learning research lab dedicated to pushing the state of the art in audio-based machine learning. He's secretly Canadian (howdy neighbour!) and when not hacking on audio software, he plays drums and bass in a handful of bands.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Sobot</dc:creator><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-04-20:/pytexas-2024/working-with-audio-in-python-feat-pedalboard.html</guid><category>PyTexas 2024</category></item></channel></rss>