<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_grant-paton-simpson.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-09-11T00:00:00+00:00</updated><entry><title>Practical Python Async for Dummies</title><link href="https://pyvideo.org/kiwi-pycon-2016/practical-python-async-for-dummies.html" rel="alternate"></link><published>2016-09-11T00:00:00+00:00</published><updated>2016-09-11T00:00:00+00:00</updated><author><name>Grant Paton-Simpson</name></author><id>tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/practical-python-async-for-dummies.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Grant Paton-Simpson
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/121/"&gt;https://kiwi.pycon.org/schedule/presentation/121/&lt;/a&gt;
What's the point of faster computers if our code spends most of its time waiting for slower processes to complete. Shouldn't we be using asynchronous code to make lots of things happen simultaneously? Probably, but isn't that really tricky to do? The goal of this talk is to work through some very simple snippets of Python code that make common tasks much, much faster with minimal fuss.&lt;/p&gt;
</summary><category term="async"></category><category term="for dummies"></category></entry><entry><title>Grant Paton-Simpson - SOFA Statistics - Developing, packaging, and promoting a Python open source project</title><link href="https://pyvideo.org/kiwi-pycon-2009/grant-paton-simpson---sofa-statistics---developin.html" rel="alternate"></link><published>2009-11-07T00:00:00+00:00</published><updated>2009-11-07T00:00:00+00:00</updated><author><name>Grant Paton-Simpson</name></author><id>tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/grant-paton-simpson---sofa-statistics---developin.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SOFA Statistics - Developing, packaging and promoting a Python open
source project&lt;/p&gt;
&lt;p&gt;Presented by Grant Paton-Simpson&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Overview of an open source Python project. Will cover wxPython (GUI
toolkit) plus graphics generally; quirks of different databases; making
python installer packages; using Sourceforge, Freshmeat, and Launchpad
(and Bazaar); and promoting the project.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;SOFA Statistics (&lt;a class="reference external" href="http://www.sofastatistics.com/"&gt;http://www.sofastatistics.com/&lt;/a&gt;) is an open source
desktop Python application with an emphasis on ease of use, learn as you
go, and beautiful output. The talk will cover technical aspects of the
project as well as project management issues. Specific areas covered
will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Using the cross-platform GUI toolkit wxPython (including wxWebKit and
the grid widgets) plus initial exploration of Matplotlib and Raphael
(Javascript and SVG)&lt;/li&gt;
&lt;li&gt;Experience using different database engines including SQLite, MySQL,
MS Access, and MS SQL Server&lt;/li&gt;
&lt;li&gt;Issues with standard statistics modules e.g. in SciPy&lt;/li&gt;
&lt;li&gt;Making python installer packages â€“ currently only deb packages and
Windows installers (using NSIS). Plus managing releases.&lt;/li&gt;
&lt;li&gt;Using Sourceforge, Freshmeat, and Launchpad (including Bazaar)&lt;/li&gt;
&lt;li&gt;Promoting the project through blogging, answering posts e.g. Ubuntu,
wikipedia, special aggregator lists and reviews, presentations,
articles, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Questions are very welcome as this is a very broad topic.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</summary><category term="kiwipycon"></category><category term="kiwipycon2009"></category><category term="launchpad"></category><category term="opensource"></category><category term="sofa"></category><category term="sourceforge"></category></entry><entry><title>Python and Creative Data Analysis</title><link href="https://pyvideo.org/kiwi-pycon-2013/python-and-creative-data-analysis.html" rel="alternate"></link><published>2013-09-12T00:00:00+00:00</published><updated>2013-09-12T00:00:00+00:00</updated><author><name>Grant Paton-Simpson</name></author><id>tag:pyvideo.org,2013-09-12:kiwi-pycon-2013/python-and-creative-data-analysis.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Python + SQL/CSV + matplotlib + HTML make it possible to create flexible
and sophisticated analyses. If you want to express something about your
data, there is probably a way of doing it using these tools. This talk
will be about some lessons learned.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;#64; Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Novice&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python + SQL/CSV + matplotlib + HTML make it possible to create flexible
and sophisticated analyses of data from your spreadsheet or database. If
you want to express something about your data, there is probably a way
of doing it using these tools. The presentation will include both
general principles and specific technical tips (who knew named tuples
would be so useful!). Bring questions and enthusiasm. Data analysis
should be fun.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/grant-paton-simpson-python-and-creative-data-analysis"&gt;https://speakerdeck.com/nzpug/grant-paton-simpson-python-and-creative-data-analysis&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>basil - making it easy to spin up best practice python web frameworks</title><link href="https://pyvideo.org/kiwi-pycon-2014/basil-making-it-easy-to-spin-up-best-practice-p.html" rel="alternate"></link><published>2014-09-14T00:00:00+00:00</published><updated>2014-09-14T00:00:00+00:00</updated><author><name>Ben Denham</name></author><id>tag:pyvideo.org,2014-09-14:kiwi-pycon-2014/basil-making-it-easy-to-spin-up-best-practice-p.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python is a great language for web development but spinning up Python
web frameworks for development is still not as easy as it could be -
especially if following a particular form of best practice e.g. altering
the standard folder structure. Basil addresses this pain point. Use
cases include students building basic web apps and experienced devs
trying out less familiar web frameworks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python is a great language for web development but spinning up Python
web frameworks for development is still not as easy as it could be -
especially if you're trying to follow a particular form of best practice
e.g. altering the standard folder structure, or separating secrets
(unversioned) from settings (versioned). And even if you are familiar
with one framework, it may not be as easy to spin up another one. The
basil project is an attempt to address this pain point. Use cases may
include a teaching session where students are learning Python by
building a basic web application. Or an experienced developer wanting to
try out an alternative web framework. The presentation will look at some
of the challenges involved in designing basil.&lt;/p&gt;
&lt;p&gt;The talk will cover the following topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;standard user experience of setting up a web framework for Python
(contrasted with other languages)&lt;/li&gt;
&lt;li&gt;the user experience of basil&lt;/li&gt;
&lt;li&gt;use cases for basil (new developers, experienced developers,
teaching)&lt;/li&gt;
&lt;li&gt;existing alternative solutions&lt;/li&gt;
&lt;li&gt;benefits of using vagrant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/ben-denham-basil-making-it-easy-to-spin-up-best-practice-python-web-frameworks"&gt;https://speakerdeck.com/nzpug/ben-denham-basil-making-it-easy-to-spin-up-best-practice-python-web-frameworks&lt;/a&gt;&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Lightning Talks</title><link href="https://pyvideo.org/kiwi-pycon-2014/lightning-talks-12.html" rel="alternate"></link><published>2014-09-14T00:00:00+00:00</published><updated>2014-09-14T00:00:00+00:00</updated><author><name>Jen Zajac</name></author><id>tag:pyvideo.org,2014-09-14:kiwi-pycon-2014/lightning-talks-12.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;01 - Jen Zajac - PRIZE DRAW - 1:44 02 - Steven Ellis - LCA Auckland 2015
- 5:43 03 - Jay Gattuso - Heritage Preserve; #WeWantJam - 8:54 04 -
James Polly - Fewer Boilerplate! - 12:07 05 - Aurynn Shaw - Let me show
you the world - 16:19 06 - Ronen Baram - MySQL Performance Schema -
19:41 07 - Douglas Bagnall - Julia - 22:14 08 - Grant Paton-Simpson /
Richard Shea - NZ Python Promotion Pamhplet 24:50 09 - Elliot
Paton-Simpson - Blackbox - 27:23 10 - Danny Adair / Thomi Richards - New
Zealand Python User Group - 30:45 11 - Ben Olsen - Docker &amp;amp; Python -
35:37 12 - Tim Penhey - Object Factories for TDD - 40:46 13 - Hamish
Campbell - Horrible Python Obfuscation Tricks - 43:20 14 - Nick Wareing
- Arduino Pull Request Notifier - 48:35 15 - Giovanni Moretti -
Dynamically creating Python tutorials and presentations - 53:12 16 -
Robert Coup - Bad-ass Postgres Tricks - 58:36 17 - Juergen Brendel -
&amp;quot;One button&amp;quot; test and deploy on AWS - 1:03:59 18 - Tobi Wulff - Python
Anti-Patterns - 1:09:14 19 - Sanjay Wadhwa - Map Production using Python
scripts - 1:14:32 20 - Chris McDowall - Making weird maps with Python -
1:19:34&lt;/p&gt;
</summary><category term="lightning talks"></category></entry></feed>