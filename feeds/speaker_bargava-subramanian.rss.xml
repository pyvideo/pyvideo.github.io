<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 05 Aug 2016 00:00:00 +0000</lastBuildDate><item><title>Building better machine learning algorithms for a Data platform with Python</title><link>https://pyvideo.org/pycon-pl-2015/building-better-machine-learning-algorithms-for-a-data-platform-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data Analytics platforms, with predictive models at their core, are the buzzword in Enterprise Analytics. Having been on both sides - a consultant providing analytics and a consumer of analytics, Iâ€™ve realized that there are few, if any, runaway winners. Rightly so. It is one of the hottest growth areas. This talk would go over some of the ingredients to building successful machine learning algorithms for the data analytics platform using Python. It is probably easy to build a simplistic machine learning model. But what does it take to build reasonably good, or even better - a state-of-art, model? What is the impact on the design/architecture of the data science components when data scales? Is there a secret sauce? When data scales, what are the trade-offs to consider? How far can one go when expert domain knowledge is not available in-house ? Based on learnings and results from actual business use cases, the talk would try to answer those above questions, along with the constraints various choices impose when creating the platform - when using Python stack. There will be emphasis on the following with actual results: Feature engineering, modeling selection, ensembling, importance of bias-variance and generalization. Expected Background of Audience: Anyone with an interest in analytics.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bargava Subramanian</dc:creator><pubDate>Sun, 18 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-18:pycon-pl-2015/building-better-machine-learning-algorithms-for-a-data-platform-with-python.html</guid></item><item><title>Machine Learning: Power of Ensembles</title><link>https://pyvideo.org/europython-2016/machine-learning-power-of-ensembles.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bargava Subramanian - Machine Learning: Power of Ensembles
[EuroPython 2016]
[22 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/machine-learning-power-of-ensembles"&gt;https://ep2016.europython.eu//conference/talks/machine-learning-power-of-ensembles&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;In Machine Learning, the power of combining many models have proven to
successfully provide better results than single models.&lt;/p&gt;
&lt;p&gt;The primary goal of the talk is to answer the following questions:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Why and How ensembles produce better output?&lt;/li&gt;
&lt;li&gt;When data scales, what's the impact? What are the trade-offs to consider?&lt;/li&gt;
&lt;li&gt;Can ensemble models eliminate expert domain knowledge?&lt;/li&gt;
&lt;/ol&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;It is relatively easy to build a first-cut machine learning model. But
what does it take to build a reasonably good model, or even a state-
of-art model ?&lt;/p&gt;
&lt;p&gt;Ensemble models. They are our best friends. They help us exploit the
power of computing. Ensemble methods aren't new. They form the basis
for some extremely powerful machine learning algorithms like random
forests and gradient boosting machines. The key point about ensemble
is that consensus from diverse models are more reliable than a single
source. This talk will cover how we can combine model outputs from
various base models(logistic regression, support vector machines,
decision trees, neural networks, etc) to create a stronger/better
model output.&lt;/p&gt;
&lt;p&gt;This talk will cover various strategies to create ensemble models.&lt;/p&gt;
&lt;p&gt;Using third-party Python libraries along with scikit-learn, this talk
will demonstrate the following ensemble methodologies:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Bagging&lt;/li&gt;
&lt;li&gt;Boosting&lt;/li&gt;
&lt;li&gt;Stacking&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Real-life examples from the enterprise world will be show-cased where
ensemble models produced better results consistently when compared
against single best-performing models.&lt;/p&gt;
&lt;p&gt;There will also be emphasis on the following: Feature engineering,
model selection, importance of bias-variance and generalization.&lt;/p&gt;
&lt;p&gt;Creating better models is the critical component of building a good
data science product.&lt;/p&gt;
&lt;p&gt;A preliminary version of the slides is available
&lt;a class="reference external" href="https://speakerdeck.com/bargava/power-of-ensembles"&gt;here&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bargava Subramanian</dc:creator><pubDate>Fri, 05 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-05:europython-2016/machine-learning-power-of-ensembles.html</guid></item><item><title>Communicating Model Results</title><link>https://pyvideo.org/scipy-2016/communicating-model-results-scipy-2016-bargava-subramanian.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For a data scientist building predictive models, the following are important:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;How good is the model ?&lt;/li&gt;
&lt;li&gt;How good is it compared to competing/alternate models?&lt;/li&gt;
&lt;li&gt;Is there a way to identify what worked in the models built so far, to leverage it to build something even better?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The stakeholder/end-user who finally uses the output from the model, for whom the ML process is mostly black-box, is concerned with the following:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;How to trust the model output?&lt;/li&gt;
&lt;li&gt;How to understand the drivers?&lt;/li&gt;
&lt;li&gt;How to do what-if analysis?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The unifying theme that could answer most of the above questions is visualization. The biggest challenge is to find a way to visualize the model, the model fitting process and the impact of drivers. This talk summarizes the learnings and key takeaways when communicating model results.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bargava Subramanian</dc:creator><pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-14:scipy-2016/communicating-model-results-scipy-2016-bargava-subramanian.html</guid><category>SciPy 2016</category></item></channel></rss>