<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 17 Oct 2018 00:00:00 +0000</lastBuildDate><item><title>Unique ways to Hack into a Python Web Service</title><link>https://pyvideo.org/djangocon-us-2018/unique-ways-to-hack-into-a-python-web-service.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python covers a significant portion of the present day Web services
landscape because of frameworks like Django, Flask, CherryPy etc. Many
Highly Scalable services are built on one or more of these frameworks.&lt;/p&gt;
&lt;p&gt;However, there is a perception among developers that these frameworks
protected all classes of Web attacks and the OWASP Top 10
vulnerabilities. This is because of the inherent middleware that has
battle-tested controls against some common vulnerabilities like CSRF,
SQL Injection, and XSS. However, I have observed that many Python devs
do not watch out for lesser- known vulnerabilities that seem to be rife
in many Python Web Apps. For instance, in more recent security tests
against Python Web Services that our team executes, I find that
vulnerabilities like Insecure Deserialization, XML External Entities,
Server-Side Template Injection and Authorization Flaws are quite
prevalent.&lt;/p&gt;
&lt;p&gt;As a developer (largely of Python Web Apps), I find that there are some
simple steps that engineering teams can take towards finding and fixing
such vulnerabilities with Python Web Services built on Django and Flask.
My talk is meant to be a holistic perspective on finding and fixing some
uncommon flaws in Python Web Apps. The talk will be replete with
multiple demos, anecdotes, and examples of secure and insecure code in
Python. I will also delve into SAST and DAST techniques (AST and ZAP
Custom Scripts) to identify such flaws in python web applications.&lt;/p&gt;
&lt;p&gt;The example repository will be available on GitHub for the community to
use.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tilak T</dc:creator><pubDate>Wed, 17 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-17:djangocon-us-2018/unique-ways-to-hack-into-a-python-web-service.html</guid></item></channel></rss>