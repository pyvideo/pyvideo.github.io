<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_vigneshwer-dhinakaran.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-11-23T00:00:00+00:00</updated><entry><title>Demystifying speech recognition with Project DeepSpeech</title><link href="https://pyvideo.org/pycon-hk-2018/demystifying-speech-recognition-with-project-deepspeech.html" rel="alternate"></link><published>2018-11-23T00:00:00+00:00</published><updated>2018-11-23T00:00:00+00:00</updated><author><name>Vigneshwer Dhinakaran</name></author><id>tag:pyvideo.org,2018-11-23:pycon-hk-2018/demystifying-speech-recognition-with-project-deepspeech.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Our voices are no longer a mystery to speech recognition (SR) software,
the technology powering these services has amazed the humanity with its
ability to understand us. This talk aims to cover the intrinsic details
of advanced state of art SR algorithms with live demos of Project
DeepSpeech.&lt;/p&gt;
&lt;p&gt;A research says that “50% of all searches will be voice searches by
2020”. World’s technology giants have placed big bets with their
investments in services providing voice search, personal digital
assistant, IoT devices etc. Solving the problem of speech recognition is
a herculean task, given the complexity involved with data like human
voice.&lt;/p&gt;
&lt;p&gt;The talk will cover a brief history of speech recognition algorithms,
the challenges associated with building these systems and then explain
how one can build an advance speech recognition system using the power
of deep learning and for illustration, we will deep dive into Project
DeepSpeech. Project DeepSpeech is an open source Speech-To-Text engine
developed by Mozilla Research based on Baidu’s Deep Speech research
paper and implemented using Google’s TensorFlow library.&lt;/p&gt;
&lt;p&gt;Speech recognition is not all about the technology, there are a lot more
concerns, challenges around how these AI models are being part of our
day to day life, its biases etc. The bigger question revolves around
centralization of these AI services, projects like Common Voice
addresses these problems by enabling all to be part of this revolution,
a part of the talk will focus on how people need to approach these type
of research keeping in mind the community and humanitarian benefits as
first priority.&lt;/p&gt;
</summary></entry><entry><title>Pumping up Python modules using Rust</title><link href="https://pyvideo.org/pycon-apac-2018/pumping-up-python-modules-using-rust.html" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Vigneshwer Dhinakaran</name></author><id>tag:pyvideo.org,2018-06-02:pycon-apac-2018/pumping-up-python-modules-using-rust.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn to build high performance and memory safe Python extensions using
Rust. Discover this and more tips to boost up your Python application.&lt;/p&gt;
</summary></entry><entry><title>Pumping up Python modules using Rust</title><link href="https://pyvideo.org/pycon-us-2018/pumping-up-python-modules-using-rust.html" rel="alternate"></link><published>2018-05-13T00:00:00+00:00</published><updated>2018-05-13T00:00:00+00:00</updated><author><name>vigneshwer dhinakaran</name></author><id>tag:pyvideo.org,2018-05-13:pycon-us-2018/pumping-up-python-modules-using-rust.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you’ve spent much time writing (or debugging) Python performance problems, you’ve probably had a hard time managing memory with its limited language support.&lt;/p&gt;
&lt;p&gt;In this talk, we venture deep into the belly of the Rust Language to uncover the secret incantations for building high performance and memory safe Python extensions using Rust.&lt;/p&gt;
&lt;p&gt;Rust has a lot to offer in terms of safety and performance for high-level programming languages such Python, Ruby, Js and more with its easy Foreign Function Interface capabilities which enables developers to easily develop bindings for foreign code.&lt;/p&gt;
</summary><category term="rust"></category></entry></feed>