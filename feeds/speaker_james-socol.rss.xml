<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Tue, 04 Sep 2012 00:00:00 +0000</lastBuildDate><item><title>How we found our security best practices (and what they are)</title><link>https://pyvideo.org/djangocon-us-2012/how-we-found-our-security-best-practices-and-wha.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Mozilla takes data security very seriously. We have AppSec, OpSec, and
InfraSec teams, and our web developers have baked our security best
practices into documentation and a Django app called Funfactory. Hear
how we came to those best practices, what they are, and how to follow
them.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Privacy and security are key parts of Mozilla's mission, and we build
some of the largest Django applications on the web, so being at the
absolutely forefront of security is crucial to us. And having a great
user experience is, too. So over the past few years, we've developed a
number of proposals, tools --like Bleach and django-ratelimit--and best
practices, and we've wrapped these up into our application template
Playdoh and an app called Funfactory.&lt;/p&gt;
&lt;p&gt;I'll share those best practices and their motivations. We'll also go
over a number of tools, settings, and even some fairly new web standard
proposals (with tools, of course) to help you build the most secure
Django applications you can, at whatever scale you're building.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Socol</dc:creator><pubDate>Tue, 04 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-04:djangocon-us-2012/how-we-found-our-security-best-practices-and-wha.html</guid><category>django</category><category>security</category></item></channel></rss>