<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Lacey Williams Henschel</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 20 Feb 2021 00:00:00 +0000</lastBuildDate><item><title>A More Accessible Django Girls</title><link>https://pyvideo.org/django-birthday/a-more-accessible-django-girls.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Appropriate planning and accommodations make Django Girls workshops and
other tech events more open to many groups, including people with
disabilities, Deaf attendees, attendees with mental illnesses, and more.
You'll leave this talk with some concrete things you can do to make your
next meetup, workshop, or conference more inclusive of people with
disabilities, including how to advertise your accommodations, what to
look for in a venue, and some free tools to help your website be more
accessible.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lacey Williams Henschel</dc:creator><pubDate>Sat, 11 Jul 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-07-11:/django-birthday/a-more-accessible-django-girls.html</guid><category>Django Birthday</category></item><item><title>Jane Austen on PEP8: Tips from an English Major on Writing Better Code</title><link>https://pyvideo.org/djangocon-us-2015/jane-austen-on-pep8-by-lacey-williams-henschel.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Jane Austen on PEP8: Tips from an English Major on Writing Better Code&lt;/p&gt;
&lt;p&gt;I have two English degrees, and I’ve identified some concrete ways this
makes me a better developer. This talk will discuss how we can take
lessons from literature to write more readable code, make better tests,
and create more usable websites.&lt;/p&gt;
&lt;p&gt;I’ll compare Two Scoops of Django to Strunk and White’s The Elements of
Style, that familiar freshman comp text, to explore how they are more
alike than they are different. We’ll discuss the importance of
readability, creating a “story arc” in your tests through good user
stories, how variables names have characterization, and the importance
of whitespace and good formatting to everyone. I’ll also compare PEP8 to
the MLA Handbook; there’s a reason both disciplines have a style guide!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lacey Williams Henschel</dc:creator><pubDate>Thu, 24 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-24:/djangocon-us-2015/jane-austen-on-pep8-by-lacey-williams-henschel.html</guid><category>DjangoCon US 2015</category></item><item><title>Hermione Granger and the Wizard Information System</title><link>https://pyvideo.org/djangocon-europe-2016/hermione-granger-and-the-wizard-information-system.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You can find more about this talk on &lt;a class="reference external" href="https://2016.djangocon.eu/speakers/6"&gt;djangocon.eu&lt;/a&gt;. This video is hosted by &lt;a class="reference external" href="http://opbeat.com/community/posts/hermione-granger-and-the-wizard-information-system-by-lacey-williams-henschel/"&gt;opbeat.com&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lacey Williams Henschel</dc:creator><pubDate>Thu, 31 Mar 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-03-31:/djangocon-europe-2016/hermione-granger-and-the-wizard-information-system.html</guid><category>DjangoCon Europe 2016</category><category>django</category></item><item><title>An Intro to Docker for Djangonauts</title><link>https://pyvideo.org/djangocon-europe-2018/an-intro-to-docker-for-djangonauts.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you've never used it before, Docker can be a little overwhelming. There is new vocabulary to learn, new commands to memorize, and new files to add to each project. Most resources fall into one of two camps: they teach you the bare bones of Docker but still leave you with too many questions to comfortably try it on your own, or they throw you into the deep end by assuming you're more familiar with Docker than you are.&lt;/p&gt;
&lt;p&gt;In this talk, you will find that middle ground: a talk that doesn't assume you're familiar with Docker and so keeps everything simple, but leaves you with enough information that you can get started as soon as you leave the room. Together, we will step through the parts of a Dockerfile and learn what they do.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lacey Williams Henschel</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:/djangocon-europe-2018/an-intro-to-docker-for-djangonauts.html</guid><category>DjangoCon Europe 2018</category></item><item><title>Day 3 Lightning Talks</title><link>https://pyvideo.org/djangocon-europe-2018/day-3-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon Europe Crew&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lacey Williams Henschel</dc:creator><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-25:/djangocon-europe-2018/day-3-lightning-talks.html</guid><category>DjangoCon Europe 2018</category></item><item><title>Day 2 Lightning Talks</title><link>https://pyvideo.org/djangocon-europe-2018/day-2-lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon Europe Crew&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Körner</dc:creator><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-24:/djangocon-europe-2018/day-2-lightning-talks.html</guid><category>DjangoCon Europe 2018</category></item><item><title>DjangoCon Closing Remarks</title><link>https://pyvideo.org/djangocon-us-2017/djangocon-closing-remarks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon US 2017 - DjangoCon Closing Remarks by Lacey Williams Henschel&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lacey Williams Henschel</dc:creator><pubDate>Mon, 14 Aug 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-08-14:/djangocon-us-2017/djangocon-closing-remarks.html</guid><category>DjangoCon US 2017</category></item><item><title>An Intro to Docker for Djangonauts</title><link>https://pyvideo.org/djangocon-us-2018/an-intro-to-docker-for-djangonauts.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you’ve never used it before, Docker can be a little overwhelming.
There is new vocabulary to learn, new commands to memorize, and new
files to add to each project. Most resources fall into one of two camps:
they teach you the bare bones of Docker but still leave you with too
many questions to comfortably try it on your own, or they throw you into
the deep end by assuming you’re more familiar with Docker than you are.&lt;/p&gt;
&lt;p&gt;In this talk, you will find that middle ground: a talk that doesn’t
assume you’re familiar with Docker and so keeps everything simple, but
leaves you with enough information that you can get started as soon as
you leave the room. Together, we will step through the parts of a
Dockerfile and learn what they do. Then, I’ll introduce you to Docker
Compose and explain why using it to run multiple containers is helpful.
Finally, you will learn to run commands and execute scripts from the
command line using Docker, how to enter a container and why you might
need to, and what to do before you go home for the day.&lt;/p&gt;
&lt;p&gt;Audience: Djangonauts who are curious about Docker, need to learn to use
it for work or personal projects, or who seek a better understanding of
containers in general. Audience members might be beginners to
Python/Django or not, but they are definitely beginners to
containerizing all the things.&lt;/p&gt;
&lt;p&gt;The audience should be familiar with basic Python concepts such as
variables and running things from the command line. Some basic
familiarity with Django would be helpful, but beginner Djangonauts will
be able to follow along.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lacey Williams Henschel</dc:creator><pubDate>Mon, 15 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-15:/djangocon-us-2018/an-intro-to-docker-for-djangonauts.html</guid><category>DjangoCon US 2018</category></item><item><title>"What You Should Know About Django REST Framework" - Lacey Williams Henschel (PyCascades 2021)</title><link>https://pyvideo.org/pycascades-2021/what-you-should-know-about-django-rest-framework-lacey-williams-henschel-pycascades-2021.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;My goal with this talk is to make Django REST Framework easier and more approachable for developers who are new to DRF. Many people feel that you should start in DRF with the &lt;cite&gt;APIView&lt;/cite&gt; and a manual serializer, but I disagree! DRF ships with some powerful tools that make developers' lives easier, and many people never even learn what those tools are. Using the built-in tools like &lt;cite&gt;ModelViewSet&lt;/cite&gt;, coupled with always having Classy DRF open in a tab, helped me gain a full understanding of how DRF worked (and a better understanding of how Django worked).&lt;/p&gt;
&lt;p&gt;This talk is not a DRF tutorial.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;1 min: Intro, why the audience can trust me&lt;/li&gt;
&lt;li&gt;3 min (running total: 4 min): &lt;cite&gt;ModelViewSet&lt;/cite&gt; and how it's composed of all the mixins that allow you to perform different operations on your database objects (&lt;cite&gt;CreateModelMixin&lt;/cite&gt;, &lt;cite&gt;RetrieveModelMixin&lt;/cite&gt;, etc.).&lt;/li&gt;
&lt;li&gt;2 min (running total: 6 min) The basic attributes that are added to most Viewsets like &lt;cite&gt;permission_classes&lt;/cite&gt;, &lt;cite&gt;queryset&lt;/cite&gt;, and &lt;cite&gt;serializer_class&lt;/cite&gt;.&lt;/li&gt;
&lt;li&gt;5 min (running total: 11 min) How to override built-in methods to customize behavior, like overriding &lt;cite&gt;get_serializer_class()&lt;/cite&gt; to return different serializers for List vs. Detail requests.&lt;/li&gt;
&lt;li&gt;4 min (running total: 15 min) How to add multiple permission classes to &lt;cite&gt;permission_classes&lt;/cite&gt; to create modular permissions. Note: This will not cover how to write custom permission classes, only how to use them.&lt;/li&gt;
&lt;li&gt;5 min (running total: 20 min) Overview of the generic views, noting how they are also just combinations of the &lt;cite&gt;APIView&lt;/cite&gt; and the necessary mixins. Notes on when you might use them (example: you want a viewset that allows all actions except delete)&lt;/li&gt;
&lt;li&gt;4 min (running total: 24 min) How to customize the API by adding an action to a viewset when you need something different than the built-in CRUD operations&lt;/li&gt;
&lt;li&gt;1 min (running total: 25 min) Outro, where to find me to ask questions, where to find the slides, links to further learning&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will be referring to [Classy DRF](&lt;a class="reference external" href="http://www.cdrf.co/"&gt;http://www.cdrf.co/&lt;/a&gt;) throughout the talk. In my experience, many people find the [Classy Class-Based Views](&lt;a class="reference external" href="https://ccbv.co.uk/"&gt;https://ccbv.co.uk/&lt;/a&gt;), [Classy DRF](&lt;a class="reference external" href="http://www.cdrf.co/"&gt;http://www.cdrf.co/&lt;/a&gt;), and that family of helper websites confusing, until they learn how to use them. I want to help the audience learn to use these tools.&lt;/p&gt;
&lt;p&gt;Note: This is a new talk for me. I tend to rehearse my talks a lot, so if time is too tight I will know that ahead of time. The section I would cut for time would be &amp;quot;Overview of the generic views,&amp;quot; because this idea will be introduced in the &lt;cite&gt;ModelViewSet&lt;/cite&gt; section.&lt;/p&gt;
&lt;p&gt;After three amazing in-person conferences, this time we're moving PyCascades online.&lt;/p&gt;
&lt;p&gt;PyCascades is a regional PyCon in the Pacific Northwest, celebrating the west coast Python developer and user community. Our organizing team includes members of the Vancouver, Seattle, and Portland Python user groups.&lt;/p&gt;
&lt;p&gt;Videos are released as CC BY-NC-SA 4.0.&lt;/p&gt;
&lt;p&gt;Produced by Next Day Video Australia: &lt;a class="reference external" href="https://nextdayvideo.com.au"&gt;https://nextdayvideo.com.au&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#pycascades #pycon #python #conference&lt;/p&gt;
&lt;p&gt;Sat Feb 20 11:05:00 2021 at Prerecorded Talks&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lacey Williams Henschel</dc:creator><pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2021-02-20:/pycascades-2021/what-you-should-know-about-django-rest-framework-lacey-williams-henschel-pycascades-2021.html</guid><category>PyCascades 2021</category><category>#pycascades#pycon#python#conference</category><category>pycascades</category><category>pycascades2021</category></item><item><title>PyDX 2015: A Newcomer's Guide to Open Source Contribution</title><link>https://pyvideo.org/pydx-2015/pydx-2015-a-newcomers-guide-to-open-source-contribution.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyDX 2015 talk by Lacey Williams Henschel&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lacey Williams Henschel</dc:creator><pubDate>Sat, 10 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-10:/pydx-2015/pydx-2015-a-newcomers-guide-to-open-source-contribution.html</guid><category>PyDX 2015</category></item><item><title>What if Jane Austen had been an engineer?</title><link>https://pyvideo.org/pygotham-2018/what-if-jane-austen-had-been-an-engineer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a developer with two English degrees, over the years I’ve identified some concrete ways this education makes me a better developer. This talk will discuss how we can take lessons from literature to write more readable code, make better tests, and create more usable websites. At the end of the day, after all, our job is to write. Surely the techniques of great writers have something to teach us.&lt;/p&gt;
&lt;p&gt;In this humanities-based talk, you'll learn about Freytag's pyramid and what it has to do with writing clean code, why writing those dastardly outlines before your term papers helped prepare you for your job as an engineer, and see for yourself how The Zen of Python is basically a modern retelling of Strunk and White's classic Elements of Style. You will leave inspired to go read your favorite book to get some tips for your next project.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lacey Williams Henschel</dc:creator><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-06:/pygotham-2018/what-if-jane-austen-had-been-an-engineer.html</guid><category>PyGotham 2018</category></item></channel></rss>