<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_sphinx.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-06-04T00:00:00+00:00</updated><entry><title>DjangoProject.com - Ricerca Full-Text con PostgreSQL</title><link href="https://pyvideo.org/pycon-italia-2018/djangoprojectcom-ricerca-full-text-con-postgresql.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Paolo Melchiorre</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/djangoprojectcom-ricerca-full-text-con-postgresql.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il sito web ufficiale del progetto &lt;strong&gt;Django&lt;/strong&gt; (
&lt;a class="reference external" href="http://www.djangoproject.com"&gt;www.djangoproject.com&lt;/a&gt; ) è basato
sull’ultima versione stabile di Django, la &lt;strong&gt;documentazione&lt;/strong&gt; del
progetto è generata con &lt;strong&gt;Sphinx&lt;/strong&gt; ed i documenti generati sono poi
memorizzati su &lt;strong&gt;PostgreSQL&lt;/strong&gt; per essere visualizzati sul sito.&lt;/p&gt;
&lt;p&gt;Il modulo per la &lt;strong&gt;ricerca&lt;/strong&gt; della documentazione nel sito del progetto
Django è molto utilizzato e fino a poco tempo fa era &lt;strong&gt;basato&lt;/strong&gt; su
&lt;strong&gt;Elasticsearch&lt;/strong&gt;. L’utilizzo di Elasticsearch ha causato &lt;strong&gt;problemi&lt;/strong&gt;
nella sincronizzazione dei dati e nell’aggiornamento dei driver di
connessione.&lt;/p&gt;
&lt;blockquote&gt;
In questo talk vedremo &lt;strong&gt;come&lt;/strong&gt; ho &lt;strong&gt;aggiornato&lt;/strong&gt; la funzione di
&lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/search/?q=full+text+search"&gt;ricerca&lt;/a&gt;
del &lt;strong&gt;sito del progetto Django&lt;/strong&gt; utilizzando il modulo di &lt;strong&gt;Ricerca
Full- Text&lt;/strong&gt; di Django basato direttamente su &lt;strong&gt;PostgreSQL&lt;/strong&gt;. Questo
ha &lt;strong&gt;semplificato&lt;/strong&gt; molto l’infrastruttura e &lt;strong&gt;velocizzato&lt;/strong&gt; l’
&lt;strong&gt;aggiornamento&lt;/strong&gt; della documentazione, senza perdere nessuna delle
precedenti &lt;strong&gt;funzioni&lt;/strong&gt; di ricerca ma anzi migliorandole ed
aggiungendone altre da tempo richieste dagli &lt;strong&gt;utenti&lt;/strong&gt;.&lt;/blockquote&gt;
&lt;p&gt;Tramite questo talk potrai &lt;strong&gt;imparare&lt;/strong&gt; come &lt;strong&gt;aggiungere&lt;/strong&gt; una nuova
funzione di &lt;strong&gt;Ricerca Full-Text&lt;/strong&gt; nel &lt;strong&gt;tuo progetto&lt;/strong&gt; basato su Django
e PostgreSQL. In alternativa potreai imparare come &lt;strong&gt;aggiornare&lt;/strong&gt; la
ricerca esistente nel tuo sito se usi Elasticsearch o &lt;strong&gt;motori di
ricerca&lt;/strong&gt; simili .&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;em&gt;Per una **introduzione*&lt;/em&gt; ai temi del talk puoi leggere il mio articolo
sulla &lt;a class="reference external" href="http://www.paulox.net/2017/12/22/full-text-search-in-django-with-%20postgresql/"&gt;&amp;quot;Ricerca Full-Text in Django con
PostgreSQL&amp;quot;&lt;/a&gt;
basato sul mio talk presentato al &lt;a class="reference external" href="https://www.pycon.it/conference/talks/ricerca-full-text-in-django-con-%20postgresql"&gt;PyCon
Otto&lt;/a&gt;
nel 2017.*&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 16:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="web"></category><category term="search"></category><category term="postgresql"></category><category term="postgres"></category><category term="database"></category><category term="Python"></category><category term="documentation"></category><category term="django"></category><category term="elasticsearch"></category><category term="sphinx"></category><category term="Full Text Search"></category><category term="python3"></category></entry><entry><title>社内でのSphinx、reSTの広め方</title><link href="https://pyvideo.org/pycon-japan-2012/she-nei-denosphinx-restnoguang-mefang.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>鈴木たかのり</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/she-nei-denosphinx-restnoguang-mefang.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;自分以外誰も Sphinx, reStructuredText を使ったことがない状況で、8名ほどのチームメンバーが全員が普通に使用するようになるまでの物語。&lt;/p&gt;
</summary><category term="sphinx"></category><category term="restructuredtext"></category></entry><entry><title>Sphinx ではじめるドキュメント生活 2012</title><link href="https://pyvideo.org/pycon-japan-2012/sphinx-dehazimerudokiyumentosheng-huo-2012.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>小宮 健</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/sphinx-dehazimerudokiyumentosheng-huo-2012.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;すぐれたドキュメントツールである Sphinx を使って、あなたのドキュメントを書いてみませんか。 Sphinx は多くの OSS のマニュアル、リファレンスで採用されている他、 IT企業でも利用されはじめています。 ドキュメントを作りたくなってしまうとまで言われる Sphinx の魅力を皆さんにご紹介します。&lt;/p&gt;
</summary><category term="sphinx"></category><category term="documentation"></category></entry><entry><title>Sphinx HTML theme 事始め</title><link href="https://pyvideo.org/pycon-japan-2012/sphinx-html-theme-shi-shi-me.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>熊谷 章治</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/sphinx-html-theme-shi-shi-me.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sphinx には組み込みで複数のHTMLテーマが付属しており、defaultのテーマも用意されたパラメータに値を指定すれば、印象をガラリと変えることが可能になります。 今回はSphinxのHTMLテーマの基本的な構成に触れながら、組み込みのテーマでできること、組み込みのHTMLテーマからのもうひと工夫の仕方を軸に、自分が考えるSphinxテーマカスタマイズ手法を紹介したいと思います。&lt;/p&gt;
</summary><category term="sphinx"></category></entry><entry><title>Sphinxの平凡な使い方 ～業務での利用事例～</title><link href="https://pyvideo.org/pycon-japan-2012/sphinxnoping-fan-nashi-ifang-ye-wu-denoli-yong-shi-li.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>山田 剛</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/sphinxnoping-fan-nashi-ifang-ye-wu-denoli-yong-shi-li.html</id><summary type="html"></summary><category term="sphinx"></category></entry><entry><title>Sphinxを使って本を書こう</title><link href="https://pyvideo.org/pycon-japan-2012/sphinxwoshi-tsuteben-woshu-kou.html" rel="alternate"></link><published>2012-09-16T00:00:00+00:00</published><updated>2012-09-16T00:00:00+00:00</updated><author><name>清水川 貴之</name></author><id>tag:pyvideo.org,2012-09-16:pycon-japan-2012/sphinxwoshi-tsuteben-woshu-kou.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;私の過去2冊の翻訳・執筆した本の経験から、Sphinxを活用して執筆環境を自動化したときの手順とそのメリットなどを紹介します。&lt;/p&gt;
</summary><category term="sphinx"></category><category term="automation"></category></entry><entry><title>Help your colleagues help themselves - a Sphinx tutorial</title><link href="https://pyvideo.org/pycon-israel-2018/help-your-colleagues-help-themselves-a-sphinx-tutorial.html" rel="alternate"></link><published>2018-06-04T00:00:00+00:00</published><updated>2018-06-04T00:00:00+00:00</updated><author><name>Dalya Gartzman</name></author><id>tag:pyvideo.org,2018-06-04:pycon-israel-2018/help-your-colleagues-help-themselves-a-sphinx-tutorial.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever found yourself developing a tool only to find it already exists somewhere else in the code? Have you ever wondered what does AlexsCoolFunction do? Did you ever put a funny comment in your code and was upset that noone will read it? Then maybe it’s time to have a better documentation system! Join me for this tutorial, where we will sail through the onboarding stage of Sphinx - an automated documentation package, and learn how we can all collaborate better.&lt;/p&gt;
</summary><category term="sphinx"></category></entry><entry><title>Practical Sphinx</title><link href="https://pyvideo.org/pycon-us-2018/practical-sphinx.html" rel="alternate"></link><published>2018-05-12T00:00:00+00:00</published><updated>2018-05-12T00:00:00+00:00</updated><author><name>Carol Willing</name></author><id>tag:pyvideo.org,2018-05-12:pycon-us-2018/practical-sphinx.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Each member of your project team uses something different to document
their work -- RestructuredText, Markdown, and Jupyter Notebooks. How do
you combine all of these into useful documentation for your project's users.
Sphinx and friends to the rescue!&lt;/p&gt;
&lt;p&gt;Learn how to integrate documentation into your everyday development
workflow, apply best practices, and use modern development tools and
services, like Travis CI and ReadTheDocs, to create engaging and up-to-date
documentation which users and contributors will love.&lt;/p&gt;
</summary><category term="documentation"></category><category term="sphinx"></category><category term="readthedocs"></category></entry><entry><title>Easy contributable internationalization process with Sphinx</title><link href="https://pyvideo.org/pycon-singapore-2015/easy-contributable-internationalization-process-with-sphinx.html" rel="alternate"></link><published>2015-06-18T00:00:00+00:00</published><updated>2015-06-18T00:00:00+00:00</updated><author><name>Takayuki Shimizukawa</name></author><id>tag:pyvideo.org,2015-06-18:pycon-singapore-2015/easy-contributable-internationalization-process-with-sphinx.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sphinx can extract paragraphs from sphinx document and store them into gettext format translation catalog files. Gettext format translation catalog is easy to translate from one language to other languages. Also Sphinx support internationalization by using such catalog files. You can use your favorite editors or services to translate your sphinx docs.&lt;/p&gt;
</summary><category term="sphinx"></category><category term="i18n"></category></entry><entry><title>Regole pratiche per testare la documentazione</title><link href="https://pyvideo.org/pycon-italia-2017/regole-pratiche-per-testare-la-documentazione.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Marco Buttu</name></author><id>tag:pyvideo.org,2017-04-09:pycon-italia-2017/regole-pratiche-per-testare-la-documentazione.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nel lontano 1999 Tim Peters fece alcune
&lt;a class="reference external" href="https://groups.google.com/forum/#!msg/comp.lang.python/DfzH5Nrt05E/Yyd3s7fPVxwJ"&gt;considerazioni&lt;/a&gt;
in merito alla documentazione del codice. Scrisse che &lt;em&gt;gli esempi non
hanno prezzo&lt;/em&gt;, che &lt;em&gt;gli esempi che non funzionano sono peggio di quelli
inutili&lt;/em&gt;, e che &lt;em&gt;gli esempi che funzionano alla fine diventano esempi
che non funzionano&lt;/em&gt;. Queste sostanzialmente furono le motivazioni che lo
spinsero a scrivere il modulo
&lt;a class="reference external" href="https://docs.python.org/3/library/doctest.html"&gt;doctest&lt;/a&gt; della
libreria standard. Da quel momento nel mondo Python si è iniziato a
prestare particolare attenzione ai test della documentazione. Non
abbastanza però. Si pensi che attualmente (inizio 2017), la
documentazione ufficiale di Python conta circa 450 failures su 2100 test
complessivi. Questi fallimenti sono dovuti solo in minima parte ad
esempi errati. Generalmente (ma anche in questo caso specifico) le cause
sono la mancanza di isolamento tra i test, assieme alla scarsa
dimestichezza con il framework di test. Entrambe le cause possono
portare a brutte sorprese, come ad esempio dei test ballerini, che a
volte passano e a volte no, senza apparente motivo. Lo scopo di questo
talk è quindi mostrare come scrivere correttamente gli esempi ed il
codice presenti nella documentazione (doc utente, tutorial, docstring,
libri, o altro), in modo da tenere sotto controllo la situazione ed
evitare spiacevoli sorprese e perdite di tempo.&lt;/p&gt;
&lt;p&gt;Materiale: &lt;a class="reference external" href="https://github.com/marco-buttu/pycon8"&gt;https://github.com/marco-buttu/pycon8&lt;/a&gt;&lt;/p&gt;
</summary><category term="documentation"></category><category term="sphinx"></category><category term="doctest"></category><category term="testing"></category></entry><entry><title>Sphinx autodoc: automated API documentation</title><link href="https://pyvideo.org/pycon-korea-2015/sphinx-autodoc-automated-api-documentation.html" rel="alternate"></link><published>2015-08-29T00:00:00+00:00</published><updated>2015-08-29T00:00:00+00:00</updated><author><name>Takayuki Shimizukawa</name></author><id>tag:pyvideo.org,2015-08-29:pycon-korea-2015/sphinx-autodoc-automated-api-documentation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sphinx can extract paragraphs from sphinx document and store them into
gettext format translation catalog files.&lt;/p&gt;
&lt;p&gt;Gettext format translation catalog is easy to translate from one
language to other languages.&lt;/p&gt;
&lt;p&gt;Also Sphinx support internationalization by using such catalog files.&lt;/p&gt;
&lt;p&gt;You can use your favorite editors or services to translate your sphinx
docs.&lt;/p&gt;
&lt;p&gt;In this session, I'll explain 3 things; (1) entire process to translate
sphinx docs. (2) automation mechanism for the process. (3) tips, tricks
and traps for writing docs and translating.&lt;/p&gt;
</summary><category term="sphinx"></category></entry><entry><title>Read the docs</title><link href="https://pyvideo.org/pycaribbean-2016/eric-holscher-read-the-docs.html" rel="alternate"></link><published>2016-02-21T00:00:00+00:00</published><updated>2016-02-21T00:00:00+00:00</updated><author><name>Eric Holscher</name></author><id>tag:pyvideo.org,2016-02-21:pycaribbean-2016/eric-holscher-read-the-docs.html</id><summary type="html"></summary><category term="keynote"></category><category term="read the docs"></category><category term="documentation"></category><category term="sphinx"></category></entry><entry><title>Browse and print problems and solutions</title><link href="https://pyvideo.org/europython-2011/browse-and-print-problems-and-solutions.html" rel="alternate"></link><published>2012-02-27T00:00:00+00:00</published><updated>2012-02-27T00:00:00+00:00</updated><author><name>Jonathan Fine</name></author><id>tag:pyvideo.org,2012-02-27:europython-2011/browse-and-print-problems-and-solutions.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Jonathan Fine - 21 June 2011 in &amp;quot;Track Tagliatelle&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the growth of the web, how we publish is changing. Paper alone is
not enough, web pages are also required. And for many web pages it is
not enough to rely on the browser’s print capabilities. Sphinx, used
since 2008 for Python’s documentation, is a creative response to this
tension.&lt;/p&gt;
&lt;p&gt;This talk will take a broader view of the problem. For example, many
browsers support web fonts for display but not for printing. Mathematics
on web pages is still difficult, but SVG holds out much promise not only
for mathematics but for tables and other complex typeset material.
Achieving accessibility remains difficult.&lt;/p&gt;
&lt;p&gt;Based on over 15 year’s experience in print and electronic publishing,
this talk will survey problems and emerging solutions. Software and
sites covered include LaTeX, PDF, SVG, MathJax, web-fonts, PediaPress,
Sphinx and arXiv.&lt;/p&gt;
</summary><category term="accessibility"></category><category term="sphinx"></category><category term="web"></category></entry><entry><title>Sphinx i18n</title><link href="https://pyvideo.org/pycon-de-2013/sphinx-i18n.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Markus Zapke-Gründemann</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/sphinx-i18n.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Sphinx hat schon rudimentäre Unterstützung für die Internationalisierung
von Dokumentationen mit Hilfe von gettext. Dieser Vortrag berichtet über
die eigenen Erfahrungen und diskutiert weitergehende Lösungsansätze.&lt;/p&gt;
</summary><category term="dokumentation"></category><category term="gettext"></category><category term="i18n"></category><category term="internationalisierung"></category><category term="sphinx"></category><category term="transifex"></category></entry><entry><title>Sunday Afternoon Lightning Talks</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--sunday-afternoon-lightning-talks.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Steve Holden</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--sunday-afternoon-lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plenary: Afternoon Lightning Talks&lt;/p&gt;
&lt;p&gt;(02:20) Steve Holden - Lightning talk about lightning talks&lt;/p&gt;
&lt;p&gt;(02:55) Michael Foord - Little Bit of Python podcast, upcoming unittest
stuff, mock&lt;/p&gt;
&lt;p&gt;(08:00) Harald Armin Massa - The real harm of functional programming&lt;/p&gt;
&lt;p&gt;(11:41) Karl ? - FreeBSD certiciation&lt;/p&gt;
&lt;p&gt;(13:50) Peter Fein - Please Pirate&lt;/p&gt;
&lt;p&gt;(19;15) Chris McDonough - writing books with Sphinx
(&lt;a class="reference external" href="http://bfg.repoze.org/book"&gt;repoze.bfg&lt;/a&gt;);
&lt;a class="reference external" href="https://www.createspace.com/"&gt;createspace&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(22:05) Chris Petrilli - celery, distributed task queue&lt;/p&gt;
&lt;p&gt;(26:30) Godefroid Chapelle - vim and pdb&lt;/p&gt;
&lt;p&gt;(29:20) ? - fork() vs. threads&lt;/p&gt;
&lt;p&gt;(33:40) - doing pyweek game with a large number of contributors&lt;/p&gt;
&lt;p&gt;(38:05) Jason Huggins - Orbison&lt;/p&gt;
&lt;p&gt;(43:20) Noufal Brahim - State of Python community in India&lt;/p&gt;
&lt;p&gt;(47:40) Mike Müller - EuroSciPy 2010&lt;/p&gt;
&lt;p&gt;(49:50) David gives away stuff, sprint intros, ...&lt;/p&gt;
</summary><category term="lightning talks"></category><category term="celery"></category><category term="euroscipy"></category><category term="euroscipy2010"></category><category term="fork"></category><category term="freebsd"></category><category term="functionalprogramming"></category><category term="india"></category><category term="orbison"></category><category term="pdb"></category><category term="pycon"></category><category term="pycon2010"></category><category term="pyweek"></category><category term="sphinx"></category><category term="threads"></category><category term="unittest"></category><category term="vim"></category></entry><entry><title>Saturday Afternoon Lightning Talks</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--saturday-afternoon-lightning-talks.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--saturday-afternoon-lightning-talks.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Saturday afternoon lightning talks&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Saturday Afternoon Lightning Talks&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 Eric Holscher - Read the Docs
(&lt;a class="reference external" href="http://readthedocs.org/"&gt;readthedocs.org&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;05:25 Nate Aune - DjangoZoom
(&lt;a class="reference external" href="http://djangozoom.com/"&gt;DjangoZoom&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;09:40 Paul Smith - Update on Japan&lt;/li&gt;
&lt;li&gt;12:40 Phillip von Weitershausen - The English of Programming
Languages (JavaScript)&lt;/li&gt;
&lt;li&gt;18:15 Henrique Bastos - Community Bootstrap&lt;/li&gt;
&lt;li&gt;24:00 Barry Warsaw - flufl.i18n library
(&lt;a class="reference external" href="https://launchpad.net/flufl.i18n"&gt;https://launchpad.net/flufl.i18n&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;31:20 Aron Griffis - Window Manglement with PyWO
(&lt;a class="reference external" href="http://code.google.com/p/pywo/"&gt;http://code.google.com/p/pywo/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;35:00 Josiah Carlson - Over-Engineering for Dummies&lt;/li&gt;
&lt;li&gt;40:35 Grace Law - Get the job you want&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="lightning talks"></category><category term="djangozoom"></category><category term="engineering"></category><category term="flufl.i18n"></category><category term="interviewing"></category><category term="javascript"></category><category term="pycon"></category><category term="pycon2011"></category><category term="pywo"></category><category term="readthedocs"></category><category term="sphinx"></category></entry><entry><title>Writing great documentation</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--writing-great-documentation.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Jacob Kaplan-Moss</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--writing-great-documentation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing great documentation&lt;/p&gt;
&lt;p&gt;Presented by Jacob Kaplan-Moss&lt;/p&gt;
&lt;p&gt;Django’s among the best documented open source projects; I'm intensely
proud of that accomplishment. If any part of Django endures, I hope
it’ll be a “documentation culture” — an ethos that values great,
well-written documentation. To that end, this talk looks at the tools,
tips, and techniques I’ve learned over the years. I hope it helps you
write great documentation, too.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;This talk looks at tips, tools, and techniques you can use to produce
great technical documentation.&lt;/p&gt;
&lt;p&gt;It's split roughly into two parts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Part 1: technique. We'll look at the structural elements that make
documentation useful: tutorials, high-level overviews, topical
guides, reference material, FAQs, and more. We'll cover some tips on
how to get documentation done, and community processes for handling
documentation in teams (open or not). We'll also talk about what I'm
calling &amp;quot;Documentation Driven Development&amp;quot; - a technique riffing off
Test Driven Development that calls for writing documentation before
code.&lt;/li&gt;
&lt;li&gt;Part 2: tools. Over the last couple of years a few fantastic tools
have sprung up that ease the technical aspects of writing
documentation. We'll talk about which tools are suitable for which
uses, and look at a handful of cool tools including
&lt;a class="reference external" href="http://sphinx.pocoo.org/"&gt;Sphinx&lt;/a&gt;,
&lt;a class="reference external" href="http://epydoc.sourceforge.net/"&gt;Epydoc&lt;/a&gt;, and
&lt;a class="reference external" href="http://fitzgen.github.com/pycco/"&gt;http://fitzgen.github.com/pycco/&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk is mostly targeted towards those documenting libraries or
frameworks intended for use by other developers, but much of it probably
applies to any sort of technical documentation.&lt;/p&gt;
</summary><category term="docs"></category><category term="documentation"></category><category term="epydoc"></category><category term="faqs"></category><category term="pycco"></category><category term="pycon"></category><category term="pycon2011"></category><category term="sphinx"></category></entry></feed>