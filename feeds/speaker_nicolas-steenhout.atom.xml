<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_nicolas-steenhout.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-05-09T00:00:00+00:00</updated><entry><title>Accessibility, POUR, and the Pythonistas</title><link href="https://pyvideo.org/pycon-ca-2017/accessibility-pour-and-the-pythonistas.html" rel="alternate"></link><published>2018-05-09T00:00:00+00:00</published><updated>2018-05-09T00:00:00+00:00</updated><author><name>Nicolas Steenhout</name></author><id>tag:pyvideo.org,2018-05-09:pycon-ca-2017/accessibility-pour-and-the-pythonistas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It would be easy to think that since Python is &amp;quot;just&amp;quot; a programming language, we don't have to pay attention to web accessibility. The fact is that most of what we do ends up with some, if not all, front-facing components delivered on the web or mobile via HTML, CSS and JavaScript.&lt;/p&gt;
&lt;p&gt;Accessibility benefits everyone, not just people with disabilities. Whether someone is Deaf or blind, has motor or cognitive disabilities, or doesn't speak English as a first language, or tries to use your app on a mobile device in bright sun, if accessibility hasn't been considered, your app is likely to lock them out of being able to use it. As such, it is mission critical for our code output to take into account web accessibility basics.&lt;/p&gt;
&lt;p&gt;We'll explore the POUR principle: Building apps that are Perceivable, Operably, Understandable and Robust. We'll talk a bit about who is affected by lack of accessibility, and what barriers people may face.&lt;/p&gt;
&lt;p&gt;You'll leave the workshop with a greater understanding of the issues, some practical things to implement, and resources to be able to increase your knowledge.&lt;/p&gt;
</summary><category term="accessibility"></category></entry></feed>