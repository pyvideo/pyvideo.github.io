<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Adam Johnson</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_adam-johnson.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-09-18T00:00:00+00:00</updated><subtitle></subtitle><entry><title>How to Hack a Django Website - Adam Johnson</title><link href="https://pyvideo.org/djangocon-europe-2020/how-to-hack-a-django-website-adam-johnson.html" rel="alternate"></link><published>2020-09-18T00:00:00+00:00</published><updated>2020-09-18T00:00:00+00:00</updated><author><name>Adam Johnson</name></author><id>tag:pyvideo.org,2020-09-18:/djangocon-europe-2020/how-to-hack-a-django-website-adam-johnson.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon Europe 2020 (Virtual)
September 18, 2020 - 17h10 (GMT+1)&lt;/p&gt;
&lt;p&gt;&amp;quot;How to Hack a Django Website&amp;quot; by Adam Johnson&lt;/p&gt;
&lt;p&gt;Why did Facebook have a public Django-based site that got hacked? What was the flaw discovered in GitHub's password reset mechanism that was also found to affect Django auth? Are …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon Europe 2020 (Virtual)
September 18, 2020 - 17h10 (GMT+1)&lt;/p&gt;
&lt;p&gt;&amp;quot;How to Hack a Django Website&amp;quot; by Adam Johnson&lt;/p&gt;
&lt;p&gt;Why did Facebook have a public Django-based site that got hacked? What was the flaw discovered in GitHub's password reset mechanism that was also found to affect Django auth? Are your projects vulnerable? I'll walk you through some stories of common web vulnerabilities, and what they mean for Django. I've had the pleasure of working on over 50 Django projects so far, so I've seen some patterns emerge.&lt;/p&gt;
</content><category term="DjangoCon Europe 2020"></category></entry><entry><title>Speed up your tests with setUpTestData</title><link href="https://pyvideo.org/djangocon-europe-2021/speed-up-your-tests-with-setuptestdata.html" rel="alternate"></link><published>2021-06-04T00:00:00+00:00</published><updated>2021-06-04T00:00:00+00:00</updated><author><name>Adam Johnson</name></author><id>tag:pyvideo.org,2021-06-04:/djangocon-europe-2021/speed-up-your-tests-with-setuptestdata.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TestCase.setUpTestData allows you to create test data once per TestCase, rather than once per test. Switching tests to use setUpTestData rather than setUp can speed them up significantly, sometimes as much as 10x faster. This talk will cover how it works, its improvement in Django 3.2, and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TestCase.setUpTestData allows you to create test data once per TestCase, rather than once per test. Switching tests to use setUpTestData rather than setUp can speed them up significantly, sometimes as much as 10x faster. This talk will cover how it works, its improvement in Django 3.2, and how to convert your tests to use it.&lt;/p&gt;
</content><category term="DjangoCon Europe 2021"></category><category term="Django"></category><category term="DjangoConEU"></category><category term="djangoconeu2021"></category></entry><entry><title>Django and Web Security Headers</title><link href="https://pyvideo.org/djangocon-europe-2019/django-and-web-security-headers.html" rel="alternate"></link><published>2019-04-20T00:00:00+00:00</published><updated>2019-04-20T00:00:00+00:00</updated><author><name>Adam Johnson</name></author><id>tag:pyvideo.org,2019-04-20:/djangocon-europe-2019/django-and-web-security-headers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web browsers support several HTTP headers to opt in to extra security features. I’ll explain then and show you how to get an A+ rating for these with the free checker SecurityHeaders.com, using built-in features and a few third-party packages.
The web browser is an evolving environment …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web browsers support several HTTP headers to opt in to extra security features. I’ll explain then and show you how to get an A+ rating for these with the free checker SecurityHeaders.com, using built-in features and a few third-party packages.
The web browser is an evolving environment, but with massive backwards compatibility. Because of this, a lot of its security features are opt-in and incremental through headers such as Content-Security-Policy and Feature-Policy. I’ll walk through and explain the main headers recommended by Scott Helme’s SecurityHeaders.com , and how you can get your site to an A+ score, with a mix of built-in features and third party packages for the more cutting edge headers. Also I’ll briefly show some free and paid tools that can aid with deployment.&lt;/p&gt;
</content><category term="DjangoCon Europe 2019"></category></entry><entry><title>What happens when you run manage.py test ?</title><link href="https://pyvideo.org/pycon-au-2020/what-happens-when-you-run-managepy-test.html" rel="alternate"></link><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><author><name>Adam Johnson</name></author><id>tag:pyvideo.org,2020-09-05:/pycon-au-2020/what-happens-when-you-run-managepy-test.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Adam Johnson&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/DQM9JQ"&gt;https://2020.pycon.org.au/program/DQM9JQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Testing frameworks do a lot of work for us, so much that they can even appear like magic. But if we go under the hood, we can find better ways of working with them. This talk looks at Django's testing …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Adam Johnson&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2020.pycon.org.au/program/DQM9JQ"&gt;https://2020.pycon.org.au/program/DQM9JQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Testing frameworks do a lot of work for us, so much that they can even appear like magic. But if we go under the hood, we can find better ways of working with them. This talk looks at Django's testing framework and pytest together, so it can show the common features as well as the differences. The general test lifecycle will be examined, from start to finish. We'll then use this knowledge to write a couple of customizations.&lt;/p&gt;
&lt;p&gt;Produced by NDV: &lt;a class="reference external" href="https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1"&gt;https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, PyCon, PyConAU, PyConline&lt;/p&gt;
&lt;p&gt;Sat Sep  5 16:35:00 2020 at Obvious&lt;/p&gt;
</content><category term="PyCon AU 2020"></category><category term="AdamJohnson"></category><category term="PyCon"></category><category term="PyConAU"></category><category term="PyConline"></category><category term="Python"></category><category term="pyconau"></category><category term="pyconau_2020"></category></entry><entry><title>Sunday Lightning Talks</title><link href="https://pyvideo.org/pycon-uk-2022/sunday-lightning-talks.html" rel="alternate"></link><published>2022-09-18T00:00:00+00:00</published><updated>2022-09-18T00:00:00+00:00</updated><author><name>Adam Johnson</name></author><id>tag:pyvideo.org,2022-09-18:/pycon-uk-2022/sunday-lightning-talks.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Ian Thomas: Visualising large datasets&lt;/li&gt;
&lt;li&gt;Adam Johnson: My PyCon photos&lt;/li&gt;
&lt;li&gt;George Angelchev: How to keep calm and dev on&lt;/li&gt;
&lt;li&gt;Alexander Fleischli: The coolest keyboard&lt;/li&gt;
&lt;li&gt;Michal Grochmal: Let's write a (bad) programming language in 30 lines of python&lt;/li&gt;
&lt;/ol&gt;
</content><category term="PyCon UK 2022"></category></entry></feed>