<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_guilherme-jenovencio.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-09-04T00:00:00+00:00</updated><entry><title>PyFETI - An easy and massively Dual Domain Decomposition Solver for Python</title><link href="https://pyvideo.org/euroscipy-2019/pyfeti-an-easy-and-massively-dual-domain-decomposition-solver-for-python.html" rel="alternate"></link><published>2019-09-04T00:00:00+00:00</published><updated>2019-09-04T00:00:00+00:00</updated><author><name>Guilherme Jenovencio</name></author><id>tag:pyvideo.org,2019-09-04:euroscipy-2019/pyfeti-an-easy-and-massively-dual-domain-decomposition-solver-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyFETI is a python implementation of
Finite-Element-Tearing-Interconnecting Methods. The library provides a
massive linear solver that uses Domain Decomposition Techniques. FETI
methods rely in the solution of a linear system, based on to linear
solver algorithm strategies, Direct and Iteratively. A big problem is
decomposed in subdomains, generating an additional set of constraints at
the interface among subdomains. The local problem solution is formulated
based on a new interface force at the interface that must connect the
subdomains. Therefore, given an interface force, the local problems are
solved based on a direct solver, e.g SuperLU, and the update of
interface force is performed by Preconditioned Conjunged Projected
Gradient. The library has been tested for large linear elastic problems
at the IT4I supercomputer center.&lt;/p&gt;
&lt;p&gt;PyFETI is a python implementation of
Finite-Element-Tearing-Interconnecting Methods. The library provides a
massive linear solver using Domain Decomposition method, where problems
are solved locally by Direct Solver and at the interface iteratively.&lt;/p&gt;
</summary></entry></feed>