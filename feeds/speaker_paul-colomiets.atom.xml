<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Paul Colomiets</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_paul-colomiets.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-04-28T00:00:00+00:00</updated><subtitle></subtitle><entry><title>"Vagga" - a containerisation tool without daemons</title><link href="https://pyvideo.org/kyivpy/vagga-a-containerisation-tool-without-daemons.html" rel="alternate"></link><published>2015-04-25T00:00:00+00:00</published><updated>2015-04-25T00:00:00+00:00</updated><author><name>Paul Colomiets</name></author><id>tag:pyvideo.org,2015-04-25:/kyivpy/vagga-a-containerisation-tool-without-daemons.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Paul Colomiets talking about Vagga (&lt;a class="reference external" href="https://github.com/tailhook/vagga"&gt;https://github.com/tailhook/vagga&lt;/a&gt;) - a containerisation tool without daemons&lt;/p&gt;
</content><category term="Kyiv.py"></category></entry><entry><title>LINUX CONTAINERS ECOSYSTEM</title><link href="https://pyvideo.org/pycon-ukraine-2014/linux-containers-ecosystem.html" rel="alternate"></link><published>2014-11-02T00:00:00+00:00</published><updated>2014-11-02T00:00:00+00:00</updated><author><name>Paul Colomiets</name></author><id>tag:pyvideo.org,2014-11-02:/pycon-ukraine-2014/linux-containers-ecosystem.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Docker changed the way we do development and deployment. But most people
use it as a black box that do the job most of the time. This is advanced
level talk that explains how linux containers work in depth. What new
perspectives they open. And what new challenges they …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Docker changed the way we do development and deployment. But most people
use it as a black box that do the job most of the time. This is advanced
level talk that explains how linux containers work in depth. What new
perspectives they open. And what new challenges they impose. After this
lecture you might be able to implement your own Docker or to build more
sophisticated tools on top of linux containers. It consists of three
parts:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Internals of linux namespaces: system calls and other things behind
containers&lt;/li&gt;
&lt;li&gt;Overview of different container implementations: docker, lxc,
vagrant-lxc, nix...&lt;/li&gt;
&lt;li&gt;New security challenges of namespaces with great emphasis on Docker
and clouds&lt;/li&gt;
&lt;/ol&gt;
</content><category term="PyCon Ukraine 2014"></category></entry><entry><title>Using Rust to build asynchronous IO for Python</title><link href="https://pyvideo.org/pycon-ukraine-2016/using-rust-to-build-asynchronous-io-for-python.html" rel="alternate"></link><published>2016-04-23T00:00:00+00:00</published><updated>2016-04-23T00:00:00+00:00</updated><author><name>Paul Colomiets</name></author><id>tag:pyvideo.org,2016-04-23:/pycon-ukraine-2016/using-rust-to-build-asynchronous-io-for-python.html</id><content type="html"></content><category term="PyCon Ukraine 2016"></category></entry><entry><title>Paul Colomiets - Modern Websocket Gateway Server</title><link href="https://pyvideo.org/pycon-ukraine-2017/paul-colomiets-modern-websocket-gateway-server.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Paul Colomiets</name></author><id>tag:pyvideo.org,2017-04-08:/pycon-ukraine-2017/paul-colomiets-modern-websocket-gateway-server.html</id><content type="html"></content><category term="PyCon Ukraine 2017"></category></entry><entry><title>Peer to peer file synchronization for your apps</title><link href="https://pyvideo.org/pycon-ukraine-2018/peer-to-peer-file-synchronization-for-your-apps.html" rel="alternate"></link><published>2018-04-28T00:00:00+00:00</published><updated>2018-04-28T00:00:00+00:00</updated><author><name>Paul Colomiets</name></author><id>tag:pyvideo.org,2018-04-28:/pycon-ukraine-2018/peer-to-peer-file-synchronization-for-your-apps.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everybody knows there are three data tiers: source code, database, and
cache. In this talk, I’m going to introduce a fourth data tier in
between a database and source code. I.e. it’s cheap to read and always
available like source code but can contain dynamic data …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everybody knows there are three data tiers: source code, database, and
cache. In this talk, I’m going to introduce a fourth data tier in
between a database and source code. I.e. it’s cheap to read and always
available like source code but can contain dynamic data, like a
database.&lt;/p&gt;
</content><category term="PyCon Ukraine 2018"></category></entry></feed>