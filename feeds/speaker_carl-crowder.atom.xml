<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_carl-crowder.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-10-20T00:00:00+00:00</updated><entry><title>Haircuts for your code</title><link href="https://pyvideo.org/pycon-uk-2014/haircuts-for-your-code.html" rel="alternate"></link><published>2014-10-20T00:00:00+00:00</published><updated>2014-10-20T00:00:00+00:00</updated><author><name>Carl Crowder</name></author><id>tag:pyvideo.org,2014-10-20:pycon-uk-2014/haircuts-for-your-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presented by: Carl Crowder&lt;/p&gt;
&lt;p&gt;Talk about static analysis tools&lt;/p&gt;
</summary></entry><entry><title>Automatic code reviews</title><link href="https://pyvideo.org/europython-2014/automatic-code-reviews.html" rel="alternate"></link><published>2014-07-23T00:00:00+00:00</published><updated>2014-07-23T00:00:00+00:00</updated><author><name>Carl Crowder</name></author><id>tag:pyvideo.org,2014-07-23:europython-2014/automatic-code-reviews.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A lot of great Python tools exist to analyse and report on your
codebase, but they can require a lot of initial set up to be useful.
Done right, they can be like an automatic code review. This talk will
explain how to set up and get the best out of these tools, especially
for an existing, mature codebase.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Static analysis tools are a great idea in theory, but are not often
really used in practice. These tools usually require quite a lot of
initial effort to get set up in a way which produces meaningful output
for you or your organisation's particular coding style and values. As a
result, it's common to see initial enthusiasm replaced by ignoring the
tools.&lt;/p&gt;
&lt;p&gt;Such tools can be incredibly beneficial however, and even go so far as
to provide an automatic code review, and this talk will explain what
kind of benefits you can get from the tools, as well as explain what you
can and cannot expect.&lt;/p&gt;
&lt;p&gt;This talk is aimed at experienced developers who are interested in
improving their coding practices but who have either never tried static
analysis tools, or who have not seen the upsides. It will hopefully also
be useful to people who do use the tools, perhaps introducing them to
new tools or concepts they were not aware of yet.&lt;/p&gt;
</summary></entry></feed>