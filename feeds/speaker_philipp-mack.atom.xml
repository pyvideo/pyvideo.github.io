<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_philipp-mack.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-08-02T00:00:00+00:00</updated><entry><title>Python in the world of retail and mail order</title><link href="https://pyvideo.org/europython-2015/python-in-the-world-of-retail-and-mail-order.html" rel="alternate"></link><published>2015-08-02T00:00:00+00:00</published><updated>2015-08-02T00:00:00+00:00</updated><author><name>Philipp Mack</name></author><id>tag:pyvideo.org,2015-08-02:europython-2015/python-in-the-world-of-retail-and-mail-order.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Philipp Mack - Python in the world of retail and mail order
[EuroPython 2015]
[24 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;At Blue Yonder a lot of different python packages, provided by the community,
as well as  our own self-written packages, are used in order to
provide flexible
solutions to our problems.&lt;/p&gt;
&lt;p&gt;In this talk I'll present a walkthrough of a generic python application example
for demand and purchase order quantity calculations, putting together
those packages in an orderly way.
The example will feature real world problems derived from hands-on experience
with our retail and mail order customers.
Additionally the talk addresses the subjects of testing, configuring,
parallelising
and deploying the code.&lt;/p&gt;
&lt;p&gt;Packages used in this talk are :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;pytest &lt;a class="reference external" href="http://pytest.org/latest/"&gt;http://pytest.org/latest/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;voluptuous &lt;a class="reference external" href="https://github.com/alecthomas/voluptuous"&gt;https://github.com/alecthomas/voluptuous&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;redis &lt;a class="reference external" href="https://pypi.python.org/pypi/redis/"&gt;https://pypi.python.org/pypi/redis/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SciPy &lt;a class="reference external" href="http://www.scipy.org/"&gt;http://www.scipy.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;scikit-learn &lt;a class="reference external" href="http://scikit-learn.org/stable/"&gt;http://scikit-learn.org/stable/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pandas &lt;a class="reference external" href="http://pandas.pydata.org/"&gt;http://pandas.pydata.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Exploratory Time Series Analysis of NYC Subway Data</title><link href="https://pyvideo.org/pydata-berlin-2014/exploratory-time-series-analysis-of-nyc-subway-da.html" rel="alternate"></link><published>2014-07-26T00:00:00+00:00</published><updated>2014-07-26T00:00:00+00:00</updated><author><name>Felix Marczinowski</name></author><id>tag:pyvideo.org,2014-07-26:pydata-berlin-2014/exploratory-time-series-analysis-of-nyc-subway-da.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What questions arise during a quick model assessment? In this
hands-on-tutorial we want to cover the whole chain from preparing data
to choosing and fitting a model to properly assessing the quality of a
predictive model. Our dataset in this tutorial are the numbers of people
entering and exiting New York subway stations. Among other ways of
building a predictive model, we introduce the python package pydse (
&lt;a class="reference external" href="http://pydse.readthedocs.org/"&gt;http://pydse.readthedocs.org/&lt;/a&gt; ) and apply it to the dataset in order to
derive the parameters of an ARMA-model (autoregressive moving average).
At the end of the tutorial we evaluate the models and examine the
strengths and weaknesses of various ways to measure the accuracy and
quality of a predictive model.&lt;/p&gt;
</summary></entry></feed>