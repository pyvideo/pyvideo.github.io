<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_olivia-gunton.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-07-06T00:00:00+00:00</updated><entry><title>Designing for Guidance in Machine Learning</title><link href="https://pyvideo.org/pydata-seattle-2017/designing-for-guidance-in-machine-learning.html" rel="alternate"></link><published>2017-07-06T00:00:00+00:00</published><updated>2017-07-06T00:00:00+00:00</updated><author><name>Olivia Gunton</name></author><id>tag:pyvideo.org,2017-07-06:pydata-seattle-2017/designing-for-guidance-in-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How does the task of developing a machine learning system change when we not only have to predict outcomes from inputs, but also guide users to make their inputs better? Using practical examples in Python, I'll explore some of the lessons we've learned building an augmented writing platform at Textio.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Machine learning systems are getting better and better at tasks that we used to think only humans could be good at. I can write a program to look at an image of an animal and tell you whether it’s a cat or dog, for example. The measure of my program’s quality is its performance on new inputs: how many images does it classify correctly without ever having seen them before? How I accomplish that—what exactly it is about the images that allows me to distinguish a cat from a dog—is almost irrelevant compared to how well my program does on the task.&lt;/p&gt;
&lt;p&gt;But what if I don’t just want my system to be good at recognizing that you’re showing it a picture of a cat, I also want to be able to give you clear instructions on the top n things you can do to turn that cat into a dog? Now all of a sudden I have to start thinking differently about the information that my model uses to do the classification. I need features that are still automatable (I can tell a computer how to measure them and use them as inputs to a machine learning algorithm) but are also explainable (a lay person can understand what they mean and how to change their values). I may also find issues in my training/test data that I might not have noticed if I hadn’t had to do the same amount of introspection.&lt;/p&gt;
&lt;p&gt;In this talk, I’ll walk through a toy machine learning problem end-to-end, showing how our approach has to change when we add the requirement of producing actionable guidance. The content will be targeted at people who have an interest in machine learning, but experience isn’t necessary.&lt;/p&gt;
</summary></entry></feed>