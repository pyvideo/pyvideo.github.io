<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 27 Jul 2018 00:00:00 +0000</lastBuildDate><item><title>From linear algebra to machine learning</title><link>https://pyvideo.org/europython-2018/from-linear-algebra-to-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Math is a crucial skill for people who are interested in Data Science
and Machine Learning. Until now, most of the people who are doing Data
Science have a strong background in math, usually, people with master or
Ph.D. degrees.&lt;/p&gt;
&lt;p&gt;However, this fact seems to change in the next years, after the hype of
Machine Learning we are facing a process of &lt;em&gt;democratization&lt;/em&gt;. Now the
door of Data Science is open for everyone.&lt;/p&gt;
&lt;p&gt;To &lt;em&gt;truly madly deeply&lt;/em&gt; understand how the machine learning algorithms
work we need to understand some mathematical concepts. In this tutorial,
I would like to share my experience in the process of learning some of
those concepts.&lt;/p&gt;
&lt;p&gt;What I want to do is build a bridge between those concepts and Python,
more specifically, &lt;em&gt;SciPy&lt;/em&gt; and &lt;em&gt;NumPy&lt;/em&gt; and &lt;em&gt;TensorFlow&lt;/em&gt;. Basically is
&lt;em&gt;just another tutorial about vectorization&lt;/em&gt; , in this case, oriented to
understand and implement machine learning algorithms and the
mathematical foundation that supports it.&lt;/p&gt;
&lt;div class="section" id="outline"&gt;
&lt;h4&gt;Outline&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;Review of linear algebra&lt;/em&gt; : A brief review of essential &lt;em&gt;linear
algebra&lt;/em&gt; , concepts and the explanation with NumPy: scalars, vectors,
matrices, tensors, multiplication of vectors, inner products, vector
spaces, etc.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Review of machine learning&lt;/em&gt; : A brief review of essential &lt;em&gt;machine
learning&lt;/em&gt; , concepts that are related to mathematical concepts:
dimensionality reduction, principal component analysis, etc.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Optimization&lt;/em&gt; : Analytical vs. numerical solutions. This part has
too many formulas, &lt;em&gt;well, not too many&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Vectorization&lt;/em&gt; : Numpy and TensorFlow.&lt;/li&gt;
&lt;li&gt;Small practical cases:&lt;ul&gt;
&lt;li&gt;I want to show how we can solve the XOR problem with only one
neuron&lt;/li&gt;
&lt;li&gt;Explain the math behind linear regression.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The material of the talk can be found
&lt;a class="reference external" href="https://github.com/omartrinidad/ep2018"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Omar Gutiérrez</dc:creator><pubDate>Fri, 27 Jul 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-07-27:europython-2018/from-linear-algebra-to-machine-learning.html</guid></item><item><title>Introduction to Nonparametric Bayesian Models</title><link>https://pyvideo.org/europython-2017/introduction-to-nonparametric-bayesian-models.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When we use supervised machine learning techniques we need to specify
the number of parameters that our model will need to represent the
data (number of clusters, number of Gaussians, etc.).&lt;/p&gt;
&lt;p&gt;Somewhat,  we are making our model inflexible.  In this talk we will
study the nonparametric models, in specific, Bayesian Nonparametric
Models (BNP) whose main purpose is getting more flexible models since
that in BNP the parameters can be automatically inferred by the
model.&lt;/p&gt;
&lt;p&gt;The outline is the next:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Parametric vs Nonparametric models&lt;/li&gt;
&lt;li&gt;A review on probability distributions&lt;/li&gt;
&lt;li&gt;Non-parametric Bayesian Methods&lt;/li&gt;
&lt;li&gt;Dirichlet Process&lt;/li&gt;
&lt;li&gt;Python (and R maybe) libraries for NPB&lt;/li&gt;
&lt;li&gt;Conclusions&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Omar Gutiérrez</dc:creator><pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-13:europython-2017/introduction-to-nonparametric-bayesian-models.html</guid></item></channel></rss>