<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_martin-richard.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-02-05T00:00:00+00:00</updated><entry><title>asynctesteasier testing of asyncio code</title><link href="https://pyvideo.org/fosdem-2017/asynctesteasier-testing-of-asyncio-code.html" rel="alternate"></link><published>2017-02-05T00:00:00+00:00</published><updated>2017-02-05T00:00:00+00:00</updated><author><name>Martin Richard</name></author><id>tag:pyvideo.org,2017-02-05:fosdem-2017/asynctesteasier-testing-of-asyncio-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;asynctest enhances the standard python package unittest with features for asyncio. This talk aims at presenting asynctest and discuss various practices around unit testing of code using asyncio.&lt;/p&gt;
</summary></entry><entry><title>Votre appli web et Python: de zéro au million d'utilisateurs</title><link href="https://pyvideo.org/pycon-fr-2015/votre-appli-web-et-python-de-zero-au-million-dutilisateurs.html" rel="alternate"></link><published>2015-10-17T00:00:00+00:00</published><updated>2015-10-17T00:00:00+00:00</updated><author><name>Martin Richard</name></author><id>tag:pyvideo.org,2015-10-17:pycon-fr-2015/votre-appli-web-et-python-de-zero-au-million-dutilisateurs.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;C'est décidé, vous vous lancez dans un nouveau projet d'appli web et
mobile. Vous visez le million d'utilisateurs, le passage au 20h, et
Xavier Niel rêvera de vous racheter. Maintenant, techniquement, comment
faut-il s'y prendre ? Comment s'y retrouver dans la jungle des buzzwords
? Que reprendre des techniques des géants ? Qu'est-ce qui va nous servir
dans l'écosystème de Python ?&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vous avez lu tout un tas d'articles sur les microservices avec Django,
du NoSQL, déployés avec Chef sur un cluster openstack. Maintenant, vous
avez une idée de comment gérer un million d'utilisateurs, un bon mal de
tête, et toujours aucune idée de comment commencer.&lt;/p&gt;
&lt;p&gt;Votre objectif, c’est de développer une application qui fonctionne bien
: c’est à dire avec peu de bugs (visibles), de bonnes performances et
une bonne disponibilité. Sans cette base stable, la dette technique
finira pas devenir un frein à votre réussite.&lt;/p&gt;
&lt;p&gt;On verra déjà comment, dès le début du projet, on peut anticiper sur des
problèmes futurs grâce à quelques décisions et bonnes pratiques. Puis on
s’intéressera à la vie de l’application une fois en production : comment
assurer sa stabilité et l’ajout de fonctionnalités et comment s’en
sortir en cas de panne. Enfin, on verra quelques techniques qui nous
permettront de progressivement accueillir de nouveaux utilisateurs.&lt;/p&gt;
&lt;p&gt;Python et son écosystème seront mis à contribution à chaque étape !&lt;/p&gt;
</summary></entry><entry><title>asynctest: testez plus facilement votre code asyncio</title><link href="https://pyvideo.org/pycon-fr-2016/asynctest-testez-plus-facilement-votre-code-asyncio.html" rel="alternate"></link><published>2016-10-15T00:00:00+00:00</published><updated>2016-10-15T00:00:00+00:00</updated><author><name>Martin Richard</name></author><id>tag:pyvideo.org,2016-10-15:pycon-fr-2016/asynctest-testez-plus-facilement-votre-code-asyncio.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;asynctest est une bibliothèque qui étend les fonctionnalités du module standard de python unittest pour supporter asyncio. Cette conférence a pour objectif de présenter asynctest et de discuter de pratiques autour de l'écriture de tests.
On discutera de l'art de tester en partant de zéro : comment écrire et exécuter des cas de tests, les organiser (fichiers, classes et méthodes) dans un dépôt de sources. On verra quelques fonctionnalités peu connues mais pratiques du module unittest, puis on verra comment asynctest simplifie l'écriture des tests pour asyncio en permettant le mocking automatique de coroutines, la simulation d'une boucle ou de son horloge.
Les développeurs qui n'utilisent pas asyncio sont bienvenus, car de nombreux conseils peuvent s'appliquer au module unittest.&lt;/p&gt;
</summary></entry></feed>