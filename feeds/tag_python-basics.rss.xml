<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 15 Sep 2012 00:00:00 +0000</lastBuildDate><item><title>Beginning Python</title><link>https://pyvideo.org/pycon-japan-2012/beginning-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;2011年11月にPythonをはじめた新参者ですが、何か面白いことを喋れればと思います。Python経験1年未満、スクリプト言語自体も10年触れていない私が、ギークにm9プギャーされそうなここ10ヶ月を赤裸々に振り返ります。どうぞよろしくお願い致します。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">佐藤 健</dc:creator><pubDate>Sat, 15 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-15:pycon-japan-2012/beginning-python.html</guid><category>beginner</category><category>python-basics</category></item><item><title>PyOhio 2010: Python 101 for the .NET Developer</title><link>https://pyvideo.org/pyohio-2010/pyohio-2010--python-101-for-the--net-developer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 101 for the .NET Developer&lt;/p&gt;
&lt;p&gt;Presented by Sarah Dutkiewicz&lt;/p&gt;
&lt;p&gt;The first part of the session will cover the basics of Python - its
history, how its data structures compare to those we're familiar with in
the primary .NET languages, its strong and weak points, who's using it,
and why you as a developer - both generally speaking and as a .NET
developer - should care about Python. The second part of the session
will get into the demos - starting with some basic Python scripts and
getting into IronPython scripts, if time allows. By the end of this
session, you'll have an idea of what Python is, why you should know it
as a developer and specifically as a .NET developer, and how to get
setup and write a basic app in both Python and IronPython.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sarah Dutkiewicz</dc:creator><pubDate>Sat, 31 Jul 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-07-31:pyohio-2010/pyohio-2010--python-101-for-the--net-developer.html</guid><category>ironpython</category><category>.net</category><category>pyohio</category><category>pyohio2010</category><category>python-basics</category><category>tutorial</category></item><item><title>PyOhio 2010: So You Just Took "Python 101" -- What's Next?</title><link>https://pyvideo.org/pyohio-2010/pyohio-2010--so-you-just-took--quot-python-101-qu.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So You Just Took &amp;quot;Python 101&amp;quot; -- What's Next?&lt;/p&gt;
&lt;p&gt;Presented by Greg Lindstrom&lt;/p&gt;
&lt;p&gt;In this class we will develop, step-by-step and as a class, two simple
games, Hi/Low and Hangman. We will start from scratch and walk through
each step of each game discussing decision making, loops (&amp;quot;for&amp;quot;, &amp;quot;while&amp;quot;
and &amp;quot;if&amp;quot;), data structures (tuple, list and dictionary) and looking at
different ways to &amp;quot;get-r-done&amp;quot;.&lt;/p&gt;
&lt;p&gt;You should know a little about Python but don't have to know anything
else about programming (you should know how to edit and run a Python
program on your Operating System). Bring a computer with Python
installed if you want to play along.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Lindstrom</dc:creator><pubDate>Sat, 31 Jul 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-07-31:pyohio-2010/pyohio-2010--so-you-just-took--quot-python-101-qu.html</guid><category>datastructures</category><category>pyohio</category><category>pyohio2010</category><category>python-basics</category><category>tutorial</category></item><item><title>A Tour of Python Standard Library (1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/a-tour-of-python-standard-library--1-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Welcome to A Tour of Python Standard Library. Together let us explore
the various modules, which will help you to build robust working
programs. Once you know about a particular library well, you will start
replacing those 20 odd lines of code you used to write with a 2-3 lines
and feel safe that your code will now work on all the platforms that
Python supports. Just like the galaxy, the Python Standard Library is
vast and when hitch-hiking I will take you through some important ones
that happen to be used most often. You can explore, ask questions,
experiment through out the ride. Welcome! And let the journey begin.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/a-tour-of-python-standard-library--1-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category><category>stdlib</category></item><item><title>A Tour of Python Standard Library (2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/a-tour-of-python-standard-library--2-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Welcome to A Tour of Python Standard Library. Together let us explore
the various modules, which will help you to build robust working
programs. Once you know about a particular library well, you will start
replacing those 20 odd lines of code you used to write with a 2-3 lines
and feel safe that your code will now work on all the platforms that
Python supports. Just like the galaxy, the Python Standard Library is
vast and when hitch-hiking I will take you through some important ones
that happen to be used most often. You can explore, ask questions,
experiment through out the ride. Welcome! And let the journey begin.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/a-tour-of-python-standard-library--2-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category><category>stdlib</category></item><item><title>Introduction to Object-Oriented Programming (1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/introduction-to-object-oriented-programming--1-of.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a
&amp;quot;scripting&amp;quot; language, Python is an object-oriented programming language
at its core. This tutorial is designed for programmers who are familiar
with Python yet new to the concept of object-oriented programming. We
also welcome programmers who are experienced with other object-oriented
languages yet new to Python. We will begin the tutorial by introducing
the general principles of object- oriented programming. We then focus on
Python's treatment of object orientation. The tutorial will be organized
as a mix of formal presentations together with hands-on demonstrations
and exercises. Take your Python programming to the next level!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/introduction-to-object-oriented-programming--1-of.html</guid><category>oop</category><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>Introduction to Object-Oriented Programming (2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/introduction-to-object-oriented-programming--2-of.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a
&amp;quot;scripting&amp;quot; language, Python is an object-oriented programming language
at its core. This tutorial is designed for programmers who are familiar
with Python yet new to the concept of object-oriented programming. We
also welcome programmers who are experienced with other object-oriented
languages yet new to Python. We will begin the tutorial by introducing
the general principles of object- oriented programming. We then focus on
Python's treatment of object orientation. The tutorial will be organized
as a mix of formal presentations together with hands-on demonstrations
and exercises. Take your Python programming to the next level!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/introduction-to-object-oriented-programming--2-of.html</guid><category>oop</category><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>Introduction to Object-Oriented Programming (3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/introduction-to-object-oriented-programming--3-of.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a
&amp;quot;scripting&amp;quot; language, Python is an object-oriented programming language
at its core. This tutorial is designed for programmers who are familiar
with Python yet new to the concept of object-oriented programming. We
also welcome programmers who are experienced with other object-oriented
languages yet new to Python. We will begin the tutorial by introducing
the general principles of object- oriented programming. We then focus on
Python's treatment of object orientation. The tutorial will be organized
as a mix of formal presentations together with hands-on demonstrations
and exercises. Take your Python programming to the next level!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/introduction-to-object-oriented-programming--3-of.html</guid><category>oop</category><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>PyCon 2009: Python 102 (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--python-102--part-1-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 102 (Part 1 of 3)&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents intermediate and some advanced features
of Python to beginning and intermediate programmers. It pairs well with
Python 101 following a similar outline but at a deeper level. Rather
than starting with &amp;quot;Hello, world!&amp;quot;, we use the interactive Python
interpreter to get hands- on familiarity with much of core Python before
covering blocks and scripts. The tutorial is divided into short
sections, each with presentation and exercises, to quickly cover lots of
ground. Advanced topics are introduced throughout and covered in &amp;quot;extra
credit&amp;quot; exercises such that more advanced participants can learn at
their own pace.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--python-102--part-1-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>PyCon 2009: Python 102 (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--python-102--part-2-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 102 Part 2 of 3)&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents intermediate and some advanced features
of Python to beginning and intermediate programmers. It pairs well with
Python 101 following a similar outline but at a deeper level. Rather
than starting with &amp;quot;Hello, world!&amp;quot;, we use the interactive Python
interpreter to get hands- on familiarity with much of core Python before
covering blocks and scripts. The tutorial is divided into short
sections, each with presentation and exercises, to quickly cover lots of
ground. Advanced topics are introduced throughout and covered in &amp;quot;extra
credit&amp;quot; exercises such that more advanced participants can learn at
their own pace.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--python-102--part-2-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>PyCon 2009: Python 102 (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--python-102--part-3-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 102 (Part 3 of 3)&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents intermediate and some advanced features
of Python to beginning and intermediate programmers. It pairs well with
Python 101 following a similar outline but at a deeper level. Rather
than starting with &amp;quot;Hello, world!&amp;quot;, we use the interactive Python
interpreter to get hands- on familiarity with much of core Python before
covering blocks and scripts. The tutorial is divided into short
sections, each with presentation and exercises, to quickly cover lots of
ground. Advanced topics are introduced throughout and covered in &amp;quot;extra
credit&amp;quot; exercises such that more advanced participants can learn at
their own pace.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--python-102--part-3-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>Python 101 (1 of 2)</title><link>https://pyvideo.org/pycon-us-2009/python-101--1-of-2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 101 (Part 1 of 2)&lt;/p&gt;
&lt;p&gt;This 2 part tutorial presents the basics of Python to beginning and
intermediate programmers. It pairs well with Python 102 which follows a
similar outline but goes much deeper. Rather than starting with &amp;quot;Hello,
world!&amp;quot;, we use the interactive Python interpreter to get hands-on
familiarity with much of core Python before covering blocks and scripts.
The tutorial is divided into short sections, each with presentation and
exercises, to quickly cover lots of ground. Advanced topics are
introduced throughout and covered in &amp;quot;extra credit&amp;quot; exercises such that
more advanced participants can learn at their own pace.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/python-101--1-of-2.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>Python 101 (2 of 2)</title><link>https://pyvideo.org/pycon-us-2009/python-101--2-of-2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 101 (Part 2 of 2)&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents the basics of Python to beginning and
intermediate programmers. It pairs well with Python 102 which follows a
similar outline but goes much deeper. Rather than starting with &amp;quot;Hello,
world!&amp;quot;, we use the interactive Python interpreter to get hands-on
familiarity with much of core Python before covering blocks and scripts.
The tutorial is divided into short sections, each with presentation and
exercises, to quickly cover lots of ground. Advanced topics are
introduced throughout and covered in &amp;quot;extra credit&amp;quot; exercises such that
more advanced participants can learn at their own pace.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/python-101--2-of-2.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category></item><item><title>Tour of Python Standard Library (3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/tour-of-python-standard-library--3-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Welcome to A Tour of Python Standard Library. Together let us explore
the various modules, which will help you to build robust working
programs. Once you know about a particular library well, you will start
replacing those 20 odd lines of code you used to write with a 2-3 lines
and feel safe that your code will now work on all the platforms that
Python supports. Just like the galaxy, the Python Standard Library is
vast and when hitch-hiking I will take you through some important ones
that happen to be used most often. You can explore, ask questions,
experiment through out the ride. Welcome! And let the journey begin.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/tour-of-python-standard-library--3-of-3.html</guid><category>pycon</category><category>pycon2009</category><category>python-basics</category><category>stdlib</category></item><item><title>Python 101</title><link>https://pyvideo.org/pycon-us-2010/pycon-2010--python-101.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 101&lt;/p&gt;
&lt;p&gt;Presented by Stuart Williams&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents the basics of Python to beginning and
intermediate programmers. It pairs well with ''Python 102'' which
follows a similar outline but goes much deeper.&lt;/p&gt;
&lt;p&gt;Rather than starting with &amp;quot;Hello, world!&amp;quot;, we use the interactive Python
interpreter shell to get hands-on familiarity with much of core Python
before covering blocks and scripts.&lt;/p&gt;
&lt;p&gt;The tutorial is divided into short sections, each with presentation and
hands- on exercises, to quickly cover lots of ground.&lt;/p&gt;
&lt;p&gt;Advanced topics are introduced throughout and covered in &amp;quot;extra credit&amp;quot;
exercises such that more advanced participants can learn at their own
pace.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Programmers with experience in other languages who want a fast hands-on
introduction to Python. Content will target both Python 3.1 and 2.6.&lt;/p&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Bring a laptop computer with Python 2.6 or 3.1 installed. Try to get as
much of an overview of Python before the tutorial as you have time to in
order to get more out of the tutorial. Two angles on this are the Python
Quick Reference and the Python website's tutorial.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Numbers and operators&lt;/li&gt;
&lt;li&gt;Strings - immutability, operators, methods, functions, and formatting&lt;/li&gt;
&lt;li&gt;Introspection/Discovery&lt;/li&gt;
&lt;li&gt;Tuples and Lists&lt;/li&gt;
&lt;li&gt;List Comprehensions&lt;/li&gt;
&lt;li&gt;Objects and Names&lt;/li&gt;
&lt;li&gt;Dictionaries&lt;/li&gt;
&lt;li&gt;Loops and Blocks&lt;/li&gt;
&lt;li&gt;Iterables&lt;/li&gt;
&lt;li&gt;Generator Expressions&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Generators&lt;/li&gt;
&lt;li&gt;Namespaces&lt;/li&gt;
&lt;li&gt;Simple Classes&lt;/li&gt;
&lt;li&gt;Exceptions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The handouts at
&lt;a class="reference external" href="http://swilliams.ca%20/python-tutorials"&gt;http://swilliams.ca/python-tutorials&lt;/a&gt;.
If you're interested in the software I wrote to deliver the talk drop me
a line. My address is in the handouts.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stuart Williams</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--python-101.html</guid><category>pycon</category><category>pycon2010</category><category>python-basics</category><category>tutorial</category></item><item><title>Python 102</title><link>https://pyvideo.org/pycon-us-2010/pycon-2010--python-102.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 102&lt;/p&gt;
&lt;p&gt;Presented by Stuart Williams&lt;/p&gt;
&lt;p&gt;This half-day tutorial presents intermediate and some advanced features
of Python to beginning and intermediate programmers. It pairs well with
Python 101 which follows a similar outline but at a more introductory
level.&lt;/p&gt;
&lt;p&gt;Rather than starting with &amp;quot;Hello, world!&amp;quot;, we use the interactive Python
interpreter shell to get hands-on familiarity with much of core Python
before covering blocks and scripts.&lt;/p&gt;
&lt;p&gt;The tutorial is divided into short sections, each with presentation and
hands- on exercises, to quickly cover lots of ground.&lt;/p&gt;
&lt;p&gt;Advanced topics are introduced throughout and covered in &amp;quot;extra credit&amp;quot;
exercises such that more advanced participants can learn at their own
pace.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Programmers with experience in other languages who want a fast hands-on
introduction to intermediate and some advanced features of Python.
Content will target both Python 3.1 and 2.6.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Numbers and Strings - operators, functions and methods&lt;/li&gt;
&lt;li&gt;Introspection&lt;/li&gt;
&lt;li&gt;Sequences - overview, concepts, and methods&lt;/li&gt;
&lt;li&gt;Objects&lt;/li&gt;
&lt;li&gt;Dictionaries&lt;/li&gt;
&lt;li&gt;Files&lt;/li&gt;
&lt;li&gt;Classes&lt;/li&gt;
&lt;li&gt;Namespaces&lt;/li&gt;
&lt;li&gt;Dynamic Classes&lt;/li&gt;
&lt;li&gt;Iterators and Generators&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Exceptions&lt;/li&gt;
&lt;li&gt;Standard Library&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Bring a laptop computer with Python 2.6 or 3.1 installed. Try to get as
much of an overview of Python before the tutorial as you have time to in
order to get more out of the tutorial. Two angles on this are the Python
Quick Reference and the Python website's tutorial.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stuart Williams</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--python-102.html</guid><category>pycon</category><category>pycon2010</category><category>python-basics</category><category>tutorial</category></item><item><title>Python 201: How to Solve It Using Python</title><link>https://pyvideo.org/pycon-us-2010/pycon-2010--python-201--how-to-solve-it-using-pyt.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 201: How to Solve it using Python&lt;/p&gt;
&lt;p&gt;Presented by Senthil Kumaran&lt;/p&gt;
&lt;p&gt;One good way to develop applications is to divide the problem into
smaller manageable chunks and the build those. Once we identify and
define those smaller piece of tasks, our problem becomes incredibly
easy.&lt;/p&gt;
&lt;p&gt;But we are still faced with the question of what is the best way to do
that smaller task in Python? This tutorial will answer those questions.&lt;/p&gt;
&lt;p&gt;In this tutorial, we will identify the commonly occurring tasks that
would fit into to bigger problems and learn how do we solve it using
Python.&lt;/p&gt;
&lt;p&gt;The aim of the tutorial is help you develop the correct intuition when
developing applications using Python.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Beginning to intermediate Python Programmers. Familiarity with Python's
syntax and usage is assumed.&lt;/p&gt;
&lt;p&gt;This tutorial will use Python 3.1 examples (with changes from Python 2.6
explained, when it is required).&lt;/p&gt;
&lt;p&gt;The source code and the handout will contain the snippets written in
both Python 2.6 and Python 3.1.&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Outline of the Tutorial and a Brief Overview of Standard Library.&lt;/li&gt;
&lt;li&gt;Lets start with Strings.&lt;/li&gt;
&lt;li&gt;Files - We deal with them often.&lt;/li&gt;
&lt;li&gt;Date time related tasks.&lt;/li&gt;
&lt;li&gt;Dealing with Database stuff.&lt;/li&gt;
&lt;li&gt;Process Handling.&lt;/li&gt;
&lt;li&gt;Processing XMLs.&lt;/li&gt;
&lt;li&gt;Web Programming&lt;/li&gt;
&lt;li&gt;Programming tasks.&lt;/li&gt;
&lt;li&gt;Unit Testing&lt;/li&gt;
&lt;li&gt;How to Convert Python 2 to Python 3.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Attendees are welcome to bring their laptops with Python installed (
version 3.1 and version 2.6 both installed).&lt;/p&gt;
&lt;p&gt;Some snippets will be using Twisted Matrix Framework, those who would
like to try those recipes, would like to have Twisted Package installed
for their Python Distribution.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Some missing sections of video due to technical
issues (approx 3 mins in)]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Senthil Kumaran</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--python-201--how-to-solve-it-using-pyt.html</guid><category>pycon</category><category>pycon2010</category><category>python-basics</category><category>testing</category><category>tutorial</category><category>xml</category></item></channel></rss>