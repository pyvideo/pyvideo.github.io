<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Eran Friedman</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_eran-friedman.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2020-07-23T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Boosting simulation performance with Python</title><link href="https://pyvideo.org/europython-2020/boosting-simulation-performance-with-python.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Eran Friedman</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/boosting-simulation-performance-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Simulating hours of robots' work in minutes&lt;/p&gt;
&lt;p&gt;Our product uses a fleet of real (not virtual) robots to perform different tasks in a fulfillment warehouse. Simulation is an essential tool in this kind of product: it allows to perform regression tests and test new features without the need for …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Simulating hours of robots' work in minutes&lt;/p&gt;
&lt;p&gt;Our product uses a fleet of real (not virtual) robots to perform different tasks in a fulfillment warehouse. Simulation is an essential tool in this kind of product: it allows to perform regression tests and test new features without the need for real and expensive hardware, to compare the impact of different algorithms and optimizations, to inject failures, and more.&lt;/p&gt;
&lt;p&gt;Tasks performed by physical robots take time (movement over the warehouse, box lifting, etc.), but in simulation, where virtual robots are used, there is no need to wait all that time. I will describe our implementation of the Discrete-Event Simulation approach which allows us to simulate hours of real-life in minutes.&lt;/p&gt;
&lt;p&gt;Shortening simulation time improves the development process by providing faster feedback to developers and quicker CI and testing cycles. Another powerful advantage is a more deterministic simulation - using this approach, each component in the system gets equal opportunity (CPU time) in each time tick, which is not affected by the underlying machine that the simulation is running on. Also, it is possible to simulate any date and hour easily, and by that we wouldn't panic before the &amp;quot;Y2K bug&amp;quot;.&lt;/p&gt;
&lt;p&gt;I will elaborate on some challenges we encountered: time leak of event-driven components, differences between dev and production environments and running a distributed simulation due to the transition to microservices.&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Architecture"></category><category term="Robotics"></category><category term="Testing"></category></entry><entry><title>Boosting simulation performance with Python</title><link href="https://pyvideo.org/pycon-de-2019/boosting-simulation-performance-with-python.html" rel="alternate"></link><published>2019-10-09T00:00:00+00:00</published><updated>2019-10-09T00:00:00+00:00</updated><author><name>Eran Friedman</name></author><id>tag:pyvideo.org,2019-10-09:/pycon-de-2019/boosting-simulation-performance-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Eran Friedman&lt;/p&gt;
&lt;p&gt;Track:PyConDE
In this talk I will present the architecture of our simulation (written in Python) which allows us to simulate hours of real-life in only minutes of simulation. I will describe challenges we encountered and how we handled them.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Eran Friedman&lt;/p&gt;
&lt;p&gt;Track:PyConDE
In this talk I will present the architecture of our simulation (written in Python) which allows us to simulate hours of real-life in only minutes of simulation. I will describe challenges we encountered and how we handled them.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/CEYMMK"&gt;https://de.pycon.org/program/CEYMMK&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon DE 2019"></category></entry><entry><title>Boosting simulation performance with Python - Eran Friedman - PyCon Israel 2019</title><link href="https://pyvideo.org/pycon-israel-2019/boosting-simulation-performance-with-python-eran-friedman-pycon-israel-2019.html" rel="alternate"></link><published>2019-06-04T00:00:00+00:00</published><updated>2019-06-04T00:00:00+00:00</updated><author><name>Eran Friedman</name></author><id>tag:pyvideo.org,2019-06-04:/pycon-israel-2019/boosting-simulation-performance-with-python-eran-friedman-pycon-israel-2019.html</id><content type="html"></content><category term="PyCon Israel 2019"></category></entry></feed>