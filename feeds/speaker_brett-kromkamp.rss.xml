<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Brett Kromkamp</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 05 Jul 2020 00:00:00 +0000</lastBuildDate><item><title>Flask's flexibility for the win (when building applications that don't follow the normal patterns)</title><link>https://pyvideo.org/flaskcon-2020/flasks-flexibility-for-the-win-when-building-applications-that-dont-follow-the-normal-patterns.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Flask's flexibility made it the ideal choice of web framework to develop a semantic graph-based application. Specifically, being able to &amp;quot;hook up&amp;quot; a custom data back-end without breaking a sweat clinched the deal. The application in question that I would like to talk about is Contextualise (&lt;a class="reference external" href="https://www.contextualise.dev/"&gt;https://www.contextualise.dev/&lt;/a&gt;), a (personal) knowledge management application. Contextualise is an open source project: &lt;a class="reference external" href="https://github.com/brettkromkamp/contextualise"&gt;https://github.com/brettkromkamp/contextualise&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brett Kromkamp</dc:creator><pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-05:/flaskcon-2020/flasks-flexibility-for-the-win-when-building-applications-that-dont-follow-the-normal-patterns.html</guid><category>FlaskCon 2020</category><category>flask context</category><category>Flask</category><category>FlaskCon</category></item></channel></rss>