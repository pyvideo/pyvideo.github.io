<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Juan Altmayer Pizzorno</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 17 May 2024 00:00:00 +0000</lastBuildDate><item><title>Near Zero-Overhead Python Code Coverage</title><link>https://pyvideo.org/pycon-us-2024/near-zero-overhead-python-code-coverage.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Code &lt;em&gt;coverage&lt;/em&gt; shows what lines or branches your tests are missing. If
you maintain Python code, chances are you use &lt;tt class="docutils literal"&gt;coverage.py&lt;/tt&gt; to measure
it. You probably don't use it all the time, though, as it slows down
your tests -- up to a whopping 2.6x. This talk introduces SlipCover, a
new tool that brings this overhead down to only 5%. We look into what
slows down &lt;tt class="docutils literal"&gt;coverage.py&lt;/tt&gt;, and show how &lt;tt class="docutils literal"&gt;SlipCover&lt;/tt&gt; is able to do
better. For Python 3.12, SlipCover adopts the new &lt;a class="reference external" href="https://peps.python.org/pep-0669/"&gt;Low Impact Monitoring
API&lt;/a&gt; (PEP669); we discuss the
advantages and challenges of integrating it into SlipCover.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Altmayer Pizzorno</dc:creator><pubDate>Fri, 17 May 2024 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2024-05-17:/pycon-us-2024/near-zero-overhead-python-code-coverage.html</guid><category>PyCon US 2024</category></item></channel></rss>