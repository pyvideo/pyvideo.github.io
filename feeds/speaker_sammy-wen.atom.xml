<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_sammy-wen.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-09-22T00:00:00+00:00</updated><entry><title>Async Context Manager for Python 3.7</title><link href="https://pyvideo.org/pycon-taiwan-2019/async-context-manager-for-python-37.html" rel="alternate"></link><published>2019-09-22T00:00:00+00:00</published><updated>2019-09-22T00:00:00+00:00</updated><author><name>Sammy Wen</name></author><id>tag:pyvideo.org,2019-09-22:pycon-taiwan-2019/async-context-manager-for-python-37.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Day 3, R1 13:00–13:30&lt;/p&gt;
&lt;p&gt;Python 3.7針對asyncio做了不少的改動，也是Python進化為3.7版的重要改動項目。這一次的講題想要帶大家認識在Python 3.7成為內建功能的asynccontextmanager。&lt;/p&gt;
&lt;p&gt;在學習程式語言的最初階段，我們常常會使用到with語法，確保開啟的資源在使用完之後有確實被關閉或釋放；這在Python的世界裡，我們稱之為contextmanager。而Python 3.7也針對實作contextmanager的函式庫 -- contextlib，做了一些改動，使其支援「async with」這樣的語法。&lt;/p&gt;
&lt;p&gt;本次的演講將藉由探討asynccontextmanager的實作與應用，以及它和一般contextmanager的不同之處，讓聽眾了解Python 3.7對於非同步的重視。&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://gamekingga.com/pycontw2019.pdf"&gt;https://gamekingga.com/pycontw2019.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Speaker: Sammy Wen&lt;/p&gt;
&lt;p&gt;Currently working at Sinitic Inc as a Senior Backend Engineer while studying in the University of Waterloo as a ECE graduate student.&lt;/p&gt;
&lt;p&gt;Python is awesome. It helps me earn a living.&lt;/p&gt;
</summary></entry></feed>