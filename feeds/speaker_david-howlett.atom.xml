<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_david-howlett.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-09-15T00:00:00+00:00</updated><entry><title>Chess programs in python</title><link href="https://pyvideo.org/pycon-uk-2018/chess-programs-in-python.html" rel="alternate"></link><published>2018-09-15T00:00:00+00:00</published><updated>2018-09-15T00:00:00+00:00</updated><author><name>David Howlett</name></author><id>tag:pyvideo.org,2018-09-15:pycon-uk-2018/chess-programs-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;General principles and my experience building one&lt;/p&gt;
&lt;p&gt;This talk will cover the standard techniques used to build chess playing
programs including minimax, alpha-beta search, piece valuation,
positional valuation, iterative deepening and transposition tables. This
talk will assume a knowledge of python but no knowledge of chess or the
existing literature on how to write chess engines.&lt;/p&gt;
&lt;p&gt;I became fascinated by this topic after taking part in a competition
with my brothers to build the best chess program during the Christmas
holidays 2016.&lt;/p&gt;
</summary></entry></feed>