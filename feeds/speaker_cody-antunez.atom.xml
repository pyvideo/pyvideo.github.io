<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_cody-antunez.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-11-19T00:00:00+00:00</updated><entry><title>It’s a Pythonic Day in the Neighborhood - Data Harvesting Mr. Rogers</title><link href="https://pyvideo.org/pycon-ca-2017/its-a-pythonic-day-in-the-neighborhood-data-harvesting-mr-rogers.html" rel="alternate"></link><published>2017-11-19T00:00:00+00:00</published><updated>2017-11-19T00:00:00+00:00</updated><author><name>Cody Antunez</name></author><id>tag:pyvideo.org,2017-11-19:pycon-ca-2017/its-a-pythonic-day-in-the-neighborhood-data-harvesting-mr-rogers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Twitch.tv streams ‘Mr. Rogers Neighborhood’ aired for over 7 million viewers spanning 432 hours. Utilizing the Twitch API, WebSockets, IRC protocol, and Python, I created a bot that sat in-channel and collected both chat and user action events. This data was then analyzed to examine metrics of user engagement, audience reaction, retention rates, and keyword/phrase frequency in hopes to benefit future iterations of similar events.&lt;/p&gt;
&lt;p&gt;The spirit and intent of this talk is to present a simplistic example of how I used python to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;communicate with the Twitch.tv API&lt;/li&gt;
&lt;li&gt;build websockets&lt;/li&gt;
&lt;li&gt;collect data (chat text, api calls, and scraping webpage info)&lt;/li&gt;
&lt;li&gt;analyze data&lt;/li&gt;
&lt;li&gt;create a fun python project that introduces the aforementioned subjects to both beginner and experienced pythonistas!&lt;/li&gt;
&lt;/ul&gt;
</summary></entry></feed>