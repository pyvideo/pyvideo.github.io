<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 11 Mar 2011 00:00:00 +0000</lastBuildDate><item><title>MongoDB + Pylons at Catch.com: Scalable Web Apps with Python and NoSQL</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--mongodb---pylons-at-catch-com--scalab.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MongoDB + Pylons at Catch.com: Scalable Web Apps with Python and NoSQL&lt;/p&gt;
&lt;p&gt;Presented by Niall O'Higgins&lt;/p&gt;
&lt;p&gt;The Catch.com backend provides an API for publishing and querying your
personal data - used by many hugely popular Android, iOS and Web
clients. We ported this system to Python and MongoDB, using the Pylons
Web framework. This talk details our reasoning for choosing - and
experiences with - these cutting-edge Web and NoSQL database
technologies in a high-traffic, real-world production system.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Faced with the limits of our initial Catch.com Java/BDB backend
implemention, we evaluated various alternative technologies including
Amazon SimpleDB, MySQL, Cassandra and MongoDB. Eventually we settled on
Python, Pylons and MongoDB.&lt;/p&gt;
&lt;p&gt;We found Python and MongoDB gave us unique flexibility with our data
model, allowed us to scale for increased reliability and performance and
decreased feature development time - and in this talk we'll describe
exactly how.&lt;/p&gt;
&lt;p&gt;While there are many advantages, Python/Pylons and MongoDB (as a
relative newcomer on the database scene) certainly have issues and
limitations which must be taken into careful consideration for any
real-world production deployment.&lt;/p&gt;
&lt;p&gt;We compare MongoDB with other database technologies such as more
traditional RDBMS like MySQL and competing NoSQL options such as
Cassandra, CouchDB and BDB.&lt;/p&gt;
&lt;p&gt;We give a detailed introducton to data modeling in MongoDB - with
special attention paid to how this differs from a traditional relational
system - the operators provided by its rich query language and utilizing
advanced features such as GeoSpatial indexing, Replica Sets, Sharding -
and how to deal with some of the more publicized limitations of the
system (such as single-server durability).&lt;/p&gt;
&lt;p&gt;While much of this talk will be about using MongoDB with Python, we will
also touch on issues surrounding production deployment of the Pylons Web
framework, including how we work around the GIL to take advantage of
multi-core machines.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Niall O'Higgins</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--mongodb---pylons-at-catch-com--scalab.html</guid><category>casestudy</category><category>mongodb</category><category>nosql</category><category>pycon</category><category>pycon2011</category><category>pylons</category><category>scalable</category></item></channel></rss>