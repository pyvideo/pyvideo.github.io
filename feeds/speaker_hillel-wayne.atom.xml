<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_hillel-wayne.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-05-11T00:00:00+00:00</updated><entry><title>Beyond Unit Tests: Taking Your Testing to the Next Level</title><link href="https://pyvideo.org/pycon-us-2018/beyond-unit-tests-taking-your-testing-to-the-next-level.html" rel="alternate"></link><published>2018-05-11T00:00:00+00:00</published><updated>2018-05-11T00:00:00+00:00</updated><author><name>Hillel Wayne</name></author><id>tag:pyvideo.org,2018-05-11:pycon-us-2018/beyond-unit-tests-taking-your-testing-to-the-next-level.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You've used pytest and you've used mypy, but bugs are still slipping through your code. What's next? In this talk, we cover two simple but powerful tools for keeping your code problem-free. Property-based testing, provided by the &lt;a class="reference external" href="https://hypothesis.readthedocs.io/en/latest/"&gt;Hypothesis&lt;/a&gt; library, lets you run hundreds of tests from a single template. Contracts, via &lt;a class="reference external" href="https://github.com/deadpixi/contracts"&gt;dpcontracts&lt;/a&gt;, make your program test itself. You'll learn how and why to use these tools and how to combine them with the rest of your testing suite.&lt;/p&gt;
</summary><category term="hypothesis"></category><category term="dpcontracts"></category></entry></feed>