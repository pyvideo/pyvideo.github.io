<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_feth-arezki.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-10-17T00:00:00+00:00</updated><entry><title>Inventaire des spécificités de Python</title><link href="https://pyvideo.org/pycon-fr-2015/inventaire-des-specificites-de-python.html" rel="alternate"></link><published>2015-10-17T00:00:00+00:00</published><updated>2015-10-17T00:00:00+00:00</updated><author><name>Feth Arezki</name></author><id>tag:pyvideo.org,2015-10-17:pycon-fr-2015/inventaire-des-specificites-de-python.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Le langage Python est taillé pour la relecture et le code source est
souvent compréhensible par tous&amp;nbsp;; pourtant, on y trouve des choses
inconnues ou rares dans les autres langages de programmation.&lt;/p&gt;
&lt;p&gt;Cette conférence fait un tour d'horizon de ce que vous savez ou devez
apprendre pour coder couramment en Python (générateurs, propriétés,
coroutines etc).&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ceux qui ont appris à programmer en Python n'ont pas nécessairement
conscience de la masse de connaissance acquise au fil des mois ou des
années. Cet exposé propose un tour rapide (un point par minute) de ce
qui fait que Python est un langage qui permet une programmation
efficace, expressive et lisible.&lt;/p&gt;
&lt;div class="section" id="le-sommaire"&gt;
&lt;h4&gt;Le sommaire&lt;/h4&gt;
&lt;p&gt;Contiendra une liste (non exhaustive) des points abordés (eux-même non
exhaustifs) :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;décorateurs&lt;/li&gt;
&lt;li&gt;propriétés&lt;/li&gt;
&lt;li&gt;générateurs&lt;/li&gt;
&lt;li&gt;objets (oui, c'est quoi un objet, une classe ?)&lt;/li&gt;
&lt;li&gt;métaclasses&lt;/li&gt;
&lt;li&gt;async, await...&lt;/li&gt;
&lt;li&gt;déclarations d'encodage&lt;/li&gt;
&lt;li&gt;etc, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;L'auteur n'est pas responsable d'une mauvaise utilisation des tournures
du langage qu'il aura présenté, il cherche à faire prendre conscience de
l'ensemble des organes de cet animal unique, et en creux de ce qui le
différencie de ses cousins (C, shell, Java etc).&lt;/p&gt;
&lt;/div&gt;
</summary></entry></feed>