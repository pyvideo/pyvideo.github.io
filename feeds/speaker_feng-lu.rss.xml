<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 30 Nov 2019 00:00:00 +0000</lastBuildDate><item><title>A content-based recommender system for financial news</title><link>https://pyvideo.org/pydata-eindhoven-2019/a-content-based-recommender-system-for-financial-news.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The news domain presents many interesting challenges for recommender
systems - a continuous cold start problem to recommend newly published
articles, learning from the implicit feedback of user clicks, a
typically high amount of user traffic, that nevertheless suffers from
sparsity. This talk will show how we tackled these challenges to build a
content-based recommender system for financial news.&lt;/p&gt;
&lt;p&gt;The news domain poses an interesting challenge for recommender systems -
when reading news, users prefer the most recently published articles
(i.e. the breaking news), and yet new articles without a reading history
suffer from the &lt;em&gt;cold start problem&lt;/em&gt; and are more difficult to recommend
to users. Other interesting challenges are how to &lt;em&gt;learn from the
implicit feedback of user clicks&lt;/em&gt; , how to handle the &lt;em&gt;typically high
amount of user traffic and transform it into training data&lt;/em&gt; , how to
deal with &lt;em&gt;sparsity in the data&lt;/em&gt; (most users read a small number of
articles per day, and a small amount of articles get the majority of
user clicks), and what are &lt;em&gt;the right natural language processing tools
for Dutch language&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In this talk we discuss how we tackled these challenges to build a
content- based recommender system for Het Financieele Dagblad, a daily
Dutch newspaper focusing on business and financial news. To represent
the content of the article, we implemented a wide array of enrichment
techniques (e.g. representing the articles in a word vector space,
sentiment analysis), by using libraries such as &lt;tt class="docutils literal"&gt;textpipe&lt;/tt&gt; and
&lt;tt class="docutils literal"&gt;spaCy&lt;/tt&gt;. But the most meaningful features that we found referred to
the overlap between the user profile and the article representation,
such as the overlap in article tags between the article and the set of
most frequent tags read by the user. The talk will describe how our
recommender system was modeled as a gradient-boosting decision tree, and
implemented using the &lt;tt class="docutils literal"&gt;xgboost&lt;/tt&gt; library.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anca Dumitrache</dc:creator><pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-30:pydata-eindhoven-2019/a-content-based-recommender-system-for-financial-news.html</guid></item></channel></rss>