<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 16 Feb 2018 00:00:00 +0000</lastBuildDate><item><title>Let's Talk About GIL!</title><link>https://pyvideo.org/swiss-python-summit-2018/lets-talk-about-gil.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is lot of misconception in majority of Python Programmers regarding Global Interpreter Lock. Most of them think it's the worst part of Python. I will try to demonstrate how it actually works and how we can leverage multiple CPU cores for multithreading for I/O and CPU Bound tasks. I will also show some comparisons with different implementations of Python and the presence or absence of GIL in those, to answer questions like, why we can't just remove it from CPython and solve all our problems or why Jython performs better in Multithreading for CPU Bound tasks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amit Kumar</dc:creator><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-02-16:swiss-python-summit-2018/lets-talk-about-gil.html</guid></item><item><title>Let's talk about GIL!</title><link>https://pyvideo.org/pycon-cz-2017/lets-talk-about-gil.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will be talking about Global-Interpreter-Lock (GIL) in Python. It's
a mutex that prevents multiple native threads from running in
parallel. In essence, this says that a python program cannot do more
than one thing at once via threading. There is a lot of misconception
in a lot of Python Programmers regarding Global Interpreter Lock.
Most of them think its the worst part of Python.&lt;/p&gt;
&lt;p&gt;I will try to demonstrate how it actually works and how we can
leverage multiple CPU cores for multithreading for I/O and CPU Bound
task using C-Extensions. I will also show some comparisons with
different implementations of Python and the presence or absence of
GIL in those, to answer questions like, why we can't just remove it
from CPython and solve all our problems or why Jython performs better
in Multithreading for CPU Bound task.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amit Kumar</dc:creator><pubDate>Fri, 09 Jun 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-09:pycon-cz-2017/lets-talk-about-gil.html</guid></item><item><title>Python 3 dot 6 by Amit Kumar 4:46</title><link>https://pyvideo.org/pycon-india-2016/python-3-dot-6-by-amit-kumar-446.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amit Kumar</dc:creator><pubDate>Fri, 23 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-23:pycon-india-2016/python-3-dot-6-by-amit-kumar-446.html</guid></item><item><title>Demystifying Python Method Resolution Order</title><link>https://pyvideo.org/pycon-apac-2016/demystifying-python-method-resolution-order.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;발표자: Amit Kumar
슬라이드: &lt;a class="reference external" href="https://slides.com/aktech/python-mro"&gt;https://slides.com/aktech/python-mro&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amit Kumar</dc:creator><pubDate>Thu, 25 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-25:pycon-apac-2016/demystifying-python-method-resolution-order.html</guid></item><item><title>Introducing MetaClasses</title><link>https://pyvideo.org/pycon-uk-2016/introducing-metaclasses.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is based on the metaclasses in Python. The secret sauce which create classes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amit Kumar</dc:creator><pubDate>Sat, 17 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-17:pycon-uk-2016/introducing-metaclasses.html</guid></item><item><title>Symbolic Computation with Python using SymPy (Beginner)</title><link>https://pyvideo.org/scipy-2016/symbolic-compution-with-python-using-sympy-beginner-scipy-2016-tutorial-ondrej-certik-et-al.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Materials for this tutorial are found here: &lt;a class="reference external" href="https://github.com/sympy/scipy-2016-tutorial"&gt;https://github.com/sympy/scipy-2016-tutorial&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ondřej Čertík</dc:creator><pubDate>Mon, 11 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-11:scipy-2016/symbolic-compution-with-python-using-sympy-beginner-scipy-2016-tutorial-ondrej-certik-et-al.html</guid><category>SciPy 2016</category><category>tutorial</category><category>SymPy</category></item></channel></rss>