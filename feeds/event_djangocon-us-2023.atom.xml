<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - DjangoCon US 2023</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_djangocon-us-2023.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-10-18T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Back to the Future of Hypermedia in Django</title><link href="https://pyvideo.org/djangocon-us-2023/back-to-the-future-of-hypermedia-in-django.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Mario Munoz</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/back-to-the-future-of-hypermedia-in-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Hypermedia is your friend&amp;quot;, they said. &amp;quot;You don't need JavaScript&amp;quot;, they said. &amp;quot;You'll be _fine_...&amp;quot;&lt;/p&gt;
&lt;p&gt;It's no secret that hypermedia has been making a quiet resurgence in the web development landscape. One of the most popular toolkits in the Python space is htmx, offering a simple, declarative approach to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Hypermedia is your friend&amp;quot;, they said. &amp;quot;You don't need JavaScript&amp;quot;, they said. &amp;quot;You'll be _fine_...&amp;quot;&lt;/p&gt;
&lt;p&gt;It's no secret that hypermedia has been making a quiet resurgence in the web development landscape. One of the most popular toolkits in the Python space is htmx, offering a simple, declarative approach to AJAX and Server Sent Events directly from your HTML.&lt;/p&gt;
&lt;p&gt;While this trend is taking shape in the Python ecosystem as a whole, Django goes even further, providing a maturing set of patterns, tooling, and projects that take full advantage of these new (old?) paradigms.&lt;/p&gt;
&lt;p&gt;What are some of the ways that Django is leading the charge in making hypertext cool again? What are some examples of projects already utilizing these tools? Is this a viable approach to _serious_ web design? And what are some of the ways that we could improve the adoption of hypermedia within Django, and Python as a whole?&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Best Practices for Making a Wagtail Site as Accessible as Possible</title><link href="https://pyvideo.org/djangocon-us-2023/best-practices-for-making-a-wagtail-site-as-accessible-as-possible.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Scott Cranfill</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/best-practices-for-making-a-wagtail-site-as-accessible-as-possible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the past few years, the Wagtail CMS core team and accessibility subteam have made a [significant commitment to improving Wagtail's accessibility](&lt;a class="reference external" href="https://wagtail.org/accessibility/"&gt;https://wagtail.org/accessibility/&lt;/a&gt;) –&amp;nbsp;of the CMS interface itself as well as the websites that it produces. This talk is focused on the latter, showing how you …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the past few years, the Wagtail CMS core team and accessibility subteam have made a [significant commitment to improving Wagtail's accessibility](&lt;a class="reference external" href="https://wagtail.org/accessibility/"&gt;https://wagtail.org/accessibility/&lt;/a&gt;) –&amp;nbsp;of the CMS interface itself as well as the websites that it produces. This talk is focused on the latter, showing how you (a developer of a Wagtail-powered site) can set up your models, templates, and workflows in order to make it as easy as possible for your editors to create websites that are as accessible as possible. I say &amp;quot;as possible&amp;quot; because it's important to recognize that it's not possible for a website to ever be considered 100% accessible, but by putting some care into what we do on the development side, we can prevent some of the most widespread accessibility issues that users may come across.&lt;/p&gt;
&lt;p&gt;Topics that will be covered include:
- How to use Wagtail's [new built-in accessibility checker](&lt;a class="reference external" href="https://wagtail.org/blog/introducing-wagtails-new-accessibility-checker/"&gt;https://wagtail.org/blog/introducing-wagtails-new-accessibility-checker/&lt;/a&gt;)
- Custom validation to ensure that a page has a logical heading order
- Ensuring alt text is used appropriately (Spoiler alert: every image doesn't need alt text!)
- Usage of &lt;cite&gt;aria-label&lt;/cite&gt; attributes to provide essential context to screen readers
- Providing timely, contextual help to editors as they create their content&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Closing Remarks</title><link href="https://pyvideo.org/djangocon-us-2023/closing-remarks.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Peter Grandstaff</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/closing-remarks.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Peter and the organizers will wrap things up for 2023!&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Django migrations, friend or foe? Optimize your Django migrations for faster testing</title><link href="https://pyvideo.org/djangocon-us-2023/django-migrations-friend-or-foe-optimize-your-django-migrations-for-faster-testing.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Denny Biasiolli</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/django-migrations-friend-or-foe-optimize-your-django-migrations-for-faster-testing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django migrations are a great tool for keeping track of changes you made to your models over time.
After years of changes in a project they can become very numerous and you may notice that it takes a long time to create the test database.&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;squashmigrations&lt;/cite&gt; can help you …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django migrations are a great tool for keeping track of changes you made to your models over time.
After years of changes in a project they can become very numerous and you may notice that it takes a long time to create the test database.&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;squashmigrations&lt;/cite&gt; can help you reduce an existing set of many migrations down to one (or sometimes a few), which still represent the same changes.
However it has some limitations, and it could work in a way you don't need.&lt;/p&gt;
&lt;p&gt;Let's inspect this command and the alternative of creating migrations &amp;quot;from scratch&amp;quot; in an existing project for improving your tests speed.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;inspecting django migration commands&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;cite&gt;makemigrations&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;migrate&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;showmigrations&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;sqlmigrate&lt;/cite&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;creating a sample project with multiple migrations&lt;/li&gt;
&lt;li&gt;analyzing test performances&lt;/li&gt;
&lt;li&gt;inspecting the &lt;cite&gt;squashmigrations&lt;/cite&gt; command&lt;/li&gt;
&lt;li&gt;squashing migrations in the sample project and comparing performances&lt;/li&gt;
&lt;li&gt;not enough? Let's try an &amp;quot;exotic/drastic&amp;quot; way to squash our migrations&lt;/li&gt;
&lt;li&gt;comparing performances of the &amp;quot;exotic/drastic&amp;quot; solution&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The key point of this talk is to speed up django testing in projects with many migrations&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Django’s accessibility track record</title><link href="https://pyvideo.org/djangocon-us-2023/djangos-accessibility-track-record.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Thibaud Colas</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/djangos-accessibility-track-record.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are great accessibility guidelines out there. Great tools to evaluate individual websites too. Between the big picture and individual projects, we can look at what Django specifically does – and what changes at the level of the framework could improve large swaths of the Django web.&lt;/p&gt;
&lt;p&gt;We will start …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are great accessibility guidelines out there. Great tools to evaluate individual websites too. Between the big picture and individual projects, we can look at what Django specifically does – and what changes at the level of the framework could improve large swaths of the Django web.&lt;/p&gt;
&lt;p&gt;We will start by looking at the HTTP Archive’s dataset of 8M websites, 30’000 of which are built with Django. We can identify which issues are common compared to other frameworks, and review specific issues in more depth to understand where they might appear in Django.&lt;/p&gt;
&lt;p&gt;We can then look into the implementation details to understand exactly how users of assistive technology would benefit or be harmed by Django’s design choices. And accordingly highlight the correct approach.&lt;/p&gt;
&lt;p&gt;A practical example of this where we can go very deep is Django’s implementation of HTML forms. Django’s default markup previously left a lot to be desired, and it being “the default” led to a lot of websites shipping with accessibility issues. This has been improved from release to release, addressing basic issues and introducing more advanced patterns like ARIA attributes for errors.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Django's Data Science Makeover: Integrating D3.js and Bokeh for Data Visualization</title><link href="https://pyvideo.org/djangocon-us-2023/djangos-data-science-makeover-integrating-d3js-and-bokeh-for-data-visualization.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Drishti Jain</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/djangos-data-science-makeover-integrating-d3js-and-bokeh-for-data-visualization.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django is a versatile web framework that can be used for building a wide range of applications, from blogs to e-commerce platforms. In recent years, there has been a growing demand for web-based data visualization, which requires integrating data visualization libraries with web frameworks like Django. This talk will …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django is a versatile web framework that can be used for building a wide range of applications, from blogs to e-commerce platforms. In recent years, there has been a growing demand for web-based data visualization, which requires integrating data visualization libraries with web frameworks like Django. This talk will demonstrate how to use D3.js and Bokeh, two popular data visualization libraries, with Django to create dynamic and interactive visualizations.&lt;/p&gt;
&lt;p&gt;We will start by discussing the basics of Django and data visualization with D3.js and Bokeh. We will then dive into the specifics of integrating these libraries with Django. You will learn how to leverage Django's powerful database and ORM to feed data to your visualizations, and how to customize your visualizations with CSS and JavaScript.&lt;/p&gt;
&lt;p&gt;We will also cover some advanced topics, such as real-time data streaming with Django Channels and integrating machine learning models with your visualizations. By the end of this talk, you will have a solid understanding of how to integrate D3.js and Bokeh with Django for your data science projects. You will leave with the skills needed to create stunning and interactive visualizations that can be embedded in your Django web applications.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>How to Schedule Tasks with Celery and Django</title><link href="https://pyvideo.org/djangocon-us-2023/how-to-schedule-tasks-with-celery-and-django.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Tobias McNulty</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/how-to-schedule-tasks-with-celery-and-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Celery is a distributed system for message processing in Python first released in 2009, not long after Django itself. With over 20,000 stars on GitHub, it remains one of the most popular Django-adjacent Python packages. Similarly, my colleague Dan's post on the Caktus blog, &amp;quot;How to Use Celery …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Celery is a distributed system for message processing in Python first released in 2009, not long after Django itself. With over 20,000 stars on GitHub, it remains one of the most popular Django-adjacent Python packages. Similarly, my colleague Dan's post on the Caktus blog, &amp;quot;How to Use Celery for Scheduling Tasks,&amp;quot; is by an order of magnitude one of the most popular pieces of content on our site.&lt;/p&gt;
&lt;p&gt;In this talk, I'll explore what continues to make Celery a popular choice for message processing and background jobs, including:
- The fundamentals of integrating Celery with a Django project
- What is a message broker and how to choose one
- What is a result backend and how to choose one
- How to run tasks on pre-defined schedules, via settings and/or the database
- How to break apart long-running tasks to maximize scalability
- Other common patterns and anti-patterns when writing tasks with Celery&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Inside Out: My Journey of Understanding Inclusion</title><link href="https://pyvideo.org/djangocon-us-2023/inside-out-my-journey-of-understanding-inclusion.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Natalia Bidart</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/inside-out-my-journey-of-understanding-inclusion.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I'll share my personal journey of understanding diversity and inclusion.
Being part of a minority group, I have encountered numerous challenges, I've learned
a lot, and made my fair share of mistakes along the way.&lt;/p&gt;
&lt;p&gt;This presentation is an opportunity to reflect on my experiences, sharing …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I'll share my personal journey of understanding diversity and inclusion.
Being part of a minority group, I have encountered numerous challenges, I've learned
a lot, and made my fair share of mistakes along the way.&lt;/p&gt;
&lt;p&gt;This presentation is an opportunity to reflect on my experiences, sharing the lessons
learned and real-life stories that have shaped my view on the matter. Get ready for a
captivating array of anecdotes!&lt;/p&gt;
&lt;p&gt;I'll openly discuss the challenges I've faced and the insights I've gained,
highlighting both successes and shortcomings, always offering a perspective rather than
definitive solutions or comprehensive analysis. I'll cover topics such as tone connotations,
inclusive[n|l]ess of different languages, the importance of company policies, quirks
derived from cultural and social norms, and more. In the final segment of this talk, I
will discuss my recent experience within the Django project and community as a whole.&lt;/p&gt;
&lt;p&gt;This talk is not intended to provide a one-size-fits-all approach, but rather to inspire
thought, reflection, and positive change. I hope to encourage open dialogue among
attendees, as we explore strategies for creating a more inclusive, diverse and
equitable environment.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Keynote: Testing Modern Web Apps Like a Champion</title><link href="https://pyvideo.org/djangocon-us-2023/keynote-testing-modern-web-apps-like-a-champion.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Andrew Knight</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/keynote-testing-modern-web-apps-like-a-champion.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's 2023, and web apps are usually more complicated than just a bunch of HTML pages hosted on somebody's server. The Web is an incredible platform for building and sharing applications that bring people value, from work to social media to banking and pretty much every aspect of life …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's 2023, and web apps are usually more complicated than just a bunch of HTML pages hosted on somebody's server. The Web is an incredible platform for building and sharing applications that bring people value, from work to social media to banking and pretty much every aspect of life. With rich features, though, comes complexity: modern web apps are more complicated than ever. It's a serious challenge to make sure web apps both look right and work right.&lt;/p&gt;
&lt;p&gt;Let's learn how to thoroughly test modern web apps like a CHAMPION!&lt;/p&gt;
&lt;p&gt;In this session, we will deep dive into proper testing techniques for all layers of a web app:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Unit testing, including Django's test client&lt;/li&gt;
&lt;li&gt;Component testing as applicable&lt;/li&gt;
&lt;li&gt;API testing for integrations&lt;/li&gt;
&lt;li&gt;End-to-end testing through a browser&lt;/li&gt;
&lt;li&gt;Performance and load testing&lt;/li&gt;
&lt;li&gt;Continuous testing as part of DevOps pipelines&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Come ready to learn! We will focus on Django apps in Python, but the concepts we learn are transferable to any web development stack. By the end of this session, you will know how to build a rigorous testing strategy together with the test cases you need to make sure your modern web apps have high quality.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Lightning Talks</title><link href="https://pyvideo.org/djangocon-us-2023/lightning-talks.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Kojo Idrissa</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/lightning-talks.html</id><content type="html"></content><category term="DjangoCon US 2023"></category></entry><entry><title>Nothing for Us, Without Us; Breaking Unconscious Bias in Building Products</title><link href="https://pyvideo.org/djangocon-us-2023/nothing-for-us-without-us-breaking-unconscious-bias-in-building-products.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Victor Ogunjobi</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/nothing-for-us-without-us-breaking-unconscious-bias-in-building-products.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are we really building products that serve everyone, or just a selected few?&lt;/p&gt;
&lt;p&gt;As developers, we have responsibility to ensure that our products serve everyone, regardless of their background or identity. However, our unconscious bias often creeps into even the most well-intentioned projects and impacts the way we develop …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are we really building products that serve everyone, or just a selected few?&lt;/p&gt;
&lt;p&gt;As developers, we have responsibility to ensure that our products serve everyone, regardless of their background or identity. However, our unconscious bias often creeps into even the most well-intentioned projects and impacts the way we develop products or engage with communities, leading to unintentional exclusions.&lt;/p&gt;
&lt;p&gt;When I first designed a Speech-Text-Analytic app, my focus was to simplify business communication with transcribed audio and valuable insights. However, feedback from the community highlighted it had limitations for diverse users, including those with disabilities who faced inaccurate captions for audio content.&lt;/p&gt;
&lt;p&gt;This wake-up call prompted me to improve accessibility and user-friendliness for marginalized groups. And for the same reason, I'm making proactive steps to cater for the marginalized by integrating a feature that recognizes Nigerian native languages.&lt;/p&gt;
&lt;p&gt;As tech creators, we have the power to create change, but good intentions alone are not enough. This talk will offer strategies to address unconscious bias in product and community building, while avoiding common pitfalls. Attendees will learn to understand diverse needs &amp;amp; experiences for more inclusive environments.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>One database table, one model, many behaviours: Proxy model</title><link href="https://pyvideo.org/djangocon-us-2023/one-database-table-one-model-many-behaviours-proxy-model.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Ronald Maravanyika</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/one-database-table-one-model-many-behaviours-proxy-model.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At times, when inheriting a model one doesn’t want to create a table in the database, you maybe looking to change just the pythonic behaviour of the data without necessarily creating a new table, for example you might be looking  to ordering the data while maintain the original …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At times, when inheriting a model one doesn’t want to create a table in the database, you maybe looking to change just the pythonic behaviour of the data without necessarily creating a new table, for example you might be looking  to ordering the data while maintain the original model data structure, this is where Django proxy models come in play, this talk will highlight, what are proxy models, how they are created using the model’s Meta class and how they can make your life easier as a developer.&lt;/p&gt;
&lt;p&gt;Furthermore, confusion around which restrictions are imposed on base class by Django when using proxy models will be brought to rest during this talk. The possibilities of proxy models inheriting  multiple abstract models will be covered in this talk. Proxy mode manipulation of the Model manager and when to manipulate the Manager will also be part of the talk’s package. Being fairly similar to unmanaged models, the talk will highlight the most common differences  and when to use each of them.&lt;/p&gt;
&lt;p&gt;Reading through the Django proxy model, or even reading through the first paragraph above makes one say “cool stuff !!!” and then the next thing you forget about it. This is because finding the practical application of proxy models in real world scenarios is difficult. This talk will showcase practical aspects of using proxy model through the use on an abstract base class, equipping developers mind with an image or the possibilities of this proxy model.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Panel Discussion: Who put me in charge? Moving beyond day-to-day coding in Django</title><link href="https://pyvideo.org/djangocon-us-2023/panel-discussion-who-put-me-in-charge-moving-beyond-day-to-day-coding-in-django.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Andrew Godwin</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/panel-discussion-who-put-me-in-charge-moving-beyond-day-to-day-coding-in-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jay Miller will host a panel discussion about career development in the Django world.&lt;/p&gt;
&lt;p&gt;Not everyone can or wants to solely write code for the rest of their working careers, so we'll explore other ways of advancing in your career, including ways that don't involve traditional management roles.&lt;/p&gt;
&lt;p&gt;We'll …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jay Miller will host a panel discussion about career development in the Django world.&lt;/p&gt;
&lt;p&gt;Not everyone can or wants to solely write code for the rest of their working careers, so we'll explore other ways of advancing in your career, including ways that don't involve traditional management roles.&lt;/p&gt;
&lt;p&gt;We'll discuss:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Broader-scale individual contributor roles, such as principal engineers&lt;/li&gt;
&lt;li&gt;Running your own consultancy agency&lt;/li&gt;
&lt;li&gt;Management roles, both technical and non-technical&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our panelists include (and more will be added before the session):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Charles Rejonis, Chief Products Officer, Wharton Research Data Services&lt;/li&gt;
&lt;li&gt;Elizabeth Christensen, manager at Crunchydata&lt;/li&gt;
&lt;li&gt;Frank Wiles, founder of REVSYS and former Django Software Foundation President&lt;/li&gt;
&lt;li&gt;Andrew Godwin, longtime Django core contributor&lt;/li&gt;
&lt;li&gt;Julia Solórzano, [2023 Keynote Speaker](/news/julia-solorzano/)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You don't have to be an experienced developer to get something out of this talk; this talk will be helpful to people starting out on their career track so they can know what might lie ahead as well as managers who want to better understand the developer career mindset.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Sponsored Talk: Optimizing Django deployments with a Continuous Observability Strategy.</title><link href="https://pyvideo.org/djangocon-us-2023/sponsored-talk-optimizing-django-deployments-with-a-continuous-observability-strategy.html" rel="alternate"></link><published>2023-10-18T00:00:00+00:00</published><updated>2023-10-18T00:00:00+00:00</updated><author><name>Guillaume Moigneu</name></author><id>tag:pyvideo.org,2023-10-18:/djangocon-us-2023/sponsored-talk-optimizing-django-deployments-with-a-continuous-observability-strategy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When applications fall short of performance expectations - they are consuming too much memory, response times increase, etc. - it can be tempting to increase the resources in the environment to respond. At the heart of the issue is application performance, and what's missing is a comprehensive strategy that connects production …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When applications fall short of performance expectations - they are consuming too much memory, response times increase, etc. - it can be tempting to increase the resources in the environment to respond. At the heart of the issue is application performance, and what's missing is a comprehensive strategy that connects production monitoring to tools that allow you to identify bottlenecks and enforce performance expectations (a performance budget) in development.&lt;/p&gt;
&lt;p&gt;In this talk, I'll attempt to show how using Blackfire.io in combination with Platform.sh as a deployment target makes it possible to not only create a Continuous Observability strategy across every application in your organization, but also how the pair makes it possible to make the environmental impact of web development a measurable and optimizable objective.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>All about djangoproject.com</title><link href="https://pyvideo.org/djangocon-us-2023/all-about-djangoprojectcom.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Paolo Melchiorre</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/all-about-djangoprojectcom.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The djangoproject.com website is the showcase of the Django project and developers and users have always looked for updates on the project, documentation, and information from the Django Software Foundation.&lt;/p&gt;
&lt;p&gt;As with its source code, the Django project site is also the result of contributions from many people …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The djangoproject.com website is the showcase of the Django project and developers and users have always looked for updates on the project, documentation, and information from the Django Software Foundation.&lt;/p&gt;
&lt;p&gt;As with its source code, the Django project site is also the result of contributions from many people who voluntarily help to keep it updated and improve it.&lt;/p&gt;
&lt;p&gt;In this talk, we will see all the latest updates, ongoing improvements, and upcoming developments of the Django project site.&lt;/p&gt;
&lt;p&gt;Participants will be able to learn more about the Django project site, learn more about how it is maintained and above all understand how to help improve it.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>An approach to lightweight tenancy management using Django Rest Framework</title><link href="https://pyvideo.org/djangocon-us-2023/an-approach-to-lightweight-tenancy-management-using-django-rest-framework.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Eliana Rosselli</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/an-approach-to-lightweight-tenancy-management-using-django-rest-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the last few years, I have run into the same multitenancy use case across different projects. This scenario is a “lightweight” multitenancy use case, where we have a tenant model and tenants are instances of this model; all tenants share the same database, schema, and application instance. Resources …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the last few years, I have run into the same multitenancy use case across different projects. This scenario is a “lightweight” multitenancy use case, where we have a tenant model and tenants are instances of this model; all tenants share the same database, schema, and application instance. Resources belong to a single tenant, but users can belong to multiple tenants. Almost all API routes need to be nested under the tenant id, with urls of the form &lt;cite&gt;api/tenants/tenant-id/some-resource&lt;/cite&gt;. The challenges we faced were how to effectively nest our API urls and how to consistently restrict access to resources, so that users could only access those resources that belong to tenants that the user has permission to access.&lt;/p&gt;
&lt;p&gt;We’ll cover:
- A brief description of the use case and multitenancy
- How we implemented nested routes in our API using [drf-nested-routers](&lt;a class="reference external" href="https://github.com/alanjds/drf-nested-routers"&gt;https://github.com/alanjds/drf-nested-routers&lt;/a&gt;)
- How we wrote a custom viewset to centralize all logic related to checking that the user has permission to access resources under a specific tenant
- Custom model manager to avoid accidentally leaking information from other tenants
- Uses and limitations of our approach
- A different approach using an existing library ([drf-access-policy](&lt;a class="reference external" href="https://github.com/rsinger86/drf-access-policy"&gt;https://github.com/rsinger86/drf-access-policy&lt;/a&gt;))&lt;/p&gt;
&lt;p&gt;Anyone with experience in Django is welcome!&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>BDD To The Bone: Acceptance Testing with Behave and Selenium</title><link href="https://pyvideo.org/djangocon-us-2023/bdd-to-the-bone-acceptance-testing-with-behave-and-selenium.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Pat Viafore</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/bdd-to-the-bone-acceptance-testing-with-behave-and-selenium.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's easy to get caught up in testing metrics. We all do it. We aim for 100% code coverage, try to hit all branches, write good integration tests, and all the other good developer practices. These all indicate that we are building our product right, but are we building …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's easy to get caught up in testing metrics. We all do it. We aim for 100% code coverage, try to hit all branches, write good integration tests, and all the other good developer practices. These all indicate that we are building our product right, but are we building the right product?&lt;/p&gt;
&lt;p&gt;There's a different mentality when it comes to answering this question. We, as developers, can't just make sure that the code does what &lt;em&gt;we&lt;/em&gt; want it to do. We need to think about what our users want. We need good requirements and specifications and we need to make sure that we are covering user acceptance testing.&lt;/p&gt;
&lt;p&gt;In this talk, we're going to discuss why requirements are hard to get right, and how we can solve some of those problems. We'll introduce strong traceabilty with executable specifications and then talk about how to tie that directly to your Python tests.&lt;/p&gt;
&lt;p&gt;We'll discuss behavior driven development, primarily with the &lt;cite&gt;behave&lt;/cite&gt; library. After we cover the basics, we'll look at a Django application and talk about the challenges in performing user acceptance testing on websites. We'll use the &lt;cite&gt;selenium&lt;/cite&gt; library to drive website interactions through Python, and tie it all together with acceptance tests.&lt;/p&gt;
&lt;p&gt;This talk assumes basic knowledge of testing practices, Python, and HTML/JavaScript.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Building high-performance, type-safe GraphQL APIs with Strawberry and Django</title><link href="https://pyvideo.org/djangocon-us-2023/building-high-performance-type-safe-graphql-apis-with-strawberry-and-django.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Thiago Bellini Ribeiro</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/building-high-performance-type-safe-graphql-apis-with-strawberry-and-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we will explore the world of GraphQL APIs with Strawberry, a new Python library that makes it easy to create GraphQL APIs with Django. We will dive into what GraphQL is, how it compares to traditional RESTful APIs, and what makes Strawberry stand out from other …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we will explore the world of GraphQL APIs with Strawberry, a new Python library that makes it easy to create GraphQL APIs with Django. We will dive into what GraphQL is, how it compares to traditional RESTful APIs, and what makes Strawberry stand out from other Python GraphQL libraries.&lt;/p&gt;
&lt;p&gt;One of the biggest challenges in GraphQL API development is the N+1 problem, where queries can become exponentially slow as more data is requested. We will discuss how data loaders can help solve this problem, and go in-depth on how to use them in Strawberry. In this topic we will also cover how the Strawberry Django integration leverages query introspection and user defined hints to automatically call .only(…)/.select_related(…)/.prefetch_related(…) on querysets, making your queries more efficient and avoiding common pitfalls. This is especially important in high-traffic, production environments where performance is critical.&lt;/p&gt;
&lt;p&gt;Finally, we will showcase some of the benefits of using Strawberry and Django together, including a type-safe approach to API development and streamlined code maintenance. By the end of this talk, you'll have the knowledge and tools you need to create high-performance GraphQL APIs with Strawberry and Django.&lt;/p&gt;
&lt;p&gt;It will be presented in the following order:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Intro&lt;/li&gt;
&lt;li&gt;Quick overview of what a GraphQL API looks like and its advantages&lt;/li&gt;
&lt;li&gt;Writing general GraphQL APIs using Strawberry&lt;/li&gt;
&lt;li&gt;Integrating the Django ORM with Strawberry&lt;/li&gt;
&lt;li&gt;Some common pitfalls, with emphasis on the N+1 problem&lt;/li&gt;
&lt;li&gt;GraphQL tools to avoid those pitfalls and how to use them with Strawberry&lt;/li&gt;
&lt;li&gt;How the Strawberry Django integration uses introspection to automatically overcome those pitfalls and also improve performance when executing Django querysets&lt;/li&gt;
&lt;/ul&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Decoding DDD: A Three-Tiered Approach to Django Projects</title><link href="https://pyvideo.org/djangocon-us-2023/decoding-ddd-a-three-tiered-approach-to-django-projects.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Pavel Sviridov</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/decoding-ddd-a-three-tiered-approach-to-django-projects.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;## Audience&lt;/p&gt;
&lt;p&gt;This talk is geared towards intermediate to advanced Django developers who want to improve the structure and maintainability of their projects.&lt;/p&gt;
&lt;p&gt;## Description&lt;/p&gt;
&lt;p&gt;Every project has its unique history and limitations. In this session, I will navigate you through three levels of implementing DDD in Django, from basic to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;## Audience&lt;/p&gt;
&lt;p&gt;This talk is geared towards intermediate to advanced Django developers who want to improve the structure and maintainability of their projects.&lt;/p&gt;
&lt;p&gt;## Description&lt;/p&gt;
&lt;p&gt;Every project has its unique history and limitations. In this session, I will navigate you through three levels of implementing DDD in Django, from basic to advanced. You will understand how to apply DDD to your Django project strategically and tactically and learn how to balance the costs and benefits of each level.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Level 0: Ubiquitous Language and Bounded Contexts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We'll begin with an easy-to-implement approach, focusing on strategic DDD patterns. Then, we'll delve into creating Ubiquitous Language and discovering Bounded Contexts through Event Storming sessions - an engaging technique to visualize and define domains collaboratively.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Level 1: DDD tactical patterns&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We'll move on to tactical patterns like entity, aggregate, repository, and domain services. Here, you'll understand how the standard usage of Django models may lead to a lack of integrity and how DDD patterns can provide business-level integrity.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Level 2: Advanced DDD&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Finally, we'll explore advanced DDD techniques. We'll cover how to design a domain layer in pure Python independent of the framework and why this approach can lead to cleaner, more testable code.&lt;/p&gt;
&lt;p&gt;## Takeaways&lt;/p&gt;
&lt;p&gt;By the end of this talk, you will have:
1. A clear understanding of implementing DDD in Django projects at different levels based on your requirements.
2. A solid grasp of the strategic and tactical patterns in DDD and how they can improve your Django project.
3. Hands-on experience in creating Ubiquitous Language and discovering Bounded Contexts through Event Storming sessions.
4. Knowledge of how to ensure business-level integrity in your project using DDD tactical patterns.
5. Insights on how to write a domain layer in pure Python, independent of the framework, and how it can lead to cleaner, more testable code.&lt;/p&gt;
&lt;p&gt;## Engagement&lt;/p&gt;
&lt;p&gt;In this session, I will focus on linking theory with practical examples. Drawing from my experience refactoring a 5-year-old Django monolith, which continues to be actively developed by five different teams, I have many real-world examples to illustrate different approaches. These examples are particularly insightful as they are based on diverse DDD approaches tried in various parts of the project and incorporate feedback from developers and business experts.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Don't Buy the "A.I." Hype</title><link href="https://pyvideo.org/djangocon-us-2023/dont-buy-the-ai-hype.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Tim Allen</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/dont-buy-the-ai-hype.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Those who cannot remember the past are condemned to repeat it.&amp;quot;&lt;/p&gt;
&lt;p&gt;– George Santayana, The Life of Reason, 1905.&lt;/p&gt;
&lt;p&gt;Congratulations, technologists! We have reached a new record for the height of the peak of inflated expectations with the hype surrounding &amp;quot;A.I.&amp;quot; If you believe the recent press, &amp;quot;A.I …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Those who cannot remember the past are condemned to repeat it.&amp;quot;&lt;/p&gt;
&lt;p&gt;– George Santayana, The Life of Reason, 1905.&lt;/p&gt;
&lt;p&gt;Congratulations, technologists! We have reached a new record for the height of the peak of inflated expectations with the hype surrounding &amp;quot;A.I.&amp;quot; If you believe the recent press, &amp;quot;A.I.&amp;quot; is going to be capable of everything, with some even talking of immortality.&lt;/p&gt;
&lt;p&gt;It is a wonderful thing to be excited about new technology available to us, but this is at a level I have never seen in my career. There have been numerable lessons from the past that illustrate why we should avoid these levels of hype.&lt;/p&gt;
&lt;p&gt;Is &amp;quot;A.I.&amp;quot; going to change everything? I don't buy it, and in this talk, I'll explain the reasons why.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Empathetic testing: Developing with compassion and humility.</title><link href="https://pyvideo.org/djangocon-us-2023/empathetic-testing-developing-with-compassion-and-humility.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Marc Gibbons</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/empathetic-testing-developing-with-compassion-and-humility.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tests can be a powerful tool used to increase our development speed and empower us with the confidence to refactor and improve codebases. Writing tests with these goals in mind requires empathy and compassion toward other developers and even our future selves. Conversely, tests written with different objectives, such …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tests can be a powerful tool used to increase our development speed and empower us with the confidence to refactor and improve codebases. Writing tests with these goals in mind requires empathy and compassion toward other developers and even our future selves. Conversely, tests written with different objectives, such as achieving an arbitrary coverage score, can have the opposite effect and cause suffering.&lt;/p&gt;
&lt;p&gt;Together, we will explore the following ideas:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How writing tests beforehand is an act of compassion.&lt;/li&gt;
&lt;li&gt;Testing outcomes, rather than implementation choices, takes humility.&lt;/li&gt;
&lt;li&gt;Empathizing with cognitive overwhelm: how isolating and minimizing test setup can make your code easier to understand and extend.&lt;/li&gt;
&lt;li&gt;Do you really need that mock? Balancing the needs of now with those of the future.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk aims to provide valuable insights for beginners embarking on their testing journeys and challenge experienced developers to contemplate their philosophy toward testing. While a basic familiarity with testing in Django is beneficial for understanding practical examples, it is not a prerequisite.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Introduction to GitHub Actions: Understanding Key Terms and Building Your First GitHub Action</title><link href="https://pyvideo.org/djangocon-us-2023/introduction-to-github-actions-understanding-key-terms-and-building-your-first-github-action.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Paul Gilzow</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/introduction-to-github-actions-understanding-key-terms-and-building-your-first-github-action.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all know we should be doing more automation of our software development lifecycle, but getting started can be challenging. Even if you have experience in continuous integration and continuous delivery (CI/CD) automation, learning a specific platform's terminology and idiosyncrasies can be frustrating.&lt;/p&gt;
&lt;p&gt;This presentation is designed to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all know we should be doing more automation of our software development lifecycle, but getting started can be challenging. Even if you have experience in continuous integration and continuous delivery (CI/CD) automation, learning a specific platform's terminology and idiosyncrasies can be frustrating.&lt;/p&gt;
&lt;p&gt;This presentation is designed to provide an overview of GitHub Actions, a CI/CD platform that allows you to automate your build, test, and deployment pipelines, and writing one's first Action, a reusable component that can automate repeatable tasks. We'll start by going over key terms and concepts in the GitHub Actions platform, such as actions, workflows, events, and jobs, and explain how they can be pieced together to build robust and dynamic automations.&lt;/p&gt;
&lt;p&gt;Then, we'll dive into the process of building your first GitHub Action, walking through the steps of creating a new action, the types of actions you can create, defining inputs and outputs, and required properties. We'll then work together to build an action that can be immediately used in your own workflows.&lt;/p&gt;
&lt;p&gt;Whether you're a seasoned developer looking to move to GitHub Actions, or a newcomer to automation looking to get started with your first CI/CD automation this presentation will help jumpstart your journey.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Keynote: Django the Dinosaur: A Story About A Web Framework.</title><link href="https://pyvideo.org/djangocon-us-2023/keynote-django-the-dinosaur-a-story-about-a-web-framework.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Julia Solórzano</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/keynote-django-the-dinosaur-a-story-about-a-web-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django is one of the first and longest running open source web frameworks in the world. This talk will expand on how Django has sustained itself over the years and where it needs to go in the future. Since its beginnings in the basement of a small paper in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django is one of the first and longest running open source web frameworks in the world. This talk will expand on how Django has sustained itself over the years and where it needs to go in the future. Since its beginnings in the basement of a small paper in Kansas to where it stands now, this keynote will review the past, present and future of Django in our current digital age.&lt;/p&gt;
&lt;p&gt;Topics to be covered are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;History of Django
-   Lawrence Journal-World: Where it all started
-   First DjangoCon US 2008
-   Django OS growing up&lt;/li&gt;
&lt;li&gt;Current Django
-   The Code
-   The Community&lt;/li&gt;
&lt;li&gt;Current changes in industry
-   The rise of AI
-   Cybersecurity&lt;/li&gt;
&lt;li&gt;Future Django&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are interested in learning more about Julia, you can find her on the web at:&lt;/p&gt;
&lt;p&gt;[juliaelman.com](&lt;a class="reference external" href="https://juliaelman.com/"&gt;https://juliaelman.com/&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;[&lt;a class="reference external" href="mailto:hello&amp;#64;juliasolorzano.com"&gt;hello&amp;#64;juliasolorzano.com&lt;/a&gt;](&lt;a class="reference external" href="mailto:hello&amp;#64;juliasolorzano.com"&gt;mailto:hello&amp;#64;juliasolorzano.com&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;[Julia's Résumé](&lt;a class="reference external" href="https://docs.google.com/document/d/1H1zzX3LqO5IPQk0h22jSTjSOq8sXRRRpp65OtGSUJqQ/edit"&gt;https://docs.google.com/document/d/1H1zzX3LqO5IPQk0h22jSTjSOq8sXRRRpp65OtGSUJqQ/edit&lt;/a&gt;)&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Managing Content with Django</title><link href="https://pyvideo.org/djangocon-us-2023/managing-content-with-django.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Michael Trythall</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/managing-content-with-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django is used to power lots of high-traffic, content-driven websites. It’s a great fit, providing features that help quickly scaffold data-rich systems with slick editing. But the admin isn’t powerful enough to make managing rich content super user-friendly. Luckily, Djangonauts have some solid solutions for building excellent …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django is used to power lots of high-traffic, content-driven websites. It’s a great fit, providing features that help quickly scaffold data-rich systems with slick editing. But the admin isn’t powerful enough to make managing rich content super user-friendly. Luckily, Djangonauts have some solid solutions for building excellent content-managed websites. This talk explores Wagtail, django CMS, and other options and helps developers pick the right tool for their next project.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Mixing reliability with Celery for delicious async tasks</title><link href="https://pyvideo.org/djangocon-us-2023/mixing-reliability-with-celery-for-delicious-async-tasks.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Flávio Juvenal</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/mixing-reliability-with-celery-for-delicious-async-tasks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Celery is essential for asynchronous processing in Django backends. In multiple Django projects, we used far beyond the use case of sending emails without blocking HTTP responses. Celery helped us aggregate data, fill caches, run ETL workflows, parallelize heavy workloads, sync with external services, set up periodic background jobs …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Celery is essential for asynchronous processing in Django backends. In multiple Django projects, we used far beyond the use case of sending emails without blocking HTTP responses. Celery helped us aggregate data, fill caches, run ETL workflows, parallelize heavy workloads, sync with external services, set up periodic background jobs, and much more.&lt;/p&gt;
&lt;p&gt;But as with any distributed system, running Celery reliably in production is challenging. Due to the many issues we’ve seen on Celery, we considered many times replacing it with other task queues. But we never found another library with the features Celery offers. So we had to learn to work around its shortcomings and pitfalls. After years of running it in multiple Django projects, we faced and solved several reliability problems. We remediated concurrency hazards. We dealt with lost tasks in multiple edges of the architecture. We read tons of docs, articles, and issues to properly tweak settings. We fixed weird serialization bugs after version upgrades. We found what kind of monitoring really needed.&lt;/p&gt;
&lt;p&gt;In this talk, you will learn how to configure, use and monitor Celery successfully in production. Celery performs well in simple contexts, because of that it might induce a false sense of safety that can be misleading as usage picks up and flows become more complex. Understanding the many ways it can fail as projects grow will help developers to prepare in advance.&lt;/p&gt;
&lt;p&gt;Outline:
- [2 minutes] Common concurrency issues
- [5 minutes] Recommended settings
- What Broker and Result Backend to use
- What happens when using others
- Serialization: pickle or not?
- Thresholds and limits
- Timeouts and expires
- [5 minutes] How tasks can be lost and how Celery (tries) to solve that
- ACKS_LATE, idempotency, and retries
- Why that task again? Visibility timeout, prefetches, and automatic redelivering
- Dead worker process, lost task
- You need atomicity too
- [5 minutes] Don’t use Celery canvas workflows: you need DB-level state
- [2 minutes] Multiple queues and workers will save you from complex incidents
- [2 minutes] The only monitoring you can trust: probe tasks
- [2 minutes] Graceful shutdowns: Celery and Continuous Deployment
- [3 minutes] Questions&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Navigating Django's Future: Djangonaut Space</title><link href="https://pyvideo.org/djangocon-us-2023/navigating-djangos-future-djangonaut-space.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Dawn Wages</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/navigating-djangos-future-djangonaut-space.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Embark on a voyage through Djangonaut Space, a one-of-a-kind mentorship initiative within the Django community. With a focus on collaborative learning, sustainability, and long-term growth, we invite aspiring Djangonauts to join our 8-week group mentoring program. Here, participants work at their own pace in a structured learning environment, setting …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Embark on a voyage through Djangonaut Space, a one-of-a-kind mentorship initiative within the Django community. With a focus on collaborative learning, sustainability, and long-term growth, we invite aspiring Djangonauts to join our 8-week group mentoring program. Here, participants work at their own pace in a structured learning environment, setting the stage for future contributions and potential leadership roles within the Django community.&lt;/p&gt;
&lt;p&gt;The mission is crystal clear: to nurture Django's next generation of leaders, boost community sustainability, and create a more diverse and inclusive contributor base.&lt;/p&gt;
&lt;p&gt;But does this program truly deliver on its promises? Can its unique approach effectively achieve its ambitious goals? Is it the transformative experience it professes to be? In short, will these Djangonauts reach the stars?&lt;/p&gt;
&lt;p&gt;With the conclusion of our Pilot Program, we invite you to join us in reflecting on its inception, achievements, and its potential impact on the broader Django universe going forward. Don't miss this opportunity to be part of the discussion and our mission to shape the future of Django together.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Postgres Performance: From Slow to Pro</title><link href="https://pyvideo.org/djangocon-us-2023/postgres-performance-from-slow-to-pro.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Elizabeth Christensen</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/postgres-performance-from-slow-to-pro.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At some point, every application is limited by the database. You don’t have to be a Postgres expert to get started with a few key performance improvements. This gentle introduction is meant for folks who’ve never ventured into their database before, or those who have been turning …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At some point, every application is limited by the database. You don’t have to be a Postgres expert to get started with a few key performance improvements. This gentle introduction is meant for folks who’ve never ventured into their database before, or those who have been turning knobs blindly. I’ll present how Postgres uses memory. Then, I’ll connect that to how you can monitor, tune, and optimize queries. You’ll be ready to take on the challenge as your application grows.&lt;/p&gt;
&lt;p&gt;#### Review of how Postgres uses memory
Measuring cache hit ratio
Measuring memory usage and tuning
Measuring shared buffer usage and tuning&lt;/p&gt;
&lt;p&gt;#### Connection settings
Default connection settings, knowing when you need more&lt;/p&gt;
&lt;p&gt;#### Stop runwaywas
Setting a statement timeout
Finding and stopping transactions&lt;/p&gt;
&lt;p&gt;#### Query performance
Using EXPLAIN
Reading and understanding EXPLAIN plans
Logging EXPLAIN plans
Adding Indexes&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Powering Energy Storage Beyond Excel</title><link href="https://pyvideo.org/djangocon-us-2023/powering-energy-storage-beyond-excel.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Calvin Hendryx-Parker</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/powering-energy-storage-beyond-excel.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In a world where renewable energy is crucial for combating climate change, a national installer of battery energy storage solutions found themselves outgrowing Excel and seeking a more powerful solution. Django’s superpowers allowed this company to optimize energy storage configurations, enhance accuracy in pricing models, and streamline business …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In a world where renewable energy is crucial for combating climate change, a national installer of battery energy storage solutions found themselves outgrowing Excel and seeking a more powerful solution. Django’s superpowers allowed this company to optimize energy storage configurations, enhance accuracy in pricing models, and streamline business workflows.&lt;/p&gt;
&lt;p&gt;During this talk, we will discuss the process of converting complex Excel formulas into powerful Python code. Explore the cutting-edge technologies employed, such as Django's framework and a PostgreSQL database managed by AWS RDS. Discover how Docker and AWS App Runner facilitated seamless deployment, while the Next.js React front end transformed the user experience.&lt;/p&gt;
&lt;p&gt;The impact of this project extends far beyond a single company. Attendees will uncover best practices for empowering any organization, especially those with vast amounts of data and complex processes. Learn how to streamline operations, enhance accuracy, ensure reliability and improve quality assurance, all while embracing the power of Django. Discover how Django's superpower is driving innovation, efficiency, and impact in climate tech and beyond.&lt;/p&gt;
&lt;p&gt;Together, let's harness the power of Django and pave the way for a greener, more sustainable world.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Strategies for handling conflicts and rollbacks in Django database migrations</title><link href="https://pyvideo.org/djangocon-us-2023/strategies-for-handling-conflicts-and-rollbacks-in-django-database-migrations.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Abigail Afi Gbadago</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/strategies-for-handling-conflicts-and-rollbacks-in-django-database-migrations.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Managing database migrations in Django can be challenging, especially in large projects with multiple developers and frequent releases. Conflicts can arise when multiple developers modify the same models when migration files are applied in the wrong order or in some cases where fields are faked. Rollbacks are also necessary …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Managing database migrations in Django can be challenging, especially in large projects with multiple developers and frequent releases. Conflicts can arise when multiple developers modify the same models when migration files are applied in the wrong order or in some cases where fields are faked. Rollbacks are also necessary when migrations fail or need to be reverted.&lt;/p&gt;
&lt;p&gt;This talk will explore various strategies for handling conflicts and rollbacks in Django database migrations. The aim is to provide attendees with practical solutions that can help them effectively manage database schema changes in their Django projects.&lt;/p&gt;
&lt;p&gt;Some of the strategies that will be discussed in the talk include using database locking to prevent conflicts, resolving conflicts manually by merging migration files, using migration squashing to reduce the number of migration files, and handling rollbacks by using version control systems.&lt;/p&gt;
&lt;p&gt;Attendees will learn how to identify and resolve conflicts in their migration files and how to apply best practices to ensure a smooth migration process. They will also gain insights into how to minimize the risk of data loss and downtime during rollbacks.&lt;/p&gt;
&lt;p&gt;By the end of the talk, attendees will have a deeper understanding of the challenges involved in managing database migrations and be better equipped to handle conflicts and rollbacks in their Django projects.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Swiss Army Django: Small Footprint ETL</title><link href="https://pyvideo.org/djangocon-us-2023/swiss-army-django-small-footprint-etl.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Noah Kantrowitz</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/swiss-army-django-small-footprint-etl.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ETL systems have become commonplace in our world, from tiny personal web scrapers to complex distributed data pipelines. With Django offering a fully async API, new possibilities have opened to simplify the many different microservices into a single Python application that hosts the scrapers, query systems, and administrative interface …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ETL systems have become commonplace in our world, from tiny personal web scrapers to complex distributed data pipelines. With Django offering a fully async API, new possibilities have opened to simplify the many different microservices into a single Python application that hosts the scrapers, query systems, and administrative interface all in one box. With this comes simplified code and deployment, and many other benefits.&lt;/p&gt;
&lt;p&gt;This talk will cover a case study in building this kind of all-in-one ETL system, the components used, and how they all fit together. This includes both API and web scrapers, GraphQL for querying and streaming, and a Discord interface for notifications and control.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>The programmer's imagination</title><link href="https://pyvideo.org/djangocon-us-2023/the-programmers-imagination.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Daniele Procida</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/the-programmers-imagination.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Of all our faculties, imagination is usually considered the freest, the seat of creation.&lt;/p&gt;
&lt;p&gt;According to Immanuel Kant, imagination allows us to take what nature gives us, and work it up into something new, that doesn't yet exist: &amp;quot;As natural physical beings we are bound by laws of nature …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Of all our faculties, imagination is usually considered the freest, the seat of creation.&lt;/p&gt;
&lt;p&gt;According to Immanuel Kant, imagination allows us to take what nature gives us, and work it up into something new, that doesn't yet exist: &amp;quot;As natural physical beings we are bound by laws of nature, as moral agents by the law of practical reason, but &lt;strong&gt;as imaginative creatures we are constrained by neither and thus have creative power&lt;/strong&gt;.&amp;quot;&lt;/p&gt;
&lt;p&gt;What's more, as programmers, we are a special kind of imagineer. Unlike other engineers, or pharmacologists, or architects (but like writers and musicians) we get to work upon a blank page.&lt;/p&gt;
&lt;p&gt;I'm interested in what we are doing with this freedom, and I am suspicious of it.&lt;/p&gt;
&lt;p&gt;Firstly, I think that the more grandiose the pictures we describe and draw, the less they actually matter.&lt;/p&gt;
&lt;p&gt;Secondly, I think that the things we don't even realise we're doing are the ones that are really shaping our future.&lt;/p&gt;
&lt;p&gt;And thirdly and most importantly, I think that the marvellous new worlds we conjure up on our blank pages can always be traced back to assumptions, prejudices and desires that are active right now: the programmer's imagination isn't telling us about the future, but about &lt;em&gt;now&lt;/em&gt; - and what's wrong with it.&lt;/p&gt;
&lt;p&gt;What do small and harmless things like Django's own success page tell us about our own thinking? &lt;em&gt;What does Django make us think?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As well as Immanuel Kant, dinosaurs and birds, palaeoart and 1980s computer programming books, David H Ahl and Jason Lanier will be brought on stage to help make sense of what we're doing, what we &lt;em&gt;think&lt;/em&gt; we're doing, the relationship between them - and what, perhaps, we &lt;em&gt;should&lt;/em&gt; be doing.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>There's More to Open Source than Code</title><link href="https://pyvideo.org/djangocon-us-2023/theres-more-to-open-source-than-code.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>Ramón Huidobro</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/theres-more-to-open-source-than-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Open source software has always been about more than just code. While the technical contributions of developers are critical to the success of an open source project, there are countless other ways that people can contribute to the community. From documentation and translation to community management and design, non-code …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Open source software has always been about more than just code. While the technical contributions of developers are critical to the success of an open source project, there are countless other ways that people can contribute to the community. From documentation and translation to community management and design, non-code contributions are essential to building a healthy and sustainable open source ecosystem.&lt;/p&gt;
&lt;p&gt;In this talk, we will explore the many different ways that people can contribute to open source beyond writing code. We'll discuss the importance of diverse perspectives and skill sets in creating a thriving open source community, and provide examples of successful projects that have leveraged non-code contributions to achieve their goals. We'll also offer practical tips and advice for those interested in getting involved in open source but who may not have coding experience.&lt;/p&gt;
&lt;p&gt;By the end of this talk, attendees will have a deeper understanding of the many ways that they can contribute to open source, and how their unique skills and talents can help to build a stronger and more inclusive community. They will leave with a renewed sense of excitement and motivation to get involved in open source, regardless of their technical background.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>What Django Deployment is Really About</title><link href="https://pyvideo.org/djangocon-us-2023/what-django-deployment-is-really-about.html" rel="alternate"></link><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><author><name>James Walters</name></author><id>tag:pyvideo.org,2023-10-17:/djangocon-us-2023/what-django-deployment-is-really-about.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;People often spend so much time learning how to build apps in Django that when it comes time for deployment, it feels like a whole new world that they don't understand. Deployment recipes might help them get their app online--but then again they might not, if the steps that …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;People often spend so much time learning how to build apps in Django that when it comes time for deployment, it feels like a whole new world that they don't understand. Deployment recipes might help them get their app online--but then again they might not, if the steps that worked yesterday don't work today. Even if they do get online, they might not understand that deployment process anymore than they did before.&lt;/p&gt;
&lt;p&gt;Instead of offering another set of steps, I think we can help beginners to make sense of deployment by reducing the entire process to four major areas of concern and equipping them to think through each of these on its own terms:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Static Files - why do I have to worry about these now? I thought &lt;cite&gt;{% raw %}{% static %}{% endraw %}&lt;/cite&gt; was handling it?&lt;/li&gt;
&lt;li&gt;Database - does my sqlite3 file not work in deployment? How do I use my cloud provider's remote DB?&lt;/li&gt;
&lt;li&gt;WSGI Server -  how do I run my app in production? Doesn't manage.py runserver work? I've never heard of WSGI, what is it and why does it matter to my Django project?&lt;/li&gt;
&lt;li&gt;Web Server (Apache/nginx/PaaS) - What do I need to understand about web servers like Apache or nginx to get my project online? Do I even need to configure a web server if I go with PaaS?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We'll also consider:
- Django's deployment checklist
- django-simple-deploy&lt;/p&gt;
&lt;p&gt;A link to slides will be posted after the talk at &lt;a class="reference external" href="http://james.walters.click/"&gt;http://james.walters.click/&lt;/a&gt;&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>AfroPython: Using Django to change black people life in Brazil</title><link href="https://pyvideo.org/djangocon-us-2023/afropython-using-django-to-change-black-people-life-in-brazil.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Felipe de Morais</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/afropython-using-django-to-change-black-people-life-in-brazil.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I'm Felipe de Morais, Co-CEO and co-founder of AfroPython. In this talk, I will share the path of AfroPython in Brazil(&lt;a class="reference external" href="http://afropython.org/"&gt;http://afropython.org/&lt;/a&gt;) and how the Python community was involved in growing and building this community of black people in IT. And how we became a company to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I'm Felipe de Morais, Co-CEO and co-founder of AfroPython. In this talk, I will share the path of AfroPython in Brazil(&lt;a class="reference external" href="http://afropython.org/"&gt;http://afropython.org/&lt;/a&gt;) and how the Python community was involved in growing and building this community of black people in IT. And how we became a company to help people thrive using Python.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Automate Your City Data with Python</title><link href="https://pyvideo.org/djangocon-us-2023/automate-your-city-data-with-python.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Philip James</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/automate-your-city-data-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It is very hard for the average resident of a U.S. or Canadian city to know what’s going on with their civic government. It’s even harder for them to get any sort of historical context on why things are the way they are. Let’s take …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It is very hard for the average resident of a U.S. or Canadian city to know what’s going on with their civic government. It’s even harder for them to get any sort of historical context on why things are the way they are. Let’s take my hometown, the City of Alameda. Six months ago if you wanted to know which city meetings had discussed rent control, your options were:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Have a friend who is a constant watcher of Alameda meetings / the #alamtg hashtag and could tell you&lt;/li&gt;
&lt;li&gt;Go through every meeting minutes on the Alameda Legistar and hope you figured it out&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is pretty common across a lot of civic government. I don’t think municipalities are willfully trying to hide this information from residents, and I don’t think it’s ineptitude. I think most cities, even the large ones, are understaffed, and without a concerted push it’s hard to make “visibility of city documents” a priority.&lt;/p&gt;
&lt;p&gt;What if we could have SQL-backed full text search of city meeting minutes? Well, thanks to Datasette, Python, AWS, and some Github actions, we can!&lt;/p&gt;
&lt;p&gt;Here's the process:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Figure out where official city minutes are hosted&lt;/li&gt;
&lt;li&gt;Write a script to fetch and format those city minutes&lt;/li&gt;
&lt;li&gt;Upload all the fetched minutes to AWS S3&lt;/li&gt;
&lt;li&gt;Run s3-ocr across the corpus of minutes&lt;/li&gt;
&lt;li&gt;Download the ocr’d pages into a sqlite DB&lt;/li&gt;
&lt;li&gt;Deploy a datasette instance to fly.io with that sqlite DB.&lt;/li&gt;
&lt;li&gt;Post to twitter so people know about it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this talk, I will cover this whole process in detail, including how to automate it, so that you can apply this process to your city, county, state, school board, or any other civic government you're interested in!&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Beyond the Basics of Migrations</title><link href="https://pyvideo.org/djangocon-us-2023/beyond-the-basics-of-migrations.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Charlotte Mays</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/beyond-the-basics-of-migrations.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will go into the basic anatomy of an auto-generated migration, as well as ways to leverage migrations for more complex functionality, such as data transformation. The goal is to demystify migrations for beginners and to empower intermediate users to do more with migrations.&lt;/p&gt;
&lt;p&gt;Provisional Outline:
- Introduction to …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will go into the basic anatomy of an auto-generated migration, as well as ways to leverage migrations for more complex functionality, such as data transformation. The goal is to demystify migrations for beginners and to empower intermediate users to do more with migrations.&lt;/p&gt;
&lt;p&gt;Provisional Outline:
- Introduction to basic migration anatomy (~5 minutes)
- In brief, what migrations are doing under the covers when run (1-2 minutes)
- Editing auto-generated migrations, and what functionality is available (~5 minutes)
- Creating a migration from scratch, with an example or two (5-8 minutes)
- A few best practices to keep in mind (~2 minutes)
- Remaining time for Q&amp;amp;A&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Building Powerful APIs with Django, Django Rest Framework, and OpenAPI</title><link href="https://pyvideo.org/djangocon-us-2023/building-powerful-apis-with-django-django-rest-framework-and-openapi.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Velda Kiara</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/building-powerful-apis-with-django-django-rest-framework-and-openapi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session, attendees will be introduced to the world of APIs and learn how Django, one of the most popular web frameworks, can be used to build them. We will explore the capabilities of Django Rest Framework (DRF), a powerful and flexible platform for building RESTful APIs.&lt;/p&gt;
&lt;p&gt;In …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session, attendees will be introduced to the world of APIs and learn how Django, one of the most popular web frameworks, can be used to build them. We will explore the capabilities of Django Rest Framework (DRF), a powerful and flexible platform for building RESTful APIs.&lt;/p&gt;
&lt;p&gt;In addition, we will discuss the benefits of using OpenAPI for API development, and learn how to leverage it to create robust and scalable APIs. We will cover best practices for API design, including request handling, response formatting, authentication, and versioning.&lt;/p&gt;
&lt;p&gt;Throughout the session, we will focus on building RESTful APIs with Django and DRF, using practical examples to illustrate key concepts. Attendees will leave with a solid understanding of how to design and document APIs using OpenAPI, ensuring that their documentation is always up-to-date and accurate.&lt;/p&gt;
&lt;p&gt;Whether you are new to API development or looking to improve your existing skills, this session is for you. Join us and learn how to build powerful and effective APIs using Django, DRF, and OpenAPI.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Contributing to Django or how I learned to stop worrying and just try to fix an ORM Bug</title><link href="https://pyvideo.org/djangocon-us-2023/contributing-to-django-or-how-i-learned-to-stop-worrying-and-just-try-to-fix-an-orm-bug.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Ryan Cheley</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/contributing-to-django-or-how-i-learned-to-stop-worrying-and-just-try-to-fix-an-orm-bug.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We'll start with my experience at DjangoCon US 2022 and the work I did while at the sprints on an ORM related bug. Then we'll walk through the process I went through as I realized that the bug I thought could be closed was actually still a bug and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We'll start with my experience at DjangoCon US 2022 and the work I did while at the sprints on an ORM related bug. Then we'll walk through the process I went through as I realized that the bug I thought could be closed was actually still a bug and needed to be fixed. I'll talk about the process I used to work on the bug and the great support I got from the community (both in person at Django Con US and online afterward).&lt;/p&gt;
&lt;p&gt;By the end of this talk you'll realize that while the Django ORM can seem big and scary, and you may be hesitant to try and tackle a bug or other issue related to it, at the end of the day, it's &lt;em&gt;just&lt;/em&gt; Python.&lt;/p&gt;
&lt;p&gt;Key take aways:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;using public notes as a way to track your learning and progress on (any) issue&lt;/li&gt;
&lt;li&gt;getting comfortable with the idea of becoming the world's foremost expert on an issue&lt;/li&gt;
&lt;li&gt;getting stuck is OK because the Django community is amazing and supportive and wants to see you succeed in fixing this bug&lt;/li&gt;
&lt;/ul&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Custom Model Managers and QuerySets: Graduating from Django Beginner to ORM Master</title><link href="https://pyvideo.org/djangocon-us-2023/custom-model-managers-and-querysets-graduating-from-django-beginner-to-orm-master.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Josh Thomas</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/custom-model-managers-and-querysets-graduating-from-django-beginner-to-orm-master.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In my journey as a Django developer, I know the moment when I did not consider myself a beginner anymore: when I started leveraging Django custom model managers and querysets. Initially they can seem intimidating and potentially complex. However, they can help make your use of the ORM more …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In my journey as a Django developer, I know the moment when I did not consider myself a beginner anymore: when I started leveraging Django custom model managers and querysets. Initially they can seem intimidating and potentially complex. However, they can help make your use of the ORM more efficient, allow you to encapsulate complex and repetitive queries, and provide an API surface area that makes it easier to introduce certain changes to Model fields and queries, among other benefits.&lt;/p&gt;
&lt;p&gt;Outline:
- A general overview of Model Managers/QuerySets
- How to define a custom Manager/QuerySet and either override the built-in one Django provides or add additional ones.
- The difference between a custom model manager and queryset and where you may use one over the other
- A few useful patterns I keep reaching for:
- &lt;cite&gt;.for_user(user)&lt;/cite&gt; - filtering a queryset to include only the objects a user has access to
- &lt;cite&gt;.with_complicated_legacy_raw_SQL_query()&lt;/cite&gt; - when migrating a legacy system to Django, I used this extensively before translating the original raw SQL into Django ORM
- &lt;cite&gt;.exclude_some_condition(condition)&lt;/cite&gt; - excluding certain objects based on a condition&lt;/p&gt;
&lt;p&gt;This talk is aimed at beginners and intermediates with a basic familiarity with the Django ORM. Towards the end of the talk, we will dip our toes in more advanced parts of the ORM (annotations/aggregations, subqueries, etc.) to show the potential of custom Managers/QuerySets.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Hosting and DevOps for Django</title><link href="https://pyvideo.org/djangocon-us-2023/hosting-and-devops-for-django.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Benjamin "Zags" Zagorsky</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/hosting-and-devops-for-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Production server infrastructure is a complicated beast that requires configuring and coordinating dozens of tools and services.  You have a new Django application and you're ready to deploy it; what next?  You have an existing Django application and you set up the servers yourself; what can you do better …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Production server infrastructure is a complicated beast that requires configuring and coordinating dozens of tools and services.  You have a new Django application and you're ready to deploy it; what next?  You have an existing Django application and you set up the servers yourself; what can you do better?  One mistake in a server setup can lead to major downtime or a security breach of a website.  Short of that, it can cause a lot of headaches for developers as complexity spirals out of control.&lt;/p&gt;
&lt;p&gt;I’m the co-founder CTO of [Zagaran, Inc.](&lt;a class="reference external" href="https://zagaran.com"&gt;https://zagaran.com&lt;/a&gt;), a software consulting company.  Over the past 10 years, we’ve built, maintained, and deployed dozens of Django websites, and have an extensive playbook for how to do that well.  In this talk, I draw from that playbook and go through the main ingredients for creating a robust and secure Django deployment.  For each piece, we'll look at the technologies and techniques to do it well.  We'll focus on AWS as a hosting platform, but these approaches work on any major cloud provider.&lt;/p&gt;
&lt;p&gt;This talk is aimed at anyone that is working with the servers and/or deployment process of a production Django project.  For people setting up a new set of servers for a Django project, this talk should be a good overview of the approach they need to take.  For people with an existing server setup for a Django project, this talk should help them identify issues that they had missed and ways to make their servers easier to manage.&lt;/p&gt;
&lt;p&gt;In this talk, we'll look at three main ways to host an application:
1. Platform as a Service
2. Managed Container Service
3. Kubernetes&lt;/p&gt;
&lt;p&gt;With that as framing, we'll cover the following other aspects of DevOps:
* Application hosting
* Server security
* Automating deployments
* Databases and migrations
* Secrets management
* File storage
* Server monitoring
* Server maintenance
* (and more!)&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>How to Ride Elephants Safely: Working with PostgreSQL when your DBA is not around</title><link href="https://pyvideo.org/djangocon-us-2023/how-to-ride-elephants-safely-working-with-postgresql-when-your-dba-is-not-around.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Richard Yen</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/how-to-ride-elephants-safely-working-with-postgresql-when-your-dba-is-not-around.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every so often, one may be called upon to perform the tasks of a database administrator, especially in cases where application performance seems to be affected by the database.  This talk will give non-DBAs an insight into how the world's most powerful open-source database works, and the kind of …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every so often, one may be called upon to perform the tasks of a database administrator, especially in cases where application performance seems to be affected by the database.  This talk will give non-DBAs an insight into how the world's most powerful open-source database works, and the kind of tools and features that are readily available for people who unexpectedly find themselves in the DBA pilot's seat.  Topics covered will include query tuning, monitoring, indexing, and a basic run-down of some configurables to help you know what options are at your disposal&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>HTML-ivating your Django web app's experience with HTMX, AlpineJS, and streaming HTML.</title><link href="https://pyvideo.org/djangocon-us-2023/html-ivating-your-django-web-apps-experience-with-htmx-alpinejs-and-streaming-html.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Chris May</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/html-ivating-your-django-web-apps-experience-with-htmx-alpinejs-and-streaming-html.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The rise of SPAs has brought many benefits, but it has also introduced complexity and performance overheads that can be overwhelming. As Django developers, we know the power and elegance of the Django framework, and we believe it can deliver a better user experience without the need for heavy …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The rise of SPAs has brought many benefits, but it has also introduced complexity and performance overheads that can be overwhelming. As Django developers, we know the power and elegance of the Django framework, and we believe it can deliver a better user experience without the need for heavy JavaScript frameworks.&lt;/p&gt;
&lt;p&gt;In this talk, we will dive into the concepts of HTMX, a lightweight library that allows us to update parts of the HTML directly from the server, and AlpineJS, a minimal JavaScript framework for enhancing interactivity. We will explore how these tools can be integrated seamlessly with Django to create modern web apps with enhanced user experiences.&lt;/p&gt;
&lt;p&gt;Additionally, we'll see how Django 4.2's &lt;cite&gt;StreamingHttpResponse&lt;/cite&gt; lays the foundation for better experiences of views that require slow queries, microservice calls, or APIs.&lt;/p&gt;
&lt;p&gt;### Key points:
1. Understanding the limitations of JavaScript-heavy SPAs:
- Increased complexity and maintenance overhead
- Slower initial load times and performance implications
2. Introduction to HTMX: Learn how to leverage HTMX to update parts of the HTML directly from the server, eliminating the need for heavy JavaScript frameworks.
3. Enhancing Interactivity with AlpineJS: Discover how to add lightweight JavaScript interactions to your Django app using AlpineJS, improving the user experience without sacrificing simplicity.
4. Streaming HTML for Performance: Explore how to stream HTML to deliver a fast and interactive experience, even in slow network connections or large datasets.
5. Case Study: Dive into a real-world example of a web app that leveraged streaming HTML to achieve impressive user experiences.&lt;/p&gt;
&lt;p&gt;By the end of this talk, attendees will be inspired to leverage HTMX, AlpineJS, and streaming HTML to create modern web applications with exceptional user experiences. They will gain insights into the benefits and trade-offs of this approach compared to JavaScript-heavy SPAs and leave with practical tips and best practices for implementing these techniques in their Django projects.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Keynote: Finding Purpose in Open Source Through Community Building.</title><link href="https://pyvideo.org/djangocon-us-2023/keynote-finding-purpose-in-open-source-through-community-building.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Abigail Mesrenyame Dogbe</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/keynote-finding-purpose-in-open-source-through-community-building.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Growing up, I had little enthusiasm for Computers and Mathematics and I found it difficult to navigate these areas in school. However, after my first encounter as a mentee at a Django Girls event held in Accra, Ghana, I saw the value of Open Source Software and Community and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Growing up, I had little enthusiasm for Computers and Mathematics and I found it difficult to navigate these areas in school. However, after my first encounter as a mentee at a Django Girls event held in Accra, Ghana, I saw the value of Open Source Software and Community and was challenged to encourage the participation of more women. This challenge evolved into a bigger one which involved bringing together more Africans, to share ideas, collaborate, and find their career paths, while also inspiring the next generation of contributors. My efforts in strategic team building, projects, and communities like Django Girls and PyCon Africa helped us reach these goals.&lt;/p&gt;
&lt;p&gt;In this talk, I will share my journey of how I was challenged to contribute to open source by bringing others into it, and how it has helped me develop resilience and a growth mindset. I will discuss how I discovered the benefits of open source, overcame the challenges of contributing, became strategic about community building, embraced discomfort, and ultimately found a sense of purpose and fulfillment in my contributions.&lt;/p&gt;
&lt;p&gt;Through my experience, I aim to encourage others to keep welcoming new people, particularly those from underrepresented groups, to participate in open source. Show them the various ways that open source can help them improve the world and fulfill their goals.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Let's build a BeeWare app that uses Django</title><link href="https://pyvideo.org/djangocon-us-2023/lets-build-a-beeware-app-that-uses-django.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Cheuk Ting Ho</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/lets-build-a-beeware-app-that-uses-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we will go through the basics of building a Beeware app. However, instead of starting from scratch, we will assume that we have a Django app that is already built - we will use the first step tutorial on Django documentation. Then, we will start building the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we will go through the basics of building a Beeware app. However, instead of starting from scratch, we will assume that we have a Django app that is already built - we will use the first step tutorial on Django documentation. Then, we will start building the BeeWare UI and link it up with the already working Django app. After building our example, we will also discover other alternatives that BeeWare can work with Django so in the future, if you are building another BeeWare app, you can decide which method you want to use.&lt;/p&gt;
&lt;p&gt;## Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction of BeeWare (10 mins)&lt;/li&gt;
&lt;li&gt;Make sure the Django App is running (5mins)&lt;/li&gt;
&lt;li&gt;Building the BeeWare UI (10 mins)&lt;/li&gt;
&lt;li&gt;Combine with Django (10 mins)&lt;/li&gt;
&lt;li&gt;Conclusion and alternatives (10 mins)&lt;/li&gt;
&lt;/ul&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Meet-ups: A Grand Vision for a Humble Endeavor</title><link href="https://pyvideo.org/djangocon-us-2023/meet-ups-a-grand-vision-for-a-humble-endeavor.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Deb Nicholson</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/meet-ups-a-grand-vision-for-a-humble-endeavor.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Meet-ups are one of the best places to bring new people into our communities, but it feels like each one is constantly reinventing the wheel. What if we thought about running meet-ups as a craft and talked about what we're doing there as one of the most important activities …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Meet-ups are one of the best places to bring new people into our communities, but it feels like each one is constantly reinventing the wheel. What if we thought about running meet-ups as a craft and talked about what we're doing there as one of the most important activities that code communities can engage in? Python and Django have built fantastically welcoming communities, and now it's time go out there and bring in the next wave of community members.&lt;/p&gt;
&lt;p&gt;This talk is a love letter to meetups. We'll cover how meet-ups fit into our larger ecosystems, what we could work on collectively to support each other, and maybe even make a plan for saving the world -- one meet-up at a time.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>✨ Modern editing experience for your Django models with Wagtail 🐦</title><link href="https://pyvideo.org/djangocon-us-2023/modern-editing-experience-for-your-django-models-with-wagtail.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Sage Abdullah</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/modern-editing-experience-for-your-django-models-with-wagtail.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Can content management features be useful when managing arbitrary Django models?&lt;/p&gt;
&lt;p&gt;Wagtail is an open source, Django-powered Content Management System (CMS). It is built on the concept of pages as tree-structured Django models. As a CMS, Wagtail gives you the power to save revisions, manage live/draft versions, moderate …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Can content management features be useful when managing arbitrary Django models?&lt;/p&gt;
&lt;p&gt;Wagtail is an open source, Django-powered Content Management System (CMS). It is built on the concept of pages as tree-structured Django models. As a CMS, Wagtail gives you the power to save revisions, manage live/draft versions, moderate your content, _live_ preview as you edit, and much more.&lt;/p&gt;
&lt;p&gt;A typical Wagtail project would have your user-facing website structure be defined by the tree structure of the Page model. However, if you have an existing Django project with your own defined Django views, and you don't want to use Wagtail's Page model, you can still get plenty of benefits from Wagtail!&lt;/p&gt;
&lt;p&gt;In this talk, we will learn how to benefit from powerful content-management features for your existing Django models by integrating Wagtail CMS into your project.&lt;/p&gt;
&lt;p&gt;This talk does not require any pre-existing knowledge about Wagtail CMS, though familiarity with Django models and external apps is expected.&lt;/p&gt;
&lt;p&gt;The talk will be structured as follows:
- What Wagtail CMS is and how it compares with Django itself
- Wagtail features likely relevant to many Django projects and how they work
- How to integrate Wagtail into an existing Django project
- How to progressively enable Wagtail's features and use them to manage your Django models&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Orientation and Welcome</title><link href="https://pyvideo.org/djangocon-us-2023/orientation-and-welcome.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Kojo Idrissa</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/orientation-and-welcome.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;attending your first tech conference?&lt;/li&gt;
&lt;li&gt;attending DjangoCon US alone?&lt;/li&gt;
&lt;li&gt;a member of an underrepresented group&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you answered &amp;quot;yes&amp;quot; to any or all of those, Orientation is for you!&lt;/p&gt;
&lt;p&gt;DjangoCon US is packed with awesome people and awesome information. But that much awesome can be overwhelming. Orientation …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;attending your first tech conference?&lt;/li&gt;
&lt;li&gt;attending DjangoCon US alone?&lt;/li&gt;
&lt;li&gt;a member of an underrepresented group&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you answered &amp;quot;yes&amp;quot; to any or all of those, Orientation is for you!&lt;/p&gt;
&lt;p&gt;DjangoCon US is packed with awesome people and awesome information. But that much awesome can be overwhelming. Orientation is designed to help you get your bearings on all the awesome. Living your best life is up to you, but we _can_ help you have your best DjangoCon US.&lt;/p&gt;
&lt;p&gt;More details will be published in a blog post. We look forward to helping you start your DjangoCon US journey in the best way.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Passkeys on Django</title><link href="https://pyvideo.org/djangocon-us-2023/passkeys-on-django.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Mohamed ElKalioby</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/passkeys-on-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web Authentication API (WebAuthn) is a phishing-proof technology that is expected to replace passwords. The technology is available since 2019, but in 2022, Apple, Google, and Microsoft agreed to support Passkeys, solving challenges facing the wide deployment of WebAuthn API. Passkeys is an extension to WebAuthn that allows the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Web Authentication API (WebAuthn) is a phishing-proof technology that is expected to replace passwords. The technology is available since 2019, but in 2022, Apple, Google, and Microsoft agreed to support Passkeys, solving challenges facing the wide deployment of WebAuthn API. Passkeys is an extension to WebAuthn that allows the user to use a key credential stored in a device to log in on another device. e.g. you can use the key stored on your phone to log in on a browser on a Windows device. The communication is done over Bluetooth Low Energy (BLE). Passkeys are now supported on iOS/iPad 16, Mac OS X Ventura, and Andriod phones, and can be used by Chromium-based browsers and Safari.
The talk will cover the following
*  what is WebAuthn and how it is phishing resistant even during a man-in-the-middle attack,
* challenges in WebAuthn,
* what are Passkeys and how they solved WebAuth challenges,
* State of Passkeys,
* Demo the usage of passkeys and their user experience.
* How to integrate passkeys in your current Django project by &lt;cite&gt;django-passkeys&lt;/cite&gt;.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Sponsored Talk: Supercharge Your Django Dev Team: Introducing the BEST Framework</title><link href="https://pyvideo.org/djangocon-us-2023/sponsored-talk-supercharge-your-django-dev-team-introducing-the-best-framework.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Calvin Hendryx-Parker</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/sponsored-talk-supercharge-your-django-dev-team-introducing-the-best-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever sensed an unseen throttle on your team's potential? Get ready to unmask those bottlenecks and elevate your Django prowess. Explore the BEST framework with Six Feet Up CTO Calvin Hendryx-Parker. BEST is a catalyst designed by devs, for devs, to turbocharge team efficiency. Ready to up your game …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever sensed an unseen throttle on your team's potential? Get ready to unmask those bottlenecks and elevate your Django prowess. Explore the BEST framework with Six Feet Up CTO Calvin Hendryx-Parker. BEST is a catalyst designed by devs, for devs, to turbocharge team efficiency. Ready to up your game? Join Calvin and dive into insights to lay the groundwork for unmatched synergy.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>The evolution of a Django Website into a radio automation back-end</title><link href="https://pyvideo.org/djangocon-us-2023/the-evolution-of-a-django-website-into-a-radio-automation-back-end.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Ernesto Rico Schmidt</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/the-evolution-of-a-django-website-into-a-radio-automation-back-end.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are both commercial and open-source solutions for radio automation, but the requirements of free radios are very different from commercial radios, specially regarding the scheduling options and the end-user interface.&lt;/p&gt;
&lt;p&gt;With AURA, we are developing a free and open-source software automation suite for free radios.&lt;/p&gt;
&lt;p&gt;At the core …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are both commercial and open-source solutions for radio automation, but the requirements of free radios are very different from commercial radios, specially regarding the scheduling options and the end-user interface.&lt;/p&gt;
&lt;p&gt;With AURA, we are developing a free and open-source software automation suite for free radios.&lt;/p&gt;
&lt;p&gt;At the core of AURA is &lt;cite&gt;steering&lt;/cite&gt;, a Django application that serves as the &amp;quot;source of truth&amp;quot; for the schedule and acts as an OpenID Connect provider for the components of the suite.&lt;/p&gt;
&lt;p&gt;First, I'll describe the situation free radios in Austria face: The commercial radio automation software available, and the only supposedly free solution, currently in use at some radio stations in Austria, has showed that a (Java) monolith and a single developer are not the best approach for the rather complex and varied schedule and play-out requirements of free radios.&lt;/p&gt;
&lt;p&gt;This moved a group of free radios in Austria to start the development of a free and open-source software suite of radio management, program scheduling and play-out automation software: AURA.&lt;/p&gt;
&lt;p&gt;Second, I'll give a short overview of the distributed architecture and the components of AURA, and focus on how it distinguishes from the monoliths that are currently in use at some of the free radios in Austria.&lt;/p&gt;
&lt;p&gt;Then, I'll explain the data models behind the Django application, with a special focus on the recurrence rules and the schedule conflict resolution, the most complex parts of &lt;cite&gt;steering&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;I will focus on the architecture decisions we took during the planing and development, and how the open-source development is a better and more sustainable approach to a common problem for free radio stations.&lt;/p&gt;
&lt;p&gt;I will show small snippets of code of the most interesting parts of the Django application, and explain the rationale behind them, specially the recurrence rules, and the schedule conflict resolution.&lt;/p&gt;
&lt;p&gt;In this case Django is not providing a Web application or a Web site but it is providing a REST API and acts as the back-end of a software suite, and serves as the &amp;quot;source of truth&amp;quot; for the scheduling and the play-out automation of the radio station.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Using database triggers to reliably track model history</title><link href="https://pyvideo.org/djangocon-us-2023/using-database-triggers-to-reliably-track-model-history.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Wes Kendall</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/using-database-triggers-to-reliably-track-model-history.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tracking model history is an essential aspect of many web applications, as it allows developers to monitor and analyze changes made to the data over time. In Django, the majority of history tracking apps are implemented in Python at the application level, making a tamper-proof audit trail nearly impossible …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tracking model history is an essential aspect of many web applications, as it allows developers to monitor and analyze changes made to the data over time. In Django, the majority of history tracking apps are implemented in Python at the application level, making a tamper-proof audit trail nearly impossible to implement accurately.&lt;/p&gt;
&lt;p&gt;By utilizing triggers, developers can automate the process of capturing and storing changes made to models within the database itself. This approach offers several benefits. Firstly, it reduces the complexity of manually implementing and maintaining history tracking functionality in Django code. Triggers provide a centralized and standardized mechanism to monitor modifications, ensuring consistency and accuracy across multiple models and applications.&lt;/p&gt;
&lt;p&gt;Secondly, triggers enable the tracking of changes at a database level, resulting in improved performance and reduced overhead. Since the triggers are executed within the database engine, they can efficiently capture modifications without requiring additional round-trips between the application and the database. This efficiency is particularly valuable when dealing with large datasets or frequently updated models.&lt;/p&gt;
&lt;p&gt;Furthermore, triggers provide a reliable and tamper-proof history of model changes. By operating at the database level, triggers can capture modifications regardless of whether they originate from Django or other external sources. This capability ensures that all changes to the model are consistently tracked, eliminating the risk of data loss or incomplete history.&lt;/p&gt;
&lt;p&gt;Additionally, utilizing triggers for model history tracking in Django promotes data integrity and compliance with auditing requirements. By maintaining a comprehensive record of changes, developers can trace back and analyze the evolution of data, helping to identify potential issues, perform forensic analysis, or meet regulatory obligations.&lt;/p&gt;
&lt;p&gt;In this talk, we show how to implement history tracking using [django-pghistory](hub.com/opus10/django-pghistory), an app that uses Postgres triggers to track historical changes. We discuss the philosophy of django-pghistory and how it models historical changes so that engineers can use structured history tables that mirror tracked models. We show how users can attach free-form context from the application to group together changes, forming a more coherent audit trail. We also discuss several other application-specific examples of using django-pghistory in practice, for example, using conditional history triggers to track and snapshot specific events.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Vue + Django: Combining Django Templates and Vue Single File Components without compromise</title><link href="https://pyvideo.org/djangocon-us-2023/vue-django-combining-django-templates-and-vue-single-file-components-without-compromise.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Mike Hoolehan</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/vue-django-combining-django-templates-and-vue-single-file-components-without-compromise.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a common misconception that Django's template-based views and &amp;quot;heavyweight&amp;quot; JavaScript frameworks such as Vue cannot co-exist without considerable compromise; that we are forced to choose between the two. For example, we may use Django Rest Framework as back-end while writing a JavaScript SPA front-end, making it difficult …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a common misconception that Django's template-based views and &amp;quot;heavyweight&amp;quot; JavaScript frameworks such as Vue cannot co-exist without considerable compromise; that we are forced to choose between the two. For example, we may use Django Rest Framework as back-end while writing a JavaScript SPA front-end, making it difficult to utilize Django templates where convenient. Or we may use JavaScript frameworks from Django templates using browser &lt;cite&gt;&amp;lt;script&amp;gt;&lt;/cite&gt; includes, but then lost is much of the tooling, testability, and ecosystem of the modern build-based JavaScript framework. This dilemma leads many Django developers to choose lighter-weight no-build Javascript frameworks as a means to add dynamic user experience.&lt;/p&gt;
&lt;p&gt;However, there is no need for compromise. &lt;strong&gt;Vue can, surprisingly easily, be mingled directly into Django templates&lt;/strong&gt;, allowing us to mix-and-match these two front-end technologies as we wish, without sacrificing the strengths of either.&lt;/p&gt;
&lt;p&gt;This talk will explain a unique new approach to integrating Vue 3 within Django Templates. Starting with a minimal Django project, I will demonstrate the addition of Vue components into a templated app, harmoniously combining both front-end frameworks. We will explore topics such as information passing from Django to Vue, Vite configuration and tooling, persistent state management with Pinia, and resources to jumpstart your own project.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>^What can (the DSF | I) do for (me | the DSF)\?$</title><link href="https://pyvideo.org/djangocon-us-2023/what-can-the-dsf-i-do-for-me-the-dsf.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Chaim Kirby</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/what-can-the-dsf-i-do-for-me-the-dsf.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An introduction into the reason for and purpose of the Django Software Foundation with special focus on recent changes and new initiatives meant to increase engagement with Django, the DSF, and the greater Django Community. Followed by a Q&amp;amp;A session.&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry><entry><title>Working with Neo4j with Django neomodel library</title><link href="https://pyvideo.org/djangocon-us-2023/working-with-neo4j-with-django-neomodel-library.html" rel="alternate"></link><published>2023-10-16T00:00:00+00:00</published><updated>2023-10-16T00:00:00+00:00</updated><author><name>Dara Silvera</name></author><id>tag:pyvideo.org,2023-10-16:/djangocon-us-2023/working-with-neo4j-with-django-neomodel-library.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;My talk aims to provide a comprehensive overview of graph databases, going through the basics and fundamentals concepts.&lt;/p&gt;
&lt;p&gt;Graph databases are used for real-time transaction applications, Metadata and Advanced Analytics, Internal Business Process, and much more! There are plenty of use cases for graph databases such as recommendation systems …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;My talk aims to provide a comprehensive overview of graph databases, going through the basics and fundamentals concepts.&lt;/p&gt;
&lt;p&gt;Graph databases are used for real-time transaction applications, Metadata and Advanced Analytics, Internal Business Process, and much more! There are plenty of use cases for graph databases such as recommendation systems, customer engagement, knowledge graph for AI, and so on.&lt;/p&gt;
&lt;p&gt;The best part is that you can visualize the data you store as nodes, and the queries you make as well, so it is easier to identify patterns and relationships within the data. This can help gain deeper insights into the data and make more informed decisions based on your findings.&lt;/p&gt;
&lt;p&gt;Also, the attendees will see how it can work with Django, using neomodel as an interface to communicate with Neo4j.&lt;/p&gt;
&lt;p&gt;Last but not least, we will dive into some of the graph algorithms, to take advantage of this kind of database and explore possibilities.&lt;/p&gt;
&lt;p&gt;This is an entry-level talk for people interested in databases. Basic database knowledge is recommended.&lt;/p&gt;
&lt;p&gt;We’ll cover:
What is a graph database with Neo4j
Possible use cases
Differences between queries with Sql and Cypher language
How to transform a relational database into a non-relational database
A use case with Formula 1, using Django neomodel library, showing the graph data model, the graph that built and some interesting queries&lt;/p&gt;
</content><category term="DjangoCon US 2023"></category></entry></feed>