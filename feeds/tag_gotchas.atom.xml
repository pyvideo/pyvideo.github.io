<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_gotchas.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2011-09-10T00:00:00+00:00</updated><entry><title>Daemon Slaying! Or, Unix Daemons in Python for fun and profit!</title><link href="https://pyvideo.org/pytexas-2011/daemon-slaying--or--unix-daemons-in-python-for-fu.html" rel="alternate"></link><published>2011-09-10T00:00:00+00:00</published><updated>2011-09-10T00:00:00+00:00</updated><author><name>Walker Hale</name></author><id>tag:pyvideo.org,2011-09-10:pytexas-2011/daemon-slaying--or--unix-daemons-in-python-for-fu.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn the in's and out's of creating Unix Daemons in Python. Walker Hale
will walk you through several examples, gotchas, and tips and tricks.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Daemons are those pieces of software in Unix (including Linux and Mac OS
X) that run in the background and typically start automatically during
system boot. Times when you might want a daemon include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Monitoring an &amp;quot;inbox&amp;quot; directory in situations where a cron job is not
appropriate&lt;/li&gt;
&lt;li&gt;Managing (possibly multiple) instances of software according to
business rules&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although most daemons are written in C, Python is a great alternative.&lt;/p&gt;
</summary><category term="gotchas"></category></entry></feed>