<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 27 Oct 2018 00:00:00 +0000</lastBuildDate><item><title>Deploy con Python: Más Fácil Imposible</title><link>https://pyvideo.org/pyday-rosario-2018/deploy-con-python-mas-facil-imposible.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La charla consistira en hablar de las distintas maneras que se tienen hoy en dia para lanzar a produccion nuestras aplicaciones hechas en python, mas especificamente se mostraran demos con Django y Flask. Se mostraran ventajas y desventajas de varios servicios en la nube para realizar este tipo de tareas y algunos tips y herramientas a tomar en cuenta para realizar el despliegue. Al finalizar, se espera que los asistentes puedan llevar sus aplicaciones a producción con mas frecuencia.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mauricio Ballesteros Valladares</dc:creator><pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-27:pyday-rosario-2018/deploy-con-python-mas-facil-imposible.html</guid></item><item><title>Lightning Talks</title><link>https://pyvideo.org/pyday-rosario-2018/lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyDay Rosario 2018 - Lightning Talks&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various Speakers</dc:creator><pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-27:pyday-rosario-2018/lightning-talks.html</guid><category>lightning talks</category></item><item><title>Mallas Poliedrales para Aproximar Soluciones de Ecuaciones Diferenciales en Derivadas Parciales</title><link>https://pyvideo.org/pyday-rosario-2018/mallas-poliedrales-para-aproximar-soluciones-de-ecuaciones-diferenciales-en-derivadas-parciales.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Muchos problemas de la geometría y de la fíisica se modelizan en términos de ecuaciones diferenciales, que son ecuaciones que relacionan a una función desconocida con algunas de sus derivadas. En casi todos los casos, si bien está demostrada la existencia y unicidad de la solución de una de tales ecuaciones, es imposible computarla analíticamente de manera exacta, y entonces un abordaje posible es construir un método numérico para construir otra función que sea una aproximación (todo lo cercana que se quiera) de esta función desconocida. Estas aproximaciones se dan en forma de una función definida por partes, siguiendo una cierta subdivisión de la región del espacio en donde ocurre el fenómeno físico de interés. La definición y construcción de un método numérico propio comienza, entonces, con la explicitación del proceso de mallado, que consiste en una sucesión infinita de subdivisiones del dominio, con elementos de medida tan pequeña como se quiera. Después de esto, la definición de todos los objetos de cálculo concreto y de análisis teórico concernientes al método numérico depende de cuáles son precisamente los puntos, las aristas, las caras y los poliedros de las mallas. Un programa de mallado debe tomar como entrada alguna información geométrica sucinta de la región a subdividir y entregar como salida alguna tabulación concreta de los puntos, aristas, caras y poliedros de la malla. Por ejemplo una lista de archivos de texto. Presento una primera versión del programa en Python que implementa (y grafica) la familia de mallas que dan lugar al método numérico construido y propuesto en mi trabajo de tesis doctoral. Además muestro brevemente parte del programa en GNU Octave que ensambla el sistema lineal de ecuaciones, a partir de las mallas, cuya solución son las coordenadas que determinan a la solución aproximada de una ecuación diferencial modelo.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexis Jawtuschenko</dc:creator><pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-27:pyday-rosario-2018/mallas-poliedrales-para-aproximar-soluciones-de-ecuaciones-diferenciales-en-derivadas-parciales.html</guid></item><item><title>Microservices con Nameko</title><link>https://pyvideo.org/pyday-rosario-2018/microservices-con-nameko.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Iniciando con las instalación de las herramientas la charla irá avanzando en el ejemplo de como desarrollar 2 microservicios que se comunican entre sí. Dado que la charla es introductoria, y lo acotado del tiempol, se cubrirá solo lo básico, con ejemplos, sobre los siguientes tópicos: * Instalación * RPC entrypoints * GET/POST entrypoints * Dependency providers&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Pablo Gimenez</dc:creator><pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-27:pyday-rosario-2018/microservices-con-nameko.html</guid></item><item><title>Programación Asincrónica en Python 3: El Futuro ya Llegó</title><link>https://pyvideo.org/pyday-rosario-2018/programacion-asincronica-en-python-3-el-futuro-ya-llego.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La charla cuenta teoría de asincronismo en general, y muestra en qué casos es útil o necesario. Luego muestra cómo trabajar con esta tecnología en Python 3, explicando la teoría y mostrando ejemplos para utilizar el event loop, haer llamadas, ejecutar corrutinas, ejecutar cosas que bloquean, procesamiento en paralelo, utilización de iteradores, e incluso manejo de errores y supervisión de files descriptos, para cerrar con una introducción a transportes y protocolos, y tips para ayudas.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Facundo Batista</dc:creator><pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-27:pyday-rosario-2018/programacion-asincronica-en-python-3-el-futuro-ya-llego.html</guid></item><item><title>Python a Vuelo de Pájaro</title><link>https://pyvideo.org/pyday-rosario-2018/python-a-vuelo-de-pajaro.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introducción a Python&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guido Macchi</dc:creator><pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-27:pyday-rosario-2018/python-a-vuelo-de-pajaro.html</guid></item><item><title>Refactoring en Python</title><link>https://pyvideo.org/pyday-rosario-2018/refactoring-en-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Una parte importante del material para aprender programación se centra en escribir programas desde cero. Cuando un software es útil, entra en una etapa nueva de su ciclo de vida, el de la evolución incremental. Los requerimientos cambian, y reescribir el software rara vez es una buena solución. Escribir una nueva funcionalidad y a la vez modificar el diseño del código existente es más complejo a medida que el software crece. Por tanto resulta útil partir ese proceso en dos. Refactoring es el conjunto de técnicas para poder adaptar el diseño de un software sin cambiar su funcionalidad, con miras a simplificar la segunda parte de este proceso.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rafael Darder</dc:creator><pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-10-27:pyday-rosario-2018/refactoring-en-python.html</guid></item></channel></rss>