<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_simon-knight.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-07-06T00:00:00+00:00</updated><entry><title>Using Python to design, configure, and measure large-scale networks</title><link href="https://pyvideo.org/pycon-au-2013/using-python-to-design-configure-and-measure-la.html" rel="alternate"></link><published>2013-07-06T00:00:00+00:00</published><updated>2013-07-06T00:00:00+00:00</updated><author><name>Simon Knight</name></author><id>tag:pyvideo.org,2013-07-06:pycon-au-2013/using-python-to-design-configure-and-measure-la.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;AutoNetkit is an open-source project to automatically build network
configuration files for routers including Quagga, Cisco and Juniper,
with complicated protocol configurations, all from a simple input graph
--- which could even be drawn in a program such as yEd.&lt;/p&gt;
&lt;p&gt;AutoNetkit was started at the University of Adelaide, and developed
further at Cisco, with collaborators from both research and industry. It
is being used at major router vendors, by network operators, and in
university teaching, and in research publications including experiments
with over 800 virtual routers --- nearly impossible to configure by
hand.&lt;/p&gt;
&lt;p&gt;This is all powered by Python, and we make significant use of the
excellent packages available.&lt;/p&gt;
&lt;p&gt;This talk will present a brief overview of what the AutoNetkit project
is about and why we chose Python.&lt;/p&gt;
&lt;p&gt;I will give an over view of our data model, and how methods such as
&lt;strong&gt;lt&lt;/strong&gt; &lt;strong&gt;eq&lt;/strong&gt; &lt;strong&gt;contains&lt;/strong&gt; &lt;strong&gt;getattr&lt;/strong&gt; &lt;strong&gt;setattr&lt;/strong&gt; and &lt;strong&gt;iter&lt;/strong&gt; allow
elegant yet expressive network design, such as using list
comprehensions.&lt;/p&gt;
&lt;p&gt;I will cover how we use the various modules, including: - NetworkX
graphs - Netaddr IP addressing - Mako Templates - Exscript for scripting
deployment - TextFSM parsing of measurement - Tornado to serve a
browser-based d3.js visualisation framework - Using IPython notebooks
for interactive tutorials&lt;/p&gt;
&lt;p&gt;We've spent quite a bit of time with Python on this project. This talk
will pass on the our favourite Python language features and package
we've found along the way. It will be both a case study in using Python
for a large-scale project, and an overview of useful packages.&lt;/p&gt;
</summary></entry></feed>