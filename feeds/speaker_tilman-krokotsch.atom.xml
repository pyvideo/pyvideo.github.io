<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Tilman Krokotsch</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_tilman-krokotsch.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-05-13T00:00:00+00:00</updated><subtitle></subtitle><entry><title>How to Trust Your Deep Learning Code</title><link href="https://pyvideo.org/pycon-de-2022/how-to-trust-your-deep-learning-code.html" rel="alternate"></link><published>2022-05-13T00:00:00+00:00</published><updated>2022-05-13T00:00:00+00:00</updated><author><name>Tilman Krokotsch</name></author><id>tag:pyvideo.org,2022-05-13:/pycon-de-2022/how-to-trust-your-deep-learning-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker:: Tilman Krokotsch&lt;/p&gt;
&lt;p&gt;Track: PyData: Deep Learning
Errors in Deep Learning are hard to catch as training often fails silently s. Unit testing can catch those errors early and lets you make changes to your code base with confidence. Learn about the unique challenges of testing Deep Learning systems …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker:: Tilman Krokotsch&lt;/p&gt;
&lt;p&gt;Track: PyData: Deep Learning
Errors in Deep Learning are hard to catch as training often fails silently s. Unit testing can catch those errors early and lets you make changes to your code base with confidence. Learn about the unique challenges of testing Deep Learning systems and how to trust your code again with hands-on examples explained on a realistic Deep Learning repository.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2022 conference, April 11-13 2022.
&lt;a class="reference external" href="https://2022.pycon.de"&gt;https://2022.pycon.de&lt;/a&gt;
More details at the conference page: &lt;a class="reference external" href="https://2022.pycon.de/program/YQK7UU"&gt;https://2022.pycon.de/program/YQK7UU&lt;/a&gt;
Twitter: &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter: &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon DE 2022"></category><category term="PyCon"></category><category term="PyConDE"></category><category term="pyconde2022"></category><category term="pydata"></category><category term="PyDataBerlin"></category><category term="pydataberlin2022"></category></entry><entry><title>Hide Code, Minimize Dependencies, Boost Performance - The...</title><link href="https://pyvideo.org/pydata-berlin-2019/hide-code-minimize-dependencies-boost-performance-the.html" rel="alternate"></link><published>2019-10-09T00:00:00+00:00</published><updated>2019-10-09T00:00:00+00:00</updated><author><name>Tilman Krokotsch</name></author><id>tag:pyvideo.org,2019-10-09:/pydata-berlin-2019/hide-code-minimize-dependencies-boost-performance-the.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Tilman Krokotsch&lt;/p&gt;
&lt;p&gt;Track:PyData
PyTorch makes developing, training and debugging deep neural networks convenient. Learn how to export your trained model using its just-in-time (JIT) compiler to hide your network architecture, minimize code dependencies and use it in the C++ API.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Tilman Krokotsch&lt;/p&gt;
&lt;p&gt;Track:PyData
PyTorch makes developing, training and debugging deep neural networks convenient. Learn how to export your trained model using its just-in-time (JIT) compiler to hide your network architecture, minimize code dependencies and use it in the C++ API.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/8N37P9"&gt;https://de.pycon.org/program/8N37P9&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</content><category term="PyData Berlin 2019"></category></entry></feed>