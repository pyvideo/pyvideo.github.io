<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 05 Jul 2013 00:00:00 +0000</lastBuildDate><item><title>Efficient Python development with small teams</title><link>https://pyvideo.org/europython-2013/efficient-python-development-with-small-teams.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc-André Lemburg</dc:creator><pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-05:europython-2013/efficient-python-development-with-small-teams.html</guid><category>quality-assurance</category><category>project-management</category><category>business</category><category>communication</category><category>testing</category><category>principles</category><category>application-design</category><category>design</category><category>software-engineering</category><category>strategies</category><category>best-practices</category><category>architecture</category></item><item><title>Designing Large-Scale Applications in Python</title><link>https://pyvideo.org/europython-2013/designing-large-scale-applications-in-python.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc-André Lemburg</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/designing-large-scale-applications-in-python.html</guid><category>business</category><category>database</category><category>integration</category><category>scalability</category><category>servers</category><category>refactoring</category><category>application-design</category><category>design</category><category>software-engineering</category><category>framework</category><category>sql</category><category>best-practices</category><category>architecture</category></item><item><title>Meta Programming - Some Use Cases for Everyday Programming</title><link>https://pyvideo.org/europython-2013/meta-programming-some-use-cases-for-everyday-programming.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Müller</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/meta-programming-some-use-cases-for-everyday-programming.html</guid><category>debugging</category><category>metaprogramming</category><category>testing</category><category>principles</category><category>refactoring</category><category>application-design</category><category>architecture</category><category>validation</category><category>software-engineering</category></item><item><title>Server side story</title><link>https://pyvideo.org/europython-2013/server-side-story.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simone Deponti</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/server-side-story.html</guid><category>HTTP</category><category>networking</category><category>deploy</category><category>mobile</category><category>javascript</category><category>desktop</category><category>sysadmin</category><category>json</category><category>gevent</category><category>design</category><category>software-engineering</category><category>best-practices</category><category>application-design</category><category>websockets</category><category>architecture</category></item><item><title>Coding for the Modern Warzone</title><link>https://pyvideo.org/europython-2013/coding-for-the-modern-warzone.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gemma Hentsch</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/coding-for-the-modern-warzone.html</guid><category>udp</category><category>networking</category><category>flask</category><category>tcp</category><category>application-design</category><category>architecture</category><category>resilience</category></item><item><title>Essere agili? Metodi, strumenti e integrazioni: Python “to rule them all”</title><link>https://pyvideo.org/europython-2013/essere-agili-metodi-strumenti-e-integrazioni-python-to-rule-them-all.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Massimo Azzolini</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/essere-agili-metodi-strumenti-e-integrazioni-python-to-rule-them-all.html</guid><category>application-design</category><category>api</category><category>pyramid</category><category>integration</category><category>trac</category></item><item><title>Marconi: Queuing and Notification service for OpenStack</title><link>https://pyvideo.org/europython-2013/marconi-queuing-and-notification-service-for-openstack.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Flavio Percoco</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:europython-2013/marconi-queuing-and-notification-service-for-openstack.html</guid><category>MessageQueues</category><category>WSGI</category><category>mongodb</category><category>REST</category><category>tdd</category><category>application-design</category><category>architecture</category><category>cloud</category></item><item><title>Designing and Testing PyZMQ Applications</title><link>https://pyvideo.org/pycon-de-2012/designing-and-testing-pyzmq-applications.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;PyZMQ ist eine mächtige aber dennoch einfach zu benutzende
Netzwerkbibliothek.&lt;/p&gt;
&lt;p&gt;Neben ZeroMQ’s und PyZMQ’s ausführlicher Dokumentation existieren auch
einige&lt;/p&gt;
&lt;p&gt;gute Tutorials. Über einfache Beispiele oder allgemeine
System-Architekturen&lt;/p&gt;
&lt;p&gt;gehen sie jedoch oft nicht hinaus.&lt;/p&gt;
&lt;p&gt;In diesem Vortrag werden daher Wege gezeigt, wie größere
PyZMQ-Anwendungen&lt;/p&gt;
&lt;p&gt;entworfen und getestet werden können. Behandelt werden dabei neben
Unit-Tests&lt;/p&gt;
&lt;p&gt;auch Prozess- und System-Tests.&lt;/p&gt;
&lt;p&gt;Der Vortrag basiert auf den Erfahrungen, die der Autor bei der
Entwicklung&lt;/p&gt;
&lt;p&gt;eines verteilten Simulations-Frameworks gemacht hat.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stefan Scherfke</dc:creator><pubDate>Wed, 31 Oct 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-10-31:pycon-de-2012/designing-and-testing-pyzmq-applications.html</guid><category>application design</category><category>ømq</category><category>process tests</category><category>pyzmq</category><category>system tests</category><category>testing</category><category>unit tests</category><category>zeromq</category></item></channel></rss>