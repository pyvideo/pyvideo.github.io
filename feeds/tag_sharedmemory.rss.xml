<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 05 May 2019 00:00:00 +0000</lastBuildDate><item><title>Sharing is Caring! - how to free the CPU from message passing hell - shared memory saved the day</title><link>https://pyvideo.org/pycon-italia-2019/sharing-is-caring-how-to-free-the-cpu-from-message-passing-hell-shared-memory-saved-the-day.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When dealing with a real time application in which you are required to
process a lot of data from multiple sources in parallel, system
resources disappear quickly. Add some CPU intensive processing and you
are set to fail.&lt;/p&gt;
&lt;p&gt;This talk will illustrate a solution to solve a CPU bound problem with a
data stream of tens of megabytes. I will talk about how easy it is to
fail and how to obtain a working solution.&lt;/p&gt;
&lt;p&gt;The following arguments will be discussed:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;threading and its limitations&lt;/li&gt;
&lt;li&gt;multiprocessing and its limitations&lt;/li&gt;
&lt;li&gt;serialization&lt;/li&gt;
&lt;li&gt;shared memory&lt;/li&gt;
&lt;li&gt;a solution: multiprocessing + shared memory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Code will be provided and shown during the talk.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1656"&gt;https://python.it/feedback-1656&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 11:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrei Neagu</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-italia-2019/sharing-is-caring-how-to-free-the-cpu-from-message-passing-hell-shared-memory-saved-the-day.html</guid><category>threading</category><category>SharedMemory</category><category>#Python</category><category>python3</category><category>multiprocessing</category></item></channel></rss>