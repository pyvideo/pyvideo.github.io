<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 16 Sep 2016 00:00:00 +0000</lastBuildDate><item><title>PyData in Production: Lesson Learned from Various PyData Deployment Strategies</title><link>https://pyvideo.org/pydata-carolinas-2016/pydata-in-production-lesson-learned-from-various-pydata-deployment-strategies.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all love Pandas, Sklearn and the rest of the PyData stack. They
allow us to conduct complex analysis and implement cutting-edge
machine learning models simply and easily. However after the initial
model fitting a common challenge often arises - how do we put these
models in production ensuring that it fits into a larger
organizational architecture? In this talk we outline the various
strateg&lt;/p&gt;
&lt;p&gt;The PyData stack offers a remarkably powerful toolkit for building
complex machine learning and analytical components quickly. However,
machine learning doesn't happen in a vacuum. It is part a large system
of enterprise software responsible for data processing and must play-
well with other tools in the ecosystem. In order to get the benefits
of rapid development while not sacrificing the non-functional
requirements, MaxPoint as implemented and tested multiple deployment
models for software relying on the PyData stack. This talk we walk
through these various deployment models and discuss the trade-offs of
the approach.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Howes</dc:creator><pubDate>Fri, 16 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-16:pydata-carolinas-2016/pydata-in-production-lesson-learned-from-various-pydata-deployment-strategies.html</guid></item></channel></rss>