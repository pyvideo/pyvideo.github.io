<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 08 Aug 2015 00:00:00 +0000</lastBuildDate><item><title>Tuning Python applications can dramatically increase performance</title><link>https://pyvideo.org/europython-2015/tuning-python-applications-can-dramatically-increase-performance.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Vasilij Litvinov - Tuning Python applications can dramatically increase performance
[EuroPython 2015]
[24 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;Traditional Python profiling tools have limitations.  Standard tools
like &lt;strong&gt;cProfile&lt;/strong&gt; and most all third party tools (like &lt;strong&gt;Python
Tools&lt;/strong&gt; plugin for Microsoft Visual Studio) suffer from common flaws.
First, the profiling overhead is high (up to 50%).  Second, the
information provided is “function-level” i.e. the  tool shows how much
time was spent within a function, but not actionable “line-level”
information to show which exact lines are &lt;em&gt;the bottleneck&lt;/em&gt; in a
function.  Adding “line-level” information to most tools causes the
application to run even slower. Third, some tools require modification
of the application source code to enable profiling thus disrupting
development.&lt;/p&gt;
&lt;p&gt;This talk presents an experimental Python profiler.  It typically has
less than 15% overhead, shows line-level information and does not
require modification of application source code.  Experiments using it
resulted in performance gains of 2x and more.  Of course results vary
by application, but in a typical application there may be quick
optimizations easily identified by this type of profiler.&lt;/p&gt;
&lt;p&gt;The talk will briefly describe the basics of what, why and how to
profile.  The profiler‘s use and results will be shown in the
presentation with examples based on real-life applications.  Previous
experience of working with profilers and trying to optimize an
application is a plus, but not required, to gain a better appreciation
of the work presented.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vasilij Litvinov</dc:creator><pubDate>Sat, 08 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-08:europython-2015/tuning-python-applications-can-dramatically-increase-performance.html</guid></item></channel></rss>