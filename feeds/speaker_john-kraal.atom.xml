<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_john-kraal.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-08-04T00:00:00+00:00</updated><entry><title>High Availability Scaling with Share Nothing Architecture</title><link href="https://pyvideo.org/europython-2016/high-availability-scaling-with-share-nothing-architecture.html" rel="alternate"></link><published>2016-08-04T00:00:00+00:00</published><updated>2016-08-04T00:00:00+00:00</updated><author><name>John Kraal</name></author><id>tag:pyvideo.org,2016-08-04:europython-2016/high-availability-scaling-with-share-nothing-architecture.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;John Kraal - High Availability Scaling with Share Nothing Architecture
[EuroPython 2016]
[21 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/high-availability-scaling-with-share-nothing-architecture"&gt;https://ep2016.europython.eu//conference/talks/high-availability-scaling-with-share-nothing-architecture&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Scaling a project to a worldwide scale with the same performance and
availability in every region using Python isn’t easy, but with the
right mindset and tools it’s a very viable target.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;We will discuss methods of delivering software, with automated scaling
systems, building units out of your project to manage separately and
how to reliably and securely distribute data to separate clusters, and
how we have achieved this with the use of Celery, Redis, Databases,
Protobuf and other modern tools, whilst making sure to highlight our
pitfalls and successes&lt;/p&gt;
</summary></entry></feed>