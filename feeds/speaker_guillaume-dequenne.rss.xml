<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Guillaume Dequenne</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 22 Apr 2023 00:00:00 +0000</lastBuildDate><item><title>Oh no! My regex is causing a Denial of Service! What can I do about it?</title><link>https://pyvideo.org/pycon-us-2023/oh-no-my-regex-is-causing-a-denial-of-service-what-can-i-do-about-it.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every modern programming language supports regular expressions. Python
uses a backtracking engine to match developer-defined expressions
against a wide range of input. Under certain circumstances, backtracking
can lead to performance issues, and in extreme cases a denial of service
(ReDoS).&lt;/p&gt;
&lt;p&gt;We will use descriptive examples to demonstrate the core issue, what to
look for to detect problematic expressions, as well as how static
analysis can help in this context. We will look at techniques to improve
regular expression performance and defend against malicious inputs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guillaume Dequenne</dc:creator><pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-04-22:/pycon-us-2023/oh-no-my-regex-is-causing-a-denial-of-service-what-can-i-do-about-it.html</guid><category>PyCon US 2023</category></item><item><title>Fixing legacy code, one pull request at a time (Sponsor: Sonar)</title><link>https://pyvideo.org/pycon-us-2023/fixing-legacy-code-one-pull-request-at-a-time-sponsor-sonar.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dealing with legacy codebases can be a chore. In this workshop, we talk
about modernizing an old Flask application one pull request at a time
while incorporating Python best practices.&lt;/p&gt;
&lt;p&gt;We will talk about how to integrate Code Quality tools in your workflow
and in your IDE, so that every pull request is checked to good
standards.&lt;/p&gt;
&lt;p&gt;By the end of this Workshop, we hope everyone can set up a workflow that
removes technical debt over time and makes their codebases sustainable.&lt;/p&gt;
&lt;p&gt;This presentation can be followed interactively. In order to do so, make
sure that you meet the following prerequisites: - Have an account on
GitHub and be logged-in - Fork the workshop GitHub repository in your
personal account, with all its branches (by default, only the main
branch is forked): &lt;a class="reference external" href="https://github.com/SonarSource/pycon-sonar-workshop"&gt;https://github.com/SonarSource/pycon-sonar-workshop&lt;/a&gt; -
Optionally, have Git and an IDE (PyCharm/VSCode) to clone the
application locally&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guillaume Dequenne</dc:creator><pubDate>Thu, 20 Apr 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-04-20:/pycon-us-2023/fixing-legacy-code-one-pull-request-at-a-time-sponsor-sonar.html</guid><category>PyCon US 2023</category></item></channel></rss>