<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_parallel-computing.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-10-07T00:00:00+00:00</updated><entry><title>Using Dask for Parallel Computing in Python</title><link href="https://pyvideo.org/pydata-dc-2016/using-dask-for-parallel-computing-in-python.html" rel="alternate"></link><published>2016-10-07T00:00:00+00:00</published><updated>2016-10-07T00:00:00+00:00</updated><author><name>Matthew Rocklin</name></author><id>tag:pyvideo.org,2016-10-07:pydata-dc-2016/using-dask-for-parallel-computing-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Dask is a relatively new library for parallel computing in Python. It builds around familiar data structures to users of the PyData stack and enables them to scale up their work on one or many machines. This tutorial will introduce users to the core concepts of dask by working through some example problems. The tutorial will be distributed via Jupyter Notebooks.&lt;/p&gt;
</summary><category term="dask"></category><category term="parallel"></category><category term="parallel computing"></category></entry><entry><title>Using Dask for Parallel Computing in Python</title><link href="https://pyvideo.org/pydata-chicago-2016/using-dask-for-parallel-computing-in-python.html" rel="alternate"></link><published>2016-08-26T00:00:00+00:00</published><updated>2016-08-26T00:00:00+00:00</updated><author><name>Skipper Seabold</name></author><id>tag:pyvideo.org,2016-08-26:pydata-chicago-2016/using-dask-for-parallel-computing-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Dask is a relatively new library for parallel computing in Python. It builds around familiar data structures to users of the PyData stack and enables them to scale up their work on one or many machines. This tutorial will introduce users to the core concepts of dask by working through some example problems. The tutorial will be distributed via Jupyter Notebooks.&lt;/p&gt;
</summary><category term="dask"></category><category term="parallel"></category><category term="parallel computing"></category></entry><entry><title>Dask Parallel and Distributed Computing</title><link href="https://pyvideo.org/scipy-2016/dask-parallel-and-distributed-computing-scipy-2016-matthew-rocklin.html" rel="alternate"></link><published>2016-07-14T00:00:00+00:00</published><updated>2016-07-14T00:00:00+00:00</updated><author><name>Matthew Rocklin</name></author><id>tag:pyvideo.org,2016-07-14:scipy-2016/dask-parallel-and-distributed-computing-scipy-2016-matthew-rocklin.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dask is a pure Python library for parallel and distributed computing. Last year Dask parallelized NumPy and Pandas computations on multi-core workstations. This year we discuss using Dask to design custom algorithms and execute those algorithms efficiently on a cluster. This talk discusses Pythonic APIs for parallel algorithm development as well as strategies for intuitive and efficient distributed computing. We discuss recent results in machine learning and novel scientific applications.&lt;/p&gt;
</summary><category term="SciPy 2016"></category><category term="dask"></category><category term="parallel computing"></category></entry></feed>