<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jonas-neubert.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-03T12:10:00+00:00</updated><entry><title>What is a PLC and how do I talk Python to it?</title><link href="https://pyvideo.org/pycon-us-2019/what-is-a-plc-and-how-do-i-talk-python-to-it.html" rel="alternate"></link><published>2019-05-03T12:10:00+00:00</published><updated>2019-05-03T12:10:00+00:00</updated><author><name>Jonas Neubert</name></author><id>tag:pyvideo.org,2019-05-03:pycon-us-2019/what-is-a-plc-and-how-do-i-talk-python-to-it.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Walk into any factory and you will see a Programmable Logic Controller
(PLC). It's the small box that has a memory card and an Ethernet cable
on one side, and lots of colorful wires connected to the other end.
Inside runs the logic that turns inputs from sensors into outputs to
robots, conveyor belts and other machinery. PLCs evolved from relay
banks in the 1970s and have ruled the world of industrial automation
since then.&lt;/p&gt;
&lt;p&gt;In the first half of this talk we will take a look at how they work, how
to program them, and why a strange language called &amp;quot;ladder logic&amp;quot; is
(still) the lingua franca for programming them. In a short on-stage demo
I will write some PLC code to control a device on stage.&lt;/p&gt;
&lt;p&gt;It's 2019 now and just running a PLC isn't quite enough anymore.
Everyone is talking about the &amp;quot;Industrial Internet of Things&amp;quot; and they
have connected their PLCs to the company network. The second half of the
talk will look at how we can connect to PLCs to read data and influence
the running program with Python.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Zebras and Lasers - A crash course on barcodes with Python</title><link href="https://pyvideo.org/pybay-2018/zebras-and-lasers-a-crash-course-on-barcodes-with-python.html" rel="alternate"></link><published>2018-08-18T00:00:00+00:00</published><updated>2018-08-18T00:00:00+00:00</updated><author><name>Jonas Neubert</name></author><id>tag:pyvideo.org,2018-08-18:pybay-2018/zebras-and-lasers-a-crash-course-on-barcodes-with-python.html</id><summary type="html"></summary></entry><entry><title>Factory Automation with Python - Stories about Robots, Serial Ports, and Barcode Readers</title><link href="https://pyvideo.org/pycon-us-2017/factory-automation-with-python-stories-about-robots-serial-ports-and-barcode-readers.html" rel="alternate"></link><published>2017-05-19T00:00:00+00:00</published><updated>2017-05-19T00:00:00+00:00</updated><author><name>Jonas Neubert</name></author><id>tag:pyvideo.org,2017-05-19:pycon-us-2017/factory-automation-with-python-stories-about-robots-serial-ports-and-barcode-readers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In industrial automation &lt;em&gt;tried and tested&lt;/em&gt; always beats &lt;em&gt;latest and
greatest&lt;/em&gt;: The machines that make smartphones have a serial port and are
configured with &lt;tt class="docutils literal"&gt;.csv&lt;/tt&gt; files. But when your factory automates complex
non-linear workflows and is jam-packed with sensors and robots, you are
quickly faced with software engineering challenges that call for modern
tools.&lt;/p&gt;
&lt;p&gt;Python turns out to be surprisingly versatile in this setting, whether
for prototyping a single conveyor belt or taming a building full of
robots. This talk explains how to use Python for interfacing with two
common industrial automation devices: a barcode scanner and a
Programmable Logic Controller (PLC). After a simple demo, you’ll hear
about lessons learned using Python packages that weren’t written with
robots in mind, like Celery and pandas, with robots.&lt;/p&gt;
</summary></entry></feed>