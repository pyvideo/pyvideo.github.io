<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 25 Oct 2015 00:00:00 +0000</lastBuildDate><item><title>Build Infrastructure: What It Is, Why You Need It</title><link>https://pyvideo.org/pycon-ireland-2015/build-infrastructure-what-it-is-why-you-need-it.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why is developing software so hard? Why is it usually late and why is it so hard to get right? These questions don’t have a simple answer, but one important element is build infrastructure. Building, testing, and deploying software should be as automatic as possible. After all, why should humans do work that a computer can do better?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Na'Tosha Bard</dc:creator><pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-25:pycon-ireland-2015/build-infrastructure-what-it-is-why-you-need-it.html</guid></item><item><title>Data analysis and visualisation in Python</title><link>https://pyvideo.org/pycon-ireland-2015/data-analysis-and-visualisation-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will be directed to people interested in doing data analysis and data visualization using python libraries.&lt;/p&gt;
&lt;p&gt;I will show some examples of data analysis I performed to compare different data sources using pandas library and ipython notebook.&lt;/p&gt;
&lt;p&gt;I will then show how to create beautiful interactive data visualizations using python bokeh library&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Grazia D’Aversa</dc:creator><pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-25:pycon-ireland-2015/data-analysis-and-visualisation-in-python.html</guid></item><item><title>Increase response rate with predictive analytics</title><link>https://pyvideo.org/pycon-ireland-2015/increase-response-rate-with-predictive-analytics.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We have recently taken over 3mil SMS inbound and outbound text messages and used predictive techniques to increase the user response rate to outbound messaging.&lt;/p&gt;
&lt;p&gt;The talk will include data wrangling, AWS / Jupyter set-up, feature creation and extraction and various machine learning techniques and there application to the business problem.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Conor Duke</dc:creator><pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-25:pycon-ireland-2015/increase-response-rate-with-predictive-analytics.html</guid></item><item><title>Keynote: Creating safe learning experiences for all of our community members.</title><link>https://pyvideo.org/pycon-ireland-2015/keynote-creating-safe-learning-experiences-for-all-of-our-community-members.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many of us have been drawn to the Python community because it has welcomed us warmly and has shown us many high quality learning resources. We can further develop this aspect of our community by being aware of the potential barriers to learning when contributing new informational resources like conference talks, tutorials, documentation, or even just conversations at community events. This is especially important if you're interested in engaging people who are different than you.&lt;/p&gt;
&lt;p&gt;Any time we are faced with the need to learn a new skill, we may experience a variety of emotional responses ranging from energised interest, a bit of frustration, or even extreme intimidation. It can be even harder to learn successfully when you don't feel welcome in learning communities or when available resources don't cater to your level of experience. You can make learning more accessible for your audience by considering the different thinking styles, backgrounds, and the contexts in which learners are seeking information.&lt;/p&gt;
&lt;p&gt;In the first part of this talk, I'll give some reasons you might want to put some extra effort into addressing the diversity of your audience. Then I'll outline some ways I've found to help make learning more accessible and less intimidating for different types of learners.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juliana Arrighi</dc:creator><pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-25:pycon-ireland-2015/keynote-creating-safe-learning-experiences-for-all-of-our-community-members.html</guid></item><item><title>My 25 year love/hate relationship with databases</title><link>https://pyvideo.org/pycon-ireland-2015/my-25-year-lovehate-relationship-with-databases.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all use existing decorators all the time (athough Python 3.5 is overloading the &amp;#64; symbol, which will likely confuse a lot of us ol' timers). However, writing a decorator ourselves can sometimes be daunting. This talk/tutorial walks through an example case study which demonstrates when to create a decorator (and why), and proves - all being well - that decorators aren't all that scary afterall.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Barry</dc:creator><pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-25:pycon-ireland-2015/my-25-year-lovehate-relationship-with-databases.html</guid></item><item><title>Pylint - an overview of the static analysis tool for Python</title><link>https://pyvideo.org/pycon-ireland-2015/pylint-an-overview-of-the-static-analysis-tool-for-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Given the dynamic nature of Python, some bugs tend to creep in our codebases. Innocents NameError or hard-to-find bugs with variables used in a closure, but defined in a loop, they all stand no chance in front of Pylint (&lt;a class="reference external" href="http://pylint.org/"&gt;http://pylint.org/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In this talk, I’ll present one of the oldest static analysis tools for Python, with emphasis on what it can do to understand your Python code. Pylint is both a style checker, enforcing PEP 8 rules, as well as a code checker in the vein of pyflakes and pychecker, but its true power isn’t always obvious in the eye of beholder, especially when it's hidden through its verbosity. Interpreting its results can be a daunting task, but there are tricks which can be used to improve its user experience, such as enabling only structural checking with the -E flag or disabling unwanted category checks.&lt;/p&gt;
&lt;p&gt;Pylint can detect simple bugs such as unused variables and imports, but it can also detect more complicated cases such as invalid arguments passed to functions, it understands the method resolution order of your classes, generators, contexts managers and what special methods aren’t implemented correctly.&lt;/p&gt;
&lt;p&gt;Starting from abstract syntax trees, we’ll go through its inference engine and we’ll see how Pylint understands the logical flow of your program and what sort of type hinting techniques are used to improve its inference, including PEP 484 type hints. Pylint's roadmap includes better understanding of Python code, by improving its flow control analysis, escape analysis, understanding metaclasses and descriptors and having a better type checker, as well as improving the user experience, by reducing the number of false positives it currently has. As a bonus, I’ll show how it can be used to help you port your long-forgotten library to Python 3, using its new –py3k mode, which emits warnings regarding Python 3 compatibility.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Claudiu Popa</dc:creator><pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-25:pycon-ireland-2015/pylint-an-overview-of-the-static-analysis-tool-for-python.html</guid></item><item><title>Python &amp; PostgreSQL, a Wonderful Wedding</title><link>https://pyvideo.org/pycon-ireland-2015/python-postgresql-a-wonderful-wedding.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python and PostgreSQL, two tools we like to use for our projects but do you know everything about them?&lt;/p&gt;
&lt;p&gt;The talk will give an overview of psycopg2, Peewee, SQLAlchemy, Alembic and multicorn, PL/Python, these libraries can be used with PostgreSQL.&lt;/p&gt;
&lt;p&gt;psycopg2, the well known connector, this basic component is really useful, well documented and battle-tested and used by the most famous toolkits of the Python ecosystem.
Peewee, a minimalist ORM for Python, clear and brief, this ORM can be used if you want create a software with a minimalist ORM.
SQLAlchemy, a Python SQL toolkit and Object Relational Mapper, you can use this library to create your models and interact with them.
Alembic, a lightweight database migration tool for usage with SQLAlchemy, allows to create some migration scripts for your project.
multicorn is a Python wrapper over the Foreign Data Wrapper of PostgreSQL
PL/Python, a procedural language for PostgreSQL, allows to write functions in the Python language.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-25:pycon-ireland-2015/python-postgresql-a-wonderful-wedding.html</guid></item><item><title>Turning what you wanted into what you got</title><link>https://pyvideo.org/pycon-ireland-2015/turning-what-you-wanted-into-what-you-got.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Turning what you wanted into what you got, Behaviour Driven Design through Python&lt;/p&gt;
&lt;p&gt;One of the hardest problems for any project is trying to understand and deliver functionality that the user was requesting.
Language, knowledge and communication differences can often times present an almost insurmountable barrier. Making this one of the most difficult and frustrating parts of any project.&lt;/p&gt;
&lt;p&gt;Behaviour Driven Design can help us toshorten the feedback loop between you and your user and get you both talking on the same page.&lt;/p&gt;
&lt;p&gt;We will also discover how this can lead to better delivery, technical documentation, code quality and serve as an accompaniment to Test Driven Development.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David McIlwee</dc:creator><pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-25:pycon-ireland-2015/turning-what-you-wanted-into-what-you-got.html</guid></item><item><title>Using Python for data</title><link>https://pyvideo.org/pycon-ireland-2015/using-python-for-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Did you feel like using R is too complex and Java is pain in the ass? Is your company using PHP because somebody said it would be okay? You started working with R and realized you can't write a micro service and need to pick another language?&lt;/p&gt;
&lt;p&gt;Regardless of your answers, this lecture is about what your biggest problem would be if you have had chosen Python for your work in the first place.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bence Faludi</dc:creator><pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-25:pycon-ireland-2015/using-python-for-data.html</guid></item><item><title>Using Python to access web service information to support machine learning</title><link>https://pyvideo.org/pycon-ireland-2015/using-python-to-access-web-service-information-to-support-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Web services are a key and emerging component of the Information Society. Many believe that this innovation is simply about extracting data from the web while others consider web services as a step towards a global, massively distributed system. Web services have been used to extract data from diverse resources. According to IBM we have created about 2.5 quintillion bytes of data. In fact 90% of the data in the world today has been created in the last two years alone. This vast data set is a rich resource which can be used to develop intelligent systems. The other side of this coin is how to harness this huge amount of data and process/analyse it to predict certain parameters.&lt;/p&gt;
&lt;p&gt;This presentation will provide different simple examples of using Python to access web services and will also show how to analyse large quantities of data to make relatively succint predictions or decisions using machine learning algorithms in Python. This work is part of a research project in the tPOT research group in DIT which aims at developing context models for machine learning to support the care of intellectually impaired persons.&amp;quot;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hicham Rifai</dc:creator><pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-25:pycon-ireland-2015/using-python-to-access-web-service-information-to-support-machine-learning.html</guid></item><item><title>What if those words don't mean what we think they mean?</title><link>https://pyvideo.org/pycon-ireland-2015/what-if-those-words-dont-mean-what-we-think-they-mean.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I used to teach what was called &amp;quot;Information and communication technology&amp;quot; in high school - but I realised that none of my colleagues in the department seemed very curious about information, communication or technology.&lt;/p&gt;
&lt;p&gt;Later, I also realised that even the people who are deeply interested in those subjects mostly don't think very much about the meaning of those words - which is a shame, because those words are hiding some intriguing things, and help shine some light on some hot topics.&lt;/p&gt;
&lt;p&gt;In its approach to the industry’s moral and political controversies, the Python community has earned a reputation for moral earnestness. It’s not undeserved, and it may even be inescapable, but be that as it may, if we’re going to agonise, let’s agonise with insight and awareness.&lt;/p&gt;
&lt;p&gt;In recent years (and particularly importantly for our industry) there are some words whose meaning, without our noticing, has slipped out almost from beneath our feet.&lt;/p&gt;
&lt;p&gt;Several of these words lie at the crux of the industry’s most significant ills; some are controversial words, like “meritocracy”, and some seem quite innocent, like “information”, &amp;quot;communication&amp;quot; and &amp;quot;technology&amp;quot;, but on closer inspection they can all be found loitering around scenes of trouble.&lt;/p&gt;
&lt;p&gt;I won’t claim that we can solve any important disputes by dwelling upon words, but I will show how paying attention to the shifting or contested meanings of certain words will shed light on some of the ways in which we think about some disputes, and can suggest different ways of approaching them.&lt;/p&gt;
&lt;p&gt;I’ll discuss what they mean for our debates about (for example) inclusivity and diversity, and even what they have to show about the way in which we conduct those debates.&lt;/p&gt;
&lt;p&gt;Introspection, in other words, can be just as powerful in natural language as it can be in Python, and once learned the techniques will find numerous useful applications.&lt;/p&gt;
&lt;p&gt;I will discuss topics including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ancient Athens&lt;/li&gt;
&lt;li&gt;GitHub’s troublesome office rug&lt;/li&gt;
&lt;li&gt;desert&lt;/li&gt;
&lt;li&gt;“information” as content rather than an act&lt;/li&gt;
&lt;li&gt;“communication” as a conduit rather than act&lt;/li&gt;
&lt;li&gt;what technology “really” means&lt;/li&gt;
&lt;li&gt;Aristotle on classes, functions and objects&lt;/li&gt;
&lt;li&gt;Wittgenstein on function as meaning&lt;/li&gt;
&lt;li&gt;elitism, aristocracy, meritocracy, diversity, inclusion, fairness&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;… and numerous other interwoven matters&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniele Procida</dc:creator><pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-25:pycon-ireland-2015/what-if-those-words-dont-mean-what-we-think-they-mean.html</guid></item><item><title>An exploration of Rugby Data using Python and Bayesian Statistics (PyData)</title><link>https://pyvideo.org/pycon-ireland-2015/an-exploration-of-rugby-data-using-python-and-bayesian-statistics-pydata.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The World Cup of Rugby is on. Join me as I talk about how you can use Python and the PyData stack to gain insight into Rugby.
I've a case study from the Six Nations last year, where I leveraged Bayesian Statistics to extract insight.
I'll also give other examples of the power of PyMC3.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peadar Coyle</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/an-exploration-of-rugby-data-using-python-and-bayesian-statistics-pydata.html</guid></item><item><title>An introduction to GPU programming using Theano</title><link>https://pyvideo.org/pycon-ireland-2015/an-introduction-to-gpu-programming-using-theano.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Theano is a Python library that allows you to define, optimize, and evaluate matrix expressions efficiently.&lt;/p&gt;
&lt;p&gt;Theano is used to build large-scale Machine Learning systems ---in particular Deep Learning Networks---and targets operations to GPU hardware, which achieves significant performance improvements over the same operations performed on a CPU (say using Numpy).&lt;/p&gt;
&lt;p&gt;In this talk I will present an overview of the Theano library and introduce its main features using some simple examples.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul O'Grady</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/an-introduction-to-gpu-programming-using-theano.html</guid></item><item><title>An introduction to machine learning on small scale datasets (PyData)</title><link>https://pyvideo.org/pycon-ireland-2015/an-introduction-to-machine-learning-on-small-scale-datasets-pydata.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The purpose of this talk is to illustrate the differences between explanatory modelling (classical statistics) and predictive modelling (machine learning) as these two approaches are often conflated. The scikit-learn machine learning library was used to classify Irish farmers who planted forests on their land. The dataset was relatively small providing data on 799 Irish farmers and approximately 135 different variables. Prior to classifying farmers, irrelevant and redundant variables were removed from the dataset using a feature wrapper technique which improves the predictive power of models. This illustrates the power of machine learning for inductive analysis by uncovering previously unknown relationships between variables (features). As the Ipython notebooks were computationally demanding the final code was run on gaia, a high performance computer within UCD using runipy. Earlier versions of the Ipython notebooks were run on Amazon EC2 using StarCluster which makes high performance computing available to the general public at reasonable cost.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Conor Lynch</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/an-introduction-to-machine-learning-on-small-scale-datasets-pydata.html</guid></item><item><title>Analysing user behaviour - from histograms to random forests (PyData)</title><link>https://pyvideo.org/pycon-ireland-2015/analysing-user-behaviour-from-histograms-to-random-forests-pydata.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The goal is to give the audience a roadmap for analysing user data using python friendly tools.
I will touch on many aspects of the data science pipeline from data cleansing to building predictive data products at scale.
I will start gently with pandas and dataframes and then discuss some machine learning techniques like kmeans and random forests in scikitlearn and then introduce Spark for doing it at scale.
I will focus more on the use cases rather than detailed implementation.
The talk will be informed by my experience and focus on user behaviour in games and mobile apps.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Brodigan</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/analysing-user-behaviour-from-histograms-to-random-forests-pydata.html</guid></item><item><title>Django Tales and how the Django community can change lives.</title><link>https://pyvideo.org/pycon-ireland-2015/django-tales-and-how-the-django-community-can-change-lives.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Django and Python communities can change lives and have changed many lives including my own. I’ve been running the Your Django Story interview series on the Django Girls blog for over a year now. So far I featured 70 amazing women who work with Django. In my talk, I will present our interview series and share 8 Django Tales, stories of 8 inspiring women whose lives were changed by learning Python and Django and becoming involved in the Python and Django communities. I will also share what you can do to help Django Girls grow even more.
If you’d love to hear inspiring Django Tales, this is the right talk for you :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anna Ossowski</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/django-tales-and-how-the-django-community-can-change-lives.html</guid></item><item><title>Exploring our Python Interpreter</title><link>https://pyvideo.org/pycon-ireland-2015/exploring-our-python-interpreter.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;During my last CPython sprint, I started to contribute to the CPython code, and I wanted to understand the beast.&lt;/p&gt;
&lt;p&gt;In this case, there is only one solution, trace the code from the beginning. From the command line to the interpreter, we will take part to an adventure.&lt;/p&gt;
&lt;p&gt;Overview of the structure of the Project and the directories.
From the Py_Main function, to the interpreter
the used technics for the Lexer, Parser and the generation of the AST and of course of the Byte Code.
we will see some byte codes with the dis module
How does VM works, it’s a stack machine.
the Interpreter and its main loop of the Virtual Machine.
The idea behind is just to show how CPython works for a new contributor to CPython&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stéphane Wirtel</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/exploring-our-python-interpreter.html</guid></item><item><title>Probabilistic programming with Lea (PyData)</title><link>https://pyvideo.org/pycon-ireland-2015/probabilistic-programming-with-lea-pydata.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk aims at introducing Lea, an open-source Python library dedicated to probabilities and probabilistic programming (PP).&lt;/p&gt;
&lt;p&gt;The main concepts of Lea and PP shall be presented. The basic idea is to model some uncertain reality and to make queries on this model. Many simple examples (coins, dice, ...) shall be presented, covering probability distributions, conditional probabilities and Bayesian reasoning. The talk shall also introduce Leapp, a basic PPL that extends Python syntax to ease the usage of Lea.&lt;/p&gt;
&lt;p&gt;If time allows it (50 min), some part of Lea implementation shall be sketched; the original &amp;quot;&amp;quot;statue&amp;quot;&amp;quot; algorithm based on Python's generators shall be presented.&lt;/p&gt;
&lt;p&gt;As prerequisites, only basic knowledge of probabilities is required (no obscure maths!). One of the goal of Lea is to be easy to use, by hiding as much as possible the complexity of probability theory.The talk is meant to follow this principle.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pierre Denis</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/probabilistic-programming-with-lea-pydata.html</guid></item><item><title>PyCon Ireland 2015 Opening Ceremony</title><link>https://pyvideo.org/pycon-ireland-2015/pycon-ireland-2015-opening-ceremony.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Opening Ceremony&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Niamh Breslin</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/pycon-ireland-2015-opening-ceremony.html</guid></item><item><title>Python's Infamous GIL</title><link>https://pyvideo.org/pycon-ireland-2015/pythons-infamous-gil.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You’ve heard about Python’s GIL. But what is it really? What does it do, both good and bad?&lt;/p&gt;
&lt;p&gt;Come learn all about the Python GIL. You’ll learn about its history, all the problems it solves, all the problems it causes (that we know about!), and what it would take to remove the GIL.&lt;/p&gt;
&lt;p&gt;Attendees should be familiar with the terrors inherent in multithreaded programming, and be comfortable with a little C code in the slides.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Larry Hastings</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/pythons-infamous-gil.html</guid></item><item><title>Recruitment Session</title><link>https://pyvideo.org/pycon-ireland-2015/recruitment-session.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sponsors present their job opportunities&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/recruitment-session.html</guid></item><item><title>Redis, the new black</title><link>https://pyvideo.org/pycon-ireland-2015/redis-the-new-black.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will focus on the design, implementation and evaluation of an open source python ORM for redis : redact-py.&lt;/p&gt;
&lt;p&gt;It will look at some reasons to use redis over other SQL and noSQL alternatives. Interesting properties such as atomicity, transactions and data structures and how these were translated to the ORM will also be discussed.&lt;/p&gt;
&lt;p&gt;Jonathan is a developer at PageFair. He enjoys hacking on python, C and scala in his spare time and taking part in game jams.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonathan Frawley</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/redis-the-new-black.html</guid></item><item><title>Spark Distributed Computing - Leveraging the Functional Model (PyData)</title><link>https://pyvideo.org/pycon-ireland-2015/spark-distributed-computing-leveraging-the-functional-model-pydata.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You have heard the hype about Apache Spark using Python, and would like to learn more?&lt;/p&gt;
&lt;p&gt;Distributed Computing is becoming more and more prevalent with the rise of big data, multicore processors and scale-out architecture.&lt;/p&gt;
&lt;p&gt;This talk will give an introduction to Parallel Programming using Apache Spark and Python, how you can leverage it in you day-to-day programming, and the core Functional Principles that are making it scale.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Johannes Ahlmann</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/spark-distributed-computing-leveraging-the-functional-model-pydata.html</guid></item><item><title>Starting to Use the Jupyter Notebook</title><link>https://pyvideo.org/pycon-ireland-2015/starting-to-use-the-jupyter-notebook.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Steve discusses his experiences using the IPython (now Jupyter) notebook for various purposes, demonstrates some of the notebook's more advanced features and explains how to create trouble-free installations using Continuum IO's conda and miniconda distributions. The presentation will include live demonstrations and examples of advanced coding from several different disciplines.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Holden</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/starting-to-use-the-jupyter-notebook.html</guid></item><item><title>Test Driven Documentation</title><link>https://pyvideo.org/pycon-ireland-2015/test-driven-documentation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Test Driven Documentation
While you write user acceptance tests you describe the way you want the application to behave.
Writing the documentation is explaining how the application behaves so as to learn how to use it.
What if from good requirements we could infer part of the documentation ?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicolas Laurance</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/test-driven-documentation.html</guid></item><item><title>Using MongoDB and Python for data analysis pipelines (PyData)</title><link>https://pyvideo.org/pycon-ireland-2015/using-mongodb-and-python-for-data-analysis-pipelines-pydata.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MongoDB is a flexible, scalable, and ease to use way of storing your large data set. Python provides many useful data science tools (e.g. NumPy, SciPy, Scikit-learn, etc.). Unfortunately, they don't work well together, one of the bottlenecks is the inefficiency of loading MongoDB data into NumPy array.&lt;/p&gt;
&lt;p&gt;This talk will discuss the concerns for creating operational data analytic pipelines, introduce Monary as alternative for loading data into NumPy, and give examples of accessing data with Monary, as well as how to build scalable data analysis pipelines using these open source tools.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eoin Brazil</dc:creator><pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-10-24:pycon-ireland-2015/using-mongodb-and-python-for-data-analysis-pipelines-pydata.html</guid></item></channel></rss>