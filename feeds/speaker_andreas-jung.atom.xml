<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_andreas-jung.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-10-30T00:00:00+00:00</updated><entry><title>Hunting for the best NoSQL database. Why we love ArangoDB</title><link href="https://pyvideo.org/pycon-de-2016/hunting-for-the-best-nosql-database-why-we-love-arangodb.html" rel="alternate"></link><published>2016-10-30T00:00:00+00:00</published><updated>2016-10-30T00:00:00+00:00</updated><author><name>Andreas Jung</name></author><id>tag:pyvideo.org,2016-10-30:pycon-de-2016/hunting-for-the-best-nosql-database-why-we-love-arangodb.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We have been using the Zope Object Database (ZODB) in various Zope and Plone projects for more than 15 years in addition to various RDBMS-driven projects based on Postgres and the well-known SQLAlchemy stack for Python. Over the years we have been using and evaluating various so-called NoSQL databases in various projects. My talk will cover experiences with Cassandra, MongoDB and others.
All experiences and statements are completely biased and personal. Choosing a new database is always like a hunt - you have different requirements in each project and you are always looking for the perfect solution. However there is no perfect solution - in particular no in the NoSQL world. All NoSQL databases set different priorities under the constraints of the CAP theorem (a database can fulfill only two out of the three aspects availabilty, consistency and partitioning tolerance). While evaluating many other NoSQL database we came to ArangoDB which is a multi-model database which appears a nice mixture of all requirements that we (we as solution provider for CMS and web solutions) often have. A document store with the features of the graph database. Together with partitioning and clustering support ArangoDB 3.0 appears to be the best option further projects. As written: this talk is completely biased and unscientific (not comparing all NoSQL features across all possible NoSQL databases).&lt;/p&gt;
</summary></entry><entry><title>Produce &amp; Publish: Single-Source-Multi-Channel-Publishing mit Plone</title><link href="https://pyvideo.org/pycon-de-2011/produce-publish-single-source-multi-channel-pu.html" rel="alternate"></link><published>2011-10-05T00:00:00+00:00</published><updated>2011-10-05T00:00:00+00:00</updated><author><name>Andreas Jung</name></author><id>tag:pyvideo.org,2011-10-05:pycon-de-2011/produce-publish-single-source-multi-channel-pu.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Der Vortrag beschreibt die Plone-basierte Plattform Produce &amp;amp; Publish
zur Generierung von verschiedener Ausgabeformate (PDF, EBook, RTF, ODT,
Word) unter Verwendung der selben Eingabedaten.&lt;/p&gt;
</summary></entry><entry><title>"Getting things done" - Pragmatische Projekte mit Plone</title><link href="https://pyvideo.org/pycon-de-2012/getting-things-done-pragmatische-projekte-mit.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Andreas Jung</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/getting-things-done-pragmatische-projekte-mit.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Plone ist ein komplexes Web-Framework with vielen Modulen und
vielschichtigen Abstraktionsebenen. Kundenprojekte im Bereich Web
erfordern oft Anpassungen auf mehreren Ebenen: neue Inhaltstypen,
Änderungen an Templates und existierenden Funktionalitäten etc. Es ist
immer schwierig den richtigen Weg bei einer Anpassung zu finden
insbesondere wenn die üblichen Projektressourcen wie Personal, Zeit und
Budget begrenzt sind und nicht beliebig skalierbar sind.&lt;/p&gt;
&lt;p&gt;In dem Vortrag berichte ich wie wir in vergangenen großen Webprojekten
mit diesem Spannungsfeld umgegangen sind und Plone-Anpassungen in einer
pragmatischen Art und Weise durchgeführt haben - ohne dem Kunden einen
Sack voller hässlicher Workarounds zu liefern aber auch nicht mit dem
Anspruch die perfekteste Lösung gebaut zu haben.&lt;/p&gt;
&lt;p&gt;Ich behandle Techniken zur Anpassungen von existierenden Templates und
Views, Strategien bei der Behebung von Fehlern in Plone oder
Drittprodukten, die Verwendung von Site-Fixtures, um Kunden und Designer
frühzeitig eine Site mit Fake-Inhalten (Text + Bilder) zu versorgen
sowie Ansätze zum pragmatischen Testen in großen Web-Projekten.&lt;/p&gt;
</summary></entry></feed>