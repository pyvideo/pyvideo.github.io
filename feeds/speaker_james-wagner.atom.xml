<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_james-wagner.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-05-07T00:00:00+00:00</updated><entry><title>A Universal Carving Approach for Database Forensic Analysis</title><link href="https://pyvideo.org/depy-2016/a-universal-carving-approach-for-database-forensic-analysis.html" rel="alternate"></link><published>2016-05-07T00:00:00+00:00</published><updated>2016-05-07T00:00:00+00:00</updated><author><name>James Wagner</name></author><id>tag:pyvideo.org,2016-05-07:depy-2016/a-universal-carving-approach-for-database-forensic-analysis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Forensic tools assist analysts with recovery of data and understanding system events, even when working with corrupted data storage. These tools rely on &amp;quot;file carving&amp;quot; techniques to restore files with damaged metadata by analyzing raw file content. While much of the sensitive data is stored and processed by databases, file carving tools for databases are practically non-existent because most databases (particularly commercial ones) do not document their storage formats. Internally, database content is kept in individual &amp;quot;pages&amp;quot; and follows a unique, yet consistent, set of rules for storage and maintenance. By directly accessing raw database storage, we can recover corrupted contents and reveal user activities that are hidden even from database administrators.&lt;/p&gt;
&lt;p&gt;There are a number of database-specific tools developed for recovery and monitoring purposes but they are surprisingly limited in face of corruption or &amp;quot;unintentional&amp;quot; side-effects caused by normal database execution. In this talk, we present a universal tool that seamlessly supports many different databases, rebuilding table and other data content from any remaining storage fragments on disk or in memory. We also demonstrate just how much activity takes place under the hood of a database and present an overview of some things that can be discovered by directly investigating database internals.&lt;/p&gt;
</summary></entry></feed>