<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Sam Gross</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_sam-gross.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-05-15T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Breaking Boundaries: Advancements in High-Performance AI/ML through PyTorch's Python Compiler (Sponsor: Meta)</title><link href="https://pyvideo.org/pycon-us-2023/breaking-boundaries-advancements-in-high-performance-aiml-through-pytorchs-python-compiler-sponsor-meta.html" rel="alternate"></link><published>2023-04-20T00:00:00+00:00</published><updated>2023-04-20T00:00:00+00:00</updated><author><name>Justin Jeffress</name></author><id>tag:pyvideo.org,2023-04-20:/pycon-us-2023/breaking-boundaries-advancements-in-high-performance-aiml-through-pytorchs-python-compiler-sponsor-meta.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As GPUs continue to become faster, PyTorch, one of the most widely used
frameworks in AI/ML has faced challenges keeping up with performance
demands. To mitigate this, parts of PyTorch have been moved into C++.
This approach goes against the original intent of PyTorch as a
Python-based framework …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As GPUs continue to become faster, PyTorch, one of the most widely used
frameworks in AI/ML has faced challenges keeping up with performance
demands. To mitigate this, parts of PyTorch have been moved into C++.
This approach goes against the original intent of PyTorch as a
Python-based framework and complicates contributions from the community.
The PyTorch development team recognized the need to address these
challenges while maintaining PyTorch's Python roots and set ambitious
goals to improve performance, decrease memory usage, enable
state-of-the-art distributed capabilities, and ensure more PyTorch code
is written in Python. To achieve these goals, they developed a Python
compiler. Attendees of this talk will get an inside look at how the
PyTorch development team approached these challenges and implemented
their innovative solution to achieve a 43% speedup in performance. We
will discuss the benefits and challenges of this approach, as well as
the techniques and technologies used to build the PyTorch Python
compiler. This talk will provide valuable insights into the development
process of and offer attendees a deeper understanding of how PyTorch
continues to evolve and innovate.&lt;/p&gt;
</content><category term="PyCon US 2023"></category></entry><entry><title>High-Performance Python: Faster Type Checking and Free Threaded Execution (Sponsor: Meta)</title><link href="https://pyvideo.org/pycon-us-2025/high-performance-python-faster-type-checking-and-free-threaded-execution-sponsor-meta.html" rel="alternate"></link><published>2025-05-15T00:00:00+00:00</published><updated>2025-05-15T00:00:00+00:00</updated><author><name>Sam Gross</name></author><id>tag:pyvideo.org,2025-05-15:/pycon-us-2025/high-performance-python-faster-type-checking-and-free-threaded-execution-sponsor-meta.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Meta's Commitment to the Python Community: Empowering Innovation and Collaboration&lt;/p&gt;
&lt;p&gt;At Meta, we're dedicated to advancing the Python ecosystem through open-source contributions and community engagement. Our mission is to improve the tooling and runtime, making the language more efficient, scalable, and accessible for developers worldwide.&lt;/p&gt;
&lt;p&gt;Introducing Pyrefly: A Scalable …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Meta's Commitment to the Python Community: Empowering Innovation and Collaboration&lt;/p&gt;
&lt;p&gt;At Meta, we're dedicated to advancing the Python ecosystem through open-source contributions and community engagement. Our mission is to improve the tooling and runtime, making the language more efficient, scalable, and accessible for developers worldwide.&lt;/p&gt;
&lt;p&gt;Introducing Pyrefly: A Scalable Type Checker for a Unified IDE Experience&lt;/p&gt;
&lt;p&gt;We're excited to introduce Pyrefly, a new type checker designed with scalability in mind. Built from the ground up using Rust, Pyrefly provides a faster and more efficient type checking experience, enabling developers to write better code with confidence. With Pyrefly, we aim to deliver a unified IDE experience power type hints and code navigation on a new type checking engine.&lt;/p&gt;
&lt;p&gt;Unlocking Better Performance with Free-Threaded Python&lt;/p&gt;
&lt;p&gt;In collaboration with the Python community, we've been working on making free-threaded Python (No-GIL) available in Python 3.13. This significant milestone allows developers to take full advantage of modern multi-core processors directly from Python. More recently, our efforts have focused on improving the single-threaded performance of the free threading build, ensuring that Python remains a top choice for developers seeking high-performance capabilities.&lt;/p&gt;
</content><category term="PyCon US 2025"></category></entry></feed>