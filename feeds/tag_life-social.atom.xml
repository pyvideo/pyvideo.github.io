<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Life / Social</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_life-social.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-10-02T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Communication &amp; Contributing to Python Open Source</title><link href="https://pyvideo.org/pycon-korea-2022/communication-contributing-to-python-open-source.html" rel="alternate"></link><published>2022-10-02T00:00:00+00:00</published><updated>2022-10-02T00:00:00+00:00</updated><author><name>Tereza Iofciu</name></author><id>tag:pyvideo.org,2022-10-02:/pycon-korea-2022/communication-contributing-to-python-open-source.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Open Source Software work is not just about being a core contributor or a maintainer, it is also about lots of invisible work in the community. Most of this work requires lots of interactions. If the interactions are about OSS, these would be mostly in English, and although good …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Open Source Software work is not just about being a core contributor or a maintainer, it is also about lots of invisible work in the community. Most of this work requires lots of interactions. If the interactions are about OSS, these would be mostly in English, and although good communication skills are essential, they can also be gatekeeping sometimes. After describing the state of diversity in OSS and in Python I showing some thoughts about how we can build a better communication culture in the Python local and global communities. Why it is important to rethink Code of Conducts, what are the current problems with how people think of Code of Conducts. We can use these as a tool for building more inclusive Python communities. These are reflections stemming from my involvement over the past years in the Python community.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Life / Social"></category></entry><entry><title>A community of teachers who code, Jjorap Story</title><link href="https://pyvideo.org/pycon-korea-2022/a-community-of-teachers-who-code-jjorap-story.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Song Seok-ri</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/a-community-of-teachers-who-code-jjorap-story.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I would like to introduce the community of public education teachers who code, which started at the end of June, the direction of the community, and the course of the basic Python study that 300 teachers across the country are participating in. Currently, experts in the IT/AI field …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I would like to introduce the community of public education teachers who code, which started at the end of June, the direction of the community, and the course of the basic Python study that 300 teachers across the country are participating in. Currently, experts in the IT/AI field, such as Upstage CEO Seong-Hoon Kim and Ellis CEO Jae-Won Kim, are participating in the community, and I plan to talk about the value of connecting public education teachers and IT experts who want to contribute to public education.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Life / Social"></category></entry><entry><title>Building a Serverless Jupyter Notebook App for Teaching Python to Kids</title><link href="https://pyvideo.org/pycon-korea-2022/building-a-serverless-jupyter-notebook-app-for-teaching-python-to-kids.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Shin Jeong-gyu</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/building-a-serverless-jupyter-notebook-app-for-teaching-python-to-kids.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As Python becomes more widely used, the demand for learning Python is also increasing. Python can be easily installed through the official website, and there are many cases where it is pre-installed depending on the operating system. However, installing libraries for data science along with the widely used notebook …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As Python becomes more widely used, the demand for learning Python is also increasing. Python can be easily installed through the official website, and there are many cases where it is pre-installed depending on the operating system. However, installing libraries for data science along with the widely used notebook environment is a bit more complicated. I will introduce the process of creating a notebook app that runs on a browser engine to teach Python to children. In this presentation, I will look at Python implementations based on WebAssembly and web-based interfaces that have shown various application possibilities in the past two years. I will introduce the process of building Pyodide, a WASM-based Python environment, together with JupyterLite, a complete notebook environment, to enable simple practice of Python in a notebook environment. I will also introduce the process of developing an implementation that uses the Python environment of the local PC as a kernel environment in JupyterLite. I will demo the process of packaging the notebook environment created in this way as a desktop app and testing the results in various ways. I will also share the results of creating a notebook app that bundles various examples along with benchmark results and having children use it. Finally, I'd like to share my personal views on browser-based Python, which has recently become famous through pyscript, and the interesting development environments that could be possible when combined with JavaScript containers.&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Life / Social"></category></entry><entry><title>Small office coding</title><link href="https://pyvideo.org/pycon-korea-2022/small-office-coding.html" rel="alternate"></link><published>2022-10-01T00:00:00+00:00</published><updated>2022-10-01T00:00:00+00:00</updated><author><name>Kim Jae-yoon</name></author><id>tag:pyvideo.org,2022-10-01:/pycon-korea-2022/small-office-coding.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, I will share a case of using Python in the office. It is a non-developer office worker version of &amp;quot;Do anything with python&amp;quot;. It is a story of an office worker's struggle to finish work easily and quickly and leave work with Python in real-life situations …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this presentation, I will share a case of using Python in the office. It is a non-developer office worker version of &amp;quot;Do anything with python&amp;quot;. It is a story of an office worker's struggle to finish work easily and quickly and leave work with Python in real-life situations such as &amp;quot;Let's put these files on a USB and give them as a souvenir&amp;quot;, &amp;quot;This English report is good, let's translate it (but it's 300 pages)&amp;quot;, &amp;quot;The survey results come out on Saturday, let's report on Monday&amp;quot;, &amp;quot;Don't use the work automation alone, make it so that we can use it and distribute it&amp;quot;. In terms of Python's functions and modules, I will introduce folder and file handling (os module), PDF parsing (pdfminer module), data refinement (pandas module), and creating an automation of Hangul (hwp) in a GUI and distributing it as an exe file (win32com, tkinter, pyinstaller module). In this presentation, I wanted to show that Python can be useful in workplaces without developers and in general office work that is not related to development. Although it is difficult to change what we do, we can at least change the way we work. It is using Python like Excel and Word in the office. I hope to introduce Python to those around me, learn it together, and promote the use of Python by non-developer office workers and expand the community. I expect that if more people use Python on a daily basis in the office, the code will develop further and more people will be able to work with less effort. I thought that this might be the way to realize Python's vision of &amp;quot;Computer programming for everybody&amp;quot; in Korean offices in the 2020s. * Presentation materials, code: &lt;a class="reference external" href="https://sites.google.com/view/jaeyoon-kim/pycon"&gt;https://sites.google.com/view/jaeyoon-kim/pycon&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon Korea 2022"></category><category term="Life / Social"></category></entry></feed>