<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Tarun Garg</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_tarun-garg.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-10-23T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Design django models such that your future self will thank you ðŸ‘‹</title><link href="https://pyvideo.org/djangocon-us-2021/design-django-models-such-that-your-future-self-will-thank-you.html" rel="alternate"></link><published>2021-10-23T00:00:00+00:00</published><updated>2021-10-23T00:00:00+00:00</updated><author><name>Tarun Garg</name></author><id>tag:pyvideo.org,2021-10-23:/djangocon-us-2021/design-django-models-such-that-your-future-self-will-thank-you.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While designing Django models, our primary objective is to develop a structure that'll enable us to build the said product feature, but while doing so ~we~ I used to neglect things like a) Ease of debugging/Auditing, b) Query patterns, c) and Scalability, and later when push came to â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While designing Django models, our primary objective is to develop a structure that'll enable us to build the said product feature, but while doing so ~we~ I used to neglect things like a) Ease of debugging/Auditing, b) Query patterns, c) and Scalability, and later when push came to shove these things used to become a blocker. While we can't possibly think and preempt everything from day 1(and if you try to - it'll take long to roll that feature out), we can do something better ðŸ¤”.&lt;/p&gt;
&lt;p&gt;In this talk, we're going to be focusing on how you can avoid those mistakes early in your design phase ðŸ˜Œ - these are all the learnings I have had after making mistakes. We are going to cover the following -&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Auditing your models&lt;/li&gt;
&lt;li&gt;Boolean field for flags vs. timestamped field&lt;/li&gt;
&lt;li&gt;Soft delete vs. hard delete&lt;/li&gt;
&lt;li&gt;Many boolean flags in a model?&lt;/li&gt;
&lt;li&gt;How do you decide when to de-normalize?&lt;/li&gt;
&lt;li&gt;And much more ...&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;em&gt;As with every piece of advice in life, the answer of whether you should apply these or not is - *&lt;/em&gt;&amp;quot; it depends.&amp;quot;** In this task, we'll also discuss when you can use this advice and when you can choose to skip it.*&lt;/blockquote&gt;
</content><category term="DjangoCon US 2021"></category></entry></feed>