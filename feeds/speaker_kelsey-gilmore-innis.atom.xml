<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_kelsey-gilmore-innis.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-05-30T00:00:00+00:00</updated><entry><title>Seriously Strong Security on a Shoestring (CW)</title><link href="https://pyvideo.org/pycon-us-2016/kelsey-gilmore-innis-seriously-strong-security-on-a-shoestring-cw-pycon-2016.html" rel="alternate"></link><published>2016-05-30T00:00:00+00:00</published><updated>2016-05-30T00:00:00+00:00</updated><author><name>Kelsey Gilmore-Innis</name></author><id>tag:pyvideo.org,2016-05-30:pycon-us-2016/kelsey-gilmore-innis-seriously-strong-security-on-a-shoestring-cw-pycon-2016.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Kelsey Gilmore-Innis&lt;/p&gt;
&lt;p&gt;Are you confident your Python webapp is secure? Really confident? Hand-it-over-to-a-team-of-expert-haxx0rsÂ­-to-tear-into confident? Find out how, without any formal security background, we successfully built a site storing some of the most sensitive data imaginable that passed a formal security audit from the best in the business. Content warning: this talk includes discussion of sexual assault.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Making Django Really, Really, Ridiculously Secure (CW)</title><link href="https://pyvideo.org/djangocon-us-2015/making-django-really-really-ridiculously-secure-cw.html" rel="alternate"></link><published>2015-09-24T00:00:00+00:00</published><updated>2015-09-24T00:00:00+00:00</updated><author><name>Kelsey Gilmore-Innis</name></author><id>tag:pyvideo.org,2015-09-24:djangocon-us-2015/making-django-really-really-ridiculously-secure-cw.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Callisto (&lt;a class="reference external" href="http://projectcallisto.org/"&gt;http://projectcallisto.org/&lt;/a&gt;) is an online reporting system
designed to provide a more empowering, transparent, and confidential
reporting experience for college sexual assault survivors. It's
absolutely essential that we keep our user's data secure. So essential,
in fact, that we couldn't leave it up to developers alone. We'll go over
what Django settings, libraries and practices we used to ensure that on
the development end. Then we'll walk through the process of obtaining,
undergoing, and acting on a formal security audit from a professional
security firm. You'll find out what they were looking for, what we
missed, and how we fixed it, and how you might approach similar
challenges for your companies and applications.&lt;/p&gt;
</summary></entry></feed>