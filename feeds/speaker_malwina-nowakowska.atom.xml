<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_malwina-nowakowska.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-08-05T00:00:00+00:00</updated><entry><title>RESTful API - Best Practices.</title><link href="https://pyvideo.org/europython-2016/restful-api-best-practices.html" rel="alternate"></link><published>2016-08-05T00:00:00+00:00</published><updated>2016-08-05T00:00:00+00:00</updated><author><name>Malwina Nowakowska</name></author><id>tag:pyvideo.org,2016-08-05:europython-2016/restful-api-best-practices.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Malwina Nowakowska - RESTful API - Best Practices.
[EuroPython 2016]
[22 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/restful-api-best-practises"&gt;https://ep2016.europython.eu//conference/talks/restful-api-best-practises&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;It is important to understand from the beginning how model API should look like.
Do not repeat your friendsâ€™ mistakes and make developers upset!
There are some simple rules that can make your API cooler - clean,
safe and efficient.&lt;/p&gt;
&lt;p&gt;Based on both bad and good examples of REST APIs (I had to deal with)
we will learn about best practices.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Nowadays building and integrating with Representational State Transfer
web services is a very common thing. It seems that creating RESTful
API is trivial - nothing could be more wrong.
In my previous projects I had to integrate with lots of APIs.
Unfortunately only some of them were easy to work with. Most of the
APIs did not follow the main rules of model API.&lt;/p&gt;
&lt;p&gt;It is really important to understand how model REST API should look like.
To make developers happy we will learn best practices of creating REST
API from the beginning.&lt;/p&gt;
&lt;p&gt;We will start with quick introduction what REST is, why principle of
REST is so amazing, talk about identifires and explain some key terms.
We will discuss about architectall constraints and properties.&lt;/p&gt;
&lt;p&gt;Mistakes and best practices are based on my experience of developing
and maintaining the projects. After this talk you will be able to
create model RESTful API developers will be happy to work with.&lt;/p&gt;
</summary></entry></feed>