<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_emacs.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-07-02T00:00:00+00:00</updated><entry><title>Emacs + org-mode + python in reproducible research; SciPy 2013 Presentation</title><link href="https://pyvideo.org/scipy-2013/emacs-org-mode-python-in-reproducible-researc.html" rel="alternate"></link><published>2013-07-02T00:00:00+00:00</published><updated>2013-07-02T00:00:00+00:00</updated><author><name>John Kitchin</name></author><id>tag:pyvideo.org,2013-07-02:scipy-2013/emacs-org-mode-python-in-reproducible-researc.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;We discuss the use of emacs + org-mode + python in enabling reproducible
research.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Authors: Kitchin, John Carnegie Mellon University&lt;/p&gt;
&lt;p&gt;Track: Reproducible Science&lt;/p&gt;
&lt;p&gt;We will discuss the use of emacs + org-mode + python in enabling
reproducible research. This combination of software enables researchers
to intertwine narrative and mathematical text with figures and code that
is executable within a document, with capture of the output. Portions of
the document can be selectively exported to LaTeX, HTML, pdf and other
other formats. We have used this method to produce technical manuscripts
submitted for peer review in scientific journals, in the preparation of
two e-books (about 300 pages each) on using python in scientific and
engineering applications (&lt;a class="reference external" href="http://jkitchin.github.com/pycse"&gt;http://jkitchin.github.com/pycse&lt;/a&gt;), and in
using python in the modeling of the properties of materials with density
functional theory (&lt;a class="reference external" href="http://jkitchin.github.com/dft-book"&gt;http://jkitchin.github.com/dft-book&lt;/a&gt;), as well as a
python-powered blog at &lt;a class="reference external" href="http://jkitchin.github.com"&gt;http://jkitchin.github.com&lt;/a&gt;. Our experience
suggests all three components are critical for enabling reproducible
research in practice: an extensible editor, a markup language that
separates text, math, data and code, and an effective language such as
python. We will show examples of the pros and cons of this particular
implementation of editor/markup/code combination.&lt;/p&gt;
</summary><category term="emacs"></category><category term="reproducibility"></category></entry><entry><title>Customizing your editor for maximum productivity (#171)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--customizing-your-editor-for-maximum-p.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Justin Lilly</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--customizing-your-editor-for-maximum-p.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Customizing your editor for maximum productivity&lt;/p&gt;
&lt;p&gt;Presented by Justin Lilly&lt;/p&gt;
&lt;p&gt;This will be an overview of the sorts of things that editors can offer
to make your programming life easier. It will also include specifics of
how to get these features working in a basic editor. (Vim or Emacs, yet
undecided)&lt;/p&gt;
</summary><category term="emacs"></category><category term="pycon"></category><category term="pycon2010"></category><category term="vim"></category></entry><entry><title>Python IDEs Panel</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--python-ides-panel.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--python-ides-panel.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python IDEs Panel&lt;/p&gt;
&lt;p&gt;Moderated by Michael Foord&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Dino Viehland - Python Tools for Visual Studio&lt;/li&gt;
&lt;li&gt;Dmitry Jemerov - PyCharm&lt;/li&gt;
&lt;li&gt;Todd Whiteman - ActiveState Komodo IDE&lt;/li&gt;
&lt;li&gt;Stephan Deibel - WingWare IDE&lt;/li&gt;
&lt;li&gt;Barry Warsaw - Emacs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As Python becomes more popular, more users are wanting IDEs that provide
code completion, integrated source code control, project management, and
other developer tools. This panel includes representatives from a number
of Python- specific or Python-supporting IDE vendors, showing the ways
that IDEs can speed up development on any platform.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;For many developers, IDEs are an essential tool-just as essential as
source code control. The growth of Python in recent years has led to a
number of projects and vendors developing Python-specific or
Python-supporting IDEs. This panel will allow attendees to compare and
contrast the different IDEs available.&lt;/p&gt;
</summary><category term="emacs"></category><category term="ide"></category><category term="komodo"></category><category term="komodoide"></category><category term="pycharm"></category><category term="pycon"></category><category term="pycon2011"></category><category term="pythontoolsforvisualstudio"></category><category term="visualstudio"></category><category term="wingware"></category></entry></feed>