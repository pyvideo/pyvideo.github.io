<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ed-snelson.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-05-07T00:00:00+00:00</updated><entry><title>An Algorithm of Style</title><link href="https://pyvideo.org/pydata-london-2017/an-algorithm-of-style.html" rel="alternate"></link><published>2017-05-07T00:00:00+00:00</published><updated>2017-05-07T00:00:00+00:00</updated><author><name>Ed Snelson</name></author><id>tag:pyvideo.org,2017-05-07:pydata-london-2017/an-algorithm-of-style.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Filmed at PyData London 2017&lt;/p&gt;
&lt;p&gt;www.pydata.org&lt;/p&gt;
&lt;p&gt;Description
How do eight stylists style half a million clients? At Thread we use machine-learning to help our stylists make personalised clothing recommendations to our users. In this talk I will give some insight into how we blend our stylists' expertise together with ML models that are continually learning from user feedback and sales data.&lt;/p&gt;
&lt;p&gt;Abstract
I will go into some detail about the types of algorithm and recommender system that have worked well, as well as those that have not! Interestingly we've found that some standard stalwarts of recommender systems have not thus far been a good fit for our data. I will describe some of the common pitfalls of deploying machine-learning systems in production (some of which we've avoided!), and emphasise the importance of using simple debuggable models when a stylist wants to know why The AI thinks it's a good idea to put a horizontal striped t-shirt on a larger gent.&lt;/p&gt;
</summary></entry></feed>