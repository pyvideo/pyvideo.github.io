<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 13 Nov 2016 00:00:00 +0000</lastBuildDate><item><title>Pragmatic microservices for the rest of us</title><link>https://pyvideo.org/pycon-ca-2016/pragmatic-microservices-for-the-rest-of-us.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will explore taking the core concepts of microservices
and building them into the architecture of a monolith in an attempt to
get the best of both worlds. This approach establishes a pragmatic
baseline architecture that can cleanly evolve to distributed
microservices when needed.&lt;/p&gt;
&lt;div class="section" id="ryan-easterbrook-bio"&gt;
&lt;h4&gt;Ryan Easterbrook Bio&lt;/h4&gt;
&lt;p&gt;Ryan Easterbrook is a systems engineer specializing in designing and
building scalable, resilient, and highly versatile system architectures
to support a wide variety of applications from web to mobile. For the
past five years he's been working on platforms to support SaaS products
at great companies such as EventMobi and Firmex, and before that spent
two years at a startup developing the backend for social massively
multiplayer online games.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan Easterbrook</dc:creator><pubDate>Sun, 13 Nov 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-11-13:pycon-ca-2016/pragmatic-microservices-for-the-rest-of-us.html</guid></item><item><title>Building highly decoupled systems in Python</title><link>https://pyvideo.org/pycon-ca-2015/building-highly-decoupled-systems-in-python-ryan.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;With various architecture decisions like Microservices, Restful APIs, MVC, and many more being widely discussed, it's often difficult to determine what you need to build your application. However, these patterns and many other well designed architectures follow common best practices including low coupling, high cohesion, and strong interfaces. Understanding these underlying principals is key to making the best decisions for your use case.&lt;/p&gt;
&lt;p&gt;In this discussion we will explore how highly decoupled systems with strong interface boundaries aid in the maintainability and velocity of a project, and how to build such a system using python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan Easterbrook</dc:creator><pubDate>Sat, 07 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-07:pycon-ca-2015/building-highly-decoupled-systems-in-python-ryan.html</guid></item></channel></rss>