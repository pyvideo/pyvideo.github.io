<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 29 Oct 2017 17:30:00 +0100</lastBuildDate><item><title>PyCon UK 2017 Sunday Lightning Talks</title><link>https://pyvideo.org/pycon-uk-2017/pycon-uk-2017-sunday-lightning-talks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sun, 29 Oct 2017 17:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/pycon-uk-2017-sunday-lightning-talks.html</guid><category>lightning talks</category></item><item><title>Building a real time audio sampling app on the PyBoard</title><link>https://pyvideo.org/pycon-uk-2017/building-a-real-time-audio-sampling-app-on-the-pyboard.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While demonstrating the pyboard to a group of colleagues, a challenge was set to produce a practical demonstration of the device that would provide automatic and continuous voice recording and playback of short spoken phrases similar to that found in a number of talking toys.&lt;/p&gt;
&lt;p&gt;This talk covers the process of designing and testing the embedded real-time Python solution and includes the architecture, test methodologies and recordings as the stages progressed to the final source code. The talk concludes with a live demonstration of the final application. The solution uses MicroPython (an embedded implementation of Python 3), the pyboard and its AMP Audio skin.&lt;/p&gt;
&lt;p&gt;MicroPython is a lean implementation of Python 3 that is optimised to run in a very small footprint on micro-controllers and in constrained environments. It was created by the Australian programmer and physicist Damien George, after a successful Kickstarter backed campaign in 2013.&lt;/p&gt;
&lt;p&gt;The pyboard is the original reference hardware created to host MicroPython. It is a compact low-power board based on an ARM processor with a heap of approximately 100kBytes that can run at 168MHz. It has sufficient hardware services and real-time capabilities to control all kinds of electronic projects.&lt;/p&gt;
&lt;p&gt;The AMP Audio skin is a small additional module that attaches to the pyboard that adds a small power amplifier, speaker and a microphone with a pre-amp.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alan Christie</dc:creator><pubDate>Sun, 29 Oct 2017 17:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/building-a-real-time-audio-sampling-app-on-the-pyboard.html</guid><category>pyboard</category></item><item><title>from __future__ import Truth</title><link>https://pyvideo.org/pycon-uk-2017/from-__future__-import-truth.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fake news, alternative facts, post-truth: this has definitely been the year of misinformation.&lt;/p&gt;
&lt;p&gt;What's more, the rise of social media is rising as the primary news source for many people means that traditional ways of ensuring our information is correct are no longer up to scratch. Since 2010, Full Fact – the UK's independent factchecking charity – has been uncovering the truth behind statements made by politicians and in the media. We’ve been at the forefront of public debate in the country, having factchecked 3 elections and 2 referendums in the past 7 years. In 2013, we began thinking about what a system that could augment and automate the factchecking process might look like. In the past year we’ve come a long way to making it reality.&lt;/p&gt;
&lt;p&gt;In this talk, I’ll take you through the unusual technical and philosophical difficulties that creating such a system entails, and show you how Python has helped us begin to tackle them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Skelly</dc:creator><pubDate>Sun, 29 Oct 2017 17:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/from-__future__-import-truth.html</guid></item><item><title>Trapped By The Trappings</title><link>https://pyvideo.org/pycon-uk-2017/trapped-by-the-trappings.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most of us will be affected by a mental health issue at some point in our lives, and this high-pressure, fast-paced industry can make coping difficult. We all want to do our jobs well, but sometimes we need a bit of extra support.&lt;/p&gt;
&lt;p&gt;This talk will explain why people can struggle and how to change touchpoints like meetings, code review and timesheets to make the day-to-day easier to navigate. We will cover how to start conversations with people in your team and how small changes in language can make a big difference.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chad</dc:creator><pubDate>Sun, 29 Oct 2017 17:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/trapped-by-the-trappings.html</guid></item><item><title>How We Grew From One Team to Two</title><link>https://pyvideo.org/pycon-uk-2017/how-we-grew-from-one-team-to-two.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a growing startup, the move from one team of engineers to two is intimidating. Splitting the workforce can impact both the team and the software. In this talk, we’ll focus on the team side of the transition, looking at how it impacts engineers and those around them.&lt;/p&gt;
&lt;p&gt;We’ll look at how this change comes about and what to look for as it approaches, discussing the options you will have in splitting up your team. Finally, we’ll look at how Osirium handled the change - what we did well, what we got wrong, and what we wish we’d known before we started.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mac Chapman</dc:creator><pubDate>Sun, 29 Oct 2017 16:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/how-we-grew-from-one-team-to-two.html</guid></item><item><title>piwheels: a faster Python package repository for RaspberryPi</title><link>https://pyvideo.org/pycon-uk-2017/piwheels-a-faster-python-package-repository-for-raspberrypi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;piwheels is a Python package repository providing Python wheels natively compiled for the Raspberry Pi's ARM architecture. It solves the problem that &amp;quot;pip install&amp;quot; can take a long time to build packages implemented in C. Wheels are a general solution to this problem, but PyPI does not currently allow maintainers to upload ARM platform wheels.&lt;/p&gt;
&lt;p&gt;I wrote some tooling for automating the building of all 115,000+ packages on PyPI, including all version releases, which totals up to over 750,000 package builds, monitoring the build status and logging the output.in a database, and providing the wheels in a pip-compatible web server. Raspberry Pi users can now &amp;quot;pip install&amp;quot; from this server (a Raspberry Pi) and get pre-built Python wheels, which take just seconds to install.&lt;/p&gt;
&lt;p&gt;The first build run I completed was on a Raspberry Pi in my living room: I built the latest version of every package (110k). Then, in order to build all versions of all packages (750k), I moved the project to a cluster of 20 Raspberry Pis in a data centre.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Nuttall</dc:creator><pubDate>Sun, 29 Oct 2017 16:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/piwheels-a-faster-python-package-repository-for-raspberrypi.html</guid><category>piwheels</category></item><item><title>What Python Can Teach us about Beer</title><link>https://pyvideo.org/pycon-uk-2017/what-python-can-teach-us-about-beer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We’ve been using Python to analyse the drinking habits of people from all around the USA and Europe. In this talk I’ll show how we've used Python to extract the data, some of the Python data analysis tools we’ve used and what we’ve been doing with them, and some of the (hopefully interesting) things we’ve found out.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Chorley</dc:creator><pubDate>Sun, 29 Oct 2017 16:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/what-python-can-teach-us-about-beer.html</guid></item><item><title>Blame and the Fallacy of Root Cause Analysis</title><link>https://pyvideo.org/pycon-uk-2017/blame-and-the-fallacy-of-root-cause-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So it has finally happened, some dreadful disaster has befallen your organisation: all your systems are down, you've been hacked or some fatal flaw in your software has ruined your whole day. You can't change the past, you can change the future, but only by learning from what went wrong.&lt;/p&gt;
&lt;p&gt;There are two common outcomes from such an experience: blame and Root Cause Analysis. This talk describes why both are wrong and both make future failure more likely.&lt;/p&gt;
&lt;p&gt;This talk also shows a better way of investigating software disaster and a way of identifying problems before they get that far. At the end of the talk you will be more resilient in the face of complex software projects that fail!&lt;/p&gt;
&lt;p&gt;The author has worked as a flying instructor, photojournalist, oilfield engineer, humanitarian worker and software engineer. He has witnessed numerous disasters (and may have even been complicit in some of them).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Ross</dc:creator><pubDate>Sun, 29 Oct 2017 15:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/blame-and-the-fallacy-of-root-cause-analysis.html</guid></item><item><title>God Is Real (unless declared an integer)</title><link>https://pyvideo.org/pycon-uk-2017/god-is-real-unless-declared-an-integer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the beginning, there was Axelrod...&lt;/p&gt;
&lt;p&gt;Well, in around 1980, there was Prof. Robert Axelrod and his ground breaking work using a computer simulation of the Iterated Prisoner's Dilemma game and showing how that might improve our understanding of evolution.&lt;/p&gt;
&lt;p&gt;The Axelrod-Python team has been working for almost three years to reproduce that work, and the large amount of subsequent research that has been based on it.&lt;/p&gt;
&lt;p&gt;I'll talk about how the project has progressed and, in particular, how we are currently wrestling with the original Fortran code behind one of Prof. Axelrod's papers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Owen Campbell</dc:creator><pubDate>Sun, 29 Oct 2017 15:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/god-is-real-unless-declared-an-integer.html</guid></item><item><title>I think I wrote a Rapid Web Application Development tool</title><link>https://pyvideo.org/pycon-uk-2017/i-think-i-wrote-a-rapid-web-application-development-tool.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It all started with someone asking me about configuring a well known python ERP system for managing members of an organisation. My answer was that configuring a full-blown ERP for this kind of task was most likely too much of a hassle and that Django would probably be better suited for that kind of job.&lt;/p&gt;
&lt;p&gt;After that, since Django comes with built-in functionalities used by the core of most ERP systems, I started wondering how Django would fare to manage more complex things than a &amp;quot;simple users list&amp;quot; and started the task building a full enterprise management system for our small company. Of course, this is not what the original Django developers had in mind when they wrote it and therefore it has some limitations for that use-case. Some of those limitations can be addressed with existing plugins, others can't.&lt;/p&gt;
&lt;p&gt;For the past couple of years I've been assembling some libraries (both python and javascript) in order to help me build this management system that could &amp;quot;handle anything&amp;quot;. After the fact, when I look back at the work that has been done, it looks a lot like a Rapid Web Application Development tool.&lt;/p&gt;
&lt;p&gt;At some point in our tech life, we all decide it would be better to write something &amp;quot;from scratch&amp;quot; rather than using existing tools. Usually it helps us learn new concepts and technologies and is always worth it. The end-result though, often means significant effort and the initial goals are not always met.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Emmanuelle Delescolle</dc:creator><pubDate>Sun, 29 Oct 2017 15:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/i-think-i-wrote-a-rapid-web-application-development-tool.html</guid></item><item><title>P0150n3d SVMs and Other M4ch1n3 Learning 3xpl0175</title><link>https://pyvideo.org/pycon-uk-2017/p0150n3d-svms-and-other-m4ch1n3-learning-3xpl0175.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;(For the PyData Track) It is the year 2099. NetSky Corp has been hacked by a mysterious group known as the data-y0kai. Somehow they have managed to bypass the latest-and-greatest state of the art machine learning intrusion detection system and exploited the spam filter so that every corporate email is now filled with sparkling pwnies. In this conference-talk-meets-mystery-story, we will walk through a fictional investigation into how and why the attack on NetSky Corp succeeded. While doing this, we will learn about the various vulnerabilities in popular machine learning algorithms.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Camilla Montonen</dc:creator><pubDate>Sun, 29 Oct 2017 15:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/p0150n3d-svms-and-other-m4ch1n3-learning-3xpl0175.html</guid></item><item><title>Protecting Your Users From Change: Pythonic Refactoring</title><link>https://pyvideo.org/pycon-uk-2017/protecting-your-users-from-change-pythonic-refactoring.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So you've released a library! Now you need to maintain it. You want to add features, restructure the code, fix bugs, and maybe improve the library's usability. Your users just want their code to carry on working. That's okay!&lt;/p&gt;
&lt;p&gt;This talk will cover techniques in both code and project management to allow you to keep your code moving forwards without breaking your users' code. It is aimed at developers with a little experience of writing libraries in Python, and will cover some intermediate subjects like function decorators and magic methods.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Smith</dc:creator><pubDate>Sun, 29 Oct 2017 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/protecting-your-users-from-change-pythonic-refactoring.html</guid></item><item><title>Recipes for Productionising Data Science APIs</title><link>https://pyvideo.org/pycon-uk-2017/recipes-for-productionising-data-science-apis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You're a data scientist developing fantastic models with the Python data science stack, and you want to release it into the wild. In this talk, I'll go over some practical solutions to deploying models as HTTP APIs on using the Flask web framework.&lt;/p&gt;
&lt;p&gt;Python has the unique advantage of not only being the most widely used language for data science, with a rich and mature stack of numerical and machine learning libraries, but also having a rich ecosystem of tooling for implementing web applications. Merging the best of these two worlds allows us to quickly and easily productionise data science models as APIs.&lt;/p&gt;
&lt;p&gt;This talk will be a practical guide for any data scientist or prospective data engineer wanting to productionise data science models, covering:     Flask     SQLAlchemy (including integration with Flask with Flask-SQLAlchemy)     Handling slow computations with job queues in python-rq     Authorization     Deployment (including gunicorn)&lt;/p&gt;
&lt;p&gt;Code samples implementing a simple application will be provided online following the talk. Participants should be able to use this as a starting point for deploying their own data science APIs online.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Crozier</dc:creator><pubDate>Sun, 29 Oct 2017 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/recipes-for-productionising-data-science-apis.html</guid></item><item><title>The art of testing in Python</title><link>https://pyvideo.org/pycon-uk-2017/the-art-of-testing-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How do you know your code is correct? How do you know it stayed correct after you changed it? To me, the answer lies in automated testing and I would like to introduce you to this vast topic. We will start by discussing the various ways of testing software and their relative advantages and disadvantages.  We will proceed to develop some simple code that encapsulates the common problems faced while testing and I will show you how to overcome them and engineer your test code using tools in the unittest module. We will also peek behind the curtains to see how a testrunner executes your code. By the end of the talk, I hope you will have a solid understanding of basics of testing and a newfound appreciation of classic paintings.&lt;/p&gt;
&lt;p&gt;This talk is mostly aimed at people new to software testing. However, more experienced developers are also welcome there will be plenty of questions for the audience and a good number of charades inspired guessing!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan Chwiejczak</dc:creator><pubDate>Sun, 29 Oct 2017 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/the-art-of-testing-in-python.html</guid></item><item><title>The Modular Mission Planner</title><link>https://pyvideo.org/pycon-uk-2017/the-modular-mission-planner.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Modular Mission Planner (MMP) is a set of Python libraries that enable the automated production of military plans for use within analytical models.&lt;/p&gt;
&lt;p&gt;Mission planning is a major part of setting up a military simulation model, taking significant effort. The time to carry out this process usually dwarfs the time required to carry out the runs. The Mission Planner algorithm employs Genetic Programming to automatically generate suitable plans with minimal human intervention.&lt;/p&gt;
&lt;p&gt;The MMP, produced as part of the GAMOV project, builds upon previous work in this area, reimplementing the code in Python and significantly extending the methodology. Key changes include the removal of the need to build model specific versions of the optimiser code, separation of the implementation of plans from their generation and planning against multiple opposing courses of action.&lt;/p&gt;
&lt;p&gt;The talk will lightly cover the need that the MMP meets before explaining the method used and its implementation. It will cover how the use of Python has enabled a modular design to be achieved and the advantages this design provides. Reasons for design choices will be covered together with how the Genetic Programming approach employed differs from usual practise.&lt;/p&gt;
&lt;p&gt;Whilst some basic knowledge of Genetic Algorithms will be assumed members of the audience who lack this will be able to follow and understand the talk. No mathematics will be required.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rick Ansell</dc:creator><pubDate>Sun, 29 Oct 2017 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/the-modular-mission-planner.html</guid></item><item><title>Migrating Python Web Applications to Python 3</title><link>https://pyvideo.org/pycon-uk-2017/migrating-python-web-applications-to-python-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Migrating a codebase to Python 3 takes some thought, but it's worth the effort. In this talk, I'll discuss the ins and outs of migrating a real Python web application to Python 3. I'll discuss motivations for upgrading your codebase, the challenges you will face, and considerations you will have to make. A focus will be made on testing with continuous integration, advice on how to avoid problems resulting from the differences between Python 2 and 3, and lessons on how Python 3 will help you to write better code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Wray</dc:creator><pubDate>Sun, 29 Oct 2017 14:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/migrating-python-web-applications-to-python-3.html</guid></item><item><title>Polygons, hill climbing, metallurgy and why you are here</title><link>https://pyvideo.org/pycon-uk-2017/polygons-hill-climbing-metallurgy-and-why-you-are-here.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Recently there have been a few talks at PyCons about using integer linear programming for scheduling conferences. Some of these have ended in disappointment because the theoretical guarantees did not translate in to practical possibilities.&lt;/p&gt;
&lt;p&gt;In this talk I will explain why you are wherever you are at the time of the talk (even if you're not in this talk): PyCon UK has been scheduled using this approach.&lt;/p&gt;
&lt;p&gt;I'll go over some of the mathematical background to linear programming and also discuss other solution approaches to these types of problems.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vincent Knight</dc:creator><pubDate>Sun, 29 Oct 2017 14:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/polygons-hill-climbing-metallurgy-and-why-you-are-here.html</guid></item><item><title>The log lines that saved vacation</title><link>https://pyvideo.org/pycon-uk-2017/the-log-lines-that-saved-vacation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Logs are your best friend, especially on one of those late nights when you try to troubleshoot a problem in production that was written by a co-worker who is on holiday. Logs are the main way to know what is happening with an application at runtime, but we don’t realise how important they are until we actually need them. Unfortunately, they are usually an under-estimated part of the development process.&lt;/p&gt;
&lt;p&gt;This talk will provide an overview of the logging module of the standard Python library and demonstrates some basic best practices and techniques to make the most out of our logging when we need it.&lt;/p&gt;
&lt;p&gt;After the talk, you'll be fully familiar with how to use the logging library, how it is actually designed, how it works, and how to go beyond its basic usage, as well as some sample recipes and configurations for complex applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mario Corchero</dc:creator><pubDate>Sun, 29 Oct 2017 14:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/the-log-lines-that-saved-vacation.html</guid></item><item><title>The Robot Composer Writing Music With Machine Learning</title><link>https://pyvideo.org/pycon-uk-2017/the-robot-composer-writing-music-with-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Can we get computers to be creative? What even is creativity?&lt;/p&gt;
&lt;p&gt;This talk will take a look at the creative process and how we can use TensorFlow's Magenta library to generate MIDI. We'll look at the current results and think about what the future might hold for approaches like this.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rolo Mawlabaux</dc:creator><pubDate>Sun, 29 Oct 2017 14:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/the-robot-composer-writing-music-with-machine-learning.html</guid></item><item><title>Making Sense of Big Data File Formats: Avro and Parquet</title><link>https://pyvideo.org/pycon-uk-2017/making-sense-of-big-data-file-formats-avro-and-parquet.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern applications generate and manipulate a lot of data. The growth rate of the data is staggering. Unfortunately, large datasets can be expensive to store at large scale and also slow to process. In fact, memory speed has been evolving at a much lower rate in comparison to CPUs. Thankfully, there are various file formats suited for big data systems to help. In this talk, you will learn about two popular file formats suitable for big data systems: Avro and Parquet. Through live coded examples in Python, you will learn the good, the bad, the ugly, and how you can make use of Avro and Parquet in practice.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raoul-Gabriel Urma</dc:creator><pubDate>Sun, 29 Oct 2017 12:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/making-sense-of-big-data-file-formats-avro-and-parquet.html</guid><category>avro</category><category>parquet</category></item><item><title>MyPy: The Good, The Bad and The Ugly</title><link>https://pyvideo.org/pycon-uk-2017/mypy-the-good-the-bad-and-the-ugly.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We tried adding MyPy type hints to a few thousand lines of reasonably hairy production code. This talk will discuss some of the challenges that we encountered, how we dealt with them, what we learnt, and whether we thought it was worth all the effort. (Spoiler: we did think it was worth all the effort.)&lt;/p&gt;
&lt;p&gt;I won't have time to give a full overview of MyPy, but I will try to cover enough basics that the talk is mostly accessible to people who aren't already familiar with it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Sim</dc:creator><pubDate>Sun, 29 Oct 2017 12:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/mypy-the-good-the-bad-and-the-ugly.html</guid><category>mypy</category></item><item><title>A trip to earth science with python as a companion</title><link>https://pyvideo.org/pycon-uk-2017/a-trip-to-earth-science-with-python-as-a-companion.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Earthquakes are a natural phenomenon which occurs from the sudden release of energy in the Earth's lithosphere that creates seismic waves. Or put more simply, an earthquake is the shaking of the surface of the Earth!&lt;/p&gt;
&lt;p&gt;As a mathematician I have always considered earth science to be an intriguing field though I was never given the opportunity to ‘dig’ around.&lt;/p&gt;
&lt;p&gt;In July 2017, an earthquake hit my hometown on the island of Kos. The phenomenon was reported as a catastrophe due to the casualties and the damages the island took. But the event itself and my lack of information on it managed to spark my interest and as a researcher I decided to take a trip to earth science.&lt;/p&gt;
&lt;p&gt;All a good traveller needs is a map and a companion. With open research being my map all that was left was to wisely choose a trustworthy companion. After my inner software developer made a very good argument I decided to chose the programming language Python!&lt;/p&gt;
&lt;p&gt;For PyConUK I am proposing to tell the tale of how a life experience started a trip to learning about seismology. Moreover, how Python and how the active community (libraries) that come with it allow you to carry the weight of the travel. I will be showing how different libraries such as earthquakes and quakefeeds allow you to collect records from around the world collected from the United States Geological Survey. These records include properties of the earthquakes such as distance, gap, magnitude and depth. Moreover, I will be using the toolkit basemap to create maps and plot the geographical datasets that have been collected.&lt;/p&gt;
&lt;p&gt;My proposal is to describe how Python allowed me to retrieve enough knowledge to understand, visualise and express an opinion on something that was unknown to me several months ago.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nikoleta E. Glynatsi</dc:creator><pubDate>Sun, 29 Oct 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/a-trip-to-earth-science-with-python-as-a-companion.html</guid></item><item><title>Introduction to Survival Analysis with scikit survival</title><link>https://pyvideo.org/pycon-uk-2017/introduction-to-survival-analysis-with-scikit-survival.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The aim of survival analysis – also referred to as reliability analysis in engineering – is to analyse the time until one or more events happen. Examples from the medical domain are the time until death, until onset of a disease, or until pregnancy. In engineering, the time until the failure of a mechanical system is a common application. In a typical clinical study, the exact time of an event will remain unknown for a subset of individuals, simply because some remained event-free before the study ended or decided to withdraw from the study. For these patients, it is unknown whether they did or did not experience an event after termination of the study. The only valid information is that any (unobserved) event must have occurred after the study ended. This property needs to be considered when applying machine learning to these type of data.&lt;/p&gt;
&lt;p&gt;In this talk, I will give an introduction to survival analysis and demonstrate how to analyse survival data using scikit-survival a Python module for survival analysis built on top of scikit-learn. I will introduce survival data from various domains and explain why traditional regression and classification methods are unsuitable. Using practical examples, I will demonstrate how scikit-survival can be used to estimate the time until an event and how additional variables can be used to improve prediction. Finally, I will give an outlook on more advanced methods, which are suitable to analyse high-dimensional clinical data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Pölsterl</dc:creator><pubDate>Sun, 29 Oct 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/introduction-to-survival-analysis-with-scikit-survival.html</guid></item><item><title>Verified fakes of web services by example</title><link>https://pyvideo.org/pycon-uk-2017/verified-fakes-of-web-services-by-example.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If your code calls a third party service then you may want to test that your code works but you don't want to call the service in your tests.&lt;/p&gt;
&lt;p&gt;It may be expensive, slow or impossible to call that service. For example, if you are making a Slack bot, you want to create tests which don't make calls across the network to Slack.&lt;/p&gt;
&lt;p&gt;One approach is to create a mock of that service. Our tests can now run quickly, cheaply and reliably. But if we copy the service incorrectly, or if the service changes, our tests will pass while our code does not work.&lt;/p&gt;
&lt;p&gt;Verified fakes solve this problem. You can write tests which confirm that your mock is an accurate representation of the service being mocked. Those tests can be a small subset of your test suite and they can be run periodically, to verify the validity of the many tests which use the mock.&lt;/p&gt;
&lt;p&gt;This talk will follow the example of VWS-Python, a verified fake for a proprietary web service. It will discuss the practicalities of creating such a fake and it will focus on the trade-offs, tooling, and approaches involved.&lt;/p&gt;
&lt;p&gt;By the end of this talk, the audience will understand how to tie together pytest, Travis CI, requests and Responses to create a verified fake.&lt;/p&gt;
&lt;p&gt;The talk is aimed at people who have an interest in writing correct software. It is assumed that the audience is familiar with basic testing techniques.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Dangoor</dc:creator><pubDate>Sun, 29 Oct 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/verified-fakes-of-web-services-by-example.html</guid></item><item><title>Intelligent approach to decision making models</title><link>https://pyvideo.org/pycon-uk-2017/intelligent-approach-to-decision-making-models.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tasks in which people make decisions by pressing keyboard buttons have been used extensively in psychology research, yet the only information they can offer about the decision is the speed (how quickly the button was pressed) and correctness (whether the correct button was pressed). In order for these tasks to provide insights into cognitive processes underlying such decisions, they need to be considered in the framework of mathematical models of decision making. Sequential sampling models presume that distinct cognitive processes (represented by model parameters) can be decomposed from task performance.&lt;/p&gt;
&lt;p&gt;While producing simulated “computational decisions” with given parameters is relatively straightforward, attempting to reverse engineer the problem by estimating these parameters from task performance is not trivial, and becomes harder as the models get more complicated to account for more complex decisions. The current practice in the field is to employ global optimization algorithms, which search through the solution space blindly, until a “good enough” set of parameters is found, for each set of data separately.&lt;/p&gt;
&lt;p&gt;As deep learning has been gaining popularity to solve complicated problems, I have applied it to the extraction of model parameters from drift diffusion model for conflict tasks using the keras (and hyperas) libraries. Deep learning is particularly suitable for decision-making models, as an unlimited amount of simulated data is available to train the models. Unlike global optimization algorithms, deep learning can use this data to predict multiple sets of parameters at once, which cuts computation time significantly. In this talk I will present how to apply deep learning to predict model parameters from reaction time distributions. In addition, I will assess whether this approach works as well as, or better than global optimization algorithms, and discuss how the performance of the model changes as the input data becomes smaller and noisier.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Solveiga Vivian-Griffiths</dc:creator><pubDate>Sun, 29 Oct 2017 11:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/intelligent-approach-to-decision-making-models.html</guid></item><item><title>Tales of C, the 6502 and the BBC with added python</title><link>https://pyvideo.org/pycon-uk-2017/tales-of-c-the-6502-and-the-bbc-with-added-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Any of you from the 80's will remember the BBC Micro. Well, I got one about half a year ago and have been fascinated by it ever since. The 8-bit 2MHz limitations are part of the joy of it.&lt;/p&gt;
&lt;p&gt;Ever since I learnt it had an assembler I've been learning assembly and one day I just thought &amp;quot;Let's write a C compiler for this&amp;quot; (bad idea), but I went with it and that's what this talk is about my journey and findings along the way of writing a C compiler in python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin Misell</dc:creator><pubDate>Sun, 29 Oct 2017 11:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/tales-of-c-the-6502-and-the-bbc-with-added-python.html</guid></item><item><title>You don't have to be mad to work here but it helps</title><link>https://pyvideo.org/pycon-uk-2017/you-dont-have-to-be-mad-to-work-here-but-it-helps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mental health is a taboo subject right? We don't talk about it right? It's embarrassing or something to keep a secret right?&lt;/p&gt;
&lt;p&gt;Isn't it about time that changes? Mental health concerns clearly exist within the Coding Community of which Python Community is part of and it's about time we talked about it in an honest and frank manner. We suffer from depression, anxiety, bipolar, ASD, self-harming, imposter syndrome and much, much more, but when it's all behind closed doors, everything becomes so much worse, so let's talk about our mental health and how we can help and support each other to cope when those little brain-gremlins yell abuse from our shoulder.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cat Lamin</dc:creator><pubDate>Sun, 29 Oct 2017 11:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/you-dont-have-to-be-mad-to-work-here-but-it-helps.html</guid></item><item><title>_from __future__ import profit</title><link>https://pyvideo.org/pycon-uk-2017/_from-__future__-import-profit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TL;DR - a light hearted introduction on how to make $$$ trading Bitcoin with Python&lt;/p&gt;
&lt;p&gt;The recent explosion of Bitcoin, Ethereum and other crypto currencies has presented a fantastic opportunity for the small amateur trader. In August 2015, 1 Bitcoin could be bought for $200 and 2 years later as I type this sentence the price has increased to $4211. This talk will explain WHY crypto currencies in particularly are so profitable, and HOW we can take advantage of the situation using Python.&lt;/p&gt;
&lt;p&gt;A few months ago I had no understanding of altcoins or the block chain and had never invested or traded any money in my life. This changed very recently when I set myself the challenge of turning my Raspberry Pi into a profitable trading bot. During some initial research I stumbled upon the world of crypto currency trading and was completely hooked.&lt;/p&gt;
&lt;p&gt;If you're interested to hear about my experience (and find out whether I've actually made any money) then please come along. No knowledge of trading, bitcoin or anything particularly technical is required.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Campbell</dc:creator><pubDate>Sun, 29 Oct 2017 10:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/_from-__future__-import-profit.html</guid><category>bitcoin</category></item><item><title>A brief history of markup languages</title><link>https://pyvideo.org/pycon-uk-2017/a-brief-history-of-markup-languages.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's a long history to text markup languages, and I don't think most people know much of it.&lt;/p&gt;
&lt;p&gt;I hope to touch (briefly) on at least nroff/troff, SGML, HTML, Docbook, TeX and LaTeX, setext, reStructuredText, markdown and AsciiDoc.&lt;/p&gt;
&lt;p&gt;I shall probably curse briefly about wiki markups.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tony Ibbs</dc:creator><pubDate>Sun, 29 Oct 2017 10:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/a-brief-history-of-markup-languages.html</guid></item><item><title>Extending Jupyter Notebook</title><link>https://pyvideo.org/pycon-uk-2017/extending-jupyter-notebook.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk will explain the extension mechanisms of Jupyter Notebook, and how to use them to make Notebook server more collaborative:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Jupyter server extensions&lt;/li&gt;
&lt;li&gt;Jupyter UI extensions&lt;/li&gt;
&lt;li&gt;Javascript overloading&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fei Shi</dc:creator><pubDate>Sun, 29 Oct 2017 10:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/extending-jupyter-notebook.html</guid></item><item><title>Finding bugs for free - The magic of code analysis</title><link>https://pyvideo.org/pycon-uk-2017/finding-bugs-for-free-the-magic-of-code-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Code analysis is a powerful technique for improving the quality of software. It allows you to find bugs in your Python code that would be very hard to find with testing, and without the need for any annotations.&lt;/p&gt;
&lt;p&gt;In this talk I show examples of &amp;quot;interesting&amp;quot; bugs that we at &lt;a class="reference external" href="https://lgtm.com/"&gt;https://lgtm.com/&lt;/a&gt; have found in real code. For each example, I will describe how we can find that type of error.&lt;/p&gt;
&lt;p&gt;In order to avoid unnecessary embarrassment, all examples will be anonymised.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Most Python developers. I will assume that the audience knows Python reasonably well, but knows little or nothing about code analysis.&lt;/p&gt;
&lt;p&gt;At &lt;a class="reference external" href="https://lgtm.com/"&gt;https://lgtm.com/&lt;/a&gt; we provide state-of-the-art analysis for a number of languages including Python. We have found bugs in the standard library, requests, numpy and many other&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Shannon</dc:creator><pubDate>Sun, 29 Oct 2017 10:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/finding-bugs-for-free-the-magic-of-code-analysis.html</guid></item><item><title>Keynote: Communities and education - exploring together</title><link>https://pyvideo.org/pycon-uk-2017/keynote-communities-and-education-exploring-together.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Kushal and Anwesha Das&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kushal</dc:creator><pubDate>Sun, 29 Oct 2017 09:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/keynote-communities-and-education-exploring-together.html</guid><category>keynote</category></item><item><title>Panel Discussion Developer - Career Progression</title><link>https://pyvideo.org/pycon-uk-2017/panel-discussion-developer-career-progression.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is a panel of four experts answering pre-submitted questions from the assembled audience under the guidance of a chairperson. Audience participation will be encouraged.&lt;/p&gt;
&lt;p&gt;Do you want to break into programming? Are you a junior developer wondering about the next steps in your career? Perhaps you're at a crossroads in your career and wonder what to do next? Is there a problematic issue about the workplace that you think should be discussed?&lt;/p&gt;
&lt;p&gt;Submit your questions via this form.&lt;/p&gt;
&lt;p&gt;Think &amp;quot;Question Time&amp;quot; on BBC1 at 10:30pm on a Thursday and you have a pretty good idea of what it will be like.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Samathy Barratt&lt;/strong&gt; (Chair)&lt;/p&gt;
&lt;p&gt;Samathy is a magical code fairy passionate about diverse people and well documented code.&lt;/p&gt;
&lt;p&gt;Currently finishing her BSC in Computer Science at Coventry University, she's always interested in learning new technologies and ideas. Despite being a student herself, she loves teaching what she's excited about to others.&lt;/p&gt;
&lt;p&gt;You can usually find her getting involved with LGBT+ activism, going to conferences or drinking a good coffee.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Jessica Rose&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Jessica Rose is a self taught technologist and technical manager with FutureLearn. She's founded the Open Code meetup series, co-founded Trans*Code and hosts the Pursuit Podcast. She's a mentor and advisor for those looking to enter the tech industry.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kristian Glass&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Kristian is the CTO at LaterPay, leading a team distributed across over a dozen countries. Prior to that he ran Moorhen Solutions where he helped growing tech companies scale their systems and infrastructure.&lt;/p&gt;
&lt;p&gt;He was the treasurer for PyCon UK 2016, and co-founder of the PyCon UK Society Ltd and the UK Python Association.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Meri Williams&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Meri is a geek, a manager, and a manager of geeks. She's a CTO, delighted to be leading the tech team at MOO, and also runs ChromeRose, a micro-consultancy which helps digital &amp;amp; technical teams be brilliant.&lt;/p&gt;
&lt;p&gt;She has had a career spanning development, programme &amp;amp; product management and more recently engineering &amp;amp; operations leadership. She’s led teams ranging in size from 30 to 300, mostly with people spread across the world, in a range of organisations from Procter &amp;amp; Gamble, to startups, to the Government Digital Service.&lt;/p&gt;
&lt;p&gt;A published author and international speaker, she sponsors scholarships to help more girls start STEM careers in her hometown of Stellenbosch, South Africa. She's proud to be the host and co-curator of The Lead Dev conference for technical leads.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Michelle Coventry&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Michelle is a talent advisor at Kindred Capital and Five AI. She has 16 years of experience sourcing and nurturing talent in high growth, investor backed tech companies.&lt;/p&gt;
&lt;p&gt;Previously she was a founding partner at Maven Ventures - a leading headhunting firm recruiting for private equity and venture capital backed Tech and Digital companies across EMEA and the US. She also works with large organisations undergoing digital transformation (for example, Marks and Spencer) to help them recuit and nurture technical colleagues.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Samathy Barratt</dc:creator><pubDate>Sun, 29 Oct 2017 09:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/panel-discussion-developer-career-progression.html</guid><category>panel</category></item><item><title>PyCon UK 2017 Sunday Introduction</title><link>https://pyvideo.org/pycon-uk-2017/pycon-uk-2017-sunday-introduction.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sun, 29 Oct 2017 09:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/pycon-uk-2017-sunday-introduction.html</guid></item><item><title>PyCon UK 2017 Saturday Lightning Talks</title><link>https://pyvideo.org/pycon-uk-2017/pycon-uk-2017-saturday-lightning-talks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Sat, 28 Oct 2017 16:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/pycon-uk-2017-saturday-lightning-talks.html</guid><category>lightning talks</category></item><item><title>Bitio</title><link>https://pyvideo.org/pycon-uk-2017/bitio.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;bitio is a small and simple Python package that enables your BBC micro:bit to become an input and output device for your main computer (PC/Mac/Raspberry Pi/Linux). It turns the BBC micro:bit into an interactive controller for any Python program, and is built on top of the successful MicroPython language that runs on the micro:bit - so, it's Python all the way!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Whale</dc:creator><pubDate>Sat, 28 Oct 2017 15:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/bitio.html</guid><category>micro:bit</category><category>bitio</category></item><item><title>Deprecation Warning: documenting your software’s last days</title><link>https://pyvideo.org/pycon-uk-2017/deprecation-warning-documenting-your-softwares-last-days.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Apologies for the poor quality video, the camera was unattended and the autofocus was being confused by something in the room.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It could happen to you: your project is canceled, your team is “reorganized”, or your company is closing its doors. Some or all of your software, service, or API may not be long for this world. What will you say to the people using it? In this talk, you’ll learn how to cope when it’s time to break bad news to your users.&lt;/p&gt;
&lt;p&gt;Whether you’re deprecating significant features or shutting down entirely, you still have a chance to make life better—or at least a little less worse—for the people who have come to rely on your work. In this talk, you’ll learn how to:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;cope with a stressful situation&lt;/li&gt;
&lt;li&gt;plan your shutdown communications to make sure no users get left behind&lt;/li&gt;
&lt;li&gt;let your users down easy with the appropriate voice, tone, and documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;From your initial announcement to your software's last day, you’ll learn how to say goodbye in a way that’s good for you and your soon-to-be-former users.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Beck</dc:creator><pubDate>Sat, 28 Oct 2017 15:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/deprecation-warning-documenting-your-softwares-last-days.html</guid></item><item><title>Django and GraphQL</title><link>https://pyvideo.org/pycon-uk-2017/django-and-graphql.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The web is constantly evolving, that is even more true with the frontend world. You don’t have anymore the traditional webapp, in fact you now have two apps, backend and frontend. But how do they communicate? Traditionally we have always created REST APIs, but now, there’s a new player. GraphQL!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Arminio</dc:creator><pubDate>Sat, 28 Oct 2017 15:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/django-and-graphql.html</guid></item><item><title>Managing Machine Learning Models in Production</title><link>https://pyvideo.org/pycon-uk-2017/managing-machine-learning-models-in-production.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Managing models in production is not a trivial task. It involves many challenges like managing multiple versions of models, deploying them as service, monitoring their performance, making it easier to collaborate with multiple people, etc.&lt;/p&gt;
&lt;p&gt;This talk presents the tools, techniques and system architecture of a cloud platform built by the author to address these challenges.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anand Chitipothu</dc:creator><pubDate>Sat, 28 Oct 2017 15:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/managing-machine-learning-models-in-production.html</guid></item><item><title>Creating a Python Web App for Destiny the Game</title><link>https://pyvideo.org/pycon-uk-2017/creating-a-python-web-app-for-destiny-the-game.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For the last year and a half I have been working on creating a Python based application for Destiny the game (Play Station, Xbox and soon to be released on PC). I started this project as a practical exercise to increase my knowledge in Python, I have progressed from developing several small scripts, which interface with the game environment, to deploying and managing a Flask based web application. I have been blogging about my progress with the application since August 2016, creating several how-to guides, a custom OAuth 2.0 flow that is currently being used by several other Destiny applications, and a full web application. My blog has to date received ~45,000 views. The Destiny developers, Bungie (Destiny, Halo), have released an incredibly powerful API which allows you to interact with your in-game character, collect a huge amount of stats and track all of your activities. I have used the Python Requests library to interface with the game environment via the Destiny API, I use SQLAlchemy to store user account information, and the Jinja2 web templating language for Python, as a web front end.&lt;/p&gt;
&lt;p&gt;Application Features: Login via custom OAuth 2.0 flow (Bungie.net OAuth flow was not compatible with current OAuth libraries). Store user account details in an SQL database. View full in-game account details. View your in-game characters inventory. Send a POST request to select another character (each game account can have up-to 3 characters). View items stored in shared Vault (in game item storage that is available to all of your characters). Transfer items, change weapons and armour live in game. View a list of (Play Station or Xbox) friends in your in-game clan. Also view basic account and character details. View a list of items being sold in-game, receive a HTML formatted email of these items.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allyn Hunt</dc:creator><pubDate>Sat, 28 Oct 2017 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/creating-a-python-web-app-for-destiny-the-game.html</guid></item><item><title>Machine learning libraries you'd wish you'd known about</title><link>https://pyvideo.org/pycon-uk-2017/machine-learning-libraries-youd-wish-youd-known-about.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Diagnosing, explaining and scaling machine learning is hard. I'll talk about a set of libraries that have helped me to understand when and how a model is failing, helped me communicate why it is working to non-technical users, automated the search for better models and helped me to scale my modeling.&lt;/p&gt;
&lt;p&gt;I'll discuss YellowBrick, LIME, ELI5, TPOT and Dask. These libraries will make it more likely that you deliver trustworthy and reliable systems that will actually make it past R&amp;amp;D and into Production. The talk will be rooted in my experience delivering client projects and participating in Kaggle competitions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ian Ozsvald</dc:creator><pubDate>Sat, 28 Oct 2017 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/machine-learning-libraries-youd-wish-youd-known-about.html</guid></item><item><title>The Code of Conduct is here for you</title><link>https://pyvideo.org/pycon-uk-2017/the-code-of-conduct-is-here-for-you.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many open source communities have now adopted Codes of Conduct. Django adopted one in 2013, the since then Django Software Foundation has had a Code of Conduct committee. The committee deals with CoC violations on e.g. mailing lists, aggregates reports from conferences, can check speaker lists against CoC reports and provide general advice and support. Django events tend to have their own CoC with their own CoC team.&lt;/p&gt;
&lt;p&gt;Not everyone in the wider tech community is fond of Codes of Conduct. However, a lot of this reluctance is rooted in misunderstanding about what this actually entails, and what the committee and teams actually do in both their active and reactive roles.&lt;/p&gt;
&lt;p&gt;That’s why this talk will give a peek behind the scenes of the work of the CoC committee and CoC teams, how incidents are actually handled with various real life examples, and how this leads to a better community for everyone. Including you.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sasha Romijn</dc:creator><pubDate>Sat, 28 Oct 2017 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/the-code-of-conduct-is-here-for-you.html</guid></item><item><title>Code With Mu</title><link>https://pyvideo.org/pycon-uk-2017/code-with-mu.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mu (&lt;a class="reference external" href="http://codewith.mu/"&gt;http://codewith.mu/&lt;/a&gt;) is a text editor for beginner programmers written in Python.&lt;/p&gt;
&lt;p&gt;This talk explains how and why we built it.&lt;/p&gt;
&lt;p&gt;We'll tell the story of making a native app in PyQt5 from scratch, from the initial idea, via user research through to implementation. We'll discuss our obsession with simplicity, accessibility and diversity through the medium of code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicholas Tollervey</dc:creator><pubDate>Sat, 28 Oct 2017 14:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/code-with-mu.html</guid></item><item><title>Deep learning applications: training a multi task classifier</title><link>https://pyvideo.org/pycon-uk-2017/deep-learning-applications-training-a-multi-task-classifier.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Convolutional neural networks are great for image classification. So great, that we want to use a lot of them! The problem is that they are computationally expensive and require the use of GPUs. If you use too many, they can really slow down your data pipeline. Our talk describes how to make use of a deep convolutional neural network to perform multiple classification tasks at once. As a result of sharing a single convolutional stage for multiple tasks, it saves a lot of processing time, whilst performing at a similar level of accuracy. We’ll show you an example using Keras, illustrating the impact in processing time and accuracy, and also some interesting results in the quality of the embedding.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paulo Eduardo Sampaio</dc:creator><pubDate>Sat, 28 Oct 2017 14:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/deep-learning-applications-training-a-multi-task-classifier.html</guid></item><item><title>Handling Database Concurrency With Django</title><link>https://pyvideo.org/pycon-uk-2017/handling-database-concurrency-with-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's easy to forget that your Django site may end up accessing the database several times at once. This can be perilous!&lt;/p&gt;
&lt;p&gt;In this talk, David will explore in detail how concurrency is handled by Django, and by the database. You'll learn key concepts, common pitfalls and gain a solid foundation in how to write code that is concurrency-safe.&lt;/p&gt;
&lt;p&gt;This talk has plenty of tips that are relevant to all Python developers that work with databases.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Seddon</dc:creator><pubDate>Sat, 28 Oct 2017 14:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/handling-database-concurrency-with-django.html</guid></item><item><title>Introduction to Deep Learning with Python - The force awakens</title><link>https://pyvideo.org/pycon-uk-2017/introduction-to-deep-learning-with-python-the-force-awakens.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will give a gentle introduction to Deep Learning using Python with the help of Lasagne, Numpy, Pandas and OpenCV having fun with Star Wars miniature ships in the process. We will walk through the pipeline, starting from data acquisition, preparation, construction of ConvNets, training and assessment, in order to classify different types of ships! Deep Learning allows computational models that are composed of multiple processing layers to learn representation of data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. Particularly, Convolutional Neural Networks (ConvNets) represent the state of art of several computer vision problems, given its outstanding classification performance in large volumes of images. ConvNets great performance is based on four fundamental ideas. Local connections, shared weights, pooling and the use of multiple layers. For this talk we will have miniatures ships in the room so participants can record their own videos, and use it as data source for their own classifiers! During the talk we will show how to classify k-wing, lambda shuttle and millennium falcon miniatures.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Celia Cintas</dc:creator><pubDate>Sat, 28 Oct 2017 14:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/introduction-to-deep-learning-with-python-the-force-awakens.html</guid></item><item><title>Learn to Code for Data Analysis</title><link>https://pyvideo.org/pycon-uk-2017/learn-to-code-for-data-analysis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The 4-week MOOC &amp;quot;Learn to Code for Data Analysis&amp;quot; is a hands-on course that introduces programming and shows how to access open data, clean and analyse it, and produce simple visualisations. The course uses Python, the pandas data analysis library, and the browser–based Jupyter Notebooks as the programming environment. The notebook style allows us to weave explanations, code, and the corresponding results in an interactive document where students do the many exercises. Each weekly project (based on real data from the WHO, UN, World Bank and Weather Underground) is written up in a notebook that can be modified by learners and shared publicly.&lt;/p&gt;
&lt;p&gt;In this talk we summarise the pedagogical approach taken, and compare it to Merrill's First Principles of Instruction. We comment on the advantages and disadvantages of the software used, in particular the notebook environment, and difficulties felt by learners. We muse on the highlights and low points of forum discussions. We synthesize lessons learned, and reflect on the limitations of MOOCs and on the power of data for teaching programming.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michel Wermelinger</dc:creator><pubDate>Sat, 28 Oct 2017 12:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/learn-to-code-for-data-analysis.html</guid></item><item><title>Using Python in Schools, Students' Point of View</title><link>https://pyvideo.org/pycon-uk-2017/using-python-in-schools-students-point-of-view.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Year 11 and Year 13 students give their own perspective about the teaching of Computer Science in schools, specifically at Bristol Free School.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Corinne Sherman</dc:creator><pubDate>Sat, 28 Oct 2017 12:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/using-python-in-schools-students-point-of-view.html</guid></item><item><title>Efficient Data Mangling with Pandas Indexes</title><link>https://pyvideo.org/pycon-uk-2017/efficient-data-mangling-with-pandas-indexes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is the Swiss-Multipurpose Knife for Data Analysis in Python. In this talk we will look deeper into how to gain productivity utilising Pandas powerful indexing and make advanced analytics a piece of cake.&lt;/p&gt;
&lt;p&gt;We will cover:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Pandas indexing recap&lt;/li&gt;
&lt;li&gt;Index Types&lt;/li&gt;
&lt;li&gt;Time-Series Index and resampling&lt;/li&gt;
&lt;li&gt;Pandas Multi-Indexing&lt;/li&gt;
&lt;li&gt;Categorical&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Hendorf</dc:creator><pubDate>Sat, 28 Oct 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/efficient-data-mangling-with-pandas-indexes.html</guid></item><item><title>NetworkZero network support for clubs, classes &amp; dojos</title><link>https://pyvideo.org/pycon-uk-2017/networkzero-network-support-for-clubs-classes-dojos.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NetworkZero is a Python package designed to make two things easy in a group situation: finding the machines in a network; and sending and receiving messages.&lt;/p&gt;
&lt;p&gt;It consists of two parts: a UDP beacon which advertises services by name and discovers other service adverts; and a messaging API which offers simple to-and-fro communication as well as simple pub-sub (&amp;quot;news&amp;quot;) facilities.&lt;/p&gt;
&lt;p&gt;The talk will cover the origins of the module, its use, and the obstacles which might prevent its wider adoption.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Golden</dc:creator><pubDate>Sat, 28 Oct 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/networkzero-network-support-for-clubs-classes-dojos.html</guid></item><item><title>Panel Discussion The Ethics and Politics of Programming</title><link>https://pyvideo.org/pycon-uk-2017/panel-discussion-the-ethics-and-politics-of-programming.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is a panel of four experts answering pre-submitted questions from the assembled audience under the guidance of a chairperson. Audience participation will be encouraged.&lt;/p&gt;
&lt;p&gt;Fake news on social media, dragnet collection of personal data, being asked to write code for the benefit of your employers but that's not necessarily helpful for your users, using big data to analyse the behaviour of users, government control of the internet, violations of FLOSS licenced code. These subjects and more like them are ripe for discussion in this panel.&lt;/p&gt;
&lt;p&gt;Think &amp;quot;Question Time&amp;quot; on BBC1 at 10:30pm on a Thursday and you have a pretty good idea of what it will be like.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Carol Willing&lt;/strong&gt; (CHAIR)&lt;/p&gt;
&lt;p&gt;Carol Willing is a Python Software Foundation Fellow and former Director, a core developer for CPython and Project Jupyter, and a Research Software Engineer at Cal Poly San Luis Obispo.&lt;/p&gt;
&lt;p&gt;She's also Geek-In-Residence at Fab Lab San Diego and co-organizes PyLadies San Diego and San Diego Python. Combining a love of nature, the arts, and math with a BSE in Electrical Engineering from Duke and an MS in Management from MIT, she's enjoyed creating and teaching others for over 20 years.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Anwesha Das&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Anwesha Das, is an Advocate practicing law for 7 years. She is an active user of FOSS technologies. She is the Organizer of PyLadies Pune. She maintains her blog at &lt;a class="reference external" href="https://anweshadas.in/"&gt;https://anweshadas.in/&lt;/a&gt;. One of her major goals is to help FOSS developers with the legal aspects of the software industry. She currently also blogs for the Python Software Foundation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Irina Bolychevsky&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Irina is passionate about products and using technology to make things better. She spent many years working on open data at Open Knowledge (as one of the directors and ckan product owner), at web startups, and recently as a data consultant for W3C, Open Data Institute and the UK and Dubai governments. She co-founded redecentralize.org — a project to promote and bring together people working on and interested in decentralised digital technologies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;David Miller&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;According to the only known biography of David Miller he is, &amp;quot;Human, frequently fascinated. Digital, Health with &amp;#64;ohcuk &amp;amp; friends.&amp;quot; He also happens to have a background in philosophy and an interest in ethical and political matters arising in the digital world. He's a founder of the NHS Hackday and runs Open Healthcare.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Daniele Procida&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Daniele works for Divio where he helps make Python/Django easier to deploy on the web. He is a member of the Django core team and the Django Software Foundation board, trying to contribute back to open source software and its communities.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carol Willing</dc:creator><pubDate>Sat, 28 Oct 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/panel-discussion-the-ethics-and-politics-of-programming.html</guid></item><item><title>Add GUIs to your data pipelines with Jupyter widgets</title><link>https://pyvideo.org/pycon-uk-2017/add-guis-to-your-data-pipelines-with-jupyter-widgets.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data science algorithms are often non-deterministic, in contrast to traditional software. The correctness of an algorithm is much more subjective. Being able to easily visualise intermediate stages in a data processing pipeline is therefore tremendously important.&lt;/p&gt;
&lt;p&gt;In this talk, we demonstrate how to use Jupyter widgets to set GUIs up as part of the data science process.&lt;/p&gt;
&lt;p&gt;Data scientists want to build lightweight, ad-hoc user interfaces that allow for human interaction at any step in the pipeline. Traditional software wisdom around building user interfaces is ill-suited for these new GUIs: the requirements are typically not well articulated up front, the interfaces need to be developed by data scientists rather than by frontend engineers, and they need to mesh well with other components in the data processing pipeline.&lt;/p&gt;
&lt;p&gt;Jupyter widgets allow for the creation of lightweight, interactive, graphical interfaces directly in Jupyter notebooks. This provides the following advantages:     Graphical interfaces lead to a much shorter feedback loop for the data scientist, allowing them to rapidly experiment with their model;     Data scientists can use Python (rather than, say, JavaScript) to create user interfaces;     The GUI is part of the pipeline, rather than a window onto it - any output generated by the UI can be used for the next step of the pipeline.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pascal Bugnion</dc:creator><pubDate>Sat, 28 Oct 2017 11:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/add-guis-to-your-data-pipelines-with-jupyter-widgets.html</guid></item><item><title>EduBlocks - Making the transition to Python easier!</title><link>https://pyvideo.org/pycon-uk-2017/edublocks-making-the-transition-to-python-easier.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Looking for ways to make the transition from block based programming to text based programming easier, then look no further! In this talk 13 year old Josh will introduce you to his project called EduBlocks, which is a visual block based programming tool that he has created to help teachers introduce programming languages, like Python, to children at an earlier age. The goal of the project is to make the transition from Scratch to Python easier for students and teachers, as presently there is no drop-in solution that bridges this gap. Josh will share his journey so far with you, from how he came up with the idea 18 months ago, the developments along the way, and how schools today as far away as America are making use of EduBlocks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Lowe</dc:creator><pubDate>Sat, 28 Oct 2017 11:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/edublocks-making-the-transition-to-python-easier.html</guid></item><item><title>Lazy Sequences working hard</title><link>https://pyvideo.org/pycon-uk-2017/lazy-sequences-working-hard.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has no problem handling large and even infinite streams of data. Just write lazy programs – code which defers data access until the last minute. This talk examines Python’s language and library support for such delaying tactics. There will be live coding, and we’ll draw parallels with similar features in other languages, in particular the Unix shell.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Guest</dc:creator><pubDate>Sat, 28 Oct 2017 11:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/lazy-sequences-working-hard.html</guid></item><item><title>How close can I get Amazon’s Alexa to Black Mirror’s Cookie</title><link>https://pyvideo.org/pycon-uk-2017/how-close-can-i-get-amazons-alexa-to-black-mirrors-cookie.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From Google Home to Apple’s upcoming HomePod, smart assistants are popping up left, right and centre. As technology becomes more and more embedded within our lives, and our relationship with it becomes increasingly intimate, we must stop and ask some rather uncomfortable questions.&lt;/p&gt;
&lt;p&gt;But not to worry, we’ll get to that later! This talk will begin with my attempts to tame Alexa, and how my code compares with a scene in the Black Mirror episode ‘White Christmas’. In this episode, Oona Chaplin makes a ‘cookie’ of herself in order to run her digitally controlled house. If you’ve ever watched a Black Mirror episode, you may be aware of its ability to show the dark side to our tech obsessions, and provide a bleak reflection of our world as it is now. And if you haven’t had the joy, don’t worry, I’ll introduce you to an episode!&lt;/p&gt;
&lt;p&gt;We will then dive into a (brief) discussion on the future of technologies such as Google Glass and Amazon Echo, and the consequences of our lives becoming slowly more entrenched with technologies like these.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zara Siddique</dc:creator><pubDate>Sat, 28 Oct 2017 10:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/how-close-can-i-get-amazons-alexa-to-black-mirrors-cookie.html</guid></item><item><title>Jupyter notebooks and collaboration</title><link>https://pyvideo.org/pycon-uk-2017/jupyter-notebooks-and-collaboration.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Git has seen widespread adoption to become the de facto standard for sharing and collaborating on code, and the same is true of Jupyter notebooks as the environment for doing data science. However, herein lies a problem: Git was designed to version plain text files containing source code, and not for storing structured data such as the JSON source of Jupyter notebooks and binary data such as embedded images.&lt;/p&gt;
&lt;p&gt;Without extra tooling and processes, this makes following best practices - such as making small, self-contained patches on topic branches and submitting them for code review - difficult, and the output messy. In this talk, I'll demonstrate the tools and practices that make working in data science more collaborative, more productive, and more fun.&lt;/p&gt;
&lt;p&gt;I'll show you how to use built-in Git features, such as incremental staging of changed files, to avoid introducing noise from changed cell counts, before moving on to show how simple tooling can allow us to automatically clear output cells from notebooks before committing new changes to Git, avoiding adding binary data to our repository.&lt;/p&gt;
&lt;p&gt;Finally, I'll introduce the nbdime tools from the Jupyter project: a set of tools for diffing and merging Jupyter notebooks. I'll demonstrate how to install them, and how to integrate them to Git to finally achieve great integration between Jupyter notebooks and version control for collaborative data science.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Stevenson</dc:creator><pubDate>Sat, 28 Oct 2017 10:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/jupyter-notebooks-and-collaboration.html</guid><category>jupyter notebook</category><category>nbdime</category></item><item><title>Keynote: It's not the coding curriculum</title><link>https://pyvideo.org/pycon-uk-2017/keynote-its-not-the-coding-curriculum.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In September 2014, we saw the introduction of a new computing curriculum that has schoolchildren in England from the age of five learning how to apply the fundamental principles and concepts of computer science, including abstraction, logic, algorithms and data representation. Alongside supporting responsible, competent, confident and creative users of technology -- who are able to evaluate and apply these technologies analytically to solve real-world problems -- they are developing the ability to analyse problems in computational terms, and have repeated practical experience of writing programs in order to solve such problems.&lt;/p&gt;
&lt;p&gt;Reflecting on the third year of this new curriculum in England (alongside substantial reforms taking place in Wales and the rest of the UK), which in its official documentation declares that “a high-quality computing education equips pupils to use computational thinking and creativity to understand and change the world”, I'll highlight some of its successes, as well as articulating its future challenges...including how &amp;quot;it’s not just about programming&amp;quot;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Crick</dc:creator><pubDate>Sat, 28 Oct 2017 09:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/keynote-its-not-the-coding-curriculum.html</guid><category>keynote</category></item><item><title>Accessible Python Instruction</title><link>https://pyvideo.org/pycon-uk-2017/accessible-python-instruction.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Note, this presentation was re-recorded in a different room on sunday after technical difficulties with the projector curtailed the initial attempt, but is in included in it's original slot here.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This session will be about including secondary students with special educational needs and disabilities in Python instruction in classrooms, after-school clubs, and summer camps. The session will help teachers (including those new to Python) and programmers who teach to design and deliver instruction to students with a range of abilities and needs. The session is informed by my experiences as a special educator, computer science teacher, educational researcher, and teaching coach in the US, and it will include examples from classrooms in which I have worked.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Meg Ray</dc:creator><pubDate>Sat, 28 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/accessible-python-instruction.html</guid></item><item><title>PyCon UK 2017 Friday Lightning Talks</title><link>https://pyvideo.org/pycon-uk-2017/pycon-uk-2017-friday-lightning-talks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Fri, 27 Oct 2017 17:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/pycon-uk-2017-friday-lightning-talks.html</guid><category>lightning talks</category></item><item><title>Single Malt WSGI</title><link>https://pyvideo.org/pycon-uk-2017/single-malt-wsgi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will introduce the Talisker project, which is an enhanced WSGI application runner based on standard python tools.&lt;/p&gt;
&lt;p&gt;Production WSGI applications require extras beyond just your application, like powerful logging, metrics, tracing and error reporting. Repeatedly integrating these into each new WSGI app/microservice can be dull, error prone, and inconsistent across services.&lt;/p&gt;
&lt;p&gt;Talisker aims to provide drop-in best practice support out of the box in all these areas and more. It integrates a set of popular python web tools into a single WSGI run-time.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;gunicorn&lt;/li&gt;
&lt;li&gt;requests&lt;/li&gt;
&lt;li&gt;sentry&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And optionally:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;li&gt;celery&lt;/li&gt;
&lt;li&gt;statsd&lt;/li&gt;
&lt;li&gt;prometheus_client&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It also uses a novel technique to enhance stdlib's default logging to support structured logging for all loggers.&lt;/p&gt;
&lt;p&gt;Talisker pulls all these tools together, and enhances the whole app. For example, requests and gunicorn get metrics and request id tracing on HTTP requests. Even your cron jobs can be run via Talisker, providing them with structured logging, metrics and error reporting.&lt;/p&gt;
&lt;p&gt;Designed to be simple to use, you can use it as a drop in replacement for gunicorn to run your apps gunicorn to get the benefit, and opt-in to other features as needed.&lt;/p&gt;
&lt;p&gt;The talk will introduce the motivations behind the project, the decisions we've made, and our experience running a fleet of microservices with Talisker at Canonical.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simon Davy</dc:creator><pubDate>Fri, 27 Oct 2017 17:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/single-malt-wsgi.html</guid></item><item><title>Friday Education Panel</title><link>https://pyvideo.org/pycon-uk-2017/friday-education-panel.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is a panel of four experts answering pre-submitted questions from the assembled audience under the guidance of a chairperson. Audience participation will be encouraged.&lt;/p&gt;
&lt;p&gt;Are you a student learning Python? Do you teach using Python? Perhaps you support teachers or create educational resources? You may even be a parent with a perspective on how your own children are taught programming! Our panel of experts would love to hear from you!&lt;/p&gt;
&lt;p&gt;Think &amp;quot;Question Time&amp;quot; on BBC1 at 10:30pm on a Thursday and you have a pretty good idea of what it will be like.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dan Pope (Chair)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Daniel is a hobbyist games programmer and two-time winner of the Pyweek games programming contest. He is author of Pygame Zero and adventurelib, both educational games frameworks for Python. He works for Two Sigma, a NYC hedge fund, from London.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Carrie Anne Philbin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Carrie Anne Philbin is an award winning Computing &amp;amp; ICT Teacher, Author and YouTuber. Currently working as Director of Education for the Raspberry Pi Foundation to put the power of computing and digital making into the hands of people all over the world. She also volunteers on the board for Computing At School and as a Fellow of the Python Software Foundation. Alongside her work in formal education in the UK, Carrie Anne also hosts a Computer Science series on popular educational YouTube channel Crash Course and creates technology tutorials on her own channel the Geek Gurl Diaries.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cat Lamin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Former UK primary school teacher and real-life geek girl, Cat is enthusiastic about getting teachers and children interested in coding and computing. She is a Raspberry Pi Certified Educator, CAS Master Teacher and Google Certified Educator; in her spare time, she performs in for an amateur theatre group, Q2 Players. Recent work has included work for the National STEM centre, travelling to Brazil to train elementary school teachers in basic computational thinking and computer science as well as working part-time for pi-top.&lt;/p&gt;
&lt;p&gt;Cat also founded Coding Evening for teachers, a network of social events to encourage teachers and community members to get together and share best practice for computing teaching. She runs Raspberry Jam events in Wimbledon.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kushal Das&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Kushal Das is a developer of SecureDrop at Freedom of the Press Foundation. He is a long time contributor to various upstream Free Software projects including the Fedora project. He is a core developer of CPython, and also a director of the Python Software Foundation. For the last 10 years he has been organizing online summer training to help people to become upstream contibutors, and wrote an online book to help in the same.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tom Crick&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tom Crick is Professor of Computer Science &amp;amp; Public Policy and Deputy Director of Innovation at Cardiff Metropolitan University. His interests sit at the research/policy interface, solving data-driven and computationally-intensive problems, as well as science/innovation policy, public service innovation, STEM education and skills/infrastructure for the digital economy. In 2013, he chaired the Welsh Government’s review of the ICT curriculum and chaired the development of a Digital Competence Framework for all schools in 2016. He was recently announced as the chair of the new National Network for Excellence in Science &amp;amp; Technology. He is Vice-President of BCS, The Chartered Institute for IT, Chair of CAS Wales and a non-executive director of Dŵr Cymru/Welsh Water. Twitter: &amp;#64;ProfTomCrick&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Pope</dc:creator><pubDate>Fri, 27 Oct 2017 16:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/friday-education-panel.html</guid></item><item><title>Scaling Django Codebases</title><link>https://pyvideo.org/pycon-uk-2017/scaling-django-codebases.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of Django's strengths is the clear project layout that it gives you, but there is more to staying productive on a large codebase than the Django architecture. This talk will go into some of the design decisions we've made that have helped us remain productive as we've scaled to 300 Django apps with a development team of 5. Intermediate and beginner Django developers will likely get the most out of this talk.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Palmer</dc:creator><pubDate>Fri, 27 Oct 2017 16:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/scaling-django-codebases.html</guid></item><item><title>Visualising environmental data with Python and Bokeh</title><link>https://pyvideo.org/pycon-uk-2017/visualising-environmental-data-with-python-and-bokeh.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The session is about accessing environmental data over the Internet using the OpenDAP protocol and displaying it in a web browser using the Bokeh library. The session will include a presentation/demonstration of some Python 3 software (available from PyPI) that I've developed for this purpose. My main interest is in oceanographic data so that will be the focus of the talk (though any environmental data could be used). The talk will cover the increased availability of environmental data via the Internet, the suitability of Python for accessing and processing the data, and using the Bokeh library for displaying the data. Bokeh allows for excellent interactive displays in a web browser driven by Python, and the talk will focus on the benefits I think this provides.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marcus Donnelly</dc:creator><pubDate>Fri, 27 Oct 2017 16:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/visualising-environmental-data-with-python-and-bokeh.html</guid></item><item><title>Coding with Compassion</title><link>https://pyvideo.org/pycon-uk-2017/coding-with-compassion.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Apologies for the slides being slightly cut off, the camera was recording unattended and it got knocked just before the presentation started&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What does it mean to be compassionate, and how does it differ from sympathy and empathy? What does compassion look like in action when working as a software developer? This talk will highlight some of the main tenets of compassionate behavior and what advantages they bring when working with other people. Additionally, a closer look into emotional intelligence will reveal how it can be developed and leveraged to improve communication and productivity within cross-functional teams. Practical propositions will also be suggested on how we as developers can exercise our most compassionate selves when working with business colleagues and fellow developers. And of equal importance, we will look at what it means to be compassionate towards oneself.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julie MacDonell</dc:creator><pubDate>Fri, 27 Oct 2017 15:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/coding-with-compassion.html</guid></item><item><title>The ZODB Ecosystem</title><link>https://pyvideo.org/pycon-uk-2017/the-zodb-ecosystem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ZODB is an object-oriented database written in Python and optimized in C. It makes it so easy to build trees or graphs of persistent Python objects. Just subclass off of class Persistent, and your applications become persistent. It is heavily used in Pyramid and Plone.&lt;/p&gt;
&lt;p&gt;This talk introduces the ZODB database, presents important concepts, shows how to build a simple account object, and reviews the tools available.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Lozinski</dc:creator><pubDate>Fri, 27 Oct 2017 15:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/the-zodb-ecosystem.html</guid><category>zodb</category></item><item><title>Visualizing Topic Models</title><link>https://pyvideo.org/pycon-uk-2017/visualizing-topic-models.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Topic Modelling is a great way to infer topics in a large corpus of text documents but analyzing them could become difficult without any visualization. The purpose of this talk is to introduce the visualizations that aids the process of training topic models and analyze their results for downstream NLP applications. I’ll give a brief introduction to Topic Models before moving to visualizations.&lt;/p&gt;
&lt;p&gt;I’ll demonstrate the steps to train LDA model in gensim and create the following visualizations using the trained model and how to interpret them:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;LDA Training visualization: Monitoring the LDA model training using Visdom integration in gensim&lt;/li&gt;
&lt;li&gt;pyLDAvis: Topic interpretation using the relevance metric effectively&lt;/li&gt;
&lt;li&gt;Topic Networks: Discover connections between topics&lt;/li&gt;
&lt;li&gt;Topic difference visualization: Determine exact distances between every topic pair along with their intersection/difference of terms&lt;/li&gt;
&lt;li&gt;Dendrogram (with extended heatmap): Topic clustering with a deeper insight into the inter-topic semantic validity&lt;/li&gt;
&lt;li&gt;LDA Projections: Document clustering using tensorboard based on the topic representation of documents&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The interface for this talk would be Jupyter notebook containing the LDA training and visualisations code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parul sethi</dc:creator><pubDate>Fri, 27 Oct 2017 15:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/visualizing-topic-models.html</guid></item><item><title>Combinatorics, graphs, and complexity</title><link>https://pyvideo.org/pycon-uk-2017/combinatorics-graphs-and-complexity.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bill Tutte broke the Lorenz cipher and, after the war, pioneered graph theory and their associated matroids. Each graph G determines a matroid convex polytope G.&lt;/p&gt;
&lt;p&gt;For simple convex polytopes, homology provides non-negative integers g[0], g[1], g[2], etc. Each g[i] gives a bound for g[i+1], and if g[i] is zero then so is g[i+1]. These g[i] nicely measure complexity.&lt;/p&gt;
&lt;p&gt;Usually, P(G) is not simple. Defining the homology of general convex polytopes is the speaker's main research problem. It's hard.&lt;/p&gt;
&lt;p&gt;But all is not lost. Every convex polytope X has a flag vector f(X), as we expect the complexity of a graph to be a linear function of f(P(G)). And we already have part of the g[i].&lt;/p&gt;
&lt;p&gt;The speaker hopes this talk contributes to the dialogue between data science and pure mathematics, to the benefit of both sides.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonathan Fine</dc:creator><pubDate>Fri, 27 Oct 2017 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/combinatorics-graphs-and-complexity.html</guid></item><item><title>Declarative Business Process Management and Async Generators</title><link>https://pyvideo.org/pycon-uk-2017/declarative-business-process-management-and-async-generators.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;BPM engines typically execute BPMN diagrams produced by a process engineer using a GUI. WorkScheme instead defines and interprets a functional domain-specific language based on a subset of Scheme. It also provides BPMN output via compilation to graphviz's dot and inclusion within Sphinx documentation of the process.&lt;/p&gt;
&lt;p&gt;Defining features of BPM are supported: concurrency of independent tasks (using asyncio); and persistence of state (pickling a stackless interpreter). Business tasks are provided by imported Python modules.&lt;/p&gt;
&lt;p&gt;A novel use for async generators is found as elegantly allowing for complex interaction between process and task. An example is two-phase commit for user interaction, improving robustness versus existing solutions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Skillen</dc:creator><pubDate>Fri, 27 Oct 2017 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/declarative-business-process-management-and-async-generators.html</guid></item><item><title>What I learned building Forth in 64 bit Intel assembly</title><link>https://pyvideo.org/pycon-uk-2017/what-i-learned-building-forth-in-64-bit-intel-assembly.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The computer programming language Forth was invented by Charles H. Moore in 1970. Forth is famous for being stack based and using reverse polish notation: the operators come after their operands. A Forth program to convert from Fahrenheit to Celsius (C = (F-32) × 5/9) is:&lt;/p&gt;
&lt;p&gt;32 - 5 * 9 /&lt;/p&gt;
&lt;p&gt;On 23rd August 2016 I had an urge to write a Forth system in 64-bit Intel Assembly. This talk is about what happens next.&lt;/p&gt;
&lt;p&gt;In it I unpack what it means to implement a language. I dig a little into a lower-level description of typical computer hardware, and a little into 64-bit Intel Assembly. Compared to Python, Forth is a low-level language; compared to Assembly, Forth is a high-level language.&lt;/p&gt;
&lt;p&gt;I'll talk about how we can implement one language in terms of another, by building models, and how we can model languages and model computational processes.&lt;/p&gt;
&lt;p&gt;Forth is a tiny, but powerful, language. Moore's insight was to discover a language that was:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;small&lt;/li&gt;
&lt;li&gt;sufficient&lt;/li&gt;
&lt;li&gt;easy to implement&lt;/li&gt;
&lt;li&gt;extensible.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The result is that Forth implementations are typically composed of a tiny nucleus (typically in Assembly) surrounded by a larger amount of &amp;quot;Forth-in-Forth&amp;quot;.&lt;/p&gt;
&lt;p&gt;Come. Let's implement a language.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Jones</dc:creator><pubDate>Fri, 27 Oct 2017 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/what-i-learned-building-forth-in-64-bit-intel-assembly.html</guid></item><item><title>Automate your Boilerplate</title><link>https://pyvideo.org/pycon-uk-2017/automate-your-boilerplate.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Project templating and scaffolding tools like the cookiecutter Python package can be a great help when starting a new project. They provide a way of generating a predefined layout of files and directories, and can also be parameterised to accept arguments as they are generated. e.g. name of the new project.&lt;/p&gt;
&lt;p&gt;Creating such a template takes some effort but means quicker startup times on future projects; less boiler plate code to write; more consistent project layouts; and even automation of common setup tasks. However such templates work best for setting up highly repeatable project structures (like when writing plugins or small command line applications).&lt;/p&gt;
&lt;p&gt;Can we make use of these for Data Science projects? I will share my experience of doing so in this talk, along with the benefits and drawbacks I have found in trying to automate away as much of the boilerplate and manual effort when starting a new Data Science project!&lt;/p&gt;
&lt;p&gt;I will then present how I have eased some of the pain points by breaking down a typical project into several templating layers, and then developing a command line tool to help manage and apply these template layers to a project as and when needed.&lt;/p&gt;
&lt;p&gt;As part of the talk I will give an overview of cookiecutter templates, and how they can be built upon to achieve this approach of composable project templating.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Musselle</dc:creator><pubDate>Fri, 27 Oct 2017 14:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/automate-your-boilerplate.html</guid></item><item><title>The History of PyCon</title><link>https://pyvideo.org/pycon-uk-2017/the-history-of-pycon.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyCon US is now the largest vendor-independent developer conference in the world, and there are over forty national Python conferences. In this talk the chairman of the first three PyCon US events describes how the conferences came into being, and why they have proved so popular.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Holden</dc:creator><pubDate>Fri, 27 Oct 2017 14:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/the-history-of-pycon.html</guid></item><item><title>Writing file objects with CFFI</title><link>https://pyvideo.org/pycon-uk-2017/writing-file-objects-with-cffi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session will be an introduction to CFFI, taking the example of writing file-like objects that read and write byte streams.&lt;/p&gt;
&lt;p&gt;CFFI is a binding generator for writing C code extensions for Python, which work on a range of Python interpreters including PyPy.&lt;/p&gt;
&lt;p&gt;File-like objects are Python's protocol to read and write streaming data, which you'll be familiar with from open() and StringIO, among many others.&lt;/p&gt;
&lt;p&gt;We will learn how to use CFFI to wrap a simple C API, and adapt it to a file object API. To do this we will also need to understand how to use bytes, bytearray and memoryview objects to minimise copying.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Pope</dc:creator><pubDate>Fri, 27 Oct 2017 14:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/writing-file-objects-with-cffi.html</guid></item><item><title>Cylc: the Python workflow engine for cycling systems</title><link>https://pyvideo.org/pycon-uk-2017/cylc-the-python-workflow-engine-for-cycling-systems.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cylc (&amp;quot;silk&amp;quot;) is a general-purpose Python workflow engine or 'metascheduler'; a system that can automatically execute tasks according to complex schedules and dependencies, and deal with task failures if they occur. We will showcase the applications of Cylc in weather and climate services, and reflect on how its implementation in Python has aided the development of the Cylc software package.&lt;/p&gt;
&lt;p&gt;Complex workflows are increasingly at the heart of scientific research and business logic. This is true across a range of industries and scientific disciplines where we find workflows consisting of thousands of tasks which require running to a non-trivial schedule. At the Met Office, for example, we use Cylc to manage weather forecasting and climate research activities, where it has been used to drive operational systems since 2013. Cylc can manage workflows on a variety of computing platforms, from desktop PCs to high-performance computing services, and is currently used to efficiently utilise resources on some of the largest supercomputers in the world. Cylc is an open-source project led by a small team of core developers at the Met Office (UK) and the National Institute of Water and Atmospheric Research (New Zealand).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Declan Valters</dc:creator><pubDate>Fri, 27 Oct 2017 12:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/cylc-the-python-workflow-engine-for-cycling-systems.html</guid></item><item><title>Understanding Natural Language with Word Vectors</title><link>https://pyvideo.org/pycon-uk-2017/understanding-natural-language-with-word-vectors.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is an introduction to word vectors, a.k.a. word embeddings, a family of Natural Language Processing (NLP) algorithms where words are mapped to vectors.&lt;/p&gt;
&lt;p&gt;An important property of these vector is being able to capture semantic relationships, for example: UK - London + Paris = ???&lt;/p&gt;
&lt;p&gt;These techniques have been driving important improvements in many NLP applications over the past few years, so the interest around word embeddings is spreading. In this talk, we'll discuss the basic linguistic intuitions behind word embeddings, we'll compare some of the most popular word embedding approaches, from word2vec to fastText, and we'll showcase their use with Python libraries.&lt;/p&gt;
&lt;p&gt;The aim of the talk is to be approachable for beginners, so the theory is kept to a minimum.&lt;/p&gt;
&lt;p&gt;By attending this talk, you'll be able to learn:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;the core features of word embeddings&lt;/li&gt;
&lt;li&gt;how to choose between different word embedding algorithms&lt;/li&gt;
&lt;li&gt;how to implement word embedding techniques in Python&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Bonzanini</dc:creator><pubDate>Fri, 27 Oct 2017 12:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/understanding-natural-language-with-word-vectors.html</guid></item><item><title>Untangling Data Ownership</title><link>https://pyvideo.org/pycon-uk-2017/untangling-data-ownership.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We live in the world of &amp;quot;big data,&amp;quot; where more data is almost always considered better. Data is usually seen as a raw material - the stuff from which models are built and decisions are made. We may not know, see, or even care where the underlying data comes from. But sometimes our instincts run afoul of laws that decree that too much data, or data from the wrong source, is illegal. This talk is an exploration the legal concepts of ownership and provenance: how the law restricts what data we can use, and ways we can act within the law and reduce risk.&lt;/p&gt;
&lt;p&gt;We sometimes think of data as just &amp;quot;facts,&amp;quot; existing outside of any sort of ownership or legal structure. But the law doesn't always see it that way. Sometimes observations are owned by those who observe and sometimes by those who are observed. There are certain types of data, such as market-moving information, that may be legal or illegal to use depending on how you learned it.&lt;/p&gt;
&lt;p&gt;The problem is that the boundary of ownership – and the duties associated with protecting that data – change as data moves through your data pipeline. Moreover, the duties associated with the data you hold change all the time based upon both the law and our ability to combine or de-anonymize datasets.&lt;/p&gt;
&lt;p&gt;Further, once we have established ownership, there is the difficulty of proving where we learned certain pieces of information, and tracking that metadata through a processing pipeline. We also need to build in controls into certain sorts of data applications, because there are also some types of information that are legal to use when separated, but may be illegal when brought together under certain circumstances.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">VanL</dc:creator><pubDate>Fri, 27 Oct 2017 12:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/untangling-data-ownership.html</guid></item><item><title>Pythonic molecular evolution</title><link>https://pyvideo.org/pycon-uk-2017/pythonic-molecular-evolution.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is one of the most extended programming languages nowadays, especially in molecular bioinformatics. One of the outcomes has been the creation of general purpose bioinformatics libraries, like Biopython. Nonetheless, they do not provide solution to every aspect of each research field included in the broad meaning of the word “bioinformatics”. This led us to the development of MEvoLib, the first molecular evolution library implemented in Python. It has been designed to provide support for some of the most well-known and used software tools in the field altogether with innovative methods to deal with specific problems when working with molecular sequences and phylogenetic trees. The aim of this talk is to go through MEvoLib’s design and the key parts of its implementation. For instance, it will show the main aspects of the design of the interface of modules that deal with external software tools and how they provide support for users with different level of expertise.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jorge Alvarez-Jarreta</dc:creator><pubDate>Fri, 27 Oct 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/pythonic-molecular-evolution.html</guid></item><item><title>Rise of the robots and world domination</title><link>https://pyvideo.org/pycon-uk-2017/rise-of-the-robots-and-world-domination.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Las Cumbres Observatory is not just a collection of 18 telescopes spread across the globe, we are also scientific institution and centre for astronomy education. For the last 8 years we have been building and operating telescopes which are controlled using Python. Our unique part has been developing a robotic brain which sorts through 10s of thousands of requests from thousands of scientists and educators, and schedules them efficiently on our network, autonomous, 24/7. I will show how 99% of our operations, science and education work uses Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Edward Gomez</dc:creator><pubDate>Fri, 27 Oct 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/rise-of-the-robots-and-world-domination.html</guid></item><item><title>Software's Seven Deadly Wastes</title><link>https://pyvideo.org/pycon-uk-2017/softwares-seven-deadly-wastes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learning to conquer each of the seven deadly wastes is the key delivering faster. Originating in the Japanese manufacturing industry in the middle of the 20th century, the ideas behind the seven wastes are still hugely relevant to software development today. I'll explain each one and how it slows you down, then I'll explain how you can defeat the seven wastes and deliver faster than ever before.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jez Halford</dc:creator><pubDate>Fri, 27 Oct 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/softwares-seven-deadly-wastes.html</guid></item><item><title>Automated data exploration edit</title><link>https://pyvideo.org/pycon-uk-2017/automated-data-exploration-edit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The first step in any data-intensive project is understanding the available data. To this end, data scientists spend a significant part of their time carrying out data quality assessments and data exploration. In spite of this being a crucial step, it usually requires repeating a series of menial tasks before the data scientist gains an understanding ofthe dataset and can progress to the next steps in the project.&lt;/p&gt;
&lt;p&gt;In this talk I will detail the inner workings of a Python package that we have built which automates this drudge work, enables efficient data exploration, and kickstarts data science projects. A summary is generated for each dataset, including:     General information about the dataset, including data quality of each of the columns;     Distribution of each of the columns through statistics and plots (histogram, CDF, KDE), optionally grouped by other categorical variables;     2D distribution between pairs of columns;     Correlation coefficient matrix for all numerical columns.&lt;/p&gt;
&lt;p&gt;Building this tool has provided a unique view into the full Python data stack, from the parallelised analysis of a dataframe within a Dask custom execution graph, to the interactive visualisation with Jupyter widgets and Plotly. During the talk, I will also introduce how Dask works, and demonstrate how to migrate data pipelines to take advantage of its scalable capabilities.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Víctor Zabalza</dc:creator><pubDate>Fri, 27 Oct 2017 11:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/automated-data-exploration-edit.html</guid></item><item><title>Fun With Serverless Applications</title><link>https://pyvideo.org/pycon-uk-2017/fun-with-serverless-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless and the noOps movement are buzzwords that you've probably heard, but could these technologies also solve problems that you actually have? This session will cover when to use a serverless approach, and answer your questions about how to get started with it. We'll look at how to write code for these platforms, and how to safely and repeatedly deploy your code to them. We'll also look at how we can use these technologies to build a skill for the Amazon Echo. This session is suitable for Python developers of all levels.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lorna Mitchell</dc:creator><pubDate>Fri, 27 Oct 2017 11:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/fun-with-serverless-applications.html</guid></item><item><title>Choo Choo! All aboard the Data Train</title><link>https://pyvideo.org/pycon-uk-2017/choo-choo-all-aboard-the-data-train.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's loads of open data around that can be used to find out where trains and the tube are, and how they are running. But unless you know the systems and how they fit together, it can be a challenge to get started. This is a quick primer to the data, who provides it, where to find it and how to get started with it in Python. It's also great for beginners as it gives an introduction to simple data handling, and you can watch a train whiz past your window and then see it on your screen.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kirk Northrop</dc:creator><pubDate>Fri, 27 Oct 2017 10:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/choo-choo-all-aboard-the-data-train.html</guid></item><item><title>Frictionless Data, Frictionless Development edit</title><link>https://pyvideo.org/pycon-uk-2017/frictionless-data-frictionless-development-edit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A common problem in Data Engineering is how to create a platform capable both of importing and exporting tabular data in numerous formats and of maintaining a change history of the data while users update and query it.&lt;/p&gt;
&lt;p&gt;Tools like Trifacta &lt;a class="reference external" href="https://cloud.google.com/dataprep/"&gt;Google Cloud Dataprep&lt;/a&gt; provide a turnkey solution to part of the pipeline but the open source &lt;a class="reference external" href="http://frictionlessdata.io/tools/"&gt;Frictionless Data tools&lt;/a&gt; from OKFN can provide a simpler subset of these features tailored to your requirements.&lt;/p&gt;
&lt;p&gt;Just as &lt;a class="reference external" href="http://pandas.pydata.org/"&gt;Pandas&lt;/a&gt; is built around the Dataframe, the Frictionless Data approach uses &lt;a class="reference external" href="http://frictionlessdata.io/data-packages/"&gt;data packages&lt;/a&gt; consisting of a JSON table schema and a data URI. These schemata can be easily generated for any dataset and work well for a number of applications such as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Validating new data with tools like &lt;a class="reference external" href="http://goodtables.okfnlabs.org/"&gt;Goodtables&lt;/a&gt; or tableschema-py&lt;/li&gt;
&lt;li&gt;Building a data update interface with tools such as &lt;a class="reference external" href="https://github.com/handsontable/handsontable"&gt;Handsontable JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Creating declarative data processing pipelines that a front end can easily interact with via &lt;a class="reference external" href="https://github.com/frictionlessdata/datapackage-pipelines"&gt;datapackages pipelines&lt;/a&gt; and &lt;a class="reference external" href="https://kubernetes.io/"&gt;kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pushing data into various databases and repository tools such as &lt;a class="reference external" href="https://github.com/ckan/ckan/tree/master/ckanext/datastore"&gt;CKAN datastore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extending the schema to allow export to linked data formats such as IIIF&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The talk will cover these use cases and compare with the approaches taken by other open-source data science / BI tools such as &lt;a class="reference external" href="https://github.com/blaze/datashape"&gt;Datashape&lt;/a&gt; with &lt;a class="reference external" href="https://github.com/blaze/odo"&gt;ODO&lt;/a&gt; from Continuum and &lt;a class="reference external" href="https://github.com/apache/incubator-superset"&gt;Superset&lt;/a&gt; from AirBnB. I will aim to demonstrate that that lightweight web standards like datapackages speed up the development process.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Stretton</dc:creator><pubDate>Fri, 27 Oct 2017 10:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/frictionless-data-frictionless-development-edit.html</guid></item><item><title>Using privilege to improve inclusion</title><link>https://pyvideo.org/pycon-uk-2017/using-privilege-to-improve-inclusion.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;GitHub profiles are often used as a proxy for talent and aptitude – surely if somebody’s a “real” developer, they spend all their free time working on code, right? It’s looked upon favourably in job applications, and used by recruiters for the next round of recruit-o-grams.&lt;/p&gt;
&lt;p&gt;But it’s a privilege to have free time to work on code – not just the time itself, but the energy and the ability to work for free. This tips the playing field in favour of certain people (mostly white men and young, single people without families).&lt;/p&gt;
&lt;p&gt;When we forget our privilege, we can introduce inequality and hurt minorities. And we all have different types of privilege – including the ability to take free time for a conference!&lt;/p&gt;
&lt;p&gt;If we acknowledge our privilege, we can use it to help others by remembering that not everyone has the time, energy or resources that we do.&lt;/p&gt;
&lt;p&gt;This talk provides some practical steps for identifying and sharing our privilege. By using our privilege to help others who lack it, we can build a more diverse and inclusive tech industry for everyone.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Chan</dc:creator><pubDate>Fri, 27 Oct 2017 10:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/using-privilege-to-improve-inclusion.html</guid></item><item><title>Keynote: Shaping the World</title><link>https://pyvideo.org/pycon-uk-2017/keynote-shaping-the-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How is a software project like the USSR?&lt;/p&gt;
&lt;p&gt;Unfortunately, this is not a joke and the answer isn't funny. Software follows in a grand tradition of totalitarian regimes by creating a simplifying vision of how the world works, then forcing the world to fit that vision.&lt;/p&gt;
&lt;p&gt;The vision is different, as is the power we use to enforce it, but the failure modes share a lot in common.&lt;/p&gt;
&lt;p&gt;This is a talk about power. We all have it, and we cannot abdicate it, so instead we must use it carefully and responsibly.&lt;/p&gt;
&lt;p&gt;I will try to set you on the path to doing so, by giving you the introduction to cultural anthropology and anarchist theory that I wish someone had given me before I ever started developing software.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David R. MacIver</dc:creator><pubDate>Fri, 27 Oct 2017 09:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/keynote-shaping-the-world.html</guid><category>keynote</category></item><item><title>Attacks on Machine Learning</title><link>https://pyvideo.org/pycon-uk-2017/attacks-on-machine-learning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The session is about adversarial machine learning. The talk will include:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Introduction to adversarial machine learning&lt;/li&gt;
&lt;li&gt;Crafting adversarial examples with various algorithms.&lt;/li&gt;
&lt;li&gt;Properties of adversarial examples&lt;/li&gt;
&lt;li&gt;Attacks on CNN and NLP systems with adversarial examples&lt;/li&gt;
&lt;li&gt;Defenses against adversarial examples.&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">prabhant singh</dc:creator><pubDate>Fri, 27 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/attacks-on-machine-learning.html</guid></item><item><title>PyCon UK 2017 Friday Opening Session</title><link>https://pyvideo.org/pycon-uk-2017/pycon-uk-2017-friday-opening-session.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Inglesby</dc:creator><pubDate>Fri, 27 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/pycon-uk-2017-friday-opening-session.html</guid></item><item><title>PyCon UK 2017 - John Pinner Awards</title><link>https://pyvideo.org/pycon-uk-2017/pycon-uk-2017-john-pinner-awards.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicholas Tollervey</dc:creator><pubDate>Fri, 27 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/pycon-uk-2017-john-pinner-awards.html</guid></item><item><title>PyCon UK 2017 - JP Morgan Sponsor Session</title><link>https://pyvideo.org/pycon-uk-2017/pycon-uk-2017-jp-morgan-sponsor-session.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephen Simmons</dc:creator><pubDate>Fri, 27 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/pycon-uk-2017-jp-morgan-sponsor-session.html</guid></item><item><title>PyCon UK 2017 Thursday Lightning Talks</title><link>https://pyvideo.org/pycon-uk-2017/pycon-uk-2017-thursday-lightning-talks.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various speakers</dc:creator><pubDate>Fri, 27 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-27:pycon-uk-2017/pycon-uk-2017-thursday-lightning-talks.html</guid><category>lightning talks</category></item><item><title>On Big Computation and Python</title><link>https://pyvideo.org/pycon-uk-2017/on-big-computation-and-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a programming language slow of execution but fast of program development – except for some sorts of bug that a statically compiled language catch easily. Lots of science folk are using Python because of ease of development and the great libraries, not to mention the great communities. Big Data has, it seems become a thing, though most scientists still use what are really very small data sets. What about Big Computation, lots of CPU (and GPGPU) cycles, not really a lot of TB of data?&lt;/p&gt;
&lt;p&gt;To speed up Python code execution we have Cython (not exactly Python, but…), NumPy (a whole new subsystem, but everyone like Matplotlib), and Numba. But are these really good for Big Computation. Should we be looking as polyglot systems? C is a non-starter. Is C++ good enough? Can Go or Rust help? Is D a player? Have you ever tried Chapel?&lt;/p&gt;
&lt;p&gt;In this session we'll try some stuff out, then you can make up your own mind.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Russel Winder</dc:creator><pubDate>Thu, 26 Oct 2017 17:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-26:pycon-uk-2017/on-big-computation-and-python.html</guid></item><item><title>Making all the boring things go away</title><link>https://pyvideo.org/pycon-uk-2017/making-all-the-boring-things-go-away.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Whenever we come to write a script, there's a bunch of stuff we don't really want to deal with: command line option processing, config files, user preferences, logging, structuring code for testability.&lt;/p&gt;
&lt;p&gt;This talk goes through the problems you're likely to hit with each of these and ways that you can both &amp;quot;do it right&amp;quot; and not have to implement it all yourself.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Withers</dc:creator><pubDate>Thu, 26 Oct 2017 16:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-26:pycon-uk-2017/making-all-the-boring-things-go-away.html</guid><category>boilerplate</category></item><item><title>Building Quart from Flask and Asyncio audiofix</title><link>https://pyvideo.org/pycon-uk-2017/building-quart-from-flask-and-asyncio-audiofix.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python world is moving towards asyncio web (micro) frameworks, with Sanic and Aiohttp leading the way. Sadly the best (IMO) micro framework, Flask, is incompatible with asyncio. The Quart framework aims to solve this by reimplementing the Flask API using asyncio.&lt;/p&gt;
&lt;p&gt;I intend to talk about the lessons and difficulties encountered with Flask, Asyncio and the combination. Detailing the difficulties calling coroutines from synchronous functions, and the eventual workaround, how the crux of Flask, global thread locals, have equivalents and how they work, finishing with a discussion about how Python monkey patching allows for some of the Flask extensions to work.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Phil Jones</dc:creator><pubDate>Thu, 26 Oct 2017 15:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-26:pycon-uk-2017/building-quart-from-flask-and-asyncio-audiofix.html</guid></item><item><title>Python as a Second Language</title><link>https://pyvideo.org/pycon-uk-2017/python-as-a-second-language.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sometimes we can learn the most by coming at a topic sideways. Using examples from code written by people who are getting into Python after experiences with another language first, we can discover what ‘idiomatic’ Python looks like and find some tricks to writing concise, readable, delightful Python code.
The talk will focus on useful tips for people coming in from different languages into Python land, including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How to loop like a native&lt;/li&gt;
&lt;li&gt;The Most Diabolical Python Anti-Pattern&lt;/li&gt;
&lt;li&gt;When (and when not) to use classes&lt;/li&gt;
&lt;li&gt;The Joy and Horror of Dynamic Typing&lt;/li&gt;
&lt;li&gt;Designing flexible code&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hannah Hazi</dc:creator><pubDate>Thu, 26 Oct 2017 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-26:pycon-uk-2017/python-as-a-second-language.html</guid></item><item><title>Implementing Custom Containers</title><link>https://pyvideo.org/pycon-uk-2017/implementing-custom-containers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One often encounters the following situation(s):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I want to represent my data,&lt;/li&gt;
&lt;li&gt;I want to read/write, load/dump or somehow get/save data,&lt;/li&gt;
&lt;li&gt;I want to iterate over data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Instead of inventing a completely new class that provides required functionality, it may make sense to mimic or subclass an already existing collection, e.g. a dict, add custom dunder (double underscore) methods and quickly end up with a container that not only serves your purpose but is also very natural to use.&lt;/p&gt;
&lt;p&gt;After a short introduction in which we clarify some notions, we focus on two sample use cases:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How to extend a tuple to represent data?&lt;/li&gt;
&lt;li&gt;How to implement a dict-like container for data handling?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Throughout the talk we will discover some of the most often needed dunder methods that define a container's behaviour.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Claus</dc:creator><pubDate>Thu, 26 Oct 2017 14:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-26:pycon-uk-2017/implementing-custom-containers.html</guid></item><item><title>Lessons from combining microbits raspberry pis and tensorflow</title><link>https://pyvideo.org/pycon-uk-2017/lessons-from-combining-microbits-raspberry-pis-and-tensorflow.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I am 15 year old that came to pyconuk last year and gave a lightening talk on how I made a micro:bit calculator that could then communicate with other micro:bits.&lt;/p&gt;
&lt;p&gt;I have since broadened by learning to create the connect 4 game that I hinted at creating, and then combined it with google's neural net framework (tensorflow) and a raspberry pi to add an AI opponent.&lt;/p&gt;
&lt;p&gt;I will be showing you what I learnt from developing my ideas, and how I overcame any issues I faced.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke Spademan</dc:creator><pubDate>Thu, 26 Oct 2017 12:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-26:pycon-uk-2017/lessons-from-combining-microbits-raspberry-pis-and-tensorflow.html</guid></item><item><title>Pythonic code vs performance</title><link>https://pyvideo.org/pycon-uk-2017/pythonic-code-vs-performance.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Apologies for the lack of slides on this presentation, the projector feed wasn't working&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Idiomatic python is beautiful. If you're new to Python, this talk is for you because I'm going to reveal the charm of python in front of you. I'll present how boilerplate code can be replaced with idiomatic python. If you're experienced python developer, this talk is also for you because I'll compare the performance of the idiomatic code, both from CPU and memory point of view. Some of these results may surprise you.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lukasz Kakol</dc:creator><pubDate>Thu, 26 Oct 2017 12:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-26:pycon-uk-2017/pythonic-code-vs-performance.html</guid></item><item><title>Functional Python</title><link>https://pyvideo.org/pycon-uk-2017/functional-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Although Python is thought of as a procedural and OOP language, there are plenty of features to facilitate the implementation of a functional perspective. Our discussion will encompass the fundamentals of functional programming, whilst demonstrating how we would implement functional techniques in Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Jones</dc:creator><pubDate>Thu, 26 Oct 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-26:pycon-uk-2017/functional-python.html</guid></item><item><title>Python for conducting operational research in healthcare</title><link>https://pyvideo.org/pycon-uk-2017/python-for-conducting-operational-research-in-healthcare.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Operational research (OR) is the use of mathematical and analytical techniques to aid decision making. At Cardiff University there is a dedicated group that uses OR methods such as data analysis, mathematical modelling, and simulation, in the domain of healthcare.&lt;/p&gt;
&lt;p&gt;There are many great Python libraries that enable this kind of research. In this talk I will present methods used in two projects:&lt;/p&gt;
&lt;p&gt;Modelling cancer diagnostics: Working with a health hoard the sequence of cancer diagnostic tests were modelled. The aim of this project was to investigate which feasible capacity increases would be required in order for patients to meet a 28 day cancer diagnosis target.&lt;/p&gt;
&lt;p&gt;Evaluation of Stay Well Plans: Working with another health board the flows of older people around community, frailty, and secondary care is modelled. The aim of this project is to evaluate whether the introduction of personalised Stay Well Plans reduces the frequency patients accessing healthcare facilities; and investigate any changes in demand at various healthcare facilities due to the introduction of the plans.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geraint Palmer</dc:creator><pubDate>Thu, 26 Oct 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-26:pycon-uk-2017/python-for-conducting-operational-research-in-healthcare.html</guid></item><item><title>Building a python frontend for HPC codes</title><link>https://pyvideo.org/pycon-uk-2017/building-a-python-frontend-for-hpc-codes.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;HPC (high performance computing) codes are widely used in computational science, however they are often difficult to manage, with complex build processes, reliance on multiple input and parameter files and intricate data processing routines to visualise the results. Typical approaches to automating this often involve shell scripts to try and link these different stages together, however these can also end up being quite complex and unreadable, particularly for less experienced users.&lt;/p&gt;
&lt;p&gt;I shall present my experience building a python interface for the AMReX Astro codes, a family of codes for AMR (adaptive mesh refinement) modelling of astrophysical systems. I shall look at how I used python to manage the compilation process, create input data, submit supercomputer jobs and visualise the output.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alice Harpole</dc:creator><pubDate>Thu, 26 Oct 2017 11:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-26:pycon-uk-2017/building-a-python-frontend-for-hpc-codes.html</guid></item><item><title>Docs or it didn't happen</title><link>https://pyvideo.org/pycon-uk-2017/docs-or-it-didnt-happen.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Apologies for the occasional mumbling in the audio over the presenter, a mic was left live next to the mixer for part of Thursday&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you ever skimmed through a README, tried to follow a quickstart tutorial, attempted to decipher an error message, or typed '--help' in your console, congratulations -- you have encountered documentation!&lt;/p&gt;
&lt;p&gt;Long gone are the days of massive books with never-ending stories about your software. Today's users are smarter and less patient, which means that we no longer need to document all the things, as long as what we do document is clear, concise, helpful, and accessible. And that's where the real work starts.&lt;/p&gt;
&lt;p&gt;Documentation requires some attitude adjustment, since prose doesn't neatly compile into binaries as code does. But Don't Panic(tm)! No matter what your role is in the community, you can apply a few key principles from the technical writing world to make your project more docs-friendly, and therefore more user- and contributor-friendly.&lt;/p&gt;
&lt;p&gt;This high-level (and all-level) talk aims to introduce or re-acquaint you with topics such as content strategy, modular content architecture, tone and style, optimized DevOps for docs, and contribution workflows. Open-source projects of all shapes and sizes are welcome!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mikey Ariel</dc:creator><pubDate>Thu, 26 Oct 2017 11:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-26:pycon-uk-2017/docs-or-it-didnt-happen.html</guid></item></channel></rss>