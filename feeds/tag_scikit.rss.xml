<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 07 Oct 2016 00:00:00 +0000</lastBuildDate><item><title>Machine Learning with Text in scikit learn</title><link>https://pyvideo.org/pydata-dc-2016/machine-learning-with-text-in-scikit-learn.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/justmarkham/pydata-dc-2016-tutorial"&gt;https://github.com/justmarkham/pydata-dc-2016-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Although numeric data is easy to work with in Python, most knowledge created by humans is actually raw, unstructured text. By learning how to transform text into data that is usable by machine learning models, you drastically increase the amount of data that your models can learn from. In this tutorial, we'll build and evaluate predictive models from real-world text using scikit-learn.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Markham</dc:creator><pubDate>Fri, 07 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-07:pydata-dc-2016/machine-learning-with-text-in-scikit-learn.html</guid><category>learning</category><category>machine learning</category><category>scikit</category></item><item><title>Implementing distributed grid search for deep learning using scikit learn and joblib</title><link>https://pyvideo.org/pydata-chicago-2016/implementing-distributed-grid-search-for-deep-learning-using-scikit-learn-and-joblib.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://mheilman.github.io/pydata_chicago_2016/#/"&gt;https://mheilman.github.io/pydata_chicago_2016/#/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Grid search over hyperparameters is an important but computationally expensive process in machine learning, particularly for deep learning and tree ensembles. In this talk, I will describe how one can use joblib's recently added custom backend functionality to do distributed grid search on Amazon EC2 for a TensorFlow deep text classifier that follows the scikit-learn estimator API.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Heilman</dc:creator><pubDate>Sun, 28 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-28:pydata-chicago-2016/implementing-distributed-grid-search-for-deep-learning-using-scikit-learn-and-joblib.html</guid><category>deep learning</category><category>distributed</category><category>learning</category><category>scikit</category><category>search</category></item><item><title>High Frequency Trading in MMORPG Markets using Luigi, Pandas, and Scikit learn</title><link>https://pyvideo.org/pydata-chicago-2016/high-frequency-trading-in-mmorpg-markets-using-luigi-pandas-and-scikit-learn.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;In this talk I’ll describe the system I developed to implement a basic algorithmic trading strategy in the in-game market of an online, multi-player video game. Using this toy model, I’ll walk through the steps involved in setting up a data pipeline with Luigi, analyzing the resulting data with pandas, and identifying important factors and features with scikit-learn.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">J. Henry Hinnefeld</dc:creator><pubDate>Sat, 27 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-27:pydata-chicago-2016/high-frequency-trading-in-mmorpg-markets-using-luigi-pandas-and-scikit-learn.html</guid><category>scikit</category></item><item><title>Mind the Gap! Bridging the pandas - scikit learn dtype divide</title><link>https://pyvideo.org/pydata-chicago-2016/mind-the-gap-bridging-the-pandas-scikit-learn-dtype-divide.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/TomAugspurger/mtg/blob/master/MTG.pdf"&gt;https://github.com/TomAugspurger/mtg/blob/master/MTG.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This talk briefly introduces the two different data models used by Scikit-Learn (NumPy arrays) and pandas DataFrames. We see why this can cause problems for users of these libraries. Finally, we discuss strategies for managing the differences.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Augspurger</dc:creator><pubDate>Sat, 27 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-27:pydata-chicago-2016/mind-the-gap-bridging-the-pandas-scikit-learn-dtype-divide.html</guid><category>pandas</category><category>scikit</category></item><item><title>Learning scikit learn - An Introduction to Machine Learning in Python</title><link>https://pyvideo.org/pydata-chicago-2016/learning-scikit-learn-an-introduction-to-machine-learning-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;This tutorial provides you with a comprehensive introduction to machine learning in Python using the popular scikit-learn library. We will learn how to tackle common problems in predictive modeling and clustering analysis that can be used in real-world problems, in business and in research applications. And we will implement certain algorithms as scratch as well, to internalize the inner workings&lt;/p&gt;
&lt;p&gt;This tutorial will teach you the basics of scikit-learn. We will learn how to leverage powerful algorithms from the two main domains of machine learning: supervised and unsupervised learning. In this talk, I will give you a brief overview of the basic concepts of classification and regression analysis, how to build powerful predictive models from labeled data. Furthermore, we will go over the basics of clustering analysis to discover hidden structures in unlabeled data. Although it's not a requirement for attending this tutorial, I highly recommend you to check out the accompanying GitHub repository at &lt;a class="reference external" href="https://github.com/rasbt/pydata-chicago2016-ml-tutorial"&gt;https://github.com/rasbt/pydata-chicago2016-ml-tutorial&lt;/a&gt; 1-2 days before the tutorial. During the session, we will not only talk about scikit-learn, but we will also go over some live code examples and code simple machine-learning algorithms from scratch to get the knack of scikit-learn's API.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Raschka</dc:creator><pubDate>Fri, 26 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-26:pydata-chicago-2016/learning-scikit-learn-an-introduction-to-machine-learning-in-python.html</guid><category>learning</category><category>machine learning</category><category>scikit</category></item><item><title>Image analysis in Python with scipy and scikit image 4</title><link>https://pyvideo.org/scipy-2014/image-analysis-in-python-with-scipy-and-scikit-im.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;From telescopes to satellite cameras to electron microscopes, scientists
are producing more images than they can manually inspect. This tutorial
will introduce automated image analysis using the &amp;quot;images as numpy
arrays&amp;quot; abstraction, run through various fundamental image analysis
operations (filters, morphology, segmentation), and finally complete one
or two more advanced real-world examples.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Image analysis is central to a boggling number of scientific endeavors.
Google needs it for their self-driving cars and to match satellite
imagery and mapping data. Neuroscientists need it to understand the
brain. NASA needs it to &lt;a class="reference external" href="http://www.bbc.co.uk/news/technology-26528516"&gt;map
asteroids&lt;/a&gt; and save
the human race. It is, however, a relatively underdeveloped area of
scientific computing. Attendees will leave this tutorial confident of
their ability to extract information from their images in Python.&lt;/p&gt;
&lt;p&gt;Attendees will need a working knowledge of numpy arrays, but no further
knowledge of images or voxels or other doodads. After a brief
introduction to the idea that images are just arrays and vice versa, we
will introduce fundamental image analysis operations: filters, which can
be used to extract features such as edges, corners, and spots in an
image; morphology, inferring shape properties by modifying the image
through local operations; and segmentation, the division of an image
into meaningful regions.&lt;/p&gt;
&lt;p&gt;We will then combine all these concepts and apply them to several
real-world examples of scientific image analysis: given an image of a
pothole, measure its size in pixels compare the fluorescence intensity
of a protein of interest in the centromeres vs the rest of the
chromosome. observe the distribution of cells invading a wound site&lt;/p&gt;
&lt;p&gt;Attendees will also be encouraged to bring their own image analysis
problems to the session for guidance, and, if time allows, we will cover
more advanced topics such as image registration and stitching.&lt;/p&gt;
&lt;p&gt;The entire tutorial will be coordinated with the IPython notebook, with
various code cells left blank for attendees to fill in as exercises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Nunez-Iglesias</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-09:scipy-2014/image-analysis-in-python-with-scipy-and-scikit-im.html</guid><category>scikit</category></item><item><title>Image analysis in Python with scipy and scikit image, Part 1</title><link>https://pyvideo.org/scipy-2014/image-analysis-with-scikit-image-part-1.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;From telescopes to satellite cameras to electron microscopes, scientists
are producing more images than they can manually inspect. This tutorial
will introduce automated image analysis using the &amp;quot;images as numpy
arrays&amp;quot; abstraction, run through various fundamental image analysis
operations (filters, morphology, segmentation), and finally complete one
or two more advanced real-world examples.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Image analysis is central to a boggling number of scientific endeavors.
Google needs it for their self-driving cars and to match satellite
imagery and mapping data. Neuroscientists need it to understand the
brain. NASA needs it to &lt;a class="reference external" href="http://www.bbc.co.uk/news/technology-26528516"&gt;map
asteroids&lt;/a&gt; and save
the human race. It is, however, a relatively underdeveloped area of
scientific computing. Attendees will leave this tutorial confident of
their ability to extract information from their images in Python.&lt;/p&gt;
&lt;p&gt;Attendees will need a working knowledge of numpy arrays, but no further
knowledge of images or voxels or other doodads. After a brief
introduction to the idea that images are just arrays and vice versa, we
will introduce fundamental image analysis operations: filters, which can
be used to extract features such as edges, corners, and spots in an
image; morphology, inferring shape properties by modifying the image
through local operations; and segmentation, the division of an image
into meaningful regions.&lt;/p&gt;
&lt;p&gt;We will then combine all these concepts and apply them to several
real-world examples of scientific image analysis: given an image of a
pothole, measure its size in pixels compare the fluorescence intensity
of a protein of interest in the centromeres vs the rest of the
chromosome. observe the distribution of cells invading a wound site&lt;/p&gt;
&lt;p&gt;Attendees will also be encouraged to bring their own image analysis
problems to the session for guidance, and, if time allows, we will cover
more advanced topics such as image registration and stitching.&lt;/p&gt;
&lt;p&gt;The entire tutorial will be coordinated with the IPython notebook, with
various code cells left blank for attendees to fill in as exercises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Nunez-Iglesias</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-09:scipy-2014/image-analysis-with-scikit-image-part-1.html</guid><category>scikit</category></item><item><title>Image analysis in Python with scipy and scikit image, Part 2</title><link>https://pyvideo.org/scipy-2014/image-analysis-with-scikit-image-part-2.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;From telescopes to satellite cameras to electron microscopes, scientists
are producing more images than they can manually inspect. This tutorial
will introduce automated image analysis using the &amp;quot;images as numpy
arrays&amp;quot; abstraction, run through various fundamental image analysis
operations (filters, morphology, segmentation), and finally complete one
or two more advanced real-world examples.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Image analysis is central to a boggling number of scientific endeavors.
Google needs it for their self-driving cars and to match satellite
imagery and mapping data. Neuroscientists need it to understand the
brain. NASA needs it to &lt;a class="reference external" href="http://www.bbc.co.uk/news/technology-26528516"&gt;map
asteroids&lt;/a&gt; and save
the human race. It is, however, a relatively underdeveloped area of
scientific computing. Attendees will leave this tutorial confident of
their ability to extract information from their images in Python.&lt;/p&gt;
&lt;p&gt;Attendees will need a working knowledge of numpy arrays, but no further
knowledge of images or voxels or other doodads. After a brief
introduction to the idea that images are just arrays and vice versa, we
will introduce fundamental image analysis operations: filters, which can
be used to extract features such as edges, corners, and spots in an
image; morphology, inferring shape properties by modifying the image
through local operations; and segmentation, the division of an image
into meaningful regions.&lt;/p&gt;
&lt;p&gt;We will then combine all these concepts and apply them to several
real-world examples of scientific image analysis: given an image of a
pothole, measure its size in pixels compare the fluorescence intensity
of a protein of interest in the centromeres vs the rest of the
chromosome. observe the distribution of cells invading a wound site&lt;/p&gt;
&lt;p&gt;Attendees will also be encouraged to bring their own image analysis
problems to the session for guidance, and, if time allows, we will cover
more advanced topics such as image registration and stitching.&lt;/p&gt;
&lt;p&gt;The entire tutorial will be coordinated with the IPython notebook, with
various code cells left blank for attendees to fill in as exercises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Nunez-Iglesias</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-09:scipy-2014/image-analysis-with-scikit-image-part-2.html</guid><category>scikit</category></item><item><title>Image analysis in Python with scipy and scikit image, Part 3</title><link>https://pyvideo.org/scipy-2014/image-analysis-with-scikit-image-part-3.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;From telescopes to satellite cameras to electron microscopes, scientists
are producing more images than they can manually inspect. This tutorial
will introduce automated image analysis using the &amp;quot;images as numpy
arrays&amp;quot; abstraction, run through various fundamental image analysis
operations (filters, morphology, segmentation), and finally complete one
or two more advanced real-world examples.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Image analysis is central to a boggling number of scientific endeavors.
Google needs it for their self-driving cars and to match satellite
imagery and mapping data. Neuroscientists need it to understand the
brain. NASA needs it to &lt;a class="reference external" href="http://www.bbc.co.uk/news/technology-26528516"&gt;map
asteroids&lt;/a&gt; and save
the human race. It is, however, a relatively underdeveloped area of
scientific computing. Attendees will leave this tutorial confident of
their ability to extract information from their images in Python.&lt;/p&gt;
&lt;p&gt;Attendees will need a working knowledge of numpy arrays, but no further
knowledge of images or voxels or other doodads. After a brief
introduction to the idea that images are just arrays and vice versa, we
will introduce fundamental image analysis operations: filters, which can
be used to extract features such as edges, corners, and spots in an
image; morphology, inferring shape properties by modifying the image
through local operations; and segmentation, the division of an image
into meaningful regions.&lt;/p&gt;
&lt;p&gt;We will then combine all these concepts and apply them to several
real-world examples of scientific image analysis: given an image of a
pothole, measure its size in pixels compare the fluorescence intensity
of a protein of interest in the centromeres vs the rest of the
chromosome. observe the distribution of cells invading a wound site&lt;/p&gt;
&lt;p&gt;Attendees will also be encouraged to bring their own image analysis
problems to the session for guidance, and, if time allows, we will cover
more advanced topics such as image registration and stitching.&lt;/p&gt;
&lt;p&gt;The entire tutorial will be coordinated with the IPython notebook, with
various code cells left blank for attendees to fill in as exercises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Nunez-Iglesias</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-09:scipy-2014/image-analysis-with-scikit-image-part-3.html</guid><category>scikit</category></item></channel></rss>