<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 02 May 2019 09:00:00 +0000</lastBuildDate><item><title>IPython and Jupyter in Depth: High productivity, interactive Python</title><link>https://pyvideo.org/pycon-us-2019/ipython-and-jupyter-in-depth-high-productivity-interactive-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;IPython and Jupyter provide tools for interactive computing that are
widely used in scientific computing, education, and data science, but
can benefit any Python developer.&lt;/p&gt;
&lt;p&gt;In this tutorial we will introduce you to the latest developement in
IPython and Jupyter, get you up to speed on how to install jupyter on
your machine and where to seek help for larger deployment. Then we will
dive into intermediate features that makes the power of IPython and
Jupyter.&lt;/p&gt;
&lt;p&gt;We will dive into how to make the best use of features like&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Async REPL (New in IPython 7)&lt;/li&gt;
&lt;li&gt;And how to tie that into the Visualisation capabilities of Jupyter,
and the new JupyterLab interface.&lt;/li&gt;
&lt;li&gt;Widgets (building simple interactive dashboards based on ipywidgets)&lt;/li&gt;
&lt;li&gt;Magics&lt;/li&gt;
&lt;li&gt;Multilanguage integration,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The notebooks also allow for code in multiple languages allowing to mix
Python with Cython, C, R and other programming languages to access
features hard to obtain from Python.&lt;/p&gt;
&lt;div class="section" id="more-info"&gt;
&lt;h4&gt;More info&lt;/h4&gt;
&lt;p&gt;For full details about IPython including documentation, previous
presentations and videos of talks, please see &lt;a class="reference external" href="http://ipython.org"&gt;the project
website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The materials for this tutorial will be &lt;a class="reference external" href="https://github.com/ipython/ipython-in-depth"&gt;available on a github
repository&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthias Bussonnier</dc:creator><pubDate>Thu, 02 May 2019 09:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-02:pycon-us-2019/ipython-and-jupyter-in-depth-high-productivity-interactive-python.html</guid><category>tutorial</category></item><item><title>Python and NET: Why use both?</title><link>https://pyvideo.org/pytexas-2017/python-and-net-why-use-both.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python for .NET (pythonnet, Python.NET) allows two-way inter-operability between Python and CLR runtimes on Windows, Linux, OSX, and even Linux subsystem on Windows! This presentation is going to show how to use Python code from .NET and .NET assemblies from Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Denis Akhiyarov</dc:creator><pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-11-19:pytexas-2017/python-and-net-why-use-both.html</guid></item><item><title>Python for NET or NET for Python</title><link>https://pyvideo.org/pydata-seattle-2017/python-for-net-or-net-for-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For long time .NET developers wanted to tap into the rich libraries from SciPy and PyData communities. Bridging .NET and CPython runtimes is the easiest approach to solving this problem. Python for .NET (pythonnet, Python.NET) makes this possible by wrapping CPython C-API from C# in .NET and Mono runtimes. This also allows two-way interoperability between both runtimes on Windows, Linux, and OSX (MacOS), and even Linux subsystem on Windows! This presentation is going to show how to use Python code from .NET and .NET assemblies from Python. Particular importance in Python.NET is given to installation options: Python wheels, conda and nuget binaries, docker images, and even distribution with WinPython. The deployment is also simplified with tools such as PyInstaller and cx_freeze. This presentation will show how to install and deploy Python.NET apps using these tools. In this talk we are going to show how to call numpy, scipy, pandas, matplotlib, sympy, and pyomo from .NET without much boilerplate code. The second part will show how to use .NET from Python, particularly C# magic cells (clrmagic) in ipython kernel with Jupyter Notebooks. The Python.NET tutorial was converted to Jupyter Notebook and C# code cells that are embedded within the same notebook. This presentation will show few demos with REPL experience both from C# and Python using IPython, scriptcs, and Visual Studio. All libraries used in this presentation are open-source and available on all major platforms. Python for .NET is a library developed since 2003, which &amp;quot;graduated&amp;quot; from Zope, moved to SourceForge and eventually to GitHub, where it became widely used and adopted. This talk will also demonstrate clrmagic - Jupyter extension, built on top of pythonnet and developed by authors of this presentation. Python.NET is built with a number of open-source technologies. It uses pycparser, ply, and clang (gcc and MSVC also work) for parsing internal CPython structures. .NET types are exposed to Python with Unmanaged Exports (DllExport) open-source &amp;quot;compiler&amp;quot; on Windows. On other platforms, C-API of Mono and CPython are used to &amp;quot;bootstrap&amp;quot; both runtimes. Python.NET is used by financial algorithmic trading platforms, engineering companies, and few open-source projects: QuantConnect Lean, pywebview, Pybee Beeware Toga cross-platform UI toolkit. Python.NET enables large .NET applications to embed numerical Python libraries without boilerplate code and without sacrificing for performance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Denis Akhiyarov</dc:creator><pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-06:pydata-seattle-2017/python-for-net-or-net-for-python.html</guid></item></channel></rss>