<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 01 Jun 2018 00:00:00 +0000</lastBuildDate><item><title>Writing robust, readable, and maintainable concurrent programs in Python</title><link>https://pyvideo.org/pycon-apac-2018/writing-robust-readable-and-maintainable-concurrent-programs-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Threading, futures, coroutines, asyncio, celery, and gevent. What are
the differences among these concurrency techniques? This presentation
tries to make clear different concurrency models supported by Python and
which libraries are best suited for the different problems that each
model solves.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wilson Tjhi</dc:creator><pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-06-01:pycon-apac-2018/writing-robust-readable-and-maintainable-concurrent-programs-in-python.html</guid></item></channel></rss>