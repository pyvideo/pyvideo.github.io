<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-korea-2014.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-08-30T00:00:00+00:00</updated><entry><title>30분만에 따라하는 동시성 웹 스크래퍼</title><link href="https://pyvideo.org/pycon-korea-2014/30bunmane-ddarahaneun-dongsiseong-web-seukeuraepeo.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>강철</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/30bunmane-ddarahaneun-dongsiseong-web-seukeuraepeo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;빅데이터, 데이터마이닝, 공공데이터, 오픈데이터 - 그 어느때보다 데이터
분석 및 활용이 중요해진 이 시기에 웹 상의 수많은 공개된 자료를 직접
수집할 수 있는 웹 스크래핑/크롤링 기술은 데이터 수집 및 활용 능력에 큰
도움이 됩니다.&lt;/p&gt;
&lt;p&gt;이 강의에서는 크롤링 프레임웍을 사용하지 않고 HTTP, DOM, concurrency를
담당하는 기본적인 라이브러리만을 사용해 직접 웹 스크래퍼를 처음부터(from
scratch) 작성해 봄으로써, 언제든 자유도 높은 동시성 크롤러를 직접 구현할
수 있도록 작동 원리를 이해할 수 있도록 합니다.&lt;/p&gt;
</summary></entry><entry><title>DNA 데이터로 가족찾기</title><link href="https://pyvideo.org/pycon-korea-2014/dna-deiteoro-gajogcajgi.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>김형용</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/dna-deiteoro-gajogcajgi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DNA 데이터를 이용해서, 동일성, 부모자식관계, 친척관계를 검색할 수 있는
데이터베이스 어플리케이션을 Pandas와 Mongodb로 구현한 예를 알기 쉽게
설명합니다.&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h4&gt;주요 목차&lt;/h4&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;유전변이의 종류, A-STR, Y-STR, mtDNA&lt;/li&gt;
&lt;li&gt;DNA 식별정보 검사와 검색&lt;/li&gt;
&lt;li&gt;근사검색 (approximate search)&lt;/li&gt;
&lt;li&gt;Pandas와 Mongodb를 이용한 데이터베이스 어플리케이션 구현&lt;/li&gt;
&lt;li&gt;검색결과의 조합&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;발표 슬라이드: &lt;a class="reference external" href="https://speakerdeck.com/yong27/dna-deiteoro-gajogcajgi"&gt;https://speakerdeck.com/yong27/dna-deiteoro-gajogcajgi&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>개회사</title><link href="https://pyvideo.org/pycon-korea-2014/gaehoesa.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>장혜식</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/gaehoesa.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;파이콘 한국 2014의 개회사&lt;/p&gt;
</summary></entry><entry><title>Geofront 개발 후기: Python 2와 작별하고 Python 3로 개발하기</title><link href="https://pyvideo.org/pycon-korea-2014/geofront-gaebal-hugi-python-2wa-jagbyeolhago-python-3ro-gaebalhagi.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>홍민희</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/geofront-gaebal-hugi-python-2wa-jagbyeolhago-python-3ro-gaebalhagi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Geofront는 소규모 팀에서 운영하는 서버에 인증하는 SSH 키를 관리하기 위한
오픈 소스 소프트웨어입니다. (Geofront 자체에 대한 설명은 스포카 개발팀
블로그에 올라온 &lt;a class="reference external" href="http://spoqa.github.io/2014/07/09/geofront.html"&gt;Geofront: 소규모 팀을 위한 SSH 키 관리
서비스&lt;/a&gt;를
읽어주세요.)&lt;/p&gt;
&lt;p&gt;Geofront는 Python 3 전용으로 작성되었는데, Python 3만 사용하여 개발하며
경험한 바를 공유합니다.&lt;/p&gt;
&lt;p&gt;주로 Python 2를 쓸 때에 비교해서 Python 3를 쓰면 어떤 점이 좋은지, 과연
이제 정말 Python 3를 써도 괜찮은 것인지, Python 3를 쓸 때 유의해야할
것이 무엇이 있는지를 다루려고 합니다.&lt;/p&gt;
</summary></entry><entry><title>IPython과 Pandas를 활용한 게임데이터 분석</title><link href="https://pyvideo.org/pycon-korea-2014/ipythongwa-pandasreul-hwalyonghan-geimdeiteo-bunseog.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>김정주</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/ipythongwa-pandasreul-hwalyonghan-geimdeiteo-bunseog.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;IPython Notebook의 편리한 기능과 Pandas의 강력한 데이터 분석 능력으로
게임 로그 분석 시스템(WzDat)을 구축한 사례를 소개합니다. 다음과 같은
내용을 포함하고 있습니다:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;윈도우 게임서버에서 리눅스로의 데이터 포워딩&lt;/li&gt;
&lt;li&gt;90,000개의 로그 파일에서 원하는 것 찾아내기&lt;/li&gt;
&lt;li&gt;로그 파일의 내용을 검색하고 Pandas의 DataFrame으로 변환&lt;/li&gt;
&lt;li&gt;IPython에서 데이터 분석하고 그래프 그리기&lt;/li&gt;
&lt;li&gt;대시보드를 통해 공유하기&lt;/li&gt;
&lt;li&gt;시스템을 만들며 배운 점들&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>제약을 넘어 : Gevent</title><link href="https://pyvideo.org/pycon-korea-2014/jeyageul-neomeo-gevent.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>정민영</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/jeyageul-neomeo-gevent.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python에는 몇가지 제약이 있습니다. 물론, 그런 이유로 Python을 멀리할
필요는 없습니다. 주로 I/O에 있어서 어떤 제약이 있는지, 또 쓰고 싶은
Python을 마음껏 쓰면서 그 제약을 어떻게 극복하는지 논해보고자 합니다.
사실, 제약을 극복하기 위해 많은걸 할 필요도 없지만요.&lt;/p&gt;
&lt;p&gt;발표 자료는,
&lt;a class="reference external" href="https://speakerdeck.com/kkung/jeyageul-neomeo-gevent"&gt;Speakerdeck&lt;/a&gt;에서
확인해 보실 수 있습니다.&lt;/p&gt;
&lt;p&gt;감사합니다.&lt;/p&gt;
</summary></entry><entry><title>네트워크 엔지니어들을 위한 Python</title><link href="https://pyvideo.org/pycon-korea-2014/neteuweokeu-enjinieodeuleul-wihan-python.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>김창민</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/neteuweokeu-enjinieodeuleul-wihan-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;클라우드 컴퓨팅 환경을 비롯하여 SDN(Software Defined Networking) 그리고
네트웍 가상화 등을 포함해서 현재 데이터센터를 구성하는 네트웍에 대해 큰
변화가 일어나고 있습니다.&lt;/p&gt;
&lt;p&gt;이러한 변화를 수용하기 위해서 지금까지의 네트웍 장비들과는 전혀 다른
하드웨어와 소프트웨어 아키텍쳐를 기반으로 이더넷 스위치 장비들이
변화되고 있습니다.&lt;/p&gt;
&lt;p&gt;해당 발표 내용에서는 이러한 데이터센터에 사용되는 이더넷 스위치들의
발전과 변화 그리고 데이터센터 네트웍의 제어/관리/운영 등에 Python이
어떻게 사용되는지 등의 내용을 전달해 드리고 아리스타 네트웍스에서 개발한
JSON-RPC 기반 REST API인 eAPI를 활용한 Python scripting 그리고 Python
기반의 ZTP(Zero Touch Provisioning) 서버를 활용한 데이터센터
인프라스트럭쳐 자동화 그리고 Ansible을 활용한 데이터센터 스위치
configuration 관리 등에 대해 설명 드리고 싶습니다.&lt;/p&gt;
</summary></entry><entry><title>NetworkX를 이용한 네트워크 분석</title><link href="https://pyvideo.org/pycon-korea-2014/networkxreul-iyonghan-neteuweokeu-bunseog.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>김경훈</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/networkxreul-iyonghan-neteuweokeu-bunseog.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="section" id="networkx"&gt;
&lt;h4&gt;NetworkX 소개&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;네트워크?&lt;/li&gt;
&lt;li&gt;네트워크 그리기&lt;/li&gt;
&lt;li&gt;네트워크 계산&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h4&gt;사용 예제&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;드라마 대본 네트워크&lt;/li&gt;
&lt;li&gt;프로그래밍 언어 네트워크&lt;/li&gt;
&lt;li&gt;페이스북 친구 네트워크&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h4&gt;결론&lt;/h4&gt;
&lt;p&gt;SNA 또는 Complex Network Analysis 등, 네트워크 분석은 파이썬을 이용하여
쉽게 진행할 수 있다.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>PyCon Korea 2014 Lightning talks</title><link href="https://pyvideo.org/pycon-korea-2014/pycon-korea-2014-lightning-talks.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/pycon-korea-2014-lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;각 발표자가 10분간 진행하는 라이트닝 토크입니다.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pycon.kr/2014/programs/speaker/darjeeling"&gt;배권한&lt;/a&gt; -
&lt;a class="reference external" href="http://www.pycon.kr/2014/program/28"&gt;파이콘 한국 2014 점철된 행운, 그리고
미래&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pycon.kr/2014/programs/speaker/kakung_kim"&gt;김가경&lt;/a&gt; -
&lt;a class="reference external" href="http://www.pycon.kr/2014/program/18"&gt;IPython으로 상호적, 재현 가능한 생물정보학
연구하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pycon.kr/2014/programs/speaker/daesung_kang"&gt;강대성&lt;/a&gt; -
&lt;a class="reference external" href="http://www.pycon.kr/2014/program/19"&gt;국민내비 김기사와 Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pycon.kr/2014/programs/speaker/lqez"&gt;박현우&lt;/a&gt; - &lt;a class="reference external" href="http://www.pycon.kr/2014/program/26"&gt;그릇된
팬심의 어긋난 결말&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Python 3.4: AsyncIO</title><link href="https://pyvideo.org/pycon-korea-2014/python-34-asyncio.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>배준현</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/python-34-asyncio.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;비동기와 코루틴에 대한 간단한 설명과 함께 Python 3.4에 추가된
Asynchronous I/O 라이브러리인 asyncio에 대해 설명하고, 기존에 나와있는
gevent 등의 프레임워크와의 차별점에 대해 설명합니다.&lt;/p&gt;
&lt;p&gt;그리고 기존에 threading 기반으로 짜여져있던 간단한 HTTP 투명 프록시를
asyncio로 다시 짜는 과정을 통해 코드를 비교하여 파이썬에서 비동기 작업을
구현하는 방법에 대해 논의해봅니다.&lt;/p&gt;
</summary></entry><entry><title>Python with Cloud For Startup</title><link href="https://pyvideo.org/pycon-korea-2014/python-with-cloud-for-startup.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>한상곤</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/python-with-cloud-for-startup.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;클라우드 기반 서비스를 위한 파이썬 개발자를 위해서 쉽고 빠른 클라우드
서비스 기반 개발환경 구축 및 사용경험을 나누고자 합니다.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;스타트업, 선택의 순간&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;우린 스타트업&lt;/li&gt;
&lt;li&gt;부족함을 매우는 방법&lt;/li&gt;
&lt;li&gt;파이썬과 속도&lt;/li&gt;
&lt;li&gt;파이썬 사용시 발생한 사소한 문제{ 버전 충돌, 약형언어, 테스트 }와
해결&lt;/li&gt;
&lt;li&gt;쉽고 빠른 개발을 위한 노력&lt;/li&gt;
&lt;li&gt;좋은 IDE와 개발환경&lt;/li&gt;
&lt;li&gt;강력한 개발서버&lt;/li&gt;
&lt;li&gt;좋은 팀원&lt;/li&gt;
&lt;li&gt;제국의 역습&lt;/li&gt;
&lt;li&gt;결론&lt;/li&gt;
&lt;li&gt;잘 만들어진 생태계&lt;/li&gt;
&lt;li&gt;완성도 높은 언어&lt;/li&gt;
&lt;li&gt;커뮤니티 그리고 여러분들&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Python기반의 MySQL Fabric을 이용한 샤딩 및 확장</title><link href="https://pyvideo.org/pycon-korea-2014/pythongibanyi-mysql-fabriceul-iyonghan-syading-mic-hwagjang.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>Kajiyama Ryusuke</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/pythongibanyi-mysql-fabriceul-iyonghan-syading-mic-hwagjang.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MySQL Fabric은 현재 MySQL을 위한 확장 및 고가용성(HA) 를 지원하기 위한
open source framework입니다. Python으로 작성된 MySQL Fabric 은 오라클
MySQL 엔지니어링팀에서 릴리즈했습니다. MySQL 서버 팜을 쉽게 관리할 수
있으며, 적은 수의 서버를 가진 어플리케이션이든 많은 수의 서버를 가진
어플리케이션이든 상관없이 이용가능합니다.&lt;/p&gt;
&lt;p&gt;이 세션에서 MySQL Fabric에 대한 소개 및 고가용성 및 샤팅을 어떻게
지원하는지 그리고 MySQL Fabric의 최신 기능들의 장점을 이용해
어플리케이션을 작성하고 관리하는지에 대해 아시게 되실겁니다.&lt;/p&gt;
</summary></entry><entry><title>SociaLite: 빅 데이터 분석을 위한 파이썬 통합 쿼리 언어</title><link href="https://pyvideo.org/pycon-korea-2014/socialite-big-deiteo-bunseogeul-wihan-paisseon-tonghab-kweori-eoneo.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>서지원</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/socialite-big-deiteo-bunseogeul-wihan-paisseon-tonghab-kweori-eoneo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SociaLite은 대용량 그래프와 데이터 분석을 위해 개발된 쿼리언어 및 런타임
시스템입니다&lt;/p&gt;
&lt;p&gt;SQL정도의 고수준의 쿼리 언어로 데이터 분석 코드를 구현하면, SociaLite
컴파일러가 여러가지 optimization을 적용해서 매우 효율적인
병렬/분산코드로 컴파일합니다. 컴파일된 코드는 Hadoop에 비해서 1000배
이상 빠르며, 알고리즘에 따라서 C로 구현된 (최적화된) 병렬코드와 비슷한
성능을 낼 수 있습니다.&lt;/p&gt;
&lt;p&gt;SociaLite에서 제공하는 추상화(abstraction)은 대용량 데이터 분석을 매우
쉽게 만들어줍니다. 예를 들어, in-memory 분산 테이블을 이용해서 데이터를
쉽게 분산해서 저장할 수 있고, 또 아주 쉽게 distributed join
operation등을 적용할 수 있도록 합니다.&lt;/p&gt;
&lt;p&gt;또한, SociaLite은 파이썬과 잘 통합되어 있어서 파이썬 코드와 SociaLite
쿼리를 섞어서 사용해서 데이터 분석 코드를 구현할 수 있습니다. 파이썬
코드 중간에 SociaLite 쿼리를 사용할 수 있으며, 쿼리 내에서 파이썬 변수나
함수들을 사용해서 programming logic을 구현할 수 있습니다. 파이썬과의
통합은 여러가지 데이터 분석/마이닝 알고리즘을 쉽게 구현할 수 있도록 해
주는데, 예를 들어서 K-Means clustering algorithm은 몇줄 이내의 query와
파이썬 함수로 병렬 및 분산된 version을 구현할 수 있습니다.&lt;/p&gt;
&lt;p&gt;이 발표에서는 SociaLite 쿼리언어 소개 및 구현 technique들을 설명할
예정이며, 시간이 된다면 Gephi (graph visualization framework) 를 이용한
데모도 할 예정입니다.&lt;/p&gt;
</summary></entry><entry><title>위대한 dict 이해하고 사용하기</title><link href="https://pyvideo.org/pycon-korea-2014/widaehan-dict-ihaehago-sayonghagi.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>구종만</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/widaehan-dict-ihaehago-sayonghagi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;사전(dict) 클래스는 파이썬의 가장 핵심적인 자료 구조로, 좋은 파이썬
코드를 작성하기 위해서는 dict에 대해 잘 이해하는 것이 필수적입니다.&lt;/p&gt;
&lt;p&gt;이 발표에서는 dict가 사용되는 곳, 동작 원리, 사용시의 주의 사항 등에
대해 얘기하고 defaultdict나 OrderedDict, Counter와 같은 변종 클래스를
소개하고자 합니다.&lt;/p&gt;
</summary></entry></feed>