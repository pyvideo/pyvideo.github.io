<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_python2.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-04-09T00:00:00+00:00</updated><entry><title>Attack of Pythons : Gotchas and Landmines in Python</title><link href="https://pyvideo.org/pycon-italia-2017/attack-of-pythons-gotchas-and-landmines-in-python.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Manoj Pandey</name></author><id>tag:pyvideo.org,2017-04-09:pycon-italia-2017/attack-of-pythons-gotchas-and-landmines-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python may be one of the simplest and most flexible programming
languages out there, but it is still a programming language. It still
has syntax, data types, and some occasional dark corners. Python “warts”
are things for which people have criticised Python, typically aspects of
the language or mechanisms of its implementation, because such aspects
either expose certain surprising inconsistencies, are regarded as
omissions, or cause irritation for parts of the community in some sense.&lt;/p&gt;
&lt;p&gt;This talk will be about common pitfalls (termed warts/landmines) that
people face using Python programming language.&lt;/p&gt;
</summary><category term="features"></category><category term="warts"></category><category term="bugs"></category><category term="landmines"></category><category term="dark-corners"></category><category term="python2"></category></entry><entry><title>Python 3: the next generation is here already</title><link href="https://pyvideo.org/pycon-us-2011/python-3-the-next-generation-is-here-already.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Wesley J. Chun</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/python-3-the-next-generation-is-here-already.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3: the next generation is here already&lt;/p&gt;
&lt;p&gt;Presented by wesley chun&lt;/p&gt;
&lt;p&gt;This talk is about the evolution of Python. We will discuss Python 2 and
Python 3: what the compatibility issues are, what the main differences
are, and also talk about migration, Python 2.6/2.7, and other transition
tools.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Python is currently at a crossroads: Python 2 has taken it from a quiet
word- of-mouth language to primetime, with many companies around the
world using it and an ever-increasing global marketshare of the
programming world. But now comes Python 3, the first version of the
language that is not backwards compatible with previous releases.&lt;/p&gt;
&lt;p&gt;What does this mean? Are all my Python programs going to break? Will I
have to rewrite everything? How much time do I have? When is Python 2
going to be EOL'd? Is the language undergoing a complete rewrite and
will I even recognize it? What are the changes between Python 2 and 3
anyway? Also, the next generation is already here, as Python 3 is over
two years old now. What has been ported so far, and what is its current
status? Are migration plans or transition tools available? If I want to
start learning Python, should I do Python 2 or Python 3? Are all Python
2 books obsolete?&lt;/p&gt;
&lt;p&gt;We will attempt to answer all of these questions and more. Join us!&lt;/p&gt;
&lt;p&gt;OUTLINE/TOPICS&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python 2 vs. Python 3&lt;/li&gt;
&lt;li&gt;Introduction to Python 3&lt;/li&gt;
&lt;li&gt;Backwards Compatibility&lt;/li&gt;
&lt;li&gt;Generational Changes&lt;/li&gt;
&lt;li&gt;Key Differences&lt;/li&gt;
&lt;li&gt;Role of Remaining Python 2.x releases&lt;/li&gt;
&lt;li&gt;Transition &amp;amp; Migration Plans &amp;amp; Tools&lt;/li&gt;
&lt;li&gt;Futures&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="2to3"></category><category term="pycon"></category><category term="pycon2011"></category><category term="python2"></category><category term="python3"></category></entry></feed>