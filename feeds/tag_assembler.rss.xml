<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 05 May 2019 00:00:00 +0000</lastBuildDate><item><title>Ternary CPUs: how they work and how Python helps designing one</title><link>https://pyvideo.org/pycon-italia-2019/ternary-cpus-how-they-work-and-how-python-helps-designing-one.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;0/1, False/True, off/on, etc.: the computers which we’re working on are
based, from very long time, on the so called binary arithmetic/logic.&lt;/p&gt;
&lt;p&gt;“Two states to rule them all&amp;quot;: with these we built a complete ecosystem
which goes from the hardware to the software… showing even this text
that you’re reading now.&lt;/p&gt;
&lt;p&gt;However the possibility to use the ternary logic instead, that started
just a joke some years ago, generated recent papers and researches about
it, with interesting features exploited and documented.&lt;/p&gt;
&lt;p&gt;An FPGA project is in development to implement a “ternary CPU” and an
ISA (Instruction Set Architecture) draft was roughly defined (and
evolving).&lt;/p&gt;
&lt;p&gt;But a CPU without code to execute is useless and here comes Python,
which allows to quickly implement (and test) some simple, primitive
assembler to generate executables (&amp;quot;ternaries”?), which can then be
transferred to the FPGA board and run.&lt;/p&gt;
&lt;p&gt;A basic emulator with a minimal set of instructions is implemented, in
order to test the code even without the physical board.&lt;/p&gt;
&lt;p&gt;This talk provides a short overview of the ternary logic, some
challenges, and how the basic assembler and emulator are written,
tested, and work.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1793"&gt;https://python.it/feedback-1793&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Sunday 5 May&lt;/strong&gt; at 10:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cesare Di Mauro</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-05:pycon-italia-2019/ternary-cpus-how-they-work-and-how-python-helps-designing-one.html</guid><category>TernaryLogic</category><category>Assembler</category><category>emulator</category><category>CPU</category></item></channel></rss>