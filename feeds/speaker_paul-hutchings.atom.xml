<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Paul Hutchings</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_paul-hutchings.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2024-07-28T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Zen Commandments</title><link href="https://pyvideo.org/pyohio-2024/zen-commandments.html" rel="alternate"></link><published>2024-07-28T00:00:00+00:00</published><updated>2024-07-28T00:00:00+00:00</updated><author><name>Paul Hutchings</name></author><id>tag:pyvideo.org,2024-07-28:/pyohio-2024/zen-commandments.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the 20th anniversary of the Zen of Python coming up in August, now
is the perfect time to reflect on how it has influenced the evolution of
the Python language and how we write software in Python over the last 2
decades. Has Python moved closer to the â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the 20th anniversary of the Zen of Python coming up in August, now
is the perfect time to reflect on how it has influenced the evolution of
the Python language and how we write software in Python over the last 2
decades. Has Python moved closer to the ideals expounded in the Zen, or
has it drifted further away? Like many great software engineering
principles, different portions of the PEP are in contention with each
other at times, which can be revealed in the features and patterns of
the language. What does the current relationship between the language
and the PEP say about the Python community and ecosystem as a whole, as
well as perhaps the most important question: is the Zen of Python still
relevant today?&lt;/p&gt;
</content><category term="PyOhio 2024"></category></entry></feed>