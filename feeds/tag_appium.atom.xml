<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_appium.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-05-12T00:00:00+00:00</updated><entry><title>Controlling apples with snakes: Automating mobile apps with Appium</title><link href="https://pyvideo.org/pycon-us-2018/controlling-apples-with-snakes-automating-mobile-apps-with-appium.html" rel="alternate"></link><published>2018-05-12T00:00:00+00:00</published><updated>2018-05-12T00:00:00+00:00</updated><author><name>Nir Arad</name></author><id>tag:pyvideo.org,2018-05-12:pycon-us-2018/controlling-apples-with-snakes-automating-mobile-apps-with-appium.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing mobile applications is hard. Testing manually is nearly impossible.
Thatâ€™s where automated testing shines. Just sit back and watch the machine go!
Python is a very powerful language for writing automated tests, but since Python is not installed on mobile platforms, we need to find a way to remotely control and monitor the device.
But how do we automate a device remotely? The answer is Appium.&lt;/p&gt;
&lt;p&gt;In this talk I will go over the process of deploying and testing iOS (or Android) applications, and how to work with Appium to easily generate Python 3 code for testing your application.&lt;/p&gt;
</summary><category term="appium"></category><category term="testing"></category><category term="mobile"></category></entry></feed>