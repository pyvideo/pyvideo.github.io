<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Adrian Garcia Badaracco</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 08 Oct 2023 13:30:00 +0000</lastBuildDate><item><title>Type safe data validation using Pydantic v2</title><link>https://pyvideo.org/pybay-2023/Type_safe_data_validation_using_Pydantic_v2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will introduce Pydantic users, old or new, to the new APIs available in Pydantic v2, best practices for using them, and some of the powerful new features we added support for, like PEP 593's &lt;cite&gt;Annotated&lt;/cite&gt; and PEP 695's &lt;cite&gt;TypeAliasType&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;We'll then dive deeper into how Pydantic v2 interacts with Python's type system, what we've learned from that, and how we can improve runtime &amp;lt;-&amp;gt; static typing interactions even more.&lt;/p&gt;
&lt;p&gt;Finally, we'll touch on some of the internals of Pydantic, including our use of Rust and how we've essentially ended up building a DSL that translates type hints and snippets of arbitrary user-defined logic into a DAG of computations in Rust (i.e. how we accidentally built a compiler).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrian Garcia Badaracco</dc:creator><pubDate>Sun, 08 Oct 2023 13:30:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-10-08:/pybay-2023/Type_safe_data_validation_using_Pydantic_v2.html</guid><category>PyBay 2023</category></item><item><title>Inside your web framework: intro to the ASGI spec, middleware and apps</title><link>https://pyvideo.org/pycon-us-2023/inside-your-web-framework-intro-to-the-asgi-spec-middleware-and-apps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What do FastAPI and Django have in common? They both use ASGI under the
hood. ASGI, which stands for Asynchronous Server Gateway Interface, is a
specification and API for asynchronous, event-driven web applications.
The goal of this talk is to peel back the curtain on the internals of
this specification and empower you to debug ASGI apps, write custom ASGI
middleware, and simplify application lifecycles and serving.&lt;/p&gt;
&lt;p&gt;We will begin by discussing the basics of the ASGI specification and how
it works. Then, we will move on to writing a simple ASGI app using pure,
hand-crafted Python, without any frameworks or libraries. After that, we
will cover ASGI middleware, which is a powerful tool that allows us to
modify the behavior of our ASGI apps without changing the underlying
code. We will show how to write custom middleware and how to use it to
add features such as authentication or request body processing. Finally,
we will discuss the serving of ASGI applications, focusing on how to use
Uvicorn programmatically and take control of your event loop.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrian Garcia Badaracco</dc:creator><pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2023-04-22:/pycon-us-2023/inside-your-web-framework-intro-to-the-asgi-spec-middleware-and-apps.html</guid><category>PyCon US 2023</category></item></channel></rss>