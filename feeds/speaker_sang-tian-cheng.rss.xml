<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 16 Sep 2012 00:00:00 +0000</lastBuildDate><item><title>Fantastic DSL in Python - PythonでつくるDSLのテクニック -</title><link>https://pyvideo.org/pycon-japan-2012/fantastic-dsl-in-python-pythondetsukurudslnotekunitsuku-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;いろんな書き方をあえて許容しないPythonの文法は、コードの可読性を大きく高めますが、一方で文法の強制力が強いために柔軟性にはやや欠けます。 特にDSL (Domain Specific Language) を設計するうえでは、自由な書き方が制限されるというPythonの性質上、様々な困難が生じます。
本発表では、筆者が過去に作成したプロダクト (Oktest, Tenjin, Benchmarker, Kook, etc) の経験をもとに、PythonでDSLを設計するうえでの問題点と解決策を、豊富な具体例を使って紹介します。
Python’s code is very readable because Python doesn’t allow users to write code in various ways. But as the other side, there is less “syntax freedom” due to Python’s nature. This will be large restriction when you design DSL (Domain Specific Language) in Python.
In this session, I’ll show you problems and solutions about DSL design in Python which were happened through development of my products (Oktest, Tenjin, Benchmarker, Kook, etc).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">桑田 誠</dc:creator><pubDate>Sun, 16 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-16:pycon-japan-2012/fantastic-dsl-in-python-pythondetsukurudslnotekunitsuku-.html</guid><category>dsl</category></item></channel></rss>