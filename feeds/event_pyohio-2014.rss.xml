<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 27 Jul 2014 00:00:00 +0000</lastBuildDate><item><title>Bobo, a web framework that's easy to learn and remember</title><link>https://pyvideo.org/pyohio-2014/bobo-a-web-framework-thats-easy-to-learn-and-re.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Bobo is a lightweight web framework designed to be easy to use and
remember. In this talk, I'll give an introduction to Bobo. I'll discuss
micro-frameworks and why they aren't limited to small problems.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jim Fulton</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/bobo-a-web-framework-thats-easy-to-learn-and-re.html</guid><category>talk</category></item><item><title>Building Web APIs with Flask-RESTful</title><link>https://pyvideo.org/pyohio-2014/building-web-apis-with-flask-restful.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Flask framework’s DIY nature makes it ideal for implementing REST
APIs. Flask-RESTful is a Flask extension providing reusable, extensible
behavior for common elements of REST APIs like content negotiation,
input validation, and output marshalling. This talk will show how to use
Flask-RESTful to build a REST API, demonstrating how to start from a
blueprint to adapt it for your own use cases.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Kimbrel</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/building-web-apis-with-flask-restful.html</guid><category>talk</category></item><item><title>Configman - the grand unified theorem of configuration</title><link>https://pyvideo.org/pyohio-2014/configman-the-grand-unified-theorem-of-configur.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Have you ever noticed that none of the the Pythonic methods of
configuration are compatible with each other? Command line modules know
nothing of the multiple types of configuration files or environment
variables. Configman, the grand unified theorem of configuration, unites
them all, giving a single API for all configuration and offering an
inadvertent dependency injection framework with it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">K Lars Lohn</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/configman-the-grand-unified-theorem-of-configur.html</guid><category>talk</category></item><item><title>Digging into Abstract Syntax Trees for analyzing and modifying Python programs</title><link>https://pyvideo.org/pyohio-2014/digging-into-abstract-syntax-trees-for-analyzing.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will explain how the python interpreter uses the ast module to
turn the code you write into Abstract Syntax Trees which are then
executed. With an understanding of these underlying techniques we'll
examine static analysis tools such as pyflakes and talk about how to
create programs that analyze the structure of python scripts.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Haney</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/digging-into-abstract-syntax-trees-for-analyzing.html</guid><category>talk</category></item><item><title>Djangular</title><link>https://pyvideo.org/pyohio-2014/djangular.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;AngularJS is a powerful JavaScript MVC Framework that is growing in
popularity among developers every day. Paired with the power of Django's
ORM and the Django Rest Framework, developers can build complex
applications that enforce good client side and server side separation.
This talk will be a walk-through of the Django Tutorial using AngularJS
on the front end.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Camilli</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/djangular.html</guid><category>talk</category></item><item><title>Five Ounce Racer - Revving Up Pinewood Derby Software in Python</title><link>https://pyvideo.org/pyohio-2014/five-ounce-racer-revving-up-pinewood-derby-soft.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will tour you through the ins-and-outs of running a pinewood
derby, my experience revving up in Python to build the derby software,
and how the choice to learn Python over the alternatives provided all
the fuel necessary to make the job fast and fun. Revving up on Python
had its challenges, but also got me across the finish line with a
working product and time to spare.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt McElheny</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/five-ounce-racer-revving-up-pinewood-derby-soft.html</guid><category>talk</category></item><item><title>HOWTO: Teach Python to Read</title><link>https://pyvideo.org/pyohio-2014/howto-teach-python-to-read.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Not all data is numeric! People find words a more efficient means of
communication. Manually analyzing text can be slow, subjective and
inconsistent. Fortunately, the Natural Language ToolKit (NLTK) is ready
to help. NLTK can perform many techniques in natural language processing
(NLP) and ships with many corpora. This talk will survey fundamental NLP
methods and how to use them with NLTK.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Douglas  Starnes</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/howto-teach-python-to-read.html</guid><category>talk</category></item><item><title>Implementing Celery, Lessons Learned</title><link>https://pyvideo.org/pyohio-2014/implementing-celery-lessons-learned.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will include a walkthrough of using Celery and RabbitMQ. We
will cover actual issues found and fixed during an actual
implementation. such as Queues in stage and production. Handling
Failures. Retries, Failure Queues, and Logging. Integrating with SQL
Alchemy for producers and consumers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Robellard</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/implementing-celery-lessons-learned.html</guid><category>talk</category></item><item><title>Machine learning the hard way -- a story about ponies</title><link>https://pyvideo.org/pyohio-2014/machine-learning-the-hard-way-a-story-about-po.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Before you dive into a machine learning project, learn from the mistakes
that I made while building a prediction engine for betting on horse
races. In this introductory talk, learn about common data science tasks
like data munging, pre-processing, classification, regression, and
interpreting results.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan Taggart</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/machine-learning-the-hard-way-a-story-about-po.html</guid><category>talk</category></item><item><title>Painting on a Distributed Canvas: An Advanced Guide to Celery Workflows</title><link>https://pyvideo.org/pyohio-2014/painting-on-a-distributed-canvas-an-advanced-gui.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Celery is great for asynchronously sending emails from your web app. But
what happens when you grow beyond simple &amp;quot;set it and forget it&amp;quot; tasks?
This talk explores Celery's workflow primitives and how to create
complex distributed applications. It assumes knowledge of Python and
Celery. By the end, you will better understand how to structure
distributed work that robustly scales.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Gouldin</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/painting-on-a-distributed-canvas-an-advanced-gui.html</guid><category>talk</category></item><item><title>Python, Hardware, Networks and your toolbox for Interactive Art.</title><link>https://pyvideo.org/pyohio-2014/python-hardware-networks-and-your-toolbox-for-i.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Issac builds art and tells stories professionally with hardware and
software. With an extraordinary project come extraordinary challenges.
Having the right toolkit keeps you nimble enough to forge into the
unknown with confidence. In this talk we'll explore a contrived art
project with hardware, software, and networks, built with Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Issac Kelly</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/python-hardware-networks-and-your-toolbox-for-i.html</guid><category>talk</category></item><item><title>Recognizing Speech in Python</title><link>https://pyvideo.org/pyohio-2014/recognizing-speech-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;When it comes to computing heavy application such as recognizing speech,
there is a tendency to move towards statically typed compiled languages
citing speed. However I have built a speech recognizer completely in
Python and able to achieve very good performance with it and hence would
like to give a demo of it and share my experience.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anoop Hallur</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/recognizing-speech-in-python.html</guid><category>talk</category></item><item><title>Software Radio with CTypes</title><link>https://pyvideo.org/pyohio-2014/software-radio-with-ctypes.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The RTL-SDR is a ~$20 USB stick made for watching the European digital
TV DVB standard. It was discovered it can also be a general purpose
radio receiver and spectrum analyzer. We will evaluate these devices by
listening to broadcast FM or emergency frequencies, and demonstrate an
original open source Python library I wrote for them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Winningham</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/software-radio-with-ctypes.html</guid><category>talk</category></item><item><title>The Clean Architecture in Python</title><link>https://pyvideo.org/pyohio-2014/the-clean-architecture-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Even design-conscious programmers find large applications difficult to
maintain. Come learn about how the recently propounded “Clean
Architecture” applies in Python, and how this high-level design pattern
fits particularly well with the features of the Python language and
answers questions that experienced programmers have been asking. (An
update of my un-recorded talk from PyCon Ireland 2013!)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/the-clean-architecture-in-python.html</guid><category>talk</category></item><item><title>The Quest for the Pocket-Sized Python</title><link>https://pyvideo.org/pyohio-2014/the-quest-for-the-pocket-sized-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk surveys the current landscape of Python on the major Mobile
platforms, and ways you can start targeting Mobile platforms with your
Python code. We'll look at considerations for Mobile web development,
the state of Python-based mobile toolkits, and progress towards
Python-coded native UIs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Neugebauer</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/the-quest-for-the-pocket-sized-python.html</guid><category>talk</category></item><item><title>Using ZMQ for Fun and Profit</title><link>https://pyvideo.org/pyohio-2014/using-zmq-for-fun-and-profit.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this talk, we will discuss how to use the ZMQ library to build a
distributed computing system. We will cover the basics of getting
started with ZMQ, designing the flow of data through the system and
offer some advice on best practices.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Blewett</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/using-zmq-for-fun-and-profit.html</guid><category>talk</category></item><item><title>Warming up to Graphs</title><link>https://pyvideo.org/pyohio-2014/warming-up-to-graphs.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Graphs are a powerful data structure and are increasingly relevant for
today's social and data-centric applications. This talk offers a brief
overview of Graphs, Graph theory, and explores scenarios where using a
Graph database (particularly Neo4j) can be of great benefit.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Montgomery</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/warming-up-to-graphs.html</guid><category>talk</category></item><item><title>A gentle introduction to asyncio</title><link>https://pyvideo.org/pyohio-2014/a-gentle-introduction-to-asyncio.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Asyncio is the new standard library module for doing asynchronous IO and
concurrency in Python 3.4. In this talk, I'll discuss some earlier
strategies for writing such code in Python. I'll cover some of the
decisions that went into it's design. Then I'll walk through a tuturial
on asyncio itself. Finally, I'll take some well known example code for
Gevent and Twisted, and rewrite it in asyncio.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Costlow</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/a-gentle-introduction-to-asyncio.html</guid><category>talk</category></item><item><title>A new default web stack</title><link>https://pyvideo.org/pyohio-2014/a-new-default-web-stack.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;When building a new web application, the default set of tools used to be
a web framework such as Django and a relational database such as
PostgreSQL. In 2014, these tools are no longer enough. In this talk,
I'll present a new default stack to help build applications that are
faster, more robust, easy to scale and still support rapid iteration and
fast feature development.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simon Willison</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/a-new-default-web-stack.html</guid><category>talk</category></item><item><title>A Python Script to Replace a DOS Batch File Adventure</title><link>https://pyvideo.org/pyohio-2014/a-python-script-to-replace-a-dos-batch-file-adven.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;An engineer who turned C++ programmer began an adventure well outside
his comfort zone and found Python. The discovery is highlighted while a
dos batch script is converted into a much more powerful Python script.
Several standard modules that were useful in the script are covered.
This retrospective of one's discovery of Python is very newbie friendly
and entertaining for experienced as well.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Craig Lang</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/a-python-script-to-replace-a-dos-batch-file-adven.html</guid><category>talk</category></item><item><title>Analyzing social media data with Python</title><link>https://pyvideo.org/pyohio-2014/analyzing-social-media-data-with-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;What does the perfect tweet or a viral blog post look like? When should
it be posted? We'll introduce various tools for working with data in
terms of collecting (requests), exploring (IPython, pandas), analyzing
(NLTK, scikit-learn) and visualizing (matplotlib). In the process, we
will uncover some surprising strategies for getting content shared
across social media.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fletcher Heisler</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/analyzing-social-media-data-with-python.html</guid><category>talk</category></item><item><title>Docker 101: Meet the portable future (tutorial)</title><link>https://pyvideo.org/pyohio-2014/docker-101-meet-the-portable-future-tutorial.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Docker was one of last year’s most talked about open source projects -
but what is it? And what does it mean for deploying applications? This
tutorial will explain what docker is and where it fits in with other
deployment and configuration management tools. Students will then learn
the basics of working with docker containers, how to “dockerize” their
apps, and some emerging docker best practices.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew T. Baker</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/docker-101-meet-the-portable-future-tutorial.html</guid><category>talk</category></item><item><title>Functional programming in Python with PyToolz</title><link>https://pyvideo.org/pyohio-2014/functional-programming-in-python-with-pytoolz.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn the principles of functional programming from the comfort of
Python. I'll motivate the principles of standardization, composability,
laziness, and purity within a standard workflow. We'll go far beyond the
standard libraries &lt;tt class="docutils literal"&gt;itertools&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;functools&lt;/tt&gt; by using a functional
standard library &lt;tt class="docutils literal"&gt;toolz&lt;/tt&gt; and its high-performance counterpart
&lt;tt class="docutils literal"&gt;cytoolz&lt;/tt&gt; written in Cython.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Welch</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/functional-programming-in-python-with-pytoolz.html</guid><category>talk</category></item><item><title>Getting Python All Up in Your Mobile with Kivy</title><link>https://pyvideo.org/pyohio-2014/getting-python-all-up-in-your-mobile-with-kivy.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;You know you can use Python to make apps for desktops and the web, but
did you know you can also use it to make mobile apps? Kivy is a Python
GUI framework for making cross-platform multitouch applications. This
talk will introduce Kivy's mobile dev stack, focusing mainly on Android.
It will be made using a Kivy app on an Android device, and which was
developed entirely on an Android device.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Rousch</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/getting-python-all-up-in-your-mobile-with-kivy.html</guid><category>kivy</category><category>talk</category></item><item><title>Introduction to Celery</title><link>https://pyvideo.org/pyohio-2014/introduction-to-celery.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Many people in the Python community have heard of Celery and aren't
really sure when to use it or how to get started. This talk covers some
of the first questions of a new Celery user. It will also point out some
common pitfalls for beginning users.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Smith</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/introduction-to-celery.html</guid><category>talk</category></item><item><title>Introduction to Pandas</title><link>https://pyvideo.org/pyohio-2014/introduction-to-pandas.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Pandas is a great library for working reporting and statistical
analysis. We will cover data manipulation using Pandas, including
indexing, alignment, join/merge methods, date/time types, and missing
data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Myers</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/introduction-to-pandas.html</guid><category>talk</category></item><item><title>Make API Calls Wicked Fast with Redis</title><link>https://pyvideo.org/pyohio-2014/make-api-calls-wicked-fast-with-redis.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Sure, your API calls may be fast. But could they be faster? Redis is a
wonderful tool that can be used as a cache API responses. By
implementing API caching, you can avoid hitting rate limits and/or
reduce the load on your database, resulting in better performance for
your web app.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lindsey Brockman</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/make-api-calls-wicked-fast-with-redis.html</guid><category>talk</category></item><item><title>Making and taking phone calls with octothorpe</title><link>https://pyvideo.org/pyohio-2014/making-and-taking-phone-calls-with-octothorpe.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;An introduction to and demonstration of octothorpe, Matt's Twisted
library for controlling the Asterisk telephony engine. Watch what's
going on inside Asterisk, answer the phone with &amp;quot;hello world&amp;quot;, ring
phones, and present an interactive phone menu, connecting up to just
about anything else with Twisted.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Behrens</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/making-and-taking-phone-calls-with-octothorpe.html</guid><category>talk</category></item><item><title>Panel Discussion: So You Wanna Run a Tech Conference.</title><link>https://pyvideo.org/pyohio-2014/panel-discussion-so-you-wanna-run-a-tech-confere.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Costlow</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/panel-discussion-so-you-wanna-run-a-tech-confere.html</guid><category>plenary</category></item><item><title>Postgres with Python inside and out: PL/Python</title><link>https://pyvideo.org/pyohio-2014/postgres-with-python-inside-and-out-plpython.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will primarily cover PL/Python, allowing you to write
procedural functions inside yoour databases. Specifically we'll cover
the basics of writing a function, touch upon some advanced usage like
trigger functions, and then display some fun things that can be done
when Python runs inside the database.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Williams</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/postgres-with-python-inside-and-out-plpython.html</guid><category>talk</category></item><item><title>Pushy Postgres and Python</title><link>https://pyvideo.org/pyohio-2014/pushy-postgres-and-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;PostgreSQL is widely regarded as a powerful, full-featured,
high-performance, scalable open source relational database management
system. But did you know that Postgres has a built in publish-subscribe
implementation? This powerful feature offers exciting possibilities for
distributed, data-centric applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Rocco</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/pushy-postgres-and-python.html</guid><category>talk</category></item><item><title>Python for the Class of 2023</title><link>https://pyvideo.org/pyohio-2014/python-for-the-class-of-2023.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;How do we reach students and help them learn to program in Python?&lt;/p&gt;
&lt;p&gt;By engaging teachers; but it's not as easy as it looks. Hear one
teacher's story about how the community reached her. This talk includes
coverage the Young Coders Classes she brought to her school in May 2014.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amy Flatt</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/python-for-the-class-of-2023.html</guid><category>talk</category></item><item><title>So you think you can PDB?</title><link>https://pyvideo.org/pyohio-2014/so-you-think-you-can-pdb.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;An intro to using PDB. Overview and example usage of all the basic
commands.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Clayton Parker</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/so-you-think-you-can-pdb.html</guid><category>talk</category></item><item><title>Solving the Heat Equation in Python!</title><link>https://pyvideo.org/pyohio-2014/solving-the-heat-equation-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this talk we will solve two partial differential equations by using a
very small subset of numpy, scipy, matplotlib, and python. We will then
use a couple of techniques to generate beautiful animations of the
solutions we find. The listeners will see how easy it is to get serious
work done with only a beginner's knowledge of Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Melvyn Ian Drag</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/solving-the-heat-equation-in-python.html</guid><category>talk</category></item><item><title>Using the Shapely Package for the Care and Feeding of your 2-D Spatial Data</title><link>https://pyvideo.org/pyohio-2014/using-the-shapely-package-for-the-care-and-feedin.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Shapely is a free python package for creating and manipulating points,
lines and shapes with ease. 2-D spatial data can be used to create
games, run virtual experiments, interpret political landscapes, or model
human behavior. The concepts in this talk should be accessible to anyone
with basic python knowledge.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alison Alvarez</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/using-the-shapely-package-for-the-care-and-feedin.html</guid><category>talk</category></item><item><title>Watch your Python script with strace</title><link>https://pyvideo.org/pyohio-2014/watch-your-python-script-with-strace.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Modern operating systems sandbox each process inside of a virtual memory
map from which direct I/O operations are generally impossible. Instead,
a process has to ask the operating system every time it wants to modify
a file or communicate bytes over the network. By using operating system
specific tools to watch the system calls a Python script is making --
using &amp;quot;strace&amp;quot; under Linux or &amp;quot;truss&amp;quot; under Mac OS X -- you can study
how a program is behaving and address several different kinds of bugs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/watch-your-python-script-with-strace.html</guid><category>talk</category></item></channel></rss>