<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_johan-mabille.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-06-12T00:00:00+00:00</updated><entry><title>xtensor: the lazy tensor algebra library</title><link href="https://pyvideo.org/pyparis-2017/xtensor-the-lazy-tensor-algebra-library.html" rel="alternate"></link><published>2017-06-12T00:00:00+00:00</published><updated>2017-06-12T00:00:00+00:00</updated><author><name>Johan Mabille</name></author><id>tag:pyvideo.org,2017-06-12:pyparis-2017/xtensor-the-lazy-tensor-algebra-library.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;xtensor is a C++ template tensor algebra library supporting numpy-style
broadcasting and universal functions. In this talk we present the
highlights of the expression system, then we show how xtensor can be
used to create numpy-aware Python extension modules with the
xtensor-python project.&lt;/p&gt;
</summary></entry><entry><title>xtensor: the lazy tensor algebra library</title><link href="https://pyvideo.org/pydata-amsterdam-2017/xtensor-the-lazy-tensor-algebra-library.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Sylvain Corlay</name></author><id>tag:pyvideo.org,2017-04-09:pydata-amsterdam-2017/xtensor-the-lazy-tensor-algebra-library.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Amsterdam 2017&lt;/p&gt;
&lt;p&gt;xtensor is a C++ template tensor algebra library supporting numpy-style broadcasting and universal functions, aiming at feature parity with numpy with a native feel. In this talk we will present the highlights of the expression system. Then we will show how xtensor can be used to create numpy-aware Python extension modules with the xtensor-python project and the xtensor-cookiecutter template.&lt;/p&gt;
&lt;p&gt;Abstract
In this presentation, we will focus on the authoring numpy-aware Python extensions with xtensor.&lt;/p&gt;
&lt;p&gt;First, we present a general overview of the xtensor expression system and its main features:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;lazy broadcasting and universal functions.&lt;/li&gt;
&lt;li&gt;an API following the idioms of the C++ standard library.&lt;/li&gt;
&lt;li&gt;tools to manipulate array expressions and build upon xtensor.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then we show how the expression-based system can be used to symbolically manipulate array expressions based on other data structures, such as a numpy arrays thanks to Python's buffer protocol, but also a database or the file system.&lt;/p&gt;
&lt;p&gt;The special case of the bindings with numpy is handled by the xtensor-python project which makes it extremely easy to author Python extension operating inplace on numpy arrays, with a modern STL-compliant API. We conclude the talk with a demonstration of the xtensor-cookiecutter template project for a Python extension defining a NumPy ufunc, and exposing other C++ functionalities.&lt;/p&gt;
&lt;p&gt;The cookiecutter produces a complete project including a documentation skeleton, unit testing and all the python packaging boilerplate.&lt;/p&gt;
</summary></entry></feed>