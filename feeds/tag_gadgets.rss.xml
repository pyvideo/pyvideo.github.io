<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Gadgets</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 23 Jul 2020 00:00:00 +0000</lastBuildDate><item><title>Game Development with CircuitPython</title><link>https://pyvideo.org/europython-2019/game-development-with-circuitpython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making computer games is difficult: it requires creativity,
multidisciplinary knowledge of art, psychology, math, computer science,
physics and others, patience, open mind and dedication. Making computer
games with Python is a nightmare. You hit practically every sharp corner
that Python has, starting with installation, through binary libraries,
poor hardware support, up to distribution.&lt;/p&gt;
&lt;p&gt;PewPew devices are an attempt at solving the worst problems by giving
you a dedicated, cheap, simple and portable gaming device, that you can
easily program with Python with just a simple text editor. They also
make pretty neat conference badges. I will talk about how they were
conceived, how they are used, and how you can extend and improve them
yourself.&lt;/p&gt;
&lt;p&gt;At the end of the talk you should have a good idea about what is
CircuitPython and MicroPython and how they can be used to build and
program such simple devices. You should also know where to find the
resources necessary to try designing and building your own.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Radomir Dopieralski</dc:creator><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-07-12:/europython-2019/game-development-with-circuitpython.html</guid><category>EuroPython 2019</category><category>Education</category><category>Gadgets</category><category>Hardware/IoT</category><category>Learning</category><category>MicroPython</category></item><item><title>Honey, There Is a Python in My Android Phone!</title><link>https://pyvideo.org/europython-2020/honey-there-is-a-python-in-my-android-phone.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This project was initiated during my Christmas vacation, inspired by Android Barcode Scanner as I was looking on the solution that I could catalogue my books by scanning the ISBN using android phone.
This quick solution did save me enormous amount of time in cataloguing my books. Intriguing by the design of APIs that can interact with android intents, I decided to dig further to understand how the APIs works. In concept, there is an RPC call between android app and python interpreter within the app that acts as a bridge, which allows python APIs to trigger Android intents, upon calling related APIs. For example, using the code snippet above, when Python GPS API is executed, the API will send request to Android GPS intent via the RPC call. Once Android intent receives the request, it will grab the GPS data, and passes the GPS data back to Python GPS API through the same channel.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Ing Wei Tang</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-07-23:/europython-2020/honey-there-is-a-python-in-my-android-phone.html</guid><category>EuroPython 2020</category><category>conference</category><category>europython</category><category>europython-2020</category><category>europython-online</category><category>python</category><category>Gadgets</category><category>General</category><category>Python 3</category></item></channel></rss>