<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_python-web.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-25T00:00:00+00:00</updated><entry><title>Technical Lessons Learned from Pythonic Refactoring</title><link href="https://pyvideo.org/pycon-de-2017/technical-lessons-learned-from-pythonic-refactoring.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Yenny Cheung</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/technical-lessons-learned-from-pythonic-refactoring.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Yenny Cheung&lt;/strong&gt; (&amp;#64;yennycheung)&lt;/p&gt;
&lt;p&gt;Yenny Cheung, Software Engineer, Biz National, Yelp&lt;/p&gt;
&lt;p&gt;Originally from Hong Kong, Yenny moved to Pennsylvania in the US to study Computer Science at Swarthmore College. She attended the Grace Hopper Conference three times during her college years. After graduation, Yenny moved to Hamburg and joined Yelp as a full-stack software engineer. Yenny works on the Biz National team, where she is scaling advertising tools and reporting for multi-location businesses and franchises. She is a pioneer of the Awesome Women in Engineering Group at Yelp in Germany and she is active in Women in Engineering Meetups in Hamburg. Outside of work, Yenny enjoys yelping for good food and painting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ever stumbled upon poorly-maintained codebases that suck away your productivity? Fear no more! This talk addresses how to identify code smell (from Brie to Bleu cheese) and go through examples to refactor code and APIs. You will learn the art of writing clean, maintainable and idiomatic Python code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This talk targets beginner software engineers yet also aims to provide interesting content for more advanced developers. You will leave knowing more about code smells and understanding the whys and hows of refactoring.&lt;/p&gt;
&lt;p&gt;Code smells refer to the symptoms of problematic code design. Identifying different types of code smells is the first step to successful refactoring. I will talk through some classic examples:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Unnecessarily complex code&lt;/li&gt;
&lt;li&gt;Inappropriate naming&lt;/li&gt;
&lt;li&gt;Duplicated code&lt;/li&gt;
&lt;li&gt;Non-modularized code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Knowing what to refactor, I will share a few learnings that lead to good quality code:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Good python practices (The Zen of Python &amp;amp; PEP8)&lt;/li&gt;
&lt;li&gt;Good use of data structures (named tuples &amp;amp; sets)&lt;/li&gt;
&lt;li&gt;The art of pythonic naming&lt;/li&gt;
&lt;li&gt;DRY principle&lt;/li&gt;
&lt;li&gt;Separation of concerns principle (modularity &amp;amp; encapsulation)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Refactoring also makes testing easier. I will discuss how to write unit tests that cover all use cases. Finally I will talk about integration testing strategies that ensure that you and people who want to modify your API in the future are not breaking upstream code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="code smell"></category><category term="api refactoring"></category><category term="python web"></category></entry></feed>