<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pyohio-2017.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-07-30T00:00:00+00:00</updated><entry><title>Accessibility: It's Not Just a Client Side Problem</title><link href="https://pyvideo.org/pyohio-2017/accessibility-its-not-just-a-client-side-problem.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Stephanie Slattery</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/accessibility-its-not-just-a-client-side-problem.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Roughly 1 in 5 people in America live with a disability. It would be irresponsible to ignore the needs of all our users when developing our code, but isn't this just something for people who wrote client side code to worry about?  In this talk, I'll explain the basics of accessibility and how you can advocate for it across the stack.&lt;/p&gt;
</summary></entry><entry><title>aria-owns="lets-make-forms-accessible"</title><link href="https://pyvideo.org/pyohio-2017/aria-owns-lets-make-forms-accessible.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Tina Bell Vance</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/aria-owns-lets-make-forms-accessible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let's make forms accessible! We're going to make forms more accessible in Flask with Jinja templating and JavaScript. We'll go through what's possible in Jinja and what may need extra work.&lt;/p&gt;
</summary></entry><entry><title>Build a Chat Bot with Chuck Norris, Python and Docker (Tutorial)</title><link href="https://pyvideo.org/pyohio-2017/build-a-chat-bot-with-chuck-norris-python-and-docker-tutorial.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Hank Preston</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/build-a-chat-bot-with-chuck-norris-python-and-docker-tutorial.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this session we build a Chuck Norris joke-telling Chat Bot! We'll write our bot using Python and package it up as a Docker image. You'll learn about Webhooks and their importance in cloud applications, Micro-Services and the Cisco Spark Collaboration Cloud. This session is designed to be fun and hands on, so make sure to bring your laptop, sense of humor and great questions!&lt;/p&gt;
</summary></entry><entry><title>Building a world class document pipeline using Python</title><link href="https://pyvideo.org/pyohio-2017/building-a-world-class-document-pipeline-using-python.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Andrew Wolfe</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/building-a-world-class-document-pipeline-using-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At Brokersavant, we process large quantities of real estate assets ranging from commercial property flyers to large real estate leases and our customers expect a lightning fast turn around. Learn how we leveraged  open source technologies and Python libraries to create a system that scales to millions of assets per day without missing a beat.&lt;/p&gt;
</summary></entry><entry><title>Building Delivery Pipelines with Jenkins' Pipeline as Code</title><link href="https://pyvideo.org/pyohio-2017/building-delivery-pipelines-with-jenkins-pipeline-as-code.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Kevin Fox</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/building-delivery-pipelines-with-jenkins-pipeline-as-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jenkins is the &amp;quot;leading open source automation server&amp;quot;. New in 2016, Jenkins version 2 introduced a robust, extensible approach to managing complex automation pipelines as code. Jenkins' Pipeline as Code serves as a solid foundation for a team's continuous delivery practices.  Kevin Fox provides a practical overview of this important new capability for a popular open source platform.&lt;/p&gt;
</summary></entry><entry><title>Creating Reproducible Data Science Workflows using Docker Containers</title><link href="https://pyvideo.org/pyohio-2017/creating-reproducible-data-science-workflows-using-docker-containers.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Aly Sivji</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/creating-reproducible-data-science-workflows-using-docker-containers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Jupyter notebooks make it easy to create reproducible workflows that can be distributed across groups and organizations. This is a simple process provided that our end-users have access to the data along with a compatible Python environment. Learn how to use Docker to package a shareable image containing the libraries, code, and data required to reproduce every calculation.&lt;/p&gt;
</summary></entry><entry><title>Elasticsearch in an Hour</title><link href="https://pyvideo.org/pyohio-2017/elasticsearch-in-an-hour.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>John Berryman</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/elasticsearch-in-an-hour.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The use of search is ubiquitous. As a developer you need search in your technology tool belt. This talk introduces Elasticsearch, a front-running, open source search technology. We'll create an application, execute a search, and dive into internals so that you'll know where search is most useful.&lt;/p&gt;
</summary></entry><entry><title>Everything is broken, and I don't know why.</title><link href="https://pyvideo.org/pyohio-2017/everything-is-broken-and-i-dont-know-why.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Matt Robenolt</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/everything-is-broken-and-i-dont-know-why.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all have someone on our team who writes code with bugs in it. Not us, of course, but someone else. This code somehow gets into production and this code just maybe sometimes crashes. How can we detect these issues and extract useful information at runtime so we can fix these bugs? What kind of stuff should we even be looking for?&lt;/p&gt;
</summary></entry><entry><title>Hitting the Pavement with Python: Pt1</title><link href="https://pyvideo.org/pyohio-2017/hitting-the-pavement-with-python-pt1.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Josh Francisco</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/hitting-the-pavement-with-python-pt1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using python to interact with aftermarket engine management controllers. Part 1 will focus on the initial discovery of the controller's serial protocol, communicating with the controller over a serial port, unpacking the byte stream, and using Redis as a mechanism to store and radiate data.&lt;/p&gt;
</summary></entry><entry><title>i_heart_meetings.py: Showing the Costs of Meetings and Finding a Better Way</title><link href="https://pyvideo.org/pyohio-2017/i-heart-meetingspy-showing-the-costs-of-meetings-and-finding-a-better-way.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Drew Sullivan</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/i-heart-meetingspy-showing-the-costs-of-meetings-and-finding-a-better-way.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We've all sat through boring/wasteful meetings. I wanted to find a solution. So I made a Python app that connects with the Google Calendar API, gets all the events in a period and posts the costs of each event to Slack. A following poll asks if it was worth the costs. I would like to describe how it was made and how we can make meetings valuable and engaging, instead of boring wastes of time.&lt;/p&gt;
</summary></entry><entry><title>Introduction to Debugging with Python</title><link href="https://pyvideo.org/pyohio-2017/introduction-to-debugging-with-python.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Craig Maloney</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/introduction-to-debugging-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever since a moth was discovered in the Mark II computer we've dealt with bugs in software. This talk will show different methods for determining what the code is doing. We'll start with the lowly print statement and introduce advanced forms of logging. We'll also cover several Python debuggers and talk about best practices for debugging and preventing bugs in Python code.&lt;/p&gt;
</summary></entry><entry><title>Lazy is too hard! Use PDFs with Python the Robust Way</title><link href="https://pyvideo.org/pyohio-2017/lazy-is-too-hard-use-pdfs-with-python-the-robust-way.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Kenneth Durril</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/lazy-is-too-hard-use-pdfs-with-python-the-robust-way.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lazy is too hard. When I had 40,000 PDFs and needed to extract their data, I knew that the &amp;quot;lazy&amp;quot; approach was insufficient. This talk reviews tools to tame PDFs with confidence. I'll use my open-data project's workflow as an example (ETL anyone?). It's also a follow-up/response to PyOhio2016's &amp;quot;We Don’t Need No Stinkin’ PDF Library: Build PDFs with Python the Lazy Way&amp;quot;.&lt;/p&gt;
</summary></entry><entry><title>Rapid Prototyping In Data Science With Big Data &amp; Python</title><link href="https://pyvideo.org/pyohio-2017/rapid-prototyping-in-data-science-with-big-data-python.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>David Ziganto</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/rapid-prototyping-in-data-science-with-big-data-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Rapid prototyping in data science often hits a wall when data is too large to fit into memory. When this happens, teams are often confronted with two options: sampling techniques or porting to Apache Spark. Both have significant drawbacks. In this talk, I'll demonstrate how to leverage Dask and Scikit-learn to solve this problem.&lt;/p&gt;
</summary></entry><entry><title>Serializing Data with Google's Protocol Buffers</title><link href="https://pyvideo.org/pyohio-2017/serializing-data-with-googles-protocol-buffers.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Paul Kerchen</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/serializing-data-with-googles-protocol-buffers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is an introduction to Google's protocol buffers (aka protobuf). Protocol buffers are a language-neutral, platform-neutral, extensible mechanism for serializing structured data – think XML, but smaller, faster, and simpler. This talk will include a demonstration of using protobuf with Python to communicate with an embedded, processing- and memory-restricted device.&lt;/p&gt;
</summary></entry><entry><title>Sipping Web Development from a Flask</title><link href="https://pyvideo.org/pyohio-2017/sipping-web-development-from-a-flask.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Ian Zelikman</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/sipping-web-development-from-a-flask.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk aims to give introduction to web development using Flask.&lt;/p&gt;
&lt;p&gt;After an introduction to Python web development ecosystem, we will focus on developing a production ready application using Flask, a suggested structure for your application, and how to tackle some unique challenges we encountered.&lt;/p&gt;
</summary></entry><entry><title>The Art of Mentoring and Being Mentored (because we are all always both)</title><link href="https://pyvideo.org/pyohio-2017/the-art-of-mentoring-and-being-mentored-because-we-are-all-always-both.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Jess Unrein</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/the-art-of-mentoring-and-being-mentored-because-we-are-all-always-both.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let’s explore the lifecycle of a mentorship. Mentorships are relationships like any other that need to be started, maintained, and ended with intentional effort and care. We’ll talk about how to identify, grow, and gracefully end mentoring relationships.&lt;/p&gt;
</summary></entry><entry><title>The Humane Technical Interview</title><link href="https://pyvideo.org/pyohio-2017/the-humane-technical-interview.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Katie Cunningham</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/the-humane-technical-interview.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nearly everyone in tech has to take part in a technical interview during their career, but are we doing them right?&lt;/p&gt;
</summary></entry><entry><title>To Infinity and Beyond: Computer Vision for Astronomy</title><link href="https://pyvideo.org/pyohio-2017/to-infinity-and-beyond-computer-vision-for-astronomy.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Ryan Fox</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/to-infinity-and-beyond-computer-vision-for-astronomy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is about computer vision and image processing.  It covers applications in astronomy, as well as more terrestrial ones.  Next, it outlines how you can use them with the photos you already take.  Finally, it discusses how developers can build specialized tools to enhance their abilities, and why actually doing so is often surprising.&lt;/p&gt;
</summary></entry><entry><title>U is for Unicode: Solving the Mystery</title><link href="https://pyvideo.org/pyohio-2017/u-is-for-unicode-solving-the-mystery.html" rel="alternate"></link><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><author><name>Greg Back</name></author><id>tag:pyvideo.org,2017-07-30:pyohio-2017/u-is-for-unicode-solving-the-mystery.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will attempt to resolve some of the mystery and confusing behavior about Unicode (and other text encoding issues) in Python. It will cover Python handles text in general, the differences in Unicode text between Python 2 and Python 3, how various standard library APIs handle Unicode text, and a bit about detecting the encoding of unknown text.&lt;/p&gt;
</summary></entry><entry><title>A brief introduction to concurrency and coroutines (Tutorial)</title><link href="https://pyvideo.org/pyohio-2017/a-brief-introduction-to-concurrency-and-coroutines-tutorial.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Eric Appelt</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/a-brief-introduction-to-concurrency-and-coroutines-tutorial.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will introduce concurrency through python coroutines. Using a simple &amp;quot;slow&amp;quot; web service for an example, we will explore writing a client to perform concurrent requests, and then how to write the example service itself. The tutorial will also consider the purpose of concurrent programming, how concurrency differs from parallelism, and will discuss python syntax for coroutines.&lt;/p&gt;
</summary></entry><entry><title>Bokeh: Interactive Data Visualization in Python (Tutorial)</title><link href="https://pyvideo.org/pyohio-2017/bokeh-interactive-data-visualization-in-python-tutorial.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Steven C. Howell</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/bokeh-interactive-data-visualization-in-python-tutorial.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bokeh is a powerful library for creating interactive data visualizations in the style of D3.js without writing JavaScript.  In this tutorial, you will learn to use Bokeh to&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;create simple interactive plots, both from scripts and Jupyter notebooks&lt;/li&gt;
&lt;li&gt;link interactive visualizations to a running python instance&lt;/li&gt;
&lt;li&gt;plot streamed data&lt;/li&gt;
&lt;li&gt;interactively view large datasets with Datashader&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</summary></entry><entry><title>Building an awesome community around an open source project</title><link href="https://pyvideo.org/pyohio-2017/building-an-awesome-community-around-an-open-source-project.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Tim Abbott</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/building-an-awesome-community-around-an-open-source-project.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Zulip is a beautiful open source alternative to Slack, optimized for productivity.&lt;/p&gt;
&lt;p&gt;The Zulip project has grown from 1 to 300 contributors in about 18 months, with
more commits merged per week than Docker and Django combined.&lt;/p&gt;
&lt;p&gt;This talk will tell Zulip's story, emphasizing the specific, reusable, techniques we used to build our
open source project and make the community successful.&lt;/p&gt;
</summary></entry><entry><title>Capacity and Stability Patterns</title><link href="https://pyvideo.org/pyohio-2017/capacity-and-stability-patterns.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Brian Pitts</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/capacity-and-stability-patterns.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At Eventbrite, engineers are tasked with building systems that can withstand dramatic spikes in load when popular events go on sale. There are patterns that help us do this. Come learn about these patterns, how Eventbrite has adopted them, and how to implement them within your own code and infrastructure.&lt;/p&gt;
</summary></entry><entry><title>Coffeebot 3000 - An IoT story with a RaspberryPI, Redis, LEDs, and Mario</title><link href="https://pyvideo.org/pyohio-2017/coffeebot-3000-an-iot-story-with-a-raspberrypi-redis-leds-and-mario.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>James Alexander</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/coffeebot-3000-an-iot-story-with-a-raspberrypi-redis-leds-and-mario.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is a story about the creation, maintenance and on-going features built onto an IoT device to measure the amount of coffee in a coffee pot.&lt;/p&gt;
</summary></entry><entry><title>From Lumberjack to Python Developer</title><link href="https://pyvideo.org/pyohio-2017/from-lumberjack-to-python-developer.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Scott Stahl</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/from-lumberjack-to-python-developer.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's a been lot of talk over the past few years about workforce retraining and software bootcamps. So what's the reality? I will tell the story of rebooting my career at 30 from working in lumber &amp;amp; building materials to becoming a developer, share some thoughts on why it worked for me and some of the lessons learned from my first year on the job.&lt;/p&gt;
</summary></entry><entry><title>Helping your manager be a better leader for you</title><link href="https://pyvideo.org/pyohio-2017/helping-your-manager-be-a-better-leader-for-you.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Christopher H. Laco</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/helping-your-manager-be-a-better-leader-for-you.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How can you be a better manager? How can you help your manager be a better manager for you? In this talk we'll talk about these things and build a better bridge between developers and their managers so we can build stronger teams together from the bottom up.&lt;/p&gt;
</summary></entry><entry><title>How We Changed The World With Open Source</title><link href="https://pyvideo.org/pyohio-2017/how-we-changed-the-world-with-open-source.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Ed Finkler</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/how-we-changed-the-world-with-open-source.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In June 2012, podcaster and vet web dev Ed Finkler spoke openly about his lifelong struggles with mental illness. 4 years later, a non-profit corporation with 3 dozen volunteers is working to change the tech and open source community. In this talk, Finkler tells the story of how the episode happened, the incredible response, and how it grew into a charity dedicated to changing an industry.&lt;/p&gt;
</summary></entry><entry><title>Hypothesis: Tests That Write Themselves</title><link href="https://pyvideo.org/pyohio-2017/hypothesis-tests-that-write-themselves.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>David Kua</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/hypothesis-tests-that-write-themselves.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing is generally seen as a Good Thing™ that one should do. Writing tests that are comprehensive and cover all possibilities however can be time-consuming, hard, or even downright impossible. Property-based testing is one method that can help with this. This talk will introduce the concept of property-based testing and how to do it yourself using the Python library Hypothesis.&lt;/p&gt;
</summary></entry><entry><title>Integration Contract Testing and its potentials for API development and maintenance</title><link href="https://pyvideo.org/pyohio-2017/integration-contract-testing-and-its-potentials-for-api-development-and-maintenance.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>John Roach</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/integration-contract-testing-and-its-potentials-for-api-development-and-maintenance.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You just finished a patch for your API. Your unit tests pass. You have some end to end tests that cover most of the user facing features. You merge in your code and after a smooth deployment, all hell breaks loose. The microservice that the other team was developing doesn't understand what your new patch is sending as a response! What went wrong? This is a quick talk about contract based testing.&lt;/p&gt;
</summary></entry><entry><title>Keynote: Py in the Sky</title><link href="https://pyvideo.org/pyohio-2017/keynote-py-in-the-sky.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Qumisha Goss</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/keynote-py-in-the-sky.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Creating a more diverse Programming community using Libraries as a gateway to reach  diverse and under-served populations. How Python and Computer Science can be used to create opportunities for under served populations. Creating Diversity by meeting people where they are instead of trying to entice them to join you.&lt;/p&gt;
</summary></entry><entry><title>Machine learning in production with scikit-learn</title><link href="https://pyvideo.org/pyohio-2017/machine-learning-in-production-with-scikitlearn.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Jeff Klukas</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/machine-learning-in-production-with-scikitlearn.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python data ecosystem provides amazing tools to quickly get up and running with machine learning models, but the path to stably serving them in production is not so clear. We'll discuss details of wrapping a minimal REST API around scikit-learn, training and persisting models in batch, and logging decisions, then compare to some other common approaches to productionizing models.&lt;/p&gt;
</summary></entry><entry><title>Multimethods? In MY Python?</title><link href="https://pyvideo.org/pyohio-2017/multimethods-in-my-python.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Lindsey Brockman</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/multimethods-in-my-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A benefit of using a dynamically typed language like Python is the ability to create a function that can operate on arguments of unknown types. Unfortunately, this freedom can lead to a common antipattern where the function is responsible for type-cheaking each argument before operating accordingly. This talk will explore avoiding this antipattern with multimethods.&lt;/p&gt;
</summary></entry><entry><title>Paho Silver, Away! Saddle up to IoT with MicroPython</title><link href="https://pyvideo.org/pyohio-2017/paho-silver-away-saddle-up-to-iot-with-micropython.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Greg Svoboda</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/paho-silver-away-saddle-up-to-iot-with-micropython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The IoT market is set to grow to over 250 BILLION dollars by 2020- it’s time to get YOUR piece. This session will give attendees an interactive demonstration on the amazing Python IoT-stack using Mosquitto, MicroPython, and the Paho Library. You will walk away with a solid understanding of the architecture and frameworks necessary to build a complete IoT solution of your own.&lt;/p&gt;
</summary></entry><entry><title>Postgres Performance for Humans</title><link href="https://pyvideo.org/pyohio-2017/postgres-performance-for-humans-2.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Craig Kerstiens</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/postgres-performance-for-humans-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;To many developers the database is a black box. You expect to be able to put data into your database, have it to stay there, and get it out when you query it... hopefully in a performant manner. We'll go from basics to the more advanced of what you need to know to keep things running smoothly.&lt;/p&gt;
</summary></entry><entry><title>Python and Spreadsheets: 2017 Edition</title><link href="https://pyvideo.org/pyohio-2017/python-and-spreadsheets-2017-edition.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Kojo Idrissa</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/python-and-spreadsheets-2017-edition.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Spreadsheet files are often used to share interesting &amp;amp; important data. But spreadsheet applications aren't always the best tool for processing that data. I'll show you how to use OpenPyXL to work with that data in a way that's better than using .csv files. I'll also discuss common problems faced when working with spreadsheets via code. &amp;quot;State of the art&amp;quot; moves fast here, thus the title.&lt;/p&gt;
</summary></entry><entry><title>Running Vintage Software: PyPI's Aging Codebase.</title><link href="https://pyvideo.org/pyohio-2017/running-vintage-software-pypis-aging-codebase.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Ernest W. Durbin III</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/running-vintage-software-pypis-aging-codebase.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python Package Index, lovingly known as The Cheeseshop to some, has grown enormously since it's introduction in 2002. As a critical piece of the Python Community's infrastructure, it has suffered many growing pains over the years. Let's review the recent history of PyPI, lessons learned, and techniques applied to keep it running.&lt;/p&gt;
</summary></entry><entry><title>SubTests are the Best</title><link href="https://pyvideo.org/pyohio-2017/subtests-are-the-best.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Dmitriy Chukhin</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/subtests-are-the-best.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing the code we write is important, so we should use available tools to write tests that are readable, thorough, and DRY (Don't Repeat Yourself). Subtests, added in Python3.4, make accomplishing each of these three goals easier. This talk goes through some examples of how subtests make testing 1) more readable, 2) more thorough, and 3) more DRY. The result: better apps and fewer bugs.&lt;/p&gt;
</summary></entry><entry><title>Those Who Care, Teach!</title><link href="https://pyvideo.org/pyohio-2017/those-who-care-teach.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Kenneth Love</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/those-who-care-teach.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's nothing better than helping someone learn a tricky concept: a complex regular expression, a build tool, or even running their first script ever! Unfortunately, though, teaching is hard! For many, going beyond the show-and-tell we do with coworkers is just too intimidating. Let me teach you tips, tricks,  and tools I've collected over years of teaching Python to thousands of people.&lt;/p&gt;
</summary></entry><entry><title>Transitioning from Science to Tech: One Astrophysicist's Journey</title><link href="https://pyvideo.org/pyohio-2017/transitioning-from-science-to-tech-one-astrophysicists-journey.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Elizabeth Wehner</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/transitioning-from-science-to-tech-one-astrophysicists-journey.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Changing careers can be intimidating! In this talk, I'll share how I made the transition from astronomer to full stack web developer, and built up a career in tech.&lt;/p&gt;
</summary></entry><entry><title>Using Machine Learning to play chess</title><link href="https://pyvideo.org/pyohio-2017/using-machine-learning-to-play-chess.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Aubhro Sengupta</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/using-machine-learning-to-play-chess.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Today, chess engines contain many lines of code handcrafted under the guidance of grandmasters. Are you interested in being knee deep in chess theory just to crank out a half decent engine? No? This talk is for you. Why not create an engine that learns to improve itself?&lt;/p&gt;
</summary></entry><entry><title>You have an API, now what? Client time!</title><link href="https://pyvideo.org/pyohio-2017/you-have-an-api-now-what-client-time.html" rel="alternate"></link><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><author><name>Richard Harding</name></author><id>tag:pyvideo.org,2017-07-29:pyohio-2017/you-have-an-api-now-what-client-time.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Client libraries for your API in the languages your users are coming from are vital to getting adoption and establishing the best practices for putting your API to work. We discuss how and why you need to provide the client libraries and why this may drive adoption more than the API itself.&lt;/p&gt;
</summary></entry></feed>