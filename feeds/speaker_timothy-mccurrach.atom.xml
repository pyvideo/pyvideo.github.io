<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Timothy McCurrach</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_timothy-mccurrach.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2021-06-04T00:00:00+00:00</updated><subtitle></subtitle><entry><title>The request response cycle a Djangonautic journey</title><link href="https://pyvideo.org/djangocon-europe-2021/the-request-response-cycle-a-djangonautic-journey.html" rel="alternate"></link><published>2021-06-04T00:00:00+00:00</published><updated>2021-06-04T00:00:00+00:00</updated><author><name>Timothy McCurrach</name></author><id>tag:pyvideo.org,2021-06-04:/djangocon-europe-2021/the-request-response-cycle-a-djangonautic-journey.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How exactly do web-servers communicate with Django? and what happens immediately after that? If you've ever wondered where the &lt;cite&gt;request&lt;/cite&gt; object comes from? How the middleware-chain is put together? Or just what all those functions you see in your exception tracebacks do? Then join me in a deep dive â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How exactly do web-servers communicate with Django? and what happens immediately after that? If you've ever wondered where the &lt;cite&gt;request&lt;/cite&gt; object comes from? How the middleware-chain is put together? Or just what all those functions you see in your exception tracebacks do? Then join me in a deep dive of everything between the server, the view and back again, as we answer these questions and more.&lt;/p&gt;
&lt;p&gt;This talk will be a look under the hood at Django's request handlers, middleware-chain and URL-resolvers. Focusing on just the WSGI route (not asynchronous), it aims to be accessible to beginners, but with the intention that a more experienced user will learn something new or interesting as well.&lt;/p&gt;
&lt;p&gt;We will start off by replacing Django's &lt;cite&gt;WSGIHandler&lt;/cite&gt; with our own &amp;quot;hello world&amp;quot; WSGI application. We'll then build back in additional features until it starts to resemble what we originally had. Along the way, we'll highlight lesser-known features, and give examples demonstrating how understanding the implementation will enable you to better take advantage of the features Django offers, and ultimately write better code.&lt;/p&gt;
</content><category term="DjangoCon Europe 2021"></category><category term="Django"></category><category term="DjangoConEU"></category><category term="djangoconeu2021"></category></entry></feed>