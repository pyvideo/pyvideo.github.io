<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Ahn Sung-hyun</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_ahn-sung-hyun.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-08-12T00:00:00+00:00</updated><subtitle></subtitle><entry><title>How to fix the order of SQL Where clause conditions in Django ORM</title><link href="https://pyvideo.org/pycon-korea-2023/how-to-fix-the-order-of-sql-where-clause-conditions-in-django-orm.html" rel="alternate"></link><published>2023-08-12T00:00:00+00:00</published><updated>2023-08-12T00:00:00+00:00</updated><author><name>Ahn Sung-hyun</name></author><id>tag:pyvideo.org,2023-08-12:/pycon-korea-2023/how-to-fix-the-order-of-sql-where-clause-conditions-in-django-orm.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Explains how to guarantee the order of conditions in the where clause in Django ORM.&lt;/p&gt;
&lt;p&gt;Explains why the order changes when conditions are added to filter and filter chaining, and why the order is guaranteed when using Q objects. And furthermore, it introduces the process until Django ORM becomes â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Explains how to guarantee the order of conditions in the where clause in Django ORM.&lt;/p&gt;
&lt;p&gt;Explains why the order changes when conditions are added to filter and filter chaining, and why the order is guaranteed when using Q objects. And furthermore, it introduces the process until Django ORM becomes an SQL statement.&lt;/p&gt;
&lt;p&gt;Ahn Sung-hyun (ash84)
Currently serving as CTO at Payhere, and is in charge of backend development. He has been using Python as his main language since 2012. He is mainly interested in software engineering and writing.&lt;/p&gt;
</content><category term="PyCon Korea 2023"></category><category term="django"></category><category term="orm"></category></entry></feed>