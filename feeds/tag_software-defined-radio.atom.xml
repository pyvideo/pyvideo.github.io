<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_software-defined-radio.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-06-05T00:00:00+00:00</updated><entry><title>Pulling Radio Data out of Thin Air</title><link href="https://pyvideo.org/pycon-israel-2018/pulling-radio-data-out-of-thin-air.html" rel="alternate"></link><published>2018-06-05T00:00:00+00:00</published><updated>2018-06-05T00:00:00+00:00</updated><author><name>Yuval Adam</name></author><id>tag:pyvideo.org,2018-06-05:pycon-israel-2018/pulling-radio-data-out-of-thin-air.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Radio waves are all around us, yet they are usually inaccessible from typical software applications. Recent years have seen an explosion of software-defined radio (SDR) applications, mainly due to the availability of cheap ($10) USB radio dongles. SDR can be utilized not only to listen to FM radio, but also to track airplanes in the sky, interact with wireless consumer electronics, and even receive satellite imagery. This interactive and fast-paced talk will provide a glimpse into the vast world of SDR, and show which tools in the Python ecosystem are available for building radio-aware applications.&lt;/p&gt;
</summary><category term="software defined radio"></category><category term="sdr"></category><category term="pyrtlsdr"></category></entry><entry><title>Signal Processing and Communications Hands On Using scikit dsp comm</title><link href="https://pyvideo.org/scipy-2017/signal-processing-and-communications-hands-on-using-scikit-dsp-comm.html" rel="alternate"></link><published>2017-07-13T00:00:00+00:00</published><updated>2017-07-13T00:00:00+00:00</updated><author><name>Mark Wic</name></author><id>tag:pyvideo.org,2017-07-13:scipy-2017/signal-processing-and-communications-hands-on-using-scikit-dsp-comm.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutorial materials found here: &lt;a class="reference external" href="https://scipy2017.scipy.org/ehome/220975/493423/"&gt;https://scipy2017.scipy.org/ehome/220975/493423/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this tutorial I intend to start with a basic review of discrete-time signals and systems using a module I developed for my book Signals and Systems for Dummies. Once a basic foundation is provided, all using hands-on Python code examples in a Jupyter notebook, I will move to more advanced topics relative to statistical signal processing, digital communications and software defined radio. Digital communication transmitter and receiver simulations will be explored using Python code modules found in the newly posted scikit-dsp-comm as well as data acquisition code used in conjunction with a popular $20 software-defined radio USB dongle (RTL-SDR).
The capstone portion of the tutorial will have the students write code to recover FM stereo radio broadcasts from a raw complex signal file obtained from the output of a popular $20 software defined radio module (the RTLSDR).  Hardware will be provided for small groups to work together.&lt;/p&gt;
</summary><category term="signal processing"></category><category term="software defined radio"></category><category term="tutorial"></category></entry></feed>