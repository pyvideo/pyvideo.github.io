<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_highschool.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2011-03-11T00:00:00+00:00</updated><entry><title>Python and Robots: Teaching Programming in High School</title><link href="https://pyvideo.org/pycon-us-2011/pycon-2011--python-and-robots--teaching-programmi.html" rel="alternate"></link><published>2011-03-11T00:00:00+00:00</published><updated>2011-03-11T00:00:00+00:00</updated><author><name>Vern Ceder</name></author><id>tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--python-and-robots--teaching-programmi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python and Robots: Teaching Programming in High School&lt;/p&gt;
&lt;p&gt;Presented by Vern Ceder&lt;/p&gt;
&lt;p&gt;Combining Python with inexpensive robots is a very effective way of
teaching programming at the middle and high school levels. Since Python
is easy to understand a constructivist approach is possible - students
learn by creating and running simple programs, observing the results,
and then modifying their code to fix bugs and add functionality.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The approach suggested in this talk is partly based upon that developed
at the Institute for Personal Robots in Education
(&lt;a class="reference external" href="http://wiki.roboteducation.org/"&gt;http://wiki.roboteducation.org&lt;/a&gt;)
by staff from Georgia Tech and Bryn Mawr, combined with my own
experiences teaching programming with Python as described in my talk
&amp;quot;Goodbye, Hello World: Rethinking Teaching with Python&amp;quot;, PyCon 2007, and
my subsequent talks at NECC.&lt;/p&gt;
&lt;p&gt;Because students are able to see what their code is doing and because
Python is easy to understand, students can explore simple programming
concepts, learning features as they need them. This approach increases
both student engagement and retention. It also seems that this approach
is more appealing to girls than a more traditional programming class.&lt;/p&gt;
&lt;p&gt;I'll illustrate my talk with samples of code created by students and
video of the students/robots in action.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Introduction - school background, course structure, origin of approach&lt;/p&gt;
&lt;p&gt;Hardware and computer setup used&lt;/p&gt;
&lt;p&gt;Initial exercises and first projects&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Control of robot&lt;/li&gt;
&lt;li&gt;Program as sequence of commands&lt;/li&gt;
&lt;li&gt;Basic programming concepts - looping, branching, functions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Advanced projects&lt;/p&gt;
&lt;pre class="literal-block"&gt;
* obstacle detection
* image processing
* simple AI approaches
&lt;/pre&gt;
&lt;p&gt;Pitfalls and strategies for using robots&lt;/p&gt;
&lt;p&gt;Questions and Suggestions&lt;/p&gt;
</summary><category term="highschool"></category><category term="pycon"></category><category term="pycon2011"></category><category term="robots"></category><category term="teaching"></category></entry></feed>