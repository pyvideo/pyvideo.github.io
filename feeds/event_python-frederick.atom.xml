<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_python-frederick.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-09-11T00:00:00+00:00</updated><entry><title>Python Testing 201 with pytest</title><link href="https://pyvideo.org/python-frederick/python-testing-201-with-pytest.html" rel="alternate"></link><published>2019-09-11T00:00:00+00:00</published><updated>2019-09-11T00:00:00+00:00</updated><author><name>Matt Layman</name></author><id>tag:pyvideo.org,2019-09-11:python-frederick/python-testing-201-with-pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the September 2019 Python Frederick event, Matt explored the features of pytest and how to apply them to Python.&lt;/p&gt;
</summary><category term="pytest"></category><category term="unit testing"></category><category term="testing"></category></entry><entry><title>Using Git and GitHub to safely store your code</title><link href="https://pyvideo.org/python-frederick/using-git-and-github-to-safely-store-your-code.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Matt Layman</name></author><id>tag:pyvideo.org,2019-07-10:python-frederick/using-git-and-github-to-safely-store-your-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At Python Frederick for July 2019, I presented on the fundamentals of #Git and #GitHub for storing your code safely and sharing it with others. This talk is aimed at beginners with no prior knowledge of Git.&lt;/p&gt;
</summary><category term="git"></category><category term="github"></category></entry><entry><title>Python Testing 101 with pytest</title><link href="https://pyvideo.org/python-frederick/python-testing-101-with-pytest.html" rel="alternate"></link><published>2019-03-13T00:00:00+00:00</published><updated>2019-03-13T00:00:00+00:00</updated><author><name>Matt Layman</name></author><id>tag:pyvideo.org,2019-03-13:python-frederick/python-testing-101-with-pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the March 2019 Python Frederick event, Matt focused on the fundamentals of Python testing while using the pytest package.&lt;/p&gt;
</summary><category term="pytest"></category><category term="unit testing"></category><category term="testing"></category></entry><entry><title>Anvil</title><link href="https://pyvideo.org/python-frederick/anvil.html" rel="alternate"></link><published>2019-01-09T00:00:00+00:00</published><updated>2019-01-09T00:00:00+00:00</updated><author><name>Meredydd Luff</name></author><id>tag:pyvideo.org,2019-01-09:python-frederick/anvil.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Meredydd gave a talk about Anvil to Python Frederick, a Python user group in Frederick, MD. Thanks for joining us!&lt;/p&gt;
</summary><category term="anvil"></category><category term="webapp"></category></entry><entry><title>Django Tutorial Adventure Part 2</title><link href="https://pyvideo.org/python-frederick/django-tutorial-adventure-part-2.html" rel="alternate"></link><published>2018-12-13T00:00:00+00:00</published><updated>2018-12-13T00:00:00+00:00</updated><author><name>Patrick Pierson</name></author><id>tag:pyvideo.org,2018-12-13:python-frederick/django-tutorial-adventure-part-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the December 2018 Python Frederick event, Patrick walked through the second half of the Django 2.1 tutorial. Since Patrick is a DevOps engineer instead of a web developer, the group got to share in the experience in a novice.&lt;/p&gt;
&lt;p&gt;The Django tutorial is very large so we picked up from where we left off from the previous presentation. If you want to watch that experience, check out &lt;a class="reference external" href="https://www.youtube.com/watch?v=ZSs2eZ-yFps"&gt;https://www.youtube.com/watch?v=ZSs2eZ-yFps&lt;/a&gt;&lt;/p&gt;
</summary><category term="django"></category><category term="web development"></category></entry><entry><title>Build Native Mobile Apps with Python and BeeWare</title><link href="https://pyvideo.org/python-frederick/build-native-mobile-apps-with-python-and-beeware.html" rel="alternate"></link><published>2018-10-11T00:00:00+00:00</published><updated>2018-10-11T00:00:00+00:00</updated><author><name>Bob Marchese</name></author><id>tag:pyvideo.org,2018-10-11:python-frederick/build-native-mobile-apps-with-python-and-beeware.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the October 2018 Python Frederick event, Bob showed the group how we can build native mobile applications that are written completely in Python using the BeeWare suite of tools&lt;/p&gt;
</summary><category term="beeware"></category><category term="mobile"></category></entry><entry><title>Django Tutorial Adventure</title><link href="https://pyvideo.org/python-frederick/django-tutorial-adventure.html" rel="alternate"></link><published>2018-08-09T00:00:00+00:00</published><updated>2018-08-09T00:00:00+00:00</updated><author><name>Patrick Pierson</name></author><id>tag:pyvideo.org,2018-08-09:python-frederick/django-tutorial-adventure.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the August 2018 Python Frederick event, Patrick walked through the Django 2.1 tutorial. Since Patrick is a DevOps engineer instead of a web developer, the group got to share in the experience in a novice.&lt;/p&gt;
&lt;p&gt;The Django tutorial is very large so we only managed to complete parts 1 and 2 of the tutorial.&lt;/p&gt;
</summary><category term="django"></category><category term="web development"></category></entry><entry><title>Python + Software Defined Radios</title><link href="https://pyvideo.org/python-frederick/python-software-defined-radios.html" rel="alternate"></link><published>2018-04-13T00:00:00+00:00</published><updated>2018-04-13T00:00:00+00:00</updated><author><name>Patrick Pierson</name></author><id>tag:pyvideo.org,2018-04-13:python-frederick/python-software-defined-radios.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the April 2018 Python Frederick presentation, Patrick Pierson talked about how to use Python with software defined radios.&lt;/p&gt;
</summary><category term="sdr"></category></entry><entry><title>How we built pythonfrederick.org for 4Â¢ a day</title><link href="https://pyvideo.org/python-frederick/how-we-built-pythonfrederickorg-for-4c-a-day.html" rel="alternate"></link><published>2018-03-14T00:00:00+00:00</published><updated>2018-03-14T00:00:00+00:00</updated><author><name>Matt Layman</name></author><id>tag:pyvideo.org,2018-03-14:python-frederick/how-we-built-pythonfrederickorg-for-4c-a-day.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At our March 2018 event, Matt Layman spoke to the group about how to build a portfolio website using Pelican and Netlify for the cost of a domain name.&lt;/p&gt;
&lt;p&gt;The recording was interrupted when a display cable was pulled, but the first portion of the talk outlines most of the parts and process are included so we decided to publish it anyway.&lt;/p&gt;
&lt;p&gt;Note: requirement.txt should have been requirements.txt (with an s character). This was an oversight and fixed later in the talk.&lt;/p&gt;
</summary><category term="netlify"></category><category term="pelican"></category></entry><entry><title>Data science in Python</title><link href="https://pyvideo.org/python-frederick/data-science-in-python.html" rel="alternate"></link><published>2017-12-14T00:00:00+00:00</published><updated>2017-12-14T00:00:00+00:00</updated><author><name>Christine Lee</name></author><id>tag:pyvideo.org,2017-12-14:python-frederick/data-science-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the December 2017 Python Frederick meetup, Christine Lee provided an excellent overview of the Python data science ecosystem. There's a lot of info so the topics are listed below with their times.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Anaconda - &lt;a class="reference external" href="https://youtu.be/3kTOLVD0ZCg?t=236"&gt;https://youtu.be/3kTOLVD0ZCg?t=236&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NumPy - &lt;a class="reference external" href="https://youtu.be/3kTOLVD0ZCg?t=726"&gt;https://youtu.be/3kTOLVD0ZCg?t=726&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SymPy - &lt;a class="reference external" href="https://youtu.be/3kTOLVD0ZCg?t=1204"&gt;https://youtu.be/3kTOLVD0ZCg?t=1204&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SciPy - &lt;a class="reference external" href="https://youtu.be/3kTOLVD0ZCg?t=1827"&gt;https://youtu.be/3kTOLVD0ZCg?t=1827&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;scikit-learn - &lt;a class="reference external" href="https://youtu.be/3kTOLVD0ZCg?t=2432"&gt;https://youtu.be/3kTOLVD0ZCg?t=2432&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pandas - &lt;a class="reference external" href="https://youtu.be/3kTOLVD0ZCg?t=3385"&gt;https://youtu.be/3kTOLVD0ZCg?t=3385&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;matplotlib - &lt;a class="reference external" href="https://youtu.be/3kTOLVD0ZCg?t=3953"&gt;https://youtu.be/3kTOLVD0ZCg?t=3953&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bokey and Plotly - &lt;a class="reference external" href="https://youtu.be/3kTOLVD0ZCg?t=4458"&gt;https://youtu.be/3kTOLVD0ZCg?t=4458&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jupyter Notebooks - &lt;a class="reference external" href="https://youtu.be/3kTOLVD0ZCg?t=5520"&gt;https://youtu.be/3kTOLVD0ZCg?t=5520&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="data science"></category></entry><entry><title>Scaping the web with Scrapy</title><link href="https://pyvideo.org/python-frederick/scaping-the-web-with-scrapy.html" rel="alternate"></link><published>2017-11-09T00:00:00+00:00</published><updated>2017-11-09T00:00:00+00:00</updated><author><name>Micah Nordland</name></author><id>tag:pyvideo.org,2017-11-09:python-frederick/scaping-the-web-with-scrapy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the November 2017 Python Frederick presentation, Micah showed the group how to get data from web pages using Scrapy. He explained the core pieces needed to work with Scrapy and demonstrated the tool by building a project that scraped content from a sample website.&lt;/p&gt;
</summary><category term="scrapy"></category><category term="scraping"></category></entry><entry><title>Python web frameworks shootout</title><link href="https://pyvideo.org/python-frederick/python-web-frameworks-shootout.html" rel="alternate"></link><published>2017-10-11T00:00:00+00:00</published><updated>2017-10-11T00:00:00+00:00</updated><author><name>Matt Layman</name></author><id>tag:pyvideo.org,2017-10-11:python-frederick/python-web-frameworks-shootout.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the October 2017 Python Frederick meetup, we looked at API Star, Falcon, Flask, Django, and Pyramid and did a comparison of their features to see which would be the best fit for your future web project.&lt;/p&gt;
</summary><category term="api star"></category><category term="falcon"></category><category term="flask"></category><category term="django"></category><category term="pyramid"></category></entry><entry><title>Pipfile and pipenv</title><link href="https://pyvideo.org/python-frederick/pipfile-and-pipenv.html" rel="alternate"></link><published>2017-08-09T00:00:00+00:00</published><updated>2017-08-09T00:00:00+00:00</updated><author><name>Matt Layman</name></author><id>tag:pyvideo.org,2017-08-09:python-frederick/pipfile-and-pipenv.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At this Python Frederick talk, Matt Layman talked about Python's new Pipfile format and how it solves some of the package dependency management problems that Python applications face.&lt;/p&gt;
</summary><category term="pipfile"></category><category term="pipenv"></category></entry></feed>