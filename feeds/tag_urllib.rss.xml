<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 22 Aug 2011 00:00:00 +0000</lastBuildDate><item><title>Networking Libraries in Python</title><link>https://pyvideo.org/pycon-au-2011/networking-libraries-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will explore the core networking libraries available in
Python.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;ol class="arabic simple"&gt;
&lt;li&gt;Python Standard Library. http and urllib package (Python3 and
Python2).&lt;/li&gt;
&lt;li&gt;Capabilities of other 3rd party networking libraries - pycurl and
httplib2. When to use them and why they exist.&lt;/li&gt;
&lt;li&gt;Asychronous Network IO using Twisted Matrix Framework.&lt;/li&gt;
&lt;li&gt;Tornado framework capablities - Generic overview.&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Senthil Kumuran</dc:creator><pubDate>Mon, 22 Aug 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-08-22:pycon-au-2011/networking-libraries-in-python.html</guid><category>framework</category><category>network</category><category>networking</category><category>pycurl</category><category>tornado</category><category>twisted</category><category>urllib</category></item><item><title>HTTP in Python: which library for what task?</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--http-in-python--which-library-for-wha.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;HTTP in Python: which library for what task?&lt;/p&gt;
&lt;p&gt;Presented by Augie Fackler&lt;/p&gt;
&lt;p&gt;HTTP is the lingua franca of the web, and many things done in Python
depend on it, yet HTTP in Python isn't always as good as one would
expect. It's well worth knowing the options and tradeoffs available.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;HTTP in Python is very much a mixed bag of available technology. What's
implemented mostly works well, but there are some frustrating gaps in
different libraries that are poorly documented. I've gone wading through
every HTTP library I can find for Python while trying to fix an obscure
bug in Mercurial and decided to write my own. I'll cover what's
available today and why I'm starting from scratch with a completely new
implementation.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Augie Fackler</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--http-in-python--which-library-for-wha.html</guid><category>httplib</category><category>pycon</category><category>pycon2011</category><category>pycurl</category><category>urllib</category></item></channel></rss>