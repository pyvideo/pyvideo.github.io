<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 26 May 2016 00:00:00 +0000</lastBuildDate><item><title>Probablistic Programming Data Science with PyMC3</title><link>https://pyvideo.org/pydata-london-2016/thomas-wiecki-probablistic-programming-data-science-with-pymc3-1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData London 2016&lt;/p&gt;
&lt;p&gt;Probabilistic programming is a new paradigm that greatly increases the number of people who can successfully build statistical models and machine learning algorithms, and makes experts radically more effective. This talk will provide an overview of PyMC3, a new probabilistic programming package for Python featuring intuitive syntax and next-generation sampling algorithms.&lt;/p&gt;
&lt;p&gt;Machine learning is the driving force behind many recent revolutions in data science. Comprehensive libraries provide the data scientist with many turnkey algorithms that have very weak assumptions on the actual distribution of the data being modeled. While this blackbox property makes machine learning algorithms applicable to a wide range of problems, it also limits the amount of insight that can be gained by applying them.&lt;/p&gt;
&lt;p&gt;The field of statistics on the other hand often approaches problems individually and hand-tailors statistical models to specific problems. To perform inference on these models, however, is often mathematically very challenging, and thus requires time-deriving equations as well as simplifying assumptions (like the normality assumption) to make inference mathematically tractable.&lt;/p&gt;
&lt;p&gt;Probabilistic programming is a new programming paradigm that provides the best of both worlds and revolutionizes the field of machine learning. Recent methodological advances in sampling algorithms like Markov Chain Monte Carlo (MCMC), as well as huge increases in processing power, allow for almost complete automation of the inference process. Probabilistic programming thus greatly increases the number of people who can successfully build statistical models and machine learning algorithms, and makes experts radically more effective. Data scientists can create complex generative Bayesian models tailored to the structure of the data and specific problem at hand, but without the burden of mathematical tractability or limitations due to mathematical simplifications.&lt;/p&gt;
&lt;p&gt;This talk will provide an overview of PyMC3, a new probabilistic programming package for Python featuring intuitive syntax and next-generation sampling algorithms.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;PyData is a gathering of users and developers of data analysis tools in Python. The goals are to provide Python enthusiasts a place to share ideas and learn from each other about how best to apply our language and tools to ever-evolving challenges in the vast realm of data management, processing, analytics, and visualization.&lt;/p&gt;
&lt;p&gt;We aim to be an accessible, community-driven conference, with tutorials for novices, advanced topical workshops for practitioners, and opportunities for package developers and users to meet in person.&lt;/p&gt;
&lt;p&gt;www.pydata.org&lt;/p&gt;
&lt;p&gt;Notebook: &lt;a class="reference external" href="https://gist.github.com/anonymous/9287a213fe188a79d7d7774eef79ad4d"&gt;https://gist.github.com/anonymous/9287a213fe188a79d7d7774eef79ad4d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://docs.google.com/presentation/d/1QNxSjDHJbFL7vFwQHHheeGmBHEJAo39j28xdObFY6Eo/edit"&gt;https://docs.google.com/presentation/d/1QNxSjDHJbFL7vFwQHHheeGmBHEJAo39j28xdObFY6Eo/edit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Twitter: &lt;a class="reference external" href="https://twitter.com/twiecki"&gt;https://twitter.com/twiecki&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Wiecki</dc:creator><pubDate>Thu, 26 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-26:pydata-london-2016/thomas-wiecki-probablistic-programming-data-science-with-pymc3-1.html</guid></item><item><title>Algorithmic Trading with Zipline</title><link>https://pyvideo.org/pydata-berlin-2014/algorithmic-trading-with-zipline.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Berlin 2014 - Python is quickly becoming the glue language which
holds together data science and related fields like quantitative
finance. Zipline is a BSD-licensed quantitative trading system which
allows easy backtesting of investment algorithms on historical data. The
system is fundamentally event-driven and a close approximation of how
live-trading systems operate. Moreover, Zipline comes &amp;quot;batteries
included&amp;quot; as many common statistics like moving average and linear
regression can be readily accessed from within a user-written algorithm.
Input of historical data and output of performance statistics is based
on Pandas DataFrames to integrate nicely into the existing Python
eco-system. Furthermore, statistic and machine learning libraries like
matplotlib, scipy, statsmodels, and sklearn integrate nicely to support
development, analysis and visualization of state-of-the-art trading
systems. Zipline is currently used in production as the backtesting
engine powering Quantopian.com -- a free, community-centered platform
that allows development and real-time backtesting of trading algorithms
in the web browser.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Wiecki</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pydata-berlin-2014/algorithmic-trading-with-zipline.html</guid></item><item><title>Probabilistic Programming in Python</title><link>https://pyvideo.org/europython-2014/probabilistic-programming-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Probabilistic Programming allows flexible specification of statistical
models to gain insight from data. The high interpretability and ease by
which different sources can be combined has huge value for Data Science.
PyMC3 features next generation sampling algorithms, an intuitive model
specification syntax, and just-in-time compilation for speed, to allow
estimation of large-scale probabilistic models.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Probabilistic Programming allows flexible specification of statistical
models to gain insight from data. Estimation of best fitting parameter
values, as well as uncertainty in these estimations, can be automated by
sampling algorithms like Markov chain Monte Carlo (MCMC). The high
interpretability and flexibility of this approach has lead to a huge
paradigm shift in scientific fields ranging from Cognitive Science to
Data Science and Quantitative Finance.&lt;/p&gt;
&lt;p&gt;PyMC3 is a new Python module that features next generation sampling
algorithms and an intuitive model specification syntax. The whole code
base is written in pure Python and Just-in-time compiled via Theano for
speed.&lt;/p&gt;
&lt;p&gt;In this talk I will provide an intuitive introduction to Bayesian
statistics and how probabilistic models can be specified and estimated
using PyMC3.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Wiecki</dc:creator><pubDate>Thu, 24 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-24:europython-2014/probabilistic-programming-in-python.html</guid></item></channel></rss>