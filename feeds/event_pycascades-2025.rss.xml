<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - PyCascades 2025</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 09 Feb 2025 00:00:00 +0000</lastBuildDate><item><title>As easy as breathing: manage your workflows with Airflow!</title><link>https://pyvideo.org/pycascades-2025/as-easy-as-breathing-manage-your-workflows-with-airflow.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Apache Airflow is an open source workflow management tool that's been called &amp;quot;cron on steroids&amp;quot;. For a career data engineer, this tool has been central in my success at orchestrating and maintaining data pipelines. But Airflow's applications have grown far beyond the intent for which it was originally built. What was once a machine learning training engine is now a tool I've used extensively over the last 8 years. I've used it across 4 jobs, in several different roles; for side projects and critical infrastructure; for manually triggered jobs and automated workflows; for IT (Ookla/Speedtest.net), science (Allen Institute for Cell Science), the commons (Openverse), the future (Babylist), and liberation (Orca Collective). In this talk, I'll be sharing a brief overview of what Apache Airflow is and how it might be able to help manage your workflows too! As an Airflow user and contributor for the last 8 years, I've seen how this tool can quickly become the hammer for every nail you see. Part of what makes Airflow powerful is that you can define its workflows in pure Python; this means you can leverage all of the clever language features and libraries Python has to offer when setting up a job. No more pesky and repetitive YAML files (GitHub Actions) or domain-specific languages (Jenkins). Use the language and libraries you're familiar with while getting automatic retries, error handling, control flow, and so much more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Madison Swain-Bowden</dc:creator><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-09:/pycascades-2025/as-easy-as-breathing-manage-your-workflows-with-airflow.html</guid><category>PyCascades 2025</category></item><item><title>Community Doesn’t Equate to Visibility</title><link>https://pyvideo.org/pycascades-2025/community-doesnt-equate-to-visibility.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building a strong community around a cause or movement is essential, especially in the tech ecosystem, but community presence alone doesn’t guarantee visibility or influence. This talk will explore the difference between simply having or joining a tech community and ensuring it is visible or you are visible and making impact. Drawing from my experiences in tech communities, especially those focused on gender inclusion, we’ll discuss strategies for amplifying voices, fostering meaningful engagement, and driving tangible outcomes. Attendees will gain insights on leveraging their tech communities to enhance visibility and learn actionable steps to ensure their efforts go beyond internal circles, reaching a broader audience and creating lasting impact.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aji Fama Jobe</dc:creator><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-09:/pycascades-2025/community-doesnt-equate-to-visibility.html</guid><category>PyCascades 2025</category></item><item><title>Data Science Garage: Building Tools for Genomic Research</title><link>https://pyvideo.org/pycascades-2025/data-science-garage-building-tools-for-genomic-research.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;CW: Discussion about cancer&lt;/p&gt;
&lt;p&gt;Explore how Python helps us build open-source workflows and data platforms used in genomic research at Oregon Health &amp;amp; Science University's Knight Cancer Institute. We'll look at the kind of data we see, how it's used, and its role in improving our knowledge and treatment of cancer.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Liam Beckman</dc:creator><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-09:/pycascades-2025/data-science-garage-building-tools-for-genomic-research.html</guid><category>PyCascades 2025</category></item><item><title>Let Me Introduce Y’all to Y’all</title><link>https://pyvideo.org/pycascades-2025/let-me-introduce-yall-to-yall.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Inclusive language is vital to communities. We should avoid gendered pronouns when speaking about broad groups, but some of these vernaculars are ingrained deep in language as well as culture. Thankfully: a clever piece of Texan slang provides a solution. This will be the most Texas thing you’ve ever seen as I explain the history and proper usage of the greatest accomplishment of the English language, Y'all.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mason Egger</dc:creator><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-09:/pycascades-2025/let-me-introduce-yall-to-yall.html</guid><category>PyCascades 2025</category></item><item><title>Lightning Talks (PyCascades 2025)</title><link>https://pyvideo.org/pycascades-2025/lightning-talks-pycascades-2025.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Linh Pham</dc:creator><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-09:/pycascades-2025/lightning-talks-pycascades-2025.html</guid><category>PyCascades 2025</category></item><item><title>Optimal Performance Over Basic as a Perfectionist with Deadlines</title><link>https://pyvideo.org/pycascades-2025/optimal-performance-over-basic-as-a-perfectionist-with-deadlines.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will be going through strategies of optimising Django applications with a focus on the following:
- database optimisation: indexing, query optimisation, and sharding,
- view rendering optimisation: template optimization, caching, and static file handling,
- efficient serialization: minimizing data, compression, and caching,
- concurrency with asynchronous views and background tasks to improve responsiveness.&lt;/p&gt;
&lt;p&gt;After this talk, attendees will learn practical techniques for improving execution time while reducing memory usage.&lt;/p&gt;
&lt;p&gt;This talk is ideal for individuals of all levels with knowledge of how Django works and software development practices.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Velda Kiara</dc:creator><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-09:/pycascades-2025/optimal-performance-over-basic-as-a-perfectionist-with-deadlines.html</guid><category>PyCascades 2025</category></item><item><title>PyLadies Panel: Experiences and Roles within the Tech Community and Open Source</title><link>https://pyvideo.org/pycascades-2025/pyladies-panel-experiences-and-roles-within-the-tech-community-and-open-source.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tammy Do, Drishti Jain, Parul Gupta, Lilinoe Harbottle, and Nasim&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tammy Do</dc:creator><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-09:/pycascades-2025/pyladies-panel-experiences-and-roles-within-the-tech-community-and-open-source.html</guid><category>PyCascades 2025</category></item><item><title>Python for Planet Earth: Climate Modeling and Sustainability in Action</title><link>https://pyvideo.org/pycascades-2025/python-for-planet-earth-climate-modeling-and-sustainability-in-action.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Discover how Python is shaping the future of our planet in this engaging talk. I’ll explore how Python is used to model climate change, monitor environmental shifts, and drive sustainability projects. See how this powerful language is enabling scientists and developers to turn data into actionable insights, helping to tackle some of the most pressing challenges facing our world today. Whether you’re a coder or a climate enthusiast, this session will show you how Python can make a real difference for the Earth.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Drishti Jain</dc:creator><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-09:/pycascades-2025/python-for-planet-earth-climate-modeling-and-sustainability-in-action.html</guid><category>PyCascades 2025</category></item><item><title>Unlocking Concurrency and Performance in Python with ASGI and Async I/O</title><link>https://pyvideo.org/pycascades-2025/unlocking-concurrency-and-performance-in-python-with-asgi-and-async-io.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk delves into leveraging ASGI (Asynchronous Server Gateway Interface) and Python's async features to create high-performance, scalable web applications. We'll compare traditional WSGI-based frameworks with the ASGI ecosystem and explore how async I/O enhances concurrency for managing multiple I/O-bound tasks. Attendees will gain practical insights into building ASGI-compliant apps with FastAPI, learn key concurrency patterns, and discover best practices for integrating asynchronous operations with external APIs. Whether you're building APIs, managing websockets, or running background tasks, this session will equip you to write fast, efficient, and scalable Python applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Y</dc:creator><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-09:/pycascades-2025/unlocking-concurrency-and-performance-in-python-with-asgi-and-async-io.html</guid><category>PyCascades 2025</category></item><item><title>You Should Build a Robot (MicroPython &amp; Microprocessors)</title><link>https://pyvideo.org/pycascades-2025/you-should-build-a-robot-micropython-microprocessors.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thinking about building a robot? You should! But don’t know where to start? In this talk, we'll break down the barriers building your own robotic project using MicroPython and microprocessors. You'll learn what a robot is, why building one is fun (maybe even useful), and how to get started with the essential components. We'll cover microprocessors as the &amp;quot;brain&amp;quot; of your robot, LEDs for visual feedback, actuators for adding movement, and sensors for touch and light.
Whether you're a complete beginner or have dabbled in electronics before, this talk will equip you with the knowledge to start building your own robotic projects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sage Elliott</dc:creator><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-09:/pycascades-2025/you-should-build-a-robot-micropython-microprocessors.html</guid><category>PyCascades 2025</category></item><item><title>Ctrl+Alt+Heal: Python and the Future of MedTech</title><link>https://pyvideo.org/pycascades-2025/ctrlaltheal-python-and-the-future-of-medtech.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Explore how Python is transforming medical robotics in this engaging talk. Discover applications in medical imaging and predictive maintenance, focusing on extracting critical insights to enhance robotic performance. Attendees will learn to leverage Python's data science tools to tackle complex healthcare challenges. A basic understanding of Python and its libraries will enrich the experience, enabling participants to engage with the content and apply insights to their projects. Ideal for Python developers, data scientists, and healthcare tech enthusiasts—no medical background is required, just a passion for Python and its innovative potential in cutting-edge medical technology.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lilinoe Harbottle</dc:creator><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-08:/pycascades-2025/ctrlaltheal-python-and-the-future-of-medtech.html</guid><category>PyCascades 2025</category></item><item><title>Error Culture</title><link>https://pyvideo.org/pycascades-2025/error-culture.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In &amp;quot;Error Culture,&amp;quot; I delve into the overlooked issue of disregarding error alerts in tech environments, a practice that stems from alert overload and leads to critical oversights. I dissect the roots, including alert fatigue and a culture that undervalues preventative measures, and highlight symptoms like excessive reliance on email filtering. My talk proposes actionable solutions to ensure alerts are meaningful and directed at the right people, advocating for a shift towards a culture where alerts enhance organizational efficiency and resilience. Join me as I offer insights into transforming error management from a neglected aspect into a cornerstone of proactive organizational strategy.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan Cheley</dc:creator><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-08:/pycascades-2025/error-culture.html</guid><category>PyCascades 2025</category></item><item><title>Goodbye GIL: Exploring the Free-threaded mode in Python 3.13</title><link>https://pyvideo.org/pycascades-2025/goodbye-gil-exploring-the-free-threaded-mode-in-python-313.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.13 was the first Python version released with a free-threaded mode. Even though the default interpreter still uses the GIL, it has provisions that allow us to run a free-threaded version of the interpreter with the GIL disabled.&lt;/p&gt;
&lt;p&gt;In this talk, we’ll set up and run the free-threaded interpreter and benchmark it with the GIL-enabled version for various kinds of tasks. We'll assess the impact on single-threaded vs multithreaded code and test the performance across CPU-bound and I/O-bound tasks, aiming to identify scenarios where free-threaded Python excels.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adarsh Divakaran</dc:creator><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-08:/pycascades-2025/goodbye-gil-exploring-the-free-threaded-mode-in-python-313.html</guid><category>PyCascades 2025</category></item><item><title>Mono-repositories in Python</title><link>https://pyvideo.org/pycascades-2025/mono-repositories-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A Mono-repository (Monorepo) refers to a repository that contains multiple packages or projects inside one repository. In most cases, it is better to just have multiple repositories that each contain a library, an application or a data science project with Jupyter notebooks. However, in some cases it makes sense to have a monorepo containing multiple projects often sharing a common theme or an ecosystem. This talk will explore the circumstances where monorepos make more sense, how to create monorepos containing Python libraries and projects, handle dependencies, version management and CI/CD setup. We shall go through a sample Python mono repository, thus making it practical for attendees to follow along.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Avik Basu</dc:creator><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-08:/pycascades-2025/mono-repositories-in-python.html</guid><category>PyCascades 2025</category></item><item><title>Observability Matters: Empowering Developers with OpenTelemetry</title><link>https://pyvideo.org/pycascades-2025/observability-matters-empowering-developers-with-opentelemetry.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever experienced your favorite social platform going down? It’s frustrating, right? As users, we feel the inconvenience immediately. To prevent these disruptions, engineering teams rely on various tools and practices to address unexpected system behavior. In today’s distributed world, applications are often segmented into microservices to improve agility and performance. This also brings added complexity, with more opportunities for things to go wrong - errors, latency and more. In this dynamic landscape, observability has evolved from a mere buzzword into a crucial approach for modern reliable systems. We initially gravitate towards a tool for its ease of use, but later after investing significant amount of time and finances, if we choose to migrate, vendor lock-in becomes a major concern. This is where the importance of open standards like OpenTelemetry become essential.&lt;/p&gt;
&lt;p&gt;While many think of observability as solely an issue for SREs, but it’s increasingly a developer concern. During this session, we’ll explore why observability matters and how it is evolved over the years. We'll cover how to instrument Python code, process telemetry data and export it seamlessly for analysis. Attendees will leave with a clearer understanding of how observability increases confidence in managing complex systems and how adopting open standards improve the overall developer experience. Let’s work together to redefine OSS observability, as a shared responsibility through collaboration.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yash Verma</dc:creator><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-08:/pycascades-2025/observability-matters-empowering-developers-with-opentelemetry.html</guid><category>PyCascades 2025</category></item><item><title>Only You Can Prevent Data Fires</title><link>https://pyvideo.org/pycascades-2025/only-you-can-prevent-data-fires.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Many Pythonistas find themselves engaged in the work of tending and defending data, ensuring high quality data is available for products and analytics users. Much like defending a home against wildfires, there are proactive steps you can take to shield your data from disaster. In this talk you’ll see a comprehensive approach to data quality, implementing checks at various parts of the data lifecycle. You'll also learn a bit about wildfire preparedness along the way. If you’ve experienced the chaotic nature of real-world data and are looking for a way to quench the flames this session is for you.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sev Leonard</dc:creator><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-08:/pycascades-2025/only-you-can-prevent-data-fires.html</guid><category>PyCascades 2025</category></item><item><title>PyCascades 2025 Proposal Review Process</title><link>https://pyvideo.org/pycascades-2025/pycascades-2025-proposal-review-process.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, our 2025 Program Chair share details about the proposal review process and walks through an example of how NOT to write a proposal. If you are interesting in volunteering to be a reviewer, please email &lt;a class="reference external" href="mailto:program&amp;#64;pycascades.com"&gt;program&amp;#64;pycascades.com&lt;/a&gt;. To receive mentoring or to volunteer as a mentor for potential speakers, please email &lt;a class="reference external" href="mailto:speaker-support&amp;#64;pycascades.com"&gt;speaker-support&amp;#64;pycascades.com&lt;/a&gt;. The corresponding blog post for this video can be found at &lt;a class="reference external" href="https://2025.pycascades.com/news/cfp-review/"&gt;https://2025.pycascades.com/news/cfp-review/&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vishal Bakshi</dc:creator><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-08:/pycascades-2025/pycascades-2025-proposal-review-process.html</guid><category>PyCascades 2025</category></item><item><title>Quantifying Nebraska</title><link>https://pyvideo.org/pycascades-2025/quantifying-nebraska.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In 2020, xkcd published Dependency, which posited that &amp;quot;all modern digital infrastructure&amp;quot; is ultimately transitively dependent on &amp;quot;a project some random person in Nebraska has been thanklessly maintaining since 2003&amp;quot;.&lt;/p&gt;
&lt;p&gt;How can we find these projects and ensure that their maintainers get the thanks and — more importantly — the resources they need to keep delivering the quality software that we all rely upon?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Harvey</dc:creator><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-08:/pycascades-2025/quantifying-nebraska.html</guid><category>PyCascades 2025</category></item><item><title>Re-Py-Ducible Builds</title><link>https://pyvideo.org/pycascades-2025/re-py-ducible-builds.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Crank your Python best practices up to 11 with Reproducible Builds!&lt;/p&gt;
&lt;p&gt;This talk will explore Reproducible Builds by highlighting issues identified in Python projects, from the simple to the seemingly inscrutible.&lt;/p&gt;
&lt;p&gt;Reproducible Builds is basically the crazy idea that when you build something, and you build it again, you get the exact same thing... or even more important, if someone else builds it, they get the exact same thing too.&lt;/p&gt;
&lt;p&gt;Through a few code examples demonstrating common problems folks will learn what to watch out for when coding and how to fix them once identified.&lt;/p&gt;
&lt;p&gt;Some of the useful tooling for diagnosing and troubleshooting reproducibility issues (diffoscope and reprotest)... just so happen to be written in Python! Will even show you how to use them... and maybe take a look inside.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vagrant Cascadian</dc:creator><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-08:/pycascades-2025/re-py-ducible-builds.html</guid><category>PyCascades 2025</category></item><item><title>Seeing is Believing: Solve Communication Gaps with the Lost Art of Diagrams</title><link>https://pyvideo.org/pycascades-2025/seeing-is-believing-solve-communication-gaps-with-the-lost-art-of-diagrams.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is about communicating with visuals to make complex ideas simple to understand. Over the years I have produced diagrams, charts, illustrations and other graphics to help people understand sophisticated project concepts. This includes project architecture, standard operating procedures, coding concepts, sprints and roadmaps.&lt;/p&gt;
&lt;p&gt;You will be guided through ways of how to make stylized examples of your project code and workflows in easy to follow examples. By using common software for illustrations along with some simple guidelines you too can make easy to follow visual content for your next project.&lt;/p&gt;
&lt;p&gt;Understand how to make your technical documentation into visual graphics with diagram design style guides&lt;/p&gt;
&lt;p&gt;See examples of how to take technical documentation and create an intuitive diagram of it to share&lt;/p&gt;
&lt;p&gt;Come away with an ability to execute a simple (or sophisticated) graphic with essential steps and key requirements&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tadeh Hakopian</dc:creator><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-08:/pycascades-2025/seeing-is-believing-solve-communication-gaps-with-the-lost-art-of-diagrams.html</guid><category>PyCascades 2025</category></item><item><title>Web Maps, 2 Ways with Streamlit and PyScript</title><link>https://pyvideo.org/pycascades-2025/web-maps-2-ways-with-streamlit-and-pyscript.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Let’s use Python to make fun and interactive web maps! In this talk, we'll explore two easy ways to create web maps using Python: Streamlit and PyScript. We'll build a web app that helps you find the perfect hiking trail in Washington state, and in the process, learn how to integrate geographic data, visualize it interactively, and deploy it to the web.&lt;/p&gt;
&lt;p&gt;Each tool offers a unique approach to building interactive maps. With Streamlit, you’ll see how simple it is to set up a dashboard (that includes maps) with minimal code. Then, we’ll dive into PyScript, which enables you to run Python directly in the browser, allowing you to create and deploy a web map without having Python installed.&lt;/p&gt;
&lt;p&gt;By the end of this talk, you'll understand two straightforward methods to create and deploy web maps with Python, with practical examples you can begin using right away!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christy Heaton</dc:creator><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-08:/pycascades-2025/web-maps-2-ways-with-streamlit-and-pyscript.html</guid><category>PyCascades 2025</category></item><item><title>You are sharing your code wrong (and what to do about it)</title><link>https://pyvideo.org/pycascades-2025/you-are-sharing-your-code-wrong-and-what-to-do-about-it.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Everyone who writes also distributes Python code. The only reliable way to share Python code is by packaging it, any other way hurts your consumers. Packaging can be an intimidating topic most would rather avoid but following just a few best practices of packaging can make your code much easier to share, even without going through the process of uploading to pypi.org.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeremiah Paige</dc:creator><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2025-02-08:/pycascades-2025/you-are-sharing-your-code-wrong-and-what-to-do-about-it.html</guid><category>PyCascades 2025</category></item></channel></rss>