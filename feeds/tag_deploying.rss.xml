<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 27 Aug 2016 00:00:00 +0000</lastBuildDate><item><title>Deploying Machine Learning using sklearn pipelines</title><link>https://pyvideo.org/pydata-chicago-2016/deploying-machine-learning-using-sklearn-pipelines.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Sklearn pipeline objects provide an framework that simplifies the lifecycle of data science models. This talk will cover the how and why of encoding feature engineering, estimators, and model ensembles in a single deployable object.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Goetsch</dc:creator><pubDate>Sat, 27 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-27:pydata-chicago-2016/deploying-machine-learning-using-sklearn-pipelines.html</guid><category>deploying</category><category>learning</category><category>machine learning</category><category>sklearn</category></item><item><title>PyOhio 2010: Wrangling the bits, standardizing how apps get built</title><link>https://pyvideo.org/pyohio-2010/pyohio-2010--wrangling-the-bits--standardizing-ho.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Wrangling the bits, standardizing how apps get built&lt;/p&gt;
&lt;p&gt;Presented by Rick Harding&lt;/p&gt;
&lt;p&gt;As we moved more work to Python we had to figure out how to start,
share, and deploy projects in a standard way. Virtualenv, pip, and Git
to the rescue.&lt;/p&gt;
&lt;p&gt;[Note: The talk starts at around 7:20 when the mic is working.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rick Harding</dc:creator><pubDate>Sat, 31 Jul 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-07-31:pyohio-2010/pyohio-2010--wrangling-the-bits--standardizing-ho.html</guid><category>deploying</category><category>fabric</category><category>git</category><category>pip</category><category>pyohio</category><category>pyohio2010</category><category>virtualenv</category></item><item><title>Safely deploying on the cutting edge</title><link>https://pyvideo.org/djangocon-us-2011/djangocon-2011--safely-deploying-on-the-cutting-e.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Safely deploying on the cutting edge&lt;/p&gt;
&lt;p&gt;Eric Holscher&lt;/p&gt;
&lt;p&gt;This talk will go through the deployment system that we have built at
Urban Airship. It will cover the process that allows us to automate our
deployments, making it safe to deploy at any time. It's built on Fabric,
Gunicorn, Virtualenv, Rsync, Supervisord, and Python. We end up with
fully isolated environments for our services that are easy to manage.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Mon, 05 Sep 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-09-05:djangocon-us-2011/djangocon-2011--safely-deploying-on-the-cutting-e.html</guid><category>deploying</category><category>djangocon</category><category>djangocon2011</category><category>fabric</category><category>gunicorn</category><category>virtualenv</category><category>web</category></item><item><title>Deploying a Django application using Juju</title><link>https://pyvideo.org/kiwi-pycon-2014/deploying-a-django-application-using-juju.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Juju is a service orchestration tool for deploying services into public
or private clouds. I will talk about how I deployed my Django
application using Juju.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Juju is a service orchestration tool for deploying services into public
or private clouds. The services that Juju deploys are described in
Charms. A Charm should use the &amp;quot;best practice&amp;quot; for deploying the
service. In the case of Django, this would be using gunicorn and nginx.
I explain how the postgresql charm communicates with the django charm,
and how I had to change my application's settings and urls to work with
the django charm. The application that is deployed is a &amp;quot;proprietary&amp;quot;
app, and as such, the deployment of the application itself is done with
another charm. The interaction between the subordinate charms and the
principal django charm are explained, and how the data is exchanged
between the charms. As well as the deployment story, I also explain how
application updates are deployed very simply.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Penhey</dc:creator><pubDate>Sun, 14 Sep 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-09-14:kiwi-pycon-2014/deploying-a-django-application-using-juju.html</guid><category>deploying</category><category>deployment</category><category>django</category><category>juju</category></item><item><title>How Are Large Applications Embedding Python? (#6)</title><link>https://pyvideo.org/pycon-us-2010/pycon-2010--how-are-large-applications-embedding-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How Are Large Applications Embedding Python?&lt;/p&gt;
&lt;p&gt;Presented by Peter Shinners&lt;/p&gt;
&lt;p&gt;An examination of the ways Python is being embedded and deployed in the
large applications used for computer graphics; like Renderman, Maya,
Houdini, and Nuke.&lt;/p&gt;
&lt;p&gt;This session is for those interested in the popular techniques of
embedding the Python interpreter. The survey will determine the best
practices for embedding Python at the core of a large application.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Shinners</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--how-are-large-applications-embedding-.html</guid><category>deploying</category><category>embedded</category><category>pycon</category><category>pycon2010</category></item></channel></rss>