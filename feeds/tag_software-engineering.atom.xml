<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_software-engineering.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-04-21T00:00:00+00:00</updated><entry><title>Efficient Python development with small teams</title><link href="https://pyvideo.org/europython-2013/efficient-python-development-with-small-teams.html" rel="alternate"></link><published>2013-07-05T00:00:00+00:00</published><updated>2013-07-05T00:00:00+00:00</updated><author><name>Marc-André Lemburg</name></author><id>tag:pyvideo.org,2013-07-05:europython-2013/efficient-python-development-with-small-teams.html</id><summary type="html"></summary><category term="quality-assurance"></category><category term="project-management"></category><category term="business"></category><category term="communication"></category><category term="testing"></category><category term="principles"></category><category term="application-design"></category><category term="design"></category><category term="software-engineering"></category><category term="strategies"></category><category term="best-practices"></category><category term="architecture"></category></entry><entry><title>Introducing Python as a main programming language in a company</title><link href="https://pyvideo.org/europython-2013/introducing-python-as-a-main-programming-language-in-a-company.html" rel="alternate"></link><published>2013-07-05T00:00:00+00:00</published><updated>2013-07-05T00:00:00+00:00</updated><author><name>Patrick Büchler</name></author><id>tag:pyvideo.org,2013-07-05:europython-2013/introducing-python-as-a-main-programming-language-in-a-company.html</id><summary type="html"></summary><category term="best-practices"></category><category term="teamwork"></category><category term="software-engineering"></category><category term="business"></category><category term="ecommerce"></category></entry><entry><title>Python: da programmatore a domatore</title><link href="https://pyvideo.org/europython-2013/python-da-programmatore-a-domatore.html" rel="alternate"></link><published>2013-07-05T00:00:00+00:00</published><updated>2013-07-05T00:00:00+00:00</updated><author><name>Alessandro Pisa</name></author><id>tag:pyvideo.org,2013-07-05:europython-2013/python-da-programmatore-a-domatore.html</id><summary type="html"></summary><category term="debugging"></category><category term="testing"></category><category term="integration"></category><category term="scalability"></category><category term="tdd"></category><category term="optimization"></category><category term="design"></category><category term="software-engineering"></category><category term="best-practices"></category><category term="architecture"></category></entry><entry><title>Solid Python Application Deployments For Everybody - Questions</title><link href="https://pyvideo.org/europython-2013/solid-python-application-deployments-for-everybody-questions.html" rel="alternate"></link><published>2013-07-05T00:00:00+00:00</published><updated>2013-07-05T00:00:00+00:00</updated><author><name>Hynek Schlawack</name></author><id>tag:pyvideo.org,2013-07-05:europython-2013/solid-python-application-deployments-for-everybody-questions.html</id><summary type="html"></summary><category term="best-practices"></category><category term="software-engineering"></category><category term="project-management"></category><category term="principles"></category><category term="automation"></category></entry><entry><title>A hands-on introduction to software testing (reloaded) - Part 1</title><link href="https://pyvideo.org/europython-2013/a-hands-on-introduction-to-software-testing-reloaded-part-1.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Federico Caboni</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/a-hands-on-introduction-to-software-testing-reloaded-part-1.html</id><summary type="html"></summary><category term="quality-assurance"></category><category term="trac"></category><category term="testing"></category><category term="tdd"></category><category term="refactoring"></category><category term="teamwork"></category><category term="software-engineering"></category><category term="best-practices"></category><category term="performance"></category></entry><entry><title>A hands-on introduction to software testing (reloaded) - Part 2</title><link href="https://pyvideo.org/europython-2013/a-hands-on-introduction-to-software-testing-reloaded-part-2.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Federico Caboni</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/a-hands-on-introduction-to-software-testing-reloaded-part-2.html</id><summary type="html"></summary><category term="quality-assurance"></category><category term="trac"></category><category term="testing"></category><category term="tdd"></category><category term="refactoring"></category><category term="teamwork"></category><category term="software-engineering"></category><category term="best-practices"></category><category term="performance"></category></entry><entry><title>A hands-on introduction to software testing (reloaded) - Part 3</title><link href="https://pyvideo.org/europython-2013/a-hands-on-introduction-to-software-testing-reloaded-part-3.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Federico Caboni</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/a-hands-on-introduction-to-software-testing-reloaded-part-3.html</id><summary type="html"></summary><category term="quality-assurance"></category><category term="trac"></category><category term="testing"></category><category term="tdd"></category><category term="refactoring"></category><category term="teamwork"></category><category term="software-engineering"></category><category term="best-practices"></category><category term="performance"></category></entry><entry><title>Designing Large-Scale Applications in Python</title><link href="https://pyvideo.org/europython-2013/designing-large-scale-applications-in-python.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Marc-André Lemburg</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/designing-large-scale-applications-in-python.html</id><summary type="html"></summary><category term="business"></category><category term="database"></category><category term="integration"></category><category term="scalability"></category><category term="servers"></category><category term="refactoring"></category><category term="application-design"></category><category term="design"></category><category term="software-engineering"></category><category term="framework"></category><category term="sql"></category><category term="best-practices"></category><category term="architecture"></category></entry><entry><title>Meta Programming - Some Use Cases for Everyday Programming</title><link href="https://pyvideo.org/europython-2013/meta-programming-some-use-cases-for-everyday-programming.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Mike Müller</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/meta-programming-some-use-cases-for-everyday-programming.html</id><summary type="html"></summary><category term="debugging"></category><category term="metaprogramming"></category><category term="testing"></category><category term="principles"></category><category term="refactoring"></category><category term="application-design"></category><category term="architecture"></category><category term="validation"></category><category term="software-engineering"></category></entry><entry><title>Server side story</title><link href="https://pyvideo.org/europython-2013/server-side-story.html" rel="alternate"></link><published>2013-07-04T00:00:00+00:00</published><updated>2013-07-04T00:00:00+00:00</updated><author><name>Simone Deponti</name></author><id>tag:pyvideo.org,2013-07-04:europython-2013/server-side-story.html</id><summary type="html"></summary><category term="HTTP"></category><category term="networking"></category><category term="deploy"></category><category term="mobile"></category><category term="javascript"></category><category term="desktop"></category><category term="sysadmin"></category><category term="json"></category><category term="gevent"></category><category term="design"></category><category term="software-engineering"></category><category term="best-practices"></category><category term="application-design"></category><category term="websockets"></category><category term="architecture"></category></entry><entry><title>Python: from programmer to tamer</title><link href="https://pyvideo.org/europython-2013/python-from-programmer-to-tamer.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Alessandro Pisa</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/python-from-programmer-to-tamer.html</id><summary type="html"></summary><category term="debugging"></category><category term="testing"></category><category term="integration"></category><category term="scalability"></category><category term="tdd"></category><category term="optimization"></category><category term="design"></category><category term="software-engineering"></category><category term="best-practices"></category><category term="architecture"></category></entry><entry><title>Solid Python Application Deployments For Everybody</title><link href="https://pyvideo.org/europython-2013/solid-python-application-deployments-for-everybody.html" rel="alternate"></link><published>2013-07-02T00:00:00+00:00</published><updated>2013-07-02T00:00:00+00:00</updated><author><name>Hynek Schlawack</name></author><id>tag:pyvideo.org,2013-07-02:europython-2013/solid-python-application-deployments-for-everybody.html</id><summary type="html"></summary><category term="best-practices"></category><category term="software-engineering"></category><category term="project-management"></category><category term="principles"></category><category term="automation"></category></entry><entry><title>Lessons from a massive, openly-developed project</title><link href="https://pyvideo.org/pycon-italia-2018/lessons-from-a-massive-openly-developed-project.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Thierry Carrez</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/lessons-from-a-massive-openly-developed-project.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenStack is a massive open source project, formed of multiple
components written in Python. Created in 2010, it attracted thousands of
developers which produced hundreds of thousands of commits. It is
completely openly-developed: there is no single organization owning it,
and anyone can participate on a level playing ground.&lt;/p&gt;
&lt;p&gt;During this wild ride, we discovered new classes of issues, crafted
novel solutions, made mistakes and learned lessons, most of them
applicable to other open source projects. Come learn about software
engineering best practices, open collaboration advice and other fun tips
and tricks based on our experience ! No prior experience with OpenStack
is needed to attend this talk.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 14:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="quality-assurance"></category><category term="project-management"></category><category term="continuous-integration"></category><category term="#lessonslearned"></category><category term="collaboration"></category><category term="principles"></category><category term="software-engineering"></category><category term="best-practices"></category><category term="OpenStack"></category><category term="release-engineering"></category></entry><entry><title>Testing, then once you got there?</title><link href="https://pyvideo.org/pycon-italia-2018/testing-then-once-you-got-there.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Alessandro Molina</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/testing-then-once-you-got-there.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I benefici di una testsuite completa e coerente sono un dato di fatto,
ma una volta completata la nostra test suite è lì che cominciano i veri
problemi ed è lì che diventa meno chiaro come muoversi.&lt;/p&gt;
&lt;p&gt;Che rapporto tenere tra le tipologie di test? Le Unit Test sono
efficienti per identificare problemi e garantire comportamenti
consistenti sul lungo termine, ma sono come verificare che le gambe
camminano e le braccia fanno le flessioni senza verificare che un uomo
intero riesca a camminare e fare le flessioni. I test e2e invece sono
efficacissimi nel garantire il comportamento del sistema nel suo
insieme, ma possono rapidamente diventare lenti ed insostenibili.&lt;/p&gt;
&lt;p&gt;Sappiamo bene che ci sono i mock e fake objects, ma quando veramente mi
conviene usare uno, l’altro o l’implementazione reale? Un test che
riceve dei MagicMock e ritorna un MagicMock quanto è affidabile
realmente?&lt;/p&gt;
&lt;p&gt;Se ho decine di sviluppatori quanto serve testare i feature branches
isolatamente dagli altri feature branches?&lt;/p&gt;
&lt;p&gt;Questo talk cerca di evidenziare le problematiche che si devono
affrontare quando si parla di testing di un progetto di grande
complessità, che integra decine di servizi e cerca di fornire alcune
best practices pur conscio che non c’è mai una sola risposta.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 12:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="best-practices"></category><category term="testing"></category><category term="software-engineering"></category><category term="coverage"></category><category term="application-development"></category></entry></feed>