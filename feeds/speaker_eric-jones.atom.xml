<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_eric-jones.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-04-24T00:00:00+00:00</updated><entry><title>Keynote: Looking Back on SciPy and to the Future of SciPy Japan</title><link href="https://pyvideo.org/scipy-japan-2019/keynote-looking-back-on-scipy-and-to-the-future-of-scipy-japan.html" rel="alternate"></link><published>2019-04-24T00:00:00+00:00</published><updated>2019-04-24T00:00:00+00:00</updated><author><name>Eric Jones</name></author><id>tag:pyvideo.org,2019-04-24:scipy-japan-2019/keynote-looking-back-on-scipy-and-to-the-future-of-scipy-japan.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Eric Jones is widely known as one of the founding fathers of Pythonâ€™s scientific community, Eric drives business growth through digital transformation. For more than 15 years, he has been an innovator in applying machine learning, image processing, 3D visualization, and parallel computing to elegantly solve the most complex business problems. Prior to founding Enthought in 2001, Eric focused on numerical electromagnetics and genetic optimization in the department of electrical engineering at Duke University. He holds both a Ph.D. and M.S. in electrical engineering from Duke University and a B.S.E. in mechanical engineering from Baylor University.&lt;/p&gt;
&lt;div class="section" id="connect-with-us"&gt;
&lt;h4&gt;Connect with us!&lt;/h4&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/enthought"&gt;https://twitter.com/enthought&lt;/a&gt;
&lt;a class="reference external" href="https://www.facebook.com/Enthought/"&gt;https://www.facebook.com/Enthought/&lt;/a&gt;
&lt;a class="reference external" href="https://www.linkedin.com/company/enthought"&gt;https://www.linkedin.com/company/enthought&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="keynote"></category></entry><entry><title>Introduction to NumPy</title><link href="https://pyvideo.org/scipy-2015/introduction-to-numpy.html" rel="alternate"></link><published>2015-07-08T00:00:00+00:00</published><updated>2015-07-08T00:00:00+00:00</updated><author><name>Eric Jones</name></author><id>tag:pyvideo.org,2015-07-08:scipy-2015/introduction-to-numpy.html</id><summary type="html"></summary><category term="tutorial"></category></entry><entry><title>Integrating Scripting into Commercial Applications</title><link href="https://pyvideo.org/scipy-2016/integrating-scripting-into-commercial-applications-scipy-2016-eric-jones.html" rel="alternate"></link><published>2016-07-15T00:00:00+00:00</published><updated>2016-07-15T00:00:00+00:00</updated><author><name>Eric Jones</name></author><id>tag:pyvideo.org,2016-07-15:scipy-2016/integrating-scripting-into-commercial-applications-scipy-2016-eric-jones.html</id><summary type="html"></summary><category term="SciPy 2016"></category></entry><entry><title>Introduction to NumPy and Matplotlib</title><link href="https://pyvideo.org/scipy-2012/introduction-to-numpy-and-matplotlib.html" rel="alternate"></link><published>2012-07-16T00:00:00+00:00</published><updated>2012-07-16T00:00:00+00:00</updated><author><name>Eric Jones</name></author><id>tag:pyvideo.org,2012-07-16:scipy-2012/introduction-to-numpy-and-matplotlib.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;NumPy is the most fundamental package for scientific computing with
Python. It adds to the Python language a data structure (the NumPy
array) that has access to a large library of mathematical functions and
operations, providing a powerful framework for fast computations in
multiple dimensions. NumPy is the basis for all SciPy packages which
extends vastly the computational and algorithmic capabilities of Python
as well as many visualization tools like Matplotlib, Chaco or Mayavi.&lt;/p&gt;
&lt;p&gt;This tutorial will teach students the fundamentals of NumPy, including
fast vector-based calculations on numpy arrays, the origin of its
efficiency and a short introduction to the matplotlib plotting library.
In the final section, more advanced concepts will be introduced
including structured arrays, broadcasting and memory mapping.&lt;/p&gt;
</summary></entry></feed>