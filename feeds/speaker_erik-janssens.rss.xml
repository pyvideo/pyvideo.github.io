<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Wed, 23 Jul 2014 00:00:00 +0000</lastBuildDate><item><title>Data model patterns with SQLAlchemy</title><link>https://pyvideo.org/europython-2013/data-model-patterns-with-sqlalchemy.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Janssens</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/data-model-patterns-with-sqlalchemy.html</guid><category>sql</category><category>sqlalchemy</category><category>metaprogramming</category><category>orm</category><category>database</category></item><item><title>The next iteration of your GUI</title><link>https://pyvideo.org/europython-2013/the-next-iteration-of-your-gui.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will show how GUI applications written as a series of
generators are fun to write, responsive, user friendly and easy to unit
test. We dive into the details of language functions of PEP 342
(Coroutines via Enhanced Generators) and PEP 380 (Syntax for Delegating
to a Subgenerator). With this knowledge refreshed, we discuss why and
how these functions can be integrated in an event loop. Then we
demonstrate how we used these functions to rewrite all the asynchronous
operations of the Camelot framework and avoided series of callbacks
transforming the code from complicated to beatiful.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Janssens</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:europython-2013/the-next-iteration-of-your-gui.html</guid><category>camelot</category><category>gui</category><category>coroutine</category></item><item><title>New beauty in Camelot</title><link>https://pyvideo.org/europython-2011/new-beauty-in-camelot.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Erik Janssens,Jeroen Dierckx - 22 June 2011 in &amp;quot;Track
Ravioli &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Camelot is a Python framework that leverages SQLAlchemy and QT to build
rich desktop applications. The model - view definition used was inspired
by the Django Admin interface. Some see it as a replacement for MS
Access, but it's underlying libraries allow much more advanced features.&lt;/p&gt;
&lt;p&gt;In this talk we will focus on the changes and new features that were
introduced in Camelot and more importantly, how they can be used in your
applications. Those features range from Matplotlib chart integration and
new types of actions to displaying custom SQLAlchemy queries in a table
view.&lt;/p&gt;
&lt;p&gt;We will share our experiences with large scale deployment of Python and
Camelot applications to the desktop of the user. In a number of case
studies we will point out the mistakes we made and how they were
corrected.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Janssens</dc:creator><pubDate>Thu, 21 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-21:europython-2011/new-beauty-in-camelot.html</guid><category>deployment</category><category>django</category><category>framework</category><category>matplotlib</category><category>qt</category><category>sqlalchemy</category></item><item><title>SQLAlchemy Drill</title><link>https://pyvideo.org/europython-2014/sqlalchemy-drill.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;If you have been looking to use SQLAlchemy in one of your projects, but
found the documentation a bit overwhelming then this talk is for you. If
you have used SQLAlchemy but feel there are some holes in your knowledge
of the library, then this talk is for you as well. At the beginning of
the talk, we fire up our Python interpreter and start to explore the
library in a structured way. We'll go hands on through the various parts
of the SQLAlchemy. We try out the concepts of each part of the library
and make sure the basics are well understood.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk will introduce the audience to SQLAlchemy in a well
structured way, so that basic concepts are understood. This talk will be
a combination of slides and interactive code editing in IPython. Both
the working of SQLAlchemy as well as best practices in using SQLAlchemy
will be demonstrated.&lt;/p&gt;
&lt;p&gt;I will demonstrate the basic workings of:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;the SQL generation layer&lt;/li&gt;
&lt;li&gt;the DDL generation&lt;/li&gt;
&lt;li&gt;the ORM&lt;/li&gt;
&lt;li&gt;the session&lt;/li&gt;
&lt;li&gt;transactions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The used code will allow those who have their laptop with them to try
the code samples for themselves.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Janssens</dc:creator><pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-23:europython-2014/sqlalchemy-drill.html</guid></item></channel></rss>