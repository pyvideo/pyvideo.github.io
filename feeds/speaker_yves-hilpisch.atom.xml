<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_yves-hilpisch.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-25T00:00:00+00:00</updated><entry><title>A Better Future with Python</title><link href="https://pyvideo.org/europython-2013/a-better-future-with-python.html" rel="alternate"></link><published>2013-07-03T00:00:00+00:00</published><updated>2013-07-03T00:00:00+00:00</updated><author><name>Yves Hilpisch</name></author><id>tag:pyvideo.org,2013-07-03:europython-2013/a-better-future-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;</summary></entry><entry><title>Why Python Has Taken Over Finance</title><link href="https://pyvideo.org/pycon-de-2017/why-python-has-taken-over-finance.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Yves Hilpisch</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/why-python-has-taken-over-finance.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Yves Hilpisch (&amp;#64;dyjh)&lt;/p&gt;
&lt;p&gt;Not too long ago, the finance field was dominated by compiled languages, such as C or C++, since they were considered to be the right choice for the implementation of computationally demanding algorithms.&lt;/p&gt;
&lt;p&gt;Over the last couple of years, Python and its fast growing eco-system of (data analysis) packages have made it today's language of choice for the financial industry.&lt;/p&gt;
&lt;p&gt;This talk illustrates, based on some simple examples, the benefits of working with a high level programming language, such as Python, for the tasks at hand in finance. The examples illustrate that really concise Python code can achieve high performance results.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="algorithms"></category><category term="performance"></category><category term="finance"></category><category term="python"></category></entry><entry><title>Open Source Tools for Financial Time Series Analysis and Visualization</title><link href="https://pyvideo.org/pydata-london-2015/open-source-tools-for-financial-time-series-analysis-and-visualization.html" rel="alternate"></link><published>2015-06-19T00:00:00+00:00</published><updated>2015-06-19T00:00:00+00:00</updated><author><name>Yves Hilpisch</name></author><id>tag:pyvideo.org,2015-06-19:pydata-london-2015/open-source-tools-for-financial-time-series-analysis-and-visualization.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The tutorial covers standard Python and Open Source tools (pandas,
matplotlib, seaborn, R/ggplot, etc.) and recent innovations
(TsTables, bcolz, blaze, plot.ly) for financial time series analysis
and visualization. In addition, approaches are illustrated for high
performance I/O of high frequency financial data. It briefly sheds
light on the visualization of real-time/streaming financial data.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="https://github.com/yhilpisch/pydlon15"&gt;https://github.com/yhilpisch/pydlon15&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Eurex Tutorial - Interactive Financial Analytics with Python and IPython -- With Examples Based on the VSTOXX Volatility Index</title><link href="https://pyvideo.org/pydata-london-2014/eurex-tutorial-interactive-financial-analytics-with-python-and-ipython-with-examples-based-on-the-vstoxx-volatility-index.html" rel="alternate"></link><published>2014-02-21T00:00:00+00:00</published><updated>2014-02-21T00:00:00+00:00</updated><author><name>Yves Hilpisch</name></author><id>tag:pyvideo.org,2014-02-21:pydata-london-2014/eurex-tutorial-interactive-financial-analytics-with-python-and-ipython-with-examples-based-on-the-vstoxx-volatility-index.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Today's financial market environment demands for ever shorter
times-to-insight when it comes to financial analytics tasks. For the
analysis of financial times series or for typical tasks related to
derivatives analytics and trading, Python has developed to the ideal
technology platform.&lt;/p&gt;
&lt;p&gt;Not only that Python provides powerful and efficient libraries for data
analytics, such as NumPy or pandas. With IPython there is a tool and
environment available that facilitates interactive, and even real-time,
financial analytics tremendously.&lt;/p&gt;
&lt;p&gt;The tutorial introduces into IPython and shows, mainly on the basis of
practical examples related to the VSTOXX volatility index, how Python
and IPython might re-define interactive financial analytics.&lt;/p&gt;
&lt;p&gt;Quants, traders, financial engineers, analysts, financial researchers,
model validators and the like all benefit from the tutorial and the new
technologies provided by the Python ecosystem.&lt;/p&gt;
&lt;div class="section" id="background"&gt;
&lt;h4&gt;BACKGROUND&lt;/h4&gt;
&lt;p&gt;For background information see the Python-based &amp;quot;VSTOXX Advanced
Services&amp;quot; and the related backtesting applications:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.eurexchange.com/vstoxx/"&gt;http://www.eurexchange.com/vstoxx/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.eurexchange.com/vstoxx/app1/"&gt;http://www.eurexchange.com/vstoxx/app1/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.eurexchange.com/vstoxx/app2/"&gt;http://www.eurexchange.com/vstoxx/app2/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="technical-requirements"&gt;
&lt;h4&gt;TECHNICAL REQUIREMENTS&lt;/h4&gt;
&lt;p&gt;To follow the tutorial, you should have installed the Anaconda Python
distribution on your notebook. Download and follow the instructions
here:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
http://continuum.io/downloads
&lt;/pre&gt;
&lt;p&gt;After installation, start IPython from the command line interface/shell
as follows:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ ipython notebook --pylab inline
&lt;/pre&gt;
&lt;p&gt;IPython should then start in your default Web browser.&lt;/p&gt;
&lt;/div&gt;
</summary></entry></feed>