<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Lidi Zheng</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_lidi-zheng.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2020-07-23T00:00:00+00:00</updated><subtitle></subtitle><entry><title>gRPC Python, C Extensions, and AsyncIO</title><link href="https://pyvideo.org/europython-2020/grpc-python-c-extensions-and-asyncio.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Lidi Zheng</name></author><id>tag:pyvideo.org,2020-07-23:/europython-2020/grpc-python-c-extensions-and-asyncio.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to make AsyncIO work with the gRPC Core&lt;/p&gt;
&lt;p&gt;Goal - Encourage Python developers to understand C extensions by sharing gRPC Python’s practice, and advocate the adoption of AsyncIO.&lt;/p&gt;
&lt;p&gt;Prerequisite
- Understand thread vs. process;
- Interested in asynchronous programming.&lt;/p&gt;
&lt;p&gt;gRPC Brief
- What’s gRPC Core? And what is gRPC Python …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How to make AsyncIO work with the gRPC Core&lt;/p&gt;
&lt;p&gt;Goal - Encourage Python developers to understand C extensions by sharing gRPC Python’s practice, and advocate the adoption of AsyncIO.&lt;/p&gt;
&lt;p&gt;Prerequisite
- Understand thread vs. process;
- Interested in asynchronous programming.&lt;/p&gt;
&lt;p&gt;gRPC Brief
- What’s gRPC Core? And what is gRPC Python?&lt;/p&gt;
&lt;p&gt;Cython To The Rescue
- Why we picked Cython among all other available tools (e.g., pybind11, ctypes)
- Debuggability: pdb &amp;amp; gdb&lt;/p&gt;
&lt;p&gt;The GIL Friction
- How to delegate work to C extension
- How to make multithreading work&lt;/p&gt;
&lt;p&gt;AsyncIO Topic
- Not blocking the loop, the main headache.
- Non-blocking I/O solution 1: replacing C libraries’ I/O operations
- Non-blocking I/O solution 2: dedicated background poller thread
- Performance improvement (10k -&amp;gt; 20k for client, 4k -&amp;gt; 16k for server)&lt;/p&gt;
&lt;p&gt;Migration to AsyncIO
- Tolerate multithreading and AsyncIO in the same application
- Make both API co-existable in the same application&lt;/p&gt;
</content><category term="EuroPython 2020"></category><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="ASYNC / Concurreny"></category><category term="CPython"></category><category term="Cython"></category><category term="Performance"></category></entry></feed>