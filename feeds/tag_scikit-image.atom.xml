<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_scikit-image.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-08-31T00:00:00+00:00</updated><entry><title>Facial Analysis Techniques for Pythonista (and beyond!)</title><link href="https://pyvideo.org/pycon-italia-2017/facial-analysis-techniques-for-pythonista-and-beyond.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Alex Casalboni</name></author><id>tag:pyvideo.org,2017-04-09:pycon-italia-2017/facial-analysis-techniques-for-pythonista-and-beyond.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The ability to detect, track, and analyze faces opens up a wide range of
interesting use cases, ranging from interactive smart applications and
real- time video processing, all the way to biometric security and
augmented reality.&lt;/p&gt;
&lt;p&gt;This talk will showcase the available &lt;strong&gt;tools built by the Python
community&lt;/strong&gt; and their corresponding pros &amp;amp; cons, limitations, and
complexity. While discussing the possible scenarios and what is actually
required to &lt;strong&gt;DIY with Python&lt;/strong&gt;, I will compare such handmade solutions
with &lt;strong&gt;Cloud-based products and APIs&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;: basic understanding of Python’s data science stack
(especially numpy).&lt;/p&gt;
</summary><category term="CloudComputing"></category><category term="aws"></category><category term="scikit-learn"></category><category term="scikit-image"></category><category term="google-cloud"></category><category term="Deep-Learning"></category><category term="opencv"></category><category term="scikits"></category><category term="cv"></category><category term="Machine Learning"></category><category term="Facial-Analysis"></category><category term="dlib"></category><category term="Artificial Intelligence"></category></entry><entry><title>Scikit-image</title><link href="https://pyvideo.org/euroscipy-2017/scikit-image.html" rel="alternate"></link><published>2017-08-31T00:00:00+00:00</published><updated>2017-08-31T00:00:00+00:00</updated><author><name>Emmanuelle Gouillart</name></author><id>tag:pyvideo.org,2017-08-31:euroscipy-2017/scikit-image.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutorial materials can be found on
&lt;a class="reference external" href="https://github.com/emmanuelle/scikit-image-euroscipy2017"&gt;https://github.com/emmanuelle/scikit-image-euroscipy2017&lt;/a&gt;: you can
download a zip on
&lt;a class="reference external" href="https://github.com/emmanuelle/scikit-image-euroscipy2017/archive/master.zip"&gt;https://github.com/emmanuelle/scikit-image-euroscipy2017/archive/master.zip&lt;/a&gt;.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;If you installed Anaconda or Canopy, you already have scikit-image
installed.&lt;/div&gt;
&lt;div class="line"&gt;Otherwise, see &lt;a class="reference external" href="http://scikit-image.org/docs/stable/install.html"&gt;http://scikit-image.org/docs/stable/install.html&lt;/a&gt; for
installation instructions.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;scikit-image version 0.12 or 0.13 is preferable.&lt;/p&gt;
&lt;p&gt;Test code&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt;&amp;gt; from skimage import io, data
&amp;gt;&amp;gt;&amp;gt; camera = data.camera()
&amp;gt;&amp;gt;&amp;gt; io.imshow(camera)
&lt;/pre&gt;
</summary><category term="tutorial"></category><category term="scikit-image"></category></entry><entry><title>scikit image - Image Processing for Python</title><link href="https://pyvideo.org/scipy-2017/scikit-image-image-processing-for-python.html" rel="alternate"></link><published>2017-07-13T00:00:00+00:00</published><updated>2017-07-13T00:00:00+00:00</updated><author><name>Stéfan van der Walt</name></author><id>tag:pyvideo.org,2017-07-13:scipy-2017/scikit-image-image-processing-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tutorial materials found here: &lt;a class="reference external" href="https://scipy2017.scipy.org/ehome/220975/493423/"&gt;https://scipy2017.scipy.org/ehome/220975/493423/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;scikit-image is a collection of image processing algorithms for the
SciPy ecosystem. It has a Pythonic API, is well documented, and aims
to provide researchers and practitioners with well-tested, fundamental
building blocks for rapidly constructing sophisticated image
processing pipelines.&lt;/p&gt;
&lt;p&gt;In this tutorial, we provide an interactive overview of the library,
where participants have the opportunity to try their hand at various
image processing challenges.&lt;/p&gt;
</summary><category term="scikit image"></category><category term="tutorial"></category></entry></feed>