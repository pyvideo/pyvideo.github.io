<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Chris Volny</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 30 Jul 2022 00:00:00 +0000</lastBuildDate><item><title>Advanced Typing: TypeVars, Generics, and Protocols</title><link>https://pyvideo.org/pyohio-2022/advanced-typing-typevars-generics-and-protocols.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So we've heard about Python type annotations, but let's get into the
gritty bits around &lt;tt class="docutils literal"&gt;typing.TypeVar&lt;/tt&gt; bounding (inclusive polymorphism),
&lt;tt class="docutils literal"&gt;typing.Generic&lt;/tt&gt; (parameterized types), and &lt;tt class="docutils literal"&gt;typing.Protocol&lt;/tt&gt;
(interfaces) to learn how we can leverage types for structural subtyping
(static duck typing).&lt;/p&gt;
&lt;p&gt;Slides for this talk are available at:
&lt;a class="reference external" href="https://docs.google.com/presentation/d/1R2IzE-1I1otv1PXbXyR-JvOkBxdRAVDpXpFVmELRatA/edit?usp=drivesdk"&gt;https://docs.google.com/presentation/d/1R2IzE-1I1otv1PXbXyR-JvOkBxdRAVDpXpFVmELRatA/edit?usp=drivesdk&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Volny</dc:creator><pubDate>Sat, 30 Jul 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2022-07-30:/pyohio-2022/advanced-typing-typevars-generics-and-protocols.html</guid><category>PyOhio 2022</category></item></channel></rss>