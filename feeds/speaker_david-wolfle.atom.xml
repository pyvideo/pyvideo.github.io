<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_david-wolfle.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-10-11T00:00:00+00:00</updated><entry><title>Loss Function Theory 101</title><link href="https://pyvideo.org/pydata-berlin-2019/loss-function-theory-101.html" rel="alternate"></link><published>2019-10-11T00:00:00+00:00</published><updated>2019-10-11T00:00:00+00:00</updated><author><name>David Wölfle</name></author><id>tag:pyvideo.org,2019-10-11:pydata-berlin-2019/loss-function-theory-101.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: David Wölfle&lt;/p&gt;
&lt;p&gt;Track:PyData
This talk covers the theoretical background behind two common loss functions, mean squared error and cross entropy, including why they are used for machine learning at all, and what limitations you should keep in mind.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/JFEQY8"&gt;https://de.pycon.org/program/JFEQY8&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>How to teach space invaders to your computer</title><link href="https://pyvideo.org/pycon-de-2018/how-to-teach-space-invaders-to-your-computer.html" rel="alternate"></link><published>2018-10-25T00:00:00+00:00</published><updated>2018-10-25T00:00:00+00:00</updated><author><name>David Wölfle</name></author><id>tag:pyvideo.org,2018-10-25:pycon-de-2018/how-to-teach-space-invaders-to-your-computer.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;First things first: playing good old Atari games might be cool but why
should I write a program for doing it? Well teaching a computer to play
a game means teaching it to develop strategies and use foresight
planning to solve a certain problem. The tools you gather while solving
i.e. space invaders are the same you may use to solve any problem which
requires a sequential set of decisions in order to find an optimal
solution to some problem, like i.e. controlling a robot that collects
garbage. Furthermore, there is a lot of scientific research on
reinforcement learning that focuses on solving Atari games which makes
it a good starting point, as large amounts of publications and open
source code already exists.&lt;/p&gt;
&lt;p&gt;What to expect from this talk? At first there will be a very short
introduction to reinforcement learning theory, just the very basics,
common applications and some references for further reading. Next points
are, how to run Atari games from inside python for a learning task (with
OpenAI's gym), and where to find an algorithm for the actual learning
problem. Finally it will be shown how to build it all together in a
jupyter notebook and let the algorithm play the game. Et voilà that's
your computer beating you in space invaders.&lt;/p&gt;
</summary><category term="Deep Learning &amp; Artificial Intelligence"></category><category term="Jupyter"></category><category term="Python"></category><category term="Science"></category></entry></feed>