<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Paul Adams</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 18 Sep 2016 00:00:00 +0000</lastBuildDate><item><title>Judas Priest Ate My Scrum Master</title><link>https://pyvideo.org/write-the-docs-europe-2015/judas-priest-ate-my-scrum-master.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Community Management in Free Software communities is still an emerging
field and has produced a spectrum of practitioners: from
master-manipulators of social media, to those more focused on metrics
and data as a means to driving process. Either way, the state of the art
is still largely driven by the needs of technical contributors to
projects.&lt;/p&gt;
&lt;p&gt;Good documentation is a crucial component in a software product and yet
often technical writers are overlooked as important stakeholders of the
process. Within the community, there are undoubtedly common problems
between engineers and technical writers. Software Engineering is full of
laws; can we show that these laws apply to technical writers as a means
to help bridge the chasm between developers and technical writers??&lt;/p&gt;
&lt;p&gt;In this talk Paul walks us through a selection of his favourite laws of
software engineering and explores how developers measure them and if
technical writers must also obey them. Or not. And what that means for
the success of documentation in a Free Software project.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Adams</dc:creator><pubDate>Mon, 31 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-31:/write-the-docs-europe-2015/judas-priest-ate-my-scrum-master.html</guid><category>Write the Docs Europe 2015</category></item><item><title>Postulating The Backlog Laxative</title><link>https://pyvideo.org/write-the-docs-europe-2016/postulating-the-backlog-laxative.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So you had an idea for an awesome software product and started to build
up your team of engineers around it. Two things are almost inevitable:
you chose some super cool programming language like Clojure and you're
doing Scrum for the process. Good for you.&lt;/p&gt;
&lt;p&gt;When your company grows, you end up with multiple Scrum teams. But you
also end up with new activities: documentation, blogging, demos,
submissions to conferences to show-off your awesome heap of Clojure. How
are you going to get all of /that/ done?&lt;/p&gt;
&lt;p&gt;&amp;quot;The book&amp;quot; tells you to mix all these activities in with your Scrum
engineering teams. &amp;quot;The Book&amp;quot; was also probably written by someone who
has never had to do devrel in their lives (or, who hates devrel
engineers). Numerous problems exist at the interface between product
engineering and devrel and the result is your devrel backlog can get
backed-up.&lt;/p&gt;
&lt;p&gt;Dr. Paul (not a real doctor) has the laxative you need! In this talk he
presents his experience of structuring multiple Scrum teams at Crate.IO
in order to loosen-up the devrel backlog: ensuring highly quality
feature documentation, getting out those blog posts and showing-off our
lovely heap of Clojure*.&lt;/p&gt;
&lt;p&gt;*Crate is written in Java.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Adams</dc:creator><pubDate>Sun, 18 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-18:/write-the-docs-europe-2016/postulating-the-backlog-laxative.html</guid><category>Write the Docs Europe 2016</category></item></channel></rss>