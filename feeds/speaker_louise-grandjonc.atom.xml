<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_louise-grandjonc.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-09-24T00:00:00+00:00</updated><entry><title>Postgres Index types and where to find them</title><link href="https://pyvideo.org/djangocon-us-2019/postgres-index-types-and-where-to-find-them.html" rel="alternate"></link><published>2019-09-24T00:00:00+00:00</published><updated>2019-09-24T00:00:00+00:00</updated><author><name>Louise Grandjonc</name></author><id>tag:pyvideo.org,2019-09-24:djangocon-us-2019/postgres-index-types-and-where-to-find-them.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon 2019 - Postgres Index types and where to find them by Louise Grandjonc&lt;/p&gt;
&lt;p&gt;For a long time I only used the default btree to index data. As I was working on an app for crocodiles to find their dentist, I started looking into the other index types postgres offers to improve SQL performance. If you want to know all about btree, gin, gistâ€¦ how, when and why use them, join me!&lt;/p&gt;
&lt;p&gt;This talk was presented at: &lt;a class="reference external" href="https://2019.djangocon.us/talks/postgres-index-types-and-where-to-find/"&gt;https://2019.djangocon.us/talks/postgres-index-types-and-where-to-find/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LINKS:
Follow Louise Grandjonc ðŸ‘‡
On Twitter: &lt;a class="reference external" href="https://twitter.com/louisemeta"&gt;https://twitter.com/louisemeta&lt;/a&gt;
On GitHub: &lt;a class="reference external" href="https://github.com/louiseGrandjonc"&gt;https://github.com/louiseGrandjonc&lt;/a&gt;
Official homepage: &lt;a class="reference external" href="http://louisemeta.com"&gt;http://louisemeta.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow DjangCon US ðŸ‘‡
&lt;a class="reference external" href="https://twitter.com/djangocon"&gt;https://twitter.com/djangocon&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow DEFNA ðŸ‘‡
&lt;a class="reference external" href="https://twitter.com/defnado"&gt;https://twitter.com/defnado&lt;/a&gt;
&lt;a class="reference external" href="https://www.defna.org/"&gt;https://www.defna.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Intro music: &amp;quot;This Is How We Quirk It&amp;quot; by Avocado Junkie.
Video production by Confreaks TV.
Captions by White Coat Captioning.&lt;/p&gt;
</summary></entry><entry><title>Amazing things your ORM can or can't do</title><link href="https://pyvideo.org/pybay-2019/amazing-things-your-orm-can-or-cant-do.html" rel="alternate"></link><published>2019-08-17T00:00:00+00:00</published><updated>2019-08-17T00:00:00+00:00</updated><author><name>Louise Grandjonc</name></author><id>tag:pyvideo.org,2019-08-17:pybay-2019/amazing-things-your-orm-can-or-cant-do.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk was presented at PyBay2019 - 4th annual Bay Area Regional Python conference. See pybay.com for more details about PyBay and click SHOW MORE for more information about this talk.&lt;/p&gt;
&lt;p&gt;Description
SQL can seem like an obscure but somehow useful language. In this talk we will look into things that SQL can do, sometimes more easily than using python, and how to get it in your ORM, running in your application. During this talk we will use an application analysing the lyrics of my favorite teenage band and show fun examples of these SQL statements, and how to integrate them in your code&lt;/p&gt;
&lt;p&gt;Abstract
This talk has as a goal to go into the SQL language and see what ORMs (django, sql alchemy) support them. At the end of the talk what I would like is: for developers to understand SQL, and how ORM executes SQL better to discover fun SQL things that they might not know, and what can or can't be used with simple ORMs call and if it's not (yet) in the ORM, how can I execute it beautifully&lt;/p&gt;
&lt;p&gt;The talk will take an example of analysing song lyrics of an artist, with fun queries on frequency of words over the years, most common patterns etc. There will be a simple django app and I will show how the following can be done, and how it is useful: joins group by aggregations window functions lateral joins ctes grouping sets&lt;/p&gt;
&lt;p&gt;Original slides: &lt;a class="reference external" href="https://t.ly/B0jV7"&gt;https://t.ly/B0jV7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;About the speaker
I'm a software developer at citus data (Microsoft). I have been using django for over 5 years and enjoy working on performance using my two favorite things: python and SQL. I have also been involved in the postgres and postgresWomen community. I have talked to django con europe and pycarribean, and love the python community !&lt;/p&gt;
&lt;p&gt;Sponsor Acknowledgement
This and other PyBay2019 videos are via the help of our media partner AlphaVoice (&lt;a class="reference external" href="https://www.alphavoice.io/"&gt;https://www.alphavoice.io/&lt;/a&gt;)!&lt;/p&gt;
&lt;p&gt;#pybay #pybay2019 #python #python3&lt;/p&gt;
</summary></entry><entry><title>Understanding the amazing world behind your ORM</title><link href="https://pyvideo.org/djangocon-europe-2017/understanding-the-amazing-world-behind-your-orm.html" rel="alternate"></link><published>2017-04-04T00:00:00+00:00</published><updated>2017-04-04T00:00:00+00:00</updated><author><name>Louise Grandjonc</name></author><id>tag:pyvideo.org,2017-04-04:djangocon-europe-2017/understanding-the-amazing-world-behind-your-orm.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every django developer has used the ORM. It's terribly useful. Suddenly creating, retrieving, updating objects becomes easy without having to use the barbaric language that SQL can be.
But sometimes, out of nowhere, your API or view becomes really slow because of some magical thing happening behind your ORM.
The idea of this talk is to make a journey from the ORM to the database. I will hand out different tools to debug, understand what queries are executed and when. And once you have the queries, how to optimize it? How does the database execute the queries? How to optimize your number of queries, and the execution of these?&lt;/p&gt;
&lt;p&gt;The talk will be explained with a same example developed along the theory to understand the application better. I will give a few examples of the problems that any developer will encounter. Then explain how to identify the problem : is it possible to lower the number of queries? If not, how can I know why a specific query is slow ?&lt;/p&gt;
&lt;p&gt;The idea is that at the end of the conference, the developer can easily access the database log, identify the view queries and understand the big lines of an EXPLAIN in the database. Not necessarily in detail, but to be able to answer: is my query making a lot of loops through many tables? Is it using an index? Am I missing an index? And what is an index by the way?&lt;/p&gt;
</summary></entry></feed>