<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_chris-musselle.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2017-10-27T14:30:00+01:00</updated><entry><title>Automate your Boilerplate</title><link href="https://pyvideo.org/pycon-uk-2017/automate-your-boilerplate.html" rel="alternate"></link><published>2017-10-27T14:30:00+01:00</published><updated>2017-10-27T14:30:00+01:00</updated><author><name>Chris Musselle</name></author><id>tag:pyvideo.org,2017-10-27:pycon-uk-2017/automate-your-boilerplate.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Project templating and scaffolding tools like the cookiecutter Python package can be a great help when starting a new project. They provide a way of generating a predefined layout of files and directories, and can also be parameterised to accept arguments as they are generated. e.g. name of the new project.&lt;/p&gt;
&lt;p&gt;Creating such a template takes some effort but means quicker startup times on future projects; less boiler plate code to write; more consistent project layouts; and even automation of common setup tasks. However such templates work best for setting up highly repeatable project structures (like when writing plugins or small command line applications).&lt;/p&gt;
&lt;p&gt;Can we make use of these for Data Science projects? I will share my experience of doing so in this talk, along with the benefits and drawbacks I have found in trying to automate away as much of the boilerplate and manual effort when starting a new Data Science project!&lt;/p&gt;
&lt;p&gt;I will then present how I have eased some of the pain points by breaking down a typical project into several templating layers, and then developing a command line tool to help manage and apply these template layers to a project as and when needed.&lt;/p&gt;
&lt;p&gt;As part of the talk I will give an overview of cookiecutter templates, and how they can be built upon to achieve this approach of composable project templating.&lt;/p&gt;
</summary></entry></feed>