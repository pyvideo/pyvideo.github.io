<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Fri, 03 May 2019 00:00:00 +0000</lastBuildDate><item><title>Algoritmo di Routing Multi-Obiettivo di Veicoli Elettrici con vincoli di ricarica lungo il percorso</title><link>https://pyvideo.org/pycon-italia-2019/algoritmo-di-routing-multi-obiettivo-di-veicoli-elettrici-con-vincoli-di-ricarica-lungo-il-percorso.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In questa presentazione affronteremo alcune delle fasi più importanti, e
le problematiche ad esse correlate, per lo sviluppo di un modello di
routing multi-obiettivo di un veicolo elettrico con vincoli di ricarica
lungo il percorso. In particolare analizzeremo le principali sorgenti
Open di dati geografici della rete stradale e relativi a stazioni di
ricarica (Open Street Map, Open Charge Map, etc.), nonchè alcune delle
principali librerie Python che espongono API utili alla costruzione di
una rete per scenari urbani ed extra-urbani (Pandana, OSMnx, etc). Nella
presentazione si descriveranno inoltre brevemente algoritmi quali
Dijkstra e A* utili come punto di partenza per il design di un tale
modello e lo speed-up del tempo di processamento. Infine si mostreranno
alcuni casi studio legati al tema mobilità elettrica, mostrando alcune
mappe interattive realizzate con la potente libreria Folium.&lt;/p&gt;
&lt;p&gt;Esperienza consigliata del pubblico: Beginner/Intermediate&lt;/p&gt;
&lt;p&gt;Feedback form: &lt;a class="reference external" href="https://python.it/feedback-1552"&gt;https://python.it/feedback-1552&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 17:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alessandro Betti</dc:creator><pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-03:pycon-italia-2019/algoritmo-di-routing-multi-obiettivo-di-veicoli-elettrici-con-vincoli-di-ricarica-lungo-il-percorso.html</guid><category>OpenStreetMap</category><category>visualization</category><category>Network</category><category>maps</category><category>Dijkstra</category><category>performance</category></item><item><title>Differential network analysis and graph classification: a glocal approach</title><link>https://pyvideo.org/pycon-italia-2017/differential-network-analysis-and-graph-classification-a-glocal-approach.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We propose a novel solution in differential network analysis to both the
network comparison and the classification tasks by introducing the
glocal HIM metric for comparing graphs and a graph kernel induced by the
HIM measure. The HIM distance is defined as the one-parameter family of
product metrics linearly combining the normalised Hamming distance H and
the normalised Ipsen- Mikhailov spectral distance IM. The combination of
the two components within a single metric allows overcoming their
drawbacks and obtaining a measure which is simultaneously global and
local. Furthermore, plugging the HIM kernel into a Support Vector
Machine gives us a classification algorithm based on the HIM distance.
Here we outline the underlying theoretical details of the metric
construction, and we present several applications of the HIM distance
and the HIM kernel to datasets belonging to different areas, including
socioeconomics, neuroscience, oncogenomics and developmental genomics,
supporting the adoption of the HIM family as a general analysis tool for
information extraction based on a quantitative evaluation of the
difference among diverse instances of a complex system. We conclude
introducing the Open Source implementation of the HIM metrics provided
in the R package nettols and in its web interface ReNette.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giuseppe Jurman</dc:creator><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-09:pycon-italia-2017/differential-network-analysis-and-graph-classification-a-glocal-approach.html</guid><category>mathematics</category><category>algebra</category><category>Network</category><category>Machine Learning</category></item><item><title>Bayesian Network Modeling using R and Python</title><link>https://pyvideo.org/pydata-dc-2016/bayesian-network-modeling-using-r-and-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Bayesian Networks (BN) are increasingly being applied for real-world data problems. They provide the much desired complexity in representing the uncertainty of the predicted results of a model. The networks are easy to follow and better understand the relationships of the attributes of the dataset. As part of this talk, we will look into the existing R and Python packages that enables BN usage.&lt;/p&gt;
&lt;p&gt;Bayesian Networks are increasingly being applied for real-world data problems. They provide the much desired complexity in representing the uncertainty of the predicted results of a model. The networks are easy to follow and better understand the inter-relationships of the different attributes of the dataset. As part of this talk, we will look into the existing R and Python packages that enable BN learning and prediction. The pros and cons of the available packages will be discussed as well as new capabilities that will broaden the application of BN networks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pragyansmita Nayak</dc:creator><pubDate>Sat, 08 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-08:pydata-dc-2016/bayesian-network-modeling-using-r-and-python.html</guid><category>bayesian</category><category>network</category></item><item><title>Introduction to Gevent</title><link>https://pyvideo.org/europython-2011/introduction-to-gevent.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Denis Bilenko - 20 June 2011 in &amp;quot;Track Spaghetti&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="http://gevent.org"&gt;Gevent&lt;/a&gt; is a coroutine-based library that enables
you to write highly-concurrent network and web applications. learn in
detail what Gevent is, what it does and how it does it.&lt;/p&gt;
&lt;p&gt;I will introduce a coroutine-based approach to network programming,
explain it benefits and pitfalls. We will walk through the Gevent API,
including the most recent additions, and understand how it is
implemented. I will make a quick overview of the most interesting 3rd
party add-on and applications after that.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Denis Bilenko</dc:creator><pubDate>Thu, 21 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-21:europython-2011/introduction-to-gevent.html</guid><category>gevent</category><category>network</category><category>web</category></item><item><title>MiG - A Complete Grid Middleware (mostly) in Python</title><link>https://pyvideo.org/europython-2011/mig-a-complete-grid-middleware-mostly-in-pyth.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Jonas Bardino - 22 June 2011 in &amp;quot;Track Tagliatelle &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Grid computing was all the buzz in the beginning of the millennium and
still has serious attention in different forms although many of the
original grand promises were never delivered. The general level of
ambitions have instead slowly but steadily degraded to those of the
latest buzz word, Cloud.&lt;/p&gt;
&lt;p&gt;We as a project have proven that most of the original promises &lt;em&gt;can&lt;/em&gt;
actually be delivered and we have done so using Python almost solely as
the implementation language. The choice of Python provided us with a
stable and versatile base for quickly getting this far and it
significantly eases extending and maintaining our middleware in the
future. MiG is currently about 50000 lines of source code but it still
offers more features than competing grid systems with millions of lines
of code.&lt;/p&gt;
&lt;p&gt;Apart from introducing the open source MiG middleware and summarizing
how we got here, this talk will outline some of the core technologies
used to reach that goal and underline why it can make a lot of sense to
choose Python for complex HPC projects like MiG, too. Talk keywords
include Network Programming, Open Source Python projects, Science and
Math and Web-based Systems. There's no special intended audience, but a
certain level of Python knowledge and experience may be an advantage.
Please refer to &lt;a class="reference external" href="http://code.google.com/p/migrid/"&gt;http://code.google.com/p/migrid/&lt;/a&gt; for further MiG
information.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonas Bardino</dc:creator><pubDate>Thu, 21 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-21:europython-2011/mig-a-complete-grid-middleware-mostly-in-pyth.html</guid><category>forms</category><category>hpc</category><category>network</category><category>science</category></item><item><title>Pricing products using Python graphs and sets</title><link>https://pyvideo.org/europython-2011/pricing-products-using-python-graphs-and-sets.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Rob Collins - 22 June 2011 in &amp;quot;Track Ravioli &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will look at the limitations of available rule engines when it comes
to complex pricing rules. Rob has been part of a Python team writing a
pricing engine based on network graphs. We will show:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why pricing is not easy&lt;/li&gt;
&lt;li&gt;Rule engine anti-patterns, e.g. to change one price requires a week's
development time, and has to be fitted into a release cycle&lt;/li&gt;
&lt;li&gt;How to make pricing rules data driven, usable by the business&lt;/li&gt;
&lt;li&gt;How the use of graphs and sets reduces the complexity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rob is joined by David Layton of Grey Squirrel Consulting, who is a
fellow contractor working with Rob on the pricing project. He is an
American expatriate and Python developer, currently living and working
in London. His background is in scientific computing, CRMs and Business
Intelligence.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rob Collins</dc:creator><pubDate>Thu, 21 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-21:europython-2011/pricing-products-using-python-graphs-and-sets.html</guid><category>business</category><category>graphs</category><category>network</category><category>scientific</category></item><item><title>Experiences making CPU-bound tasks run much faster</title><link>https://pyvideo.org/europython-2011/experiences-making-cpu-bound-tasks-run-much-faste.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Ian Ozsvald - 22 June 2011 in &amp;quot;Training Pizza
Margherita &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UPDATE - post-event I've created a &lt;a class="reference external" href="http://ianozsvald.com/2011/06/29/high-performance-python-tutorial-v0-1%20-from-my-4-hour-tutorial-at-europython-2011/"&gt;49 page PDF write-
up&lt;/a&gt;
which summarises the 4 hour tutorial&lt;/p&gt;
&lt;p&gt;As a long-time R&amp;amp;D consultant I'm often working to make slow,
experimental code run faster for tasks like physics simulation, flood
modeling and natural language processing. Python allows a smooth
progression from rough-and-ready (but slow) algorithms through to finely
tuned tasks that efficiently use as much CPU power as you can bring to
bear. Speed-ups of 10-500* can be expected for the Mandelbrot code
we'll use.&lt;/p&gt;
&lt;p&gt;In this talk I'll cover a set of libraries that make CPU-bound tasks run
much faster. We'll begin with a look at profiling using RunSnakeRun and
line_profiler to identify our bottleneck. We'll take a look at slow
algorithms in Python and how they can run faster using numpy and
numexpr.&lt;/p&gt;
&lt;p&gt;Next we'll cover the use of multiprocessing to utilise multiple CPU
cores along with Cython or ShedSkin to easily use C code in a friendly
Python wrapper. Multiprocessing on a quad-core system can often provide
a 4* speed-up for the right tasks. Next parallelpython will let us run
our code on a network of machines.&lt;/p&gt;
&lt;p&gt;Finally we'll look at pyCUDA to utilise an NVIDIA GPU. CUDA can give the
best improvements for mathematical problems (over 100* on the right
tasks) but works on a narrower set of problems.&lt;/p&gt;
&lt;p&gt;How it'll work: The tutorial will be hands on, you'll be converting
example files from normal Python to faster variants using the tools
below. All of it is optional, you'll get the most benefit by having
everything installed. We'll work in groups and open discussion is
encouraged.&lt;/p&gt;
&lt;p&gt;NOTE - you are expected to have all these tools installed &lt;em&gt;before&lt;/em&gt; the
tutorial (if you don't, you might find it hard to follow what's going
on!).&lt;/p&gt;
&lt;p&gt;I'll be using Python 2.7.1 on a Macbook (Snow Leopard). All of these
tools run on Windows and Linux, as long as your versions are fairly
recent everything should run just fine.&lt;/p&gt;
&lt;p&gt;My versions (roughly ordered by importance):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python 2.7.1&lt;/li&gt;
&lt;li&gt;RunSnakeRun 2.0.1b6 (with wxPython 2.8.12.0 Unicode)&lt;/li&gt;
&lt;li&gt;line_profiler (1.0b2)&lt;/li&gt;
&lt;li&gt;Cython 0.14.1&lt;/li&gt;
&lt;li&gt;ShedSkin 0.7.1&lt;/li&gt;
&lt;li&gt;numpy 1.5.1&lt;/li&gt;
&lt;li&gt;numexpr 1.4.2&lt;/li&gt;
&lt;li&gt;ParallelPython 1.6.1&lt;/li&gt;
&lt;li&gt;pyCUDA HEAD from git as of 14th June 2011 (with CUDA 4.0 drivers)&lt;/li&gt;
&lt;li&gt;PyPy 1.5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some background reading:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ianozsvald.com/2010/07/14/22937-faster-python-math-using-pycuda/"&gt;http://ianozsvald.com/2010/07/14/22937-faster-python-math-using-pycuda/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ianozsvald.com/2008/11/17/making-python-math-196-faster-with-shedskin/"&gt;http://ianozsvald.com/2008/11/17/making-python-math-196-faster-with-shedskin/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ian Ozsvald</dc:creator><pubDate>Mon, 18 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-18:europython-2011/experiences-making-cpu-bound-tasks-run-much-faste.html</guid><category>cython</category><category>git</category><category>multiprocessing</category><category>network</category><category>numpy</category><category>nvidia</category><category>profiling</category><category>pycuda</category><category>runsnakerun</category><category>tutorial</category><category>windows</category><category>wxpython</category></item><item><title>Social Network Analysis con Python</title><link>https://pyvideo.org/europython-2011/social-network-analysis-con-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Enrico Franchi - 24 June 2011 in &amp;quot;Track Italiana Big
Mac &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La popolarità dell'analisi dei network è cresciuta molto con la recente
diffusione dei social network. Si tratta di un argomento
multidisciplinare, con importanti contributi dai ricercatori di svariate
aree come fisica, sociologia, matematica ed informatica&lt;/p&gt;
&lt;p&gt;Tuttavia, l'analisi dei network è anche uno strumento utile per i
programmatori. Le tecniche base che saranno introdotte in questo talk
possono infatti essere usate ad esempio per i) testare la robustezza e
la resistenza ai fallimenti di un network, e ii) comprendere a fondo la
struttura di un social network, cosa che può portare ad intuizioni su
mode e trend a partire dai moderni servizi di networking.&lt;/p&gt;
&lt;p&gt;Insieme a questi concetti, sarà mostrato del codice Python che sfrutterà
sia dei tool esistenti per l'analisi dei network che dei package di
calcolo numerico. L'attenzione sarà principalmente sul codice, mostrato
e discusso insieme alla teoria su cui è basato.&lt;/p&gt;
&lt;p&gt;Gli unici prerequisiti consigliati per seguire questo talk sono delle
abilità matematiche di base e la conoscenza a livello introduttivo del
linguaggio di programmazione Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Enrico Franchi</dc:creator><pubDate>Mon, 18 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-18:europython-2011/social-network-analysis-con-python.html</guid><category>analysis</category><category>network</category></item><item><title>Social Network Analysis in Python</title><link>https://pyvideo.org/europython-2011/social-network-analysis-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Enrico Franchi - 23 June 2011 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Network Analysis has gained a huge recognition since the widespread
adoption of on-line social networking systems. It is a
cross-disciplinary subject with important contributions from researchers
of different areas such as physics, sociology, maths and computer
science.&lt;/p&gt;
&lt;p&gt;However, Network Analysis is also a useful tool for the working
programmer. The basic techniques which will be introduced in this talk
can be used, for example, both to i) test the robustness and resilience
to damage of a technological network and ii) understand the structure of
a social network, which can in turn lead to insight on trends and
preferences gathering information from modern on-line social networking
systems.&lt;/p&gt;
&lt;p&gt;Along with the concepts, working Python code is presented, both using
existing network analysis Python tools and numeric packages. The focus
is mainly placed on code, which will be shown and discussed together
with the formal theory.&lt;/p&gt;
&lt;p&gt;Basic maths skills and basic knowledge of the Python programming
language are the only suggested prerequisites.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Enrico Franchi</dc:creator><pubDate>Wed, 13 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-13:europython-2011/social-network-analysis-in-python.html</guid><category>analysis</category><category>network</category><category>networking</category></item><item><title>PyConAU 2010: Python in Video Games and Multimedia Projects</title><link>https://pyvideo.org/pycon-au-2010/pyconau-2010--python-in-video-games-and-multimedi.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python in Video Games and Multimedia Projects&lt;/p&gt;
&lt;p&gt;Presented by Mr. Chris McCormick&lt;/p&gt;
&lt;p&gt;This talk will cover several real-world uses of Python in cross platform
video game and multimedia projects, and the tips, tricks, and techniques
I learned along the way whilst working on those projects. I'll speak
about the issues involved in cross platform desktop dev with wxPython,
interfacing with multimedia programs using subprocess, spreading load
with multiprocessing, developing for the web on small devices with
Django, and when and how to write custom network servers using asyncore.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris McCormick</dc:creator><pubDate>Sat, 26 Jun 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-06-26:pycon-au-2010/pyconau-2010--python-in-video-games-and-multimedi.html</guid><category>games</category><category>handheld</category><category>multimedia</category><category>network</category><category>pyconau</category><category>pyconau2010</category><category>web</category></item><item><title>Networking Libraries in Python</title><link>https://pyvideo.org/pycon-au-2011/networking-libraries-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will explore the core networking libraries available in
Python.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;ol class="arabic simple"&gt;
&lt;li&gt;Python Standard Library. http and urllib package (Python3 and
Python2).&lt;/li&gt;
&lt;li&gt;Capabilities of other 3rd party networking libraries - pycurl and
httplib2. When to use them and why they exist.&lt;/li&gt;
&lt;li&gt;Asychronous Network IO using Twisted Matrix Framework.&lt;/li&gt;
&lt;li&gt;Tornado framework capablities - Generic overview.&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Senthil Kumuran</dc:creator><pubDate>Mon, 22 Aug 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-08-22:pycon-au-2011/networking-libraries-in-python.html</guid><category>framework</category><category>network</category><category>networking</category><category>pycurl</category><category>tornado</category><category>twisted</category><category>urllib</category></item><item><title>Pants - Network Programming Made Easy</title><link>https://pyvideo.org/pycon-au-2011/pants-network-programming-made-easy.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Pants (pantsweb.org) is an open source library that aims to make network
programming in Python a breeze. This talk will outline challenges in
network programming and how Pants approaches them. The audience will be
briefly introduced to Pants' API through example code, and to its
capabilities through benchmarks and comparisons with alternate
frameworks..&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Davis</dc:creator><pubDate>Mon, 22 Aug 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-08-22:pycon-au-2011/pants-network-programming-made-easy.html</guid><category>api</category><category>network</category><category>pants</category></item><item><title>Teaching Python to the young and impressionable</title><link>https://pyvideo.org/pycon-au-2011/teaching-python-to-the-young-and-impressionable.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;We present two outreach programmes run by Sydney University for high
school students: the National Computer Science School
(&lt;a class="reference external" href="http://www.ncss.edu.au"&gt;http://www.ncss.edu.au&lt;/a&gt;) and the Girls' Programming Network
(&lt;a class="reference external" href="http://sydney.edu.au/it/gpn"&gt;http://sydney.edu.au/it/gpn&lt;/a&gt;). For the past four years we have been
teaching Python to students in grades 9-12, and based on this experience
we will discuss why Python is a good first language and the parts of it
which are still difficult for students to grasp.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Georgina Wilcox</dc:creator><pubDate>Mon, 22 Aug 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-08-22:pycon-au-2011/teaching-python-to-the-young-and-impressionable.html</guid><category>network</category><category>outreach</category><category>science</category><category>teaching</category></item><item><title>Echtzeit Web-Apps mit Mushroom</title><link>https://pyvideo.org/pycon-de-2013/echtzeit-web-apps-mit-mushroom.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://bitbucket.org/terreon/mushroom"&gt;Mushroom&lt;/a&gt; ist ein einfach zu
verwendendes Echtzeit-Web-Messaging-Framework, welches neben
Browser-Push-Nachrichten auch Funktionen für die
Interprozesskommunikation zur Verfügung stellt.&lt;/p&gt;
&lt;p&gt;Dieser Vortrag versucht, Lust auf das Echtzeit-Web zu machen und
beantwortet grundlegende Fragen zu Themen wie Skalierbarkeit und
Deployment.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael P. Jung</dc:creator><pubDate>Tue, 15 Oct 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-10-15:pycon-de-2013/echtzeit-web-apps-mit-mushroom.html</guid><category>echtzeit</category><category>gevent</category><category>http</category><category>ipc</category><category>javascript</category><category>long polling</category><category>messagin</category><category>mushroom</category><category>network</category><category>python</category><category>real-time</category><category>websocket</category></item><item><title>PyCon 2009: Building Real-time Network applications for the web with Twisted and Orbited (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--building-real-time-network-applicati0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Haven't you always wanted to create a massively multiplayer, real-time
game for the browser? Or perhaps add chat to your website, or maybe
write a real- time financial application, collaborative text editor, or
network health monitoring app, all in the browser. Forget web
frameworks; Orbited.TCPSocket lets you communicate directly from a
browser to any network server, with any protocol you want. By tutorial's
end, every attendee will have built their own real-time data monitoring
application, or multiplayer game, from scratch using Orbited, Twisted,
and js.io.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--building-real-time-network-applicati0.html</guid><category>network</category><category>orbited</category><category>pycon</category><category>pycon2009</category><category>realtime</category><category>twisted</category></item><item><title>PyCon 2009: Building Real-time Network applications for the web with Twisted and Orbited (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--building-real-time-network-applicati1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Haven't you always wanted to create a massively multiplayer, real-time
game for the browser? Or perhaps add chat to your website, or maybe
write a real- time financial application, collaborative text editor, or
network health monitoring app, all in the browser. Forget web
frameworks; Orbited.TCPSocket lets you communicate directly from a
browser to any network server, with any protocol you want. By tutorial's
end, every attendee will have built their own real-time data monitoring
application, or multiplayer game, from scratch using Orbited, Twisted,
and js.io.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--building-real-time-network-applicati1.html</guid><category>network</category><category>orbited</category><category>pycon</category><category>pycon2009</category><category>realtime</category><category>twisted</category></item><item><title>PyCon 2009: Building Real-time Network applications for the web with Twisted and Orbited (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--building-real-time-network-applicatio.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Haven't you always wanted to create a massively multiplayer, real-time
game for the browser? Or perhaps add chat to your website, or maybe
write a real- time financial application, collaborative text editor, or
network health monitoring app, all in the browser. Forget web
frameworks; Orbited.TCPSocket lets you communicate directly from a
browser to any network server, with any protocol you want. By tutorial's
end, every attendee will have built their own real-time data monitoring
application, or multiplayer game, from scratch using Orbited, Twisted,
and js.io.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--building-real-time-network-applicatio.html</guid><category>network</category><category>orbited</category><category>pycon</category><category>pycon2009</category><category>realtime</category><category>twisted</category></item><item><title>Seattle: A Python-based Platform for Easy Development and Deployment of Networked Systems and Applications (#162)</title><link>https://pyvideo.org/pycon-us-2010/pycon-2010--seattle--a-python-based-platform-for-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A Python-based Platform for Easy Development and Deployment of Networked
Systems and Applications&lt;/p&gt;
&lt;p&gt;Presented by Ivan Beschastnikh, Justin Samuel, and Justin Cappos&lt;/p&gt;
&lt;p&gt;Seattle is an open-source platform for developing and deploying
networked applications. Core feature of Seattle is that it allows safe
execution of untrusted code on end-user systems. In our talk we look at
how we used Python to build a safe, restricted code execution
environment for Seattle that not only provides execution safety but also
enforces strict resource consumption limits. In addition, Seattle
includes a high-level API to hide inconsistent OS-specific behaviors
from developers. What results is a platform that welcomes the
participation of end-user machines for general-purpose distributed
programming and creates new possibilities for developers.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://seattle.cs.washington.edu/"&gt;http://seattle.cs.washington.edu/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Beginning of talk missing, due to technical
problems.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ivan Beschastnikh</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--seattle--a-python-based-platform-for-.html</guid><category>api</category><category>language</category><category>mobile</category><category>network</category><category>p2p</category><category>pycon</category><category>pycon2010</category><category>seattle</category><category>security</category><category>university</category></item><item><title>Extreme Network Programming with Python and Linux</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--extreme-network-programming-with-pyth.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Extreme Network Programming with Python and Linux&lt;/p&gt;
&lt;p&gt;Presented by Rob Ludwick&lt;/p&gt;
&lt;p&gt;Traditionally, C is the preferred language for low level network
programming and works well for those who have the time and patience to
work with it. As it turns out, Python is very capable for prototyping
low level network code, collecting data, and testing ideas quickly
without getting lost in the land of C.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;While not as robust as C, Python provides a simple and elegant solution
for many cases to either prove a theory or gather data before developing
a more robust solution. Obscure topics such as raw sockets, multicast,
network bridging, rolling your own vpn, and disruption tolerant
networking will be covered. Use of Python can enable building a custom
protocols, debugging a network, fixing broken nets, custom logging and
processing, and simulation of networks. The author will talk about his
experiences using Python on Linux for extreme network programming and
possibilities for future efforts.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rob Ludwick</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--extreme-network-programming-with-pyth.html</guid><category>network</category><category>pycon</category><category>pycon2011</category></item></channel></rss>