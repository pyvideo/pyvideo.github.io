<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-es-2015.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-02-02T00:00:00+00:00</updated><entry><title>Agujeros negros y optimización de código en python</title><link href="https://pyvideo.org/pycon-es-2015/agujeros-negros-y-optimizacion-de-codigo-en-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Pablo Galindo Salgado</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/agujeros-negros-y-optimizacion-de-codigo-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla atenderemos a la construcción de un raytracer relativista en Python. Nuestro objetivo será conseguir imágenes similares a las observadas en la película Interestellar, mediante la creación de imágenes sintéticas en un entorno de gravedad extrema, como es un agujero negro. Utilizando esto como excusa, analizaremos distintos enfoques para optimizar nuestro código al máximo y conseguir programas eficientes y profesionales a la altura de cualquier otro lenguaje de programación.&lt;/p&gt;
</summary><category term="Track Científico"></category></entry><entry><title>Amqp from Python, advanced design patterns</title><link href="https://pyvideo.org/pycon-es-2015/amqp-from-python-advanced-design-patterns.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Pau Freixes</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/amqp-from-python-advanced-design-patterns.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;AMQP as standard application layer protocol is widely used to design backends where business logic is spread around different processes using a broker to link them, usually RabbitMQ. AMQP allows us to use different design patterns than the traditional monolithic backends, where part of your business logic is designed as entities of the AMQP topology. In this talk we will talk about the Python drivers such as Celery, Pika and others, and how they can be used to get the full power of the AMQP.&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>asyncIO: póngase a la cola por favor</title><link href="https://pyvideo.org/pycon-es-2015/asyncio-pongase-a-la-cola-por-favor.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Miguel Araujo</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/asyncio-pongase-a-la-cola-por-favor.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla veremos como usar python3 con asyncio, websockets y redis para construir un servicio distribuido de colas virtuales con los que controlar de forma ordenada el acceso a un servicio con elevada carga pico.&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>Autosubmit: investigando el clima con Python</title><link href="https://pyvideo.org/pycon-es-2015/autosubmit-investigando-el-clima-con-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Javier Vegas Regidor</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/autosubmit-investigando-el-clima-con-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;¿Cómo investigar aquello con lo que no puedes experimentar? Utilizando modelos. El problema es que simular algo tan complejo como el clima requiere programas que utilizan cientos de procesadores y generan teras de resultados. En esta charla te contaremos como Autosubmit es capaz de manejar estos gigantescos experimentos para que los climatólogos puedan dedicarse a la ciencia sin problemas.&lt;/p&gt;
</summary><category term="Track Científico"></category></entry><entry><title>Better async code with Python 3</title><link href="https://pyvideo.org/pycon-es-2015/better-async-code-with-python-3.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Anton Caceres</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/better-async-code-with-python-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn async web development hands-on by using asyncio event loop in combination with subgenerator delegation syntax (yield from), creating beautiful concurrent code without writing a single callback.&lt;/p&gt;
</summary><category term="workshop"></category><category term="asyncio"></category></entry><entry><title>Click: Como hacer interfaces de comandos con Python</title><link href="https://pyvideo.org/pycon-es-2015/click-como-hacer-interfaces-de-comandos-con-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Roberto Majadas Lopez</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/click-como-hacer-interfaces-de-comandos-con-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Click es un paquete de Python que permite la creación rápida y bonita de interfaces de linea de comandos, utilizando pocas lineas de código, de una manera bastante estructurada y componible. Click resuelve las típicas situaciones en las que el programador se ve obligado a hacer un interfaz de comandos y termina por hacerse uno propio.&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Como crear un bot para Telegram</title><link href="https://pyvideo.org/pycon-es-2015/como-crear-un-bot-para-telegram.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Urtzi Odriozola Lizaso</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/como-crear-un-bot-para-telegram.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla veremos como es posible crear un bot para Telegram utilizando la libreria pyTelegramBotAPI y Telegram Bot API. Se mostraran los pasos a seguir para crear un bot sencillo que pueda aceptar interacción del usuario&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Comparing Python ORM</title><link href="https://pyvideo.org/pycon-es-2015/comparing-python-orm.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>José Manuel Ortega</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/comparing-python-orm.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El objetivo de la charla es mostrar algunos de los sistemas ORM que podemos encontrar dentro del ecosistema de Python como Sqlalchemy, Storm, Sqlobject, Django ORM,realizando una comparativa entre ellos,mostrando ventajas y desventajas de cada uno.
Algunas de las características a comparar son performance, eficiencia, tratamiento de caché, consultas.
Por ultimo, se comentarán las ventajas que aportan estos sistemas para la seguridad de la aplicaciones web con Django.&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>Data structures beyond dicts and lists</title><link href="https://pyvideo.org/pycon-es-2015/data-structures-beyond-dicts-and-lists.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Sergi Sorribas</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/data-structures-beyond-dicts-and-lists.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As a python backend engineer you might end up using (or abusing) lot's of dicts and lists, iterating on them. This is mainly due their easy usage and might be also because libraries like pandas or numpy fall down in the domain of data science.
We will see a real example where an old implementation is refactored to have better use of pandas and constantly comparing the performance increase.&lt;/p&gt;
</summary><category term="Track Científico"></category></entry><entry><title>Dijkstra es mi pastor, nada me falta</title><link href="https://pyvideo.org/pycon-es-2015/dijkstra-es-mi-pastor-nada-me-falta.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Víctor Terrón</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/dijkstra-es-mi-pastor-nada-me-falta.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;¡Python es genial! Lo escuchamos una y otra vez en cada PyCon, pero ¿por qué es tan increíble Python? A menudo se oyen argumentos como que &amp;quot;hay librerías para todo&amp;quot; o &amp;quot;las listas por comprensión&amp;quot;, pero nada de esto es específico de Python y podría aplicarse a muchos otros lenguajes de programación. En esta charla planteo que, en el fondo y como propugnaba Edsger W.Dijkstra, todo se reduce a una cuestión de elegancia y sencillez. Y, como demostración, vamos a ver una implementación del algoritmo de Dijkstra: comenzando con el críptico código que suele encontrarse por Internet y mejorándolo poco a poco, haciéndolo más Pythónico a cada paso hasta reducir el algoritmo a su más pura esencia. ¡Eso de encontrar el camino más corto en un grafo suena difícil, pero desde 1956 no lo es!&lt;/p&gt;
</summary><category term="Charla Clausura"></category></entry><entry><title>Dive into Scrapy</title><link href="https://pyvideo.org/pycon-es-2015/dive-into-scrapy-juan-riaza-track-cientifico.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Juan Riaza</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/dive-into-scrapy-juan-riaza-track-cientifico.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scrapy is a fast high-level screen scraping and web crawling framework, used to crawl websites and extract structured data from their pages. It can be used for a wide range of purposes, from data mining to monitoring and automated testing.&lt;/p&gt;
&lt;p&gt;In this talk some advanced techniques will be shown based on how Scrapy is used at Scrapinghub.&lt;/p&gt;
</summary><category term="Track Científico"></category><category term="scrapy"></category><category term="scrapinghub"></category></entry><entry><title>Django request-response: Un viaje de ida y vuelta</title><link href="https://pyvideo.org/pycon-es-2015/django-request-response-un-viaje-de-ida-y-vuelta.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Imanol Cea</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/django-request-response-un-viaje-de-ida-y-vuelta.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Todos sabemos que cuando tenemos una aplicación hecha en Django ejecutándose en un servidor, y le llega una petición, tarde o temprano nuestro código se ejecutará y le devolveremos una respuesta al usuario, pero... ¿Qué ocurre antes y después de la ejecución de nuestro código?, ¿qué tareas hace Django por nosotros sin ni siquiera ser conscientes de ello?, ¿es posible modificar este comportamiento?, y lo más importante: ¿cómo?&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>DSLs: Can't parse that!♫</title><link href="https://pyvideo.org/pycon-es-2015/dsls-cant-parse-that.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Miguel Araujo</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/dsls-cant-parse-that.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Se introducirá brevemente qué es un DSL, tipos y cuándo resultan interesantes, mostrando algunos ejemplos. Para pasar a describir un caso práctico, creando un DSL real desde cero para procesamiento de textos, viendo como parsearlo, interpretarlo y resolver un problema de una forma distinta a la que estamos acostumbrados, dándole una nueva perspectiva.&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>El módulo "tracemalloc"</title><link href="https://pyvideo.org/pycon-es-2015/el-modulo-tracemalloc.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Jesús Cea</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/el-modulo-tracemalloc.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El módulo &amp;quot;tracemalloc&amp;quot;, añadido a la librería estándar en Python 3.4, permite monitorizar el uso de memoria y nos ayuda a diagnosticar y solucionar &amp;quot;Memory Leaks&amp;quot;. Su utilidad es indudable, pero su uso está poco difundido.&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>"Embedding" de Python en otras aplicaciones</title><link href="https://pyvideo.org/pycon-es-2015/embedding-de-python-en-otras-aplicaciones.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Jesús Cea</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/embedding-de-python-en-otras-aplicaciones.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Es común ampliar las funcionalidades de Python mediante extensiones y módulos externos. Tecnologías como Cython y todo el entorno numpy son posibles mediante la integración de código C compilado en un programa Python en ejecución. Pero es muy interesante, también, el poder incluir un intérprete Python en un programa independiente para poder ampliar sus funcionalidades escribiendo código Python en vez programando en C.&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>Es posible hacer una tesis doctoral en turbulencia con Python</title><link href="https://pyvideo.org/pycon-es-2015/es-posible-hacer-una-tesis-doctoral-en-turbulencia-con-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Guillem Borrell</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/es-posible-hacer-una-tesis-doctoral-en-turbulencia-con-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La simulación numérica directa de flujos turbulentos es una disciplina particularmente exigente en lo que respecta a manejo de datos a gran escala. Las simulaciones que llevamos a cabo en el grupo de investigación guardan del orden de centenares de terabytes de datos, y su proceso suele generar entre dos y tres veces esta cantidad. Después del primer año de tesis doctoral decidí ponerme de conejillo de indias para comprobar si Python es en la práctica tan bueno como se dice en teoría.&lt;/p&gt;
</summary><category term="Track Científico"></category></entry><entry><title>Escalando una web con python</title><link href="https://pyvideo.org/pycon-es-2015/escalando-una-web-con-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Jose Ignacio Galarza</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/escalando-una-web-con-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Construir una web y soportar su crecimiento en tráfico tiene su intríngulis. Una arquitectura sencilla se irá complicando poco a poco a medida que crece en funcionalidad y en número de usuarios. Veremos un proyecto simplón, como podría empezar cualquier web que hiciésemos nosotros mismos y la iremos evolucionando y ampliando, descubriendo y solucionando los problemas típicos que surgen a la hora de hacer escalar una web.&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>Fiona y Shapely, la punta del iceberg del análisis de datos geográficos con Python</title><link href="https://pyvideo.org/pycon-es-2015/fiona-y-shapely-la-punta-del-iceberg-del-analisis-de-datos-geograficos-con-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Geoinquietos Vlc</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/fiona-y-shapely-la-punta-del-iceberg-del-analisis-de-datos-geograficos-con-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fiona y Shapely, la punta del iceberg del análisis de datos geográficos con Python&lt;/p&gt;
&lt;p&gt;Geoinquietos Valencia&lt;/p&gt;
&lt;p&gt;Fiona y Shapely son la puerta de entrada al análisis de datos geográficos con Python. En la charla haremos una introducción básica a su uso y realizaremos un pequeño mapa de demostración.&lt;/p&gt;
</summary><category term="T. Científico"></category><category term="Fiona"></category><category term="Shapely"></category><category term="gis"></category></entry><entry><title>Funcional para trollear</title><link href="https://pyvideo.org/pycon-es-2015/funcional-para-trollear.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Alejandro Enrique Brito Monedero</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/funcional-para-trollear.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Usar lo que nos ofrece python para volver scripts imperativos en funcionales* y trollear a los colegas&lt;/p&gt;
&lt;p&gt;* Ciertas restricciones aplican&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Hacking the Taiga</title><link href="https://pyvideo.org/pycon-es-2015/hacking-the-taiga.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>David Barragán Merino</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/hacking-the-taiga.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Taiga es una herramienta de gestión ágil de proyectos donde prima ante todo la experiencia de usuario.
En esta charla trataré de mostrar cómo puedes desarrollar nuevas funcionalidades para ti, tu organización o comunidad, sin necesidad de modificar el core de Taiga.&lt;/p&gt;
</summary><category term="Track Avanzado"></category><category term="taiga"></category></entry><entry><title>Having it All: Distributed services with Django, Boto, and SQS queues</title><link href="https://pyvideo.org/pycon-es-2015/having-it-all-distributed-services-with-django-boto-and-sqs-queues.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>J. V. Trigo</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/having-it-all-distributed-services-with-django-boto-and-sqs-queues.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How do you let untrained people in your company run sensitive processes on different remote servers? Processes that must run asynchronously and sequentially while accessing different common resources? And how do you do it quickly and make it robust? I will show how we used Django, SQS and Boto to create a distributed and decoupled solution that let users invoke services asynchronously, which is secure, scalable and ensures that processes using common resources ran in sequence.&lt;/p&gt;
</summary><category term="Track Básico"></category><category term="django"></category><category term="sqs"></category><category term="boto"></category></entry><entry><title>Implantación de ElasticSearch: problemas y soluciones</title><link href="https://pyvideo.org/pycon-es-2015/implantacion-de-elasticsearch-problemas-y-soluciones.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>M. Sánchez</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/implantacion-de-elasticsearch-problemas-y-soluciones.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla se presentará de manera resumida un caso real: el proceso de implantación de ElasticSearch en una aplicación de Django. Partiendo de la motivación de implementar un buscador, veremos los problemas encontrados por nuestro equipo (¡y sus soluciones!). A saber: instalación, definición de los documentos, modo de conexión, indexado, particionado y sincronía con nuestra base de datos.&lt;/p&gt;
</summary><category term="Track Básico"></category><category term="elasticsearch"></category><category term="django"></category></entry><entry><title>Integrando Apache Storm como servidor de aplicaciones Python</title><link href="https://pyvideo.org/pycon-es-2015/integrando-apache-storm-como-servidor-de-aplicaciones-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Carlos Perelló Marín</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/integrando-apache-storm-como-servidor-de-aplicaciones-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Apache Storm es un sistema de procesamiento en tiempo real diseñado para escalar horizontalmente de forma simple y rápida con garantía de procesamiento. Está basado en Java, no obstante, permite utilizar multiples lenguajes de programación, incluido Python, de forma que no necesites usar Java para nada. En esta charla explicaré el caso de uso de Server Density para el procesamiento de &amp;quot;payloads&amp;quot; para la monitorización de servidores.&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>Introducción a los DSL (Domain Specific Languages) en Python</title><link href="https://pyvideo.org/pycon-es-2015/introduccion-a-los-dsl-domain-specific-languages-en-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>J. Ignacio Rodríguez</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/introduccion-a-los-dsl-domain-specific-languages-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Los lenguajes específicos de dominio son lenguajes especializados, simplificados y limitados a la resolución de problemas de un dominio concreto. Usados correctamente mejoran la productividad de los desarrolladores, así como la comunicación con los usuarios o expertos de otros dominios, entre otras ventajas. En esta charla introductoria veremos qué son, para qué sirven, en qué casos usarlos y algunas librerías de Python que nos facilitarán crear nuestros propios lenguajes específicos de dominio.&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Introducción a visualizaciones interactivas con Bokeh</title><link href="https://pyvideo.org/pycon-es-2015/introduccion-a-visualizaciones-interactivas-con-bokeh.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Alejandro Vidal</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/introduccion-a-visualizaciones-interactivas-con-bokeh.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bokeh ( &lt;a class="reference external" href="http://bokeh.pydata.org/en/latest/"&gt;http://bokeh.pydata.org/en/latest/&lt;/a&gt; ) es una librería de visualización de datos con una interfaz concisa y elegante que permite la construcción de gráficos preparados para la web y con interactividad out-of-the-box y sencilla.&lt;/p&gt;
&lt;p&gt;Diseña avanzados dashboards en Python para un navegador web sin escribir ni una línea de código de Javascript (pero si quieres puedes ;P)&lt;/p&gt;
&lt;p&gt;Interactividad cliente-side, cliente-servidor, streaming, big data... Simplemente Bokeh! :)&lt;/p&gt;
</summary><category term="Track Científico"></category></entry><entry><title>Know your models - Statsmodels!</title><link href="https://pyvideo.org/pycon-es-2015/know-your-models-statsmodels.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Israel Saeta Pérez</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/know-your-models-statsmodels.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scikit-learn has become the best known and most used package to perform it-just-works Machine Learning in Python. But what happens when you want to look into what is going on within your models to inspect and improve them? In this talk we will present the not-so-well-known packages statsmodels and patsy that can help us to achieve a better undestanding of your models and your data.&lt;/p&gt;
</summary><category term="Track Científico"></category><category term="scikit-learn"></category><category term="statsmodels"></category><category term="patsy"></category></entry><entry><title>La maquinaria de import, ese mágico desconocido</title><link href="https://pyvideo.org/pycon-es-2015/la-maquinaria-de-import-ese-magico-desconocido.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Raúl Cumplido</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/la-maquinaria-de-import-ese-magico-desconocido.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Importar módulos y librerías en python es una de las cosas más mágicas que existen. Básicamente funciona pero no sabemos como ni porque. En la charla se explicará como funciona y porque puede ser útil saber como funciona.&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Learning by Trolling</title><link href="https://pyvideo.org/pycon-es-2015/learning-by-trolling.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Jesús Espino</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/learning-by-trolling.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Explicación de diferentes conceptos y características de python a través de formas de trollear a compañeros. (monkeypatching, cache de enteros, excepciones...)&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>let's Twisted again!</title><link href="https://pyvideo.org/pycon-es-2015/lets-twisted-again.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Israel D. Aguilar</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/lets-twisted-again.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Haz que tus programas sean reactivos a determinados eventos de red. Para ello podemos contar con el framework conocido como Twisted, durante la charla aprenderás lo básico para usarla.
Twisted es un motor orientado a eventos de redes y tiene licencia de código libre (MIT).&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Life of a Python program</title><link href="https://pyvideo.org/pycon-es-2015/life-of-a-python-program.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Francisco Fernández Castaño</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/life-of-a-python-program.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sometimes is good to know what's happening under the hood,
this talk will explain how CPython works internally since
we type &lt;cite&gt;python myprogram.py&lt;/cite&gt; until our code is finally executed
explaining the process that CPython does to run our programs.&lt;/p&gt;
&lt;p&gt;The goal of this talk is explain people how to explore the code
of the interpreter itself using some common tools and let regular
Python developers that aren't used to work with C lose the fear
about looking under the hood.&lt;/p&gt;
</summary><category term="Track Básico"></category><category term="CPython"></category></entry><entry><title>Machine Learning in the Cloud with Python</title><link href="https://pyvideo.org/pycon-es-2015/machine-learning-in-the-cloud-with-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Mercè Martin</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/machine-learning-in-the-cloud-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La charla mostrará cómo introducir el aprendizaje automático en cualquier proyecto usando plataformas de SAAS accesibles via API. En particular, nos centraremos en el caso de los servicios disponibles en BigML. Veremos como acceder a ellos a distintos niveles: usando los bindings para Python y también mediante un DSL en línea de comandos.&lt;/p&gt;
</summary><category term="Track Científico"></category></entry><entry><title>Navigating the Data Science Python Ecosystem</title><link href="https://pyvideo.org/pycon-es-2015/navigating-the-data-science-python-ecosystem.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Christine Doig</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/navigating-the-data-science-python-ecosystem.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you feel lost with all the libraries being developed in the Python ecosystem for Data Science? Have you heard of scikit-learn, theano, dask, xray, blaze, gensim, bokeh, pymc3, numba, jupyter..., but don't know where to start or what each library is for? Do you ask yourself, what is Data Science anyway? Deep learning vs Machine learning? Then, this talk is for you! We'll learn what Data Science is, as well as, existing libraries, functionality and applications in the ecosystem.&lt;/p&gt;
</summary><category term="Track Científico"></category></entry><entry><title>Objetos mutable e inmutables y errores típicos</title><link href="https://pyvideo.org/pycon-es-2015/objetos-mutable-e-inmutables-y-errores-tipicos.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Pablo Enfedaque</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/objetos-mutable-e-inmutables-y-errores-tipicos.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla veremos varios errores típicos hechos al usar objetos mutables de Python, revisaremos 5 conceptos clave para entender lo que estaba sucediendo en cada caso y, finalmente, la forma de resolver o evitar esos errores.&lt;/p&gt;
&lt;p&gt;Nivel requerido: Básico / Intermedio. Los asistentes deben saber algunos conceptos de Python como declaración de clases y funciones, la herencia, atributos de clase...&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>PhaseSpace un programa para analizar sistemas dinámicos</title><link href="https://pyvideo.org/pycon-es-2015/phasespace-un-programa-para-analizar-sistemas-dinamicos.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Anton Ferré Pujol</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/phasespace-un-programa-para-analizar-sistemas-dinamicos.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PhaseSpace es un programa diseñado para analizar sistemas dinámicos de un modo sencillo. Para ello dibuja el mapa de fases de dicho sistema y además permite dibujar los puntos críticos y las curvas de pendiente 0 e infinito, tanto explícitas como implícitas, así como el campo vectorial y las soluciones del sistema que queremos estudiar. También permite seleccionar el método numérico para realizar los cálculos y cambiar los ejes y el paso de integración.&lt;/p&gt;
</summary><category term="Track Científico"></category></entry><entry><title>Plone 5: el CMS del futuro, en el presente</title><link href="https://pyvideo.org/pycon-es-2015/plone-5-el-cms-del-futuro-en-el-presente.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Mikel Larreategi</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/plone-5-el-cms-del-futuro-en-el-presente.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Plone es un gestor de documental y contenidos con más de 10 años de recorrido. Creado inicialmente como una &amp;quot;cara bonita&amp;quot; del Content Management Framework ha evolucionado hasta nuestros días para traer una experiencia de uso y funcionalidades del más alto nivel.&lt;/p&gt;
&lt;p&gt;Con las últimas modificaciones realizadas durante el desarrollo, está a punto de publicarse la versión 5 de este CMS, íntegramente escrito en Python, y que presentaremos en esta charla.&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Extending Python</title><link href="https://pyvideo.org/pycon-es-2015/pycon-es-2015-extending-python-francisco-fernandez-castano-track-basico.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Francisco Fernández Castaño</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/pycon-es-2015-extending-python-francisco-fernandez-castano-track-basico.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a great language, but there are occasions where we need access to low level operations or connect with some database driver written in C or we need to overcome to some speed boottleneck in Python due to some limitation in the language, like NumPy or Scikit-learn do, using extensions.&lt;/p&gt;
&lt;p&gt;With the FFI(Foreign function interface) we can connect Python with other languages like C, C++ and even Rust or Fortran.&lt;/p&gt;
</summary><category term="Track Básico"></category><category term="ffi"></category></entry><entry><title>Lightning Talks</title><link href="https://pyvideo.org/pycon-es-2015/pycon-es-2015-lightning-talks.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/pycon-es-2015-lightning-talks.html</id><summary type="html"></summary><category term="lightning talks"></category></entry><entry><title>Metaprogramación en Python</title><link href="https://pyvideo.org/pycon-es-2015/pycon-es-2015-metaprogramacion-en-python-raul-cumplido-track-avanzado.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Raúl Cumplido</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/pycon-es-2015-metaprogramacion-en-python-raul-cumplido-track-avanzado.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Según wikipedia: “La metaprogramación consiste en escribir programas que escriben o manipulan otros programas (o a sí mismos) como datos, o que hacen en tiempo de compilación parte del trabajo que, de otra forma, se haría en tiempo de ejecución. Esto permite al programador ahorrar tiempo en la producción de código.”&lt;/p&gt;
&lt;p&gt;En esta charla veremos diferentes mecanismos que Python proporciona como:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Decoradores.&lt;/li&gt;
&lt;li&gt;Metaclasses.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="Track Avanzado"></category><category term="metaprograming"></category><category term="metaclass"></category><category term="decorator"></category></entry><entry><title>Python descriptors al detalle</title><link href="https://pyvideo.org/pycon-es-2015/python-descriptors-al-detalle.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Pablo Enfedaque</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/python-descriptors-al-detalle.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla repasaremos el protocolo de los descriptores, casos de uso y sus aplicaciones más directas en la librería estándar, como son properties y slots.&lt;/p&gt;
&lt;p&gt;La audiencia debería tener un conocimiento medio / alto de Python y entender el data model de los objetos de Python (los magic methods).&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Python en gvSIG, el Sistema de Información Geográfica Libre</title><link href="https://pyvideo.org/pycon-es-2015/python-en-gvsig-el-sistema-de-informacion-geografica-libre.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Joaquín del Cerro</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/python-en-gvsig-el-sistema-de-informacion-geografica-libre.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Taller orientado a los que quieran iniciarse en el uso de python para desarrollar funcionalidades en gvSIG, un Sistema de Información Geográfica libre.&lt;/p&gt;
&lt;p&gt;La idea seria dividir el taller en tres bloques:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Una introducción, de nivel básico. Veremos como manipular datos espaciales y generar nuevas capas a partir de algunas ya existentes.&lt;/li&gt;
&lt;li&gt;Un ejemplo de manipulación de mapas, de nivel intermedio.&lt;/li&gt;
&lt;li&gt;Un ejemplo de creación de interfaces de usuario desde scripting, de un nivel avanzado.&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="workshop"></category><category term="gis"></category><category term="gvsig"></category></entry><entry><title>Python en la industria: el problema de optimización (matemática)</title><link href="https://pyvideo.org/pycon-es-2015/python-en-la-industria-el-problema-de-optimizacion-matematica.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>D. Domene</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/python-en-la-industria-el-problema-de-optimizacion-matematica.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La optimización matemática es utilizada en la industria para la resolución de diferentes problemas, que van desde la selección óptima de equipos y recursos a la gestión logística de una empresa. En esta charla, estudiantes de ingeniería química de la Universidad de Alicante realizarán una introducción visual a conceptos de optimización, presentarán Pyomo y mostrarán la resolución de casos de estudio de diferentes industrias mediante este lenguaje de modelado algebraico desarrollado en Python.&lt;/p&gt;
</summary><category term="T. Científico"></category></entry><entry><title>Python Funcional</title><link href="https://pyvideo.org/pycon-es-2015/python-funcional.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Guillermo Vayá Pérez</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/python-funcional.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Implementación de varios de los elementos que componen la programación funcional mediante Python.&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Python in the Sky</title><link href="https://pyvideo.org/pycon-es-2015/python-in-the-sky.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>David Arcos</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/python-in-the-sky.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Case study of Immfly’s Wireless In-Flight Entertainment system, built using Python.&lt;/p&gt;
</summary><category term="Track Básico"></category></entry><entry><title>Python tips, tricks and dark magic</title><link href="https://pyvideo.org/pycon-es-2015/python-tips-tricks-and-dark-magic.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Jordi Soucheiron Estruch</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/python-tips-tricks-and-dark-magic.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python tiene una gran cantidad de funcionalidades ocultas, pero a la vez a la vista de todos. Esta charla descubrir algunas de ellas explicando como funcionan, cuando tiene sentido usarlas y dando casos prácticos de como usarlas con ejemplos de código que las usan.&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>Python y Plutarco: el poder de una historia</title><link href="https://pyvideo.org/pycon-es-2015/python-y-plutarco-el-poder-de-una-historia.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Yamila Moreno</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/python-y-plutarco-el-poder-de-una-historia.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;¿Qué tienen que ver las 'Vidas paralelas' de Plutarco y Python? ¿Qué podemos aprender de un tipo griego de hace 20 siglos? En esta keynote hablaré de historia de la literatura, de diversidad, de la Constitución, de un nuevo PEP y de por qué Python, y por extensión su comunidad, pueden ser un motor de cambio social muy potente.&lt;/p&gt;
</summary><category term="Charla Inaugural"></category><category term="keynote"></category></entry><entry><title>Revisión de código en Python</title><link href="https://pyvideo.org/pycon-es-2015/revision-de-codigo-en-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Cesar Cardenas Desales</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/revision-de-codigo-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El objetivo de esta charla es dar a conocer los beneficios de la revisión de código, detallando los aspectos prácticos para llevar a cabo esta técnica de manera exitosa en proyectos colaborativos de desarrollo de software escritos en Python.&lt;/p&gt;
</summary><category term="Track Básico"></category><category term="code review"></category></entry><entry><title>Seguridad y criptografía en Python</title><link href="https://pyvideo.org/pycon-es-2015/seguridad-y-criptografia-en-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>José Manuel Ortega</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/seguridad-y-criptografia-en-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La charla tendrá como objetivo introducir la criptografía y la seguridad desde el punto de vista del desarrollador, mostrando maneras de cifrar la información con scripts de Python y la información más sensible en aplicaciones web usando Django,comentando la principales vulnerabilidades que podemos encontrar en un sitio web(SQL injection,XSS, CSRF) y cómo Django nos puede ayudar a evitar ataques que se aprovechen de estas vulnerabilidades.&lt;/p&gt;
</summary><category term="Track Científico"></category></entry><entry><title>Simplifica tu vida con sistemas complejos y algoritmos genéticos</title><link href="https://pyvideo.org/pycon-es-2015/simplifica-tu-vida-con-sistemas-complejos-y-algoritmos-geneticos.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Carlos Dorado</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/simplifica-tu-vida-con-sistemas-complejos-y-algoritmos-geneticos.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;¿Qué es un algoritmo genético? ¿Qué es un sistema complejo? ¿Cómo puedo usarlos para resolver problemas complicados? En este taller abordaremos estos temas y aprenderemos a diseñar y usar algoritmos de este tipo con Python.&lt;/p&gt;
</summary><category term="workshop"></category><category term="complex system"></category><category term="genetic algoritm"></category></entry><entry><title>Single-Page Applications con Django y Backbone</title><link href="https://pyvideo.org/pycon-es-2015/single-page-applications-con-django-y-backbone.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Miguel Sánchez Rodríguez</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/single-page-applications-con-django-y-backbone.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En este taller llevaremos a cabo un caso práctico. La construcción de una Single-Page Application usando Backbone como herramienta front-end. Ahora que cada día aparece una docena de frameworks de JavaScript, suena sensato buscar algo de estabilidad en un framework de trayectoria ya constatada, como es Backbone. Por otra parte, tener un framework como Django en el back-end proporciona robustez, facilidad de uso y muchísima extensibilidad -gracias al increíble ecosistema pythónico-.&lt;/p&gt;
</summary><category term="workshop"></category><category term="single-page application"></category><category term="django"></category><category term="backbone"></category></entry><entry><title>Sirviendo 1M de tickets en 50 idiomas y 35 divisas</title><link href="https://pyvideo.org/pycon-es-2015/sirviendo-1m-de-tickets-en-50-idiomas-y-35-divisas.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Jose Gargallo</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/sirviendo-1m-de-tickets-en-50-idiomas-y-35-divisas.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El crecimiento exponencial de Ticketbis nos exige una arquitectura que pueda escalar horizontalmente. Teniendo en cuenta que servimos casi 1M de tickets en 50 idiomas y 35 divisas diferentes, la desnormalización de los datos y su correspondiente cacheo eran necesarios. ¿Queréis saber cómo lo hacemos sin un solo hit a la base de datos? Os doy una pista: demonios pythónicos + Redis + Elasticsearch.&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>SocialLearning: encontrando materiales formativos de manera colaborativa</title><link href="https://pyvideo.org/pycon-es-2015/sociallearning-encontrando-materiales-formativos-de-manera-colaborativa.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Alberto Labarga</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/sociallearning-encontrando-materiales-formativos-de-manera-colaborativa.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SocialLearning: encontrando materiales formativos de manera colaborativa&lt;/p&gt;
&lt;p&gt;Social learning es una plataforma de gestión documental orientada al descubrimiento y clasificación de recursos formativos (videos, documentos, páginas web, etc) a partir de búsquedas en redes sociales de forma masiva y automatizada.&lt;/p&gt;
&lt;p&gt;Es un proyecto libre (&lt;a class="reference external" href="https://github.com/alabarga/SocialLearning"&gt;https://github.com/alabarga/SocialLearning&lt;/a&gt;) desarrollado en Python y utiliza librerías como Django, REST framework, NTLTK, Celery/Redis, etc.&lt;/p&gt;
</summary><category term="T. Científico"></category><category term="education"></category></entry><entry><title>SQJobs: Sencillo sistema de tareas en segundo plano</title><link href="https://pyvideo.org/pycon-es-2015/sqjobs-sencillo-sistema-de-tareas-en-segundo-plano.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Federico Mon</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/sqjobs-sencillo-sistema-de-tareas-en-segundo-plano.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Muchos son los sistemas de tareas en segundo plano en Python, como por ejemplo Celery.
Sí, en Ticketea hemos creado uno más, pero intentando hacerlo diferente.
Simple Queue Jobs intenta ser una cola de tareas sencilla y fiable que simplemente funcione y cuyo código no intimide a aquellos que busquen familiarizarse con él.&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>Syntactic Macros in Python</title><link href="https://pyvideo.org/pycon-es-2015/syntactic-macros-in-python.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Salvador de la Puente González</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/syntactic-macros-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Syntactic Macros enable the programmer to manipulate the shape of the program before executing it allowing to extend the features of the language. Inspired by macropy, in this talk I explain how to get syntactic macros working with Python 3 at import time giving a couple of interesting examples.&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>Taller - Introducción a visualizaciones interactivas con Bokeh</title><link href="https://pyvideo.org/pycon-es-2015/taller-introduccion-a-visualizaciones-interactivas-con-bokeh.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Alejandro Vidal</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/taller-introduccion-a-visualizaciones-interactivas-con-bokeh.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bokeh ( &lt;a class="reference external" href="http://bokeh.pydata.org/en/latest/"&gt;http://bokeh.pydata.org/en/latest/&lt;/a&gt; ) es una librería de visualización de datos con una interfaz concisa y elegante que permite la construcción de gráficos preparados para la web y con interactividad out-of-the-box y sencilla.&lt;/p&gt;
&lt;p&gt;Diseña avanzados dashboards en Python para un navegador web sin escribir ni una línea de código de Javascript (pero si quieres puedes ;P)&lt;/p&gt;
&lt;p&gt;Interactividad cliente-side, cliente-servidor, streaming, big data... Simplemente Bokeh! :)&lt;/p&gt;
</summary><category term="workshop"></category><category term="Bokeh"></category></entry><entry><title>Thumbor, el servidor de imágenes libre e inteligente</title><link href="https://pyvideo.org/pycon-es-2015/thumbor-el-servidor-de-imagenes-libre-e-inteligente.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Edu Herraiz</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/thumbor-el-servidor-de-imagenes-libre-e-inteligente.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Thumbor es un servidor de imágenes escrito en python. Es capaz de procesar imágenes bajo demanda e incluye funcionalidad de procesado (con opencv) para adaptar las redimensiones de manera inteligente.
En esta charla introduciré su utilización y entresijos con el despliegue.&lt;/p&gt;
</summary><category term="Track Científico"></category><category term="thumbor"></category></entry><entry><title>Tratando datos más allá de los límites de la memoria</title><link href="https://pyvideo.org/pycon-es-2015/tratando-datos-mas-alla-de-los-limites-de-la-memoria.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Francesc Alted</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/tratando-datos-mas-alla-de-los-limites-de-la-memoria.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En la era del 'Big Data' se necesitan cantidades cada vez más grandes de memoria (RAM) para tratar y analizar estos datos. Pero tarde o temprano se llega a unos límites por encima de los cuales no se puede (o es muy caro) pasar.&lt;/p&gt;
&lt;p&gt;El compresor Blosc (blosc.org) y el contenedor de datos bcolz (bcolz.blosc.org), usan las capacidades de los ordenadores modernos (caches, procesadores multihilo y SSDs) para permitir tratar datos más allá los límites de la memoria.&lt;/p&gt;
</summary><category term="workshop"></category><category term="big data"></category><category term="blosc"></category><category term="bcolz"></category></entry><entry><title>Trolling Detection with Scikit-learn and NLTK</title><link href="https://pyvideo.org/pycon-es-2015/trolling-detection-with-scikit-learn-and-nltk.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Rafa Haro</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/trolling-detection-with-scikit-learn-and-nltk.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La inmensa mayoría del contenido que se crea diariamente en Internet es desestructurado. Aproximadamente el 90% del mismo es texto. En la era de la web colaborativa, usamos el lenguaje constantemente, por ejemplo, para escribir una crítica de un producto, comentar una foto o escribir un tweet. Esta información es tremendamente valiosa en muchos sentidos. En esta charla veremos algunas de las herramientas que ofrece el ecosistema Python para comprender, estructurar y extraer valor de un texto.&lt;/p&gt;
</summary><category term="Track Científico"></category></entry><entry><title>Un python nuevo para ti: decorators</title><link href="https://pyvideo.org/pycon-es-2015/un-python-nuevo-para-ti-decorators.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Braulio Valdivielso</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/un-python-nuevo-para-ti-decorators.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python es un lenguaje de programación con muchas  funcionalidades interesantes. Sin embargo, existen ciertas features habituales en otros lenguajes de programación que no tienen cabida en este: sobrecarga de métodos, un operador para la composición de funciones, comprobación de tipos...&lt;/p&gt;
&lt;p&gt;En esta charla veremos cómo podemos conseguir estas funcionalidades utilizando decorators e inspeccionando los objetos que representan a las funciones.&lt;/p&gt;
</summary><category term="Track Avanzado"></category></entry><entry><title>Usando contenedores para Big Data</title><link href="https://pyvideo.org/pycon-es-2015/usando-contenedores-para-big-data.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Francesc Alted</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/usando-contenedores-para-big-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En la actualidad existe una variedad bastante grande de contenedores de datos para almacenar grandes cantidades de datos en Python, tanto en memoria como en disco. En mi taller pasaremos revista a unos cuantos de los más útiles, empezando por los más básicos y generales (listas, diccionarios, NumPy/ndarray, pandas/DataFrames) a los más especializados (RDBMS, PyTables/Table/HDF5, bcolz/carray/ctable). Durante el camino se darán pistas de cuando usar unos u otros dependiendo del caso de uso.&lt;/p&gt;
</summary><category term="workshop"></category><category term="big data"></category><category term="numpy"></category><category term="pandas"></category><category term="pytables"></category><category term="bcolz"></category></entry><entry><title>#!/usr/bin/python (Python para Sysadmins)</title><link href="https://pyvideo.org/pycon-es-2015/usrbinpython-python-para-sysadmins.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>Andreu Belmonte Peña</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/usrbinpython-python-para-sysadmins.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla se presenta la experiencia de un Sysadmin utilizando Python como lenguaje de scripting avanzado.&lt;/p&gt;
&lt;p&gt;Se introducirán funcionalidades básicas del lenguajes así como una serie de módulos y trucos que facilitarán la vida de cualquier administrador de sistemas que quiera ir más allá de bash.&lt;/p&gt;
&lt;p&gt;Esta es la charla que me hubiera gustado escuchar cuando empecé a escriptar mis primeras tareas para gestionar servidores y servicios y que me hubiera ahorrado tiempo y facilitado la vida.&lt;/p&gt;
</summary><category term="Track Basico"></category></entry></feed>