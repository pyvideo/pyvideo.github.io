<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - Gavin Chan</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 06 Sep 2020 00:00:00 +0000</lastBuildDate><item><title>Equip Your Performance Toolbox − Cython vs. Pybind11</title><link>https://pyvideo.org/pycon-fr-2019/equip-your-performance-toolbox-cython-vs-pybind11.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Developing Python applications is handy and rapid, but performance is always concerned, especially on the CPU bound components. We'll first go through the common tools and tricks which may surprise you on the performance improvement, and compare the two prevailing tools, Cython and Pybind11. Finally, their similarity and difference, in terms of implementation and performance, will be listed out so that attendees can thoroughly understand the criteria to choose the right library in their projects.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gavin Chan</dc:creator><pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-11-02:/pycon-fr-2019/equip-your-performance-toolbox-cython-vs-pybind11.html</guid><category>PyCon FR 2019</category></item><item><title>PyCon Ireland - Equip Your Performance Toolbox - Cython v.s. Pybind11 - Gavin Chan</title><link>https://pyvideo.org/pycon-ireland-2019/pycon-ireland-equip-your-performance-toolbox-cython-vs-pybind11-gavin-chan.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gavin Chan</dc:creator><pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-12:/pycon-ireland-2019/pycon-ireland-equip-your-performance-toolbox-cython-vs-pybind11-gavin-chan.html</guid><category>PyCon Ireland 2019</category></item><item><title>Equip your performance toolbox - Cython vs Pybind11</title><link>https://pyvideo.org/pycon-se-2019/equip-your-performance-toolbox-cython-vs-pybind11.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Developing Python applications is handy and rapid, but its performance is always concerned, especially on the CPU bound problems. We will go through the common tricks and tips to archive the best performance on the Python level. Then the two reputable libraries, Cython and Pybind11, will be visited to archive the compiled language performance and compared with their implementation, flexibility and performance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gavin Chan</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-10-31:/pycon-se-2019/equip-your-performance-toolbox-cython-vs-pybind11.html</guid><category>PyCon SE 2019</category><category>cython</category><category>pybind11</category><category>Performance</category></item><item><title>Why should you learn writing C extension? – PyCon Taiwan 2020</title><link>https://pyvideo.org/pycon-taiwan-2020/why-should-you-learn-writing-c-extension-pycon-taiwan-2020.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Day 2, 15:10–15:40&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Are you sometimes frustrated by the performance of Python?&lt;/li&gt;
&lt;li&gt;Do you always look for open source library to speed up your process?&lt;/li&gt;
&lt;li&gt;Do you feel numpy cannot give you much edge to enhance the performance now?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you answer yes in any of the above questions, probably writing C extension will be a great solution to you.&lt;/p&gt;
&lt;p&gt;First we will go through the reasons to learn writing C extension. Then the modern libraries, e.g. Cython and pybind11, will be introduced to develop C extension and compared with their features and functionalities. Also, a few simple but practical examples are demonstrated that writing C extension can be straightforward, and improves greatly your software quality and performance.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://gavincyi.github.io/pycon-why-should-you-learn-writing-c-extension"&gt;https://gavincyi.github.io/pycon-why-should-you-learn-writing-c-extension&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Speaker: Gavin Chan&lt;/p&gt;
&lt;p&gt;Gavin Chan is a principal quantitative developer in AXA Investment Managers Chorus Ltd with 7+ years of experience in software development and finance industry.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gavin Chan</dc:creator><pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2020-09-06:/pycon-taiwan-2020/why-should-you-learn-writing-c-extension-pycon-taiwan-2020.html</guid><category>PyCon Taiwan 2020</category></item></channel></rss>