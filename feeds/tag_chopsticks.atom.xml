<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_chopsticks.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-09-18T00:00:00+00:00</updated><entry><title>Scripting across hosts with Chopsticks</title><link href="https://pyvideo.org/pycon-uk-2016/scripting-across-hosts-with-chopsticks.html" rel="alternate"></link><published>2016-09-18T00:00:00+00:00</published><updated>2016-09-18T00:00:00+00:00</updated><author><name>Daniel Pope</name></author><id>tag:pyvideo.org,2016-09-18:pycon-uk-2016/scripting-across-hosts-with-chopsticks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Daniel Pope&lt;/p&gt;
&lt;p&gt;Chopsticks lets your import and run Python code on remote Unix hosts over SSH. It works with no code deployment and no preinstalled software other than Python and SSH. It has built-in support for running code on many hosts in parallel.&lt;/p&gt;
&lt;p&gt;Unlike Fabric or Ansible, Chopsticks not opinionated about the structure of the code you run, allowing it to be used for orchestration, auditing, diagnostics, monitoring probes, and more.&lt;/p&gt;
&lt;p&gt;Also unlike these, Chopsticks is not wedded to SSH, so it can transparently work on Docker containers over pipes, local subprocesses - and in future, sudo?&lt;/p&gt;
&lt;p&gt;Daniel will demonstrate Chopsticks in action, walk through the API, and explain the three clever tricks that Chopsticks is built on.&lt;/p&gt;
</summary><category term="Chopsticks"></category></entry></feed>