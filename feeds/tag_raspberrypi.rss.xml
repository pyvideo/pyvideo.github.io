<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 04 May 2019 00:00:00 +0000</lastBuildDate><item><title>How software can feed the world</title><link>https://pyvideo.org/pycon-italia-2019/how-software-can-feed-the-world.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Infarm is a FaaS, Farming as a Service, and whether you believe it or
not, our business is in-house farming at scale.&lt;/p&gt;
&lt;p&gt;We design and build our farms, grow vegetables and sell them, and the
backbone of our infrastructure is based on Python.&lt;/p&gt;
&lt;p&gt;More than 10 million observations recorded from our farms, rapidly
increasing given our expansion to new markets, feed our farm management
system that allows the operators, plant scientists, and supervisors to
monitor each farm in real-time.&lt;/p&gt;
&lt;p&gt;During this talk I will introduce our IoT infrastructure, how we use
Python and how we plan to improve the capabilities of our farms by
adding edge machine learning.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1785"&gt;https://python.it/feedback-1785&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Saturday 4 May&lt;/strong&gt; at 18:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Barra</dc:creator><pubDate>Sat, 04 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2019-05-04:pycon-italia-2019/how-software-can-feed-the-world.html</guid><category>microservices</category><category>iot</category><category>CloudComputing</category><category>microcontroller</category><category>influxdb</category><category>raspberrypi</category><category>machine-learning</category><category>social-impact</category><category>python3</category></item><item><title>Messaging for the Internet of Things</title><link>https://pyvideo.org/europython-2013/messaging-for-the-internet-of-things.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andreas Schreiber</dc:creator><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-03:europython-2013/messaging-for-the-internet-of-things.html</guid><category>MessageQueues</category><category>networking</category><category>arduino</category><category>raspberrypi</category><category>sensor networks</category><category>healthcare</category><category>android</category></item><item><title>IoT con Python: si può fare! dall'ESP8266 alla casa domotica</title><link>https://pyvideo.org/pycon-italia-2018/iot-con-python-si-puo-fare-dallesp8266-alla-casa-domotica.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Se anche tu negli ultimi tempi hai sentito l’irrefrenabile bisogno di
accendere le luci della tua casa mentre sei in vacanza o di guardare
cosa fanno i tuoi animaletti quando non ci sei, ma non ti accontenti…
allora questo talk fa per te!&lt;/p&gt;
&lt;p&gt;Vi farò vedere come è possibile avere uno stack completo di sviluppo per
la domotica completamente in python, dalla programmazione dei sensori
attraverso gli economici ESP 8266 e suoi derivati ai sistemi di gestione
complessi.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 17:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lelio Campanile</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-04-21:pycon-italia-2018/iot-con-python-si-puo-fare-dallesp8266-alla-casa-domotica.html</guid><category>micropython</category><category>iot</category><category>Python</category><category>practice</category><category>automation</category><category>raspberrypi</category></item><item><title>Pilotare un braccio robotico dal cloud con GenroPy e Raspberry</title><link>https://pyvideo.org/pycon-italia-2017/pilotare-un-braccio-robotico-dal-cloud-con-genropy-e-raspberry.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Spesso con gli applicativi in cloud si pone il problema di pilotare
periferiche presenti nella rete locale o collegate direttamente al
computer come registratori di cassa, stampanti industriali o altri
dispositivi. Per superare questa difficoltà abbiamo sviluppato un client
in Python sfruttando il framework GenroPy e installandolo sul proprio
computer o su una scheda RaspberryPi possiamo pilotare le periferiche
dal software in cloud. Il software è scritto interamente in Python ed è
studiato per usare un sistema a plugin grazie al quale basta scrivere un
solo modulo Python per aggiungere le funzionalità specifiche di una
singola periferica. Nel talk mostreremo come pilotare un piccolo braccio
robotico direttamente dal web sfruttando i WebSocket per la
comunicazione con il server, le Bag di GenroPy per la messaggistica e
qualche componente elettronico per il collegamento fisico con il
braccio.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michele Bertoldi</dc:creator><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-09:pycon-italia-2017/pilotare-un-braccio-robotico-dal-cloud-con-genropy-e-raspberry.html</guid><category>raspberrypi</category><category>genropy</category><category>robotics</category></item><item><title>Continuous Delivery for Iot with Python and Iottly</title><link>https://pyvideo.org/pycon-italia-2017/continuous-delivery-for-iot-with-python-and-iottly.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We know, continuous delivery is one of the current buzzwords (much like
IoT was a couple of years ago). But think of an industrial IoT project
connecting thousands of remote and inaccessible devices which should be
kept secure and updated over time. Now, imagine you can just write
Python code for your devices, test it over-the-internet both locally in
the lab, and in a real test environment simply by pushing your code to
specific branches and finally just pushing to master to update the
entire fleet.&lt;/p&gt;
&lt;p&gt;During the talk we will use Iottly to showcase this continuous delivery
pattern for the internet of things, with live code and connected devices
(Raspberry Pi).&lt;/p&gt;
&lt;p&gt;Iottly is a Development and Management Cloud Service for IoT Projects,
built by TomorrowData. Iottly is written in Python and is open source
(github). It features a Python sandbox for the devices, an online editor
to program the devices over-the-internet, and the integration with git
as the base for continuous delivery.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stefano Terna</dc:creator><pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-07:pycon-italia-2017/continuous-delivery-for-iot-with-python-and-iottly.html</guid><category>raspberrypi</category><category>git</category><category>continuous-delivery</category><category>iot</category><category>over-the-air firmware upgrade</category><category>InternetOfThings</category><category>InternetDelleCose</category><category>github</category><category>IDE</category></item></channel></rss>