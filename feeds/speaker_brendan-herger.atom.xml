<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_brendan-herger.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-10-09T00:00:00+00:00</updated><entry><title>Machine Learning Techniques for Class Imbalances &amp; Adversaries</title><link href="https://pyvideo.org/pydata-dc-2016/machine-learning-techniques-for-class-imbalances-adversaries.html" rel="alternate"></link><published>2016-10-09T00:00:00+00:00</published><updated>2016-10-09T00:00:00+00:00</updated><author><name>Brendan Herger</name></author><id>tag:pyvideo.org,2016-10-09:pydata-dc-2016/machine-learning-techniques-for-class-imbalances-adversaries.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;There are many areas of applied Machine Learning which require models optimized for rare occurrences (i.e. class imbalance), as well as users actively attempting to subvert the system (i.e. adversaries).&lt;/p&gt;
&lt;p&gt;This talk will guide the audience through multiple published techniques which specifically attempt to address these issues.&lt;/p&gt;
&lt;p&gt;The Data Innovation Lab at Capital One has explored more advanced modeling techniques for class imbalance &amp;amp; adversarial actors. Our use case has allowed us to survey the many related fields which deal with these issues, and attempt many of the suggested modeling techniques. Additionally, we have introduce a few novel variations of our own.&lt;/p&gt;
&lt;p&gt;This talk will provide an introduction to the problem space, a brief overview of the modeling frameworks we've chosen to work with, a brief overview of our approaches, a discussion of lessons learned, and our proposed future work.&lt;/p&gt;
&lt;p&gt;The approaches discussed will include ensemble models, deep learning, genetic algorithms, outlier detection via dimensionally reduction (PCA and neural network auto-encoders), time-decay weighting, and Synthetic Minority Over-sampling Technique (SMOTE sampling).&lt;/p&gt;
</summary><category term="class"></category><category term="learning"></category><category term="machine learning"></category></entry></feed>