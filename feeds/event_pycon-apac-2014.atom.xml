<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-apac-2014.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-08-13T00:00:00+00:00</updated><entry><title>from present import future.curriculum</title><link href="https://pyvideo.org/pycon-apac-2014/from-present-import-futurecurriculum-pycon-apac.html" rel="alternate"></link><published>2014-08-13T00:00:00+00:00</published><updated>2014-08-13T00:00:00+00:00</updated><author><name>Ambrose Tan</name></author><id>tag:pyvideo.org,2014-08-13:pycon-apac-2014/from-present-import-futurecurriculum-pycon-apac.html</id><summary type="html"></summary></entry><entry><title>HiPy - Python for High School Students</title><link href="https://pyvideo.org/pycon-apac-2014/hipy-python-for-high-school-students-pycon-apa.html" rel="alternate"></link><published>2014-08-13T00:00:00+00:00</published><updated>2014-08-13T00:00:00+00:00</updated><author><name>Nie Shuyue</name></author><id>tag:pyvideo.org,2014-08-13:pycon-apac-2014/hipy-python-for-high-school-students-pycon-apa.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The ever progressing technology is no doubt beneficial to mankind.
However, the current inventions derived from new technology is not
thorough enough to cover the needs of more focused groups. More
importantly, students often find themselves hard to go beyond passively
receiving information and stretch their own ability to become active
drivers of positive change by channeling curriculum to real life. This
is where innovation and creation of tailored applications set in. This
talk, by a group of three students from Dunman High School, Singapore,
serves to allow people to better understand the needs of high school
students and how Python can be used to benefit them. Examples based on
the authors' personal observations and experiences together with
illustration of procedures and real-time demonstration will be presented
to show how Python can be thoughtfully utilized as an inventive
computational thinking and practical problem solving tool to enrich the
lives of students. Through our sharing, we would like to inspire more
ideas on developing Python applications of close relevance to students
and hopefully, encourage more students to use Python to actively improve
their school experience.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Nie Shuyue: New learner of Programming. Studying for Python since 2013
and learned a bit of Java and HTML. Had some hands on projects using
mainly Python and tried using Python with Google App Engine and Pygame.
It is fun to learn Python. :)&lt;/p&gt;
&lt;p&gt;Wu Chenmu: 2005 -2007 Learning BASIC 2012 - Learning Python, C++ and
Java Study art for 4 years, good at graphic design, web design and UI
design. Has experience in both competitive programming and mobile
application development.&lt;/p&gt;
&lt;p&gt;Song Kai: 2006 - 2007 Learning BASIC 2008 - 2011 Learning PASCAL 2012 -
Learning C++ 2013 - Learning Python Has experience in both competitive
programming (algorithm based) and application development. Hopes to make
good combination of both aspects of coding to bring more convenience to
people’s daily life. Some Python projects done:
&lt;a class="reference external" href="http://elijahsk.pythonanywhere.com/"&gt;http://elijahsk.pythonanywhere.com/&lt;/a&gt; (Flask based)
&lt;a class="reference external" href="https://play.google.com/store/apps/details?id=dessert.program"&gt;https://play.google.com/store/apps/details?id=dessert.program&lt;/a&gt; (Pygame
based, in collaboration with Shuyue) &lt;a class="reference external" href="http://dhstreasurerkit.appspot.com"&gt;http://dhstreasurerkit.appspot.com&lt;/a&gt;
(GAE based)&lt;/p&gt;
&lt;p&gt;Others: We have one female presenter Shuyue and through this
presentation, we would like to encourage more female students to try
Python and bravely voice out their own experiences. All three of us are
Year 6 (Grade 12) students from Dunman High School, Singapore. Last year
we have been through Project Work where systematic report and
interactive oral presentation are the main focus of learning. We are
confident that we can give the audience an engaging presentation
experience. We have good ability to converse in Mandarin, hence are able
to reach out to a broader / more local audience.&lt;/p&gt;
</summary></entry><entry><title>Openstack 簡介</title><link href="https://pyvideo.org/pycon-apac-2014/openstack-pycon-apac-2014.html" rel="alternate"></link><published>2014-08-13T00:00:00+00:00</published><updated>2014-08-13T00:00:00+00:00</updated><author><name>Kao Kuo-Tung</name></author><id>tag:pyvideo.org,2014-08-13:pycon-apac-2014/openstack-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenStack是一個 NASA
和Rackspace合作研發的雲端運算‎軟件，以Apache許可證授權，並且是一個自由軟件和開放原始碼項目。他是建立在大量現成技術（如
python, iscsi, kvm)上，並提供 REST api 界面方便使用者與開發者使用。&lt;/p&gt;
&lt;p&gt;這次演講會介紹 openstack 與 openstack 背後所採用的技術及架構。和追蹤
openstack source code 的經驗談。&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;目前工作使用 python + django
為主。主要興趣在程式語言與作業系統，對嵌入式系統(mini2440)、androidd開發
、python 直譯器、qt與 anduino
皆有涉獵。喜歡開發一些簡單，功能奇怪的小軟體。平時會把自己所學寫進
blogger 作備忘。其他興趣則是爬山、心理學與行銷。&lt;a class="reference external" href="http://about.me/ya790206"&gt;http://about.me/ya790206&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;個人網頁連結 &lt;a class="reference external" href="http://www.blackwhite.tw/"&gt;http://www.blackwhite.tw/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;組織/公司 迎廣科技 頭銜 Research and Developmemt&lt;/p&gt;
</summary></entry><entry><title>小海嚴選</title><link href="https://pyvideo.org/pycon-apac-2014/pycon-apac-2014.html" rel="alternate"></link><published>2014-08-13T00:00:00+00:00</published><updated>2014-08-13T00:00:00+00:00</updated><author><name>總理 海</name></author><id>tag:pyvideo.org,2014-08-13:pycon-apac-2014/pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;「小海嚴選」是一個策展類型的網站, 透過 Python / Django
只花了不到兩天開發, 並且是在 iPad 上完成雛形開發。&lt;/p&gt;
&lt;p&gt;正式營運後不久即開放 API, 吸引中港臺各地 Developer 著手開發,
不到一個月內便開發出 iOS, Android, Windows Phone 版本的小海嚴選, 甚至是
Mac 螢幕保護程式, hubot plugin, 以及 Chrome extension 等 ...
儼然形成一個生態圈。&lt;/p&gt;
&lt;p&gt;目前已經有各大網路媒體報導,
如蘋果日報、PunNode、重灌狂人、免費資源網路社群以及中國的小眾軟件 ...
等。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;為何開發小海嚴選&lt;/li&gt;
&lt;li&gt;小海嚴選如何透過 Python / Django 快速開發&lt;/li&gt;
&lt;li&gt;Open API&lt;/li&gt;
&lt;li&gt;小海嚴選如何營運&lt;/li&gt;
&lt;li&gt;善用網路上的的免費資源&lt;/li&gt;
&lt;li&gt;Heroku&lt;/li&gt;
&lt;li&gt;CloudFlare&lt;/li&gt;
&lt;li&gt;... (continue)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;ABOUT&lt;/p&gt;
</summary></entry><entry><title>Python in VIM</title><link href="https://pyvideo.org/pycon-apac-2014/python-in-vim-pycon-apac-2014.html" rel="alternate"></link><published>2014-08-13T00:00:00+00:00</published><updated>2014-08-13T00:00:00+00:00</updated><author><name>嘉駿 戴</name></author><id>tag:pyvideo.org,2014-08-13:pycon-apac-2014/python-in-vim-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;VIM
是個功能強大的文字編輯器，不論在系統管理或是程式開發均有大量的使用者。在
VIM 內部有提供 Python Interface 可以直接執行 Python script，同時也有提供
vim module 讓 Python 可以操作 vim buffer。&lt;/p&gt;
&lt;p&gt;此次演講將介紹 vim module 以及 vim module 的實際應用範例&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;熱愛 Python 及資訊技術的大學生。&lt;/li&gt;
&lt;li&gt;常用 Python 寫小工具自娛。&lt;/li&gt;
&lt;li&gt;VIM 重度使用者，即使在 Windows 上也要使用 VIM。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tagline vim&lt;/p&gt;
</summary></entry><entry><title>Introduction to Google Cloud Endpoints for Python developers</title><link href="https://pyvideo.org/pycon-apac-2014/introduction-to-google-cloud-endpoints-for-python.html" rel="alternate"></link><published>2014-08-11T00:00:00+00:00</published><updated>2014-08-11T00:00:00+00:00</updated><author><name>Colin Su</name></author><id>tag:pyvideo.org,2014-08-11:pycon-apac-2014/introduction-to-google-cloud-endpoints-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Google Cloud Endpoints provides a simple way to create a RESTful service
and be fueled by the infrastructure of Google, it also generates client
libraries for JavaScript, Android and iOS to minimize the effort for
developers who are integrating their service with mobile and web in
bootstrapping.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;I'm the software engineer at Tagtoo, and also the developer expert of
Google Cloud Platform. I'm a full-stack engineer who love to teach,
presenting. Here're my links: &lt;a class="reference external" href="http://about.me/littleq"&gt;http://about.me/littleq&lt;/a&gt;
&lt;a class="reference external" href="https://developers.google.com/experts/+ColinSu"&gt;https://developers.google.com/experts/+ColinSu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tagline python,google,google cloud platform 個人網頁連結&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://about.me/littleq"&gt;http://about.me/littleq&lt;/a&gt; Twitter &amp;#64;littleq0903 頭銜 Developer Expert,
Google Cloud Platform&lt;/p&gt;
</summary></entry><entry><title>Yielding a Tulip</title><link href="https://pyvideo.org/pycon-apac-2014/yielding-a-tulip-pycon-apac-2014.html" rel="alternate"></link><published>2014-08-11T00:00:00+00:00</published><updated>2014-08-11T00:00:00+00:00</updated><author><name>Tzu-ping Chung</name></author><id>tag:pyvideo.org,2014-08-11:pycon-apac-2014/yielding-a-tulip-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Asynchronised operations are good. Callbacks are not. Named callbacks
clutter scopes and are disruptive. Anonymous callbacks create deeply
nested code and become totally unreadable—Python does not even support
that because it just lacks style! We deserve better. Let's take a look
on how Python 3.4's new &amp;quot;asyncio&amp;quot; (aka Tulip) brings elegance to async
tasks.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;TP is a professional software engineer enjoying building things. He
writes C++ because his boss pays him to do so, but loves Python and
constantly tries to sneak it into his work as much as he can.&lt;/p&gt;
&lt;p&gt;個人網頁連結&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://uranusjr.com/"&gt;https://uranusjr.com/&lt;/a&gt; Twitter &amp;#64;uranusjr 組織/公司 BIMETEK Co. Ltd. 頭銜
Lead Software Engineer&lt;/p&gt;
</summary></entry><entry><title>Graph database for python</title><link href="https://pyvideo.org/pycon-apac-2014/graph-database-for-python-pycon-apac-2014.html" rel="alternate"></link><published>2014-08-10T00:00:00+00:00</published><updated>2014-08-10T00:00:00+00:00</updated><author><name>宗哲 李</name></author><id>tag:pyvideo.org,2014-08-10:pycon-apac-2014/graph-database-for-python-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;最近剛好接觸到 graph database, 想順便 push 自己學習就衝了!!! 目前在
graph database 的應用大多都是針對 Social Network 的複雜人際關係處理,
不過我覺得 graph database 的特性也很適合建構資料模型.
本次目標是分享一些我學習 graph database 過程做的應用, 目前想嘗試看看用
graph database 建構 HMM 的分詞模型!! 有沒有覺得 字與字 &amp;amp;
詞與詞的前後關係就有點像人際關係一樣!! 沒意外的話應該會用最近比較紅的
neo4j 入手..&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;tagtoo 軟體工程師..&lt;/p&gt;
&lt;p&gt;組織/公司 tagtoo&lt;/p&gt;
</summary></entry><entry><title>Graph-Tool: The Efficient Network Analyzing Tool for Python</title><link href="https://pyvideo.org/pycon-apac-2014/graph-tool-the-efficient-network-analyzing-tool.html" rel="alternate"></link><published>2014-08-10T00:00:00+00:00</published><updated>2014-08-10T00:00:00+00:00</updated><author><name>Mosky Liu</name></author><id>tag:pyvideo.org,2014-08-10:pycon-apac-2014/graph-tool-the-efficient-network-analyzing-tool.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;現實中有許多有網絡關係的資料 --- 例如網際網路上的網頁與超連結、Facebook
上的人與朋友關係、購物網站中的商品與購買者 ---
對於這些資料，我們都可以將他們化約為點 (vertex)，並利用邊 (edge)
來使點與點之間產生關聯，最後形成一張圖 (graph)，最後，我們可以利用圖論
(Graph theory) 來發掘其中隱藏著的有趣資訊。
然而自己從無到有手寫出所有圖論演算法有些不切實際，這場演講要介紹的就是一套
Python 的圖論函數庫：graph-tool。它是一個基於 C++ Boost Graph 的 Python
函數庫，提供許多常用的演算法、視覺化等工具。是一個進行圖分析時，可以享受到
C++ 的執行速度與 Python 的開發速度的完美組合。 這場演講主要會包含到使用
graph-tool 這個函數庫時會需要的基本概念，常用的 API 介紹，以及一個使用
graph-tool 進行分析的情境實例。&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;I am a Python developer at &lt;a class="reference external" href="http://pinkoi.com/"&gt;Pinkoi&lt;/a&gt;, an author of
Python packages, a Python instructor, and an Open Source lover. Since I
met Python in 2009, it is too hard to forget the simplicity and elegance
of Python, so I've been writing Python for 5 years. I am interested in
using Python in web, system administration, and data-related topics. I
developed some Python packages, such as
&lt;a class="reference external" href="http://mosql.mosky.tw/"&gt;MoSQL&lt;/a&gt;, &lt;a class="reference external" href="http://clime.mosky.tw/"&gt;Clime&lt;/a&gt;,
&lt;a class="reference external" href="http://zipcode.mosky.tw/"&gt;ZIPCodeTW&lt;/a&gt;. You can find them on
&lt;a class="reference external" href="https://www.github.com/moskytw"&gt;GitHub&lt;/a&gt; or
&lt;a class="reference external" href="https://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=mosky&amp;amp;submit=search"&gt;PyPI&lt;/a&gt;.
In the same time, I’ve taught Python for 100+ hours, mostly at
&lt;a class="reference external" href="http://www.openfoundry.org/"&gt;OSSF’s&lt;/a&gt; events. &lt;a class="reference external" href="http://mosky.tw/"&gt;http://mosky.tw/&lt;/a&gt; is my
personal website.&lt;/p&gt;
&lt;p&gt;Tagline python, pinkoi, mosql, clime, zipcodetw, uniout 個人網頁連結&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Twitter [&amp;#64;moskytw](&lt;a class="reference external" href="https://twitter.com/moskytw"&gt;https://twitter.com/moskytw&lt;/a&gt;)&lt;/div&gt;
&lt;div class="line"&gt;組織/公司&lt;/div&gt;
&lt;div class="line"&gt;Pinkoi&lt;/div&gt;
&lt;div class="line"&gt;頭銜&lt;/div&gt;
&lt;div class="line"&gt;Python Charmer&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;MAY 17-18 2014 in Taipei&lt;/p&gt;
&lt;pre class="literal-block"&gt;
最新消息
議程
    特邀講者
    議程講者
    贊助商 Show Time 與 Job Fair
    閃電秀
    CheckIO Contest
    Poster Session
▾
自助小聚 (BoF)
    BoF 申請
    特殊財務補助
▾
贊助
    方案說明
    為何贊助 PyCon
    贊助須知
▾
會場資訊
    平面圖
    住宿
▾
關於
    PyCon APAC
    行為準則 (Code of Conduct)
    地區性 PyCon
▾
購票
    財務補助
▾
專業課程 (Tutorial)

講者登入
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;facebook twitter googleplus&lt;/div&gt;
&lt;div class="line"&gt;English 中文 日本語&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>OpenOffice Application with Python</title><link href="https://pyvideo.org/pycon-apac-2014/openoffice-application-with-python-pycon-apac-2.html" rel="alternate"></link><published>2014-08-10T00:00:00+00:00</published><updated>2014-08-10T00:00:00+00:00</updated><author><name>Shih-Ching Yang</name></author><id>tag:pyvideo.org,2014-08-10:pycon-apac-2014/openoffice-application-with-python-pycon-apac-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OpenOffice 辦公室軟體的 API 稱為 UNO ， OpenOffice UNO API
可以廣泛連結各種不同的程式語言，包括 Python 。使用 PyUNO
撰寫辦公室軟體的應用，比想像中更簡單！這個講題將示範幾個簡單好用的辦公室軟體應用，說明其背後的觀念和原理。
The API of OpenOffice suite is called &amp;quot;UNO&amp;quot;. OpenOffice UNO API can bind
to different programming languages, including Python. It's even more
easier to build office application with PyUNO. This talk will
demonstrate several simple but fancy office applications, and the
concepts behind them.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Apache OpenOffice committer / Project Management Committee member&lt;/li&gt;
&lt;li&gt;PyLadies Taiwan Oragnizer&lt;/li&gt;
&lt;li&gt;師大資訊教育研究所畢業&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Tagline&lt;/div&gt;
&lt;div class="line"&gt;openoffice, pyuno, pyladies&lt;/div&gt;
&lt;div class="line"&gt;個人網頁連結&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.imacat.idv.tw/"&gt;http://www.imacat.idv.tw/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Python to LiveScript</title><link href="https://pyvideo.org/pycon-apac-2014/python-to-livescript-pycon-apac-2014.html" rel="alternate"></link><published>2014-08-10T00:00:00+00:00</published><updated>2014-08-10T00:00:00+00:00</updated><author><name>信屹 陳</name></author><id>tag:pyvideo.org,2014-08-10:pycon-apac-2014/python-to-livescript-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;LiveScript is a language which compiles to JavaScript. It has a
straightforward mapping to JavaScript and allows you to write expressive
code devoid of repetitive boilerplate. While LiveScript adds many
features to assist in functional style programming, it also has many
improvements for object oriented and imperative programming.&lt;/p&gt;
&lt;p&gt;本場次會介紹 Python 與 LiveScript 的同與不同。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Tagline livescript&lt;/div&gt;
&lt;div class="line"&gt;個人網頁連結&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="http://hychen.wuwweig.org/"&gt;http://hychen.wuwweig.org/&lt;/a&gt; Twitter [&amp;#64;hychen](&lt;a class="reference external" href="https://twitter.com/hychen"&gt;https://twitter.com/hychen&lt;/a&gt;)&lt;/p&gt;
</summary></entry><entry><title>Open Source and Open Science: how Python and its community made me a better scientist</title><link href="https://pyvideo.org/pycon-apac-2014/open-source-and-open-science-pycon-apac-2014.html" rel="alternate"></link><published>2014-08-08T00:00:00+00:00</published><updated>2014-08-08T00:00:00+00:00</updated><author><name>Fernando Pérez</name></author><id>tag:pyvideo.org,2014-08-08:pycon-apac-2014/open-source-and-open-science-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will discuss the intersection of Open Source and scientific research,
focusing on the positive impact that Open Source tools and ideas, and
the Python community in particular, have had on the world of science.
Scientific research is at a crossroads, under increasing pressure to
justify itself to society at large and with very real questions being
asked about the reproducibility of scientific results and access to the
products of science. The Open Source community have created both
technical and cultural solutions to similar problems that we as
scientists can learn from. The Python language has also made major
inroads into research and education, helping foster a culture of better
computational research and opening up a space for a lot of creativity at
the intersection of science and computing.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Fernando Pérez is a research scientist at UC Berkeley, working at the
intersection of high-level scientific computing with open tools and
brain imaging. He started the IPython project in 2001, while a graduate
student in Physics at CU Boulder. He continues to lead a talented team
(who do all the hard work) to develop IPython as the interface between
the humans at the keyboard and the bits in the machine.&lt;/p&gt;
&lt;p&gt;He is a founding member of NumFOCUS, a PSF member, and received the 2012
Award for the Advancement of Free Software for IPython and his
contributions to scientific Python. He is a founding investigator of the
Berkeley Institute for Data Science, created in 2013.&lt;/p&gt;
&lt;p&gt;When he can get away from a computer, Fernando tries to enjoy the
mountains and the outdoors hiking, backpacking and climbing. For more
information, see &lt;a class="reference external" href="http://fperez.org"&gt;http://fperez.org&lt;/a&gt;.&lt;/p&gt;
</summary></entry><entry><title>Using Fabric and Docker for deployment testing</title><link href="https://pyvideo.org/pycon-apac-2014/using-fabric-and-docker-for-deployment-testing.html" rel="alternate"></link><published>2014-08-08T00:00:00+00:00</published><updated>2014-08-08T00:00:00+00:00</updated><author><name>Cheng-Lung Sung</name></author><id>tag:pyvideo.org,2014-08-08:pycon-apac-2014/using-fabric-and-docker-for-deployment-testing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Deployment testing is a type of production testing which is performed
after the code is deployed to check whether it is working fine in
production. Fabric is a command-line tool for application deployment or
systems administration tasks. Docker is a lightweight, portable,
self-sufficient Linux container engine. This talk cover introduction to
both Fabric and Docker, and how we use Fabric and Docker to test the
deployment process.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;An Open Source developer and user for 10+ years. Current favorite
programming languages are Python and Go, I get started with Python about
4 years ago. * Blog: &lt;a class="reference external" href="http://dev.clsung.tw/"&gt;http://dev.clsung.tw/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>立委投票指南 -- 從零開始</title><link href="https://pyvideo.org/pycon-apac-2014/-pycon-apac-2014.html" rel="alternate"></link><published>2014-08-07T00:00:00+00:00</published><updated>2014-08-07T00:00:00+00:00</updated><author><name>勁成 駱</name></author><id>tag:pyvideo.org,2014-08-07:pycon-apac-2014/-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;＊你的第一次投票經驗如何？ - 立委投票指南的建立動機 ＊立委投票指南？ -
網站內容導覽（） ＊如何從電機背景跨入資訊領域？ - 網站建置過程 &amp;amp;
線上學習經驗分享 ＊使用工具介紹（python, django, scrapy, pandas）
＊使用者回饋與下一步計畫 ＊開放透明的力量 - 參與g0v開放協作的心得分享&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;電機控制背景，2013年線上自學Python、web
applicationn，製作立委投票指南 &lt;a class="reference external" href="http://vote.ly.g0v.tw/"&gt;http://vote.ly.g0v.tw/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;加入g0v零時政府貢獻與學習&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Bicycles for the Mind: Building High-Performance Tools with Python</title><link href="https://pyvideo.org/pycon-apac-2014/bicycles-for-the-mind-building-high-performance.html" rel="alternate"></link><published>2014-08-07T00:00:00+00:00</published><updated>2014-08-07T00:00:00+00:00</updated><author><name>Andreas Klöckner</name></author><id>tag:pyvideo.org,2014-08-07:pycon-apac-2014/bicycles-for-the-mind-building-high-performance.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Andreas Klöckner is an assistant professor in the scientific computing
group within the Department of Computer Science at the University of
Illinois at Urbana-Champaign. He works on high-order numerical methods
for the simulation of wave problems as well as issues in
high-performance scientific computing that relate to bringing these
methods to life on large-scale parallel computers. In support of his
research, Dr. Klöckner has released numerous software packages for
scientific computing in Python, including PyOpenCL, PyCUDA and the PuDB
Python debugger. He obtained his PhD degree at the Division of Applied
Mathematics at Brown University with Jan Hesthaven, working on
large-scale finite element simulations of wave problems in the time
domain. From Brown, Klöckner moved to the Courant Institute of
Mathematical Sciences at New York University as a Courant Instructor,
where he worked on integral equation methods and fast algorithms within
Leslie Greengard's group.&lt;/p&gt;
</summary></entry><entry><title>如何用 grs 擷取台灣上市股票股價資訊</title><link href="https://pyvideo.org/pycon-apac-2014/grs-pycon-apac-2014.html" rel="alternate"></link><published>2014-08-07T00:00:00+00:00</published><updated>2014-08-07T00:00:00+00:00</updated><author><name>Toomore Chiang</name></author><id>tag:pyvideo.org,2014-08-07:pycon-apac-2014/grs-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;展示如何利用 grs
套件來擷取台灣股市上市個股股價資訊，與開盤交易期間如何擷取上市即時盤資訊。
grs 套件包含其他常用的工具： - 顯示台灣時間：TWTime -
判斷台灣股市是否開市：TWSEOpen - 各股即時盤資訊：RealtimeStock -
大盤即時盤資訊：RealtimeWeight - 上市股票代碼列表：TWSENo -
單日倒數時間：Countdown grs 套件包含簡易的數值分析： - 移動平均數值 -
判斷乖離轉折點 - 四大買賣點判斷 目前 grs
只能擷取上市股票資訊，上櫃資料預定在 v0.5 版本加入。 相關的資訊： pypi /
&lt;a class="reference external" href="https://pypi.python.org/pypi/grs"&gt;https://pypi.python.org/pypi/grs&lt;/a&gt; github / &lt;a class="reference external" href="https://github.com/toomore/grs"&gt;https://github.com/toomore/grs&lt;/a&gt;
grs docs / &lt;a class="reference external" href="http://grs-docs.toomore.net"&gt;http://grs-docs.toomore.net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;大學時念財金，但對寫程式很有興趣，遇到 Python
後就愛上了。平時寫寫小工具放在 github 上練功，持續挑戰不中斷 commit
的成就。2014 年最希望達成的目標就是可以站在台前分享議題。（目前在
&amp;quot;亞洲最大設計商品網路購物商城&amp;quot; 服務）&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Tagline python&lt;/div&gt;
&lt;div class="line"&gt;個人網頁連結&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.toomore.net/"&gt;http://www.toomore.net/&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;Twitter &amp;#64;toomore&lt;/div&gt;
&lt;div class="line"&gt;組織/公司&lt;/div&gt;
&lt;div class="line"&gt;Pinkoi.com&lt;/div&gt;
&lt;div class="line"&gt;頭銜&lt;/div&gt;
&lt;div class="line"&gt;Python Parselmouth&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Python-powered Business Analytics</title><link href="https://pyvideo.org/pycon-apac-2014/python-powered-business-analytics-pycon-apac-201.html" rel="alternate"></link><published>2014-08-07T00:00:00+00:00</published><updated>2014-08-07T00:00:00+00:00</updated><author><name>Wes McKinney</name></author><id>tag:pyvideo.org,2014-08-07:pycon-apac-2014/python-powered-business-analytics-pycon-apac-201.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, I'll discuss how the modern Python stack has enabled
innovation in business analytics and general purpose small, medium, and
big data workflows. I'll talk about how the architecture of pandas and
related projects will need to adapt and grow to suit the needs of the
next decade of data analysis. Lastly, I will also give an overview of
how this all relates to my company: DataPad, an early-stage business
intelligence company.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Wes McKinney is an open-source Python hacker, author, and entrepreneur.
He's the creator of pandas and author of O'Reilly book Python for Data
Analysis. Currently, he is the Founder and CEO of DataPad, a new
analytics and business intelligence company based in San Francisco. He
has also been an occasional contributor to statsmodels. He started
building pandas at AQR Capital Management in response to the growing
need for better data manipulation tools in Python for business analytics
and data science use cases.&lt;/p&gt;
</summary></entry><entry><title>用 Python 建立你自己的 Summly</title><link href="https://pyvideo.org/pycon-apac-2014/python-summly-pycon-apac-2014.html" rel="alternate"></link><published>2014-08-07T00:00:00+00:00</published><updated>2014-08-07T00:00:00+00:00</updated><author><name>Andy Dai</name></author><id>tag:pyvideo.org,2014-08-07:pycon-apac-2014/python-summly-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;在去年的時候 Yahoo 買了 Summly 這個新聞摘要的服務，不過其實透過 Python
要做個簡單的 Summly 是很容易的！在這個 Talk 當中，我們將透過幾個 Python
Library 加上一些簡單的演算法，讓我們可以打造自己的 Summly。&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;目前在洞悉科技 (dorm7.com) 工作，平常開發工作以 Python、Django 為主，是
PyCon Taiwan、Taipei.py、Django Workshop 等 Python 社群的工作人員。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Tagline python, summly&lt;/div&gt;
&lt;div class="line"&gt;個人網頁連結&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://krdai.info/"&gt;http://krdai.info/&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;Twitter &amp;#64;daikeren&lt;/div&gt;
&lt;div class="line"&gt;組織/公司&lt;/div&gt;
&lt;div class="line"&gt;Dorm7 Software&lt;/div&gt;
&lt;div class="line"&gt;頭銜&lt;/div&gt;
&lt;div class="line"&gt;Co-Founder&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Python: under the sea, in space, and back home</title><link href="https://pyvideo.org/pycon-apac-2014/python-under-the-sea-in-space-and-back-home-p.html" rel="alternate"></link><published>2014-08-07T00:00:00+00:00</published><updated>2014-08-07T00:00:00+00:00</updated><author><name>Jessica McKellar</name></author><id>tag:pyvideo.org,2014-08-07:pycon-apac-2014/python-under-the-sea-in-space-and-back-home-p.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Jessica McKellar is an entrepreneur, software engineer, and open source
developer from Cambridge, Massachusetts, USA. She is a Director for the
Python Software Foundation and an organizer for the largest Python user
group in the world. With that group she runs the Boston Python Workshop
-- an introductory programming pipeline that has brought hundreds of
women into the local Python community and is being replicated in cities
across the US. Jessica is a veteran open source contributor and a
maintainer for several open source projects, including OpenHatch and the
Twisted event-driven networking engine; she wrote a chapter on Twisted
for The Architecture of Open Source Applications Volume II and the
second edition of O’Reilly’s Twisted Networking Essentials.&lt;/p&gt;
&lt;p&gt;In a PyCon US 2014 keynote, Jessica McKellar outlined the
programming-education problem that exists in US high schools, but she
also highlighted some steps the community could take to help fix it.
Besides, the Python Software Foundation is ready to help, including
looking to fund grant proposals for Python-education-related projects.
Here's her challenge for the community: by next year's PyCon, we would
like to see every folk does one thing to further the cause of the next
generation of Python programmers.&lt;/p&gt;
</summary></entry><entry><title>Rapid Web Development with Mezzanine</title><link href="https://pyvideo.org/pycon-apac-2014/rapid-web-development-with-mezzanine-pycon-apac.html" rel="alternate"></link><published>2014-08-07T00:00:00+00:00</published><updated>2014-08-07T00:00:00+00:00</updated><author><name>Stephen McDonald</name></author><id>tag:pyvideo.org,2014-08-07:pycon-apac-2014/rapid-web-development-with-mezzanine-pycon-apac.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The modern world of Python web development is chock-full of choices
today - do we use a micro or a monolithic framework? Do we use a CMS or
roll our own? Mezzanine is one project that aims to simplify these
questions with a compelling offering for developing Python powered
websites.&lt;/p&gt;
&lt;p&gt;In this talk, Stephen McDonald the creator of Mezzanine will walk
through the history of Mezzanine, covering the constraints that have
dictated its design, its approach to providing simple yet flexible,
rapid web development, through to the software eco-system and community
that have developed around it.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Stephen McDonald is a software engineer who has worked in the web
development space since the late 90s, when Netscape Gold and ICQ reigned
supreme.&lt;/p&gt;
&lt;p&gt;Currently Stephen works with several startups using Python and Django.
By day he's the technical lead at Mathspace, applying machine learning
techniques to transform maths education. By night he works on scaling
the news reader Kouio, to handle hundreds of millions of news articles
from around the world.&lt;/p&gt;
&lt;p&gt;Somewhere in between these, Stephen is also the creator and maintainer
of Mezzanine, one of the most popular CMS projects for the Django
framework.&lt;/p&gt;
</summary></entry><entry><title>Anatomy of a Data Analytics MVP</title><link href="https://pyvideo.org/pycon-apac-2014/anatomy-of-a-data-analytics-mvp-pycon-apac-2014.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Ken Hu</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/anatomy-of-a-data-analytics-mvp-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Behind the glamour of mobile apps, business SaaS products have been
steadily building itself into a billion dollar industry. With companies
such as Salesforce spearheading the adaption of business SaaS products
in corporate, startups are rising to take on the SME market.&lt;/p&gt;
&lt;p&gt;With hot topics such as &amp;quot;big data&amp;quot; and &amp;quot;machine learning&amp;quot; flying around,
it may seem overwhelming to put an idea into action. I will walk through
the process of building an data analytics minimum viable product (MVP).
Attendees will have hands on experiences with the free and/or affordable
technology and services that can get their MVP up and running.&lt;/p&gt;
&lt;p&gt;This talk assumes attendees understand the basic of Python. Basic
understanding of MapReduce and NoSQL databases will be big pluses as
well.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;I am a data scientist, software developer, and aspiring entrepreneur.
I'm especially interested in machine learning, information retrieval,
text analytics, and cloud technology. My weapon of choice is Python.&lt;/p&gt;
&lt;p&gt;I previously founded a social data analysis company and developed its
core technology. I grew the startup into a profitable entity, without
any outside funding.&lt;/p&gt;
</summary></entry><entry><title>Building a Knowledge Graph - the new search engine technology</title><link href="https://pyvideo.org/pycon-apac-2014/building-a-knowledge-graph-the-new-search-engin.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Jimmy Lai</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/building-a-knowledge-graph-the-new-search-engin.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Knowledge graph is the new search engine technology. All the leading
search engine exploit knowledge graph to provide more accurate result to
user, e.g. Bing, Google, Yahoo.&lt;/p&gt;
&lt;p&gt;In this talk, the speaker will demonstrate how to build a searchable
knowledge graph from scratch. Lots of python tools will be applied
during the process. The process includes data wrangling, graph entity
indexing, full text search and web visualization. The data sources are
from dbpedia.org. Enormous amount of entities are collected and stored
to graph database for relationship querying and full text search engine
for searching. In the web visualization, a searchable interface and
visualized result demonstrate the knowledgable information to customer.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Jimmy Lai is a Python fan, and his interested topics are natural
language processing and machine learning. He specializes in combining
machine learning algorithm and cloud computing technology to do big data
analysis, building application services.&lt;/p&gt;
</summary></entry><entry><title>Designing a Python-integrated query language for distributed computing</title><link href="https://pyvideo.org/pycon-apac-2014/designing-a-python-integrated-query-language-for.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Jiwon Seo</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/designing-a-python-integrated-query-language-for.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python becomes increasingly popular in the domain of big data analysis.
Many big data frameworks such as Hadoop now support Python to some
extent. PySociaLite is a new big data framework developed at Stanford.
It is designed from beginning to be fully integrated into Python. In
PySociaLite, SQL-like queries (called SociaLite) are directly embedded
within Python code; the queries can access Python variables and
functions, so there is full inter-operation between SociaLite and
Python.&lt;/p&gt;
&lt;p&gt;In this talk, I will give a brief overview of SociaLite, then mainly
present the techniques for the integration of SociaLite into Python.
SociaLite builds on top of well-known programming concepts -- tables and
relational operations -- and it allows users to declare distributed
tables to perform, for example, distributed join operations. For the
integration of SociaLite into Python, we basically extend Jython
interpreter to process embedded SociaLite queries. More specificaly, we
use PyParsing to recognize SociaLite queries and re-write the queries
into Java function calls. We also use lesser-known Python features, such
as import hooks to process SociaLite queries within imported modules. To
access Python functions within SociaLite, Jython interpreter instance
(from which SociaLite queries are executed) is passed to SociaLite
runtime system, and used to lookup and access Python functions. For the
distributed execution, Python functions are serialized (as well as its
PyCode object) and copied to cluster machines.&lt;/p&gt;
&lt;p&gt;Time permitting, I will give a demo of PySociaLite; SociaLite queries
will be executed interactively within (extended) Jython shell and
demonstrate the inter-operation between SociaLite and Python.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Jiwon Seo is a PhD student in Stanford university, studying parallel
query language for data analysis. He contributed to Python in various
ways; for example, he implemented PEP 289 (Generator Expressions) and
PEP 3102 (Keyword-Only Arguments).&lt;/p&gt;
&lt;p&gt;He designed and implemented a parallel and distributed query language,
called SociaLite. The SociaLite compiler generates efficient
parallel/distributed code from user queries. SociaLite queries can be
embedded in Python programs, allowing users to enjoy flexibility of
Python and efficiency of SociaLite. More information is in
&lt;a class="reference external" href="http://socialite-lang.github.io/"&gt;http://socialite-lang.github.io/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Handy Parallel (Distributed) Computing in Python</title><link href="https://pyvideo.org/pycon-apac-2014/handy-parallel-distributed-computing-in-python.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Liang Bo Wang</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/handy-parallel-distributed-computing-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all start our programming with single process in mind. But
parallelization from scratch is a real headache. Things get worse when
it comes to writing a spaghetti code in both short time and high
performance, which is often the case doing data analysis.&lt;/p&gt;
&lt;p&gt;In fact, cases like computation under different conditions, programs can
be easily parallelized (distributed) with a few modifications using
existed library like multiprocessing, IPython Parallel, and Celery.&lt;/p&gt;
&lt;p&gt;This talk makes you not afraid of parallel or distributed computing and
provides ways for different level of parallelization from single
machine, cluster, to cluster with task queue. I will only talk about the
basic scenario, which should be easier for newbies to try on and
understand how powerful these tools can be.&lt;/p&gt;
&lt;p&gt;A machine learning example will be given in the end to compare
performance and possible issues with different implementations.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;呆呆電雞生，喜歡寫 R / Python，喜歡統計與生物資訊。目前為 Taiwan R Users
Group 工作人員及 Taipei.py 常客。&lt;/p&gt;
&lt;p&gt;Bioinfo / Stat / R / Python, master student of NTU BEBI. Co-organizer of
Taiwan R Users Group and freq attendee of Taipei.py.&lt;/p&gt;
</summary></entry><entry><title>How PyCon APAC 2014 Web is built</title><link href="https://pyvideo.org/pycon-apac-2014/how-pycon-apac-2014-web-is-built-pycon-apac-2014.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Keith Yang</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/how-pycon-apac-2014-web-is-built-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sitting on Web Chair of PyCon APAC 2014, I'm still new to Django and
we're even new to Mezzanine. How we make it happen? It might be related
to these keywords from the perspective of a Pyramid user:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mezzanine Rich Text Page &amp;amp; html content&lt;/li&gt;
&lt;li&gt;Mezzanine style&lt;/li&gt;
&lt;li&gt;Multihost middleware&lt;/li&gt;
&lt;li&gt;Django user, admin, and doc&lt;/li&gt;
&lt;li&gt;Django Workshop in Taipei.py&lt;/li&gt;
&lt;li&gt;django-bootstrap&lt;/li&gt;
&lt;li&gt;django-celery-email&lt;/li&gt;
&lt;li&gt;django-compress&lt;/li&gt;
&lt;li&gt;AngularJS&lt;/li&gt;
&lt;li&gt;Stylus&lt;/li&gt;
&lt;li&gt;Fabric&lt;/li&gt;
&lt;li&gt;Transifex&lt;/li&gt;
&lt;li&gt;Bitbucket &amp;amp; Github&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;An artisan and ranger chief of web development.&lt;/p&gt;
&lt;p&gt;Sitting on Web Chair in PyCon APAC 2014, he's also an organizer for
Taipei.py - Taipei Python User Group, working on PyClab branch,
forwarding to CS education quest. He uses Python every day in biideal, a
local startup in Taiwan.&lt;/p&gt;
</summary></entry><entry><title>How to integrate Python into a Scala stack to build realtime predictive models</title><link href="https://pyvideo.org/pycon-apac-2014/how-to-integrate-python-into-a-scala-stack-to-bui.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Jerry Chou</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/how-to-integrate-python-into-a-scala-stack-to-bui.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Fliptop's primary business used to be contact record linkage. We
built-out some substantial infrastructure, coding primarily in Scala,
and using JVM-stack libraries. In the past year, we've moved beyond our
data business into building predictive analytics applications for Sales
and Marketing teams, so it was necessary to build a data science/machine
learning stack. While there's plenty of machine-learning tools for the
JVM, we felt that the Python ecosystem had many advantages for our
use-case (which we'll discuss), and we think we integrated them in a
clever way.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;I'm a data scientist and software engineer. Languages of choice are
Scala and Python. I have been working with AWS for production for over
three years. My interest is in building data analytics applications with
cloud computing technologies.&lt;/p&gt;
</summary></entry><entry><title>Narrowing the Gender Gap at Hackathons</title><link href="https://pyvideo.org/pycon-apac-2014/narrowing-the-gender-gap-at-hackathons-pycon-apa.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Amalia Hawkins</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/narrowing-the-gender-gap-at-hackathons-pycon-apa.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As hackathons become more prevalent, one thing has (mostly) stayed the
same: the ratio of male to female hackathon participants is often lower
than the ratio in the broader computer science community.&lt;/p&gt;
&lt;p&gt;How can hackathon organizers be mindful of this issue, and encourage a
diverse pool of participants? This talk will cover the basics of how to
run an inclusive hackathon, as well as successful strategies organizers
have used in the past. We will examine case studies of several of the
largest college hackathons.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;I am a software engineer at MongoDB. Previously, I graduated from the
University of Pennsylvania, where I was a lead organizer for the
PennApps Hackathon and very involved in the college hackathon community.&lt;/p&gt;
</summary></entry><entry><title>Python for Application Security Testing</title><link href="https://pyvideo.org/pycon-apac-2014/python-for-application-security-testing-pycon-ap.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Zaki Akhmad</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/python-for-application-security-testing-pycon-ap.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We can never rely on network firewall to be secure. We also must have a
secure application. Besides test the functionality of the application,
we must also test the security of the application. While the latter is
frequently not performed hence the first is considered more important.&lt;/p&gt;
&lt;p&gt;In this 25 minute talk, I'll share my experience using python for
application security testing: from SQL injection, brute force attack,
identifying and cracking password hashes, to proxy-ing the network
traffic: intercept and modify it; and also doing network forensic.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Just another Python enthusiasts&lt;/div&gt;
&lt;div class="line"&gt;Mainly use Python for application security testing&lt;/div&gt;
&lt;div class="line"&gt;Planet Python Indonesia maintainer&lt;/div&gt;
&lt;div class="line"&gt;Python Indonesia meetup organizer&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Python Performance Profiling: The Guts And The Glory</title><link href="https://pyvideo.org/pycon-apac-2014/python-performance-profiling-the-guts-and-the-gl.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>A. Jesse Jiryu Davis</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/python-performance-profiling-the-guts-and-the-gl.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Your Python program is too slow, and you need to optimize it. Where do
you start? With the right tools, you can optimize your code where it
counts. We'll explore the guts of the Python profiler Yappi to
understand its features and limitations, and learn how to find the
maximum performance wins with minimum effort.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Author of Motor, an async MongoDB driver for Tornado, and of Toro, a
library of locks and queues for Tornado coroutines. Author of
GreenletProfiler. Contributor to Python, PyMongo, MongoDB, Yappi,
Tornado, and Tulip.&lt;/p&gt;
</summary></entry><entry><title>Real-time visualization with Python and d3.js</title><link href="https://pyvideo.org/pycon-apac-2014/real-time-visualization-with-python-and-d3js-py.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Muyueh Lee</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/real-time-visualization-with-python-and-d3js-py.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pyhton has great power in scrapping and analyzing data, and D3.js is a
great tool for building visual interface. In the first part of the talk,
I will demonstrate how to set up D3.js as an interactive layer on top of
Python. In the second part of the talk, I will show what it can achieve,
by using the &amp;quot;Taiwan Vegetable Auction&amp;quot; dataset (past 10 years
transaction data of 127 kinds of vegetable, 1GB).&lt;/p&gt;
&lt;p&gt;The dataset is too large for human to see through, a machine learning
algorithm will be able to fit a regression model on the dataset, but it
can't make sense of it. For example, in the following graph:&lt;/p&gt;
&lt;p&gt;You can see the average price of green onion in different markets for
the past 20 years, the fluctuation between different markets are
similar, yet since 2010, there is a perfectly horizontal blue line:
while price in the other markets have changes, price in &amp;quot;Taitung&amp;quot; has
remained exactly the same, suggesting a possible case of monopoly. One
can then asks the system to detect other cases of monopoly. This process
of exploratory data analysis can only be possible with both machine and
human.&lt;/p&gt;
&lt;p&gt;From a technical perspective, this talk can benefit front-end
developer/data scientist to set up such a system. Yet a more profound
value of the talk will be to explore how machine and human can work
together.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Muyueh Lee (李慕約) is a programmer focus on Data Visualization, for
profit and for fun, he hosts &amp;quot;Visualization Lighting Talk&amp;quot;, a gathering
for programmers doing data visualization work in Taiwan, and has been
teaching Visualization in the graduate school of Journalism at National
Taiwan University, in the DataScience Program by CfT and SYSTEX, and
held various workshop in Guangzhou and Hong Kong. A list of his work can
be found at &lt;a class="reference external" href="http://muyueh.com/1314/"&gt;http://muyueh.com/1314/&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Roboconf: How we held a conference with Django</title><link href="https://pyvideo.org/pycon-apac-2014/roboconf-how-we-held-a-conference-with-django-p.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Poren Chiang</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/roboconf-how-we-held-a-conference-with-django-p.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Holding a conference needs continuous efforts, especially when you're in
charge of all those administration stuff. Simple solutions could end up
with management death spiral, while complex systems like Redmine would
be an overkill. Roboconf is the home-made solution we've brought up: a
conference operation site built upon Django, with issue tracking,
document organizing, notifications, and staff management all in one
place. In this session, I'll describe situations we faced when
organizing SITCON 2013, how Roboconf got itself implemented, what
difference it has made throughout the process, and crazy stuff other
folks at SITCON built around this system.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Law student at NTU, Administration Lead at SITCON '13/'14, open source
advocate.&lt;/p&gt;
&lt;p&gt;RSChiang，目前就讀於臺灣大學法律學系，在 SITCON 2013、2014
擔任行政組長；原先是個拿人工智慧做研究的普通高中生，去年暑假的某天突然轉職成鍵盤法律人。目前嘗試在學校推廣開源概念，大概是為了不辜負爺爺的名聲吧。&lt;/p&gt;
</summary></entry><entry><title>Shipping python projects by Docker</title><link href="https://pyvideo.org/pycon-apac-2014/shipping-python-projects-by-docker-pycon-apac-20.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Wei-Ting Kuo</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/shipping-python-projects-by-docker-pycon-apac-20.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Docker is an open source project to easily create lightweight, portable,
self-sufficient containers from any application. We can easily build the
container in our own laptop and then run this container at scale.
There're two parts in my presentation. I'll give a brief introduction
first. Then I'll build a image for a simple python website by flask (or
Django), and deploy it to my own computer, virtualbox, aws ec2, and
google cloud engine.&lt;/p&gt;
</summary></entry><entry><title>Social Network Analysis with Python</title><link href="https://pyvideo.org/pycon-apac-2014/social-network-analysis-with-python-pycon-apac-2.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>David Chiu</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/social-network-analysis-with-python-pycon-apac-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As the rise of social network, the relationship between people can now
be described as network graph. Through the analysis of social network,
the complex people interaction can be characterized by mathematical
model.&lt;/p&gt;
&lt;p&gt;Since the social network information can now being accessed by simple
API call, this talk will introduce how to use python and install related
package to build up simple script to access and analyze social network.
In addition, this talk will introduce how to use a powerful network
visualization tool, Gephi, to build up interactive figure.&lt;/p&gt;
&lt;p&gt;From this talk, the audience can follow up each provision steps to build
up a powerful analysis program to analyze one's own social network.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;David Chiu, 前趨勢科技工程師, NumerInfo 營運長, TW.R Officer
一位致力於提供Data as a Service
的創業者、資料科學家，熟悉巨量資料處理，暨長時間專注使用各式Data Mining
技術做資料分析；為台灣Python 及 R
社群的忠實聽眾，喜愛參與社團交流與分享，希望能多了解如何使用Python &amp;amp; R
讓 資料分析更簡單上手。&lt;/p&gt;
</summary></entry><entry><title>VapourSynth comes, does it indicate that AviSynth will shutdown?</title><link href="https://pyvideo.org/pycon-apac-2014/vapoursynth-comes-does-it-indicate-that-avisynth.html" rel="alternate"></link><published>2014-06-27T00:00:00+00:00</published><updated>2014-06-27T00:00:00+00:00</updated><author><name>Hsueh-Tsung Kuo</name></author><id>tag:pyvideo.org,2014-06-27:pycon-apac-2014/vapoursynth-comes-does-it-indicate-that-avisynth.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;VapourSynth is a powerful tool for video post-production. In contrast to
video editing tools with GUI interface, it parses expressions and
statements from Python script, builds corresponding filter graph, and
cheats output video as regular uncompressed RGB/YUV AVI stream file.
Thus, everyone can view video editing result just by playing Python
script as a regular AVI file.&lt;/p&gt;
&lt;p&gt;The concept of VapourSynth is based on AviSynth, the most famous script
based video editing tools. However, AviSynth is too old, inefficient,
has disorder filter set, and there are many limitations in its specific
script language (lack of for/while loop). That is why project holder
introduces many advantages into VapourSynth, such as better resource
usage, frame level concurrent processing, simplified filter set, and
describes video processing flow with Python!&lt;/p&gt;
&lt;p&gt;Will VapourSynth be the future of script based video editing? Let's make
some simple VapourSynth scripts and realize what VapourSynth can do!&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Source: A little programmer from animation studio. He joins or hosts
development of many utilities for animation staff in studio. He is very
familiar with AviSynth, and has embedded it into production or
exhibition application.&lt;/p&gt;
&lt;p&gt;Faith: Loves the style of functional programming language, but always
uses imperative and object-oriented coding style for real life problem.
Believes voxel based rendering is the future, but always works on
rendering module with polygon based rendering. Asks friends to own a car
with Hybrid Synergy Drive, but drives a car with 4-speed automatic
transmission plus inefficient torque converter inside.&lt;/p&gt;
&lt;p&gt;In another words, lip-service technology geek.&lt;/p&gt;
</summary></entry><entry><title>Data Analysis in Python</title><link href="https://pyvideo.org/pycon-apac-2014/data-analysis-in-python-pycon-apac-2014.html" rel="alternate"></link><published>2014-06-26T00:00:00+00:00</published><updated>2014-06-26T00:00:00+00:00</updated><author><name>Wei-Ting Kuo</name></author><id>tag:pyvideo.org,2014-06-26:pycon-apac-2014/data-analysis-in-python-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is one of the best language for data analysis. In this
presentation, I'll give an introduction for general data analysis tools
written in python, including ipython, numpy, pandas, matplotlib, and
sci-kit learn. Some advance topic might be included if time permit:
NLTK, SimpleCV, statsmodels, numba etc...&lt;/p&gt;
</summary></entry><entry><title>Hacking Models with Python</title><link href="https://pyvideo.org/pycon-apac-2014/hacking-models-with-python-pycon-apac-2014.html" rel="alternate"></link><published>2014-06-26T00:00:00+00:00</published><updated>2014-06-26T00:00:00+00:00</updated><author><name>Chia-Chi Chang</name></author><id>tag:pyvideo.org,2014-06-26:pycon-apac-2014/hacking-models-with-python-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Although there are several data mining tools in python, you can use them
to deal with almost every kind of data (numeric, text, image, audio,
...) you met. Besides, there are also lots of modeling tools in python,
you can use them to build the FIRST LIGHTING MODEL to solve the
problems.&lt;/p&gt;
&lt;p&gt;However, if you want to solve problems deeply, most of time, you need to
write down the customerized models and solve them by yourself. Instead
of using fast modeling tools, you need to know more about the essential
things in modeling:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What is a model ?&lt;/li&gt;
&lt;li&gt;How models solve your problems ?&lt;/li&gt;
&lt;li&gt;What is the connection between models and data ?&lt;/li&gt;
&lt;li&gt;What is the important data ? important model ?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I deeply believe ... The more the connection between models and data you
know, the deeper the problem you can solve.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Outline: What is Modeling ?&lt;/div&gt;
&lt;div class="line"&gt;Data, Model, Evaluators&lt;/div&gt;
&lt;div class="line"&gt;Direct Problem: Data + Evaluators → Model&lt;/div&gt;
&lt;div class="line"&gt;Inverse Problem: Data + Models → Evaluator&lt;/div&gt;
&lt;div class="line"&gt;Hacking Models with Metric Learning&lt;/div&gt;
&lt;div class="line"&gt;Data as a Model &amp;amp; Model as a Data&lt;/div&gt;
&lt;div class="line"&gt;Duality between Dimension Reduction and Clustering&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>What Is Async, How Does It Work, and When Should I Use It?</title><link href="https://pyvideo.org/pycon-apac-2014/what-is-async-how-does-it-work-and-when-should-0.html" rel="alternate"></link><published>2014-06-26T00:00:00+00:00</published><updated>2014-06-26T00:00:00+00:00</updated><author><name>A. Jesse Jiryu Davis</name></author><id>tag:pyvideo.org,2014-06-26:pycon-apac-2014/what-is-async-how-does-it-work-and-when-should-0.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python's asynchronous frameworks, like asyncio, Tornado, and Twisted,
are increasingly important for writing high-performance web
applications. Even if you're an experienced web programmer, you may lack
a rigorous understanding of how these frameworks work and when to use
them. Let's see how asyncio's event loop works, and learn how to
efficiently handle very large numbers of concurrent connections.&lt;/p&gt;
&lt;p&gt;Attendees will learn when to use async and when not to. They'll learn
about asyncio, a major new feature in the Python 3.4 standard library:
what it is, how it works, and how to use it for high-concurrency web
programming.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Author of Motor, an async MongoDB driver for Tornado, and of Toro, a
library of locks and queues for Tornado coroutines. Author of
GreenletProfiler. Contributor to Python, PyMongo, MongoDB, Yappi,
Tornado, and Tulip.&lt;/p&gt;
</summary></entry><entry><title>PySpark: next generation cluster computing engine</title><link href="https://pyvideo.org/pycon-apac-2014/pyspark-next-generation-cluster-computing-engine.html" rel="alternate"></link><published>2014-06-24T00:00:00+00:00</published><updated>2014-06-24T00:00:00+00:00</updated><author><name>Wisely Chen</name></author><id>tag:pyvideo.org,2014-06-24:pycon-apac-2014/pyspark-next-generation-cluster-computing-engine.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Apache Spark™ is a lightning fast engine for large-scale data
processing. It is an in-memory cluster computing framework, originally
developed in UC Berkeley. Base on it's project page's evaluation,
machine learning programming can run program 100x faster than Hadoop
MapReduce. And Spark can run on Hadoop 2's YARN cluster manager, and can
read any existing Hadoop data. Currently, it supports Scala, Java and
Python for writing spark programs.&lt;/p&gt;
&lt;p&gt;In this talk, I will introduce the General concept of Spark's
infrastructure, What is RDD (Resilient Distributed Datasets) in Spark,
Introduction on PySpark, Demo of PySpark's speed and power, Head-to-head
comparison between two programs doing same work - one written in Hadoop
MapReduce and the other written using PySpark.&lt;/p&gt;
&lt;p&gt;I will also conclude about the companies currently using Spark's use
cases.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Sr. Software Engineer for the Yahoo! (Taiwan) Data Team. He has been
responsible for data infrastructure, data solution, software release and
continuous integration management. He is a lifelong student of software
development/testing/deployment/CI processes and best practices and an
avid coding puzzle competition fanatic as well as Open Source evangelist&lt;/p&gt;
</summary></entry><entry><title>SOLVCON: Software-Engineering Simulations of Conservation Laws</title><link href="https://pyvideo.org/pycon-apac-2014/solvcon-software-engineering-simulations-of-cons.html" rel="alternate"></link><published>2014-06-24T00:00:00+00:00</published><updated>2014-06-24T00:00:00+00:00</updated><author><name>Yung-Yu Chen</name></author><id>tag:pyvideo.org,2014-06-24:pycon-apac-2014/solvcon-software-engineering-simulations-of-cons.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SOLVCON is a collection of Python-based conservation-law solvers and
uses the space-time Conservation Element and Solution Element (CESE)
method. SOLVCON targets at providing a reusable code base for systems of
first-order, linear or non-linear partial differential equations (PDEs).
In addition to numerical methods, modern conservation-law simulations
require code for parallel computing and flexible input, output, and work
flow. Researchers spend a lot of time in these supportive
functionalities, although they should have focused on the physical
processes or numerical methods. Further, SOLVCON emphasizes the
connections among documenting, coding, and testing. Many Python-based
tools are used in the development, e.g., Sphinx, NumPy, Cython, nose,
etc. SOLVCON is open-source and uses a BSD-style license.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;Yung-Yu is a software developer for high-performance computing
applications. His interests lie on numerical simulations of conservation
laws.&lt;/p&gt;
</summary></entry><entry><title>Statistics in Python with R</title><link href="https://pyvideo.org/pycon-apac-2014/statistics-in-python-with-r-pycon-apac-2014.html" rel="alternate"></link><published>2014-06-24T00:00:00+00:00</published><updated>2014-06-24T00:00:00+00:00</updated><author><name>Liang Bo Wang</name></author><id>tag:pyvideo.org,2014-06-24:pycon-apac-2014/statistics-in-python-with-r-pycon-apac-2014.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Statistics is essential to data analysis, and many people choose R
because of its great package diversity. With the advent of pandas,
Python becomes one of the hottest language to do data analysis, and it
will be more helpful if we can do statistics in Python as well.&lt;/p&gt;
&lt;p&gt;In this talk, I will first introduce how to do statistics in Python
using statsmodel and some related functions implemented in Numpy and
Scipy.&lt;/p&gt;
&lt;p&gt;Then I will introduces the communication from Python to R using rpy2,
and give you advices or alternatives about when to use this approach or
not.&lt;/p&gt;
&lt;p&gt;About the speaker&lt;/p&gt;
&lt;p&gt;呆呆電雞生，喜歡寫 R / Python，喜歡統計與生物資訊。目前為 Taiwan R Users
Group 工作人員及 Taipei.py 常客。 Bioinfo / Stat / R / Python, master
student of NTU BEBI. Co-organizer of Taiwan R Users Group and freq
attendee of Taipei.py.&lt;/p&gt;
</summary></entry></feed>