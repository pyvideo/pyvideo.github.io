<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Jean-Luc Stevens</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jean-luc-stevens.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2022-07-11T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Building Complex Visualizations Easily</title><link href="https://pyvideo.org/euroscipy-2015/building-complex-visualizations-easily.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Philipp Rudiger</name></author><id>tag:pyvideo.org,2015-10-05:/euroscipy-2015/building-complex-visualizations-easily.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scientific visualization typically requires large amounts of custom coding that obscures the underlying principles of the work and makes it more difficult to share and reproduce the results. Here we describe how the new HoloViews Python package, combined with the IPython Notebook, provides a rich interface for flexible and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scientific visualization typically requires large amounts of custom coding that obscures the underlying principles of the work and makes it more difficult to share and reproduce the results. Here we describe how the new HoloViews Python package, combined with the IPython Notebook, provides a rich interface for flexible and nearly code-free visualization of your results while storing a full record.&lt;/p&gt;
</content><category term="EuroSciPy 2015"></category></entry><entry><title>Seeing the needle AND the haystack: single-datapoint selection for billion-poin...</title><link href="https://pyvideo.org/pycon-de-2022/seeing-the-needle-and-the-haystack-single-datapoint-selection-for-billion-poin.html" rel="alternate"></link><published>2022-05-11T00:00:00+00:00</published><updated>2022-05-11T00:00:00+00:00</updated><author><name>Jean-Luc Stevens</name></author><id>tag:pyvideo.org,2022-05-11:/pycon-de-2022/seeing-the-needle-and-the-haystack-single-datapoint-selection-for-billion-poin.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker:: Jean-Luc Stevens&lt;/p&gt;
&lt;p&gt;Track: PyData: Visualization
Python tools like Bokeh and Dash let you build custom Web-based interactive visualization apps and dashboards.  While these solutions work well to visualize megabyte-sized datasets, web technologies (including WebGL) stuggle to render gigabyte or larger datasets efficiently, because they transfer all the data …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker:: Jean-Luc Stevens&lt;/p&gt;
&lt;p&gt;Track: PyData: Visualization
Python tools like Bokeh and Dash let you build custom Web-based interactive visualization apps and dashboards.  While these solutions work well to visualize megabyte-sized datasets, web technologies (including WebGL) stuggle to render gigabyte or larger datasets efficiently, because they transfer all the data into the client browser. Pre-rendering the data on the server using a tool like Datashader can visualize such large datasets efficiently, but the resulting static renderings make exploring individual datapoints difficult.&lt;/p&gt;
&lt;p&gt;This talk introduces an easy-to-use hvPlot API that leverages HoloViews, Datashader, Bokeh, and Panel to build dashboards that do server-side rendering of billions of data points without losing the ability to interactively inspect individual samples in the browser.&lt;/p&gt;
&lt;p&gt;These tools let you dump in your data and immediately see both the overall structure and explore the individual data items without having to program with events, callbacks, or other advanced mechanisms, and with very little programming required at all.&lt;/p&gt;
&lt;p&gt;See hvPlot.holoviz.org, holoviews.org, and panel.org for more details and how to get started!&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2022 conference, April 11-13 2022.
&lt;a class="reference external" href="https://2022.pycon.de"&gt;https://2022.pycon.de&lt;/a&gt;
More details at the conference page: &lt;a class="reference external" href="https://2022.pycon.de/program/9LDACE"&gt;https://2022.pycon.de/program/9LDACE&lt;/a&gt;
Twitter: &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter: &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon DE 2022"></category><category term="PyCon"></category><category term="PyConDE"></category><category term="pyconde2022"></category><category term="pydata"></category><category term="PyDataBerlin"></category><category term="pydataberlin2022"></category></entry><entry><title>HoloViews Let your Data Reveal Itself</title><link href="https://pyvideo.org/scipy-2016/holoviews-let-your-data-reveal-itself-scipy-2016-phllip-rudiger-and-jean-luc-stevens-et-al.html" rel="alternate"></link><published>2016-07-14T00:00:00+00:00</published><updated>2016-07-14T00:00:00+00:00</updated><author><name>Phllip Rudiger</name></author><id>tag:pyvideo.org,2016-07-14:/scipy-2016/holoviews-let-your-data-reveal-itself-scipy-2016-phllip-rudiger-and-jean-luc-stevens-et-al.html</id><content type="html"></content><category term="SciPy 2016"></category><category term="SciPy 2016"></category></entry><entry><title>Interactive Data Visualization with HoloViews &amp; Bokeh</title><link href="https://pyvideo.org/scipy-2017/interactive-data-visualization-with-holoviews-bokeh.html" rel="alternate"></link><published>2017-08-04T00:00:00+00:00</published><updated>2017-08-04T00:00:00+00:00</updated><author><name>Jean-Luc Stevens</name></author><id>tag:pyvideo.org,2017-08-04:/scipy-2017/interactive-data-visualization-with-holoviews-bokeh.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are audio issues with this video that cannot be fixed. We recommend listening to the tutorial without headphones to minimize the buzzing sound.
Tutorial information may be found at &lt;a class="reference external" href="https://scipy2017.scipy.org/ehome/220975/493423/"&gt;https://scipy2017.scipy.org/ehome/220975/493423/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visualization represents a major bottleneck in scientific research, engineering, data science, and …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are audio issues with this video that cannot be fixed. We recommend listening to the tutorial without headphones to minimize the buzzing sound.
Tutorial information may be found at &lt;a class="reference external" href="https://scipy2017.scipy.org/ehome/220975/493423/"&gt;https://scipy2017.scipy.org/ehome/220975/493423/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visualization represents a major bottleneck in scientific research, engineering, data science, and data analytics. The tools in the Python scientific ecosystem make it very simple to do many of the tasks required, but building visualizations to help understand complex patterns and relationships in your data still typically involves a large amount of custom coding for every new type of plot. Writing long and detailed scripts for plotting slows down the process of exploration and reporting, while the difficulty involved means that many important observations and discoveries are missed due to inadequate visualizations. The complexity of the resulting plotting code makes it difficult to rapidly build sophisticated, interactive visualizations that can quickly reveal the underlying structure of the data, and once such complex plotting scripts have been created they can be a major impediment to future understanding, reproduction, and modification of the research process.&lt;/p&gt;
&lt;p&gt;In this tutorial, you will learn how to approach the problem of interactive visualization declaratively. Using the HoloViews library, you can annotate your data and store it in general-purpose containers that will be instantly visualizable. The declarative objects in HoloViews wrap your data to make it incredibly easy to visualize how different sets of data relate to each other, using subfigures, animations, interactive widgets and custom interactions. This flexibility has made HoloViews the chosen future replacement for the high-level Bokeh Charts API and works particularly well with IPython/Jupyter notebooks, where you can immediately see the output from selecting, combining, slicing, or sampling these objects. Each of these operations generates a different type of visualization, that can be flexibly extended even to complex dashboards deployed using the Bokeh server or Jupyter dashboards.&lt;/p&gt;
&lt;p&gt;The core design principle of HoloViews is to make it simple to create complex plot layouts and interactivity by applying compositional operations to a small number of elements and containers. Since HoloViews separates the declaration of the data from the precise visual details of the plotting code, the same HoloViews objects can be rendered using matplotlib for publication-quality plots, or bokeh for interactive use. Overall, this means the user can focus on &lt;strong&gt;what&lt;/strong&gt; to plot before worrying about &lt;strong&gt;how&lt;/strong&gt; exactly it should be displayed, providing a huge boost in productivity.&lt;/p&gt;
</content><category term="SciPy 2017"></category><category term="tutorial"></category><category term="HoloViews"></category><category term="Bokeh"></category></entry><entry><title>Deploying Interactive Jupyter Dashboards for Visualizing Hundreds of Millions of Datapoints, in 30 Lines of Python</title><link href="https://pyvideo.org/scipy-2017/deploying-interactive-jupyter-dashboards-for-visualizing-hundreds-of-millions-of-datapoints-in-30-lines-of-python.html" rel="alternate"></link><published>2017-07-17T00:00:00+00:00</published><updated>2017-07-17T00:00:00+00:00</updated><author><name>Philipp Rudiger</name></author><id>tag:pyvideo.org,2017-07-17:/scipy-2017/deploying-interactive-jupyter-dashboards-for-visualizing-hundreds-of-millions-of-datapoints-in-30-lines-of-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It can be difficult to assemble the right set of packages from the Python scientific software ecosystem to solve complex problems. This presentation will show step by step how to make and deploy a concise, fast, and fully reproducible recipe for interactive visualization of millions or billions of datapoints …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It can be difficult to assemble the right set of packages from the Python scientific software ecosystem to solve complex problems. This presentation will show step by step how to make and deploy a concise, fast, and fully reproducible recipe for interactive visualization of millions or billions of datapoints using very few lines of Python in a Jupyter notebook using a combination of the HoloViews, Datashader, Dask, Bokeh and paramNB libraries and deployed as a Jupyter Dashboard.&lt;/p&gt;
</content><category term="SciPy 2017"></category><category term="jupyter notebook"></category></entry><entry><title>PyViz: Easy Visualization and Exploration for all your Data</title><link href="https://pyvideo.org/scipy-2018/pyviz-easy-visualization-and-exploration-for-all-your-data.html" rel="alternate"></link><published>2018-07-12T00:00:00+00:00</published><updated>2018-07-12T00:00:00+00:00</updated><author><name>James A. Bednar</name></author><id>tag:pyvideo.org,2018-07-12:/scipy-2018/pyviz-easy-visualization-and-exploration-for-all-your-data.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial, you will learn how to use the PyViz suite of tools to quickly build simple or complex visualizations that reveal and give insight into your data. You'll start by using the HoloViews library to annotate your numpy, pandas, or xarray data and make it have an …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial, you will learn how to use the PyViz suite of tools to quickly build simple or complex visualizations that reveal and give insight into your data. You'll start by using the HoloViews library to annotate your numpy, pandas, or xarray data and make it have an instantly available visual representation. These declarative objects make it easy to visualize how different sets of data relate to each other, by flexibly overlaying and laying out data in any combination. Once you have these objects, you can select, slice, or sample your data as needed, quickly making new types of plots so that you can fully understand your data. You'll be able to choose between Matplotlib plots suitable for publications, or Bokeh plots that support interactive exploration in Jupyter Notebooks or as separate dashboard apps. You'll then see how to use HoloViews and related tools to transform your data for viewing in different ways, defining complex analysis pipelines if needed that preserve the raw data while making each step visible for analysis. When your datasets are too large for web browsers, we'll show how to use Datashader to reveal &lt;em&gt;all&lt;/em&gt; of the data faithfully, rendering it into an image that can be displayed safely even for billions of datapoints. When it is time to share your results with non-developer colleagues, we'll show how to use Param to add interactive widgets to let them explore parameter spaces, how to link plots to respond to user selections and events, and how to put plots and widgets together into a separately launchable dashboard. Throughout, we will demonstrate how to customize plots as needed, how to follow up on specific topics to get more information, and how and when to use each of the libraries described. The aim is to give users the tools and know-how to effectively explore, analyze and visualize even large and complex datasets easily, concisely, and reproducibly. You can see a detailed breakdown of the topics included, including the full training materials as Jupyter notebooks, at &lt;a class="reference external" href="https://pyviz.github.io/pyviz/tutorial/00_Welcome.html"&gt;https://pyviz.github.io/pyviz/tutorial/00_Welcome.html&lt;/a&gt; .&lt;/p&gt;
</content><category term="SciPy 2018"></category><category term="tutorial"></category></entry><entry><title>Visualize any Data Easily, from Notebooks to Dashboards</title><link href="https://pyvideo.org/scipy-2019/visualize-any-data-easily-from-notebooks-to-dashboards.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>James Bednar</name></author><id>tag:pyvideo.org,2019-07-11:/scipy-2019/visualize-any-data-easily-from-notebooks-to-dashboards.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial you will see how to visualize and communicate your data easily and effectively using Python tools. You'll learn how to use Panel to lay out your existing plots with widgets to make apps in the notebook or as deployed dashboards, hvPlot to make your Pandas or …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial you will see how to visualize and communicate your data easily and effectively using Python tools. You'll learn how to use Panel to lay out your existing plots with widgets to make apps in the notebook or as deployed dashboards, hvPlot to make your Pandas or Xarray .plot() API calls return interactive, explorable plots, HoloViews and GeoViews to help you explore multidimensional data naturally without having to build a plot for each combination or sample of the data space, and Datashader to visualize even the very largest datasets faithfully in a web browser. See pyviz.org for links to all these tools and more.&lt;/p&gt;
</content><category term="SciPy 2019"></category><category term="tutorial"></category></entry><entry><title>Needles in the haystack Interactive dashboards - single point selection in billion row</title><link href="https://pyvideo.org/scipy-2021/needles-in-the-haystack-interactive-dashboards-single-point-selection-in-billion-row.html" rel="alternate"></link><published>2021-07-12T00:00:00+00:00</published><updated>2021-07-12T00:00:00+00:00</updated><author><name>Jean-Luc Stevens</name></author><id>tag:pyvideo.org,2021-07-12:/scipy-2021/needles-in-the-haystack-interactive-dashboards-single-point-selection-in-billion-row.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python tools allow you to create custom web-based visualization dashboards, but previously supported _either_ deep interactivity _or_ efficient rendering of large datasets, and not both. Here we show how to use hvPlot (building on HoloViews, Datashader, and Bokeh) to view millions or billions of datapoints while allowing precise selection …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python tools allow you to create custom web-based visualization dashboards, but previously supported _either_ deep interactivity _or_ efficient rendering of large datasets, and not both. Here we show how to use hvPlot (building on HoloViews, Datashader, and Bokeh) to view millions or billions of datapoints while allowing precise selection and exploration of the details of individual datapoints, all within a single Panel dashboard. Just dump your data in and truly understand it, for the first time, without having to program with events, callbacks, or other advanced mechanisms, and with very little programming required at all.&lt;/p&gt;
</content><category term="SciPy 2021"></category></entry><entry><title>hvPlot &amp; HoloViz</title><link href="https://pyvideo.org/scipy-2022/hvplot-holoviz.html" rel="alternate"></link><published>2022-07-11T00:00:00+00:00</published><updated>2022-07-11T00:00:00+00:00</updated><author><name>James Bednar</name></author><id>tag:pyvideo.org,2022-07-11:/scipy-2022/hvplot-holoviz.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python offers many powerful visualization tools, each with their own strengths and advantages, but few people have the time and interest to learn all the different APIs required to use these different tools. Luckily, a de-facto standard API for data plotting has emerged in the Pandas .plot() API, which …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python offers many powerful visualization tools, each with their own strengths and advantages, but few people have the time and interest to learn all the different APIs required to use these different tools. Luckily, a de-facto standard API for data plotting has emerged in the Pandas .plot() API, which is now supported by many different plotting packages.&lt;/p&gt;
&lt;p&gt;In this tutorial, you will learn how to use hvPlot, a high-level interactive plotting library that exposes the power of Bokeh, Matplotlib, Plotly, Datashader, and Cartopy using the same .plot API you may already know from using Pandas or Xarray's plotting interface. We'll also show you how to turn nearly any expression you can write with that API into a web app with plots and tables by simply substituting widgets for any parameters you want users to be able to select. Thanks to the HoloViz tools on which hvPlot is built, the resulting apps can easily handle big data (up to billions of rows on an ordinary laptop), remote data (either in Jupyter or in standalone apps), streaming data (using streaming dataframe libraries), geographical data (building on the geoscience software stack), or multidimensional data (using Xarray).&lt;/p&gt;
&lt;p&gt;hvPlot's high-level interface should be sufficient for nearly all of the common data-exploration and data-analysis tasks you want to do with Pandas or Xarray, but in keeping with the HoloViz philosophy of &amp;quot;&amp;quot;shortcuts rather than dead ends&amp;quot;&amp;quot;, we'll also show you how and when to drop down to lower-level APIs when you need to, such as when building more complex apps using Panel, doing complex graphical data calculations using Datashader, or integrating plotting and interactivity into your own libraries using Param and HoloViews. With the techniques you learn in the hands-on exercises in this tutorial, you'll get the tools and know-how to effectively explore, analyze and visualize simple or complex, small or large, and static or dynamic data easily, concisely, and reproducibly. We expect participants to have previously used some sort of plotting tool and to be comfortable with Python and at least one array-based library (Numpy, Pandas, Xarray, CuPy, cuDF, Dask, etc.).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://alisterburt.github.io/napari-workshops/Scipy-0722/intro.html"&gt;https://alisterburt.github.io/napari-workshops/Scipy-0722/intro.html&lt;/a&gt;&lt;/p&gt;
</content><category term="SciPy 2022"></category></entry></feed>