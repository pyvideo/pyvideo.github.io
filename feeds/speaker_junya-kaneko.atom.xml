<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_junya-kaneko.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-09-20T00:00:00+00:00</updated><entry><title>数学的基礎から学ぶ Deep Learning</title><link href="https://pyvideo.org/pycon-japan-2016/shu-xue-de-ji-chu-karaxue-bu-deep-learning.html" rel="alternate"></link><published>2016-09-20T00:00:00+00:00</published><updated>2016-09-20T00:00:00+00:00</updated><author><name>Junya Kaneko</name></author><id>tag:pyvideo.org,2016-09-20:pycon-japan-2016/shu-xue-de-ji-chu-karaxue-bu-deep-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;みんな大好き state of art の deep learning。そんな 技術を使ってみたい僕らのために沢山ライブラリも出てきたよね。チュートリアルはできた。でも、結局何やってんのかわかんない。 よし、高校生程度の数学の知識から始めて deep learning を行うプログラムを、主に Numpy を用いてスクラッチから作ってみよう！&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;本講演は、Deep learning のライブラリを使ってみたい or 使ってみたけど、何が起こっているのかわからない。何が起こってるのかわからないものから結果がでてきても、気持ち悪くて使えない。&lt;/p&gt;
&lt;p&gt;そんな方向けに、Deep learning を支える数学の基礎的な部分を知り、スクラッチから deep learning を行い、学習過程を確認できるプログラムを自ら作ってみることができるようになるためのエッセンスを、数学とプログラムコードの両面から紹介します。&lt;/p&gt;
&lt;p&gt;今回は Caltech 101 をサンプルとして用いた Deep Convolutional Neural Network (Deep CNN) による一般物体認識を取り上げます。&lt;/p&gt;
</summary><category term="deep learning"></category></entry></feed>