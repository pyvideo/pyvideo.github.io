<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_patrick-muehlbauer.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-24T00:00:00+00:00</updated><entry><title>Python Dependency Management</title><link href="https://pyvideo.org/pycon-de-2018/python-dependency-management.html" rel="alternate"></link><published>2018-10-24T00:00:00+00:00</published><updated>2018-10-24T00:00:00+00:00</updated><author><name>Patrick Muehlbauer</name></author><id>tag:pyvideo.org,2018-10-24:pycon-de-2018/python-dependency-management.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For a long time there were &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; which were used
together with &lt;tt class="docutils literal"&gt;requirements.txt&lt;/tt&gt; files to manage Python dependencies.
Nowadays there are various other tools that help you improve the
workflow.&lt;/p&gt;
&lt;p&gt;We will have a look at popular projects like&lt;/p&gt;
&lt;p&gt;After the talk you will be able to decide for yourself which approach
suits your usecases best and don't have to rely on rants postet on
reddit.&lt;/p&gt;
</summary><category term="Infrastructure"></category></entry></feed>