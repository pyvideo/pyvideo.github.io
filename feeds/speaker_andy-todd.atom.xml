<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_andy-todd.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-07-06T00:00:00+00:00</updated><entry><title>Why I use py.test and maybe you should too</title><link href="https://pyvideo.org/pycon-au-2013/why-i-use-pytest-and-maybe-you-should-too.html" rel="alternate"></link><published>2013-07-06T00:00:00+00:00</published><updated>2013-07-06T00:00:00+00:00</updated><author><name>Andy Todd</name></author><id>tag:pyvideo.org,2013-07-06:pycon-au-2013/why-i-use-pytest-and-maybe-you-should-too.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Have you tried unit testing? Always meant to add tests to your project
but didn't know where to start? This presentation will provide a gentle
introduction to unit testing your module, package or entire project.&lt;/p&gt;
&lt;p&gt;The standard library comes with the unit test module but a great
alternative is py.test. Py.test makes starting to test your project as
easy as possible. When you need them it has a full set of tools and
testing capabilities.&lt;/p&gt;
&lt;p&gt;This presentation will provide an overview of unit testing and then show
how easy it is to get started using py.test.&lt;/p&gt;
</summary></entry></feed>