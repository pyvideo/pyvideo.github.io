<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Dom Weldon</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_dom-weldon.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-09-24T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Dash: Interactive Data Visualization Web Apps with no Javascript</title><link href="https://pyvideo.org/europython-2019/dash-interactive-data-visualization-web-apps-with-no-javascript.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Dom Weldon</name></author><id>tag:pyvideo.org,2019-07-10:/europython-2019/dash-interactive-data-visualization-web-apps-with-no-javascript.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Your data science or machine learning project probably won't just
produce a written report. Instead, projects are increasingly expected to
produce interactive tools to allow end-users to explore data and results
with rich, interactive visualizations. Inevitably, this will be done in
a web browser, meaning you'll need to add …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Your data science or machine learning project probably won't just
produce a written report. Instead, projects are increasingly expected to
produce interactive tools to allow end-users to explore data and results
with rich, interactive visualizations. Inevitably, this will be done in
a web browser, meaning you'll need to add a quantitatively trained web
developer to your team, or have your data scientists spend time learning
HTML, Javascript and CSS. Dash, a project by the team that makes Plotly,
solves some of these problems by allowing data scientists to build rich
and interactive websites in pure python, with minimal knowledge of HTML
and absolutely no Javascript.&lt;/p&gt;
&lt;p&gt;At decisionLab, a London-based data science consultancy producing
decision tools, we've embraced Dash to produce proof-of-concept models
for our projects in alpha. Although we're not officially connected to
the plotly/Dash project, by using the library daily across many
projects, we've learned many lessons and what we feel are best practises
we'd like to share, and hear feedback on!&lt;/p&gt;
&lt;p&gt;This talk will give an overview of Dash, how it works and what it can be
used for, before outlining some of the common problems that emerge when
data scientists are let loose to produce web applications, and web
developers have to work with the pydata ecosystem. The talk also covers
effective working practises to start producing cool interactive
statistical web applications, fast. We'll also identify some of the
pitfalls of Dash, and how and when to make the decision to stop using
Dash and start building a proper web application.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://domweldon-europython-2019-dash.s3.eu"&gt;http://domweldon-europython-2019-dash.s3.eu&lt;/a&gt;-
west-2.amazonaws.com/index.html&lt;/p&gt;
</content><category term="EuroPython 2019"></category><category term="Data Science"></category><category term="JavaScript"></category><category term="Visualization"></category><category term="Web"></category><category term="Web Servers and MicroFWs"></category></entry><entry><title>Oxidizing MyPy: Why I decided to learn Rust and use it with Python</title><link href="https://pyvideo.org/pycon-estonia-2019/oxidizing-mypy-why-i-decided-to-learn-rust-and-use-it-with-python.html" rel="alternate"></link><published>2019-10-03T00:00:00+00:00</published><updated>2019-10-03T00:00:00+00:00</updated><author><name>Dom Weldon</name></author><id>tag:pyvideo.org,2019-10-03:/pycon-estonia-2019/oxidizing-mypy-why-i-decided-to-learn-rust-and-use-it-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dom is a Principal Software Engineer at decisionLab, a mathematical modelling consultancy based in central London. After studying natural sciences at the University of Cambridge, and pursuing a PhD in Computational Geography at King's College London, he now heads a team specialising in building production tools out of mathematical …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dom is a Principal Software Engineer at decisionLab, a mathematical modelling consultancy based in central London. After studying natural sciences at the University of Cambridge, and pursuing a PhD in Computational Geography at King's College London, he now heads a team specialising in building production tools out of mathematical models. Dom loves all things code, and is most recently exploring the world of Rust.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Get tickets for PyCon Estonia 2020 - &lt;a class="reference external" href="https://bit.ly/pycon2020"&gt;https://bit.ly/pycon2020&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python is nearing 3 decades in existence (yes, kinda hard to believe). Where do we go from here? We have the same question, hence PyCon 2019 will be a peek into the future of Python. Come, hang out with an inspired crowd, have rich, direct conversations and who knows, maybe you’ll even find an answer.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pycon.ee"&gt;https://pycon.ee&lt;/a&gt;
&lt;a class="reference external" href="https://twitter.com/PyConEstonia"&gt;https://twitter.com/PyConEstonia&lt;/a&gt;
&lt;a class="reference external" href="https://www.facebook.com/events/vaba-lava/pycon-estonia-2019/318811955508926/"&gt;https://www.facebook.com/events/vaba-lava/pycon-estonia-2019/318811955508926/&lt;/a&gt;&lt;/p&gt;
</content><category term="PyCon Estonia 2019"></category></entry><entry><title>Dash : applications web de visualisation de données interactives sans Javascript</title><link href="https://pyvideo.org/pycon-fr-2019/dash-applications-web-de-visualisation-de-donnees-interactives-sans-javascript.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Dom Weldon</name></author><id>tag:pyvideo.org,2019-11-02:/pycon-fr-2019/dash-applications-web-de-visualisation-de-donnees-interactives-sans-javascript.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Aujourd’hui, on ne veut plus simplement produire un rapport PDF pour son projet de data science ou d'apprentissage automatique. De plus en plus, les utilisateurs souhaitent des outils interactifs permettant d'explorer des données avec des visualisations et des graphiques interactifs. Ces outils étant exécutés dans un navigateur web …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Aujourd’hui, on ne veut plus simplement produire un rapport PDF pour son projet de data science ou d'apprentissage automatique. De plus en plus, les utilisateurs souhaitent des outils interactifs permettant d'explorer des données avec des visualisations et des graphiques interactifs. Ces outils étant exécutés dans un navigateur web, soit il faut embaucher un spécialiste front end  qui respire le Javascript dans son équipe soit il faut que les data scientists  apprennent les technologies web. Ces alternatives ne sont pas pratiques et sont coûteuses. L’alternative se nomme Dash !&lt;/p&gt;
&lt;p&gt;Dash, une bibliothèque de Plotly, peut résoudre le dilemme ainsi: les scientifiques de données peuvent faire les sites interactifs utilisant uniquement le Python et une connaissance minimale du HTML, et absolument aucun JavaScript.&lt;/p&gt;
&lt;p&gt;À decisionLab, une société de conseil en modélisation mathématique du centre du Londres, nous avons adopté Dash pour créer des interfaces pour nos POCs et les premiers alphas de nos projets. Bien que nous ne fassions pas officiellement partie du projet Dash, en l’utilisant quotidiennement, à travers de nombreux projets, nous avons acquis de nombreuses connaissances. Nous aimerions les partager ainsi que des conseils et des bonnes pratiques. Puis obtenir vos retours!&lt;/p&gt;
&lt;p&gt;Cette conférence donnera un aperçu de Dash, de son fonctionnement et de son utilité, avant de présenter certains problèmes pouvant survenir lorsque les data scientists  sont laissés à eux-mêmes pour créer des applications Web, et que les ingénieurs informatiques doivent travailler avec l'écosystème pydata. Nous identifierons aussi certaines des limites de Dash, et discuterons de la façon de prendre la décision d'arrêter d'utiliser Dash pour commencer à créer une application Web complète.&lt;/p&gt;
</content><category term="PyCon FR 2019"></category></entry><entry><title>PyCon Ireland 2019 - Dash: Interactive Data Visualization Web Apps with no Javascript - Dom Weldon</title><link href="https://pyvideo.org/pycon-ireland-2019/pycon-ireland-2019-dash-interactive-data-visualization-web-apps-with-no-javascript-dom-weldon.html" rel="alternate"></link><published>2019-10-12T00:00:00+00:00</published><updated>2019-10-12T00:00:00+00:00</updated><author><name>Dom Weldon</name></author><id>tag:pyvideo.org,2019-10-12:/pycon-ireland-2019/pycon-ireland-2019-dash-interactive-data-visualization-web-apps-with-no-javascript-dom-weldon.html</id><content type="html"></content><category term="PyCon Ireland 2019"></category></entry><entry><title>Dash Interactive Data Visualization Web Apps with no Javascript</title><link href="https://pyvideo.org/pycon-uk-2019/dash-interactive-data-visualization-web-apps-with-no-javascript.html" rel="alternate"></link><published>2019-09-15T00:00:00+00:00</published><updated>2019-09-15T00:00:00+00:00</updated><author><name>Dom Weldon</name></author><id>tag:pyvideo.org,2019-09-15:/pycon-uk-2019/dash-interactive-data-visualization-web-apps-with-no-javascript.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From the team that makes Plotly, Dash is a library for producing interactive web apps with Python. This talk introduces Dash and will discuss how it may fit into your team!&lt;/p&gt;
</content><category term="PyCon UK 2019"></category></entry><entry><title>It's Your Call(able): a tour of Python's callable (function) interface</title><link href="https://pyvideo.org/pycon-uk-2022/its-your-callable-a-tour-of-pythons-callable-function-interface.html" rel="alternate"></link><published>2022-09-16T00:00:00+00:00</published><updated>2022-09-16T00:00:00+00:00</updated><author><name>Dom Weldon</name></author><id>tag:pyvideo.org,2022-09-16:/pycon-uk-2022/its-your-callable-a-tour-of-pythons-callable-function-interface.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A deep dive into python functions and the callable interface. We take a tour into everything that happens on on a “def” line and when you call the resulting function. We'll also explore how to harness detailed function metadata, and how to hack the decorator pattern.&lt;/p&gt;
&lt;p&gt;Functions are fundamental …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A deep dive into python functions and the callable interface. We take a tour into everything that happens on on a “def” line and when you call the resulting function. We'll also explore how to harness detailed function metadata, and how to hack the decorator pattern.&lt;/p&gt;
&lt;p&gt;Functions are fundamental to python, and are amongst the first features of python that most users learn. We define a function with parameters, and call it arguments to create a callable object, which then returns a value.&lt;/p&gt;
&lt;p&gt;However, there is more to this callable interface than meets the eye, and there are lots of useful and powerful things we can do with callables in python. You may have come across some of these already: (anonymous) lambda functions, the __call__ magic method, the decorator pattern, the __doc__ property, and modules like functools and inspect which provide detailed about functions and allow us to alter functions at runtime. The now-retired Python 3.6 release added typing __annotations__ to this mix, and opened up a new world of metadata to use alongside your callables.&lt;/p&gt;
&lt;p&gt;Lots of libraries, particularly web frameworks like Flask, Django, and FastAPI, and testing toolkits like pytest, use this callable interface to implement their API. As developers, understanding these advanced features of python’s callable interface is particularly useful when writing generic, automation focused code, and understanding how such prominent libraries work.&lt;/p&gt;
&lt;p&gt;This talk gives a deep-dive into python functions, and the associated callable interface. We’ll start with a quick tour of the basics, before covering python’s more advanced callable features, and exploring some examples about how, why, and when you may wish to use these features yourself.&lt;/p&gt;
</content><category term="PyCon UK 2022"></category></entry><entry><title>Secure, Modern, and Simple Dependency Management with PDM and Friends</title><link href="https://pyvideo.org/pycon-uk-2023/secure-modern-and-simple-dependency-management-with-pdm-and-friends.html" rel="alternate"></link><published>2023-09-24T00:00:00+00:00</published><updated>2023-09-24T00:00:00+00:00</updated><author><name>Dom Weldon</name></author><id>tag:pyvideo.org,2023-09-24:/pycon-uk-2023/secure-modern-and-simple-dependency-management-with-pdm-and-friends.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What actually happens when you import a package? Let's find out, then explore recent packaging developments, including the new tool PDM, comparing it to pip and poetry. We'll also cover some (opinionated) best practices for handling metadata, and building secure, modern applications using third party libraries in python.&lt;/p&gt;
&lt;p&gt;Python …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What actually happens when you import a package? Let's find out, then explore recent packaging developments, including the new tool PDM, comparing it to pip and poetry. We'll also cover some (opinionated) best practices for handling metadata, and building secure, modern applications using third party libraries in python.&lt;/p&gt;
&lt;p&gt;Python has a rich ecosystem of open source packages available to assist with almost any conceivable requirement. Installing, using, and updating these packages should be quick, easy, and secure, however, dependency management and python packaging has historically been a source of frustration for developers, particularly with the added complications of virtual environments, and subtle differences between python versions. Furthermore, software supply chain security has attracted particular importance of late as increasing numbers of major vulnerabilities have been discovered requiring fast, sometimes immediate, mitigation.&lt;/p&gt;
&lt;p&gt;In recent years, efforts have been made to improve packaging and dependency management in python, and we have seen the release of a number of developer tools, including poetry, pipenv, and pipx. These work alongside pip and earlier tools such as disutils, setuptools, and easy_install, and offer higher level interfaces for developers to work with. In 2020, a new tool was released called PDM (Python Dependency Manager), and is gaining traction amongst developers in recent months.&lt;/p&gt;
&lt;p&gt;This talk will start by giving an overview of how python imports work, before moving on to cover a brief history of package management in python, and an overview of the current state of play, and the vulnerabilities that we are exposed to by supply chain attacks. We'll then give a brief introduction to PDM, before discussing what practical steps we can take to both improve our developer experiences, and ensure the code we write is modern, secure, and maintainable.&lt;/p&gt;
&lt;p&gt;We'll ask questions including some of the below.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What actually happens 'under the hood' when we use the import statement?&lt;/li&gt;
&lt;li&gt;How many different ways can we import a package in python?&lt;/li&gt;
&lt;li&gt;What does a dependency manager do, and how does it work?&lt;/li&gt;
&lt;li&gt;What does a supply chain attack look like, and how do we try and stop them happening?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, the speaker will offer an opinionated guide to some of the best python tooling and package management setups available to python developers in 2023.&lt;/p&gt;
</content><category term="PyCon UK 2023"></category></entry><entry><title>Dash: Interactive Data Visualization Web Apps with no Javascript</title><link href="https://pyvideo.org/pydata-berlin-2019/dash-interactive-data-visualization-web-apps-with-no-javascript.html" rel="alternate"></link><published>2019-10-10T00:00:00+00:00</published><updated>2019-10-10T00:00:00+00:00</updated><author><name>Dom Weldon</name></author><id>tag:pyvideo.org,2019-10-10:/pydata-berlin-2019/dash-interactive-data-visualization-web-apps-with-no-javascript.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dom Weldon&lt;/p&gt;
&lt;p&gt;Track:PyData
Interactive web pages and visualizations with no JavaScript? What could go wrong? What you can, can't, should and probably shouldn't do with plotly/Dash.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/R7PELL"&gt;https://de.pycon …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dom Weldon&lt;/p&gt;
&lt;p&gt;Track:PyData
Interactive web pages and visualizations with no JavaScript? What could go wrong? What you can, can't, should and probably shouldn't do with plotly/Dash.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/R7PELL"&gt;https://de.pycon.org/program/R7PELL&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</content><category term="PyData Berlin 2019"></category></entry></feed>