<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Mihir Kavatkar</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_mihir-kavatkar.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2025-05-16T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Building Resilient Data Pipelines: The Power of Idempotency</title><link href="https://pyvideo.org/pycon-us-2025/building-resilient-data-pipelines-the-power-of-idempotency.html" rel="alternate"></link><published>2025-05-16T00:00:00+00:00</published><updated>2025-05-16T00:00:00+00:00</updated><author><name>Mihir Kavatkar</name></author><id>tag:pyvideo.org,2025-05-16:/pycon-us-2025/building-resilient-data-pipelines-the-power-of-idempotency.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data pipelines are vital for moving data from source to destination. They help with use cases like integrating multimodal data, building a data warehouse, improving data quality, and more.&lt;/p&gt;
&lt;p&gt;Over many years, developers have put forth many design patterns or best practices for building data pipelines in Python using …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data pipelines are vital for moving data from source to destination. They help with use cases like integrating multimodal data, building a data warehouse, improving data quality, and more.&lt;/p&gt;
&lt;p&gt;Over many years, developers have put forth many design patterns or best practices for building data pipelines in Python using Pandas, Numpy, and more. However, one crucial criterion for creating a data pipeline is idempotency.&lt;/p&gt;
&lt;p&gt;This talk will open with a brief overview of data pipelines and the importance of idempotency in distributed systems. We’ll look to answer the question: What does it take to build an idempotent data pipeline in Python with an example?&lt;/p&gt;
&lt;p&gt;Our exploration will begin with the pitfalls of non-idempotent pipelines, then proceed to a methodology for building idempotent data pipelines and the design decisions that accompany them. Along the way, we’ll explore testing strategies using pytest.&lt;/p&gt;
&lt;p&gt;This talk is aimed at those interested in building idempotent data pipelines.&lt;/p&gt;
</content><category term="PyCon US 2025"></category></entry></feed>