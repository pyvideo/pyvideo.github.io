<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Thu, 04 Jul 2013 00:00:00 +0000</lastBuildDate><item><title>Designing a Real Time Control System based on Django, ZMQ and WebSockets (wrong cover)</title><link>https://pyvideo.org/europython-2013/designing-a-real-time-control-system-based-on-django-zmq-and-websockets-wrong-cover.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nahuel Defossé</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-04:europython-2013/designing-a-real-time-control-system-based-on-django-zmq-and-websockets-wrong-cover.html</guid><category>web</category><category>async</category><category>twisted</category><category>embedding</category><category>django</category></item><item><title>Uno sguardo agli internal di RestFS</title><link>https://pyvideo.org/europython-2013/uno-sguardo-agli-internal-di-restfs.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fabrizio Manfredi</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:europython-2013/uno-sguardo-agli-internal-di-restfs.html</guid><category>clustering</category><category>HTTP</category><category>parallelization</category><category>distributed</category><category>twisted</category><category>REST</category><category>optimization</category><category>Algorithms</category><category>scalability</category><category>async</category><category>hpc</category><category>performance</category></item><item><title>Programming with Twisted</title><link>https://pyvideo.org/chipy/programming-with-twisted.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;What twisted is and its purpose in life (ie the reactor pattern).&lt;/li&gt;
&lt;li&gt;Non-blocking network programming.&lt;/li&gt;
&lt;li&gt;The confusing topic of deferreds and callbacks everywhere.&lt;/li&gt;
&lt;li&gt;Methods for dealing with blocking APIs.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Griffen</dc:creator><pubDate>Thu, 08 Jul 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-07-08:chipy/programming-with-twisted.html</guid><category>chipy</category><category>twisted</category></item><item><title>Python at Cloudkick</title><link>https://pyvideo.org/europython-2011/python-at-cloudkick.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Tomaž Muraus - 22 June 2011 in &amp;quot;Track Spaghetti&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cloudkick is a server management and monitoring software as a service
used by thousands of different companies all across the globe.&lt;/p&gt;
&lt;p&gt;The service is built in and powered by many different programming
languages and technologies, but the web application and majority of the
backend services are written in Python.&lt;/p&gt;
&lt;p&gt;In this talk I will present how and where we use Python (Django,
Twisted, txamqp, Piston, …), different problems we have encountered
while building our service and how we worked around them, good practices
and real-world advices on building effective Twisted services and much
more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tomaž Muraus</dc:creator><pubDate>Thu, 21 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-21:europython-2011/python-at-cloudkick.html</guid><category>monitoring</category><category>twisted</category><category>web</category></item><item><title>Michael Hudson - How we use Twisted in Launchpad</title><link>https://pyvideo.org/kiwi-pycon-2009/michael-hudson---how-we-use-twisted-in-launchpad.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How we use Twisted in Launchpad&lt;/p&gt;
&lt;p&gt;Presented by Michael Hudson-Doyle&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Launchpad is a large, open source, &amp;quot;real world&amp;quot; Python project with many
moving parts. This talk will explain how Twisted helps us keep track of
them.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Although we don't use it for the core web application, most other places
in Launchpad that have to deal with concurrency issues do it using
Twisted. This talk will survey these areas and talk about issues we've
found and design patterns we've found helpful.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Hudson-Doyle</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/michael-hudson---how-we-use-twisted-in-launchpad.html</guid><category>casestudy</category><category>kiwipycon</category><category>kiwipycon2009</category><category>launchpad</category><category>twisted</category></item><item><title>Networking Libraries in Python</title><link>https://pyvideo.org/pycon-au-2011/networking-libraries-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will explore the core networking libraries available in
Python.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;ol class="arabic simple"&gt;
&lt;li&gt;Python Standard Library. http and urllib package (Python3 and
Python2).&lt;/li&gt;
&lt;li&gt;Capabilities of other 3rd party networking libraries - pycurl and
httplib2. When to use them and why they exist.&lt;/li&gt;
&lt;li&gt;Asychronous Network IO using Twisted Matrix Framework.&lt;/li&gt;
&lt;li&gt;Tornado framework capablities - Generic overview.&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Senthil Kumuran</dc:creator><pubDate>Mon, 22 Aug 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-08-22:pycon-au-2011/networking-libraries-in-python.html</guid><category>framework</category><category>network</category><category>networking</category><category>pycurl</category><category>tornado</category><category>twisted</category><category>urllib</category></item><item><title>Neatly Twisted</title><link>https://pyvideo.org/pycon-au-2012/neatly-twisted.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In many Python circles, Twisted is the recommended framework for all
networking and multitasking applications. Twisted provides a powerful,
extensible event-driven framework with built-in support for many network
protocols.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In many Python circles, Twisted is the recommended framework for all
networking and multitasking applications. Twisted provides a powerful,
extensible event-driven framework with built-in support for many network
protocols. But without due care, Twisted’s event-driven features can
result in code that’s a nightmare to read and maintain. In this
presentation, I will review the basics of Twisted, and show some of the
features which make Twisted such a popular framework. I’ll share my
experiences debugging and maintaining mission-critical Twisted
applications, discuss some of the pitfalls to avoid when coding with
Twisted, and present tips and tricks for debugging Twisted code and
writing Twisted code that’s a pleasure to read and maintain.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Bartlett</dc:creator><pubDate>Wed, 22 Aug 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-08-22:pycon-au-2012/neatly-twisted.html</guid><category>twisted</category></item><item><title>PyCon 2009: Building Real-time Network applications for the web with Twisted and Orbited (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--building-real-time-network-applicati0.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Haven't you always wanted to create a massively multiplayer, real-time
game for the browser? Or perhaps add chat to your website, or maybe
write a real- time financial application, collaborative text editor, or
network health monitoring app, all in the browser. Forget web
frameworks; Orbited.TCPSocket lets you communicate directly from a
browser to any network server, with any protocol you want. By tutorial's
end, every attendee will have built their own real-time data monitoring
application, or multiplayer game, from scratch using Orbited, Twisted,
and js.io.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--building-real-time-network-applicati0.html</guid><category>network</category><category>orbited</category><category>pycon</category><category>pycon2009</category><category>realtime</category><category>twisted</category></item><item><title>PyCon 2009: Building Real-time Network applications for the web with Twisted and Orbited (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--building-real-time-network-applicati1.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Haven't you always wanted to create a massively multiplayer, real-time
game for the browser? Or perhaps add chat to your website, or maybe
write a real- time financial application, collaborative text editor, or
network health monitoring app, all in the browser. Forget web
frameworks; Orbited.TCPSocket lets you communicate directly from a
browser to any network server, with any protocol you want. By tutorial's
end, every attendee will have built their own real-time data monitoring
application, or multiplayer game, from scratch using Orbited, Twisted,
and js.io.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--building-real-time-network-applicati1.html</guid><category>network</category><category>orbited</category><category>pycon</category><category>pycon2009</category><category>realtime</category><category>twisted</category></item><item><title>PyCon 2009: Building Real-time Network applications for the web with Twisted and Orbited (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--building-real-time-network-applicatio.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Haven't you always wanted to create a massively multiplayer, real-time
game for the browser? Or perhaps add chat to your website, or maybe
write a real- time financial application, collaborative text editor, or
network health monitoring app, all in the browser. Forget web
frameworks; Orbited.TCPSocket lets you communicate directly from a
browser to any network server, with any protocol you want. By tutorial's
end, every attendee will have built their own real-time data monitoring
application, or multiplayer game, from scratch using Orbited, Twisted,
and js.io.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--building-real-time-network-applicatio.html</guid><category>network</category><category>orbited</category><category>pycon</category><category>pycon2009</category><category>realtime</category><category>twisted</category></item><item><title>PyCon 2009: Using Twisted Deferreds (Part 1 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--using-twisted-deferreds--part-1-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While the documentation about deferreds is good, it is still not enough
for many. In this interactive tutorial, I will cover both the basics of
deferreds and many non-trivial use-cases, with discussion of various
approaches. Common mistakes, gotchas and other issues will be explained,
as well as good idioms and techniques to use deferreds without pain.
Deferreds bring asynchronous APIs the clarity and programming power that
is sometimes lost when using event-based programming. They are an idea
taken from many other programming languages, and made into a Pythonic
solution If you are using Twisted, or would like to use Twisted, this
tutorial can help you with one of the most subtle issues inherent in its
APIs - Deferreds.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--using-twisted-deferreds--part-1-of-3.html</guid><category>asynchronous</category><category>deferreds</category><category>pycon</category><category>pycon2009</category><category>tutorial</category><category>twisted</category></item><item><title>PyCon 2009: Using Twisted Deferreds (Part 2 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--using-twisted-deferreds--part-2-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;` &amp;lt;&lt;a class="reference external" href="http://blip.tv/file/1997952"&gt;http://blip.tv/file/1997952&lt;/a&gt;&amp;gt;`__&lt;/p&gt;
&lt;p&gt;While the documentation about deferreds is good, it is still not enough
for many. In this interactive tutorial, I will cover both the basics of
deferreds and many non-trivial use-cases, with discussion of various
approaches. Common mistakes, gotchas and other issues will be explained,
as well as good idioms and techniques to use deferreds without pain.
Deferreds bring asynchronous APIs the clarity and programming power that
is sometimes lost when using event-based programming. They are an idea
taken from many other programming languages, and made into a Pythonic
solution If you are using Twisted, or would like to use Twisted, this
tutorial can help you with one of the most subtle issues inherent in its
APIs - Deferreds.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--using-twisted-deferreds--part-2-of-3.html</guid><category>asynchronous</category><category>deferreds</category><category>pycon</category><category>pycon2009</category><category>tutorial</category><category>twisted</category></item><item><title>PyCon 2009: Using Twisted Deferreds (Part 3 of 3)</title><link>https://pyvideo.org/pycon-us-2009/pycon-2009--using-twisted-deferreds--part-3-of-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While the documentation about deferreds is good, it is still not enough
for many. In this interactive tutorial, I will cover both the basics of
deferreds and many non-trivial use-cases, with discussion of various
approaches. Common mistakes, gotchas and other issues will be explained,
as well as good idioms and techniques to use deferreds without pain.
Deferreds bring asynchronous APIs the clarity and programming power that
is sometimes lost when using event-based programming. They are an idea
taken from many other programming languages, and made into a Pythonic
solution If you are using Twisted, or would like to use Twisted, this
tutorial can help you with one of the most subtle issues inherent in its
APIs - Deferreds.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-02-17:pycon-us-2009/pycon-2009--using-twisted-deferreds--part-3-of-3.html</guid><category>asynchronous</category><category>deferreds</category><category>pycon</category><category>pycon2009</category><category>tutorial</category><category>twisted</category></item><item><title>Cooperative Multitasking with Twisted: Getting Things Done Concurrently. (#11)</title><link>https://pyvideo.org/pycon-us-2010/pycon-2010--cooperative-multitasking-with-twisted.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cooperative Multitasking with Twisted: Getting Things Done Concurrently&lt;/p&gt;
&lt;p&gt;Presented by David A Reid&lt;/p&gt;
&lt;p&gt;Twisted is a framework for building asynchronous networking
applications. It also provides powerful tools for writing non-blocking
non-network code, tools which are vital for building real large scale
applications in Twisted. I hope to give a comprehensive overview of
these tools to help the intermediate Twisted user get things done
concurrently.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Picture out of focus at the beginning]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David A Reid</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--cooperative-multitasking-with-twisted.html</guid><category>pycon</category><category>pycon2010</category><category>twisted</category></item><item><title>Introduction to Twisted</title><link>https://pyvideo.org/pycon-us-2010/pycon-2010--introduction-to-twisted.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction to Twisted&lt;/p&gt;
&lt;p&gt;Presented by Chander Ganesan&lt;/p&gt;
&lt;p&gt;Interested in faster networking with Python? Twisted is an event-driven
networking engine written in Python that allows developers to quickly
and easily develop and deploy network services.&lt;/p&gt;
&lt;p&gt;In this tutorial, attendees will learn what twisted is, why to use it,
how it works, and how to install, develop, and deploy simple clients and
servers using Twisted.&lt;/p&gt;
&lt;p&gt;Attendees should bring a laptop if possible, to try out code examples in
class.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;p&gt;Intermediate Python Programmers with an understanding of Pythons object
oriented syntax (classes, inheritance, etc.)&lt;/p&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to Twisted (15 min) - Basic Concepts&lt;ul&gt;
&lt;li&gt;Event-Driven model, cooperative multi-tasking&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Installing Twisted &amp;amp; Verifying Installation (10 min)&lt;/li&gt;
&lt;li&gt;Starting the Event loop (10 min)&lt;/li&gt;
&lt;li&gt;Timed Events (10 min)&lt;/li&gt;
&lt;li&gt;Understanding Twisted Factories &amp;amp; their use (15 min)&lt;/li&gt;
&lt;li&gt;Understanding Protocol Objects &amp;amp; their use (15 min)&lt;/li&gt;
&lt;li&gt;Creating a simple Twisted Client (25 min)&lt;ul&gt;
&lt;li&gt;Using twisted.internet.reactor.connectTCP()&lt;/li&gt;
&lt;li&gt;Creating a Client Factory&lt;/li&gt;
&lt;li&gt;Creating a Protocol&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Creating a simple Twisted Server (Server Factory) (25 min)&lt;ul&gt;
&lt;li&gt;Using twisted.internet.reactor.listenTCP()&lt;/li&gt;
&lt;li&gt;Creating a Server Factory&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Using Twisted SMTP to Send Mail (15 min)&lt;/li&gt;
&lt;li&gt;Twisted Web Basics (25 min)&lt;/li&gt;
&lt;li&gt;Introduction to the twist Daemonizer &amp;amp; tac files (15 min)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An understanding of Object Oriented Python (OOP concepts,
inheritance, classes, etc.)&lt;/li&gt;
&lt;li&gt;Attendees wishing to try the examples should have Python 2.4 or newer
and Twisted pre-installed.&lt;/li&gt;
&lt;li&gt;Attendees wishing to try the examples should have Python 2.4 or newer
and Twisted pre-downloaded (we'll go over installation)&lt;/li&gt;
&lt;li&gt;Twisted may be downloaded at
&lt;a class="reference external" href="http://www.twistedmatrix.com"&gt;http://www.twistedmatrix.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows users will require the Win32 extensions for Python as well
&lt;a class="reference external" href="http://starship.python.net/crew/mhammond/win32/Downloads.html"&gt;http://starship.python.net/crew/mhammond/win32/Downloads.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chander Ganesan</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--introduction-to-twisted.html</guid><category>pcyon2010</category><category>pycon</category><category>tutorial</category><category>twisted</category></item><item><title>Ten Years of Twisted</title><link>https://pyvideo.org/pycon-us-2011/pycon-2011--ten-years-of-twisted.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ten Years of Twisted&lt;/p&gt;
&lt;p&gt;Glyph Lefkowitz&lt;/p&gt;
&lt;p&gt;The Twisted event-driven networking engine is well-known in the Python
community. However, only a few of its features are widely understood.
This talk will be a brief conceptual introduction to Twisted, followed
by a survey of its features, their status, and how development has been
proceeding over the years, with a special focus on the last two years of
sponsored development.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;This talk will begin with a brief introduction to Twisted architectural
concepts; a description of the event loop, connections, and timers. It
will then segue into the many different features that Twisted offers,
including command-line tools for running an out-of-the-box
zero-configuration HTTP server, DNS server, IRC server, and SMTP server.
This will also present the relative maturity and stability of each of
these areas of the code, with a special emphasis on what level of
expertise a developer should have before attempting to use them.
Finally, I will describe some of the features that have been added to
Twisted along the way, including some new and exciting developments that
have been happening recently.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Glyph</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--ten-years-of-twisted.html</guid><category>pycon</category><category>pycon2011</category><category>twisted</category></item></channel></rss>