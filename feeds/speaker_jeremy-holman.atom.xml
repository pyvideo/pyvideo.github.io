<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jeremy-holman.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2013-11-21T00:00:00+00:00</updated><entry><title>The Big-O (November 2013)</title><link href="https://pyvideo.org/bay-piggies/the-big-o-november-2013.html" rel="alternate"></link><published>2013-11-21T00:00:00+00:00</published><updated>2013-11-21T00:00:00+00:00</updated><author><name>Jeremy Holman</name></author><id>tag:pyvideo.org,2013-11-21:bay-piggies/the-big-o-november-2013.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Jeremy Holman
Topic: Talk about the Big-O
Date: Nov-21-2013
Location: LinkedIn, Mtn. View
Abstract:
What is Big Oh notation, what problem does it attempt to solve, and how does it work?
There are many kinds of performance problems.  Some are very implementation-specific, like slow runtimes, needlessly synchronous operations, or sub-optimal register allocation.  There are also differences between algorithms which are (largely) independent of implementation details.  When we wish to focus on implementation-independent performance differences of two algorithms, we use a family of notations including &amp;quot;Big Oh&amp;quot; to describe the &amp;quot;asymptotic&amp;quot; behaviour of the function -- that is, the behaviour &amp;quot;in the limit&amp;quot;.
This talk will review the conceptual motivation for asymptotic analysis, walk through the definition of Big Oh notation, and look at applying it to some simple algorithms as implemented in Python.  Hopefully the difficulty level will be suitable for an undergraduate course on algorithm design.
Bio:
Jeremy Holman thinks that algorithm puzzles make a fun pastime, but are overrated as an interview technique.  He finds it easier to think about tricky problems without the distractions of undue ceremony, which is one of the reasons he prefers Python.
This is a Bay Area Python Interest Group (BayPIGgies) organized event. Please also see their web page: &lt;a class="reference external" href="http://baypiggies.net/"&gt;http://baypiggies.net/&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>