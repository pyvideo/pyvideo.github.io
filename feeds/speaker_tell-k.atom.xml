<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_tell-k.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-09-22T00:00:00+00:00</updated><entry><title>メタプログラミングPython</title><link href="https://pyvideo.org/pycon-japan-2016/metapuroguramingupython.html" rel="alternate"></link><published>2016-09-22T00:00:00+00:00</published><updated>2016-09-22T00:00:00+00:00</updated><author><name>tell-k</name></author><id>tag:pyvideo.org,2016-09-22:pycon-japan-2016/metapuroguramingupython.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pythonで出来るメタプログラミングの概要を一通り説明します。普段はあまり意識しないフレームワークやライブラリの中で駆使されているメタプログラミングの世界をは覗いてみませんか？ 本セッションではそもそもPythonにおけるメタプログラミングの概要から、それがどのような場面で利用されているかをお話しします。&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;普段Pythonを書いているけど、いざ上級者の書いたコードや、著名なライブラリの コードを覗いた時に、なにやってるか分からないと思ったことはありませんか？&lt;/p&gt;
&lt;p&gt;本セッションでは、Pythonにおけるメタプログラミングに類する機能の 概要を説明します、以下のようなトピックを扱います&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Decorator&lt;/li&gt;
&lt;li&gt;Descriptor&lt;/li&gt;
&lt;li&gt;MetaClass&lt;/li&gt;
&lt;li&gt;SpecialMethod&lt;/li&gt;
&lt;li&gt;その他&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例えばMetaClassの仕組みを理解すれば、クラス定義の仕組みそのものを カスタマイズすることが可能になります。&lt;/p&gt;
&lt;p&gt;これらの機能がどのような用途で使われているか、代表的なフレームワークや ライブラリの例を説明していき、メタプログラミングがどのように活用されているか を知っていただくことができます。&lt;/p&gt;
</summary></entry></feed>