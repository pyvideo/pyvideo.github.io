<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_neil-muller.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-10-11T00:00:00+00:00</updated><entry><title>A Brief Introduction to PyGame Zero</title><link href="https://pyvideo.org/pycon-za-2018/a-brief-introduction-to-pygame-zero.html" rel="alternate"></link><published>2018-10-11T00:00:00+00:00</published><updated>2018-10-11T00:00:00+00:00</updated><author><name>Neil Muller</name></author><id>tag:pyvideo.org,2018-10-11:pycon-za-2018/a-brief-introduction-to-pygame-zero.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyGame Zero is designed to be a boilerplate free wrapper around PyGame,
avoiding the need to manage the PyGame event loop and simplifying the
API significantly.&lt;/p&gt;
&lt;p&gt;PyGame Zero is designed as an educational tool, but it does not
compromise on the ability to create complex games and so it also serves
as a nice general purpose introduction to writing graphical games in
python.&lt;/p&gt;
&lt;p&gt;In this talk, I will give a brief introduction to PyGame Zero,
demonstrating it's core functionality and delve into some of the more
advanced features it provides.&lt;/p&gt;
</summary></entry><entry><title>Friday Lightning Talks</title><link href="https://pyvideo.org/pycon-za-2015/friday-lightning-talks.html" rel="alternate"></link><published>2015-10-02T00:00:00+00:00</published><updated>2015-10-02T00:00:00+00:00</updated><author><name>Adam Jorgensen</name></author><id>tag:pyvideo.org,2015-10-02:pycon-za-2015/friday-lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/MNyOPWT8ncw?t=0h0m0s"&gt;(0:00:00)&lt;/a&gt; &lt;strong&gt;Using Odo to
load data&lt;/strong&gt; by Tobias Brandt&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/MNyOPWT8ncw?t=0h5m23s"&gt;(0:05:23)&lt;/a&gt; &lt;strong&gt;Sh&lt;/strong&gt; by
Adrianna Pińska&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/MNyOPWT8ncw?t=0h8m44s"&gt;(0:08:44)&lt;/a&gt; &lt;strong&gt;Pygame Zero&lt;/strong&gt;
by Neil Muller&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/MNyOPWT8ncw?t=0h11m57s"&gt;(0:11:57)&lt;/a&gt; &lt;strong&gt;How not to
hate Javascript&lt;/strong&gt; by Adam Jorgensen&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://youtu.be/MNyOPWT8ncw?t=0h16m28s"&gt;(0:16:28)&lt;/a&gt; &lt;strong&gt;Testing code
examples from your slides&lt;/strong&gt; by Jeremy Thurgood&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="lightning talks"></category><category term="Room 215"></category></entry><entry><title>Supporting Python 3</title><link href="https://pyvideo.org/pycon-za-2015/supporting-python-3.html" rel="alternate"></link><published>2015-10-02T00:00:00+00:00</published><updated>2015-10-02T00:00:00+00:00</updated><author><name>Neil Muller</name></author><id>tag:pyvideo.org,2015-10-02:pycon-za-2015/supporting-python-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The tools for supporting Python 2 &amp;amp; 3 in a single codebase have improved
significantly from the early Python 3 days of just 2to3. Porting Python
2 code to work with Python 2 &amp;amp; 3 without a constant 2to3 translation
step is not hard anymore, and leads to much easier-to-maintain ports.&lt;/p&gt;
&lt;p&gt;In this talk, I will discuss some of the suggested best practices for
supporting both Python 2 and Python 3. We will cover some of the tools
for detecting potential issues, such as pylint, the available options,
such as six, futurize and modernize, to simplify the process of updating
the code and spend some time discussing what parts of porting still
require care and attention, such as the text / binary data division.&lt;/p&gt;
</summary><category term="Room 211"></category></entry><entry><title>An introduction to interfacing with C using CFFI</title><link href="https://pyvideo.org/pycon-za-2016/an-introduction-to-interfacing-with-c-using-cffi.html" rel="alternate"></link><published>2016-10-06T00:00:00+00:00</published><updated>2016-10-06T00:00:00+00:00</updated><author><name>Neil Muller</name></author><id>tag:pyvideo.org,2016-10-06:pycon-za-2016/an-introduction-to-interfacing-with-c-using-cffi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python &lt;a class="reference external" href="https://cffi.readthedocs.io/en/latest/"&gt;CFFI (C Foreign Function
Interface)&lt;/a&gt; provides a
powerful set of tools for interacting with C from Python.&lt;/p&gt;
&lt;p&gt;In this tutorial, I will cover the basics of using CFFI, including the
various modes it can be used in. I will also cover several of the more
advanced aspects, such as callbacks, and describe the mechanisms for
distributing modules that use Python CFFI.&lt;/p&gt;
</summary></entry><entry><title>Thursday Lightning Talks</title><link href="https://pyvideo.org/pycon-za-2016/thursday-lightning-talks.html" rel="alternate"></link><published>2016-10-06T00:00:00+00:00</published><updated>2016-10-06T00:00:00+00:00</updated><author><name>Neil Muller</name></author><id>tag:pyvideo.org,2016-10-06:pycon-za-2016/thursday-lightning-talks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;A Taste of Haskell for Pythoneers&lt;/strong&gt; by Pi Delport&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Postgresql Foreign Data Wrapper development with Python&lt;/strong&gt; by
Toufeeq Ockards&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use virtualenv&lt;/strong&gt; by Bruce Merry&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Astrophysics at the Centre for High Performance Computing: Python
everywhere&lt;/strong&gt; by Catherine Cress&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Things the video team are doing, while you’re doing your talk&lt;/strong&gt; by
JP&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="lightning talks"></category></entry></feed>